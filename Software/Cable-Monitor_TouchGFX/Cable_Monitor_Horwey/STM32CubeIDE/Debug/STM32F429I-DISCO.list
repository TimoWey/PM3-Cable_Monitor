
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000290a8  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00004130  08029258  08029258  00039258  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000226e  0802d388  0802d388  0003d388  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 000000f0  0802f5f8  0802f5f8  0003f5f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000608  0802f6e8  0802f6e8  0003f6e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00119030  0802fcf0  0802fcf0  0003fcf0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  08148d20  08148d20  00160168  2**0
                  CONTENTS
  8 .ARM          00000008  08148d20  08148d20  00158d20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08148d28  08148d28  00160168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  08148d28  08148d28  00158d28  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  08148d3c  08148d3c  00158d3c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  08148d44  00160000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0001428c  20000168  08148eac  00160168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  200143f4  08148eac  001643f4  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00160168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00170000  2**2
                  ALLOC
 17 .comment      000000c2  00000000  00000000  00160198  2**0
                  CONTENTS, READONLY
 18 .debug_line   00097c72  00000000  00000000  0016025a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  001f7ecc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   0029256b  00000000  00000000  001f7f5f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 000322c0  00000000  00000000  0048a4ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004618  00000000  00000000  004bc790  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0011eb1f  00000000  00000000  004c0da8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00007c14  00000000  00000000  005df8c7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 00031227  00000000  00000000  005e74db  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003ab44  00000000  00000000  00618702  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000ce10  00000000  00000000  00653248  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08029240 	.word	0x08029240

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	08029240 	.word	0x08029240

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b970 	b.w	8000588 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9e08      	ldr	r6, [sp, #32]
 80002c6:	460d      	mov	r5, r1
 80002c8:	4604      	mov	r4, r0
 80002ca:	460f      	mov	r7, r1
 80002cc:	2b00      	cmp	r3, #0
 80002ce:	d14a      	bne.n	8000366 <__udivmoddi4+0xa6>
 80002d0:	428a      	cmp	r2, r1
 80002d2:	4694      	mov	ip, r2
 80002d4:	d965      	bls.n	80003a2 <__udivmoddi4+0xe2>
 80002d6:	fab2 f382 	clz	r3, r2
 80002da:	b143      	cbz	r3, 80002ee <__udivmoddi4+0x2e>
 80002dc:	fa02 fc03 	lsl.w	ip, r2, r3
 80002e0:	f1c3 0220 	rsb	r2, r3, #32
 80002e4:	409f      	lsls	r7, r3
 80002e6:	fa20 f202 	lsr.w	r2, r0, r2
 80002ea:	4317      	orrs	r7, r2
 80002ec:	409c      	lsls	r4, r3
 80002ee:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80002f2:	fa1f f58c 	uxth.w	r5, ip
 80002f6:	fbb7 f1fe 	udiv	r1, r7, lr
 80002fa:	0c22      	lsrs	r2, r4, #16
 80002fc:	fb0e 7711 	mls	r7, lr, r1, r7
 8000300:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000304:	fb01 f005 	mul.w	r0, r1, r5
 8000308:	4290      	cmp	r0, r2
 800030a:	d90a      	bls.n	8000322 <__udivmoddi4+0x62>
 800030c:	eb1c 0202 	adds.w	r2, ip, r2
 8000310:	f101 37ff 	add.w	r7, r1, #4294967295
 8000314:	f080 811c 	bcs.w	8000550 <__udivmoddi4+0x290>
 8000318:	4290      	cmp	r0, r2
 800031a:	f240 8119 	bls.w	8000550 <__udivmoddi4+0x290>
 800031e:	3902      	subs	r1, #2
 8000320:	4462      	add	r2, ip
 8000322:	1a12      	subs	r2, r2, r0
 8000324:	b2a4      	uxth	r4, r4
 8000326:	fbb2 f0fe 	udiv	r0, r2, lr
 800032a:	fb0e 2210 	mls	r2, lr, r0, r2
 800032e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000332:	fb00 f505 	mul.w	r5, r0, r5
 8000336:	42a5      	cmp	r5, r4
 8000338:	d90a      	bls.n	8000350 <__udivmoddi4+0x90>
 800033a:	eb1c 0404 	adds.w	r4, ip, r4
 800033e:	f100 32ff 	add.w	r2, r0, #4294967295
 8000342:	f080 8107 	bcs.w	8000554 <__udivmoddi4+0x294>
 8000346:	42a5      	cmp	r5, r4
 8000348:	f240 8104 	bls.w	8000554 <__udivmoddi4+0x294>
 800034c:	4464      	add	r4, ip
 800034e:	3802      	subs	r0, #2
 8000350:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000354:	1b64      	subs	r4, r4, r5
 8000356:	2100      	movs	r1, #0
 8000358:	b11e      	cbz	r6, 8000362 <__udivmoddi4+0xa2>
 800035a:	40dc      	lsrs	r4, r3
 800035c:	2300      	movs	r3, #0
 800035e:	e9c6 4300 	strd	r4, r3, [r6]
 8000362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000366:	428b      	cmp	r3, r1
 8000368:	d908      	bls.n	800037c <__udivmoddi4+0xbc>
 800036a:	2e00      	cmp	r6, #0
 800036c:	f000 80ed 	beq.w	800054a <__udivmoddi4+0x28a>
 8000370:	2100      	movs	r1, #0
 8000372:	e9c6 0500 	strd	r0, r5, [r6]
 8000376:	4608      	mov	r0, r1
 8000378:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037c:	fab3 f183 	clz	r1, r3
 8000380:	2900      	cmp	r1, #0
 8000382:	d149      	bne.n	8000418 <__udivmoddi4+0x158>
 8000384:	42ab      	cmp	r3, r5
 8000386:	d302      	bcc.n	800038e <__udivmoddi4+0xce>
 8000388:	4282      	cmp	r2, r0
 800038a:	f200 80f8 	bhi.w	800057e <__udivmoddi4+0x2be>
 800038e:	1a84      	subs	r4, r0, r2
 8000390:	eb65 0203 	sbc.w	r2, r5, r3
 8000394:	2001      	movs	r0, #1
 8000396:	4617      	mov	r7, r2
 8000398:	2e00      	cmp	r6, #0
 800039a:	d0e2      	beq.n	8000362 <__udivmoddi4+0xa2>
 800039c:	e9c6 4700 	strd	r4, r7, [r6]
 80003a0:	e7df      	b.n	8000362 <__udivmoddi4+0xa2>
 80003a2:	b902      	cbnz	r2, 80003a6 <__udivmoddi4+0xe6>
 80003a4:	deff      	udf	#255	; 0xff
 80003a6:	fab2 f382 	clz	r3, r2
 80003aa:	2b00      	cmp	r3, #0
 80003ac:	f040 8090 	bne.w	80004d0 <__udivmoddi4+0x210>
 80003b0:	1a8a      	subs	r2, r1, r2
 80003b2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003b6:	fa1f fe8c 	uxth.w	lr, ip
 80003ba:	2101      	movs	r1, #1
 80003bc:	fbb2 f5f7 	udiv	r5, r2, r7
 80003c0:	fb07 2015 	mls	r0, r7, r5, r2
 80003c4:	0c22      	lsrs	r2, r4, #16
 80003c6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80003ca:	fb0e f005 	mul.w	r0, lr, r5
 80003ce:	4290      	cmp	r0, r2
 80003d0:	d908      	bls.n	80003e4 <__udivmoddi4+0x124>
 80003d2:	eb1c 0202 	adds.w	r2, ip, r2
 80003d6:	f105 38ff 	add.w	r8, r5, #4294967295
 80003da:	d202      	bcs.n	80003e2 <__udivmoddi4+0x122>
 80003dc:	4290      	cmp	r0, r2
 80003de:	f200 80cb 	bhi.w	8000578 <__udivmoddi4+0x2b8>
 80003e2:	4645      	mov	r5, r8
 80003e4:	1a12      	subs	r2, r2, r0
 80003e6:	b2a4      	uxth	r4, r4
 80003e8:	fbb2 f0f7 	udiv	r0, r2, r7
 80003ec:	fb07 2210 	mls	r2, r7, r0, r2
 80003f0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f4:	fb0e fe00 	mul.w	lr, lr, r0
 80003f8:	45a6      	cmp	lr, r4
 80003fa:	d908      	bls.n	800040e <__udivmoddi4+0x14e>
 80003fc:	eb1c 0404 	adds.w	r4, ip, r4
 8000400:	f100 32ff 	add.w	r2, r0, #4294967295
 8000404:	d202      	bcs.n	800040c <__udivmoddi4+0x14c>
 8000406:	45a6      	cmp	lr, r4
 8000408:	f200 80bb 	bhi.w	8000582 <__udivmoddi4+0x2c2>
 800040c:	4610      	mov	r0, r2
 800040e:	eba4 040e 	sub.w	r4, r4, lr
 8000412:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000416:	e79f      	b.n	8000358 <__udivmoddi4+0x98>
 8000418:	f1c1 0720 	rsb	r7, r1, #32
 800041c:	408b      	lsls	r3, r1
 800041e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000422:	ea4c 0c03 	orr.w	ip, ip, r3
 8000426:	fa05 f401 	lsl.w	r4, r5, r1
 800042a:	fa20 f307 	lsr.w	r3, r0, r7
 800042e:	40fd      	lsrs	r5, r7
 8000430:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000434:	4323      	orrs	r3, r4
 8000436:	fbb5 f8f9 	udiv	r8, r5, r9
 800043a:	fa1f fe8c 	uxth.w	lr, ip
 800043e:	fb09 5518 	mls	r5, r9, r8, r5
 8000442:	0c1c      	lsrs	r4, r3, #16
 8000444:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000448:	fb08 f50e 	mul.w	r5, r8, lr
 800044c:	42a5      	cmp	r5, r4
 800044e:	fa02 f201 	lsl.w	r2, r2, r1
 8000452:	fa00 f001 	lsl.w	r0, r0, r1
 8000456:	d90b      	bls.n	8000470 <__udivmoddi4+0x1b0>
 8000458:	eb1c 0404 	adds.w	r4, ip, r4
 800045c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000460:	f080 8088 	bcs.w	8000574 <__udivmoddi4+0x2b4>
 8000464:	42a5      	cmp	r5, r4
 8000466:	f240 8085 	bls.w	8000574 <__udivmoddi4+0x2b4>
 800046a:	f1a8 0802 	sub.w	r8, r8, #2
 800046e:	4464      	add	r4, ip
 8000470:	1b64      	subs	r4, r4, r5
 8000472:	b29d      	uxth	r5, r3
 8000474:	fbb4 f3f9 	udiv	r3, r4, r9
 8000478:	fb09 4413 	mls	r4, r9, r3, r4
 800047c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000480:	fb03 fe0e 	mul.w	lr, r3, lr
 8000484:	45a6      	cmp	lr, r4
 8000486:	d908      	bls.n	800049a <__udivmoddi4+0x1da>
 8000488:	eb1c 0404 	adds.w	r4, ip, r4
 800048c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000490:	d26c      	bcs.n	800056c <__udivmoddi4+0x2ac>
 8000492:	45a6      	cmp	lr, r4
 8000494:	d96a      	bls.n	800056c <__udivmoddi4+0x2ac>
 8000496:	3b02      	subs	r3, #2
 8000498:	4464      	add	r4, ip
 800049a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800049e:	fba3 9502 	umull	r9, r5, r3, r2
 80004a2:	eba4 040e 	sub.w	r4, r4, lr
 80004a6:	42ac      	cmp	r4, r5
 80004a8:	46c8      	mov	r8, r9
 80004aa:	46ae      	mov	lr, r5
 80004ac:	d356      	bcc.n	800055c <__udivmoddi4+0x29c>
 80004ae:	d053      	beq.n	8000558 <__udivmoddi4+0x298>
 80004b0:	b156      	cbz	r6, 80004c8 <__udivmoddi4+0x208>
 80004b2:	ebb0 0208 	subs.w	r2, r0, r8
 80004b6:	eb64 040e 	sbc.w	r4, r4, lr
 80004ba:	fa04 f707 	lsl.w	r7, r4, r7
 80004be:	40ca      	lsrs	r2, r1
 80004c0:	40cc      	lsrs	r4, r1
 80004c2:	4317      	orrs	r7, r2
 80004c4:	e9c6 7400 	strd	r7, r4, [r6]
 80004c8:	4618      	mov	r0, r3
 80004ca:	2100      	movs	r1, #0
 80004cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004d0:	f1c3 0120 	rsb	r1, r3, #32
 80004d4:	fa02 fc03 	lsl.w	ip, r2, r3
 80004d8:	fa20 f201 	lsr.w	r2, r0, r1
 80004dc:	fa25 f101 	lsr.w	r1, r5, r1
 80004e0:	409d      	lsls	r5, r3
 80004e2:	432a      	orrs	r2, r5
 80004e4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004e8:	fa1f fe8c 	uxth.w	lr, ip
 80004ec:	fbb1 f0f7 	udiv	r0, r1, r7
 80004f0:	fb07 1510 	mls	r5, r7, r0, r1
 80004f4:	0c11      	lsrs	r1, r2, #16
 80004f6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80004fa:	fb00 f50e 	mul.w	r5, r0, lr
 80004fe:	428d      	cmp	r5, r1
 8000500:	fa04 f403 	lsl.w	r4, r4, r3
 8000504:	d908      	bls.n	8000518 <__udivmoddi4+0x258>
 8000506:	eb1c 0101 	adds.w	r1, ip, r1
 800050a:	f100 38ff 	add.w	r8, r0, #4294967295
 800050e:	d22f      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000510:	428d      	cmp	r5, r1
 8000512:	d92d      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000514:	3802      	subs	r0, #2
 8000516:	4461      	add	r1, ip
 8000518:	1b49      	subs	r1, r1, r5
 800051a:	b292      	uxth	r2, r2
 800051c:	fbb1 f5f7 	udiv	r5, r1, r7
 8000520:	fb07 1115 	mls	r1, r7, r5, r1
 8000524:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000528:	fb05 f10e 	mul.w	r1, r5, lr
 800052c:	4291      	cmp	r1, r2
 800052e:	d908      	bls.n	8000542 <__udivmoddi4+0x282>
 8000530:	eb1c 0202 	adds.w	r2, ip, r2
 8000534:	f105 38ff 	add.w	r8, r5, #4294967295
 8000538:	d216      	bcs.n	8000568 <__udivmoddi4+0x2a8>
 800053a:	4291      	cmp	r1, r2
 800053c:	d914      	bls.n	8000568 <__udivmoddi4+0x2a8>
 800053e:	3d02      	subs	r5, #2
 8000540:	4462      	add	r2, ip
 8000542:	1a52      	subs	r2, r2, r1
 8000544:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000548:	e738      	b.n	80003bc <__udivmoddi4+0xfc>
 800054a:	4631      	mov	r1, r6
 800054c:	4630      	mov	r0, r6
 800054e:	e708      	b.n	8000362 <__udivmoddi4+0xa2>
 8000550:	4639      	mov	r1, r7
 8000552:	e6e6      	b.n	8000322 <__udivmoddi4+0x62>
 8000554:	4610      	mov	r0, r2
 8000556:	e6fb      	b.n	8000350 <__udivmoddi4+0x90>
 8000558:	4548      	cmp	r0, r9
 800055a:	d2a9      	bcs.n	80004b0 <__udivmoddi4+0x1f0>
 800055c:	ebb9 0802 	subs.w	r8, r9, r2
 8000560:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000564:	3b01      	subs	r3, #1
 8000566:	e7a3      	b.n	80004b0 <__udivmoddi4+0x1f0>
 8000568:	4645      	mov	r5, r8
 800056a:	e7ea      	b.n	8000542 <__udivmoddi4+0x282>
 800056c:	462b      	mov	r3, r5
 800056e:	e794      	b.n	800049a <__udivmoddi4+0x1da>
 8000570:	4640      	mov	r0, r8
 8000572:	e7d1      	b.n	8000518 <__udivmoddi4+0x258>
 8000574:	46d0      	mov	r8, sl
 8000576:	e77b      	b.n	8000470 <__udivmoddi4+0x1b0>
 8000578:	3d02      	subs	r5, #2
 800057a:	4462      	add	r2, ip
 800057c:	e732      	b.n	80003e4 <__udivmoddi4+0x124>
 800057e:	4608      	mov	r0, r1
 8000580:	e70a      	b.n	8000398 <__udivmoddi4+0xd8>
 8000582:	4464      	add	r4, ip
 8000584:	3802      	subs	r0, #2
 8000586:	e742      	b.n	800040e <__udivmoddi4+0x14e>

08000588 <__aeabi_idiv0>:
 8000588:	4770      	bx	lr
 800058a:	bf00      	nop

0800058c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800058c:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005c4 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000590:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000592:	e003      	b.n	800059c <LoopCopyDataInit>

08000594 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000594:	4b0c      	ldr	r3, [pc, #48]	; (80005c8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000596:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000598:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800059a:	3104      	adds	r1, #4

0800059c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800059c:	480b      	ldr	r0, [pc, #44]	; (80005cc <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800059e:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a0:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005a2:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005a4:	d3f6      	bcc.n	8000594 <CopyDataInit>
  ldr  r2, =_sbss
 80005a6:	4a0b      	ldr	r2, [pc, #44]	; (80005d4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005a8:	e002      	b.n	80005b0 <LoopFillZerobss>

080005aa <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005aa:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005ac:	f842 3b04 	str.w	r3, [r2], #4

080005b0 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b0:	4b09      	ldr	r3, [pc, #36]	; (80005d8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005b2:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005b4:	d3f9      	bcc.n	80005aa <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005b6:	f008 f9c5 	bl	8008944 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005ba:	f028 f8c5 	bl	8028748 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005be:	f000 ff5f 	bl	8001480 <main>
  bx  lr    
 80005c2:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005c4:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005c8:	08148d44 	.word	0x08148d44
  ldr  r0, =_sdata
 80005cc:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d0:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 80005d4:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 80005d8:	200143f4 	.word	0x200143f4

080005dc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005dc:	e7fe      	b.n	80005dc <ADC_IRQHandler>
	...

080005e0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80005e0:	4770      	bx	lr
 80005e2:	bf00      	nop

080005e4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80005e4:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80005e6:	f000 fd35 	bl	8001054 <touchgfx_components_init>
  touchgfx_init();
}
 80005ea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80005ee:	f000 bcbd 	b.w	8000f6c <touchgfx_init>
 80005f2:	bf00      	nop

080005f4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005f4:	f000 bd30 	b.w	8001058 <touchgfx_taskEntry>

080005f8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005f8:	4770      	bx	lr

080005fa <_ZN20STM32TouchControllerD0Ev>:
 80005fa:	b510      	push	{r4, lr}
 80005fc:	2104      	movs	r1, #4
 80005fe:	4604      	mov	r4, r0
 8000600:	f026 ffad 	bl	802755e <_ZdlPvj>
 8000604:	4620      	mov	r0, r4
 8000606:	bd10      	pop	{r4, pc}

08000608 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000608:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 800060a:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060c:	4c0c      	ldr	r4, [pc, #48]	; (8000640 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 800060e:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000610:	4b0c      	ldr	r3, [pc, #48]	; (8000644 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000612:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000614:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000616:	6863      	ldr	r3, [r4, #4]
 8000618:	4798      	blx	r3
 800061a:	f640 0311 	movw	r3, #2065	; 0x811
 800061e:	4298      	cmp	r0, r3
 8000620:	d10a      	bne.n	8000638 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000622:	4d09      	ldr	r5, [pc, #36]	; (8000648 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000624:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000626:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000628:	2082      	movs	r0, #130	; 0x82
 800062a:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 800062c:	682b      	ldr	r3, [r5, #0]
 800062e:	2082      	movs	r0, #130	; 0x82
 8000630:	68db      	ldr	r3, [r3, #12]
 8000632:	4798      	blx	r3
 8000634:	2000      	movs	r0, #0
    }

    return ret;
}
 8000636:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000638:	2001      	movs	r0, #1
 800063a:	e7fc      	b.n	8000636 <_Z11BSP_TS_Inittt+0x2e>
 800063c:	20000184 	.word	0x20000184
 8000640:	20000050 	.word	0x20000050
 8000644:	20000186 	.word	0x20000186
 8000648:	20000188 	.word	0x20000188

0800064c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800064c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000650:	20f0      	movs	r0, #240	; 0xf0
 8000652:	f7ff bfd9 	b.w	8000608 <_Z11BSP_TS_Inittt>
	...

08000658 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000658:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800065a:	4d33      	ldr	r5, [pc, #204]	; (8000728 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 800065c:	682b      	ldr	r3, [r5, #0]
{
 800065e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000660:	691b      	ldr	r3, [r3, #16]
 8000662:	2082      	movs	r0, #130	; 0x82
 8000664:	4798      	blx	r3
 8000666:	b280      	uxth	r0, r0
 8000668:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800066a:	2800      	cmp	r0, #0
 800066c:	d04a      	beq.n	8000704 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800066e:	682b      	ldr	r3, [r5, #0]
 8000670:	f10d 0206 	add.w	r2, sp, #6
 8000674:	695b      	ldr	r3, [r3, #20]
 8000676:	a901      	add	r1, sp, #4
 8000678:	2082      	movs	r0, #130	; 0x82
 800067a:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 800067c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000680:	f640 6274 	movw	r2, #3700	; 0xe74
 8000684:	4293      	cmp	r3, r2
 8000686:	d93f      	bls.n	8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8000688:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 800068c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000690:	1ad2      	subs	r2, r2, r3
 8000692:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000694:	2a0a      	cmp	r2, #10
 8000696:	d93d      	bls.n	8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8000698:	230b      	movs	r3, #11
 800069a:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800069e:	4b23      	ldr	r3, [pc, #140]	; (800072c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 80006a0:	881b      	ldrh	r3, [r3, #0]
 80006a2:	429a      	cmp	r2, r3
 80006a4:	d901      	bls.n	80006aa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 80006a6:	3b01      	subs	r3, #1
 80006a8:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 80006aa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80006ae:	f640 31b8 	movw	r1, #3000	; 0xbb8
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d830      	bhi.n	8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 80006b6:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006ba:	330e      	adds	r3, #14
 80006bc:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006be:	210f      	movs	r1, #15
 80006c0:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006c4:	491a      	ldr	r1, [pc, #104]	; (8000730 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 80006c6:	8809      	ldrh	r1, [r1, #0]
 80006c8:	428b      	cmp	r3, r1
 80006ca:	d901      	bls.n	80006d0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 80006cc:	3901      	subs	r1, #1
 80006ce:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d0:	4e18      	ldr	r6, [pc, #96]	; (8000734 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d2:	4d19      	ldr	r5, [pc, #100]	; (8000738 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d4:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d6:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d8:	4283      	cmp	r3, r0
 80006da:	b281      	uxth	r1, r0
 80006dc:	bf8c      	ite	hi
 80006de:	1a59      	subhi	r1, r3, r1
 80006e0:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006e2:	b2b8      	uxth	r0, r7
 80006e4:	42ba      	cmp	r2, r7
 80006e6:	bf8c      	ite	hi
 80006e8:	1a10      	subhi	r0, r2, r0
 80006ea:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ec:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006ee:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006f0:	4401      	add	r1, r0
 80006f2:	2905      	cmp	r1, #5
        {
            _x = x;
 80006f4:	bfc8      	it	gt
 80006f6:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006f8:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006fa:	bfc8      	it	gt
 80006fc:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006fe:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8000700:	682b      	ldr	r3, [r5, #0]
 8000702:	80a3      	strh	r3, [r4, #4]
    }
}
 8000704:	b003      	add	sp, #12
 8000706:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8000708:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 800070a:	bf9c      	itt	ls
 800070c:	23b4      	movls	r3, #180	; 0xb4
 800070e:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8000712:	e7bb      	b.n	800068c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8000714:	2200      	movs	r2, #0
 8000716:	e7c8      	b.n	80006aa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8000718:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 800071c:	3308      	adds	r3, #8
 800071e:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8000720:	2b0e      	cmp	r3, #14
 8000722:	d8cc      	bhi.n	80006be <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8000724:	2300      	movs	r3, #0
 8000726:	e7d3      	b.n	80006d0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8000728:	20000188 	.word	0x20000188
 800072c:	20000186 	.word	0x20000186
 8000730:	20000184 	.word	0x20000184
 8000734:	2000018c 	.word	0x2000018c
 8000738:	20000190 	.word	0x20000190

0800073c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800073c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800073e:	4668      	mov	r0, sp
{
 8000740:	460d      	mov	r5, r1
 8000742:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000744:	f7ff ff88 	bl	8000658 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000748:	f8bd 0000 	ldrh.w	r0, [sp]
 800074c:	b148      	cbz	r0, 8000762 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 800074e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000752:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000754:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000758:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 800075a:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 800075c:	223c      	movs	r2, #60	; 0x3c
 800075e:	601a      	str	r2, [r3, #0]
        return true;
 8000760:	2001      	movs	r0, #1
}
 8000762:	b003      	add	sp, #12
 8000764:	bd30      	pop	{r4, r5, pc}
 8000766:	bf00      	nop
 8000768:	20000014 	.word	0x20000014

0800076c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 800076c:	b110      	cbz	r0, 8000774 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 800076e:	2802      	cmp	r0, #2
 8000770:	d009      	beq.n	8000786 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8000772:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000774:	4b07      	ldr	r3, [pc, #28]	; (8000794 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000776:	681a      	ldr	r2, [r3, #0]
 8000778:	fab2 f282 	clz	r2, r2
 800077c:	0952      	lsrs	r2, r2, #5
 800077e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000780:	4805      	ldr	r0, [pc, #20]	; (8000798 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000782:	f008 bc13 	b.w	8008fac <HAL_GPIO_WritePin>
 8000786:	4b03      	ldr	r3, [pc, #12]	; (8000794 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000788:	689a      	ldr	r2, [r3, #8]
 800078a:	fab2 f282 	clz	r2, r2
 800078e:	0952      	lsrs	r2, r2, #5
 8000790:	2110      	movs	r1, #16
 8000792:	e7f5      	b.n	8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8000794:	20000194 	.word	0x20000194
 8000798:	40021000 	.word	0x40021000

0800079c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800079c:	b110      	cbz	r0, 80007a4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800079e:	2802      	cmp	r0, #2
 80007a0:	d009      	beq.n	80007b6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 80007a2:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007a4:	4b07      	ldr	r3, [pc, #28]	; (80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 80007a6:	681a      	ldr	r2, [r3, #0]
 80007a8:	3a00      	subs	r2, #0
 80007aa:	bf18      	it	ne
 80007ac:	2201      	movne	r2, #1
 80007ae:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80007b0:	4805      	ldr	r0, [pc, #20]	; (80007c8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007b2:	f008 bbfb 	b.w	8008fac <HAL_GPIO_WritePin>
 80007b6:	4b03      	ldr	r3, [pc, #12]	; (80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 80007b8:	689a      	ldr	r2, [r3, #8]
 80007ba:	3a00      	subs	r2, #0
 80007bc:	bf18      	it	ne
 80007be:	2201      	movne	r2, #1
 80007c0:	2110      	movs	r1, #16
 80007c2:	e7f5      	b.n	80007b0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 80007c4:	20000194 	.word	0x20000194
 80007c8:	40021000 	.word	0x40021000

080007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007cc:	b110      	cbz	r0, 80007d4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80007ce:	2802      	cmp	r0, #2
 80007d0:	d004      	beq.n	80007dc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80007d2:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007d4:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80007d6:	4802      	ldr	r0, [pc, #8]	; (80007e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 80007d8:	f008 bbec 	b.w	8008fb4 <HAL_GPIO_TogglePin>
 80007dc:	2110      	movs	r1, #16
 80007de:	e7fa      	b.n	80007d6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 80007e0:	40021000 	.word	0x40021000

080007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80007e4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80007e6:	b130      	cbz	r0, 80007f6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80007e8:	2802      	cmp	r0, #2
 80007ea:	d009      	beq.n	8000800 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80007ec:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80007ee:	1e43      	subs	r3, r0, #1
 80007f0:	4258      	negs	r0, r3
 80007f2:	4158      	adcs	r0, r3
 80007f4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007f6:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80007f8:	4802      	ldr	r0, [pc, #8]	; (8000804 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 80007fa:	f008 fbd1 	bl	8008fa0 <HAL_GPIO_ReadPin>
        break;
 80007fe:	e7f6      	b.n	80007ee <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000800:	2110      	movs	r1, #16
 8000802:	e7f9      	b.n	80007f8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8000804:	40021000 	.word	0x40021000

08000808 <_ZN8touchgfx4GPIO4initEv>:
{
 8000808:	b570      	push	{r4, r5, r6, lr}
 800080a:	4d08      	ldr	r5, [pc, #32]	; (800082c <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 800080c:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 800080e:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000810:	b2e0      	uxtb	r0, r4
 8000812:	f7ff ffe7 	bl	80007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000816:	b118      	cbz	r0, 8000820 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000818:	682b      	ldr	r3, [r5, #0]
 800081a:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 800081c:	bf18      	it	ne
 800081e:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000820:	3401      	adds	r4, #1
 8000822:	2c05      	cmp	r4, #5
 8000824:	f105 0504 	add.w	r5, r5, #4
 8000828:	d1f2      	bne.n	8000810 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 800082a:	bd70      	pop	{r4, r5, r6, pc}
 800082c:	20000194 	.word	0x20000194

08000830 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000830:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000832:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8000836:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 800083a:	4770      	bx	lr

0800083c <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 800083c:	2000      	movs	r0, #0
 800083e:	4770      	bx	lr

08000840 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000840:	4b03      	ldr	r3, [pc, #12]	; (8000850 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000842:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000844:	3900      	subs	r1, #0
 8000846:	bf18      	it	ne
 8000848:	2101      	movne	r1, #1
 800084a:	7019      	strb	r1, [r3, #0]
    }
 800084c:	4770      	bx	lr
 800084e:	bf00      	nop
 8000850:	200137bb 	.word	0x200137bb

08000854 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000854:	2000      	movs	r0, #0
 8000856:	4770      	bx	lr

08000858 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000858:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800085a:	b10b      	cbz	r3, 8000860 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800085c:	4608      	mov	r0, r1
 800085e:	4718      	bx	r3
        }
    }
 8000860:	4770      	bx	lr

08000862 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000862:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000866:	4770      	bx	lr

08000868 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000868:	6840      	ldr	r0, [r0, #4]
 800086a:	6803      	ldr	r3, [r0, #0]
 800086c:	699b      	ldr	r3, [r3, #24]
 800086e:	4718      	bx	r3

08000870 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000870:	4770      	bx	lr

08000872 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000872:	4770      	bx	lr

08000874 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000874:	4770      	bx	lr
	...

08000878 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8000878:	b510      	push	{r4, lr}
 800087a:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800087c:	f000 fcd8 	bl	8001230 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8000880:	6823      	ldr	r3, [r4, #0]
 8000882:	4903      	ldr	r1, [pc, #12]	; (8000890 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8000884:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000888:	4620      	mov	r0, r4
}
 800088a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 800088e:	4718      	bx	r3
 8000890:	d0000000 	.word	0xd0000000

08000894 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000894:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000896:	6803      	ldr	r3, [r0, #0]
{
 8000898:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 800089a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800089e:	4798      	blx	r3
    enableInterrupts();
 80008a0:	6823      	ldr	r3, [r4, #0]
 80008a2:	4620      	mov	r0, r4
 80008a4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80008a6:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80008a8:	f000 f8ec 	bl	8000a84 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80008ac:	6823      	ldr	r3, [r4, #0]
 80008ae:	4620      	mov	r0, r4
 80008b0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80008b2:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80008b4:	2029      	movs	r0, #41	; 0x29
 80008b6:	f001 f8e5 	bl	8001a84 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80008ba:	f000 f8e3 	bl	8000a84 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80008be:	6823      	ldr	r3, [r4, #0]
 80008c0:	4620      	mov	r0, r4
 80008c2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80008c4:	4798      	blx	r3
    for (;;)
 80008c6:	e7f8      	b.n	80008ba <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080008c8 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80008c8:	b510      	push	{r4, lr}
 80008ca:	4604      	mov	r4, r0
        swapFrameBuffers();
 80008cc:	f00f fe7a 	bl	80105c4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80008d0:	6823      	ldr	r3, [r4, #0]
 80008d2:	4620      	mov	r0, r4
 80008d4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80008d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80008dc:	4718      	bx	r3

080008de <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80008de:	f000 bc99 	b.w	8001214 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080008e2 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80008e2:	f000 bc9d 	b.w	8001220 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080008e6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80008e6:	f000 bcc1 	b.w	800126c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080008ea <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80008ea:	f000 bc6f 	b.w	80011cc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080008ee <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80008ee:	f000 bcc9 	b.w	8001284 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080008f2 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80008f2:	f000 bcd1 	b.w	8001298 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080008f6 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80008f6:	f000 bc73 	b.w	80011e0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080008fa <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80008fa:	f00f b8cf 	b.w	800fa9c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080008fe <_ZN11TouchGFXHALD0Ev>:
 80008fe:	b510      	push	{r4, lr}
 8000900:	217c      	movs	r1, #124	; 0x7c
 8000902:	4604      	mov	r4, r0
 8000904:	f026 fe2b 	bl	802755e <_ZdlPvj>
 8000908:	4620      	mov	r0, r4
 800090a:	bd10      	pop	{r4, pc}

0800090c <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800090c:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8000910:	b11b      	cbz	r3, 800091a <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000912:	6840      	ldr	r0, [r0, #4]
 8000914:	6803      	ldr	r3, [r0, #0]
 8000916:	681b      	ldr	r3, [r3, #0]
 8000918:	4718      	bx	r3
    }
 800091a:	4618      	mov	r0, r3
 800091c:	4770      	bx	lr
	...

08000920 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000920:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000922:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000926:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 800092a:	4b0c      	ldr	r3, [pc, #48]	; (800095c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 800092c:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800092e:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000930:	d009      	beq.n	8000946 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000932:	b93a      	cbnz	r2, 8000944 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000934:	4a0a      	ldr	r2, [pc, #40]	; (8000960 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000936:	490b      	ldr	r1, [pc, #44]	; (8000964 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000938:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 800093a:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 800093c:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800093e:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000940:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000942:	701a      	strb	r2, [r3, #0]
    }
 8000944:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000946:	2a00      	cmp	r2, #0
 8000948:	d0fc      	beq.n	8000944 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800094a:	4a05      	ldr	r2, [pc, #20]	; (8000960 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 800094c:	4905      	ldr	r1, [pc, #20]	; (8000964 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800094e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000950:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000952:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000954:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000956:	2200      	movs	r2, #0
 8000958:	e7f3      	b.n	8000942 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800095a:	bf00      	nop
 800095c:	200137b4 	.word	0x200137b4
 8000960:	200137b0 	.word	0x200137b0
 8000964:	200137b2 	.word	0x200137b2

08000968 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000968:	b570      	push	{r4, r5, r6, lr}
 800096a:	460d      	mov	r5, r1
 800096c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800096e:	b935      	cbnz	r5, 800097e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000970:	4b09      	ldr	r3, [pc, #36]	; (8000998 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000972:	4a0a      	ldr	r2, [pc, #40]	; (800099c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000974:	480a      	ldr	r0, [pc, #40]	; (80009a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000976:	f240 21d2 	movw	r1, #722	; 0x2d2
 800097a:	f027 fbe1 	bl	8028140 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800097e:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000982:	4b08      	ldr	r3, [pc, #32]	; (80009a4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000984:	3a00      	subs	r2, #0
 8000986:	bf18      	it	ne
 8000988:	2201      	movne	r2, #1
 800098a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800098c:	6803      	ldr	r3, [r0, #0]
    }
 800098e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000992:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000996:	4718      	bx	r3
 8000998:	080292b0 	.word	0x080292b0
 800099c:	080292e8 	.word	0x080292e8
 80009a0:	08029336 	.word	0x08029336
 80009a4:	200137ba 	.word	0x200137ba

080009a8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80009a8:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80009aa:	4b09      	ldr	r3, [pc, #36]	; (80009d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80009ac:	881b      	ldrh	r3, [r3, #0]
 80009ae:	428b      	cmp	r3, r1
 80009b0:	d803      	bhi.n	80009ba <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80009b2:	4b08      	ldr	r3, [pc, #32]	; (80009d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80009b4:	881b      	ldrh	r3, [r3, #0]
 80009b6:	4293      	cmp	r3, r2
 80009b8:	d905      	bls.n	80009c6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80009ba:	4b07      	ldr	r3, [pc, #28]	; (80009d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80009bc:	4a07      	ldr	r2, [pc, #28]	; (80009dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80009be:	4808      	ldr	r0, [pc, #32]	; (80009e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80009c0:	219e      	movs	r1, #158	; 0x9e
 80009c2:	f027 fbbd 	bl	8028140 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80009c6:	4b07      	ldr	r3, [pc, #28]	; (80009e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80009c8:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80009ca:	4b07      	ldr	r3, [pc, #28]	; (80009e8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80009cc:	801a      	strh	r2, [r3, #0]
    }
 80009ce:	bd08      	pop	{r3, pc}
 80009d0:	200137b0 	.word	0x200137b0
 80009d4:	200137b2 	.word	0x200137b2
 80009d8:	0802937b 	.word	0x0802937b
 80009dc:	080293de 	.word	0x080293de
 80009e0:	08029336 	.word	0x08029336
 80009e4:	200137b6 	.word	0x200137b6
 80009e8:	200137b8 	.word	0x200137b8

080009ec <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80009ec:	2101      	movs	r1, #1
{
 80009ee:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80009f0:	2200      	movs	r2, #0
 80009f2:	4608      	mov	r0, r1
 80009f4:	f00b fe5e 	bl	800c6b4 <osSemaphoreNew>
 80009f8:	4b0a      	ldr	r3, [pc, #40]	; (8000a24 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80009fa:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80009fc:	b928      	cbnz	r0, 8000a0a <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80009fe:	4b0a      	ldr	r3, [pc, #40]	; (8000a28 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000a00:	4a0a      	ldr	r2, [pc, #40]	; (8000a2c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a02:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a04:	480a      	ldr	r0, [pc, #40]	; (8000a30 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000a06:	f027 fb9b 	bl	8028140 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000a0a:	2200      	movs	r2, #0
 8000a0c:	2104      	movs	r1, #4
 8000a0e:	2001      	movs	r0, #1
 8000a10:	f00b ff04 	bl	800c81c <osMessageQueueNew>
 8000a14:	4b07      	ldr	r3, [pc, #28]	; (8000a34 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000a16:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a18:	b918      	cbnz	r0, 8000a22 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000a1a:	4b07      	ldr	r3, [pc, #28]	; (8000a38 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000a1c:	4a03      	ldr	r2, [pc, #12]	; (8000a2c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a1e:	212c      	movs	r1, #44	; 0x2c
 8000a20:	e7f0      	b.n	8000a04 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000a22:	bd08      	pop	{r3, pc}
 8000a24:	200001a8 	.word	0x200001a8
 8000a28:	080294fc 	.word	0x080294fc
 8000a2c:	08029545 	.word	0x08029545
 8000a30:	08029574 	.word	0x08029574
 8000a34:	200001a4 	.word	0x200001a4
 8000a38:	080295ee 	.word	0x080295ee

08000a3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000a3c:	4b02      	ldr	r3, [pc, #8]	; (8000a48 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000a3e:	f04f 31ff 	mov.w	r1, #4294967295
 8000a42:	6818      	ldr	r0, [r3, #0]
 8000a44:	f00b be8a 	b.w	800c75c <osSemaphoreAcquire>
 8000a48:	200001a8 	.word	0x200001a8

08000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000a4c:	4b01      	ldr	r3, [pc, #4]	; (8000a54 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000a4e:	6818      	ldr	r0, [r3, #0]
 8000a50:	f00b beb8 	b.w	800c7c4 <osSemaphoreRelease>
 8000a54:	200001a8 	.word	0x200001a8

08000a58 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000a58:	4b02      	ldr	r3, [pc, #8]	; (8000a64 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000a5a:	2100      	movs	r1, #0
 8000a5c:	6818      	ldr	r0, [r3, #0]
 8000a5e:	f00b be7d 	b.w	800c75c <osSemaphoreAcquire>
 8000a62:	bf00      	nop
 8000a64:	200001a8 	.word	0x200001a8

08000a68 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000a68:	f7ff bff0 	b.w	8000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000a6c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000a6c:	4803      	ldr	r0, [pc, #12]	; (8000a7c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000a6e:	4904      	ldr	r1, [pc, #16]	; (8000a80 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000a70:	6800      	ldr	r0, [r0, #0]
 8000a72:	2300      	movs	r3, #0
 8000a74:	461a      	mov	r2, r3
 8000a76:	f00b bf0b 	b.w	800c890 <osMessageQueuePut>
 8000a7a:	bf00      	nop
 8000a7c:	200001a4 	.word	0x200001a4
 8000a80:	20000004 	.word	0x20000004

08000a84 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000a84:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000a86:	4c08      	ldr	r4, [pc, #32]	; (8000aa8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000a88:	2300      	movs	r3, #0
 8000a8a:	461a      	mov	r2, r3
 8000a8c:	a901      	add	r1, sp, #4
 8000a8e:	6820      	ldr	r0, [r4, #0]
 8000a90:	f00b ff34 	bl	800c8fc <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000a94:	6820      	ldr	r0, [r4, #0]
 8000a96:	f04f 33ff 	mov.w	r3, #4294967295
 8000a9a:	2200      	movs	r2, #0
 8000a9c:	a901      	add	r1, sp, #4
 8000a9e:	f00b ff2d 	bl	800c8fc <osMessageQueueGet>
}
 8000aa2:	b002      	add	sp, #8
 8000aa4:	bd10      	pop	{r4, pc}
 8000aa6:	bf00      	nop
 8000aa8:	200001a4 	.word	0x200001a4

08000aac <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000aac:	6803      	ldr	r3, [r0, #0]
 8000aae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000ab0:	4718      	bx	r3

08000ab2 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000ab2:	2001      	movs	r0, #1
 8000ab4:	4770      	bx	lr

08000ab6 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000ab6:	6803      	ldr	r3, [r0, #0]
 8000ab8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000aba:	4718      	bx	r3

08000abc <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000abc:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000abe:	2300      	movs	r3, #0
 8000ac0:	9301      	str	r3, [sp, #4]
 8000ac2:	4b0d      	ldr	r3, [pc, #52]	; (8000af8 <_ZN8STM32DMA10initializeEv+0x3c>)
 8000ac4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000ac6:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000aca:	631a      	str	r2, [r3, #48]	; 0x30
 8000acc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000ace:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000ad2:	9201      	str	r2, [sp, #4]
 8000ad4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000ad6:	691a      	ldr	r2, [r3, #16]
 8000ad8:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000adc:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000ade:	691a      	ldr	r2, [r3, #16]
 8000ae0:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000ae4:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000ae6:	4b05      	ldr	r3, [pc, #20]	; (8000afc <_ZN8STM32DMA10initializeEv+0x40>)
 8000ae8:	4a05      	ldr	r2, [pc, #20]	; (8000b00 <_ZN8STM32DMA10initializeEv+0x44>)
 8000aea:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000aec:	4b05      	ldr	r3, [pc, #20]	; (8000b04 <_ZN8STM32DMA10initializeEv+0x48>)
 8000aee:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000af2:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000af4:	b002      	add	sp, #8
 8000af6:	4770      	bx	lr
 8000af8:	40023800 	.word	0x40023800
 8000afc:	20002634 	.word	0x20002634
 8000b00:	08000b49 	.word	0x08000b49
 8000b04:	e000e100 	.word	0xe000e100

08000b08 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000b08:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000b0c:	4770      	bx	lr
	...

08000b10 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000b10:	4b05      	ldr	r3, [pc, #20]	; (8000b28 <_ZN8STM32DMAD1Ev+0x18>)
 8000b12:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000b14:	4b05      	ldr	r3, [pc, #20]	; (8000b2c <_ZN8STM32DMAD1Ev+0x1c>)
 8000b16:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000b1a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000b1e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000b22:	f3bf 8f6f 	isb	sy
}
 8000b26:	4770      	bx	lr
 8000b28:	080297b8 	.word	0x080297b8
 8000b2c:	e000e100 	.word	0xe000e100

08000b30 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000b30:	b510      	push	{r4, lr}
 8000b32:	4604      	mov	r4, r0
}
 8000b34:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000b38:	f7ff ffea 	bl	8000b10 <_ZN8STM32DMAD1Ev>
 8000b3c:	4620      	mov	r0, r4
 8000b3e:	f026 fd0e 	bl	802755e <_ZdlPvj>
 8000b42:	4620      	mov	r0, r4
 8000b44:	bd10      	pop	{r4, pc}
	...

08000b48 <DMA2D_XferCpltCallback>:
        return instance;
 8000b48:	4b02      	ldr	r3, [pc, #8]	; (8000b54 <DMA2D_XferCpltCallback+0xc>)
 8000b4a:	681b      	ldr	r3, [r3, #0]
 8000b4c:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000b4e:	6803      	ldr	r3, [r0, #0]
 8000b50:	695b      	ldr	r3, [r3, #20]
 8000b52:	4718      	bx	r3
 8000b54:	200137bc 	.word	0x200137bc

08000b58 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000b58:	b570      	push	{r4, r5, r6, lr}
 8000b5a:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000b5c:	4625      	mov	r5, r4
 8000b5e:	4b0a      	ldr	r3, [pc, #40]	; (8000b88 <_ZN8STM32DMAC1Ev+0x30>)
 8000b60:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000b62:	2600      	movs	r6, #0
 8000b64:	6060      	str	r0, [r4, #4]
 8000b66:	7226      	strb	r6, [r4, #8]
 8000b68:	7266      	strb	r6, [r4, #9]
 8000b6a:	f845 3b20 	str.w	r3, [r5], #32
 8000b6e:	2260      	movs	r2, #96	; 0x60
 8000b70:	4629      	mov	r1, r5
 8000b72:	f00f fe7f 	bl	8010874 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000b76:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000b7a:	60ee      	str	r6, [r5, #12]
 8000b7c:	3524      	adds	r5, #36	; 0x24
 8000b7e:	42ab      	cmp	r3, r5
 8000b80:	d1fb      	bne.n	8000b7a <_ZN8STM32DMAC1Ev+0x22>
}
 8000b82:	4620      	mov	r0, r4
 8000b84:	bd70      	pop	{r4, r5, r6, pc}
 8000b86:	bf00      	nop
 8000b88:	080297b8 	.word	0x080297b8

08000b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000b8c:	b508      	push	{r3, lr}
    switch (format)
 8000b8e:	290b      	cmp	r1, #11
 8000b90:	d80b      	bhi.n	8000baa <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000b92:	e8df f001 	tbb	[pc, r1]
 8000b96:	0612      	.short	0x0612
 8000b98:	0a0a0a10 	.word	0x0a0a0a10
 8000b9c:	0808080a 	.word	0x0808080a
 8000ba0:	0808      	.short	0x0808
 8000ba2:	2001      	movs	r0, #1
}
 8000ba4:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000ba6:	2005      	movs	r0, #5
        break;
 8000ba8:	e7fc      	b.n	8000ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000baa:	4b05      	ldr	r3, [pc, #20]	; (8000bc0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000bac:	4a05      	ldr	r2, [pc, #20]	; (8000bc4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000bae:	4806      	ldr	r0, [pc, #24]	; (8000bc8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000bb0:	2165      	movs	r1, #101	; 0x65
 8000bb2:	f027 fac5 	bl	8028140 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000bb6:	2000      	movs	r0, #0
 8000bb8:	e7f4      	b.n	8000ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000bba:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000bbc:	e7f2      	b.n	8000ba4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000bbe:	bf00      	nop
 8000bc0:	08029630 	.word	0x08029630
 8000bc4:	0802964b 	.word	0x0802964b
 8000bc8:	08029695 	.word	0x08029695

08000bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000bcc:	b508      	push	{r3, lr}
    switch (format)
 8000bce:	290a      	cmp	r1, #10
 8000bd0:	d809      	bhi.n	8000be6 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000bd2:	e8df f001 	tbb	[pc, r1]
 8000bd6:	0610      	.short	0x0610
 8000bd8:	0808080e 	.word	0x0808080e
 8000bdc:	06060608 	.word	0x06060608
 8000be0:	06          	.byte	0x06
 8000be1:	00          	.byte	0x00
 8000be2:	2001      	movs	r0, #1
}
 8000be4:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000be6:	4b05      	ldr	r3, [pc, #20]	; (8000bfc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000be8:	4a05      	ldr	r2, [pc, #20]	; (8000c00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000bea:	4806      	ldr	r0, [pc, #24]	; (8000c04 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000bec:	2186      	movs	r1, #134	; 0x86
 8000bee:	f027 faa7 	bl	8028140 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000bf2:	2000      	movs	r0, #0
 8000bf4:	e7f6      	b.n	8000be4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000bf6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000bf8:	e7f4      	b.n	8000be4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000bfa:	bf00      	nop
 8000bfc:	08029630 	.word	0x08029630
 8000c00:	0802970d 	.word	0x0802970d
 8000c04:	08029695 	.word	0x08029695

08000c08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000c08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c0c:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000c10:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c12:	4641      	mov	r1, r8
{
 8000c14:	4607      	mov	r7, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c16:	f7ff ffb9 	bl	8000b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c1a:	f894 901e 	ldrb.w	r9, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c1e:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c20:	4649      	mov	r1, r9
 8000c22:	4638      	mov	r0, r7
 8000c24:	f7ff ffb2 	bl	8000b8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c28:	4649      	mov	r1, r9
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c2a:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c2c:	4638      	mov	r0, r7
 8000c2e:	f7ff ffcd 	bl	8000bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c32:	8aa1      	ldrh	r1, [r4, #20]
 8000c34:	8b62      	ldrh	r2, [r4, #26]
 8000c36:	4b43      	ldr	r3, [pc, #268]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000c38:	1a52      	subs	r2, r2, r1
 8000c3a:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c3c:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000c3e:	8b22      	ldrh	r2, [r4, #24]
 8000c40:	1a52      	subs	r2, r2, r1
 8000c42:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c44:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c46:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c48:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000c4c:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c4e:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000c50:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c52:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000c54:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000c56:	6827      	ldr	r7, [r4, #0]
 8000c58:	2f80      	cmp	r7, #128	; 0x80
 8000c5a:	d028      	beq.n	8000cae <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
 8000c5c:	7f22      	ldrb	r2, [r4, #28]
 8000c5e:	d80f      	bhi.n	8000c80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x78>
 8000c60:	2f20      	cmp	r7, #32
 8000c62:	d065      	beq.n	8000d30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000c64:	2f40      	cmp	r7, #64	; 0x40
 8000c66:	d063      	beq.n	8000d30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000c68:	2f04      	cmp	r7, #4
 8000c6a:	d01a      	beq.n	8000ca2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c6c:	4b35      	ldr	r3, [pc, #212]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000c6e:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000c72:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000c76:	45c8      	cmp	r8, r9
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c78:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000c7a:	d05f      	beq.n	8000d3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000c7c:	4a32      	ldr	r2, [pc, #200]	; (8000d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000c7e:	e044      	b.n	8000d0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
    switch (blitOp.operation)
 8000c80:	f5b7 7f80 	cmp.w	r7, #256	; 0x100
 8000c84:	d004      	beq.n	8000c90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x88>
 8000c86:	f5b7 7f00 	cmp.w	r7, #512	; 0x200
 8000c8a:	d1ef      	bne.n	8000c6c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x64>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c8c:	492f      	ldr	r1, [pc, #188]	; (8000d4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000c8e:	e000      	b.n	8000c92 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8a>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c90:	492f      	ldr	r1, [pc, #188]	; (8000d50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c92:	ea41 6202 	orr.w	r2, r1, r2, lsl #24
 8000c96:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000c98:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c9a:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c9c:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c9e:	6158      	str	r0, [r3, #20]
 8000ca0:	e032      	b.n	8000d08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ca2:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000ca6:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000caa:	61da      	str	r2, [r3, #28]
 8000cac:	e7f6      	b.n	8000c9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000cae:	68a7      	ldr	r7, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000cb0:	1d3a      	adds	r2, r7, #4
 8000cb2:	62da      	str	r2, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cb4:	7f21      	ldrb	r1, [r4, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000cb6:	783a      	ldrb	r2, [r7, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cb8:	ea45 6501 	orr.w	r5, r5, r1, lsl #24
 8000cbc:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
 8000cc0:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000cc2:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cc4:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000cc6:	b142      	cbz	r2, 8000cda <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
 8000cc8:	2a01      	cmp	r2, #1
 8000cca:	d021      	beq.n	8000d10 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x108>
                assert(0 && "Unsupported format");
 8000ccc:	4b21      	ldr	r3, [pc, #132]	; (8000d54 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8000cce:	4a22      	ldr	r2, [pc, #136]	; (8000d58 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8000cd0:	4822      	ldr	r0, [pc, #136]	; (8000d5c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000cd2:	f44f 7188 	mov.w	r1, #272	; 0x110
 8000cd6:	f027 fa33 	bl	8028140 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000cda:	69da      	ldr	r2, [r3, #28]
 8000cdc:	8879      	ldrh	r1, [r7, #2]
 8000cde:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000ce2:	3901      	subs	r1, #1
 8000ce4:	f022 0210 	bic.w	r2, r2, #16
 8000ce8:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000cec:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000cee:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000cf0:	4b14      	ldr	r3, [pc, #80]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000cf2:	69da      	ldr	r2, [r3, #28]
 8000cf4:	f042 0220 	orr.w	r2, r2, #32
 8000cf8:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000cfa:	69da      	ldr	r2, [r3, #28]
 8000cfc:	0692      	lsls	r2, r2, #26
 8000cfe:	d4fc      	bmi.n	8000cfa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000d00:	2210      	movs	r2, #16
 8000d02:	609a      	str	r2, [r3, #8]
            if (blend)
 8000d04:	2900      	cmp	r1, #0
 8000d06:	d0b9      	beq.n	8000c7c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x74>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000d08:	4a15      	ldr	r2, [pc, #84]	; (8000d60 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000d0a:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000d0c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d10:	69da      	ldr	r2, [r3, #28]
 8000d12:	8878      	ldrh	r0, [r7, #2]
 8000d14:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000d18:	3801      	subs	r0, #1
 8000d1a:	f022 0210 	bic.w	r2, r2, #16
 8000d1e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
                if (blitOp.alpha == 255)
 8000d22:	39ff      	subs	r1, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d24:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8000d28:	bf18      	it	ne
 8000d2a:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d2c:	61da      	str	r2, [r3, #28]
                break;
 8000d2e:	e7df      	b.n	8000cf0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d30:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000d34:	4b03      	ldr	r3, [pc, #12]	; (8000d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000d36:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000d3a:	e7b6      	b.n	8000caa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000d3c:	f240 2201 	movw	r2, #513	; 0x201
 8000d40:	e7e3      	b.n	8000d0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
 8000d42:	bf00      	nop
 8000d44:	4002b000 	.word	0x4002b000
 8000d48:	00010201 	.word	0x00010201
 8000d4c:	00020009 	.word	0x00020009
 8000d50:	0002000a 	.word	0x0002000a
 8000d54:	08029758 	.word	0x08029758
 8000d58:	08029772 	.word	0x08029772
 8000d5c:	08029695 	.word	0x08029695
 8000d60:	00020201 	.word	0x00020201

08000d64 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000d64:	b538      	push	{r3, r4, r5, lr}
 8000d66:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000d68:	7f89      	ldrb	r1, [r1, #30]
 8000d6a:	f7ff ff2f 	bl	8000bcc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000d6e:	8aa5      	ldrh	r5, [r4, #20]
 8000d70:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000d72:	4b16      	ldr	r3, [pc, #88]	; (8000dcc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d74:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000d76:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000d78:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8000d7c:	645a      	str	r2, [r3, #68]	; 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d7e:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d80:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d82:	1b52      	subs	r2, r2, r5
 8000d84:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000d86:	6825      	ldr	r5, [r4, #0]
 8000d88:	2d08      	cmp	r5, #8
 8000d8a:	d10e      	bne.n	8000daa <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d8c:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d8e:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d90:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d92:	7f20      	ldrb	r0, [r4, #28]
 8000d94:	4a0e      	ldr	r2, [pc, #56]	; (8000dd0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000d96:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000d9a:	61da      	str	r2, [r3, #28]
 8000d9c:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000d9e:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000da0:	4a0c      	ldr	r2, [pc, #48]	; (8000dd4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000da2:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000da4:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000da6:	601a      	str	r2, [r3, #0]
    }
}
 8000da8:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000daa:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000dac:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000dae:	611a      	str	r2, [r3, #16]
 8000db0:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000db2:	0a0a      	lsrs	r2, r1, #8
 8000db4:	0948      	lsrs	r0, r1, #5
 8000db6:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000dba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000dbe:	4302      	orrs	r2, r0
 8000dc0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000dc4:	430a      	orrs	r2, r1
 8000dc6:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000dc8:	4a03      	ldr	r2, [pc, #12]	; (8000dd8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000dca:	e7ec      	b.n	8000da6 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000dcc:	4002b000 	.word	0x4002b000
 8000dd0:	00010009 	.word	0x00010009
 8000dd4:	00020201 	.word	0x00020201
 8000dd8:	00030201 	.word	0x00030201

08000ddc <_ZN8touchgfx5paint8tearDownEv>:
* @brief Waits until previous DMA drawing operation has finished
*/
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ddc:	4b03      	ldr	r3, [pc, #12]	; (8000dec <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8000dde:	681a      	ldr	r2, [r3, #0]
 8000de0:	07d2      	lsls	r2, r2, #31
 8000de2:	d4fc      	bmi.n	8000dde <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000de4:	2223      	movs	r2, #35	; 0x23
 8000de6:	609a      	str	r2, [r3, #8]
}
 8000de8:	4770      	bx	lr
 8000dea:	bf00      	nop
 8000dec:	4002b000 	.word	0x4002b000

08000df0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
*
* @brief Renders Canvas Widget chunks using DMA.
* This functions will not generate an interrupt, and will not affect the DMA queue.
*/
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8000df0:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000df2:	4c0f      	ldr	r4, [pc, #60]	; (8000e30 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000df4:	6825      	ldr	r5, [r4, #0]
 8000df6:	07ed      	lsls	r5, r5, #31
 8000df8:	d4fc      	bmi.n	8000df4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000dfa:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000dfc:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000dfe:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000e00:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000e04:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8000e06:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000e08:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000e0a:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000e0c:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
 8000e0e:	d00a      	beq.n	8000e26 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000e10:	4908      	ldr	r1, [pc, #32]	; (8000e34 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000e12:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000e14:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000e18:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000e1a:	4b07      	ldr	r3, [pc, #28]	; (8000e38 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8000e1c:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000e1e:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000e20:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000e22:	6023      	str	r3, [r4, #0]
    }
}
 8000e24:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000e26:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8000e28:	9b03      	ldr	r3, [sp, #12]
 8000e2a:	63a3      	str	r3, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000e2c:	4b03      	ldr	r3, [pc, #12]	; (8000e3c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000e2e:	e7f8      	b.n	8000e22 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000e30:	4002b000 	.word	0x4002b000
 8000e34:	00010009 	.word	0x00010009
 8000e38:	00020001 	.word	0x00020001
 8000e3c:	00030001 	.word	0x00030001

08000e40 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000e40:	2001      	movs	r0, #1
 8000e42:	4770      	bx	lr

08000e44 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000e44:	2038      	movs	r0, #56	; 0x38
 8000e46:	4770      	bx	lr

08000e48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000e48:	2338      	movs	r3, #56	; 0x38
 8000e4a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e4e:	3008      	adds	r0, #8
 8000e50:	4770      	bx	lr

08000e52 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000e52:	2338      	movs	r3, #56	; 0x38
 8000e54:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e58:	3008      	adds	r0, #8
 8000e5a:	4770      	bx	lr

08000e5c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e5c:	2001      	movs	r0, #1
 8000e5e:	4770      	bx	lr

08000e60 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e60:	f241 30e4 	movw	r0, #5092	; 0x13e4
 8000e64:	4770      	bx	lr

08000e66 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e66:	f241 33e4 	movw	r3, #5092	; 0x13e4
 8000e6a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e6e:	3008      	adds	r0, #8
 8000e70:	4770      	bx	lr

08000e72 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e72:	f241 33e4 	movw	r3, #5092	; 0x13e4
 8000e76:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e7a:	3008      	adds	r0, #8
 8000e7c:	4770      	bx	lr

08000e7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e7e:	2001      	movs	r0, #1
 8000e80:	4770      	bx	lr

08000e82 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e82:	2010      	movs	r0, #16
 8000e84:	4770      	bx	lr

08000e86 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e86:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e8a:	3008      	adds	r0, #8
 8000e8c:	4770      	bx	lr

08000e8e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e8e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e92:	3008      	adds	r0, #8
 8000e94:	4770      	bx	lr

08000e96 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8000e96:	4608      	mov	r0, r1
 8000e98:	f002 bbf8 	b.w	800368c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08000e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000e9c:	b510      	push	{r4, lr}
 8000e9e:	4b03      	ldr	r3, [pc, #12]	; (8000eac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000ea0:	6003      	str	r3, [r0, #0]
 8000ea2:	4604      	mov	r4, r0
 8000ea4:	f00e f983 	bl	800f1ae <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ea8:	4620      	mov	r0, r4
 8000eaa:	bd10      	pop	{r4, pc}
 8000eac:	08029870 	.word	0x08029870

08000eb0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000eb0:	b510      	push	{r4, lr}
 8000eb2:	4604      	mov	r4, r0
 8000eb4:	f7ff fff2 	bl	8000e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000eb8:	4620      	mov	r0, r4
 8000eba:	2140      	movs	r1, #64	; 0x40
 8000ebc:	f026 fb4f 	bl	802755e <_ZdlPvj>
 8000ec0:	4620      	mov	r0, r4
 8000ec2:	bd10      	pop	{r4, pc}

08000ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000ec4:	b510      	push	{r4, lr}
 8000ec6:	4b03      	ldr	r3, [pc, #12]	; (8000ed4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ec8:	6003      	str	r3, [r0, #0]
 8000eca:	4604      	mov	r4, r0
 8000ecc:	f00e f96f 	bl	800f1ae <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ed0:	4620      	mov	r0, r4
 8000ed2:	bd10      	pop	{r4, pc}
 8000ed4:	0802983c 	.word	0x0802983c

08000ed8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000ed8:	b510      	push	{r4, lr}
 8000eda:	4604      	mov	r4, r0
 8000edc:	f7ff fff2 	bl	8000ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ee0:	4620      	mov	r0, r4
 8000ee2:	f241 31ec 	movw	r1, #5100	; 0x13ec
 8000ee6:	f026 fb3a 	bl	802755e <_ZdlPvj>
 8000eea:	4620      	mov	r0, r4
 8000eec:	bd10      	pop	{r4, pc}
	...

08000ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000ef0:	b510      	push	{r4, lr}
 8000ef2:	4b03      	ldr	r3, [pc, #12]	; (8000f00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ef4:	6003      	str	r3, [r0, #0]
 8000ef6:	4604      	mov	r4, r0
 8000ef8:	f00e f959 	bl	800f1ae <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000efc:	4620      	mov	r0, r4
 8000efe:	bd10      	pop	{r4, pc}
 8000f00:	08029808 	.word	0x08029808

08000f04 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000f04:	b510      	push	{r4, lr}
 8000f06:	4604      	mov	r4, r0
 8000f08:	f7ff fff2 	bl	8000ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f0c:	4620      	mov	r0, r4
 8000f0e:	2118      	movs	r1, #24
 8000f10:	f026 fb25 	bl	802755e <_ZdlPvj>
 8000f14:	4620      	mov	r0, r4
 8000f16:	bd10      	pop	{r4, pc}

08000f18 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000f18:	b510      	push	{r4, lr}
 8000f1a:	4b09      	ldr	r3, [pc, #36]	; (8000f40 <_ZN12FrontendHeapD1Ev+0x28>)
 8000f1c:	6003      	str	r3, [r0, #0]
 8000f1e:	4604      	mov	r4, r0
 8000f20:	f500 50a0 	add.w	r0, r0, #5120	; 0x1400
 8000f24:	3018      	adds	r0, #24
 8000f26:	f7ff ffb9 	bl	8000e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000f2a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000f2e:	f7ff ffc9 	bl	8000ec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI34Measurement_Accurate_Display_2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f32:	f104 0014 	add.w	r0, r4, #20
 8000f36:	f7ff ffdb 	bl	8000ef0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f3a:	4620      	mov	r0, r4
 8000f3c:	bd10      	pop	{r4, pc}
 8000f3e:	bf00      	nop
 8000f40:	080298a4 	.word	0x080298a4

08000f44 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000f44:	b508      	push	{r3, lr}
 8000f46:	4802      	ldr	r0, [pc, #8]	; (8000f50 <__tcf_0+0xc>)
 8000f48:	f7ff ffe6 	bl	8000f18 <_ZN12FrontendHeapD1Ev>
 8000f4c:	bd08      	pop	{r3, pc}
 8000f4e:	bf00      	nop
 8000f50:	200001b0 	.word	0x200001b0

08000f54 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000f54:	b510      	push	{r4, lr}
 8000f56:	4604      	mov	r4, r0
 8000f58:	f7ff ffde 	bl	8000f18 <_ZN12FrontendHeapD1Ev>
 8000f5c:	4620      	mov	r0, r4
 8000f5e:	f241 51bc 	movw	r1, #5564	; 0x15bc
 8000f62:	f026 fafc 	bl	802755e <_ZdlPvj>
 8000f66:	4620      	mov	r0, r4
 8000f68:	bd10      	pop	{r4, pc}
	...

08000f6c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000f6c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000f70:	f001 f97e 	bl	8002270 <_ZN14BitmapDatabase11getInstanceEv>
 8000f74:	4605      	mov	r5, r0
 8000f76:	f001 f97f 	bl	8002278 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000f7a:	2400      	movs	r4, #0
 8000f7c:	4601      	mov	r1, r0
 8000f7e:	4623      	mov	r3, r4
 8000f80:	4628      	mov	r0, r5
 8000f82:	4622      	mov	r2, r4
 8000f84:	9400      	str	r4, [sp, #0]
 8000f86:	f016 ff95 	bl	8017eb4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000f8a:	4b26      	ldr	r3, [pc, #152]	; (8001024 <touchgfx_init+0xb8>)
 8000f8c:	4a26      	ldr	r2, [pc, #152]	; (8001028 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000f8e:	4d27      	ldr	r5, [pc, #156]	; (800102c <touchgfx_init+0xc0>)
 8000f90:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000f92:	4620      	mov	r0, r4
 8000f94:	f006 fd88 	bl	8007aa8 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000f98:	4825      	ldr	r0, [pc, #148]	; (8001030 <touchgfx_init+0xc4>)
 8000f9a:	f016 fef3 	bl	8017d84 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000f9e:	682b      	ldr	r3, [r5, #0]
 8000fa0:	f3bf 8f5b 	dmb	ish
 8000fa4:	07db      	lsls	r3, r3, #31
 8000fa6:	d436      	bmi.n	8001016 <touchgfx_init+0xaa>
 8000fa8:	4628      	mov	r0, r5
 8000faa:	f026 fada 	bl	8027562 <__cxa_guard_acquire>
 8000fae:	b390      	cbz	r0, 8001016 <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8000fb0:	4c20      	ldr	r4, [pc, #128]	; (8001034 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000fb2:	4b21      	ldr	r3, [pc, #132]	; (8001038 <touchgfx_init+0xcc>)
          screenStorage(scr),
          transitionStorage(tra),
 8000fb4:	4f21      	ldr	r7, [pc, #132]	; (800103c <touchgfx_init+0xd0>)
 8000fb6:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8000fb8:	f504 56a3 	add.w	r6, r4, #5216	; 0x1460
        : presenterStorage(pres),
 8000fbc:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8000fc0:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8000fc4:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8000fc6:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8000fca:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8000fcc:	6126      	str	r6, [r4, #16]
 8000fce:	f00e f8ef 	bl	800f1b0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fd2:	4b1b      	ldr	r3, [pc, #108]	; (8001040 <touchgfx_init+0xd4>)
 8000fd4:	6163      	str	r3, [r4, #20]
 8000fd6:	4640      	mov	r0, r8
 8000fd8:	f00e f8ea 	bl	800f1b0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fdc:	4b19      	ldr	r3, [pc, #100]	; (8001044 <touchgfx_init+0xd8>)
 8000fde:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000fe0:	4638      	mov	r0, r7
 8000fe2:	f00e f8e5 	bl	800f1b0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fe6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8000fea:	4a17      	ldr	r2, [pc, #92]	; (8001048 <touchgfx_init+0xdc>)
 8000fec:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
 8000ff0:	f503 608b 	add.w	r0, r3, #1112	; 0x458
 8000ff4:	f007 f966 	bl	80082c4 <_ZN5ModelC1Ev>
 8000ff8:	4622      	mov	r2, r4
 8000ffa:	f1a6 0108 	sub.w	r1, r6, #8
 8000ffe:	4630      	mov	r0, r6
 8001000:	f006 feac 	bl	8007d5c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001004:	4630      	mov	r0, r6
 8001006:	f002 fb41 	bl	800368c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 800100a:	4810      	ldr	r0, [pc, #64]	; (800104c <touchgfx_init+0xe0>)
 800100c:	f027 f8b6 	bl	802817c <atexit>
 8001010:	4628      	mov	r0, r5
 8001012:	f026 fab2 	bl	802757a <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001016:	480e      	ldr	r0, [pc, #56]	; (8001050 <touchgfx_init+0xe4>)
}
 8001018:	b002      	add	sp, #8
 800101a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 800101e:	f7ff bc2b 	b.w	8000878 <_ZN11TouchGFXHAL10initializeEv>
 8001022:	bf00      	nop
 8001024:	20013820 	.word	0x20013820
 8001028:	2000258c 	.word	0x2000258c
 800102c:	200001ac 	.word	0x200001ac
 8001030:	20000008 	.word	0x20000008
 8001034:	200001b0 	.word	0x200001b0
 8001038:	080298a4 	.word	0x080298a4
 800103c:	200015c8 	.word	0x200015c8
 8001040:	08029808 	.word	0x08029808
 8001044:	0802983c 	.word	0x0802983c
 8001048:	08029870 	.word	0x08029870
 800104c:	08000f45 	.word	0x08000f45
 8001050:	20002510 	.word	0x20002510

08001054 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001054:	4770      	bx	lr
	...

08001058 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001058:	4801      	ldr	r0, [pc, #4]	; (8001060 <touchgfx_taskEntry+0x8>)
 800105a:	f7ff bc1b 	b.w	8000894 <_ZN11TouchGFXHAL9taskEntryEv>
 800105e:	bf00      	nop
 8001060:	20002510 	.word	0x20002510

08001064 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001064:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001066:	4e22      	ldr	r6, [pc, #136]	; (80010f0 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8001068:	4c22      	ldr	r4, [pc, #136]	; (80010f4 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 800106a:	4d23      	ldr	r5, [pc, #140]	; (80010f8 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 800106c:	4b23      	ldr	r3, [pc, #140]	; (80010fc <_GLOBAL__sub_I_touchgfx_init+0x98>)
 800106e:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001070:	4630      	mov	r0, r6
 8001072:	f7ff fd71 	bl	8000b58 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001076:	4628      	mov	r0, r5
 8001078:	f01b f9e8 	bl	801c44c <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 800107c:	4b20      	ldr	r3, [pc, #128]	; (8001100 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800107e:	4821      	ldr	r0, [pc, #132]	; (8001104 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8001080:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001082:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001084:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8001088:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 800108c:	491e      	ldr	r1, [pc, #120]	; (8001108 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 800108e:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8001090:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8001094:	491d      	ldr	r1, [pc, #116]	; (800110c <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8001096:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8001098:	491d      	ldr	r1, [pc, #116]	; (8001110 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 800109a:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 800109e:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80010a0:	21f0      	movs	r1, #240	; 0xf0
 80010a2:	8001      	strh	r1, [r0, #0]
 80010a4:	481b      	ldr	r0, [pc, #108]	; (8001114 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 80010a6:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80010a8:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010aa:	481b      	ldr	r0, [pc, #108]	; (8001118 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 80010ac:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010b0:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 80010b4:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80010b8:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80010bc:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80010c0:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 80010c4:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 80010c8:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80010cc:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 80010d0:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 80010d4:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 80010d6:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010da:	8001      	strh	r1, [r0, #0]
 80010dc:	480f      	ldr	r0, [pc, #60]	; (800111c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 80010de:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80010e0:	490f      	ldr	r1, [pc, #60]	; (8001120 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80010e2:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80010e4:	2201      	movs	r2, #1
 80010e6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80010ea:	4a0e      	ldr	r2, [pc, #56]	; (8001124 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80010ec:	601a      	str	r2, [r3, #0]
}
 80010ee:	bd70      	pop	{r4, r5, r6, pc}
 80010f0:	20001770 	.word	0x20001770
 80010f4:	2000176c 	.word	0x2000176c
 80010f8:	20002590 	.word	0x20002590
 80010fc:	080292a0 	.word	0x080292a0
 8001100:	20002510 	.word	0x20002510
 8001104:	200137b0 	.word	0x200137b0
 8001108:	01000001 	.word	0x01000001
 800110c:	01010000 	.word	0x01010000
 8001110:	200137bc 	.word	0x200137bc
 8001114:	200137b6 	.word	0x200137b6
 8001118:	200137b2 	.word	0x200137b2
 800111c:	200137b8 	.word	0x200137b8
 8001120:	200137b4 	.word	0x200137b4
 8001124:	0802942c 	.word	0x0802942c

08001128 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001128:	4801      	ldr	r0, [pc, #4]	; (8001130 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800112a:	f7ff bcf1 	b.w	8000b10 <_ZN8STM32DMAD1Ev>
 800112e:	bf00      	nop
 8001130:	20001770 	.word	0x20001770

08001134 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001134:	2000      	movs	r0, #0
 8001136:	4770      	bx	lr

08001138 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001138:	8081      	strh	r1, [r0, #4]
    }
 800113a:	4770      	bx	lr

0800113c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800113c:	80c1      	strh	r1, [r0, #6]
    }
 800113e:	4770      	bx	lr

08001140 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001140:	8101      	strh	r1, [r0, #8]
    }
 8001142:	4770      	bx	lr

08001144 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001144:	8141      	strh	r1, [r0, #10]
    }
 8001146:	4770      	bx	lr

08001148 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001148:	4770      	bx	lr

0800114a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800114a:	4770      	bx	lr

0800114c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 800114c:	4770      	bx	lr

0800114e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800114e:	4770      	bx	lr

08001150 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001150:	4770      	bx	lr

08001152 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001152:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001154:	88c4      	ldrh	r4, [r0, #6]
 8001156:	6803      	ldr	r3, [r0, #0]
 8001158:	1b12      	subs	r2, r2, r4
 800115a:	8884      	ldrh	r4, [r0, #4]
 800115c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800115e:	1b09      	subs	r1, r1, r4
 8001160:	b212      	sxth	r2, r2
    }
 8001162:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001166:	b209      	sxth	r1, r1
 8001168:	4718      	bx	r3

0800116a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800116a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800116e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001170:	f04f 33ff 	mov.w	r3, #4294967295
 8001174:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001176:	6813      	ldr	r3, [r2, #0]
 8001178:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800117a:	6010      	str	r0, [r2, #0]
    }
 800117c:	4770      	bx	lr

0800117e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800117e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001182:	b11a      	cbz	r2, 800118c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8001184:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8001188:	b102      	cbz	r2, 800118c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800118a:	6018      	str	r0, [r3, #0]
        }
    }
 800118c:	4770      	bx	lr

0800118e <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800118e:	2000      	movs	r0, #0
 8001190:	4770      	bx	lr

08001192 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8001192:	888b      	ldrh	r3, [r1, #4]
 8001194:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8001196:	2001      	movs	r0, #1
 8001198:	4770      	bx	lr

0800119a <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800119a:	4770      	bx	lr

0800119c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800119c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 80011a0:	4770      	bx	lr

080011a2 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80011a2:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 80011a6:	4770      	bx	lr

080011a8 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 80011a8:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80011aa:	2200      	movs	r2, #0
        return rect.width;
 80011ac:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80011b0:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80011b4:	8002      	strh	r2, [r0, #0]
 80011b6:	8042      	strh	r2, [r0, #2]
 80011b8:	8084      	strh	r4, [r0, #4]
 80011ba:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80011bc:	bd10      	pop	{r4, pc}

080011be <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80011be:	2200      	movs	r2, #0
 80011c0:	8002      	strh	r2, [r0, #0]
 80011c2:	8042      	strh	r2, [r0, #2]
 80011c4:	8082      	strh	r2, [r0, #4]
 80011c6:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80011c8:	4770      	bx	lr
	...

080011cc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011cc:	4b03      	ldr	r3, [pc, #12]	; (80011dc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80011ce:	2290      	movs	r2, #144	; 0x90
 80011d0:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 80011d4:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80011d8:	4770      	bx	lr
 80011da:	bf00      	nop
 80011dc:	e000e100 	.word	0xe000e100

080011e0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80011e0:	4a09      	ldr	r2, [pc, #36]	; (8001208 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80011e2:	490a      	ldr	r1, [pc, #40]	; (800120c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80011e4:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80011e6:	480a      	ldr	r0, [pc, #40]	; (8001210 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80011e8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80011ec:	3b01      	subs	r3, #1
 80011ee:	b29b      	uxth	r3, r3
 80011f0:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80011f2:	6911      	ldr	r1, [r2, #16]
 80011f4:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80011f8:	3901      	subs	r1, #1
 80011fa:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80011fc:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80011fe:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001200:	f043 0301 	orr.w	r3, r3, #1
 8001204:	6353      	str	r3, [r2, #52]	; 0x34
}
 8001206:	4770      	bx	lr
 8001208:	40016800 	.word	0x40016800
 800120c:	20002616 	.word	0x20002616
 8001210:	20002614 	.word	0x20002614

08001214 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001214:	4b01      	ldr	r3, [pc, #4]	; (800121c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001216:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800121a:	4770      	bx	lr
 800121c:	40016800 	.word	0x40016800

08001220 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001220:	4b02      	ldr	r3, [pc, #8]	; (800122c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001222:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001224:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001228:	625a      	str	r2, [r3, #36]	; 0x24
}
 800122a:	4770      	bx	lr
 800122c:	40016800 	.word	0x40016800

08001230 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001230:	b570      	push	{r4, r5, r6, lr}
 8001232:	4604      	mov	r4, r0
    HAL::initialize();
 8001234:	f00e fc87 	bl	800fb46 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001238:	6823      	ldr	r3, [r4, #0]
 800123a:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 800123c:	f013 fc30 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
 8001240:	4601      	mov	r1, r0
 8001242:	4620      	mov	r0, r4
 8001244:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001246:	6823      	ldr	r3, [r4, #0]
 8001248:	4a05      	ldr	r2, [pc, #20]	; (8001260 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800124a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800124e:	4620      	mov	r0, r4
 8001250:	46ac      	mov	ip, r5
 8001252:	2300      	movs	r3, #0
}
 8001254:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001258:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 800125c:	4760      	bx	ip
 800125e:	bf00      	nop
 8001260:	d004b000 	.word	0xd004b000

08001264 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001264:	f00e bc56 	b.w	800fb14 <_ZN8touchgfx3HAL10beginFrameEv>

08001268 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001268:	f00e bc60 	b.w	800fb2c <_ZN8touchgfx3HAL8endFrameEv>

0800126c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 800126c:	f00e bc1c 	b.w	800faa8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001270 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001270:	f00e bd7d 	b.w	800fd6e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001274 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001274:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001278:	b112      	cbz	r2, 8001280 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800127a:	6803      	ldr	r3, [r0, #0]
 800127c:	695b      	ldr	r3, [r3, #20]
 800127e:	4718      	bx	r3
    }
 8001280:	4770      	bx	lr
	...

08001284 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001284:	4b03      	ldr	r3, [pc, #12]	; (8001294 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8001286:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800128a:	609a      	str	r2, [r3, #8]
 800128c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001290:	609a      	str	r2, [r3, #8]
}
 8001292:	4770      	bx	lr
 8001294:	e000e100 	.word	0xe000e100

08001298 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001298:	4b08      	ldr	r3, [pc, #32]	; (80012bc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 800129a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800129e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80012a2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80012a6:	f3bf 8f6f 	isb	sy
 80012aa:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80012ae:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80012b2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80012b6:	f3bf 8f6f 	isb	sy
}
 80012ba:	4770      	bx	lr
 80012bc:	e000e100 	.word	0xe000e100

080012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80012c0:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80012c2:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80012c4:	4e12      	ldr	r6, [pc, #72]	; (8001310 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80012c6:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80012c8:	4b12      	ldr	r3, [pc, #72]	; (8001314 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80012ca:	6003      	str	r3, [r0, #0]
 80012cc:	6833      	ldr	r3, [r6, #0]
 80012ce:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 80012d2:	4605      	mov	r5, r0
 80012d4:	b10a      	cbz	r2, 80012da <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80012d6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80012d8:	b900      	cbnz	r0, 80012dc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80012da:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80012dc:	6803      	ldr	r3, [r0, #0]
 80012de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80012e0:	4798      	blx	r3
        return auxiliaryLCD;
 80012e2:	6833      	ldr	r3, [r6, #0]
 80012e4:	fab0 f480 	clz	r4, r0
 80012e8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80012ea:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80012ec:	b130      	cbz	r0, 80012fc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80012ee:	6803      	ldr	r3, [r0, #0]
 80012f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80012f2:	4798      	blx	r3
 80012f4:	2800      	cmp	r0, #0
 80012f6:	bf08      	it	eq
 80012f8:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 80012fc:	b92c      	cbnz	r4, 800130a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 80012fe:	4b06      	ldr	r3, [pc, #24]	; (8001318 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001300:	4a06      	ldr	r2, [pc, #24]	; (800131c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001302:	4807      	ldr	r0, [pc, #28]	; (8001320 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001304:	212c      	movs	r1, #44	; 0x2c
 8001306:	f026 ff1b 	bl	8028140 <__assert_func>
    }
 800130a:	4628      	mov	r0, r5
 800130c:	bd70      	pop	{r4, r5, r6, pc}
 800130e:	bf00      	nop
 8001310:	200137bc 	.word	0x200137bc
 8001314:	080299b4 	.word	0x080299b4
 8001318:	080298b0 	.word	0x080298b0
 800131c:	0802990e 	.word	0x0802990e
 8001320:	08029947 	.word	0x08029947

08001324 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001324:	b510      	push	{r4, lr}
        return instance;
 8001326:	4c14      	ldr	r4, [pc, #80]	; (8001378 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001328:	6823      	ldr	r3, [r4, #0]
 800132a:	b323      	cbz	r3, 8001376 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800132c:	4b13      	ldr	r3, [pc, #76]	; (800137c <HAL_LTDC_LineEventCallback+0x58>)
 800132e:	4a14      	ldr	r2, [pc, #80]	; (8001380 <HAL_LTDC_LineEventCallback+0x5c>)
 8001330:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001332:	8811      	ldrh	r1, [r2, #0]
 8001334:	428b      	cmp	r3, r1
 8001336:	d113      	bne.n	8001360 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001338:	4b12      	ldr	r3, [pc, #72]	; (8001384 <HAL_LTDC_LineEventCallback+0x60>)
 800133a:	8819      	ldrh	r1, [r3, #0]
 800133c:	f009 fc52 	bl	800abe4 <HAL_LTDC_ProgramLineEvent>
 8001340:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001342:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8001346:	3301      	adds	r3, #1
 8001348:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800134c:	f7ff fb8e 	bl	8000a6c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001350:	6820      	ldr	r0, [r4, #0]
 8001352:	f00f f937 	bl	80105c4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001356:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800135a:	2000      	movs	r0, #0
 800135c:	f7ff ba06 	b.w	800076c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001360:	f009 fc40 	bl	800abe4 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001364:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001366:	6803      	ldr	r3, [r0, #0]
 8001368:	6a1b      	ldr	r3, [r3, #32]
 800136a:	4798      	blx	r3
    }
 800136c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001370:	2000      	movs	r0, #0
 8001372:	f7ff ba13 	b.w	800079c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001376:	bd10      	pop	{r4, pc}
 8001378:	200137bc 	.word	0x200137bc
 800137c:	40016800 	.word	0x40016800
 8001380:	20002616 	.word	0x20002616
 8001384:	20002614 	.word	0x20002614

08001388 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001388:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800138a:	2064      	movs	r0, #100	; 0x64
 800138c:	f00b f984 	bl	800c698 <osDelay>
  for(;;)
 8001390:	e7fb      	b.n	800138a <StartDefaultTask+0x2>
 8001392:	bf00      	nop

08001394 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 8001394:	b580      	push	{r7, lr}
 8001396:	4c10      	ldr	r4, [pc, #64]	; (80013d8 <StartTimeoutTask+0x44>)
 8001398:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80013e4 <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 800139c:	4f0f      	ldr	r7, [pc, #60]	; (80013dc <StartTimeoutTask+0x48>)
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;


	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800139e:	4e10      	ldr	r6, [pc, #64]	; (80013e0 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 80013a0:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013a2:	2300      	movs	r3, #0
 80013a4:	461a      	mov	r2, r3
 80013a6:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 80013a8:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013aa:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 80013ae:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013b0:	f00b fa6e 	bl	800c890 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 80013b4:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 80013b6:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80013b8:	4638      	mov	r0, r7
 80013ba:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80013bc:	b912      	cbnz	r2, 80013c4 <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80013be:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80013c0:	f007 fdf4 	bl	8008fac <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80013c4:	4630      	mov	r0, r6
 80013c6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80013ca:	f007 fdf3 	bl	8008fb4 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80013ce:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80013d2:	f00b f961 	bl	800c698 <osDelay>
	  sleep_timeout_value--;
 80013d6:	e7e3      	b.n	80013a0 <StartTimeoutTask+0xc>
 80013d8:	20000014 	.word	0x20000014
 80013dc:	40021000 	.word	0x40021000
 80013e0:	40021800 	.word	0x40021800
 80013e4:	20002620 	.word	0x20002620

080013e8 <SystemClock_Config>:
{
 80013e8:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013ea:	2400      	movs	r4, #0
{
 80013ec:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013ee:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 80013f2:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80013f6:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80013fa:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 80013fe:	4a1e      	ldr	r2, [pc, #120]	; (8001478 <SystemClock_Config+0x90>)
 8001400:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001402:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001404:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001406:	4b1d      	ldr	r3, [pc, #116]	; (800147c <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8001408:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 800140c:	6411      	str	r1, [r2, #64]	; 0x40
 800140e:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8001410:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8001414:	9201      	str	r2, [sp, #4]
 8001416:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001418:	9402      	str	r4, [sp, #8]
 800141a:	681a      	ldr	r2, [r3, #0]
 800141c:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001420:	601a      	str	r2, [r3, #0]
 8001422:	681b      	ldr	r3, [r3, #0]
 8001424:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001428:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800142a:	2201      	movs	r2, #1
 800142c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001430:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001434:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001436:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001438:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800143a:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 800143e:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001442:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001446:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001448:	2202      	movs	r2, #2
 800144a:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800144c:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800144e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001452:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001454:	f009 fbe8 	bl	800ac28 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001458:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800145a:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800145e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001462:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001466:	a803      	add	r0, sp, #12
 8001468:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800146a:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800146e:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001470:	f009 fdf2 	bl	800b058 <HAL_RCC_ClockConfig>
}
 8001474:	b015      	add	sp, #84	; 0x54
 8001476:	bd30      	pop	{r4, r5, pc}
 8001478:	40023800 	.word	0x40023800
 800147c:	40007000 	.word	0x40007000

08001480 <main>:
{
 8001480:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001484:	2400      	movs	r4, #0
{
 8001486:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8001488:	f007 fa6a 	bl	8008960 <HAL_Init>
  SystemClock_Config();
 800148c:	f7ff ffac 	bl	80013e8 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001490:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001494:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001498:	4bc1      	ldr	r3, [pc, #772]	; (80017a0 <main+0x320>)
 800149a:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800149c:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800149e:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014a0:	48c0      	ldr	r0, [pc, #768]	; (80017a4 <main+0x324>)
  hi2c3.Instance = I2C3;
 80014a2:	4dc1      	ldr	r5, [pc, #772]	; (80017a8 <main+0x328>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014a4:	f041 0110 	orr.w	r1, r1, #16
 80014a8:	6319      	str	r1, [r3, #48]	; 0x30
 80014aa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014ac:	f001 0110 	and.w	r1, r1, #16
 80014b0:	9100      	str	r1, [sp, #0]
 80014b2:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80014b4:	9401      	str	r4, [sp, #4]
 80014b6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014b8:	f041 0120 	orr.w	r1, r1, #32
 80014bc:	6319      	str	r1, [r3, #48]	; 0x30
 80014be:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014c0:	f001 0120 	and.w	r1, r1, #32
 80014c4:	9101      	str	r1, [sp, #4]
 80014c6:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80014c8:	9402      	str	r4, [sp, #8]
 80014ca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014cc:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80014d0:	6319      	str	r1, [r3, #48]	; 0x30
 80014d2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014d4:	f001 0180 	and.w	r1, r1, #128	; 0x80
 80014d8:	9102      	str	r1, [sp, #8]
 80014da:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80014dc:	9403      	str	r4, [sp, #12]
 80014de:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014e0:	f041 0104 	orr.w	r1, r1, #4
 80014e4:	6319      	str	r1, [r3, #48]	; 0x30
 80014e6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014e8:	f001 0104 	and.w	r1, r1, #4
 80014ec:	9103      	str	r1, [sp, #12]
 80014ee:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80014f0:	9404      	str	r4, [sp, #16]
 80014f2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014f4:	f041 0101 	orr.w	r1, r1, #1
 80014f8:	6319      	str	r1, [r3, #48]	; 0x30
 80014fa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014fc:	f001 0101 	and.w	r1, r1, #1
 8001500:	9104      	str	r1, [sp, #16]
 8001502:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001504:	9405      	str	r4, [sp, #20]
 8001506:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001508:	f041 0102 	orr.w	r1, r1, #2
 800150c:	6319      	str	r1, [r3, #48]	; 0x30
 800150e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001510:	f001 0102 	and.w	r1, r1, #2
 8001514:	9105      	str	r1, [sp, #20]
 8001516:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001518:	9406      	str	r4, [sp, #24]
 800151a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800151c:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8001520:	6319      	str	r1, [r3, #48]	; 0x30
 8001522:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001524:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8001528:	9106      	str	r1, [sp, #24]
 800152a:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800152c:	9407      	str	r4, [sp, #28]
 800152e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001530:	f041 0108 	orr.w	r1, r1, #8
 8001534:	6319      	str	r1, [r3, #48]	; 0x30
 8001536:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001538:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800153c:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800153e:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001540:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001542:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001544:	f007 fd32 	bl	8008fac <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8001548:	4896      	ldr	r0, [pc, #600]	; (80017a4 <main+0x324>)
 800154a:	2120      	movs	r1, #32
 800154c:	2201      	movs	r2, #1
 800154e:	f007 fd2d 	bl	8008fac <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001552:	4896      	ldr	r0, [pc, #600]	; (80017ac <main+0x32c>)
 8001554:	4622      	mov	r2, r4
 8001556:	2104      	movs	r1, #4
 8001558:	f007 fd28 	bl	8008fac <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 800155c:	4894      	ldr	r0, [pc, #592]	; (80017b0 <main+0x330>)
 800155e:	4622      	mov	r2, r4
 8001560:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8001564:	f007 fd22 	bl	8008fac <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8001568:	2201      	movs	r2, #1
 800156a:	4892      	ldr	r0, [pc, #584]	; (80017b4 <main+0x334>)
 800156c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001570:	f007 fd1c 	bl	8008fac <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001574:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001576:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 800157a:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800157c:	4889      	ldr	r0, [pc, #548]	; (80017a4 <main+0x324>)
 800157e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001580:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001584:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001588:	e9cd 4911 	strd	r4, r9, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800158c:	f007 fbca 	bl	8008d24 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001590:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001594:	4883      	ldr	r0, [pc, #524]	; (80017a4 <main+0x324>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001596:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 800159a:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800159c:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800159e:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80015a0:	f007 fbc0 	bl	8008d24 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80015a4:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80015a6:	487f      	ldr	r0, [pc, #508]	; (80017a4 <main+0x324>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80015a8:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80015aa:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015ac:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80015ae:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015b2:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015b6:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80015b8:	f007 fbb4 	bl	8008d24 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015bc:	487b      	ldr	r0, [pc, #492]	; (80017ac <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80015be:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015c2:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015c4:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015c8:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015ca:	f007 fbab 	bl	8008d24 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015ce:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015d2:	4877      	ldr	r0, [pc, #476]	; (80017b0 <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015d4:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015d6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015d8:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015dc:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015de:	f007 fba1 	bl	8008d24 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80015e2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015e6:	4874      	ldr	r0, [pc, #464]	; (80017b8 <main+0x338>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80015e8:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015ea:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 80015ec:	230f      	movs	r3, #15
 80015ee:	9313      	str	r3, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 80015f0:	f44f 5b00 	mov.w	fp, #8192	; 0x2000
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015f4:	e9cd 7410 	strd	r7, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015f8:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015fa:	f007 fb93 	bl	8008d24 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 80015fe:	486d      	ldr	r0, [pc, #436]	; (80017b4 <main+0x334>)
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 8001600:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 8001604:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001606:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800160a:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 800160c:	f007 fb8a 	bl	8008d24 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8001610:	4622      	mov	r2, r4
 8001612:	2105      	movs	r1, #5
 8001614:	2009      	movs	r0, #9
 8001616:	f007 f9f3 	bl	8008a00 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 800161a:	2009      	movs	r0, #9
 800161c:	f007 fa2e 	bl	8008a7c <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8001620:	4866      	ldr	r0, [pc, #408]	; (80017bc <main+0x33c>)
 8001622:	4b67      	ldr	r3, [pc, #412]	; (80017c0 <main+0x340>)
 8001624:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001626:	f007 fa37 	bl	8008a98 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 800162a:	4966      	ldr	r1, [pc, #408]	; (80017c4 <main+0x344>)
 800162c:	4b66      	ldr	r3, [pc, #408]	; (80017c8 <main+0x348>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800162e:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 8001630:	e9c5 1300 	strd	r1, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001634:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001638:	612b      	str	r3, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 800163a:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 800163e:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001642:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001646:	f007 ff17 	bl	8009478 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 800164a:	2110      	movs	r1, #16
 800164c:	4628      	mov	r0, r5
 800164e:	f009 f8df 	bl	800a810 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001652:	4621      	mov	r1, r4
 8001654:	4628      	mov	r0, r5
 8001656:	f009 f8fb 	bl	800a850 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800165a:	f8df c184 	ldr.w	ip, [pc, #388]	; 80017e0 <main+0x360>
  hspi5.Instance = SPI5;
 800165e:	485b      	ldr	r0, [pc, #364]	; (80017cc <main+0x34c>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001660:	4d5b      	ldr	r5, [pc, #364]	; (80017d0 <main+0x350>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001662:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001664:	f44f 7382 	mov.w	r3, #260	; 0x104
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001668:	f44f 7e00 	mov.w	lr, #512	; 0x200
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800166c:	e9c0 c300 	strd	ip, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001670:	2318      	movs	r3, #24
 8001672:	e9c0 e306 	strd	lr, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001676:	230a      	movs	r3, #10
 8001678:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800167a:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800167e:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001682:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001686:	f009 ffd5 	bl	800b634 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 800168a:	2307      	movs	r3, #7
 800168c:	9310      	str	r3, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 800168e:	9312      	str	r3, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001690:	4b50      	ldr	r3, [pc, #320]	; (80017d4 <main+0x354>)
 8001692:	602b      	str	r3, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001694:	2040      	movs	r0, #64	; 0x40
 8001696:	f44f 73c0 	mov.w	r3, #384	; 0x180
 800169a:	e9c5 0305 	strd	r0, r3, [r5, #20]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800169e:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80016a2:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80016a6:	f04f 0b10 	mov.w	fp, #16
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016aa:	a90f      	add	r1, sp, #60	; 0x3c
 80016ac:	4628      	mov	r0, r5
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80016ae:	622b      	str	r3, [r5, #32]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80016b0:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80016b4:	f8c5 a00c 	str.w	sl, [r5, #12]
  SdramTiming.RPDelay = 2;
 80016b8:	e9cd 9713 	strd	r9, r7, [sp, #76]	; 0x4c
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80016bc:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80016be:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 80016c0:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80016c4:	f8c5 b010 	str.w	fp, [r5, #16]
  SdramTiming.LoadToActiveDelay = 2;
 80016c8:	970f      	str	r7, [sp, #60]	; 0x3c
  SdramTiming.RCDDelay = 2;
 80016ca:	9715      	str	r7, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016cc:	f009 fec0 	bl	800b450 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016d0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016d4:	a90b      	add	r1, sp, #44	; 0x2c
 80016d6:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016d8:	e9cd 680b 	strd	r6, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 80016dc:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 80016e0:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016e2:	f009 fed7 	bl	800b494 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80016e6:	4630      	mov	r0, r6
 80016e8:	f007 f966 	bl	80089b8 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016ec:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016f0:	a90b      	add	r1, sp, #44	; 0x2c
 80016f2:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016f4:	e9cd 780b 	strd	r7, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 80016f8:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016fc:	f009 feca 	bl	800b494 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001700:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001704:	a90b      	add	r1, sp, #44	; 0x2c
 8001706:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001708:	e9cd 980b 	strd	r9, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 800170c:	e9cd a40d 	strd	sl, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001710:	f009 fec0 	bl	800b494 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001714:	f44f 730c 	mov.w	r3, #560	; 0x230
 8001718:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 800171a:	9b08      	ldr	r3, [sp, #32]
 800171c:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800171e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001722:	a90b      	add	r1, sp, #44	; 0x2c
 8001724:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001726:	e9cd a80b 	strd	sl, r8, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 800172a:	960d      	str	r6, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800172c:	f009 feb2 	bl	800b494 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001730:	4628      	mov	r0, r5
 8001732:	f240 516a 	movw	r1, #1386	; 0x56a
  hltdc.Instance = LTDC;
 8001736:	4d28      	ldr	r5, [pc, #160]	; (80017d8 <main+0x358>)
  htim1.Instance = TIM1;
 8001738:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 80017e4 <main+0x364>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 800173c:	f009 fec8 	bl	800b4d0 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001740:	2234      	movs	r2, #52	; 0x34
 8001742:	4621      	mov	r1, r4
 8001744:	a80f      	add	r0, sp, #60	; 0x3c
 8001746:	f026 ff00 	bl	802854a <memset>
  hltdc.Instance = LTDC;
 800174a:	4b24      	ldr	r3, [pc, #144]	; (80017dc <main+0x35c>)
 800174c:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 9;
 800174e:	2309      	movs	r3, #9
 8001750:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001752:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 8001754:	f8c5 9020 	str.w	r9, [r5, #32]
  hltdc.Init.AccumulatedHBP = 29;
 8001758:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 800175a:	f240 190d 	movw	r9, #269	; 0x10d
 800175e:	f240 1343 	movw	r3, #323	; 0x143
 8001762:	e9c5 9309 	strd	r9, r3, [r5, #36]	; 0x24
  hltdc.Init.Backcolor.Blue = 0;
 8001766:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.TotalHeigh = 327;
 8001768:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800176c:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 800176e:	f240 1a17 	movw	sl, #279	; 0x117
 8001772:	e9c5 a30b 	strd	sl, r3, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8001776:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001778:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800177c:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.Backcolor.Red = 0;
 8001780:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001784:	f009 f888 	bl	800a898 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 8001788:	23f0      	movs	r3, #240	; 0xf0
 800178a:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 800178c:	9319      	str	r3, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 800178e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8001792:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 8001794:	931a      	str	r3, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 8001796:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001798:	f44f 6c80 	mov.w	ip, #1024	; 0x400
 800179c:	e024      	b.n	80017e8 <main+0x368>
 800179e:	bf00      	nop
 80017a0:	40023800 	.word	0x40023800
 80017a4:	40021000 	.word	0x40021000
 80017a8:	20002674 	.word	0x20002674
 80017ac:	40020800 	.word	0x40020800
 80017b0:	40020c00 	.word	0x40020c00
 80017b4:	40021800 	.word	0x40021800
 80017b8:	40020000 	.word	0x40020000
 80017bc:	2000262c 	.word	0x2000262c
 80017c0:	40023000 	.word	0x40023000
 80017c4:	40005c00 	.word	0x40005c00
 80017c8:	000186a0 	.word	0x000186a0
 80017cc:	200027a4 	.word	0x200027a4
 80017d0:	20002770 	.word	0x20002770
 80017d4:	a0000140 	.word	0xa0000140
 80017d8:	200026c8 	.word	0x200026c8
 80017dc:	40016800 	.word	0x40016800
 80017e0:	40015000 	.word	0x40015000
 80017e4:	200027fc 	.word	0x200027fc
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80017e8:	4622      	mov	r2, r4
 80017ea:	a90f      	add	r1, sp, #60	; 0x3c
 80017ec:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 80017ee:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80017f0:	2305      	movs	r3, #5
 80017f2:	e9cd c316 	strd	ip, r3, [sp, #88]	; 0x58
  LcdDrv = &ili9341_drv;
 80017f6:	4d4b      	ldr	r5, [pc, #300]	; (8001924 <main+0x4a4>)
  pLayerCfg.WindowX0 = 0;
 80017f8:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.WindowY0 = 0;
 80017fa:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80017fc:	9713      	str	r7, [sp, #76]	; 0x4c
  pLayerCfg.Alpha0 = 0;
 80017fe:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8001800:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8001802:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8001806:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800180a:	f009 f91b 	bl	800aa44 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 800180e:	4b46      	ldr	r3, [pc, #280]	; (8001928 <main+0x4a8>)
 8001810:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001812:	681b      	ldr	r3, [r3, #0]
 8001814:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001816:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001818:	4d44      	ldr	r5, [pc, #272]	; (800192c <main+0x4ac>)
  LcdDrv->DisplayOff();
 800181a:	68db      	ldr	r3, [r3, #12]
 800181c:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 800181e:	4b44      	ldr	r3, [pc, #272]	; (8001930 <main+0x4b0>)
 8001820:	602b      	str	r3, [r5, #0]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001822:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001826:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800182a:	4628      	mov	r0, r5
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
 800182c:	e9c5 4701 	strd	r4, r7, [r5, #4]
  hdma2d.Init.OutputOffset = 0;
 8001830:	60ec      	str	r4, [r5, #12]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001832:	f007 f95b 	bl	8008aec <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001836:	4631      	mov	r1, r6
 8001838:	4628      	mov	r0, r5
 800183a:	f007 fa1d 	bl	8008c78 <HAL_DMA2D_ConfigLayer>
  htim1.Init.Period = 65535;
 800183e:	f64f 76ff 	movw	r6, #65535	; 0xffff
  htim1.Instance = TIM1;
 8001842:	4b3c      	ldr	r3, [pc, #240]	; (8001934 <main+0x4b4>)
  htim3.Instance = TIM3;
 8001844:	4d3c      	ldr	r5, [pc, #240]	; (8001938 <main+0x4b8>)
  htim1.Instance = TIM1;
 8001846:	f8c8 3000 	str.w	r3, [r8]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800184a:	4640      	mov	r0, r8
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 800184c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001850:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001854:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001858:	e9c8 4401 	strd	r4, r4, [r8, #4]
  htim1.Init.RepetitionCounter = 0;
 800185c:	e9c8 4404 	strd	r4, r4, [r8, #16]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001860:	9413      	str	r4, [sp, #76]	; 0x4c
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001862:	f8c8 4018 	str.w	r4, [r8, #24]
  htim1.Init.Period = 65535;
 8001866:	f8c8 600c 	str.w	r6, [r8, #12]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800186a:	f00a fad3 	bl	800be14 <HAL_TIM_Base_Init>
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 800186e:	a90f      	add	r1, sp, #60	; 0x3c
 8001870:	4640      	mov	r0, r8
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8001872:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8001876:	f00a fc47 	bl	800c108 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800187a:	a90b      	add	r1, sp, #44	; 0x2c
 800187c:	4640      	mov	r0, r8
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800187e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001882:	f00a fd7f 	bl	800c384 <HAL_TIMEx_MasterConfigSynchronization>
  htim3.Instance = TIM3;
 8001886:	4b2d      	ldr	r3, [pc, #180]	; (800193c <main+0x4bc>)
 8001888:	602b      	str	r3, [r5, #0]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800188a:	4628      	mov	r0, r5
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800188c:	e9c5 4401 	strd	r4, r4, [r5, #4]
  htim3.Init.Period = 65535;
 8001890:	60ee      	str	r6, [r5, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001892:	612c      	str	r4, [r5, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001894:	61ac      	str	r4, [r5, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001896:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800189a:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 800189e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 80018a2:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 80018a6:	9413      	str	r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80018a8:	9409      	str	r4, [sp, #36]	; 0x24
 80018aa:	940a      	str	r4, [sp, #40]	; 0x28
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80018ac:	f00a fab2 	bl	800be14 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018b0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80018b4:	a90b      	add	r1, sp, #44	; 0x2c
 80018b6:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018b8:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80018ba:	f00a fb75 	bl	800bfa8 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80018be:	a90f      	add	r1, sp, #60	; 0x3c
 80018c0:	4628      	mov	r0, r5
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 80018c2:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80018c6:	f00a fc1f 	bl	800c108 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80018ca:	a909      	add	r1, sp, #36	; 0x24
 80018cc:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80018ce:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80018d2:	f00a fd57 	bl	800c384 <HAL_TIMEx_MasterConfigSynchronization>
  MX_TouchGFX_Init();
 80018d6:	f7fe fe85 	bl	80005e4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 80018da:	f7fe fe81 	bl	80005e0 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 80018de:	f00a fe63 	bl	800c5a8 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 80018e2:	4a17      	ldr	r2, [pc, #92]	; (8001940 <main+0x4c0>)
 80018e4:	4639      	mov	r1, r7
 80018e6:	4658      	mov	r0, fp
 80018e8:	f00a ff98 	bl	800c81c <osMessageQueueNew>
 80018ec:	4b15      	ldr	r3, [pc, #84]	; (8001944 <main+0x4c4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018ee:	4a16      	ldr	r2, [pc, #88]	; (8001948 <main+0x4c8>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 80018f0:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018f2:	4621      	mov	r1, r4
 80018f4:	4815      	ldr	r0, [pc, #84]	; (800194c <main+0x4cc>)
 80018f6:	f00a fe83 	bl	800c600 <osThreadNew>
 80018fa:	4b15      	ldr	r3, [pc, #84]	; (8001950 <main+0x4d0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80018fc:	4a15      	ldr	r2, [pc, #84]	; (8001954 <main+0x4d4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018fe:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001900:	4621      	mov	r1, r4
 8001902:	4815      	ldr	r0, [pc, #84]	; (8001958 <main+0x4d8>)
 8001904:	f00a fe7c 	bl	800c600 <osThreadNew>
 8001908:	4b14      	ldr	r3, [pc, #80]	; (800195c <main+0x4dc>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800190a:	4a15      	ldr	r2, [pc, #84]	; (8001960 <main+0x4e0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800190c:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800190e:	4621      	mov	r1, r4
 8001910:	4814      	ldr	r0, [pc, #80]	; (8001964 <main+0x4e4>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001912:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001914:	f00a fe74 	bl	800c600 <osThreadNew>
 8001918:	4b13      	ldr	r3, [pc, #76]	; (8001968 <main+0x4e8>)
 800191a:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800191c:	f00a fe56 	bl	800c5cc <osKernelStart>
  while (1)
 8001920:	e7fe      	b.n	8001920 <main+0x4a0>
 8001922:	bf00      	nop
 8001924:	2000261c 	.word	0x2000261c
 8001928:	20000018 	.word	0x20000018
 800192c:	20002634 	.word	0x20002634
 8001930:	4002b000 	.word	0x4002b000
 8001934:	40010000 	.word	0x40010000
 8001938:	20002844 	.word	0x20002844
 800193c:	40000400 	.word	0x40000400
 8001940:	08029a24 	.word	0x08029a24
 8001944:	20002620 	.word	0x20002620
 8001948:	08029a60 	.word	0x08029a60
 800194c:	08001389 	.word	0x08001389
 8001950:	20002628 	.word	0x20002628
 8001954:	08029a00 	.word	0x08029a00
 8001958:	080005f5 	.word	0x080005f5
 800195c:	20002618 	.word	0x20002618
 8001960:	08029a3c 	.word	0x08029a3c
 8001964:	08001395 	.word	0x08001395
 8001968:	20002624 	.word	0x20002624

0800196c <IOE_Init>:
 800196c:	4770      	bx	lr
 800196e:	bf00      	nop

08001970 <IOE_ITConfig>:
 8001970:	4770      	bx	lr
 8001972:	bf00      	nop

08001974 <IOE_Write>:
{
 8001974:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001976:	4c09      	ldr	r4, [pc, #36]	; (800199c <IOE_Write+0x28>)
{
 8001978:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 800197a:	6824      	ldr	r4, [r4, #0]
 800197c:	9402      	str	r4, [sp, #8]
{
 800197e:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001980:	2301      	movs	r3, #1
 8001982:	f88d 4017 	strb.w	r4, [sp, #23]
 8001986:	f10d 0417 	add.w	r4, sp, #23
 800198a:	460a      	mov	r2, r1
 800198c:	9301      	str	r3, [sp, #4]
 800198e:	4601      	mov	r1, r0
 8001990:	9400      	str	r4, [sp, #0]
 8001992:	4803      	ldr	r0, [pc, #12]	; (80019a0 <IOE_Write+0x2c>)
 8001994:	f007 fe38 	bl	8009608 <HAL_I2C_Mem_Write>
}
 8001998:	b006      	add	sp, #24
 800199a:	bd10      	pop	{r4, pc}
 800199c:	2000000c 	.word	0x2000000c
 80019a0:	20002674 	.word	0x20002674

080019a4 <IOE_Read>:
{
 80019a4:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019a6:	4b0b      	ldr	r3, [pc, #44]	; (80019d4 <IOE_Read+0x30>)
{
 80019a8:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019aa:	681b      	ldr	r3, [r3, #0]
 80019ac:	9302      	str	r3, [sp, #8]
{
 80019ae:	4684      	mov	ip, r0
 80019b0:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019b2:	2301      	movs	r3, #1
 80019b4:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 80019b8:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019ba:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 80019be:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80019c2:	4661      	mov	r1, ip
 80019c4:	4804      	ldr	r0, [pc, #16]	; (80019d8 <IOE_Read+0x34>)
 80019c6:	f007 ff11 	bl	80097ec <HAL_I2C_Mem_Read>
}
 80019ca:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80019ce:	b007      	add	sp, #28
 80019d0:	f85d fb04 	ldr.w	pc, [sp], #4
 80019d4:	2000000c 	.word	0x2000000c
 80019d8:	20002674 	.word	0x20002674

080019dc <IOE_ReadMultiple>:
{
 80019dc:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80019de:	4c09      	ldr	r4, [pc, #36]	; (8001a04 <IOE_ReadMultiple+0x28>)
{
 80019e0:	b084      	sub	sp, #16
 80019e2:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80019e4:	6820      	ldr	r0, [r4, #0]
 80019e6:	9002      	str	r0, [sp, #8]
 80019e8:	e9cd 2300 	strd	r2, r3, [sp]
 80019ec:	4806      	ldr	r0, [pc, #24]	; (8001a08 <IOE_ReadMultiple+0x2c>)
 80019ee:	460a      	mov	r2, r1
 80019f0:	2301      	movs	r3, #1
 80019f2:	4661      	mov	r1, ip
 80019f4:	f007 fefa 	bl	80097ec <HAL_I2C_Mem_Read>
}
 80019f8:	3800      	subs	r0, #0
 80019fa:	bf18      	it	ne
 80019fc:	2001      	movne	r0, #1
 80019fe:	b004      	add	sp, #16
 8001a00:	bd10      	pop	{r4, pc}
 8001a02:	bf00      	nop
 8001a04:	2000000c 	.word	0x2000000c
 8001a08:	20002674 	.word	0x20002674

08001a0c <IOE_Delay>:
 8001a0c:	f006 bfd4 	b.w	80089b8 <HAL_Delay>

08001a10 <LCD_IO_Init>:
{
 8001a10:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a12:	4806      	ldr	r0, [pc, #24]	; (8001a2c <LCD_IO_Init+0x1c>)
 8001a14:	2200      	movs	r2, #0
 8001a16:	2104      	movs	r1, #4
 8001a18:	f007 fac8 	bl	8008fac <HAL_GPIO_WritePin>
}
 8001a1c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a20:	4802      	ldr	r0, [pc, #8]	; (8001a2c <LCD_IO_Init+0x1c>)
 8001a22:	2201      	movs	r2, #1
 8001a24:	2104      	movs	r1, #4
 8001a26:	f007 bac1 	b.w	8008fac <HAL_GPIO_WritePin>
 8001a2a:	bf00      	nop
 8001a2c:	40020800 	.word	0x40020800

08001a30 <LCD_IO_WriteData>:
{
 8001a30:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a32:	4d10      	ldr	r5, [pc, #64]	; (8001a74 <LCD_IO_WriteData+0x44>)
{
 8001a34:	b083      	sub	sp, #12
 8001a36:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a38:	2201      	movs	r2, #1
 8001a3a:	480f      	ldr	r0, [pc, #60]	; (8001a78 <LCD_IO_WriteData+0x48>)
 8001a3c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a40:	f007 fab4 	bl	8008fac <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a44:	4628      	mov	r0, r5
 8001a46:	2200      	movs	r2, #0
 8001a48:	2104      	movs	r1, #4
 8001a4a:	f007 faaf 	bl	8008fac <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a4e:	4b0b      	ldr	r3, [pc, #44]	; (8001a7c <LCD_IO_WriteData+0x4c>)
 8001a50:	480b      	ldr	r0, [pc, #44]	; (8001a80 <LCD_IO_WriteData+0x50>)
 8001a52:	681b      	ldr	r3, [r3, #0]
 8001a54:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001a58:	f10d 0106 	add.w	r1, sp, #6
 8001a5c:	2201      	movs	r2, #1
 8001a5e:	f009 fe4b 	bl	800b6f8 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a62:	2201      	movs	r2, #1
 8001a64:	2104      	movs	r1, #4
 8001a66:	4628      	mov	r0, r5
}
 8001a68:	b003      	add	sp, #12
 8001a6a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a6e:	f007 ba9d 	b.w	8008fac <HAL_GPIO_WritePin>
 8001a72:	bf00      	nop
 8001a74:	40020800 	.word	0x40020800
 8001a78:	40020c00 	.word	0x40020c00
 8001a7c:	20000010 	.word	0x20000010
 8001a80:	200027a4 	.word	0x200027a4

08001a84 <LCD_IO_WriteReg>:
{
 8001a84:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a86:	4d10      	ldr	r5, [pc, #64]	; (8001ac8 <LCD_IO_WriteReg+0x44>)
{
 8001a88:	b083      	sub	sp, #12
 8001a8a:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a8c:	2200      	movs	r2, #0
 8001a8e:	480f      	ldr	r0, [pc, #60]	; (8001acc <LCD_IO_WriteReg+0x48>)
 8001a90:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a94:	f007 fa8a 	bl	8008fac <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a98:	4628      	mov	r0, r5
 8001a9a:	2200      	movs	r2, #0
 8001a9c:	2104      	movs	r1, #4
 8001a9e:	f007 fa85 	bl	8008fac <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001aa2:	4b0b      	ldr	r3, [pc, #44]	; (8001ad0 <LCD_IO_WriteReg+0x4c>)
 8001aa4:	480b      	ldr	r0, [pc, #44]	; (8001ad4 <LCD_IO_WriteReg+0x50>)
 8001aa6:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001aa8:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001aac:	f10d 0106 	add.w	r1, sp, #6
 8001ab0:	2201      	movs	r2, #1
 8001ab2:	f009 fe21 	bl	800b6f8 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ab6:	2201      	movs	r2, #1
 8001ab8:	2104      	movs	r1, #4
 8001aba:	4628      	mov	r0, r5
}
 8001abc:	b003      	add	sp, #12
 8001abe:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ac2:	f007 ba73 	b.w	8008fac <HAL_GPIO_WritePin>
 8001ac6:	bf00      	nop
 8001ac8:	40020800 	.word	0x40020800
 8001acc:	40020c00 	.word	0x40020c00
 8001ad0:	20000010 	.word	0x20000010
 8001ad4:	200027a4 	.word	0x200027a4

08001ad8 <LCD_IO_ReadData>:
{
 8001ad8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001adc:	4e19      	ldr	r6, [pc, #100]	; (8001b44 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001ade:	4f1a      	ldr	r7, [pc, #104]	; (8001b48 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001ae0:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001b4c <LCD_IO_ReadData+0x74>
 8001ae4:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001b50 <LCD_IO_ReadData+0x78>
{
 8001ae8:	b083      	sub	sp, #12
 8001aea:	460c      	mov	r4, r1
 8001aec:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001aee:	2200      	movs	r2, #0
 8001af0:	4630      	mov	r0, r6
 8001af2:	2104      	movs	r1, #4
 8001af4:	f007 fa5a 	bl	8008fac <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001af8:	4638      	mov	r0, r7
 8001afa:	2200      	movs	r2, #0
 8001afc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001b00:	f007 fa54 	bl	8008fac <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001b04:	f8d9 3000 	ldr.w	r3, [r9]
 8001b08:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001b0c:	a901      	add	r1, sp, #4
 8001b0e:	2201      	movs	r2, #1
 8001b10:	4640      	mov	r0, r8
 8001b12:	f009 fdf1 	bl	800b6f8 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001b16:	f8d9 3000 	ldr.w	r3, [r9]
 8001b1a:	4622      	mov	r2, r4
 8001b1c:	a901      	add	r1, sp, #4
 8001b1e:	4640      	mov	r0, r8
 8001b20:	f00a f892 	bl	800bc48 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b24:	4638      	mov	r0, r7
 8001b26:	2201      	movs	r2, #1
 8001b28:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001b2c:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b2e:	f007 fa3d 	bl	8008fac <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001b32:	4630      	mov	r0, r6
 8001b34:	2201      	movs	r2, #1
 8001b36:	2104      	movs	r1, #4
 8001b38:	f007 fa38 	bl	8008fac <HAL_GPIO_WritePin>
}
 8001b3c:	4620      	mov	r0, r4
 8001b3e:	b003      	add	sp, #12
 8001b40:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001b44:	40020800 	.word	0x40020800
 8001b48:	40020c00 	.word	0x40020c00
 8001b4c:	20000010 	.word	0x20000010
 8001b50:	200027a4 	.word	0x200027a4

08001b54 <LCD_Delay>:
  HAL_Delay(Delay);
 8001b54:	f006 bf30 	b.w	80089b8 <HAL_Delay>

08001b58 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001b58:	4b03      	ldr	r3, [pc, #12]	; (8001b68 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001b5a:	6802      	ldr	r2, [r0, #0]
 8001b5c:	429a      	cmp	r2, r3
 8001b5e:	d000      	beq.n	8001b62 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001b60:	4770      	bx	lr
    HAL_IncTick();
 8001b62:	f006 bf17 	b.w	8008994 <HAL_IncTick>
 8001b66:	bf00      	nop
 8001b68:	40001000 	.word	0x40001000

08001b6c <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001b6c:	4770      	bx	lr
 8001b6e:	bf00      	nop

08001b70 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001b70:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001b72:	4b0e      	ldr	r3, [pc, #56]	; (8001bac <HAL_MspInit+0x3c>)
 8001b74:	2200      	movs	r2, #0
 8001b76:	9200      	str	r2, [sp, #0]
 8001b78:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001b7a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001b7e:	6459      	str	r1, [r3, #68]	; 0x44
 8001b80:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001b82:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8001b86:	9000      	str	r0, [sp, #0]
 8001b88:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001b8a:	9201      	str	r2, [sp, #4]
 8001b8c:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001b8e:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001b92:	6418      	str	r0, [r3, #64]	; 0x40
 8001b94:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b96:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001b9a:	9301      	str	r3, [sp, #4]
 8001b9c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001b9e:	210f      	movs	r1, #15
 8001ba0:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001ba4:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001ba6:	f006 bf2b 	b.w	8008a00 <HAL_NVIC_SetPriority>
 8001baa:	bf00      	nop
 8001bac:	40023800 	.word	0x40023800

08001bb0 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001bb0:	4b0b      	ldr	r3, [pc, #44]	; (8001be0 <HAL_CRC_MspInit+0x30>)
 8001bb2:	6802      	ldr	r2, [r0, #0]
 8001bb4:	429a      	cmp	r2, r3
 8001bb6:	d000      	beq.n	8001bba <HAL_CRC_MspInit+0xa>
 8001bb8:	4770      	bx	lr
{
 8001bba:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001bbc:	2200      	movs	r2, #0
 8001bbe:	9201      	str	r2, [sp, #4]
 8001bc0:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001bc4:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001bc8:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8001bcc:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001bd0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001bd2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001bd6:	9301      	str	r3, [sp, #4]
 8001bd8:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001bda:	b002      	add	sp, #8
 8001bdc:	4770      	bx	lr
 8001bde:	bf00      	nop
 8001be0:	40023000 	.word	0x40023000

08001be4 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8001be4:	4b0e      	ldr	r3, [pc, #56]	; (8001c20 <HAL_DMA2D_MspInit+0x3c>)
 8001be6:	6802      	ldr	r2, [r0, #0]
 8001be8:	429a      	cmp	r2, r3
 8001bea:	d000      	beq.n	8001bee <HAL_DMA2D_MspInit+0xa>
 8001bec:	4770      	bx	lr
{
 8001bee:	b500      	push	{lr}
 8001bf0:	b083      	sub	sp, #12
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001bf2:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001bf6:	2200      	movs	r2, #0
 8001bf8:	9201      	str	r2, [sp, #4]
 8001bfa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001bfc:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001c00:	6319      	str	r1, [r3, #48]	; 0x30
 8001c02:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c04:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001c08:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c0a:	205a      	movs	r0, #90	; 0x5a
 8001c0c:	2105      	movs	r1, #5
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001c0e:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c10:	f006 fef6 	bl	8008a00 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c14:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001c16:	b003      	add	sp, #12
 8001c18:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c1c:	f006 bf2e 	b.w	8008a7c <HAL_NVIC_EnableIRQ>
 8001c20:	4002b000 	.word	0x4002b000

08001c24 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001c24:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8001c28:	4b2e      	ldr	r3, [pc, #184]	; (8001ce4 <HAL_I2C_MspInit+0xc0>)
 8001c2a:	6802      	ldr	r2, [r0, #0]
{
 8001c2c:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c2e:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8001c30:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c32:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001c36:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8001c3a:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8001c3c:	d002      	beq.n	8001c44 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001c3e:	b00a      	add	sp, #40	; 0x28
 8001c40:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c44:	4d28      	ldr	r5, [pc, #160]	; (8001ce8 <HAL_I2C_MspInit+0xc4>)
 8001c46:	9401      	str	r4, [sp, #4]
 8001c48:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c4a:	4828      	ldr	r0, [pc, #160]	; (8001cec <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c4c:	f043 0304 	orr.w	r3, r3, #4
 8001c50:	632b      	str	r3, [r5, #48]	; 0x30
 8001c52:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001c54:	f003 0304 	and.w	r3, r3, #4
 8001c58:	9301      	str	r3, [sp, #4]
 8001c5a:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c5c:	9402      	str	r4, [sp, #8]
 8001c5e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001c60:	f043 0301 	orr.w	r3, r3, #1
 8001c64:	632b      	str	r3, [r5, #48]	; 0x30
 8001c66:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001c68:	f003 0301 	and.w	r3, r3, #1
 8001c6c:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001c6e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001c72:	f04f 0801 	mov.w	r8, #1
 8001c76:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c7a:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c7c:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001c7e:	2312      	movs	r3, #18
 8001c80:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001c84:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c88:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c8a:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c8c:	f007 f84a 	bl	8008d24 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c90:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001c92:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001c96:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c98:	4815      	ldr	r0, [pc, #84]	; (8001cf0 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c9a:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001c9c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001ca0:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ca4:	f007 f83e 	bl	8008d24 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001ca8:	9403      	str	r4, [sp, #12]
 8001caa:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001cac:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001cb0:	642b      	str	r3, [r5, #64]	; 0x40
 8001cb2:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001cb4:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001cb8:	4622      	mov	r2, r4
 8001cba:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001cbc:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001cbe:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001cc0:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001cc2:	f006 fe9d 	bl	8008a00 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8001cc6:	2048      	movs	r0, #72	; 0x48
 8001cc8:	f006 fed8 	bl	8008a7c <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001ccc:	6a2b      	ldr	r3, [r5, #32]
 8001cce:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001cd2:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001cd4:	6a2b      	ldr	r3, [r5, #32]
 8001cd6:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001cda:	622b      	str	r3, [r5, #32]
}
 8001cdc:	b00a      	add	sp, #40	; 0x28
 8001cde:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001ce2:	bf00      	nop
 8001ce4:	40005c00 	.word	0x40005c00
 8001ce8:	40023800 	.word	0x40023800
 8001cec:	40020800 	.word	0x40020800
 8001cf0:	40020000 	.word	0x40020000

08001cf4 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001cf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001cf8:	4604      	mov	r4, r0
 8001cfa:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cfc:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001cfe:	2230      	movs	r2, #48	; 0x30
 8001d00:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d02:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001d06:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8001d0a:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001d0c:	f026 fc1d 	bl	802854a <memset>
  if(hltdc->Instance==LTDC)
 8001d10:	4b67      	ldr	r3, [pc, #412]	; (8001eb0 <HAL_LTDC_MspInit+0x1bc>)
 8001d12:	6822      	ldr	r2, [r4, #0]
 8001d14:	429a      	cmp	r2, r3
 8001d16:	d002      	beq.n	8001d1e <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001d18:	b01a      	add	sp, #104	; 0x68
 8001d1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001d1e:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001d20:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001d22:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001d24:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d26:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001d28:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001d2c:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001d2e:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001d30:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d32:	f009 fa61 	bl	800b1f8 <HAL_RCCEx_PeriphCLKConfig>
 8001d36:	2800      	cmp	r0, #0
 8001d38:	f040 80b7 	bne.w	8001eaa <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d3c:	4b5d      	ldr	r3, [pc, #372]	; (8001eb4 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d3e:	485e      	ldr	r0, [pc, #376]	; (8001eb8 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d40:	2400      	movs	r4, #0
 8001d42:	9401      	str	r4, [sp, #4]
 8001d44:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d46:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001d4a:	645a      	str	r2, [r3, #68]	; 0x44
 8001d4c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d4e:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001d52:	9201      	str	r2, [sp, #4]
 8001d54:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001d56:	9402      	str	r4, [sp, #8]
 8001d58:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d5a:	f042 0220 	orr.w	r2, r2, #32
 8001d5e:	631a      	str	r2, [r3, #48]	; 0x30
 8001d60:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d62:	f002 0220 	and.w	r2, r2, #32
 8001d66:	9202      	str	r2, [sp, #8]
 8001d68:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d6a:	9403      	str	r4, [sp, #12]
 8001d6c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d6e:	f042 0201 	orr.w	r2, r2, #1
 8001d72:	631a      	str	r2, [r3, #48]	; 0x30
 8001d74:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d76:	f002 0201 	and.w	r2, r2, #1
 8001d7a:	9203      	str	r2, [sp, #12]
 8001d7c:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d7e:	9404      	str	r4, [sp, #16]
 8001d80:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d82:	f042 0202 	orr.w	r2, r2, #2
 8001d86:	631a      	str	r2, [r3, #48]	; 0x30
 8001d88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d8a:	f002 0202 	and.w	r2, r2, #2
 8001d8e:	9204      	str	r2, [sp, #16]
 8001d90:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001d92:	9405      	str	r4, [sp, #20]
 8001d94:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d96:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001d9a:	631a      	str	r2, [r3, #48]	; 0x30
 8001d9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d9e:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001da2:	9205      	str	r2, [sp, #20]
 8001da4:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001da6:	9406      	str	r4, [sp, #24]
 8001da8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001daa:	f042 0204 	orr.w	r2, r2, #4
 8001dae:	631a      	str	r2, [r3, #48]	; 0x30
 8001db0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001db2:	f002 0204 	and.w	r2, r2, #4
 8001db6:	9206      	str	r2, [sp, #24]
 8001db8:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001dba:	9407      	str	r4, [sp, #28]
 8001dbc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dbe:	f042 0208 	orr.w	r2, r2, #8
 8001dc2:	631a      	str	r2, [r3, #48]	; 0x30
 8001dc4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dc6:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001dca:	2600      	movs	r6, #0
 8001dcc:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001dce:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001dd0:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dd2:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001dd4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001dd8:	2302      	movs	r3, #2
 8001dda:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001dde:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001de2:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001de4:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001de6:	f006 ff9d 	bl	8008d24 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001dea:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001dec:	f641 0258 	movw	r2, #6232	; 0x1858
 8001df0:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001df2:	4832      	ldr	r0, [pc, #200]	; (8001ebc <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001df4:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001df6:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001dfa:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001dfe:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e02:	f006 ff8f 	bl	8008d24 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e06:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001e08:	2203      	movs	r2, #3
 8001e0a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e0c:	482c      	ldr	r0, [pc, #176]	; (8001ec0 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e0e:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001e12:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e16:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e1a:	f006 ff83 	bl	8008d24 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e1e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001e20:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8001e24:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e26:	4826      	ldr	r0, [pc, #152]	; (8001ec0 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e28:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001e2a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e2e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e32:	f006 ff77 	bl	8008d24 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e36:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001e38:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 8001e3c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e3e:	4821      	ldr	r0, [pc, #132]	; (8001ec4 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e40:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001e42:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e46:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e4a:	f006 ff6b 	bl	8008d24 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e4e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001e50:	22c0      	movs	r2, #192	; 0xc0
 8001e52:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e54:	481c      	ldr	r0, [pc, #112]	; (8001ec8 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e56:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001e58:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e5c:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e60:	f006 ff60 	bl	8008d24 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e64:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001e66:	2208      	movs	r2, #8
 8001e68:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e6a:	4818      	ldr	r0, [pc, #96]	; (8001ecc <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e6c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001e6e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e72:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e76:	f006 ff55 	bl	8008d24 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e7a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e7c:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e7e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e82:	4810      	ldr	r0, [pc, #64]	; (8001ec4 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e84:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e88:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e8c:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e90:	f006 ff48 	bl	8008d24 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001e94:	4622      	mov	r2, r4
 8001e96:	2105      	movs	r1, #5
 8001e98:	2058      	movs	r0, #88	; 0x58
 8001e9a:	f006 fdb1 	bl	8008a00 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001e9e:	2058      	movs	r0, #88	; 0x58
 8001ea0:	f006 fdec 	bl	8008a7c <HAL_NVIC_EnableIRQ>
}
 8001ea4:	b01a      	add	sp, #104	; 0x68
 8001ea6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 8001eaa:	f7ff fe5f 	bl	8001b6c <Error_Handler>
 8001eae:	e745      	b.n	8001d3c <HAL_LTDC_MspInit+0x48>
 8001eb0:	40016800 	.word	0x40016800
 8001eb4:	40023800 	.word	0x40023800
 8001eb8:	40021400 	.word	0x40021400
 8001ebc:	40020000 	.word	0x40020000
 8001ec0:	40020400 	.word	0x40020400
 8001ec4:	40021800 	.word	0x40021800
 8001ec8:	40020800 	.word	0x40020800
 8001ecc:	40020c00 	.word	0x40020c00

08001ed0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001ed0:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 8001ed2:	4a1b      	ldr	r2, [pc, #108]	; (8001f40 <HAL_SPI_MspInit+0x70>)
 8001ed4:	6801      	ldr	r1, [r0, #0]
{
 8001ed6:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ed8:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 8001eda:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001edc:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001ee0:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8001ee4:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 8001ee6:	d001      	beq.n	8001eec <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001ee8:	b008      	add	sp, #32
 8001eea:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001eec:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8001ef0:	9300      	str	r3, [sp, #0]
 8001ef2:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001ef4:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8001ef8:	6450      	str	r0, [r2, #68]	; 0x44
 8001efa:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001efc:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8001f00:	9000      	str	r0, [sp, #0]
 8001f02:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f04:	9301      	str	r3, [sp, #4]
 8001f06:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f08:	480e      	ldr	r0, [pc, #56]	; (8001f44 <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f0a:	f043 0320 	orr.w	r3, r3, #32
 8001f0e:	6313      	str	r3, [r2, #48]	; 0x30
 8001f10:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001f12:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8001f38 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f16:	f003 0320 	and.w	r3, r3, #32
 8001f1a:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f1c:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f1e:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f20:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001f22:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f26:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f2a:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f2c:	f006 fefa 	bl	8008d24 <HAL_GPIO_Init>
}
 8001f30:	b008      	add	sp, #32
 8001f32:	bd10      	pop	{r4, pc}
 8001f34:	f3af 8000 	nop.w
 8001f38:	00000380 	.word	0x00000380
 8001f3c:	00000002 	.word	0x00000002
 8001f40:	40015000 	.word	0x40015000
 8001f44:	40021400 	.word	0x40021400

08001f48 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM1)
 8001f48:	4a12      	ldr	r2, [pc, #72]	; (8001f94 <HAL_TIM_Base_MspInit+0x4c>)
 8001f4a:	6803      	ldr	r3, [r0, #0]
 8001f4c:	4293      	cmp	r3, r2
{
 8001f4e:	b082      	sub	sp, #8
  if(htim_base->Instance==TIM1)
 8001f50:	d012      	beq.n	8001f78 <HAL_TIM_Base_MspInit+0x30>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8001f52:	4a11      	ldr	r2, [pc, #68]	; (8001f98 <HAL_TIM_Base_MspInit+0x50>)
 8001f54:	4293      	cmp	r3, r2
 8001f56:	d001      	beq.n	8001f5c <HAL_TIM_Base_MspInit+0x14>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8001f58:	b002      	add	sp, #8
 8001f5a:	4770      	bx	lr
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001f5c:	4b0f      	ldr	r3, [pc, #60]	; (8001f9c <HAL_TIM_Base_MspInit+0x54>)
 8001f5e:	2200      	movs	r2, #0
 8001f60:	9201      	str	r2, [sp, #4]
 8001f62:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001f64:	f042 0202 	orr.w	r2, r2, #2
 8001f68:	641a      	str	r2, [r3, #64]	; 0x40
 8001f6a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f6c:	f003 0302 	and.w	r3, r3, #2
 8001f70:	9301      	str	r3, [sp, #4]
 8001f72:	9b01      	ldr	r3, [sp, #4]
}
 8001f74:	b002      	add	sp, #8
 8001f76:	4770      	bx	lr
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001f78:	4b08      	ldr	r3, [pc, #32]	; (8001f9c <HAL_TIM_Base_MspInit+0x54>)
 8001f7a:	2200      	movs	r2, #0
 8001f7c:	9200      	str	r2, [sp, #0]
 8001f7e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f80:	f042 0201 	orr.w	r2, r2, #1
 8001f84:	645a      	str	r2, [r3, #68]	; 0x44
 8001f86:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f88:	f003 0301 	and.w	r3, r3, #1
 8001f8c:	9300      	str	r3, [sp, #0]
 8001f8e:	9b00      	ldr	r3, [sp, #0]
}
 8001f90:	b002      	add	sp, #8
 8001f92:	4770      	bx	lr
 8001f94:	40010000 	.word	0x40010000
 8001f98:	40000400 	.word	0x40000400
 8001f9c:	40023800 	.word	0x40023800

08001fa0 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001fa0:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001fa2:	4b2b      	ldr	r3, [pc, #172]	; (8002050 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001fa4:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8001fa6:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001fa8:	2200      	movs	r2, #0
 8001faa:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8001fac:	2c00      	cmp	r4, #0
 8001fae:	d14c      	bne.n	800204a <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8001fb0:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fb2:	4a28      	ldr	r2, [pc, #160]	; (8002054 <HAL_SDRAM_MspInit+0xb4>)
 8001fb4:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8001fb6:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fb8:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fba:	4827      	ldr	r0, [pc, #156]	; (8002058 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fbc:	433b      	orrs	r3, r7
 8001fbe:	6393      	str	r3, [r2, #56]	; 0x38
 8001fc0:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001fc2:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fc4:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fc6:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001fc8:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fcc:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fce:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001fd0:	2302      	movs	r3, #2
 8001fd2:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fd6:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fda:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fdc:	f006 fea2 	bl	8008d24 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fe0:	481e      	ldr	r0, [pc, #120]	; (800205c <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001fe2:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fe4:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fe6:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001fe8:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fec:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ff0:	f006 fe98 	bl	8008d24 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001ff4:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ff8:	4819      	ldr	r0, [pc, #100]	; (8002060 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001ffa:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ffc:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ffe:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002002:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002006:	f006 fe8d 	bl	8008d24 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800200a:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800200e:	4815      	ldr	r0, [pc, #84]	; (8002064 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002010:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002012:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002014:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002018:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800201c:	f006 fe82 	bl	8008d24 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002020:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002024:	4810      	ldr	r0, [pc, #64]	; (8002068 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002026:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002028:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800202a:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800202e:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002032:	f006 fe77 	bl	8008d24 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002036:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002038:	480c      	ldr	r0, [pc, #48]	; (800206c <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800203a:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800203c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800203e:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002042:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002044:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002046:	f006 fe6d 	bl	8008d24 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 800204a:	b009      	add	sp, #36	; 0x24
 800204c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800204e:	bf00      	nop
 8002050:	2000288c 	.word	0x2000288c
 8002054:	40023800 	.word	0x40023800
 8002058:	40021400 	.word	0x40021400
 800205c:	40020800 	.word	0x40020800
 8002060:	40021800 	.word	0x40021800
 8002064:	40021000 	.word	0x40021000
 8002068:	40020c00 	.word	0x40020c00
 800206c:	40020400 	.word	0x40020400

08002070 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002070:	b570      	push	{r4, r5, r6, lr}
 8002072:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002074:	4b23      	ldr	r3, [pc, #140]	; (8002104 <HAL_InitTick+0x94>)
 8002076:	2200      	movs	r2, #0
 8002078:	9202      	str	r2, [sp, #8]
 800207a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800207c:	f042 0210 	orr.w	r2, r2, #16
 8002080:	641a      	str	r2, [r3, #64]	; 0x40
 8002082:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002084:	f003 0310 	and.w	r3, r3, #16
 8002088:	9302      	str	r3, [sp, #8]
{
 800208a:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800208c:	a901      	add	r1, sp, #4
 800208e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002090:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002092:	f009 f88f 	bl	800b1b4 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002096:	9b06      	ldr	r3, [sp, #24]
 8002098:	b9d3      	cbnz	r3, 80020d0 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 800209a:	f009 f87b 	bl	800b194 <HAL_RCC_GetPCLK1Freq>
 800209e:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80020a0:	4a19      	ldr	r2, [pc, #100]	; (8002108 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80020a2:	4c1a      	ldr	r4, [pc, #104]	; (800210c <HAL_InitTick+0x9c>)
 80020a4:	491a      	ldr	r1, [pc, #104]	; (8002110 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80020a6:	fba2 2303 	umull	r2, r3, r2, r3
 80020aa:	0c9b      	lsrs	r3, r3, #18
 80020ac:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 80020ae:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 80020b0:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80020b4:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80020b6:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 80020ba:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80020bc:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80020be:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80020c0:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 80020c2:	f009 fea7 	bl	800be14 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80020c6:	4606      	mov	r6, r0
 80020c8:	b130      	cbz	r0, 80020d8 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 80020ca:	4630      	mov	r0, r6
 80020cc:	b008      	add	sp, #32
 80020ce:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80020d0:	f009 f860 	bl	800b194 <HAL_RCC_GetPCLK1Freq>
 80020d4:	0043      	lsls	r3, r0, #1
 80020d6:	e7e3      	b.n	80020a0 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 80020d8:	4620      	mov	r0, r4
 80020da:	f009 ff29 	bl	800bf30 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80020de:	4606      	mov	r6, r0
 80020e0:	2800      	cmp	r0, #0
 80020e2:	d1f2      	bne.n	80020ca <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80020e4:	2036      	movs	r0, #54	; 0x36
 80020e6:	f006 fcc9 	bl	8008a7c <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80020ea:	2d0f      	cmp	r5, #15
 80020ec:	d901      	bls.n	80020f2 <HAL_InitTick+0x82>
        status = HAL_ERROR;
 80020ee:	2601      	movs	r6, #1
 80020f0:	e7eb      	b.n	80020ca <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 80020f2:	4632      	mov	r2, r6
 80020f4:	4629      	mov	r1, r5
 80020f6:	2036      	movs	r0, #54	; 0x36
 80020f8:	f006 fc82 	bl	8008a00 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80020fc:	4b05      	ldr	r3, [pc, #20]	; (8002114 <HAL_InitTick+0xa4>)
 80020fe:	601d      	str	r5, [r3, #0]
 8002100:	e7e3      	b.n	80020ca <HAL_InitTick+0x5a>
 8002102:	bf00      	nop
 8002104:	40023800 	.word	0x40023800
 8002108:	431bde83 	.word	0x431bde83
 800210c:	20002890 	.word	0x20002890
 8002110:	40001000 	.word	0x40001000
 8002114:	20000080 	.word	0x20000080

08002118 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002118:	4770      	bx	lr
 800211a:	bf00      	nop

0800211c <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800211c:	e7fe      	b.n	800211c <HardFault_Handler>
 800211e:	bf00      	nop

08002120 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002120:	e7fe      	b.n	8002120 <MemManage_Handler>
 8002122:	bf00      	nop

08002124 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002124:	e7fe      	b.n	8002124 <BusFault_Handler>
 8002126:	bf00      	nop

08002128 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002128:	e7fe      	b.n	8002128 <UsageFault_Handler>
 800212a:	bf00      	nop

0800212c <DebugMon_Handler>:
 800212c:	4770      	bx	lr
 800212e:	bf00      	nop

08002130 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8002130:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 8002132:	20c8      	movs	r0, #200	; 0xc8
 8002134:	f006 fc40 	bl	80089b8 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8002138:	4804      	ldr	r0, [pc, #16]	; (800214c <EXTI3_IRQHandler+0x1c>)
 800213a:	2200      	movs	r2, #0
 800213c:	2120      	movs	r1, #32
 800213e:	f006 ff35 	bl	8008fac <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8002142:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8002146:	2008      	movs	r0, #8
 8002148:	f006 bf40 	b.w	8008fcc <HAL_GPIO_EXTI_IRQHandler>
 800214c:	40021000 	.word	0x40021000

08002150 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002150:	4801      	ldr	r0, [pc, #4]	; (8002158 <TIM6_DAC_IRQHandler+0x8>)
 8002152:	f00a b86d 	b.w	800c230 <HAL_TIM_IRQHandler>
 8002156:	bf00      	nop
 8002158:	20002890 	.word	0x20002890

0800215c <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 800215c:	4801      	ldr	r0, [pc, #4]	; (8002164 <I2C3_EV_IRQHandler+0x8>)
 800215e:	f007 be95 	b.w	8009e8c <HAL_I2C_EV_IRQHandler>
 8002162:	bf00      	nop
 8002164:	20002674 	.word	0x20002674

08002168 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002168:	4801      	ldr	r0, [pc, #4]	; (8002170 <LTDC_IRQHandler+0x8>)
 800216a:	f008 bc09 	b.w	800a980 <HAL_LTDC_IRQHandler>
 800216e:	bf00      	nop
 8002170:	200026c8 	.word	0x200026c8

08002174 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002174:	4801      	ldr	r0, [pc, #4]	; (800217c <DMA2D_IRQHandler+0x8>)
 8002176:	f006 bceb 	b.w	8008b50 <HAL_DMA2D_IRQHandler>
 800217a:	bf00      	nop
 800217c:	20002634 	.word	0x20002634

08002180 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002180:	2001      	movs	r0, #1
 8002182:	4770      	bx	lr

08002184 <_kill>:

int _kill(int pid, int sig)
{
 8002184:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002186:	f026 fad9 	bl	802873c <__errno>
 800218a:	2316      	movs	r3, #22
 800218c:	6003      	str	r3, [r0, #0]
	return -1;
}
 800218e:	f04f 30ff 	mov.w	r0, #4294967295
 8002192:	bd08      	pop	{r3, pc}

08002194 <_exit>:

void _exit (int status)
{
 8002194:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002196:	f026 fad1 	bl	802873c <__errno>
 800219a:	2316      	movs	r3, #22
 800219c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800219e:	e7fe      	b.n	800219e <_exit+0xa>

080021a0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80021a0:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021a2:	1e16      	subs	r6, r2, #0
 80021a4:	dd07      	ble.n	80021b6 <_read+0x16>
 80021a6:	460c      	mov	r4, r1
 80021a8:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 80021aa:	f3af 8000 	nop.w
 80021ae:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021b2:	42a5      	cmp	r5, r4
 80021b4:	d1f9      	bne.n	80021aa <_read+0xa>
	}

return len;
}
 80021b6:	4630      	mov	r0, r6
 80021b8:	bd70      	pop	{r4, r5, r6, pc}
 80021ba:	bf00      	nop

080021bc <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80021bc:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021be:	1e16      	subs	r6, r2, #0
 80021c0:	dd07      	ble.n	80021d2 <_write+0x16>
 80021c2:	460c      	mov	r4, r1
 80021c4:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 80021c6:	f814 0b01 	ldrb.w	r0, [r4], #1
 80021ca:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021ce:	42ac      	cmp	r4, r5
 80021d0:	d1f9      	bne.n	80021c6 <_write+0xa>
	}
	return len;
}
 80021d2:	4630      	mov	r0, r6
 80021d4:	bd70      	pop	{r4, r5, r6, pc}
 80021d6:	bf00      	nop

080021d8 <_close>:

int _close(int file)
{
	return -1;
}
 80021d8:	f04f 30ff 	mov.w	r0, #4294967295
 80021dc:	4770      	bx	lr
 80021de:	bf00      	nop

080021e0 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80021e0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80021e4:	604b      	str	r3, [r1, #4]
	return 0;
}
 80021e6:	2000      	movs	r0, #0
 80021e8:	4770      	bx	lr
 80021ea:	bf00      	nop

080021ec <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80021ec:	2001      	movs	r0, #1
 80021ee:	4770      	bx	lr

080021f0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80021f0:	2000      	movs	r0, #0
 80021f2:	4770      	bx	lr

080021f4 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80021f4:	4a0b      	ldr	r2, [pc, #44]	; (8002224 <_sbrk+0x30>)
{
 80021f6:	b508      	push	{r3, lr}
 80021f8:	4603      	mov	r3, r0
	if (heap_end == 0)
 80021fa:	6810      	ldr	r0, [r2, #0]
 80021fc:	b128      	cbz	r0, 800220a <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 80021fe:	4403      	add	r3, r0
 8002200:	4669      	mov	r1, sp
 8002202:	428b      	cmp	r3, r1
 8002204:	d807      	bhi.n	8002216 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8002206:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8002208:	bd08      	pop	{r3, pc}
		heap_end = &end;
 800220a:	4807      	ldr	r0, [pc, #28]	; (8002228 <_sbrk+0x34>)
 800220c:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 800220e:	4403      	add	r3, r0
 8002210:	4669      	mov	r1, sp
 8002212:	428b      	cmp	r3, r1
 8002214:	d9f7      	bls.n	8002206 <_sbrk+0x12>
		errno = ENOMEM;
 8002216:	f026 fa91 	bl	802873c <__errno>
 800221a:	230c      	movs	r3, #12
 800221c:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 800221e:	f04f 30ff 	mov.w	r0, #4294967295
}
 8002222:	bd08      	pop	{r3, pc}
 8002224:	200028d8 	.word	0x200028d8
 8002228:	200143f8 	.word	0x200143f8

0800222c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800222c:	4770      	bx	lr

0800222e <_ZN23ApplicationFontProviderD0Ev>:
 800222e:	b510      	push	{r4, lr}
 8002230:	2104      	movs	r1, #4
 8002232:	4604      	mov	r4, r0
 8002234:	f025 f993 	bl	802755e <_ZdlPvj>
 8002238:	4620      	mov	r0, r4
 800223a:	bd10      	pop	{r4, pc}

0800223c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800223c:	b508      	push	{r3, lr}
    switch (typography)
 800223e:	2903      	cmp	r1, #3
 8002240:	d813      	bhi.n	800226a <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8002242:	e8df f001 	tbb	[pc, r1]
 8002246:	0602      	.short	0x0602
 8002248:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800224a:	f005 fc79 	bl	8007b40 <_ZN17TypedTextDatabase8getFontsEv>
 800224e:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002250:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002252:	f005 fc75 	bl	8007b40 <_ZN17TypedTextDatabase8getFontsEv>
 8002256:	6840      	ldr	r0, [r0, #4]
 8002258:	e7fa      	b.n	8002250 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800225a:	f005 fc71 	bl	8007b40 <_ZN17TypedTextDatabase8getFontsEv>
 800225e:	6880      	ldr	r0, [r0, #8]
 8002260:	e7f6      	b.n	8002250 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002262:	f005 fc6d 	bl	8007b40 <_ZN17TypedTextDatabase8getFontsEv>
 8002266:	68c0      	ldr	r0, [r0, #12]
 8002268:	e7f2      	b.n	8002250 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 800226a:	2000      	movs	r0, #0
 800226c:	e7f0      	b.n	8002250 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002270 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002270:	4800      	ldr	r0, [pc, #0]	; (8002274 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002272:	4770      	bx	lr
 8002274:	08029a98 	.word	0x08029a98

08002278 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002278:	200d      	movs	r0, #13
 800227a:	4770      	bx	lr

0800227c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800227c:	b513      	push	{r0, r1, r4, lr}
 800227e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002280:	b151      	cbz	r1, 8002298 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002282:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002284:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002286:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800228a:	aa01      	add	r2, sp, #4
 800228c:	689c      	ldr	r4, [r3, #8]
 800228e:	f10d 0303 	add.w	r3, sp, #3
 8002292:	47a0      	blx	r4
        return glyph;
    }
 8002294:	b002      	add	sp, #8
 8002296:	bd10      	pop	{r4, pc}
            return 0;
 8002298:	4608      	mov	r0, r1
 800229a:	e7fb      	b.n	8002294 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800229c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800229c:	89c0      	ldrh	r0, [r0, #14]
 800229e:	4770      	bx	lr

080022a0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80022a0:	8a00      	ldrh	r0, [r0, #16]
 80022a2:	4770      	bx	lr

080022a4 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 80022a4:	88c0      	ldrh	r0, [r0, #6]
 80022a6:	4770      	bx	lr

080022a8 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 80022a8:	8880      	ldrh	r0, [r0, #4]
 80022aa:	4770      	bx	lr

080022ac <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80022ac:	7a80      	ldrb	r0, [r0, #10]
    }
 80022ae:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80022b2:	4770      	bx	lr

080022b4 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80022b4:	7a80      	ldrb	r0, [r0, #10]
    }
 80022b6:	09c0      	lsrs	r0, r0, #7
 80022b8:	4770      	bx	lr

080022ba <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80022ba:	4770      	bx	lr

080022bc <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80022bc:	4770      	bx	lr

080022be <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80022be:	4770      	bx	lr

080022c0 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80022c0:	4770      	bx	lr

080022c2 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80022c2:	4770      	bx	lr

080022c4 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80022c4:	4770      	bx	lr

080022c6 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 80022c6:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 80022c8:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 80022ca:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 80022cc:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80022ce:	466d      	mov	r5, sp
 80022d0:	4601      	mov	r1, r0
 80022d2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 80022d6:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80022d8:	4628      	mov	r0, r5
 80022da:	4798      	blx	r3
 80022dc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80022e0:	343c      	adds	r4, #60	; 0x3c
 80022e2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80022e6:	b005      	add	sp, #20
 80022e8:	bd30      	pop	{r4, r5, pc}

080022ea <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80022ea:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80022ec:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80022ee:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80022f0:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80022f2:	466d      	mov	r5, sp
 80022f4:	4601      	mov	r1, r0
 80022f6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80022fa:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80022fc:	4628      	mov	r0, r5
 80022fe:	4798      	blx	r3
 8002300:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002304:	343c      	adds	r4, #60	; 0x3c
 8002306:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800230a:	b005      	add	sp, #20
 800230c:	bd30      	pop	{r4, r5, pc}

0800230e <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800230e:	2200      	movs	r2, #0
 8002310:	8002      	strh	r2, [r0, #0]
 8002312:	8042      	strh	r2, [r0, #2]
 8002314:	8082      	strh	r2, [r0, #4]
 8002316:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002318:	4770      	bx	lr

0800231a <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800231a:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800231e:	4770      	bx	lr

08002320 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002320:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002322:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002324:	4604      	mov	r4, r0
        setX(x);
 8002326:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002328:	4615      	mov	r5, r2
        setX(x);
 800232a:	4798      	blx	r3
        setBaselineY(baselineY);
 800232c:	6823      	ldr	r3, [r4, #0]
 800232e:	4629      	mov	r1, r5
 8002330:	4620      	mov	r0, r4
 8002332:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002334:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002338:	4718      	bx	r3

0800233a <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 800233a:	2000      	movs	r0, #0
 800233c:	4770      	bx	lr

0800233e <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 800233e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002340:	4770      	bx	lr

08002342 <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 8002342:	4770      	bx	lr

08002344 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002344:	4770      	bx	lr

08002346 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002346:	4770      	bx	lr

08002348 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8002348:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 800234a:	68c2      	ldr	r2, [r0, #12]
 800234c:	6844      	ldr	r4, [r0, #4]
 800234e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002350:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002352:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002356:	07d2      	lsls	r2, r2, #31
 8002358:	bf48      	it	mi
 800235a:	5962      	ldrmi	r2, [r4, r5]
 800235c:	689b      	ldr	r3, [r3, #8]
    }
 800235e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002360:	bf48      	it	mi
 8002362:	58d3      	ldrmi	r3, [r2, r3]
 8002364:	4718      	bx	r3

08002366 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002366:	6843      	ldr	r3, [r0, #4]
 8002368:	b12b      	cbz	r3, 8002376 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800236a:	6883      	ldr	r3, [r0, #8]
 800236c:	b92b      	cbnz	r3, 800237a <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800236e:	68c0      	ldr	r0, [r0, #12]
 8002370:	f000 0001 	and.w	r0, r0, #1
 8002374:	4770      	bx	lr
 8002376:	4618      	mov	r0, r3
 8002378:	4770      	bx	lr
 800237a:	2001      	movs	r0, #1
    }
 800237c:	4770      	bx	lr

0800237e <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800237e:	b510      	push	{r4, lr}
    }
 8002380:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002382:	4604      	mov	r4, r0
    }
 8002384:	f025 f8eb 	bl	802755e <_ZdlPvj>
 8002388:	4620      	mov	r0, r4
 800238a:	bd10      	pop	{r4, pc}

0800238c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800238c:	b510      	push	{r4, lr}
 800238e:	214c      	movs	r1, #76	; 0x4c
 8002390:	4604      	mov	r4, r0
 8002392:	f025 f8e4 	bl	802755e <_ZdlPvj>
 8002396:	4620      	mov	r0, r4
 8002398:	bd10      	pop	{r4, pc}

0800239a <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800239a:	b510      	push	{r4, lr}
 800239c:	2110      	movs	r1, #16
 800239e:	4604      	mov	r4, r0
 80023a0:	f025 f8dd 	bl	802755e <_ZdlPvj>
 80023a4:	4620      	mov	r0, r4
 80023a6:	bd10      	pop	{r4, pc}

080023a8 <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 80023a8:	b510      	push	{r4, lr}
 80023aa:	4b03      	ldr	r3, [pc, #12]	; (80023b8 <_ZN19CalibrationViewBaseD1Ev+0x10>)
 80023ac:	6003      	str	r3, [r0, #0]
 80023ae:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80023b0:	f010 fe74 	bl	801309c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80023b4:	4620      	mov	r0, r4
 80023b6:	bd10      	pop	{r4, pc}
 80023b8:	08029e04 	.word	0x08029e04

080023bc <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 80023bc:	b507      	push	{r0, r1, r2, lr}
 80023be:	4b07      	ldr	r3, [pc, #28]	; (80023dc <_ZN19CalibrationViewBaseD0Ev+0x20>)
 80023c0:	6003      	str	r3, [r0, #0]
 80023c2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80023c4:	f010 fe6a 	bl	801309c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80023c8:	9801      	ldr	r0, [sp, #4]
 80023ca:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80023ce:	f025 f8c6 	bl	802755e <_ZdlPvj>
 80023d2:	9801      	ldr	r0, [sp, #4]
 80023d4:	b003      	add	sp, #12
 80023d6:	f85d fb04 	ldr.w	pc, [sp], #4
 80023da:	bf00      	nop
 80023dc:	08029e04 	.word	0x08029e04

080023e0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 80023e0:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 80023e2:	f7fe ff47 	bl	8001274 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80023e6:	bd08      	pop	{r3, pc}

080023e8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80023e8:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80023ea:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80023ec:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80023ee:	4b12      	ldr	r3, [pc, #72]	; (8002438 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80023f0:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80023f2:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80023f4:	b28d      	uxth	r5, r1
 80023f6:	b92b      	cbnz	r3, 8002404 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80023f8:	4b10      	ldr	r3, [pc, #64]	; (800243c <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80023fa:	4a11      	ldr	r2, [pc, #68]	; (8002440 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80023fc:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80023fe:	4811      	ldr	r0, [pc, #68]	; (8002444 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002400:	f025 fe9e 	bl	8028140 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002404:	4910      	ldr	r1, [pc, #64]	; (8002448 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002406:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002408:	8809      	ldrh	r1, [r1, #0]
 800240a:	4291      	cmp	r1, r2
 800240c:	d803      	bhi.n	8002416 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800240e:	4b0f      	ldr	r3, [pc, #60]	; (800244c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002410:	4a0b      	ldr	r2, [pc, #44]	; (8002440 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002412:	216d      	movs	r1, #109	; 0x6d
 8002414:	e7f3      	b.n	80023fe <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002416:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800241a:	4b0d      	ldr	r3, [pc, #52]	; (8002450 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800241c:	681b      	ldr	r3, [r3, #0]
 800241e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002422:	6803      	ldr	r3, [r0, #0]
 8002424:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002426:	4798      	blx	r3
 8002428:	1a28      	subs	r0, r5, r0
 800242a:	b201      	sxth	r1, r0
 800242c:	4633      	mov	r3, r6
 800242e:	4620      	mov	r0, r4
    }
 8002430:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002434:	4718      	bx	r3
 8002436:	bf00      	nop
 8002438:	20013814 	.word	0x20013814
 800243c:	08029b9c 	.word	0x08029b9c
 8002440:	08029bde 	.word	0x08029bde
 8002444:	08029c19 	.word	0x08029c19
 8002448:	20013818 	.word	0x20013818
 800244c:	08029c60 	.word	0x08029c60
 8002450:	2001381c 	.word	0x2001381c

08002454 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8002454:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8002456:	f500 7310 	add.w	r3, r0, #576	; 0x240
 800245a:	4299      	cmp	r1, r3
{
 800245c:	4604      	mov	r4, r0
 800245e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8002460:	d103      	bne.n	800246a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002462:	f012 fb1d 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002466:	f001 f921 	bl	80036ac <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 800246a:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800246e:	429d      	cmp	r5, r3
 8002470:	d103      	bne.n	800247a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8002472:	f012 fb15 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 8002476:	f001 f9d9 	bl	800382c <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800247a:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800247e:	42a5      	cmp	r5, r4
 8002480:	d105      	bne.n	800248e <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8002482:	f012 fb0d 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Calibration_Hall
        //Go to Calibration_Hall with screen transition towards East
        application().gotoCalibration_HallScreenWipeTransitionEast();
    }
}
 8002486:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCalibration_HallScreenWipeTransitionEast();
 800248a:	f001 b9df 	b.w	800384c <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>
}
 800248e:	bd38      	pop	{r3, r4, r5, pc}

08002490 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002490:	2200      	movs	r2, #0
 8002492:	f04f 31ff 	mov.w	r1, #4294967295
 8002496:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 800249a:	6082      	str	r2, [r0, #8]
    }
 800249c:	4770      	bx	lr

0800249e <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800249e:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80024a0:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80024a2:	4604      	mov	r4, r0
        setX(x);
 80024a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 80024a6:	4615      	mov	r5, r2
        setX(x);
 80024a8:	4798      	blx	r3
        setY(y);
 80024aa:	6823      	ldr	r3, [r4, #0]
 80024ac:	4629      	mov	r1, r5
 80024ae:	4620      	mov	r0, r4
 80024b0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 80024b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80024b6:	4718      	bx	r3

080024b8 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80024b8:	b570      	push	{r4, r5, r6, lr}
 80024ba:	4604      	mov	r4, r0
 80024bc:	461d      	mov	r5, r3
 80024be:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 80024c2:	f7ff ffec 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80024c6:	6823      	ldr	r3, [r4, #0]
 80024c8:	4629      	mov	r1, r5
 80024ca:	4620      	mov	r0, r4
 80024cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80024ce:	4798      	blx	r3
        setHeight(height);
 80024d0:	6823      	ldr	r3, [r4, #0]
 80024d2:	4631      	mov	r1, r6
 80024d4:	4620      	mov	r0, r4
 80024d6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80024d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80024dc:	4718      	bx	r3
	...

080024e0 <_ZN8touchgfx6WidgetC1Ev>:
 80024e0:	2200      	movs	r2, #0
 80024e2:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80024e6:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80024ea:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80024ee:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 80024f2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80024f6:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80024f8:	4a01      	ldr	r2, [pc, #4]	; (8002500 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80024fa:	6002      	str	r2, [r0, #0]
 80024fc:	4770      	bx	lr
 80024fe:	bf00      	nop
 8002500:	08029ce4 	.word	0x08029ce4

08002504 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002504:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002506:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002508:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800250a:	2100      	movs	r1, #0
 800250c:	f026 f81d 	bl	802854a <memset>
 8002510:	4620      	mov	r0, r4
 8002512:	f7ff ffe5 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 8002516:	4b0a      	ldr	r3, [pc, #40]	; (8002540 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002518:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 800251a:	4b0a      	ldr	r3, [pc, #40]	; (8002544 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 800251c:	62a3      	str	r3, [r4, #40]	; 0x28
 800251e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002522:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002524:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002528:	2300      	movs	r3, #0
 800252a:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800252e:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002532:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002536:	8723      	strh	r3, [r4, #56]	; 0x38
 8002538:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 800253a:	4620      	mov	r0, r4
 800253c:	bd10      	pop	{r4, pc}
 800253e:	bf00      	nop
 8002540:	0802c5fc 	.word	0x0802c5fc
 8002544:	08029d4c 	.word	0x08029d4c

08002548 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002548:	4b1a      	ldr	r3, [pc, #104]	; (80025b4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 800254a:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 800254c:	881b      	ldrh	r3, [r3, #0]
 800254e:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002550:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002552:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002554:	d92b      	bls.n	80025ae <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002556:	4b18      	ldr	r3, [pc, #96]	; (80025b8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002558:	681b      	ldr	r3, [r3, #0]
 800255a:	b92b      	cbnz	r3, 8002568 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 800255c:	4b17      	ldr	r3, [pc, #92]	; (80025bc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 800255e:	4a18      	ldr	r2, [pc, #96]	; (80025c0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002560:	4818      	ldr	r0, [pc, #96]	; (80025c4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002562:	216c      	movs	r1, #108	; 0x6c
 8002564:	f025 fdec 	bl	8028140 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002568:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800256c:	4b16      	ldr	r3, [pc, #88]	; (80025c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800256e:	681b      	ldr	r3, [r3, #0]
 8002570:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002574:	4b15      	ldr	r3, [pc, #84]	; (80025cc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002576:	6818      	ldr	r0, [r3, #0]
 8002578:	f005 fad2 	bl	8007b20 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800257c:	682b      	ldr	r3, [r5, #0]
 800257e:	9001      	str	r0, [sp, #4]
 8002580:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002582:	4628      	mov	r0, r5
 8002584:	4798      	blx	r3
 8002586:	682b      	ldr	r3, [r5, #0]
 8002588:	9901      	ldr	r1, [sp, #4]
 800258a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800258c:	4604      	mov	r4, r0
 800258e:	4628      	mov	r0, r5
 8002590:	4798      	blx	r3
 8002592:	682b      	ldr	r3, [r5, #0]
 8002594:	9901      	ldr	r1, [sp, #4]
 8002596:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002598:	fb14 f400 	smulbb	r4, r4, r0
 800259c:	4628      	mov	r0, r5
 800259e:	4798      	blx	r3
 80025a0:	b2a4      	uxth	r4, r4
 80025a2:	1823      	adds	r3, r4, r0
 80025a4:	b21b      	sxth	r3, r3
 80025a6:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 80025aa:	b002      	add	sp, #8
 80025ac:	bd70      	pop	{r4, r5, r6, pc}
 80025ae:	2300      	movs	r3, #0
 80025b0:	e7f9      	b.n	80025a6 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 80025b2:	bf00      	nop
 80025b4:	20013818 	.word	0x20013818
 80025b8:	20013814 	.word	0x20013814
 80025bc:	08029b9c 	.word	0x08029b9c
 80025c0:	08029bde 	.word	0x08029bde
 80025c4:	08029c19 	.word	0x08029c19
 80025c8:	2001381c 	.word	0x2001381c
 80025cc:	20013820 	.word	0x20013820

080025d0 <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 80025d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80025d4:	ed2d 8b06 	vpush	{d8-d10}
 80025d8:	4604      	mov	r4, r0
 80025da:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 80025dc:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 80025de:	2500      	movs	r5, #0
 80025e0:	f013 fede 	bl	80163a0 <_ZN8touchgfx6ScreenC1Ev>
 80025e4:	4b66      	ldr	r3, [pc, #408]	; (8002780 <_ZN19CalibrationViewBaseC1Ev+0x1b0>)
 80025e6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80025e8:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80025ec:	2226      	movs	r2, #38	; 0x26
 80025ee:	4629      	mov	r1, r5
 80025f0:	4658      	mov	r0, fp
 80025f2:	f025 ffaa 	bl	802854a <memset>
 80025f6:	4658      	mov	r0, fp
 80025f8:	f7ff ff72 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 80025fc:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8002600:	26ff      	movs	r6, #255	; 0xff
 8002602:	4b60      	ldr	r3, [pc, #384]	; (8002784 <_ZN19CalibrationViewBaseC1Ev+0x1b4>)
 8002604:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8002606:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002608:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800260c:	4629      	mov	r1, r5
 800260e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002612:	4650      	mov	r0, sl
        : color(col)
 8002614:	66a5      	str	r5, [r4, #104]	; 0x68
 8002616:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800261a:	f025 ff96 	bl	802854a <memset>
 800261e:	4650      	mov	r0, sl
 8002620:	f7ff ff5e 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 8002624:	4b58      	ldr	r3, [pc, #352]	; (8002788 <_ZN19CalibrationViewBaseC1Ev+0x1b8>)
 8002626:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002628:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800262c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 8002630:	a90a      	add	r1, sp, #40	; 0x28
 8002632:	4650      	mov	r0, sl
 8002634:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8002638:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800263c:	f00f fd27 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8002640:	4648      	mov	r0, r9
 8002642:	f7ff ff5f 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8002646:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 800264a:	4b50      	ldr	r3, [pc, #320]	; (800278c <_ZN19CalibrationViewBaseC1Ev+0x1bc>)
 800264c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8002650:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8002654:	4638      	mov	r0, r7
 8002656:	f00e fbe3 	bl	8010e20 <_ZN8touchgfx4LineC1Ev>
 800265a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800265e:	4618      	mov	r0, r3
 8002660:	9303      	str	r3, [sp, #12]
 8002662:	f7fe fe2d 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002666:	4b4a      	ldr	r3, [pc, #296]	; (8002790 <_ZN19CalibrationViewBaseC1Ev+0x1c0>)
 8002668:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800266c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8002670:	3324      	adds	r3, #36	; 0x24
 8002672:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8002676:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800267a:	4640      	mov	r0, r8
 800267c:	f7ff ff42 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8002680:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8002684:	4618      	mov	r0, r3
 8002686:	ee08 3a10 	vmov	s16, r3
 800268a:	f7ff ff3b 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 800268e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8002692:	4618      	mov	r0, r3
 8002694:	ee08 3a90 	vmov	s17, r3
 8002698:	f7ff ff34 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 800269c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80026a0:	4618      	mov	r0, r3
 80026a2:	ee09 3a10 	vmov	s18, r3
 80026a6:	f00f fe33 	bl	8012310 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80026aa:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80026ae:	4618      	mov	r0, r3
 80026b0:	ee09 3a90 	vmov	s19, r3
 80026b4:	f00f fe2c 	bl	8012310 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80026b8:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80026bc:	4618      	mov	r0, r3
 80026be:	ee0a 3a10 	vmov	s20, r3
 80026c2:	f00f fe25 	bl	8012310 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80026c6:	4a33      	ldr	r2, [pc, #204]	; (8002794 <_ZN19CalibrationViewBaseC1Ev+0x1c4>)
 80026c8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80026cc:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80026d0:	4a31      	ldr	r2, [pc, #196]	; (8002798 <_ZN19CalibrationViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80026d2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80026d6:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80026da:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80026de:	f010 fcd3 	bl	8013088 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80026e2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80026e6:	462a      	mov	r2, r5
 80026e8:	4658      	mov	r0, fp
 80026ea:	9300      	str	r3, [sp, #0]
 80026ec:	4629      	mov	r1, r5
 80026ee:	23f0      	movs	r3, #240	; 0xf0
 80026f0:	f7ff fee2 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80026f4:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80026f6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80026fa:	66a3      	str	r3, [r4, #104]	; 0x68
 80026fc:	4659      	mov	r1, fp
 80026fe:	4630      	mov	r0, r6
 8002700:	f00c ff36 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002704:	462a      	mov	r2, r5
 8002706:	4650      	mov	r0, sl
 8002708:	4629      	mov	r1, r5
 800270a:	f7ff fec8 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 800270e:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002710:	4650      	mov	r0, sl
 8002712:	a90a      	add	r1, sp, #40	; 0x28
 8002714:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002718:	f00f fcb9 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800271c:	4651      	mov	r1, sl
 800271e:	4630      	mov	r0, r6
 8002720:	f00c ff26 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(89, 308);
 8002724:	f44f 729a 	mov.w	r2, #308	; 0x134
 8002728:	2159      	movs	r1, #89	; 0x59
 800272a:	4648      	mov	r0, r9
 800272c:	f7ff feb7 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002730:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8002734:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8002738:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 800273c:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8002740:	4650      	mov	r0, sl
 8002742:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8002746:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800274a:	4649      	mov	r1, r9
 800274c:	4798      	blx	r3
 800274e:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8002752:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8002756:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800275a:	4b10      	ldr	r3, [pc, #64]	; (800279c <_ZN19CalibrationViewBaseC1Ev+0x1cc>)
 800275c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 800275e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8002762:	b92b      	cbnz	r3, 8002770 <_ZN19CalibrationViewBaseC1Ev+0x1a0>
 8002764:	4b0e      	ldr	r3, [pc, #56]	; (80027a0 <_ZN19CalibrationViewBaseC1Ev+0x1d0>)
 8002766:	4a0f      	ldr	r2, [pc, #60]	; (80027a4 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002768:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800276a:	480f      	ldr	r0, [pc, #60]	; (80027a8 <_ZN19CalibrationViewBaseC1Ev+0x1d8>)
 800276c:	f025 fce8 	bl	8028140 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002770:	4b0e      	ldr	r3, [pc, #56]	; (80027ac <_ZN19CalibrationViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002772:	881b      	ldrh	r3, [r3, #0]
 8002774:	2b0b      	cmp	r3, #11
 8002776:	d81d      	bhi.n	80027b4 <_ZN19CalibrationViewBaseC1Ev+0x1e4>
 8002778:	4b0d      	ldr	r3, [pc, #52]	; (80027b0 <_ZN19CalibrationViewBaseC1Ev+0x1e0>)
 800277a:	4a0a      	ldr	r2, [pc, #40]	; (80027a4 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 800277c:	2161      	movs	r1, #97	; 0x61
 800277e:	e7f4      	b.n	800276a <_ZN19CalibrationViewBaseC1Ev+0x19a>
 8002780:	08029e04 	.word	0x08029e04
 8002784:	0802c68c 	.word	0x0802c68c
 8002788:	0802c854 	.word	0x0802c854
 800278c:	08029d5c 	.word	0x08029d5c
 8002790:	0802c3c0 	.word	0x0802c3c0
 8002794:	08029dec 	.word	0x08029dec
 8002798:	08002455 	.word	0x08002455
 800279c:	20013814 	.word	0x20013814
 80027a0:	08029b9c 	.word	0x08029b9c
 80027a4:	08029c9e 	.word	0x08029c9e
 80027a8:	08029c19 	.word	0x08029c19
 80027ac:	20013818 	.word	0x20013818
 80027b0:	08029c60 	.word	0x08029c60
        return texts->getText(typedTextId);
 80027b4:	4b93      	ldr	r3, [pc, #588]	; (8002a04 <_ZN19CalibrationViewBaseC1Ev+0x434>)
 80027b6:	210b      	movs	r1, #11
 80027b8:	6818      	ldr	r0, [r3, #0]
 80027ba:	f005 f9b1 	bl	8007b20 <_ZNK8touchgfx5Texts7getTextEt>
 80027be:	4a92      	ldr	r2, [pc, #584]	; (8002a08 <_ZN19CalibrationViewBaseC1Ev+0x438>)
 80027c0:	4603      	mov	r3, r0
 80027c2:	2104      	movs	r1, #4
 80027c4:	4650      	mov	r0, sl
 80027c6:	f015 facf 	bl	8017d68 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 80027ca:	4648      	mov	r0, r9
        wc1 = value;
 80027cc:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80027d0:	f00f f862 	bl	8011898 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80027d4:	4b8d      	ldr	r3, [pc, #564]	; (8002a0c <_ZN19CalibrationViewBaseC1Ev+0x43c>)
 80027d6:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 80027d8:	a90a      	add	r1, sp, #40	; 0x28
 80027da:	230c      	movs	r3, #12
 80027dc:	4648      	mov	r0, r9
 80027de:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80027e2:	f00f f879 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80027e6:	4649      	mov	r1, r9
 80027e8:	4630      	mov	r0, r6
 80027ea:	f00c fec1 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80027ee:	230a      	movs	r3, #10
 80027f0:	9300      	str	r3, [sp, #0]
 80027f2:	2232      	movs	r2, #50	; 0x32
 80027f4:	23f0      	movs	r3, #240	; 0xf0
 80027f6:	4629      	mov	r1, r5
 80027f8:	4638      	mov	r0, r7
 80027fa:	f7ff fe5d 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 80027fe:	9b03      	ldr	r3, [sp, #12]
 8002800:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002804:	22a0      	movs	r2, #160	; 0xa0
 8002806:	4611      	mov	r1, r2
 8002808:	4638      	mov	r0, r7
 800280a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 800280e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8002812:	f00e fc1b 	bl	801104c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002816:	22a0      	movs	r2, #160	; 0xa0
 8002818:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800281c:	4638      	mov	r0, r7
 800281e:	f00e fc20 	bl	8011062 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8002822:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002826:	2b20      	cmp	r3, #32
 8002828:	d005      	beq.n	8002836 <_ZN19CalibrationViewBaseC1Ev+0x266>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 800282a:	2320      	movs	r3, #32
 800282c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 8002830:	4638      	mov	r0, r7
 8002832:	f00e fb15 	bl	8010e60 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002836:	4638      	mov	r0, r7
 8002838:	2101      	movs	r1, #1
 800283a:	f00e fc1d 	bl	8011078 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800283e:	4639      	mov	r1, r7
 8002840:	4630      	mov	r0, r6
 8002842:	ad04      	add	r5, sp, #16
        color = newColor;
 8002844:	f04f 37ff 	mov.w	r7, #4294967295
 8002848:	f00c fe92 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800284c:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(70, 60);
 8002850:	223c      	movs	r2, #60	; 0x3c
 8002852:	4640      	mov	r0, r8
 8002854:	2146      	movs	r1, #70	; 0x46
 8002856:	f7ff fe22 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800285a:	4641      	mov	r1, r8
 800285c:	4628      	mov	r0, r5
        color = newColor;
 800285e:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8002862:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8002866:	f00e fd9d 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800286a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800286e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8002872:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002876:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8002a0c <_ZN19CalibrationViewBaseC1Ev+0x43c>
 800287a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800287e:	2304      	movs	r3, #4
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05WF));
 8002880:	a90a      	add	r1, sp, #40	; 0x28
 8002882:	4640      	mov	r0, r8
 8002884:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002888:	f00f f826 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800288c:	4641      	mov	r1, r8
 800288e:	4630      	mov	r0, r6
 8002890:	f00c fe6e 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8002894:	ee18 0a10 	vmov	r0, s16
 8002898:	2223      	movs	r2, #35	; 0x23
 800289a:	2145      	movs	r1, #69	; 0x45
 800289c:	f7ff fdff 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 80028a0:	ee18 1a10 	vmov	r1, s16
 80028a4:	4628      	mov	r0, r5
        color = newColor;
 80028a6:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80028aa:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80028ae:	f00e fd79 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80028b2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80028b6:	ee18 3a10 	vmov	r3, s16
 80028ba:	333c      	adds	r3, #60	; 0x3c
 80028bc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80028c0:	2341      	movs	r3, #65	; 0x41
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 80028c2:	ee18 0a10 	vmov	r0, s16
 80028c6:	a90a      	add	r1, sp, #40	; 0x28
 80028c8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80028cc:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80028d0:	f00f f802 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80028d4:	ee18 1a10 	vmov	r1, s16
 80028d8:	4630      	mov	r0, r6
 80028da:	f00c fe49 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80028de:	ee18 0a90 	vmov	r0, s17
 80028e2:	220c      	movs	r2, #12
 80028e4:	2136      	movs	r1, #54	; 0x36
 80028e6:	f7ff fdda 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 80028ea:	ee18 1a90 	vmov	r1, s17
 80028ee:	4628      	mov	r0, r5
        color = newColor;
 80028f0:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80028f4:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80028f8:	f00e fd54 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80028fc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002900:	ee18 3a90 	vmov	r3, s17
 8002904:	333c      	adds	r3, #60	; 0x3c
 8002906:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800290a:	2340      	movs	r3, #64	; 0x40
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 800290c:	ee18 0a90 	vmov	r0, s17
 8002910:	a90a      	add	r1, sp, #40	; 0x28
 8002912:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002916:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800291a:	f00e ffdd 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800291e:	ee18 1a90 	vmov	r1, s17
 8002922:	4630      	mov	r0, r6
 8002924:	f00c fe24 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8002928:	ee19 0a10 	vmov	r0, s18
 800292c:	22f0      	movs	r2, #240	; 0xf0
 800292e:	2121      	movs	r1, #33	; 0x21
 8002930:	f7ff fdb5 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8002934:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002938:	aa0a      	add	r2, sp, #40	; 0x28
 800293a:	f04f 0802 	mov.w	r8, #2
 800293e:	a909      	add	r1, sp, #36	; 0x24
 8002940:	ee19 0a10 	vmov	r0, s18
 8002944:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002948:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 800294c:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002950:	f00f f9a7 	bl	8011ca2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002954:	233f      	movs	r3, #63	; 0x3f
 8002956:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 800295a:	3510      	adds	r5, #16
        updateTextPosition();
 800295c:	ee19 0a10 	vmov	r0, s18
 8002960:	f7ff fdf2 	bl	8002548 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002964:	ee19 1a10 	vmov	r1, s18
 8002968:	4630      	mov	r0, r6
        colorPressed = col;
 800296a:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 800296e:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8002972:	f00c fdfd 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8002976:	ee19 0a90 	vmov	r0, s19
 800297a:	22aa      	movs	r2, #170	; 0xaa
 800297c:	2121      	movs	r1, #33	; 0x21
 800297e:	f7ff fd8e 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002982:	aa0a      	add	r2, sp, #40	; 0x28
 8002984:	a909      	add	r1, sp, #36	; 0x24
 8002986:	ee19 0a90 	vmov	r0, s19
 800298a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800298e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002992:	f00f f986 	bl	8011ca2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002996:	233e      	movs	r3, #62	; 0x3e
 8002998:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 800299c:	ee19 0a90 	vmov	r0, s19
 80029a0:	f7ff fdd2 	bl	8002548 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80029a4:	ee19 1a90 	vmov	r1, s19
 80029a8:	4630      	mov	r0, r6
        colorPressed = col;
 80029aa:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80029ae:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80029b2:	f00c fddd 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80029b6:	ee1a 0a10 	vmov	r0, s20
 80029ba:	2264      	movs	r2, #100	; 0x64
 80029bc:	2121      	movs	r1, #33	; 0x21
 80029be:	f7ff fd6e 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80029c2:	aa0a      	add	r2, sp, #40	; 0x28
 80029c4:	a909      	add	r1, sp, #36	; 0x24
 80029c6:	ee1a 0a10 	vmov	r0, s20
 80029ca:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80029ce:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80029d2:	f00f f966 	bl	8011ca2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80029d6:	233d      	movs	r3, #61	; 0x3d
        updateTextPosition();
 80029d8:	ee1a 0a10 	vmov	r0, s20
 80029dc:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 80029e0:	f7ff fdb2 	bl	8002548 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80029e4:	4630      	mov	r0, r6
        colorPressed = col;
 80029e6:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80029ea:	ee1a 1a10 	vmov	r1, s20
 80029ee:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80029f2:	f00c fdbd 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80029f6:	4620      	mov	r0, r4
 80029f8:	b00d      	add	sp, #52	; 0x34
 80029fa:	ecbd 8b06 	vpop	{d8-d10}
 80029fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002a02:	bf00      	nop
 8002a04:	20013820 	.word	0x20013820
 8002a08:	08029cd6 	.word	0x08029cd6
 8002a0c:	08029d4c 	.word	0x08029d4c

08002a10 <_ZN24Calibration_HallViewBase11setupScreenEv>:
}

void Calibration_HallViewBase::setupScreen()
{

}
 8002a10:	4770      	bx	lr

08002a12 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002a12:	4770      	bx	lr

08002a14 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002a14:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a16:	68c2      	ldr	r2, [r0, #12]
 8002a18:	6844      	ldr	r4, [r0, #4]
 8002a1a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002a1c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002a1e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002a22:	07d2      	lsls	r2, r2, #31
 8002a24:	bf48      	it	mi
 8002a26:	5962      	ldrmi	r2, [r4, r5]
 8002a28:	689b      	ldr	r3, [r3, #8]
    }
 8002a2a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a2c:	bf48      	it	mi
 8002a2e:	58d3      	ldrmi	r3, [r2, r3]
 8002a30:	4718      	bx	r3

08002a32 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002a32:	6843      	ldr	r3, [r0, #4]
 8002a34:	b12b      	cbz	r3, 8002a42 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002a36:	6883      	ldr	r3, [r0, #8]
 8002a38:	b92b      	cbnz	r3, 8002a46 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002a3a:	68c0      	ldr	r0, [r0, #12]
 8002a3c:	f000 0001 	and.w	r0, r0, #1
 8002a40:	4770      	bx	lr
 8002a42:	4618      	mov	r0, r3
 8002a44:	4770      	bx	lr
 8002a46:	2001      	movs	r0, #1
    }
 8002a48:	4770      	bx	lr

08002a4a <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002a4a:	b510      	push	{r4, lr}
 8002a4c:	2110      	movs	r1, #16
 8002a4e:	4604      	mov	r4, r0
 8002a50:	f024 fd85 	bl	802755e <_ZdlPvj>
 8002a54:	4620      	mov	r0, r4
 8002a56:	bd10      	pop	{r4, pc}

08002a58 <_ZN24Calibration_HallViewBaseD1Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002a58:	b510      	push	{r4, lr}
 8002a5a:	4b03      	ldr	r3, [pc, #12]	; (8002a68 <_ZN24Calibration_HallViewBaseD1Ev+0x10>)
 8002a5c:	6003      	str	r3, [r0, #0]
 8002a5e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002a60:	f010 fb1c 	bl	801309c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002a64:	4620      	mov	r0, r4
 8002a66:	bd10      	pop	{r4, pc}
 8002a68:	08029e50 	.word	0x08029e50

08002a6c <_ZN24Calibration_HallViewBaseD0Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002a6c:	b507      	push	{r0, r1, r2, lr}
 8002a6e:	4b07      	ldr	r3, [pc, #28]	; (8002a8c <_ZN24Calibration_HallViewBaseD0Ev+0x20>)
 8002a70:	6003      	str	r3, [r0, #0]
 8002a72:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002a74:	f010 fb12 	bl	801309c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002a78:	9801      	ldr	r0, [sp, #4]
 8002a7a:	f241 015c 	movw	r1, #4188	; 0x105c
 8002a7e:	f024 fd6e 	bl	802755e <_ZdlPvj>
 8002a82:	9801      	ldr	r0, [sp, #4]
 8002a84:	b003      	add	sp, #12
 8002a86:	f85d fb04 	ldr.w	pc, [sp], #4
 8002a8a:	bf00      	nop
 8002a8c:	08029e50 	.word	0x08029e50

08002a90 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_HallViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002a90:	3098      	adds	r0, #152	; 0x98
 8002a92:	4288      	cmp	r0, r1
{
 8002a94:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8002a96:	d105      	bne.n	8002aa4 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_HallViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002a98:	f012 f802 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8002a9c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8002aa0:	f000 beb4 	b.w	800380c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8002aa4:	bd08      	pop	{r3, pc}
	...

08002aa8 <_ZN24Calibration_HallViewBaseC1Ev>:
Calibration_HallViewBase::Calibration_HallViewBase() :
 8002aa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002aac:	ed2d 8b02 	vpush	{d8}
 8002ab0:	4604      	mov	r4, r0
 8002ab2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_HallViewBase::buttonCallbackHandler)
 8002ab4:	46a1      	mov	r9, r4
 8002ab6:	2500      	movs	r5, #0
 8002ab8:	f013 fc72 	bl	80163a0 <_ZN8touchgfx6ScreenC1Ev>
 8002abc:	4ba5      	ldr	r3, [pc, #660]	; (8002d54 <_ZN24Calibration_HallViewBaseC1Ev+0x2ac>)
 8002abe:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002ac0:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8002ac4:	2226      	movs	r2, #38	; 0x26
 8002ac6:	4629      	mov	r1, r5
 8002ac8:	4648      	mov	r0, r9
 8002aca:	f025 fd3e 	bl	802854a <memset>
 8002ace:	4648      	mov	r0, r9
 8002ad0:	f7ff fd06 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 8002ad4:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002ad8:	26ff      	movs	r6, #255	; 0xff
 8002ada:	4b9f      	ldr	r3, [pc, #636]	; (8002d58 <_ZN24Calibration_HallViewBaseC1Ev+0x2b0>)
 8002adc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8002ade:	2226      	movs	r2, #38	; 0x26
 8002ae0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002ae4:	4629      	mov	r1, r5
 8002ae6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002aea:	4640      	mov	r0, r8
 8002aec:	66a5      	str	r5, [r4, #104]	; 0x68
 8002aee:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002af2:	f025 fd2a 	bl	802854a <memset>
 8002af6:	4640      	mov	r0, r8
 8002af8:	f7ff fcf2 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 8002afc:	4b97      	ldr	r3, [pc, #604]	; (8002d5c <_ZN24Calibration_HallViewBaseC1Ev+0x2b4>)
 8002afe:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002b00:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002b04:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8002b08:	a90a      	add	r1, sp, #40	; 0x28
 8002b0a:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8002b0e:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8002b10:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002b14:	f00f fabb 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002b18:	4658      	mov	r0, fp
 8002b1a:	f00f fbf9 	bl	8012310 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002b1e:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8002b22:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8002b26:	4618      	mov	r0, r3
 8002b28:	ee08 3a90 	vmov	s17, r3
 8002b2c:	f7ff fcea 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8002b30:	4638      	mov	r0, r7
 8002b32:	f00e f975 	bl	8010e20 <_ZN8touchgfx4LineC1Ev>
 8002b36:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002b3a:	4618      	mov	r0, r3
 8002b3c:	9303      	str	r3, [sp, #12]
 8002b3e:	f7fe fbbf 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002b42:	4b87      	ldr	r3, [pc, #540]	; (8002d60 <_ZN24Calibration_HallViewBaseC1Ev+0x2b8>)
 8002b44:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8002b48:	3324      	adds	r3, #36	; 0x24
 8002b4a:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8002b4e:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8002b52:	4618      	mov	r0, r3
 8002b54:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8002b58:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8002b5c:	ee08 3a10 	vmov	s16, r3
 8002b60:	f7ff fcd0 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8002b64:	4650      	mov	r0, sl
 8002b66:	f7ff fccd 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002b6a:	4a7e      	ldr	r2, [pc, #504]	; (8002d64 <_ZN24Calibration_HallViewBaseC1Ev+0x2bc>)
 8002b6c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002b70:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8002b74:	4a7c      	ldr	r2, [pc, #496]	; (8002d68 <_ZN24Calibration_HallViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002b76:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002b7a:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8002b7e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8002b82:	f010 fa81 	bl	8013088 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002b86:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002b8a:	462a      	mov	r2, r5
 8002b8c:	4648      	mov	r0, r9
 8002b8e:	9300      	str	r3, [sp, #0]
 8002b90:	4629      	mov	r1, r5
 8002b92:	23f0      	movs	r3, #240	; 0xf0
 8002b94:	f7ff fc90 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002b98:	1d26      	adds	r6, r4, #4
        color = newColor;
 8002b9a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002b9e:	66a3      	str	r3, [r4, #104]	; 0x68
 8002ba0:	4649      	mov	r1, r9
 8002ba2:	4630      	mov	r0, r6
 8002ba4:	f00c fce4 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002ba8:	462a      	mov	r2, r5
 8002baa:	4640      	mov	r0, r8
 8002bac:	4629      	mov	r1, r5
 8002bae:	f7ff fc76 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8002bb2:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002bb4:	4640      	mov	r0, r8
 8002bb6:	a90a      	add	r1, sp, #40	; 0x28
 8002bb8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002bbc:	f00f fa67 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002bc0:	4641      	mov	r1, r8
 8002bc2:	4630      	mov	r0, r6
 8002bc4:	f00c fcd4 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8002bc8:	4658      	mov	r0, fp
 8002bca:	f240 1201 	movw	r2, #257	; 0x101
 8002bce:	2121      	movs	r1, #33	; 0x21
 8002bd0:	f7ff fc65 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8002bd4:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002bd6:	aa0a      	add	r2, sp, #40	; 0x28
 8002bd8:	a909      	add	r1, sp, #36	; 0x24
 8002bda:	4658      	mov	r0, fp
 8002bdc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002be0:	2302      	movs	r3, #2
 8002be2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002be6:	f00f f85c 	bl	8011ca2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 8002bea:	4658      	mov	r0, fp
 8002bec:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
 8002bf0:	f7ff fcaa 	bl	8002548 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8002bf4:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8002bf8:	330c      	adds	r3, #12
        color = col;
 8002bfa:	f04f 39ff 	mov.w	r9, #4294967295
 8002bfe:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8002c02:	4659      	mov	r1, fp
 8002c04:	4630      	mov	r0, r6
        colorPressed = col;
 8002c06:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8002c0a:	f00c fcb1 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002c0e:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(32, 60);
 8002c12:	223c      	movs	r2, #60	; 0x3c
 8002c14:	ee18 0a90 	vmov	r0, s17
 8002c18:	2120      	movs	r1, #32
 8002c1a:	f7ff fc40 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8002c1e:	ee18 1a90 	vmov	r1, s17
 8002c22:	4640      	mov	r0, r8
        color = newColor;
 8002c24:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8002c28:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8002c2c:	f00e fbba 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002c30:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002c34:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8002c38:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8002c3c:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8002d6c <_ZN24Calibration_HallViewBaseC1Ev+0x2c4>
 8002c40:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002c44:	2301      	movs	r3, #1
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQKY));
 8002c46:	ee18 0a90 	vmov	r0, s17
 8002c4a:	a90a      	add	r1, sp, #40	; 0x28
 8002c4c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002c50:	f00e fe42 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002c54:	ee18 1a90 	vmov	r1, s17
 8002c58:	4630      	mov	r0, r6
 8002c5a:	f00c fc89 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002c5e:	230a      	movs	r3, #10
 8002c60:	9300      	str	r3, [sp, #0]
 8002c62:	2232      	movs	r2, #50	; 0x32
 8002c64:	23f0      	movs	r3, #240	; 0xf0
 8002c66:	4629      	mov	r1, r5
 8002c68:	4638      	mov	r0, r7
 8002c6a:	f7ff fc25 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002c6e:	9b03      	ldr	r3, [sp, #12]
 8002c70:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002c74:	22a0      	movs	r2, #160	; 0xa0
 8002c76:	4611      	mov	r1, r2
 8002c78:	4638      	mov	r0, r7
 8002c7a:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002c7e:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8002c82:	f00e f9e3 	bl	801104c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002c86:	22a0      	movs	r2, #160	; 0xa0
 8002c88:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002c8c:	4638      	mov	r0, r7
 8002c8e:	f00e f9e8 	bl	8011062 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8002c92:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8002c96:	2b20      	cmp	r3, #32
 8002c98:	d005      	beq.n	8002ca6 <_ZN24Calibration_HallViewBaseC1Ev+0x1fe>
        lineWidthQ5 = widthQ5;
 8002c9a:	2320      	movs	r3, #32
 8002c9c:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8002ca0:	4638      	mov	r0, r7
 8002ca2:	f00e f8dd 	bl	8010e60 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002ca6:	4638      	mov	r0, r7
 8002ca8:	2101      	movs	r1, #1
 8002caa:	f00e f9e5 	bl	8011078 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8002cae:	4639      	mov	r1, r7
 8002cb0:	4630      	mov	r0, r6
 8002cb2:	f00c fc5d 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8002cb6:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8002cba:	ee18 0a10 	vmov	r0, s16
 8002cbe:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8002cc0:	2500      	movs	r5, #0
 8002cc2:	2145      	movs	r1, #69	; 0x45
 8002cc4:	f7ff fbeb 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002cc8:	ee18 1a10 	vmov	r1, s16
 8002ccc:	4640      	mov	r0, r8
        color = newColor;
 8002cce:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8002cd2:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8002cd6:	f00e fb65 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002cda:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002cde:	ee18 3a10 	vmov	r3, s16
 8002ce2:	333c      	adds	r3, #60	; 0x3c
 8002ce4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002ce8:	2302      	movs	r3, #2
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4V7Y));
 8002cea:	ee18 0a10 	vmov	r0, s16
 8002cee:	a90a      	add	r1, sp, #40	; 0x28
 8002cf0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002cf4:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002cf8:	f00e fdee 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002cfc:	ee18 1a10 	vmov	r1, s16
 8002d00:	4630      	mov	r0, r6
 8002d02:	f00c fc35 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8002d06:	220c      	movs	r2, #12
 8002d08:	4650      	mov	r0, sl
 8002d0a:	2136      	movs	r1, #54	; 0x36
 8002d0c:	f7ff fbc7 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8002d10:	4651      	mov	r1, sl
 8002d12:	4640      	mov	r0, r8
        color = newColor;
 8002d14:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8002d18:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8002d1c:	f00e fb42 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002d20:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002d24:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8002d28:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002d2c:	2303      	movs	r3, #3
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TVZ0));
 8002d2e:	a90a      	add	r1, sp, #40	; 0x28
 8002d30:	4650      	mov	r0, sl
 8002d32:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002d36:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002d3a:	f00e fdcd 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002d3e:	4630      	mov	r0, r6
 8002d40:	4651      	mov	r1, sl
 8002d42:	f00c fc15 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002d46:	4620      	mov	r0, r4
 8002d48:	b00d      	add	sp, #52	; 0x34
 8002d4a:	ecbd 8b02 	vpop	{d8}
 8002d4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002d52:	bf00      	nop
 8002d54:	08029e50 	.word	0x08029e50
 8002d58:	0802c68c 	.word	0x0802c68c
 8002d5c:	0802c854 	.word	0x0802c854
 8002d60:	0802c3c0 	.word	0x0802c3c0
 8002d64:	08029e38 	.word	0x08029e38
 8002d68:	08002a91 	.word	0x08002a91
 8002d6c:	08029d4c 	.word	0x08029d4c

08002d70 <_ZN23Calibration_PadViewBase11setupScreenEv>:
}

void Calibration_PadViewBase::setupScreen()
{

}
 8002d70:	4770      	bx	lr

08002d72 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002d72:	4770      	bx	lr

08002d74 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002d74:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002d76:	68c2      	ldr	r2, [r0, #12]
 8002d78:	6844      	ldr	r4, [r0, #4]
 8002d7a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002d7c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002d7e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002d82:	07d2      	lsls	r2, r2, #31
 8002d84:	bf48      	it	mi
 8002d86:	5962      	ldrmi	r2, [r4, r5]
 8002d88:	689b      	ldr	r3, [r3, #8]
    }
 8002d8a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002d8c:	bf48      	it	mi
 8002d8e:	58d3      	ldrmi	r3, [r2, r3]
 8002d90:	4718      	bx	r3

08002d92 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002d92:	6843      	ldr	r3, [r0, #4]
 8002d94:	b12b      	cbz	r3, 8002da2 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002d96:	6883      	ldr	r3, [r0, #8]
 8002d98:	b92b      	cbnz	r3, 8002da6 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002d9a:	68c0      	ldr	r0, [r0, #12]
 8002d9c:	f000 0001 	and.w	r0, r0, #1
 8002da0:	4770      	bx	lr
 8002da2:	4618      	mov	r0, r3
 8002da4:	4770      	bx	lr
 8002da6:	2001      	movs	r0, #1
    }
 8002da8:	4770      	bx	lr

08002daa <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002daa:	b510      	push	{r4, lr}
 8002dac:	2110      	movs	r1, #16
 8002dae:	4604      	mov	r4, r0
 8002db0:	f024 fbd5 	bl	802755e <_ZdlPvj>
 8002db4:	4620      	mov	r0, r4
 8002db6:	bd10      	pop	{r4, pc}

08002db8 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002db8:	b510      	push	{r4, lr}
 8002dba:	4b03      	ldr	r3, [pc, #12]	; (8002dc8 <_ZN23Calibration_PadViewBaseD1Ev+0x10>)
 8002dbc:	6003      	str	r3, [r0, #0]
 8002dbe:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002dc0:	f010 f96c 	bl	801309c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002dc4:	4620      	mov	r0, r4
 8002dc6:	bd10      	pop	{r4, pc}
 8002dc8:	08029e9c 	.word	0x08029e9c

08002dcc <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002dcc:	b507      	push	{r0, r1, r2, lr}
 8002dce:	4b07      	ldr	r3, [pc, #28]	; (8002dec <_ZN23Calibration_PadViewBaseD0Ev+0x20>)
 8002dd0:	6003      	str	r3, [r0, #0]
 8002dd2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002dd4:	f010 f962 	bl	801309c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002dd8:	9801      	ldr	r0, [sp, #4]
 8002dda:	f241 015c 	movw	r1, #4188	; 0x105c
 8002dde:	f024 fbbe 	bl	802755e <_ZdlPvj>
 8002de2:	9801      	ldr	r0, [sp, #4]
 8002de4:	b003      	add	sp, #12
 8002de6:	f85d fb04 	ldr.w	pc, [sp], #4
 8002dea:	bf00      	nop
 8002dec:	08029e9c 	.word	0x08029e9c

08002df0 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_PadViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002df0:	3098      	adds	r0, #152	; 0x98
 8002df2:	4288      	cmp	r0, r1
{
 8002df4:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8002df6:	d105      	bne.n	8002e04 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_PadViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002df8:	f011 fe52 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8002dfc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8002e00:	f000 bd04 	b.w	800380c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8002e04:	bd08      	pop	{r3, pc}
	...

08002e08 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8002e08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002e0c:	ed2d 8b02 	vpush	{d8}
 8002e10:	4604      	mov	r4, r0
 8002e12:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 8002e14:	46a1      	mov	r9, r4
 8002e16:	2500      	movs	r5, #0
 8002e18:	f013 fac2 	bl	80163a0 <_ZN8touchgfx6ScreenC1Ev>
 8002e1c:	4ba5      	ldr	r3, [pc, #660]	; (80030b4 <_ZN23Calibration_PadViewBaseC1Ev+0x2ac>)
 8002e1e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002e20:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8002e24:	2226      	movs	r2, #38	; 0x26
 8002e26:	4629      	mov	r1, r5
 8002e28:	4648      	mov	r0, r9
 8002e2a:	f025 fb8e 	bl	802854a <memset>
 8002e2e:	4648      	mov	r0, r9
 8002e30:	f7ff fb56 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 8002e34:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002e38:	26ff      	movs	r6, #255	; 0xff
 8002e3a:	4b9f      	ldr	r3, [pc, #636]	; (80030b8 <_ZN23Calibration_PadViewBaseC1Ev+0x2b0>)
 8002e3c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8002e3e:	2226      	movs	r2, #38	; 0x26
 8002e40:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002e44:	4629      	mov	r1, r5
 8002e46:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002e4a:	4640      	mov	r0, r8
 8002e4c:	66a5      	str	r5, [r4, #104]	; 0x68
 8002e4e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002e52:	f025 fb7a 	bl	802854a <memset>
 8002e56:	4640      	mov	r0, r8
 8002e58:	f7ff fb42 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 8002e5c:	4b97      	ldr	r3, [pc, #604]	; (80030bc <_ZN23Calibration_PadViewBaseC1Ev+0x2b4>)
 8002e5e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002e60:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002e64:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8002e68:	a90a      	add	r1, sp, #40	; 0x28
 8002e6a:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8002e6e:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8002e70:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002e74:	f00f f90b 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002e78:	4658      	mov	r0, fp
 8002e7a:	f00f fa49 	bl	8012310 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002e7e:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8002e82:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8002e86:	4618      	mov	r0, r3
 8002e88:	ee08 3a90 	vmov	s17, r3
 8002e8c:	f7ff fb3a 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8002e90:	4638      	mov	r0, r7
 8002e92:	f00d ffc5 	bl	8010e20 <_ZN8touchgfx4LineC1Ev>
 8002e96:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002e9a:	4618      	mov	r0, r3
 8002e9c:	9303      	str	r3, [sp, #12]
 8002e9e:	f7fe fa0f 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002ea2:	4b87      	ldr	r3, [pc, #540]	; (80030c0 <_ZN23Calibration_PadViewBaseC1Ev+0x2b8>)
 8002ea4:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8002ea8:	3324      	adds	r3, #36	; 0x24
 8002eaa:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8002eae:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8002eb2:	4618      	mov	r0, r3
 8002eb4:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8002eb8:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8002ebc:	ee08 3a10 	vmov	s16, r3
 8002ec0:	f7ff fb20 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8002ec4:	4650      	mov	r0, sl
 8002ec6:	f7ff fb1d 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002eca:	4a7e      	ldr	r2, [pc, #504]	; (80030c4 <_ZN23Calibration_PadViewBaseC1Ev+0x2bc>)
 8002ecc:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002ed0:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8002ed4:	4a7c      	ldr	r2, [pc, #496]	; (80030c8 <_ZN23Calibration_PadViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002ed6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002eda:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8002ede:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8002ee2:	f010 f8d1 	bl	8013088 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002ee6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002eea:	462a      	mov	r2, r5
 8002eec:	4648      	mov	r0, r9
 8002eee:	9300      	str	r3, [sp, #0]
 8002ef0:	4629      	mov	r1, r5
 8002ef2:	23f0      	movs	r3, #240	; 0xf0
 8002ef4:	f7ff fae0 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002ef8:	1d26      	adds	r6, r4, #4
        color = newColor;
 8002efa:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002efe:	66a3      	str	r3, [r4, #104]	; 0x68
 8002f00:	4649      	mov	r1, r9
 8002f02:	4630      	mov	r0, r6
 8002f04:	f00c fb34 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002f08:	462a      	mov	r2, r5
 8002f0a:	4640      	mov	r0, r8
 8002f0c:	4629      	mov	r1, r5
 8002f0e:	f7ff fac6 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8002f12:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002f14:	4640      	mov	r0, r8
 8002f16:	a90a      	add	r1, sp, #40	; 0x28
 8002f18:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002f1c:	f00f f8b7 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002f20:	4641      	mov	r1, r8
 8002f22:	4630      	mov	r0, r6
 8002f24:	f00c fb24 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8002f28:	4658      	mov	r0, fp
 8002f2a:	f240 1201 	movw	r2, #257	; 0x101
 8002f2e:	2121      	movs	r1, #33	; 0x21
 8002f30:	f7ff fab5 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8002f34:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002f36:	aa0a      	add	r2, sp, #40	; 0x28
 8002f38:	a909      	add	r1, sp, #36	; 0x24
 8002f3a:	4658      	mov	r0, fp
 8002f3c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002f40:	2302      	movs	r3, #2
 8002f42:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002f46:	f00e feac 	bl	8011ca2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002f4a:	2306      	movs	r3, #6
        updateTextPosition();
 8002f4c:	4658      	mov	r0, fp
 8002f4e:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8002f52:	f7ff faf9 	bl	8002548 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8002f56:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8002f5a:	330c      	adds	r3, #12
        color = col;
 8002f5c:	f04f 39ff 	mov.w	r9, #4294967295
 8002f60:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8002f64:	4659      	mov	r1, fp
 8002f66:	4630      	mov	r0, r6
        colorPressed = col;
 8002f68:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8002f6c:	f00c fb00 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002f70:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(58, 60);
 8002f74:	223c      	movs	r2, #60	; 0x3c
 8002f76:	ee18 0a90 	vmov	r0, s17
 8002f7a:	213a      	movs	r1, #58	; 0x3a
 8002f7c:	f7ff fa8f 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8002f80:	ee18 1a90 	vmov	r1, s17
 8002f84:	4640      	mov	r0, r8
        color = newColor;
 8002f86:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8002f8a:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8002f8e:	f00e fa09 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002f92:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002f96:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8002f9a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8002f9e:	f8df b12c 	ldr.w	fp, [pc, #300]	; 80030cc <_ZN23Calibration_PadViewBaseC1Ev+0x2c4>
 8002fa2:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002fa6:	2305      	movs	r3, #5
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8002fa8:	ee18 0a90 	vmov	r0, s17
 8002fac:	a90a      	add	r1, sp, #40	; 0x28
 8002fae:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002fb2:	f00e fc91 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002fb6:	ee18 1a90 	vmov	r1, s17
 8002fba:	4630      	mov	r0, r6
 8002fbc:	f00c fad8 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002fc0:	230a      	movs	r3, #10
 8002fc2:	9300      	str	r3, [sp, #0]
 8002fc4:	2232      	movs	r2, #50	; 0x32
 8002fc6:	23f0      	movs	r3, #240	; 0xf0
 8002fc8:	4629      	mov	r1, r5
 8002fca:	4638      	mov	r0, r7
 8002fcc:	f7ff fa74 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002fd0:	9b03      	ldr	r3, [sp, #12]
 8002fd2:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002fd6:	22a0      	movs	r2, #160	; 0xa0
 8002fd8:	4611      	mov	r1, r2
 8002fda:	4638      	mov	r0, r7
 8002fdc:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002fe0:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8002fe4:	f00e f832 	bl	801104c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002fe8:	22a0      	movs	r2, #160	; 0xa0
 8002fea:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002fee:	4638      	mov	r0, r7
 8002ff0:	f00e f837 	bl	8011062 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8002ff4:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8002ff8:	2b20      	cmp	r3, #32
 8002ffa:	d005      	beq.n	8003008 <_ZN23Calibration_PadViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8002ffc:	2320      	movs	r3, #32
 8002ffe:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8003002:	4638      	mov	r0, r7
 8003004:	f00d ff2c 	bl	8010e60 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003008:	4638      	mov	r0, r7
 800300a:	2101      	movs	r1, #1
 800300c:	f00e f834 	bl	8011078 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003010:	4639      	mov	r1, r7
 8003012:	4630      	mov	r0, r6
 8003014:	f00c faac 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8003018:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 800301c:	ee18 0a10 	vmov	r0, s16
 8003020:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8003022:	2500      	movs	r5, #0
 8003024:	2145      	movs	r1, #69	; 0x45
 8003026:	f7ff fa3a 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800302a:	ee18 1a10 	vmov	r1, s16
 800302e:	4640      	mov	r0, r8
        color = newColor;
 8003030:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8003034:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8003038:	f00e f9b4 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800303c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003040:	ee18 3a10 	vmov	r3, s16
 8003044:	333c      	adds	r3, #60	; 0x3c
 8003046:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800304a:	2307      	movs	r3, #7
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 800304c:	ee18 0a10 	vmov	r0, s16
 8003050:	a90a      	add	r1, sp, #40	; 0x28
 8003052:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003056:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800305a:	f00e fc3d 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800305e:	ee18 1a10 	vmov	r1, s16
 8003062:	4630      	mov	r0, r6
 8003064:	f00c fa84 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8003068:	220c      	movs	r2, #12
 800306a:	4650      	mov	r0, sl
 800306c:	2136      	movs	r1, #54	; 0x36
 800306e:	f7ff fa16 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8003072:	4651      	mov	r1, sl
 8003074:	4640      	mov	r0, r8
        color = newColor;
 8003076:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 800307a:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800307e:	f00e f991 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003082:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003086:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800308a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800308e:	2308      	movs	r3, #8
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 8003090:	a90a      	add	r1, sp, #40	; 0x28
 8003092:	4650      	mov	r0, sl
 8003094:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003098:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800309c:	f00e fc1c 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80030a0:	4630      	mov	r0, r6
 80030a2:	4651      	mov	r1, sl
 80030a4:	f00c fa64 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80030a8:	4620      	mov	r0, r4
 80030aa:	b00d      	add	sp, #52	; 0x34
 80030ac:	ecbd 8b02 	vpop	{d8}
 80030b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80030b4:	08029e9c 	.word	0x08029e9c
 80030b8:	0802c68c 	.word	0x0802c68c
 80030bc:	0802c854 	.word	0x0802c854
 80030c0:	0802c3c0 	.word	0x0802c3c0
 80030c4:	08029e84 	.word	0x08029e84
 80030c8:	08002df1 	.word	0x08002df1
 80030cc:	08029d4c 	.word	0x08029d4c

080030d0 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80030d0:	4770      	bx	lr

080030d2 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80030d2:	4770      	bx	lr

080030d4 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80030d4:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80030d8:	6808      	ldr	r0, [r1, #0]
 80030da:	6849      	ldr	r1, [r1, #4]
 80030dc:	c303      	stmia	r3!, {r0, r1}
    }
 80030de:	4770      	bx	lr

080030e0 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80030e0:	4770      	bx	lr

080030e2 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80030e2:	4770      	bx	lr

080030e4 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80030e4:	6041      	str	r1, [r0, #4]
    }
 80030e6:	4770      	bx	lr

080030e8 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 80030e8:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80030ea:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 80030ec:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80030f0:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80030f4:	8002      	strh	r2, [r0, #0]
 80030f6:	8042      	strh	r2, [r0, #2]
 80030f8:	8084      	strh	r4, [r0, #4]
 80030fa:	80c1      	strh	r1, [r0, #6]
        }
 80030fc:	bd10      	pop	{r4, pc}

080030fe <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 80030fe:	4770      	bx	lr

08003100 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8003100:	4770      	bx	lr
	...

08003104 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003104:	4b06      	ldr	r3, [pc, #24]	; (8003120 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8003106:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800310a:	2300      	movs	r3, #0
 800310c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003110:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003114:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003118:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 800311c:	4770      	bx	lr
 800311e:	bf00      	nop
 8003120:	080034c1 	.word	0x080034c1

08003124 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8003124:	2301      	movs	r3, #1
 8003126:	7203      	strb	r3, [r0, #8]
    }
 8003128:	4770      	bx	lr

0800312a <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 800312a:	4770      	bx	lr

0800312c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 800312c:	4770      	bx	lr

0800312e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 800312e:	4770      	bx	lr

08003130 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8003130:	4770      	bx	lr

08003132 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8003132:	4770      	bx	lr

08003134 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8003134:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8003136:	6840      	ldr	r0, [r0, #4]
 8003138:	6803      	ldr	r3, [r0, #0]
 800313a:	3110      	adds	r1, #16
 800313c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800313e:	4718      	bx	r3

08003140 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8003140:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8003142:	6840      	ldr	r0, [r0, #4]
 8003144:	6803      	ldr	r3, [r0, #0]
 8003146:	3110      	adds	r1, #16
 8003148:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800314a:	4718      	bx	r3

0800314c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 800314c:	4770      	bx	lr

0800314e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800314e:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8003150:	6840      	ldr	r0, [r0, #4]
 8003152:	6803      	ldr	r3, [r0, #0]
 8003154:	3110      	adds	r1, #16
 8003156:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003158:	4718      	bx	r3

0800315a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 800315a:	4601      	mov	r1, r0
        screenContainer->add(solid);
 800315c:	6840      	ldr	r0, [r0, #4]
 800315e:	6803      	ldr	r3, [r0, #0]
 8003160:	3110      	adds	r1, #16
 8003162:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003164:	4718      	bx	r3

08003166 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8003166:	4770      	bx	lr

08003168 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8003168:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800316a:	68c2      	ldr	r2, [r0, #12]
 800316c:	6841      	ldr	r1, [r0, #4]
 800316e:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8003170:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8003172:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8003176:	07d2      	lsls	r2, r2, #31
 8003178:	bf48      	it	mi
 800317a:	590a      	ldrmi	r2, [r1, r4]
 800317c:	689b      	ldr	r3, [r3, #8]
    }
 800317e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8003182:	bf48      	it	mi
 8003184:	58d3      	ldrmi	r3, [r2, r3]
 8003186:	4718      	bx	r3

08003188 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8003188:	6843      	ldr	r3, [r0, #4]
 800318a:	b12b      	cbz	r3, 8003198 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 800318c:	6883      	ldr	r3, [r0, #8]
 800318e:	b92b      	cbnz	r3, 800319c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8003190:	68c0      	ldr	r0, [r0, #12]
 8003192:	f000 0001 	and.w	r0, r0, #1
 8003196:	4770      	bx	lr
 8003198:	4618      	mov	r0, r3
 800319a:	4770      	bx	lr
 800319c:	2001      	movs	r0, #1
    }
 800319e:	4770      	bx	lr

080031a0 <_ZN8touchgfx12NoTransitionD0Ev>:
 80031a0:	b510      	push	{r4, lr}
 80031a2:	210c      	movs	r1, #12
 80031a4:	4604      	mov	r4, r0
 80031a6:	f024 f9da 	bl	802755e <_ZdlPvj>
 80031aa:	4620      	mov	r0, r4
 80031ac:	bd10      	pop	{r4, pc}

080031ae <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80031ae:	b510      	push	{r4, lr}
 80031b0:	2110      	movs	r1, #16
 80031b2:	4604      	mov	r4, r0
 80031b4:	f024 f9d3 	bl	802755e <_ZdlPvj>
 80031b8:	4620      	mov	r0, r4
 80031ba:	bd10      	pop	{r4, pc}

080031bc <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80031bc:	b510      	push	{r4, lr}
 80031be:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80031c2:	4604      	mov	r4, r0
 80031c4:	f024 f9cb 	bl	802755e <_ZdlPvj>
 80031c8:	4620      	mov	r0, r4
 80031ca:	bd10      	pop	{r4, pc}

080031cc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 80031cc:	b510      	push	{r4, lr}
 80031ce:	2138      	movs	r1, #56	; 0x38
 80031d0:	4604      	mov	r4, r0
 80031d2:	f024 f9c4 	bl	802755e <_ZdlPvj>
 80031d6:	4620      	mov	r0, r4
 80031d8:	bd10      	pop	{r4, pc}

080031da <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80031da:	b510      	push	{r4, lr}
 80031dc:	2128      	movs	r1, #40	; 0x28
 80031de:	4604      	mov	r4, r0
 80031e0:	f024 f9bd 	bl	802755e <_ZdlPvj>
 80031e4:	4620      	mov	r0, r4
 80031e6:	bd10      	pop	{r4, pc}

080031e8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 80031e8:	b510      	push	{r4, lr}
 80031ea:	2138      	movs	r1, #56	; 0x38
 80031ec:	4604      	mov	r4, r0
 80031ee:	f024 f9b6 	bl	802755e <_ZdlPvj>
 80031f2:	4620      	mov	r0, r4
 80031f4:	bd10      	pop	{r4, pc}

080031f6 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80031f6:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80031f8:	f011 fc52 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
 80031fc:	6803      	ldr	r3, [r0, #0]
    }
 80031fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8003202:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003204:	4718      	bx	r3
	...

08003208 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003208:	b513      	push	{r0, r1, r4, lr}
 800320a:	4604      	mov	r4, r0
        animationCounter++;
 800320c:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 800320e:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8003210:	3001      	adds	r0, #1
 8003212:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8003214:	4298      	cmp	r0, r3
        animationCounter++;
 8003216:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8003218:	d905      	bls.n	8003226 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 800321a:	2301      	movs	r3, #1
 800321c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800321e:	2300      	movs	r3, #0
 8003220:	72a3      	strb	r3, [r4, #10]
    }
 8003222:	b002      	add	sp, #8
 8003224:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003226:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800322a:	2100      	movs	r1, #0
 800322c:	f013 fa6a 	bl	8016704 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003230:	f010 0201 	ands.w	r2, r0, #1
 8003234:	b283      	uxth	r3, r0
 8003236:	d12a      	bne.n	800328e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003238:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800323a:	4a19      	ldr	r2, [pc, #100]	; (80032a0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 800323c:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8003240:	89e3      	ldrh	r3, [r4, #14]
 8003242:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8003244:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8003248:	82a0      	strh	r0, [r4, #20]
 800324a:	2000      	movs	r0, #0
 800324c:	1ad2      	subs	r2, r2, r3
 800324e:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 8003252:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8003254:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 8003256:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8003258:	4a12      	ldr	r2, [pc, #72]	; (80032a4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 800325a:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800325e:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8003260:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8003264:	691b      	ldr	r3, [r3, #16]
 8003266:	f8ad 1000 	strh.w	r1, [sp]
 800326a:	f8ad 2006 	strh.w	r2, [sp, #6]
 800326e:	4669      	mov	r1, sp
 8003270:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8003272:	7aa3      	ldrb	r3, [r4, #10]
 8003274:	2b01      	cmp	r3, #1
 8003276:	d1d4      	bne.n	8003222 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8003278:	4b0b      	ldr	r3, [pc, #44]	; (80032a8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 800327a:	781b      	ldrb	r3, [r3, #0]
 800327c:	2b00      	cmp	r3, #0
 800327e:	d0d0      	beq.n	8003222 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003280:	f011 fc0e 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003284:	b002      	add	sp, #8
 8003286:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800328a:	f011 bc0f 	b.w	8014aac <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800328e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003292:	2800      	cmp	r0, #0
 8003294:	bfd8      	it	le
 8003296:	460a      	movle	r2, r1
 8003298:	4413      	add	r3, r2
 800329a:	81e3      	strh	r3, [r4, #14]
 800329c:	e7cd      	b.n	800323a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 800329e:	bf00      	nop
 80032a0:	200137b0 	.word	0x200137b0
 80032a4:	200137b2 	.word	0x200137b2
 80032a8:	200137ba 	.word	0x200137ba

080032ac <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80032ac:	b510      	push	{r4, lr}
 80032ae:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80032b0:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 80032b4:	b158      	cbz	r0, 80032ce <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80032b6:	6803      	ldr	r3, [r0, #0]
 80032b8:	68db      	ldr	r3, [r3, #12]
 80032ba:	4798      	blx	r3
 80032bc:	b138      	cbz	r0, 80032ce <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80032be:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 80032c2:	6803      	ldr	r3, [r0, #0]
 80032c4:	689b      	ldr	r3, [r3, #8]
 80032c6:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80032c8:	2300      	movs	r3, #0
 80032ca:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 80032ce:	bd10      	pop	{r4, pc}

080032d0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 80032d0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80032d4:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80032d8:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80032da:	68a8      	ldr	r0, [r5, #8]
 80032dc:	6803      	ldr	r3, [r0, #0]
 80032de:	6a1b      	ldr	r3, [r3, #32]
 80032e0:	4798      	blx	r3
 80032e2:	2897      	cmp	r0, #151	; 0x97
 80032e4:	d805      	bhi.n	80032f2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 80032e6:	4b46      	ldr	r3, [pc, #280]	; (8003400 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 80032e8:	4a46      	ldr	r2, [pc, #280]	; (8003404 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80032ea:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80032ec:	4846      	ldr	r0, [pc, #280]	; (8003408 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 80032ee:	f024 ff27 	bl	8028140 <__assert_func>
 80032f2:	6868      	ldr	r0, [r5, #4]
 80032f4:	6803      	ldr	r3, [r0, #0]
 80032f6:	6a1b      	ldr	r3, [r3, #32]
 80032f8:	4798      	blx	r3
 80032fa:	280f      	cmp	r0, #15
 80032fc:	d803      	bhi.n	8003306 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 80032fe:	4b43      	ldr	r3, [pc, #268]	; (800340c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 8003300:	4a40      	ldr	r2, [pc, #256]	; (8003404 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8003302:	21a4      	movs	r1, #164	; 0xa4
 8003304:	e7f2      	b.n	80032ec <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003306:	68e8      	ldr	r0, [r5, #12]
 8003308:	6803      	ldr	r3, [r0, #0]
 800330a:	6a1b      	ldr	r3, [r3, #32]
 800330c:	4798      	blx	r3
 800330e:	280b      	cmp	r0, #11
 8003310:	d803      	bhi.n	800331a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 8003312:	4b3f      	ldr	r3, [pc, #252]	; (8003410 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 8003314:	4a3b      	ldr	r2, [pc, #236]	; (8003404 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8003316:	21a5      	movs	r1, #165	; 0xa5
 8003318:	e7e8      	b.n	80032ec <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 800331a:	f011 fbc1 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800331e:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8003418 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8003322:	3004      	adds	r0, #4
 8003324:	f011 fc22 	bl	8014b6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003328:	f8d9 0000 	ldr.w	r0, [r9]
 800332c:	b110      	cbz	r0, 8003334 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800332e:	6803      	ldr	r3, [r0, #0]
 8003330:	68db      	ldr	r3, [r3, #12]
 8003332:	4798      	blx	r3
    if (*currentTrans)
 8003334:	f8d9 0000 	ldr.w	r0, [r9]
 8003338:	b110      	cbz	r0, 8003340 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800333a:	6803      	ldr	r3, [r0, #0]
 800333c:	681b      	ldr	r3, [r3, #0]
 800333e:	4798      	blx	r3
    if (*currentScreen)
 8003340:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 800341c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8003344:	f8d8 0000 	ldr.w	r0, [r8]
 8003348:	b110      	cbz	r0, 8003350 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800334a:	6803      	ldr	r3, [r0, #0]
 800334c:	695b      	ldr	r3, [r3, #20]
 800334e:	4798      	blx	r3
    if (*currentPresenter)
 8003350:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003354:	b110      	cbz	r0, 800335c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8003356:	6803      	ldr	r3, [r0, #0]
 8003358:	685b      	ldr	r3, [r3, #4]
 800335a:	4798      	blx	r3
    if (*currentScreen)
 800335c:	f8d8 0000 	ldr.w	r0, [r8]
 8003360:	b110      	cbz	r0, 8003368 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8003362:	6803      	ldr	r3, [r0, #0]
 8003364:	681b      	ldr	r3, [r3, #0]
 8003366:	4798      	blx	r3
    if (*currentPresenter)
 8003368:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800336c:	b110      	cbz	r0, 8003374 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800336e:	6803      	ldr	r3, [r0, #0]
 8003370:	689b      	ldr	r3, [r3, #8]
 8003372:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003374:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8003376:	6803      	ldr	r3, [r0, #0]
 8003378:	2100      	movs	r1, #0
 800337a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800337c:	4798      	blx	r3
        : screenContainer(0), done(false)
 800337e:	f04f 0b00 	mov.w	fp, #0
 8003382:	4b24      	ldr	r3, [pc, #144]	; (8003414 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 8003384:	6003      	str	r3, [r0, #0]
 8003386:	4604      	mov	r4, r0
 8003388:	f8c0 b004 	str.w	fp, [r0, #4]
 800338c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003390:	68a8      	ldr	r0, [r5, #8]
 8003392:	6803      	ldr	r3, [r0, #0]
 8003394:	4659      	mov	r1, fp
 8003396:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003398:	4798      	blx	r3
 800339a:	4606      	mov	r6, r0
 800339c:	f005 f844 	bl	8008428 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80033a0:	6868      	ldr	r0, [r5, #4]
 80033a2:	6803      	ldr	r3, [r0, #0]
 80033a4:	4659      	mov	r1, fp
 80033a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80033a8:	4798      	blx	r3
 80033aa:	4631      	mov	r1, r6
 80033ac:	4605      	mov	r5, r0
 80033ae:	f005 f817 	bl	80083e0 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 80033b2:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80033b6:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80033ba:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80033be:	b1e5      	cbz	r5, 80033fa <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 80033c0:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80033c2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80033c6:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80033c8:	f8c5 a008 	str.w	sl, [r5, #8]
 80033cc:	4630      	mov	r0, r6
 80033ce:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80033d0:	63f5      	str	r5, [r6, #60]	; 0x3c
 80033d2:	4798      	blx	r3
    newPresenter->activate();
 80033d4:	682b      	ldr	r3, [r5, #0]
 80033d6:	4628      	mov	r0, r5
 80033d8:	681b      	ldr	r3, [r3, #0]
 80033da:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80033dc:	4621      	mov	r1, r4
 80033de:	4630      	mov	r0, r6
 80033e0:	f013 f98a 	bl	80166f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80033e4:	6823      	ldr	r3, [r4, #0]
 80033e6:	4620      	mov	r0, r4
 80033e8:	691b      	ldr	r3, [r3, #16]
 80033ea:	4798      	blx	r3
    newTransition->invalidate();
 80033ec:	6823      	ldr	r3, [r4, #0]
 80033ee:	695b      	ldr	r3, [r3, #20]
 80033f0:	4620      	mov	r0, r4
}
 80033f2:	b001      	add	sp, #4
 80033f4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80033f8:	4718      	bx	r3
    model->bind(newPresenter);
 80033fa:	462b      	mov	r3, r5
 80033fc:	e7e1      	b.n	80033c2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 80033fe:	bf00      	nop
 8003400:	08029ec8 	.word	0x08029ec8
 8003404:	08029f56 	.word	0x08029f56
 8003408:	0802a064 	.word	0x0802a064
 800340c:	0802a0ab 	.word	0x0802a0ab
 8003410:	0802a14e 	.word	0x0802a14e
 8003414:	0802b56c 	.word	0x0802b56c
 8003418:	20013804 	.word	0x20013804
 800341c:	20013800 	.word	0x20013800

08003420 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003420:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003422:	4604      	mov	r4, r0
        animationCounter++;
 8003424:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8003426:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8003428:	3001      	adds	r0, #1
 800342a:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 800342c:	4298      	cmp	r0, r3
        animationCounter++;
 800342e:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8003430:	d905      	bls.n	800343e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 8003432:	2301      	movs	r3, #1
 8003434:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8003436:	2300      	movs	r3, #0
 8003438:	72a3      	strb	r3, [r4, #10]
    }
 800343a:	b003      	add	sp, #12
 800343c:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800343e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003442:	2100      	movs	r1, #0
 8003444:	f013 f95e 	bl	8016704 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003448:	f010 0201 	ands.w	r2, r0, #1
 800344c:	b283      	uxth	r3, r0
 800344e:	d128      	bne.n	80034a2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003450:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003452:	4b18      	ldr	r3, [pc, #96]	; (80034b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8003454:	4818      	ldr	r0, [pc, #96]	; (80034b8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003456:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8003458:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800345a:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800345c:	f9b0 0000 	ldrsh.w	r0, [r0]
 8003460:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003464:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8003466:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8003468:	442b      	add	r3, r5
 800346a:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800346c:	b212      	sxth	r2, r2
 800346e:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8003472:	6803      	ldr	r3, [r0, #0]
 8003474:	8322      	strh	r2, [r4, #24]
 8003476:	f8ad 2000 	strh.w	r2, [sp]
 800347a:	2200      	movs	r2, #0
 800347c:	691b      	ldr	r3, [r3, #16]
 800347e:	f8ad 2002 	strh.w	r2, [sp, #2]
 8003482:	4669      	mov	r1, sp
 8003484:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8003486:	7aa3      	ldrb	r3, [r4, #10]
 8003488:	2b01      	cmp	r3, #1
 800348a:	d1d6      	bne.n	800343a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 800348c:	4b0b      	ldr	r3, [pc, #44]	; (80034bc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 800348e:	781b      	ldrb	r3, [r3, #0]
 8003490:	2b00      	cmp	r3, #0
 8003492:	d0d2      	beq.n	800343a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003494:	f011 fb04 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003498:	b003      	add	sp, #12
 800349a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800349e:	f011 bb05 	b.w	8014aac <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80034a2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80034a6:	2800      	cmp	r0, #0
 80034a8:	bfd8      	it	le
 80034aa:	460a      	movle	r2, r1
 80034ac:	4413      	add	r3, r2
 80034ae:	81e3      	strh	r3, [r4, #14]
 80034b0:	e7cf      	b.n	8003452 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 80034b2:	bf00      	nop
 80034b4:	200137b0 	.word	0x200137b0
 80034b8:	200137b2 	.word	0x200137b2
 80034bc:	200137ba 	.word	0x200137ba

080034c0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 80034c0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80034c4:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80034c8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80034ca:	68a8      	ldr	r0, [r5, #8]
 80034cc:	6803      	ldr	r3, [r0, #0]
 80034ce:	6a1b      	ldr	r3, [r3, #32]
 80034d0:	4798      	blx	r3
 80034d2:	f241 137b 	movw	r3, #4475	; 0x117b
 80034d6:	4298      	cmp	r0, r3
 80034d8:	d805      	bhi.n	80034e6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 80034da:	4b46      	ldr	r3, [pc, #280]	; (80035f4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80034dc:	4a46      	ldr	r2, [pc, #280]	; (80035f8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80034de:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80034e0:	4846      	ldr	r0, [pc, #280]	; (80035fc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 80034e2:	f024 fe2d 	bl	8028140 <__assert_func>
 80034e6:	6868      	ldr	r0, [r5, #4]
 80034e8:	6803      	ldr	r3, [r0, #0]
 80034ea:	6a1b      	ldr	r3, [r3, #32]
 80034ec:	4798      	blx	r3
 80034ee:	280f      	cmp	r0, #15
 80034f0:	d803      	bhi.n	80034fa <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 80034f2:	4b43      	ldr	r3, [pc, #268]	; (8003600 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 80034f4:	4a40      	ldr	r2, [pc, #256]	; (80035f8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80034f6:	21a4      	movs	r1, #164	; 0xa4
 80034f8:	e7f2      	b.n	80034e0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80034fa:	68e8      	ldr	r0, [r5, #12]
 80034fc:	6803      	ldr	r3, [r0, #0]
 80034fe:	6a1b      	ldr	r3, [r3, #32]
 8003500:	4798      	blx	r3
 8003502:	280b      	cmp	r0, #11
 8003504:	d803      	bhi.n	800350e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 8003506:	4b3f      	ldr	r3, [pc, #252]	; (8003604 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 8003508:	4a3b      	ldr	r2, [pc, #236]	; (80035f8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 800350a:	21a5      	movs	r1, #165	; 0xa5
 800350c:	e7e8      	b.n	80034e0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800350e:	f011 fac7 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003512:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 800360c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 8003516:	3004      	adds	r0, #4
 8003518:	f011 fb28 	bl	8014b6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800351c:	f8d9 0000 	ldr.w	r0, [r9]
 8003520:	b110      	cbz	r0, 8003528 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8003522:	6803      	ldr	r3, [r0, #0]
 8003524:	68db      	ldr	r3, [r3, #12]
 8003526:	4798      	blx	r3
    if (*currentTrans)
 8003528:	f8d9 0000 	ldr.w	r0, [r9]
 800352c:	b110      	cbz	r0, 8003534 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 800352e:	6803      	ldr	r3, [r0, #0]
 8003530:	681b      	ldr	r3, [r3, #0]
 8003532:	4798      	blx	r3
    if (*currentScreen)
 8003534:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8003610 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8003538:	f8d8 0000 	ldr.w	r0, [r8]
 800353c:	b110      	cbz	r0, 8003544 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800353e:	6803      	ldr	r3, [r0, #0]
 8003540:	695b      	ldr	r3, [r3, #20]
 8003542:	4798      	blx	r3
    if (*currentPresenter)
 8003544:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003548:	b110      	cbz	r0, 8003550 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 800354a:	6803      	ldr	r3, [r0, #0]
 800354c:	685b      	ldr	r3, [r3, #4]
 800354e:	4798      	blx	r3
    if (*currentScreen)
 8003550:	f8d8 0000 	ldr.w	r0, [r8]
 8003554:	b110      	cbz	r0, 800355c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003556:	6803      	ldr	r3, [r0, #0]
 8003558:	681b      	ldr	r3, [r3, #0]
 800355a:	4798      	blx	r3
    if (*currentPresenter)
 800355c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003560:	b110      	cbz	r0, 8003568 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003562:	6803      	ldr	r3, [r0, #0]
 8003564:	689b      	ldr	r3, [r3, #8]
 8003566:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003568:	68e8      	ldr	r0, [r5, #12]
 800356a:	6803      	ldr	r3, [r0, #0]
 800356c:	2100      	movs	r1, #0
 800356e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003570:	4798      	blx	r3
 8003572:	f04f 0b00 	mov.w	fp, #0
 8003576:	4b24      	ldr	r3, [pc, #144]	; (8003608 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8003578:	6003      	str	r3, [r0, #0]
 800357a:	4604      	mov	r4, r0
 800357c:	f8c0 b004 	str.w	fp, [r0, #4]
 8003580:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003584:	68a8      	ldr	r0, [r5, #8]
 8003586:	6803      	ldr	r3, [r0, #0]
 8003588:	4659      	mov	r1, fp
 800358a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800358c:	4798      	blx	r3
 800358e:	4606      	mov	r6, r0
 8003590:	f004 fc4c 	bl	8007e2c <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003594:	6868      	ldr	r0, [r5, #4]
 8003596:	6803      	ldr	r3, [r0, #0]
 8003598:	4659      	mov	r1, fp
 800359a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800359c:	4798      	blx	r3
 800359e:	4631      	mov	r1, r6
 80035a0:	4605      	mov	r5, r0
 80035a2:	f004 fc1d 	bl	8007de0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 80035a6:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80035aa:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80035ae:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80035b2:	b1e5      	cbz	r5, 80035ee <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 80035b4:	1d2b      	adds	r3, r5, #4
 80035b6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80035ba:	6833      	ldr	r3, [r6, #0]
 80035bc:	f8c5 a008 	str.w	sl, [r5, #8]
 80035c0:	4630      	mov	r0, r6
 80035c2:	68db      	ldr	r3, [r3, #12]
 80035c4:	63f5      	str	r5, [r6, #60]	; 0x3c
 80035c6:	4798      	blx	r3
    newPresenter->activate();
 80035c8:	682b      	ldr	r3, [r5, #0]
 80035ca:	4628      	mov	r0, r5
 80035cc:	681b      	ldr	r3, [r3, #0]
 80035ce:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80035d0:	4621      	mov	r1, r4
 80035d2:	4630      	mov	r0, r6
 80035d4:	f013 f890 	bl	80166f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80035d8:	6823      	ldr	r3, [r4, #0]
 80035da:	4620      	mov	r0, r4
 80035dc:	691b      	ldr	r3, [r3, #16]
 80035de:	4798      	blx	r3
    newTransition->invalidate();
 80035e0:	6823      	ldr	r3, [r4, #0]
 80035e2:	695b      	ldr	r3, [r3, #20]
 80035e4:	4620      	mov	r0, r4
}
 80035e6:	b001      	add	sp, #4
 80035e8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80035ec:	4718      	bx	r3
    model->bind(newPresenter);
 80035ee:	462b      	mov	r3, r5
 80035f0:	e7e1      	b.n	80035b6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 80035f2:	bf00      	nop
 80035f4:	08029ec8 	.word	0x08029ec8
 80035f8:	0802a1f1 	.word	0x0802a1f1
 80035fc:	0802a064 	.word	0x0802a064
 8003600:	0802a0ab 	.word	0x0802a0ab
 8003604:	0802a14e 	.word	0x0802a14e
 8003608:	0802b56c 	.word	0x0802b56c
 800360c:	20013804 	.word	0x20013804
 8003610:	20013800 	.word	0x20013800

08003614 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003614:	4b04      	ldr	r3, [pc, #16]	; (8003628 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8003616:	681b      	ldr	r3, [r3, #0]
 8003618:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800361c:	b10a      	cbz	r2, 8003622 <_ZN8touchgfx3HAL3lcdEv+0xe>
 800361e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003620:	b900      	cbnz	r0, 8003624 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8003622:	6898      	ldr	r0, [r3, #8]
    }
 8003624:	4770      	bx	lr
 8003626:	bf00      	nop
 8003628:	200137bc 	.word	0x200137bc

0800362c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800362c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800362e:	4604      	mov	r4, r0
 8003630:	4617      	mov	r7, r2
 8003632:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8003634:	f011 fb68 	bl	8014d08 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8003638:	4b10      	ldr	r3, [pc, #64]	; (800367c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 800363a:	601c      	str	r4, [r3, #0]
      model(m)
 800363c:	4b10      	ldr	r3, [pc, #64]	; (8003680 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800363e:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8003640:	4b10      	ldr	r3, [pc, #64]	; (8003684 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8003642:	2500      	movs	r5, #0
 8003644:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8003648:	4b0f      	ldr	r3, [pc, #60]	; (8003688 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 800364a:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 800364e:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003650:	6803      	ldr	r3, [r0, #0]
 8003652:	2101      	movs	r1, #1
 8003654:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8003656:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 800365a:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800365e:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8003660:	4628      	mov	r0, r5
 8003662:	f004 fa21 	bl	8007aa8 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8003666:	f7ff ffd5 	bl	8003614 <_ZN8touchgfx3HAL3lcdEv>
 800366a:	f01a fd1e 	bl	801e0aa <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800366e:	f7ff ffd1 	bl	8003614 <_ZN8touchgfx3HAL3lcdEv>
 8003672:	f01a fd95 	bl	801e1a0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8003676:	4620      	mov	r0, r4
 8003678:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800367a:	bf00      	nop
 800367c:	20013810 	.word	0x20013810
 8003680:	0802b518 	.word	0x0802b518
 8003684:	0802b500 	.word	0x0802b500
 8003688:	200137bc 	.word	0x200137bc

0800368c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800368c:	4b06      	ldr	r3, [pc, #24]	; (80036a8 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 800368e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003692:	2300      	movs	r3, #0
 8003694:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003698:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800369c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80036a0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80036a4:	4770      	bx	lr
 80036a6:	bf00      	nop
 80036a8:	080034c1 	.word	0x080034c1

080036ac <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 80036ac:	4b06      	ldr	r3, [pc, #24]	; (80036c8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 80036ae:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80036b2:	2300      	movs	r3, #0
 80036b4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80036b8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80036bc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80036c0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80036c4:	4770      	bx	lr
 80036c6:	bf00      	nop
 80036c8:	08003cd1 	.word	0x08003cd1

080036cc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 80036cc:	4b06      	ldr	r3, [pc, #24]	; (80036e8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 80036ce:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80036d2:	2300      	movs	r3, #0
 80036d4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80036d8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80036dc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80036e0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80036e4:	4770      	bx	lr
 80036e6:	bf00      	nop
 80036e8:	08004af5 	.word	0x08004af5

080036ec <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 80036ec:	4b06      	ldr	r3, [pc, #24]	; (8003708 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 80036ee:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80036f2:	2300      	movs	r3, #0
 80036f4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80036f8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80036fc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003700:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003704:	4770      	bx	lr
 8003706:	bf00      	nop
 8003708:	08003b91 	.word	0x08003b91

0800370c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 800370c:	4b06      	ldr	r3, [pc, #24]	; (8003728 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 800370e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003712:	2300      	movs	r3, #0
 8003714:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003718:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800371c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003720:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003724:	4770      	bx	lr
 8003726:	bf00      	nop
 8003728:	080049b5 	.word	0x080049b5

0800372c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 800372c:	4b06      	ldr	r3, [pc, #24]	; (8003748 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 800372e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003732:	2300      	movs	r3, #0
 8003734:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003738:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800373c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003740:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003744:	4770      	bx	lr
 8003746:	bf00      	nop
 8003748:	08004875 	.word	0x08004875

0800374c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 800374c:	4b06      	ldr	r3, [pc, #24]	; (8003768 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 800374e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003752:	2300      	movs	r3, #0
 8003754:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003758:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800375c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003760:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003764:	4770      	bx	lr
 8003766:	bf00      	nop
 8003768:	08004735 	.word	0x08004735

0800376c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 800376c:	4b06      	ldr	r3, [pc, #24]	; (8003788 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 800376e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003772:	2300      	movs	r3, #0
 8003774:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003778:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800377c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003780:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003784:	4770      	bx	lr
 8003786:	bf00      	nop
 8003788:	080045f5 	.word	0x080045f5

0800378c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 800378c:	4b06      	ldr	r3, [pc, #24]	; (80037a8 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 800378e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003792:	2300      	movs	r3, #0
 8003794:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003798:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800379c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80037a0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80037a4:	4770      	bx	lr
 80037a6:	bf00      	nop
 80037a8:	08003a51 	.word	0x08003a51

080037ac <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 80037ac:	4b06      	ldr	r3, [pc, #24]	; (80037c8 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 80037ae:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80037b2:	2300      	movs	r3, #0
 80037b4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80037b8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80037bc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80037c0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80037c4:	4770      	bx	lr
 80037c6:	bf00      	nop
 80037c8:	080044b5 	.word	0x080044b5

080037cc <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 80037cc:	4b06      	ldr	r3, [pc, #24]	; (80037e8 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 80037ce:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80037d2:	2300      	movs	r3, #0
 80037d4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80037d8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80037dc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80037e0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80037e4:	4770      	bx	lr
 80037e6:	bf00      	nop
 80037e8:	08004375 	.word	0x08004375

080037ec <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 80037ec:	4b06      	ldr	r3, [pc, #24]	; (8003808 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 80037ee:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80037f2:	2300      	movs	r3, #0
 80037f4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80037f8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80037fc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003800:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003804:	4770      	bx	lr
 8003806:	bf00      	nop
 8003808:	08004235 	.word	0x08004235

0800380c <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>:
 800380c:	4b06      	ldr	r3, [pc, #24]	; (8003828 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv+0x1c>)
 800380e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003812:	2300      	movs	r3, #0
 8003814:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003818:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800381c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003820:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003824:	4770      	bx	lr
 8003826:	bf00      	nop
 8003828:	08003911 	.word	0x08003911

0800382c <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 800382c:	4b06      	ldr	r3, [pc, #24]	; (8003848 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 800382e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003832:	2300      	movs	r3, #0
 8003834:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003838:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800383c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003840:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003844:	4770      	bx	lr
 8003846:	bf00      	nop
 8003848:	080040f5 	.word	0x080040f5

0800384c <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>:
 800384c:	4b06      	ldr	r3, [pc, #24]	; (8003868 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv+0x1c>)
 800384e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003852:	2300      	movs	r3, #0
 8003854:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003858:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800385c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003860:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003864:	4770      	bx	lr
 8003866:	bf00      	nop
 8003868:	08003fb5 	.word	0x08003fb5

0800386c <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 800386c:	4b06      	ldr	r3, [pc, #24]	; (8003888 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 800386e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003872:	2300      	movs	r3, #0
 8003874:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003878:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800387c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003880:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003884:	4770      	bx	lr
 8003886:	bf00      	nop
 8003888:	08003e75 	.word	0x08003e75

0800388c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 800388c:	4b06      	ldr	r3, [pc, #24]	; (80038a8 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 800388e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003892:	2300      	movs	r3, #0
 8003894:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003898:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800389c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80038a0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80038a4:	4770      	bx	lr
 80038a6:	bf00      	nop
 80038a8:	080032d1 	.word	0x080032d1

080038ac <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 80038ac:	6803      	ldr	r3, [r0, #0]
 80038ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038b0:	4718      	bx	r3
	...

080038b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 80038b4:	4b12      	ldr	r3, [pc, #72]	; (8003900 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 80038b6:	b513      	push	{r0, r1, r4, lr}
          solid()
 80038b8:	6003      	str	r3, [r0, #0]
 80038ba:	f44f 7380 	mov.w	r3, #256	; 0x100
 80038be:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 80038c0:	4b10      	ldr	r3, [pc, #64]	; (8003904 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 80038c2:	7241      	strb	r1, [r0, #9]
 80038c4:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80038c6:	4910      	ldr	r1, [pc, #64]	; (8003908 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 80038c8:	4b10      	ldr	r3, [pc, #64]	; (800390c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80038ca:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 80038ce:	f9b3 3000 	ldrsh.w	r3, [r3]
 80038d2:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 80038d4:	2200      	movs	r2, #0
 80038d6:	6042      	str	r2, [r0, #4]
 80038d8:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 80038da:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 80038dc:	81c2      	strh	r2, [r0, #14]
          solid()
 80038de:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80038e2:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80038e6:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 80038ea:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 80038ee:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80038f0:	9100      	str	r1, [sp, #0]
 80038f2:	3010      	adds	r0, #16
 80038f4:	4611      	mov	r1, r2
 80038f6:	f7fe fddf 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 80038fa:	4620      	mov	r0, r4
 80038fc:	b002      	add	sp, #8
 80038fe:	bd10      	pop	{r4, pc}
 8003900:	0802b5b4 	.word	0x0802b5b4
 8003904:	0802b498 	.word	0x0802b498
 8003908:	200137b2 	.word	0x200137b2
 800390c:	200137b0 	.word	0x200137b0

08003910 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv>:
{
 8003910:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003914:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003918:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800391a:	68a0      	ldr	r0, [r4, #8]
 800391c:	6803      	ldr	r3, [r0, #0]
 800391e:	6a1b      	ldr	r3, [r3, #32]
 8003920:	4798      	blx	r3
 8003922:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003926:	d205      	bcs.n	8003934 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x24>
 8003928:	4b42      	ldr	r3, [pc, #264]	; (8003a34 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x124>)
 800392a:	4a43      	ldr	r2, [pc, #268]	; (8003a38 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 800392c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800392e:	4843      	ldr	r0, [pc, #268]	; (8003a3c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x12c>)
 8003930:	f024 fc06 	bl	8028140 <__assert_func>
 8003934:	6860      	ldr	r0, [r4, #4]
 8003936:	6803      	ldr	r3, [r0, #0]
 8003938:	6a1b      	ldr	r3, [r3, #32]
 800393a:	4798      	blx	r3
 800393c:	280f      	cmp	r0, #15
 800393e:	d803      	bhi.n	8003948 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x38>
 8003940:	4b3f      	ldr	r3, [pc, #252]	; (8003a40 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x130>)
 8003942:	4a3d      	ldr	r2, [pc, #244]	; (8003a38 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003944:	21a4      	movs	r1, #164	; 0xa4
 8003946:	e7f2      	b.n	800392e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003948:	68e0      	ldr	r0, [r4, #12]
 800394a:	6803      	ldr	r3, [r0, #0]
 800394c:	6a1b      	ldr	r3, [r3, #32]
 800394e:	4798      	blx	r3
 8003950:	2837      	cmp	r0, #55	; 0x37
 8003952:	d803      	bhi.n	800395c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x4c>
 8003954:	4b3b      	ldr	r3, [pc, #236]	; (8003a44 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x134>)
 8003956:	4a38      	ldr	r2, [pc, #224]	; (8003a38 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003958:	21a5      	movs	r1, #165	; 0xa5
 800395a:	e7e8      	b.n	800392e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800395c:	f011 f8a0 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003960:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003a48 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x138>
 8003964:	3004      	adds	r0, #4
 8003966:	f011 f901 	bl	8014b6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800396a:	f8d9 0000 	ldr.w	r0, [r9]
 800396e:	b110      	cbz	r0, 8003976 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003970:	6803      	ldr	r3, [r0, #0]
 8003972:	68db      	ldr	r3, [r3, #12]
 8003974:	4798      	blx	r3
    if (*currentTrans)
 8003976:	f8d9 0000 	ldr.w	r0, [r9]
 800397a:	b110      	cbz	r0, 8003982 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 800397c:	6803      	ldr	r3, [r0, #0]
 800397e:	681b      	ldr	r3, [r3, #0]
 8003980:	4798      	blx	r3
    if (*currentScreen)
 8003982:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003a4c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x13c>
 8003986:	f8d8 0000 	ldr.w	r0, [r8]
 800398a:	b110      	cbz	r0, 8003992 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800398c:	6803      	ldr	r3, [r0, #0]
 800398e:	695b      	ldr	r3, [r3, #20]
 8003990:	4798      	blx	r3
    if (*currentPresenter)
 8003992:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003996:	b110      	cbz	r0, 800399e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003998:	6803      	ldr	r3, [r0, #0]
 800399a:	685b      	ldr	r3, [r3, #4]
 800399c:	4798      	blx	r3
    if (*currentScreen)
 800399e:	f8d8 0000 	ldr.w	r0, [r8]
 80039a2:	b110      	cbz	r0, 80039aa <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 80039a4:	6803      	ldr	r3, [r0, #0]
 80039a6:	681b      	ldr	r3, [r3, #0]
 80039a8:	4798      	blx	r3
    if (*currentPresenter)
 80039aa:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80039ae:	b110      	cbz	r0, 80039b6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80039b0:	6803      	ldr	r3, [r0, #0]
 80039b2:	689b      	ldr	r3, [r3, #8]
 80039b4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80039b6:	68e0      	ldr	r0, [r4, #12]
 80039b8:	2100      	movs	r1, #0
 80039ba:	f7ff ff77 	bl	80038ac <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 80039be:	2114      	movs	r1, #20
 80039c0:	4605      	mov	r5, r0
 80039c2:	f7ff ff77 	bl	80038b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80039c6:	68a0      	ldr	r0, [r4, #8]
 80039c8:	6803      	ldr	r3, [r0, #0]
 80039ca:	2100      	movs	r1, #0
 80039cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80039ce:	4798      	blx	r3
 80039d0:	4606      	mov	r6, r0
 80039d2:	f004 f907 	bl	8007be4 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80039d6:	6860      	ldr	r0, [r4, #4]
 80039d8:	6803      	ldr	r3, [r0, #0]
 80039da:	2100      	movs	r1, #0
 80039dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80039de:	4798      	blx	r3
 80039e0:	4631      	mov	r1, r6
 80039e2:	4604      	mov	r4, r0
 80039e4:	f004 f8d8 	bl	8007b98 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 80039e8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80039ec:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80039f0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80039f4:	b1dc      	cbz	r4, 8003a2e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x11e>
 80039f6:	1d23      	adds	r3, r4, #4
 80039f8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80039fc:	6833      	ldr	r3, [r6, #0]
 80039fe:	f8c4 a008 	str.w	sl, [r4, #8]
 8003a02:	4630      	mov	r0, r6
 8003a04:	68db      	ldr	r3, [r3, #12]
 8003a06:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003a08:	4798      	blx	r3
    newPresenter->activate();
 8003a0a:	6823      	ldr	r3, [r4, #0]
 8003a0c:	4620      	mov	r0, r4
 8003a0e:	681b      	ldr	r3, [r3, #0]
 8003a10:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003a12:	4629      	mov	r1, r5
 8003a14:	4630      	mov	r0, r6
 8003a16:	f012 fe6f 	bl	80166f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003a1a:	682b      	ldr	r3, [r5, #0]
 8003a1c:	4628      	mov	r0, r5
 8003a1e:	691b      	ldr	r3, [r3, #16]
 8003a20:	4798      	blx	r3
    newTransition->invalidate();
 8003a22:	682b      	ldr	r3, [r5, #0]
 8003a24:	4628      	mov	r0, r5
 8003a26:	695b      	ldr	r3, [r3, #20]
}
 8003a28:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003a2c:	4718      	bx	r3
    model->bind(newPresenter);
 8003a2e:	4623      	mov	r3, r4
 8003a30:	e7e2      	b.n	80039f8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xe8>
 8003a32:	bf00      	nop
 8003a34:	08029ec8 	.word	0x08029ec8
 8003a38:	0802a2f9 	.word	0x0802a2f9
 8003a3c:	0802a064 	.word	0x0802a064
 8003a40:	0802a0ab 	.word	0x0802a0ab
 8003a44:	0802a14e 	.word	0x0802a14e
 8003a48:	20013804 	.word	0x20013804
 8003a4c:	20013800 	.word	0x20013800

08003a50 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8003a50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003a54:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003a58:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003a5a:	68a0      	ldr	r0, [r4, #8]
 8003a5c:	6803      	ldr	r3, [r0, #0]
 8003a5e:	6a1b      	ldr	r3, [r3, #32]
 8003a60:	4798      	blx	r3
 8003a62:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003a66:	d205      	bcs.n	8003a74 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8003a68:	4b42      	ldr	r3, [pc, #264]	; (8003b74 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8003a6a:	4a43      	ldr	r2, [pc, #268]	; (8003b78 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003a6c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003a6e:	4843      	ldr	r0, [pc, #268]	; (8003b7c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8003a70:	f024 fb66 	bl	8028140 <__assert_func>
 8003a74:	6860      	ldr	r0, [r4, #4]
 8003a76:	6803      	ldr	r3, [r0, #0]
 8003a78:	6a1b      	ldr	r3, [r3, #32]
 8003a7a:	4798      	blx	r3
 8003a7c:	280f      	cmp	r0, #15
 8003a7e:	d803      	bhi.n	8003a88 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8003a80:	4b3f      	ldr	r3, [pc, #252]	; (8003b80 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8003a82:	4a3d      	ldr	r2, [pc, #244]	; (8003b78 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003a84:	21a4      	movs	r1, #164	; 0xa4
 8003a86:	e7f2      	b.n	8003a6e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003a88:	68e0      	ldr	r0, [r4, #12]
 8003a8a:	6803      	ldr	r3, [r0, #0]
 8003a8c:	6a1b      	ldr	r3, [r3, #32]
 8003a8e:	4798      	blx	r3
 8003a90:	2837      	cmp	r0, #55	; 0x37
 8003a92:	d803      	bhi.n	8003a9c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8003a94:	4b3b      	ldr	r3, [pc, #236]	; (8003b84 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8003a96:	4a38      	ldr	r2, [pc, #224]	; (8003b78 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003a98:	21a5      	movs	r1, #165	; 0xa5
 8003a9a:	e7e8      	b.n	8003a6e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003a9c:	f011 f800 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003aa0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003b88 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8003aa4:	3004      	adds	r0, #4
 8003aa6:	f011 f861 	bl	8014b6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003aaa:	f8d9 0000 	ldr.w	r0, [r9]
 8003aae:	b110      	cbz	r0, 8003ab6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003ab0:	6803      	ldr	r3, [r0, #0]
 8003ab2:	68db      	ldr	r3, [r3, #12]
 8003ab4:	4798      	blx	r3
    if (*currentTrans)
 8003ab6:	f8d9 0000 	ldr.w	r0, [r9]
 8003aba:	b110      	cbz	r0, 8003ac2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003abc:	6803      	ldr	r3, [r0, #0]
 8003abe:	681b      	ldr	r3, [r3, #0]
 8003ac0:	4798      	blx	r3
    if (*currentScreen)
 8003ac2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003b8c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8003ac6:	f8d8 0000 	ldr.w	r0, [r8]
 8003aca:	b110      	cbz	r0, 8003ad2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003acc:	6803      	ldr	r3, [r0, #0]
 8003ace:	695b      	ldr	r3, [r3, #20]
 8003ad0:	4798      	blx	r3
    if (*currentPresenter)
 8003ad2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003ad6:	b110      	cbz	r0, 8003ade <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003ad8:	6803      	ldr	r3, [r0, #0]
 8003ada:	685b      	ldr	r3, [r3, #4]
 8003adc:	4798      	blx	r3
    if (*currentScreen)
 8003ade:	f8d8 0000 	ldr.w	r0, [r8]
 8003ae2:	b110      	cbz	r0, 8003aea <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003ae4:	6803      	ldr	r3, [r0, #0]
 8003ae6:	681b      	ldr	r3, [r3, #0]
 8003ae8:	4798      	blx	r3
    if (*currentPresenter)
 8003aea:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003aee:	b110      	cbz	r0, 8003af6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003af0:	6803      	ldr	r3, [r0, #0]
 8003af2:	689b      	ldr	r3, [r3, #8]
 8003af4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003af6:	68e0      	ldr	r0, [r4, #12]
 8003af8:	2100      	movs	r1, #0
 8003afa:	f7ff fed7 	bl	80038ac <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003afe:	2114      	movs	r1, #20
 8003b00:	4605      	mov	r5, r0
 8003b02:	f7ff fed7 	bl	80038b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003b06:	68a0      	ldr	r0, [r4, #8]
 8003b08:	6803      	ldr	r3, [r0, #0]
 8003b0a:	2100      	movs	r1, #0
 8003b0c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b0e:	4798      	blx	r3
 8003b10:	4606      	mov	r6, r0
 8003b12:	f004 fa4b 	bl	8007fac <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003b16:	6860      	ldr	r0, [r4, #4]
 8003b18:	6803      	ldr	r3, [r0, #0]
 8003b1a:	2100      	movs	r1, #0
 8003b1c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b1e:	4798      	blx	r3
 8003b20:	4631      	mov	r1, r6
 8003b22:	4604      	mov	r4, r0
 8003b24:	f004 fa1c 	bl	8007f60 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8003b28:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003b2c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003b30:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003b34:	b1dc      	cbz	r4, 8003b6e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8003b36:	1d23      	adds	r3, r4, #4
 8003b38:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003b3c:	6833      	ldr	r3, [r6, #0]
 8003b3e:	f8c4 a008 	str.w	sl, [r4, #8]
 8003b42:	4630      	mov	r0, r6
 8003b44:	68db      	ldr	r3, [r3, #12]
 8003b46:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003b48:	4798      	blx	r3
    newPresenter->activate();
 8003b4a:	6823      	ldr	r3, [r4, #0]
 8003b4c:	4620      	mov	r0, r4
 8003b4e:	681b      	ldr	r3, [r3, #0]
 8003b50:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003b52:	4629      	mov	r1, r5
 8003b54:	4630      	mov	r0, r6
 8003b56:	f012 fdcf 	bl	80166f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003b5a:	682b      	ldr	r3, [r5, #0]
 8003b5c:	4628      	mov	r0, r5
 8003b5e:	691b      	ldr	r3, [r3, #16]
 8003b60:	4798      	blx	r3
    newTransition->invalidate();
 8003b62:	682b      	ldr	r3, [r5, #0]
 8003b64:	4628      	mov	r0, r5
 8003b66:	695b      	ldr	r3, [r3, #20]
}
 8003b68:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003b6c:	4718      	bx	r3
    model->bind(newPresenter);
 8003b6e:	4623      	mov	r3, r4
 8003b70:	e7e2      	b.n	8003b38 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8003b72:	bf00      	nop
 8003b74:	08029ec8 	.word	0x08029ec8
 8003b78:	0802a417 	.word	0x0802a417
 8003b7c:	0802a064 	.word	0x0802a064
 8003b80:	0802a0ab 	.word	0x0802a0ab
 8003b84:	0802a14e 	.word	0x0802a14e
 8003b88:	20013804 	.word	0x20013804
 8003b8c:	20013800 	.word	0x20013800

08003b90 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8003b90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003b94:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003b98:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003b9a:	68a0      	ldr	r0, [r4, #8]
 8003b9c:	6803      	ldr	r3, [r0, #0]
 8003b9e:	6a1b      	ldr	r3, [r3, #32]
 8003ba0:	4798      	blx	r3
 8003ba2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003ba6:	d205      	bcs.n	8003bb4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8003ba8:	4b42      	ldr	r3, [pc, #264]	; (8003cb4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8003baa:	4a43      	ldr	r2, [pc, #268]	; (8003cb8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003bac:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003bae:	4843      	ldr	r0, [pc, #268]	; (8003cbc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8003bb0:	f024 fac6 	bl	8028140 <__assert_func>
 8003bb4:	6860      	ldr	r0, [r4, #4]
 8003bb6:	6803      	ldr	r3, [r0, #0]
 8003bb8:	6a1b      	ldr	r3, [r3, #32]
 8003bba:	4798      	blx	r3
 8003bbc:	280f      	cmp	r0, #15
 8003bbe:	d803      	bhi.n	8003bc8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8003bc0:	4b3f      	ldr	r3, [pc, #252]	; (8003cc0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8003bc2:	4a3d      	ldr	r2, [pc, #244]	; (8003cb8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003bc4:	21a4      	movs	r1, #164	; 0xa4
 8003bc6:	e7f2      	b.n	8003bae <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003bc8:	68e0      	ldr	r0, [r4, #12]
 8003bca:	6803      	ldr	r3, [r0, #0]
 8003bcc:	6a1b      	ldr	r3, [r3, #32]
 8003bce:	4798      	blx	r3
 8003bd0:	2837      	cmp	r0, #55	; 0x37
 8003bd2:	d803      	bhi.n	8003bdc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8003bd4:	4b3b      	ldr	r3, [pc, #236]	; (8003cc4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8003bd6:	4a38      	ldr	r2, [pc, #224]	; (8003cb8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003bd8:	21a5      	movs	r1, #165	; 0xa5
 8003bda:	e7e8      	b.n	8003bae <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003bdc:	f010 ff60 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003be0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003cc8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8003be4:	3004      	adds	r0, #4
 8003be6:	f010 ffc1 	bl	8014b6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003bea:	f8d9 0000 	ldr.w	r0, [r9]
 8003bee:	b110      	cbz	r0, 8003bf6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003bf0:	6803      	ldr	r3, [r0, #0]
 8003bf2:	68db      	ldr	r3, [r3, #12]
 8003bf4:	4798      	blx	r3
    if (*currentTrans)
 8003bf6:	f8d9 0000 	ldr.w	r0, [r9]
 8003bfa:	b110      	cbz	r0, 8003c02 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003bfc:	6803      	ldr	r3, [r0, #0]
 8003bfe:	681b      	ldr	r3, [r3, #0]
 8003c00:	4798      	blx	r3
    if (*currentScreen)
 8003c02:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003ccc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8003c06:	f8d8 0000 	ldr.w	r0, [r8]
 8003c0a:	b110      	cbz	r0, 8003c12 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003c0c:	6803      	ldr	r3, [r0, #0]
 8003c0e:	695b      	ldr	r3, [r3, #20]
 8003c10:	4798      	blx	r3
    if (*currentPresenter)
 8003c12:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003c16:	b110      	cbz	r0, 8003c1e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003c18:	6803      	ldr	r3, [r0, #0]
 8003c1a:	685b      	ldr	r3, [r3, #4]
 8003c1c:	4798      	blx	r3
    if (*currentScreen)
 8003c1e:	f8d8 0000 	ldr.w	r0, [r8]
 8003c22:	b110      	cbz	r0, 8003c2a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003c24:	6803      	ldr	r3, [r0, #0]
 8003c26:	681b      	ldr	r3, [r3, #0]
 8003c28:	4798      	blx	r3
    if (*currentPresenter)
 8003c2a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003c2e:	b110      	cbz	r0, 8003c36 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003c30:	6803      	ldr	r3, [r0, #0]
 8003c32:	689b      	ldr	r3, [r3, #8]
 8003c34:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003c36:	68e0      	ldr	r0, [r4, #12]
 8003c38:	2100      	movs	r1, #0
 8003c3a:	f7ff fe37 	bl	80038ac <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003c3e:	2114      	movs	r1, #20
 8003c40:	4605      	mov	r5, r0
 8003c42:	f7ff fe37 	bl	80038b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003c46:	68a0      	ldr	r0, [r4, #8]
 8003c48:	6803      	ldr	r3, [r0, #0]
 8003c4a:	2100      	movs	r1, #0
 8003c4c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c4e:	4798      	blx	r3
 8003c50:	4606      	mov	r6, r0
 8003c52:	f004 f94b 	bl	8007eec <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003c56:	6860      	ldr	r0, [r4, #4]
 8003c58:	6803      	ldr	r3, [r0, #0]
 8003c5a:	2100      	movs	r1, #0
 8003c5c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c5e:	4798      	blx	r3
 8003c60:	4631      	mov	r1, r6
 8003c62:	4604      	mov	r4, r0
 8003c64:	f004 f91c 	bl	8007ea0 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8003c68:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003c6c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003c70:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003c74:	b1dc      	cbz	r4, 8003cae <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8003c76:	1d23      	adds	r3, r4, #4
 8003c78:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003c7c:	6833      	ldr	r3, [r6, #0]
 8003c7e:	f8c4 a008 	str.w	sl, [r4, #8]
 8003c82:	4630      	mov	r0, r6
 8003c84:	68db      	ldr	r3, [r3, #12]
 8003c86:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003c88:	4798      	blx	r3
    newPresenter->activate();
 8003c8a:	6823      	ldr	r3, [r4, #0]
 8003c8c:	4620      	mov	r0, r4
 8003c8e:	681b      	ldr	r3, [r3, #0]
 8003c90:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003c92:	4629      	mov	r1, r5
 8003c94:	4630      	mov	r0, r6
 8003c96:	f012 fd2f 	bl	80166f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003c9a:	682b      	ldr	r3, [r5, #0]
 8003c9c:	4628      	mov	r0, r5
 8003c9e:	691b      	ldr	r3, [r3, #16]
 8003ca0:	4798      	blx	r3
    newTransition->invalidate();
 8003ca2:	682b      	ldr	r3, [r5, #0]
 8003ca4:	4628      	mov	r0, r5
 8003ca6:	695b      	ldr	r3, [r3, #20]
}
 8003ca8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003cac:	4718      	bx	r3
    model->bind(newPresenter);
 8003cae:	4623      	mov	r3, r4
 8003cb0:	e7e2      	b.n	8003c78 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 8003cb2:	bf00      	nop
 8003cb4:	08029ec8 	.word	0x08029ec8
 8003cb8:	0802a547 	.word	0x0802a547
 8003cbc:	0802a064 	.word	0x0802a064
 8003cc0:	0802a0ab 	.word	0x0802a0ab
 8003cc4:	0802a14e 	.word	0x0802a14e
 8003cc8:	20013804 	.word	0x20013804
 8003ccc:	20013800 	.word	0x20013800

08003cd0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8003cd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003cd4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003cd8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003cda:	68a0      	ldr	r0, [r4, #8]
 8003cdc:	6803      	ldr	r3, [r0, #0]
 8003cde:	6a1b      	ldr	r3, [r3, #32]
 8003ce0:	4798      	blx	r3
 8003ce2:	f241 137b 	movw	r3, #4475	; 0x117b
 8003ce6:	4298      	cmp	r0, r3
 8003ce8:	d805      	bhi.n	8003cf6 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8003cea:	4b42      	ldr	r3, [pc, #264]	; (8003df4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8003cec:	4a42      	ldr	r2, [pc, #264]	; (8003df8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003cee:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003cf0:	4842      	ldr	r0, [pc, #264]	; (8003dfc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8003cf2:	f024 fa25 	bl	8028140 <__assert_func>
 8003cf6:	6860      	ldr	r0, [r4, #4]
 8003cf8:	6803      	ldr	r3, [r0, #0]
 8003cfa:	6a1b      	ldr	r3, [r3, #32]
 8003cfc:	4798      	blx	r3
 8003cfe:	280f      	cmp	r0, #15
 8003d00:	d803      	bhi.n	8003d0a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8003d02:	4b3f      	ldr	r3, [pc, #252]	; (8003e00 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8003d04:	4a3c      	ldr	r2, [pc, #240]	; (8003df8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003d06:	21a4      	movs	r1, #164	; 0xa4
 8003d08:	e7f2      	b.n	8003cf0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003d0a:	68e0      	ldr	r0, [r4, #12]
 8003d0c:	6803      	ldr	r3, [r0, #0]
 8003d0e:	6a1b      	ldr	r3, [r3, #32]
 8003d10:	4798      	blx	r3
 8003d12:	2837      	cmp	r0, #55	; 0x37
 8003d14:	d803      	bhi.n	8003d1e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8003d16:	4b3b      	ldr	r3, [pc, #236]	; (8003e04 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8003d18:	4a37      	ldr	r2, [pc, #220]	; (8003df8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003d1a:	21a5      	movs	r1, #165	; 0xa5
 8003d1c:	e7e8      	b.n	8003cf0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003d1e:	f010 febf 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003d22:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003e08 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8003d26:	3004      	adds	r0, #4
 8003d28:	f010 ff20 	bl	8014b6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003d2c:	f8d9 0000 	ldr.w	r0, [r9]
 8003d30:	b110      	cbz	r0, 8003d38 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8003d32:	6803      	ldr	r3, [r0, #0]
 8003d34:	68db      	ldr	r3, [r3, #12]
 8003d36:	4798      	blx	r3
    if (*currentTrans)
 8003d38:	f8d9 0000 	ldr.w	r0, [r9]
 8003d3c:	b110      	cbz	r0, 8003d44 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8003d3e:	6803      	ldr	r3, [r0, #0]
 8003d40:	681b      	ldr	r3, [r3, #0]
 8003d42:	4798      	blx	r3
    if (*currentScreen)
 8003d44:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003e0c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8003d48:	f8d8 0000 	ldr.w	r0, [r8]
 8003d4c:	b110      	cbz	r0, 8003d54 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003d4e:	6803      	ldr	r3, [r0, #0]
 8003d50:	695b      	ldr	r3, [r3, #20]
 8003d52:	4798      	blx	r3
    if (*currentPresenter)
 8003d54:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003d58:	b110      	cbz	r0, 8003d60 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003d5a:	6803      	ldr	r3, [r0, #0]
 8003d5c:	685b      	ldr	r3, [r3, #4]
 8003d5e:	4798      	blx	r3
    if (*currentScreen)
 8003d60:	f8d8 0000 	ldr.w	r0, [r8]
 8003d64:	b110      	cbz	r0, 8003d6c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003d66:	6803      	ldr	r3, [r0, #0]
 8003d68:	681b      	ldr	r3, [r3, #0]
 8003d6a:	4798      	blx	r3
    if (*currentPresenter)
 8003d6c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003d70:	b110      	cbz	r0, 8003d78 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003d72:	6803      	ldr	r3, [r0, #0]
 8003d74:	689b      	ldr	r3, [r3, #8]
 8003d76:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003d78:	68e0      	ldr	r0, [r4, #12]
 8003d7a:	2100      	movs	r1, #0
 8003d7c:	f7ff fd96 	bl	80038ac <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003d80:	2114      	movs	r1, #20
 8003d82:	4605      	mov	r5, r0
 8003d84:	f7ff fd96 	bl	80038b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003d88:	68a0      	ldr	r0, [r4, #8]
 8003d8a:	6803      	ldr	r3, [r0, #0]
 8003d8c:	2100      	movs	r1, #0
 8003d8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d90:	4798      	blx	r3
 8003d92:	4606      	mov	r6, r0
 8003d94:	f004 f84a 	bl	8007e2c <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003d98:	6860      	ldr	r0, [r4, #4]
 8003d9a:	6803      	ldr	r3, [r0, #0]
 8003d9c:	2100      	movs	r1, #0
 8003d9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003da0:	4798      	blx	r3
 8003da2:	4631      	mov	r1, r6
 8003da4:	4604      	mov	r4, r0
 8003da6:	f004 f81b 	bl	8007de0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8003daa:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003dae:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003db2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003db6:	b1dc      	cbz	r4, 8003df0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8003db8:	1d23      	adds	r3, r4, #4
 8003dba:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003dbe:	6833      	ldr	r3, [r6, #0]
 8003dc0:	f8c4 a008 	str.w	sl, [r4, #8]
 8003dc4:	4630      	mov	r0, r6
 8003dc6:	68db      	ldr	r3, [r3, #12]
 8003dc8:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003dca:	4798      	blx	r3
    newPresenter->activate();
 8003dcc:	6823      	ldr	r3, [r4, #0]
 8003dce:	4620      	mov	r0, r4
 8003dd0:	681b      	ldr	r3, [r3, #0]
 8003dd2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003dd4:	4629      	mov	r1, r5
 8003dd6:	4630      	mov	r0, r6
 8003dd8:	f012 fc8e 	bl	80166f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003ddc:	682b      	ldr	r3, [r5, #0]
 8003dde:	4628      	mov	r0, r5
 8003de0:	691b      	ldr	r3, [r3, #16]
 8003de2:	4798      	blx	r3
    newTransition->invalidate();
 8003de4:	682b      	ldr	r3, [r5, #0]
 8003de6:	4628      	mov	r0, r5
 8003de8:	695b      	ldr	r3, [r3, #20]
}
 8003dea:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003dee:	4718      	bx	r3
    model->bind(newPresenter);
 8003df0:	4623      	mov	r3, r4
 8003df2:	e7e2      	b.n	8003dba <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8003df4:	08029ec8 	.word	0x08029ec8
 8003df8:	0802a665 	.word	0x0802a665
 8003dfc:	0802a064 	.word	0x0802a064
 8003e00:	0802a0ab 	.word	0x0802a0ab
 8003e04:	0802a14e 	.word	0x0802a14e
 8003e08:	20013804 	.word	0x20013804
 8003e0c:	20013800 	.word	0x20013800

08003e10 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8003e10:	6803      	ldr	r3, [r0, #0]
 8003e12:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e14:	4718      	bx	r3
	...

08003e18 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8003e18:	4b12      	ldr	r3, [pc, #72]	; (8003e64 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8003e1a:	b513      	push	{r0, r1, r4, lr}
          solid()
 8003e1c:	6003      	str	r3, [r0, #0]
 8003e1e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003e22:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8003e24:	4b10      	ldr	r3, [pc, #64]	; (8003e68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8003e26:	7241      	strb	r1, [r0, #9]
 8003e28:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003e2a:	4910      	ldr	r1, [pc, #64]	; (8003e6c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8003e2c:	4b10      	ldr	r3, [pc, #64]	; (8003e70 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003e2e:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8003e32:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003e36:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8003e38:	2200      	movs	r2, #0
 8003e3a:	6042      	str	r2, [r0, #4]
 8003e3c:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8003e3e:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8003e40:	81c2      	strh	r2, [r0, #14]
          solid()
 8003e42:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003e46:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003e4a:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8003e4e:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8003e52:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003e54:	9100      	str	r1, [sp, #0]
 8003e56:	3010      	adds	r0, #16
 8003e58:	4611      	mov	r1, r2
 8003e5a:	f7fe fb2d 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8003e5e:	4620      	mov	r0, r4
 8003e60:	b002      	add	sp, #8
 8003e62:	bd10      	pop	{r4, pc}
 8003e64:	0802b590 	.word	0x0802b590
 8003e68:	0802b498 	.word	0x0802b498
 8003e6c:	200137b2 	.word	0x200137b2
 8003e70:	200137b0 	.word	0x200137b0

08003e74 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8003e74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003e78:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003e7c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003e7e:	68a0      	ldr	r0, [r4, #8]
 8003e80:	6803      	ldr	r3, [r0, #0]
 8003e82:	6a1b      	ldr	r3, [r3, #32]
 8003e84:	4798      	blx	r3
 8003e86:	f241 03af 	movw	r3, #4271	; 0x10af
 8003e8a:	4298      	cmp	r0, r3
 8003e8c:	d805      	bhi.n	8003e9a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8003e8e:	4b42      	ldr	r3, [pc, #264]	; (8003f98 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8003e90:	4a42      	ldr	r2, [pc, #264]	; (8003f9c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8003e92:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003e94:	4842      	ldr	r0, [pc, #264]	; (8003fa0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8003e96:	f024 f953 	bl	8028140 <__assert_func>
 8003e9a:	6860      	ldr	r0, [r4, #4]
 8003e9c:	6803      	ldr	r3, [r0, #0]
 8003e9e:	6a1b      	ldr	r3, [r3, #32]
 8003ea0:	4798      	blx	r3
 8003ea2:	280f      	cmp	r0, #15
 8003ea4:	d803      	bhi.n	8003eae <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8003ea6:	4b3f      	ldr	r3, [pc, #252]	; (8003fa4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8003ea8:	4a3c      	ldr	r2, [pc, #240]	; (8003f9c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8003eaa:	21a4      	movs	r1, #164	; 0xa4
 8003eac:	e7f2      	b.n	8003e94 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003eae:	68e0      	ldr	r0, [r4, #12]
 8003eb0:	6803      	ldr	r3, [r0, #0]
 8003eb2:	6a1b      	ldr	r3, [r3, #32]
 8003eb4:	4798      	blx	r3
 8003eb6:	2837      	cmp	r0, #55	; 0x37
 8003eb8:	d803      	bhi.n	8003ec2 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8003eba:	4b3b      	ldr	r3, [pc, #236]	; (8003fa8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8003ebc:	4a37      	ldr	r2, [pc, #220]	; (8003f9c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8003ebe:	21a5      	movs	r1, #165	; 0xa5
 8003ec0:	e7e8      	b.n	8003e94 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003ec2:	f010 fded 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003ec6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003fac <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8003eca:	3004      	adds	r0, #4
 8003ecc:	f010 fe4e 	bl	8014b6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003ed0:	f8d9 0000 	ldr.w	r0, [r9]
 8003ed4:	b110      	cbz	r0, 8003edc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003ed6:	6803      	ldr	r3, [r0, #0]
 8003ed8:	68db      	ldr	r3, [r3, #12]
 8003eda:	4798      	blx	r3
    if (*currentTrans)
 8003edc:	f8d9 0000 	ldr.w	r0, [r9]
 8003ee0:	b110      	cbz	r0, 8003ee8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8003ee2:	6803      	ldr	r3, [r0, #0]
 8003ee4:	681b      	ldr	r3, [r3, #0]
 8003ee6:	4798      	blx	r3
    if (*currentScreen)
 8003ee8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003fb0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8003eec:	f8d8 0000 	ldr.w	r0, [r8]
 8003ef0:	b110      	cbz	r0, 8003ef8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003ef2:	6803      	ldr	r3, [r0, #0]
 8003ef4:	695b      	ldr	r3, [r3, #20]
 8003ef6:	4798      	blx	r3
    if (*currentPresenter)
 8003ef8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003efc:	b110      	cbz	r0, 8003f04 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003efe:	6803      	ldr	r3, [r0, #0]
 8003f00:	685b      	ldr	r3, [r3, #4]
 8003f02:	4798      	blx	r3
    if (*currentScreen)
 8003f04:	f8d8 0000 	ldr.w	r0, [r8]
 8003f08:	b110      	cbz	r0, 8003f10 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003f0a:	6803      	ldr	r3, [r0, #0]
 8003f0c:	681b      	ldr	r3, [r3, #0]
 8003f0e:	4798      	blx	r3
    if (*currentPresenter)
 8003f10:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003f14:	b110      	cbz	r0, 8003f1c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003f16:	6803      	ldr	r3, [r0, #0]
 8003f18:	689b      	ldr	r3, [r3, #8]
 8003f1a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003f1c:	68e0      	ldr	r0, [r4, #12]
 8003f1e:	2100      	movs	r1, #0
 8003f20:	f7ff ff76 	bl	8003e10 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8003f24:	2114      	movs	r1, #20
 8003f26:	4605      	mov	r5, r0
 8003f28:	f7ff ff76 	bl	8003e18 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003f2c:	68a0      	ldr	r0, [r4, #8]
 8003f2e:	6803      	ldr	r3, [r0, #0]
 8003f30:	2100      	movs	r1, #0
 8003f32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f34:	4798      	blx	r3
 8003f36:	4606      	mov	r6, r0
 8003f38:	f004 fa1e 	bl	8008378 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003f3c:	6860      	ldr	r0, [r4, #4]
 8003f3e:	6803      	ldr	r3, [r0, #0]
 8003f40:	2100      	movs	r1, #0
 8003f42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f44:	4798      	blx	r3
 8003f46:	4631      	mov	r1, r6
 8003f48:	4604      	mov	r4, r0
 8003f4a:	f004 f9ef 	bl	800832c <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8003f4e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003f52:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003f56:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003f5a:	b1dc      	cbz	r4, 8003f94 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8003f5c:	1d23      	adds	r3, r4, #4
 8003f5e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003f62:	6833      	ldr	r3, [r6, #0]
 8003f64:	f8c4 a008 	str.w	sl, [r4, #8]
 8003f68:	4630      	mov	r0, r6
 8003f6a:	68db      	ldr	r3, [r3, #12]
 8003f6c:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003f6e:	4798      	blx	r3
    newPresenter->activate();
 8003f70:	6823      	ldr	r3, [r4, #0]
 8003f72:	4620      	mov	r0, r4
 8003f74:	681b      	ldr	r3, [r3, #0]
 8003f76:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003f78:	4629      	mov	r1, r5
 8003f7a:	4630      	mov	r0, r6
 8003f7c:	f012 fbbc 	bl	80166f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003f80:	682b      	ldr	r3, [r5, #0]
 8003f82:	4628      	mov	r0, r5
 8003f84:	691b      	ldr	r3, [r3, #16]
 8003f86:	4798      	blx	r3
    newTransition->invalidate();
 8003f88:	682b      	ldr	r3, [r5, #0]
 8003f8a:	4628      	mov	r0, r5
 8003f8c:	695b      	ldr	r3, [r3, #20]
}
 8003f8e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003f92:	4718      	bx	r3
    model->bind(newPresenter);
 8003f94:	4623      	mov	r3, r4
 8003f96:	e7e2      	b.n	8003f5e <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8003f98:	08029ec8 	.word	0x08029ec8
 8003f9c:	0802a77f 	.word	0x0802a77f
 8003fa0:	0802a064 	.word	0x0802a064
 8003fa4:	0802a0ab 	.word	0x0802a0ab
 8003fa8:	0802a14e 	.word	0x0802a14e
 8003fac:	20013804 	.word	0x20013804
 8003fb0:	20013800 	.word	0x20013800

08003fb4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv>:
{
 8003fb4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_HallView, Calibration_HallPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003fb8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003fbc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003fbe:	68a0      	ldr	r0, [r4, #8]
 8003fc0:	6803      	ldr	r3, [r0, #0]
 8003fc2:	6a1b      	ldr	r3, [r3, #32]
 8003fc4:	4798      	blx	r3
 8003fc6:	f241 035b 	movw	r3, #4187	; 0x105b
 8003fca:	4298      	cmp	r0, r3
 8003fcc:	d805      	bhi.n	8003fda <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x26>
 8003fce:	4b42      	ldr	r3, [pc, #264]	; (80040d8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x124>)
 8003fd0:	4a42      	ldr	r2, [pc, #264]	; (80040dc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8003fd2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003fd4:	4842      	ldr	r0, [pc, #264]	; (80040e0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x12c>)
 8003fd6:	f024 f8b3 	bl	8028140 <__assert_func>
 8003fda:	6860      	ldr	r0, [r4, #4]
 8003fdc:	6803      	ldr	r3, [r0, #0]
 8003fde:	6a1b      	ldr	r3, [r3, #32]
 8003fe0:	4798      	blx	r3
 8003fe2:	280f      	cmp	r0, #15
 8003fe4:	d803      	bhi.n	8003fee <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x3a>
 8003fe6:	4b3f      	ldr	r3, [pc, #252]	; (80040e4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x130>)
 8003fe8:	4a3c      	ldr	r2, [pc, #240]	; (80040dc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8003fea:	21a4      	movs	r1, #164	; 0xa4
 8003fec:	e7f2      	b.n	8003fd4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003fee:	68e0      	ldr	r0, [r4, #12]
 8003ff0:	6803      	ldr	r3, [r0, #0]
 8003ff2:	6a1b      	ldr	r3, [r3, #32]
 8003ff4:	4798      	blx	r3
 8003ff6:	2837      	cmp	r0, #55	; 0x37
 8003ff8:	d803      	bhi.n	8004002 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x4e>
 8003ffa:	4b3b      	ldr	r3, [pc, #236]	; (80040e8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x134>)
 8003ffc:	4a37      	ldr	r2, [pc, #220]	; (80040dc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8003ffe:	21a5      	movs	r1, #165	; 0xa5
 8004000:	e7e8      	b.n	8003fd4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004002:	f010 fd4d 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004006:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80040ec <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x138>
 800400a:	3004      	adds	r0, #4
 800400c:	f010 fdae 	bl	8014b6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004010:	f8d9 0000 	ldr.w	r0, [r9]
 8004014:	b110      	cbz	r0, 800401c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004016:	6803      	ldr	r3, [r0, #0]
 8004018:	68db      	ldr	r3, [r3, #12]
 800401a:	4798      	blx	r3
    if (*currentTrans)
 800401c:	f8d9 0000 	ldr.w	r0, [r9]
 8004020:	b110      	cbz	r0, 8004028 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004022:	6803      	ldr	r3, [r0, #0]
 8004024:	681b      	ldr	r3, [r3, #0]
 8004026:	4798      	blx	r3
    if (*currentScreen)
 8004028:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80040f0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x13c>
 800402c:	f8d8 0000 	ldr.w	r0, [r8]
 8004030:	b110      	cbz	r0, 8004038 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004032:	6803      	ldr	r3, [r0, #0]
 8004034:	695b      	ldr	r3, [r3, #20]
 8004036:	4798      	blx	r3
    if (*currentPresenter)
 8004038:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800403c:	b110      	cbz	r0, 8004044 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800403e:	6803      	ldr	r3, [r0, #0]
 8004040:	685b      	ldr	r3, [r3, #4]
 8004042:	4798      	blx	r3
    if (*currentScreen)
 8004044:	f8d8 0000 	ldr.w	r0, [r8]
 8004048:	b110      	cbz	r0, 8004050 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800404a:	6803      	ldr	r3, [r0, #0]
 800404c:	681b      	ldr	r3, [r3, #0]
 800404e:	4798      	blx	r3
    if (*currentPresenter)
 8004050:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004054:	b110      	cbz	r0, 800405c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004056:	6803      	ldr	r3, [r0, #0]
 8004058:	689b      	ldr	r3, [r3, #8]
 800405a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800405c:	68e0      	ldr	r0, [r4, #12]
 800405e:	2100      	movs	r1, #0
 8004060:	f7ff fed6 	bl	8003e10 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004064:	2114      	movs	r1, #20
 8004066:	4605      	mov	r5, r0
 8004068:	f7ff fed6 	bl	8003e18 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800406c:	68a0      	ldr	r0, [r4, #8]
 800406e:	6803      	ldr	r3, [r0, #0]
 8004070:	2100      	movs	r1, #0
 8004072:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004074:	4798      	blx	r3
 8004076:	4606      	mov	r6, r0
 8004078:	f003 fe0e 	bl	8007c98 <_ZN20Calibration_HallViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800407c:	6860      	ldr	r0, [r4, #4]
 800407e:	6803      	ldr	r3, [r0, #0]
 8004080:	2100      	movs	r1, #0
 8004082:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004084:	4798      	blx	r3
 8004086:	4631      	mov	r1, r6
 8004088:	4604      	mov	r4, r0
 800408a:	f003 fddf 	bl	8007c4c <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>
    *currentTrans = newTransition;
 800408e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004092:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004096:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800409a:	b1dc      	cbz	r4, 80040d4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x120>
 800409c:	1d23      	adds	r3, r4, #4
 800409e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80040a2:	6833      	ldr	r3, [r6, #0]
 80040a4:	f8c4 a008 	str.w	sl, [r4, #8]
 80040a8:	4630      	mov	r0, r6
 80040aa:	68db      	ldr	r3, [r3, #12]
 80040ac:	63f4      	str	r4, [r6, #60]	; 0x3c
 80040ae:	4798      	blx	r3
    newPresenter->activate();
 80040b0:	6823      	ldr	r3, [r4, #0]
 80040b2:	4620      	mov	r0, r4
 80040b4:	681b      	ldr	r3, [r3, #0]
 80040b6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80040b8:	4629      	mov	r1, r5
 80040ba:	4630      	mov	r0, r6
 80040bc:	f012 fb1c 	bl	80166f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80040c0:	682b      	ldr	r3, [r5, #0]
 80040c2:	4628      	mov	r0, r5
 80040c4:	691b      	ldr	r3, [r3, #16]
 80040c6:	4798      	blx	r3
    newTransition->invalidate();
 80040c8:	682b      	ldr	r3, [r5, #0]
 80040ca:	4628      	mov	r0, r5
 80040cc:	695b      	ldr	r3, [r3, #20]
}
 80040ce:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80040d2:	4718      	bx	r3
    model->bind(newPresenter);
 80040d4:	4623      	mov	r3, r4
 80040d6:	e7e2      	b.n	800409e <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xea>
 80040d8:	08029ec8 	.word	0x08029ec8
 80040dc:	0802a89f 	.word	0x0802a89f
 80040e0:	0802a064 	.word	0x0802a064
 80040e4:	0802a0ab 	.word	0x0802a0ab
 80040e8:	0802a14e 	.word	0x0802a14e
 80040ec:	20013804 	.word	0x20013804
 80040f0:	20013800 	.word	0x20013800

080040f4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 80040f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80040f8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80040fc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80040fe:	68a0      	ldr	r0, [r4, #8]
 8004100:	6803      	ldr	r3, [r0, #0]
 8004102:	6a1b      	ldr	r3, [r3, #32]
 8004104:	4798      	blx	r3
 8004106:	f241 035b 	movw	r3, #4187	; 0x105b
 800410a:	4298      	cmp	r0, r3
 800410c:	d805      	bhi.n	800411a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 800410e:	4b42      	ldr	r3, [pc, #264]	; (8004218 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 8004110:	4a42      	ldr	r2, [pc, #264]	; (800421c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004112:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004114:	4842      	ldr	r0, [pc, #264]	; (8004220 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8004116:	f024 f813 	bl	8028140 <__assert_func>
 800411a:	6860      	ldr	r0, [r4, #4]
 800411c:	6803      	ldr	r3, [r0, #0]
 800411e:	6a1b      	ldr	r3, [r3, #32]
 8004120:	4798      	blx	r3
 8004122:	280f      	cmp	r0, #15
 8004124:	d803      	bhi.n	800412e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 8004126:	4b3f      	ldr	r3, [pc, #252]	; (8004224 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8004128:	4a3c      	ldr	r2, [pc, #240]	; (800421c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800412a:	21a4      	movs	r1, #164	; 0xa4
 800412c:	e7f2      	b.n	8004114 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800412e:	68e0      	ldr	r0, [r4, #12]
 8004130:	6803      	ldr	r3, [r0, #0]
 8004132:	6a1b      	ldr	r3, [r3, #32]
 8004134:	4798      	blx	r3
 8004136:	2837      	cmp	r0, #55	; 0x37
 8004138:	d803      	bhi.n	8004142 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 800413a:	4b3b      	ldr	r3, [pc, #236]	; (8004228 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 800413c:	4a37      	ldr	r2, [pc, #220]	; (800421c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800413e:	21a5      	movs	r1, #165	; 0xa5
 8004140:	e7e8      	b.n	8004114 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004142:	f010 fcad 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004146:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800422c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 800414a:	3004      	adds	r0, #4
 800414c:	f010 fd0e 	bl	8014b6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004150:	f8d9 0000 	ldr.w	r0, [r9]
 8004154:	b110      	cbz	r0, 800415c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004156:	6803      	ldr	r3, [r0, #0]
 8004158:	68db      	ldr	r3, [r3, #12]
 800415a:	4798      	blx	r3
    if (*currentTrans)
 800415c:	f8d9 0000 	ldr.w	r0, [r9]
 8004160:	b110      	cbz	r0, 8004168 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004162:	6803      	ldr	r3, [r0, #0]
 8004164:	681b      	ldr	r3, [r3, #0]
 8004166:	4798      	blx	r3
    if (*currentScreen)
 8004168:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004230 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 800416c:	f8d8 0000 	ldr.w	r0, [r8]
 8004170:	b110      	cbz	r0, 8004178 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004172:	6803      	ldr	r3, [r0, #0]
 8004174:	695b      	ldr	r3, [r3, #20]
 8004176:	4798      	blx	r3
    if (*currentPresenter)
 8004178:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800417c:	b110      	cbz	r0, 8004184 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800417e:	6803      	ldr	r3, [r0, #0]
 8004180:	685b      	ldr	r3, [r3, #4]
 8004182:	4798      	blx	r3
    if (*currentScreen)
 8004184:	f8d8 0000 	ldr.w	r0, [r8]
 8004188:	b110      	cbz	r0, 8004190 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800418a:	6803      	ldr	r3, [r0, #0]
 800418c:	681b      	ldr	r3, [r3, #0]
 800418e:	4798      	blx	r3
    if (*currentPresenter)
 8004190:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004194:	b110      	cbz	r0, 800419c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004196:	6803      	ldr	r3, [r0, #0]
 8004198:	689b      	ldr	r3, [r3, #8]
 800419a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800419c:	68e0      	ldr	r0, [r4, #12]
 800419e:	2100      	movs	r1, #0
 80041a0:	f7ff fe36 	bl	8003e10 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80041a4:	2114      	movs	r1, #20
 80041a6:	4605      	mov	r5, r0
 80041a8:	f7ff fe36 	bl	8003e18 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80041ac:	68a0      	ldr	r0, [r4, #8]
 80041ae:	6803      	ldr	r3, [r0, #0]
 80041b0:	2100      	movs	r1, #0
 80041b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80041b4:	4798      	blx	r3
 80041b6:	4606      	mov	r6, r0
 80041b8:	f003 fdb0 	bl	8007d1c <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80041bc:	6860      	ldr	r0, [r4, #4]
 80041be:	6803      	ldr	r3, [r0, #0]
 80041c0:	2100      	movs	r1, #0
 80041c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80041c4:	4798      	blx	r3
 80041c6:	4631      	mov	r1, r6
 80041c8:	4604      	mov	r4, r0
 80041ca:	f003 fd81 	bl	8007cd0 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 80041ce:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80041d2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80041d6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80041da:	b1dc      	cbz	r4, 8004214 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 80041dc:	1d23      	adds	r3, r4, #4
 80041de:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80041e2:	6833      	ldr	r3, [r6, #0]
 80041e4:	f8c4 a008 	str.w	sl, [r4, #8]
 80041e8:	4630      	mov	r0, r6
 80041ea:	68db      	ldr	r3, [r3, #12]
 80041ec:	63f4      	str	r4, [r6, #60]	; 0x3c
 80041ee:	4798      	blx	r3
    newPresenter->activate();
 80041f0:	6823      	ldr	r3, [r4, #0]
 80041f2:	4620      	mov	r0, r4
 80041f4:	681b      	ldr	r3, [r3, #0]
 80041f6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80041f8:	4629      	mov	r1, r5
 80041fa:	4630      	mov	r0, r6
 80041fc:	f012 fa7c 	bl	80166f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004200:	682b      	ldr	r3, [r5, #0]
 8004202:	4628      	mov	r0, r5
 8004204:	691b      	ldr	r3, [r3, #16]
 8004206:	4798      	blx	r3
    newTransition->invalidate();
 8004208:	682b      	ldr	r3, [r5, #0]
 800420a:	4628      	mov	r0, r5
 800420c:	695b      	ldr	r3, [r3, #20]
}
 800420e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004212:	4718      	bx	r3
    model->bind(newPresenter);
 8004214:	4623      	mov	r3, r4
 8004216:	e7e2      	b.n	80041de <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8004218:	08029ec8 	.word	0x08029ec8
 800421c:	0802a9c7 	.word	0x0802a9c7
 8004220:	0802a064 	.word	0x0802a064
 8004224:	0802a0ab 	.word	0x0802a0ab
 8004228:	0802a14e 	.word	0x0802a14e
 800422c:	20013804 	.word	0x20013804
 8004230:	20013800 	.word	0x20013800

08004234 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 8004234:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004238:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800423c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800423e:	68a0      	ldr	r0, [r4, #8]
 8004240:	6803      	ldr	r3, [r0, #0]
 8004242:	6a1b      	ldr	r3, [r3, #32]
 8004244:	4798      	blx	r3
 8004246:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800424a:	d205      	bcs.n	8004258 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x24>
 800424c:	4b42      	ldr	r3, [pc, #264]	; (8004358 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 800424e:	4a43      	ldr	r2, [pc, #268]	; (800435c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004250:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004252:	4843      	ldr	r0, [pc, #268]	; (8004360 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 8004254:	f023 ff74 	bl	8028140 <__assert_func>
 8004258:	6860      	ldr	r0, [r4, #4]
 800425a:	6803      	ldr	r3, [r0, #0]
 800425c:	6a1b      	ldr	r3, [r3, #32]
 800425e:	4798      	blx	r3
 8004260:	280f      	cmp	r0, #15
 8004262:	d803      	bhi.n	800426c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x38>
 8004264:	4b3f      	ldr	r3, [pc, #252]	; (8004364 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 8004266:	4a3d      	ldr	r2, [pc, #244]	; (800435c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004268:	21a4      	movs	r1, #164	; 0xa4
 800426a:	e7f2      	b.n	8004252 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800426c:	68e0      	ldr	r0, [r4, #12]
 800426e:	6803      	ldr	r3, [r0, #0]
 8004270:	6a1b      	ldr	r3, [r3, #32]
 8004272:	4798      	blx	r3
 8004274:	2837      	cmp	r0, #55	; 0x37
 8004276:	d803      	bhi.n	8004280 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4c>
 8004278:	4b3b      	ldr	r3, [pc, #236]	; (8004368 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 800427a:	4a38      	ldr	r2, [pc, #224]	; (800435c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 800427c:	21a5      	movs	r1, #165	; 0xa5
 800427e:	e7e8      	b.n	8004252 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004280:	f010 fc0e 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004284:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800436c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 8004288:	3004      	adds	r0, #4
 800428a:	f010 fc6f 	bl	8014b6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800428e:	f8d9 0000 	ldr.w	r0, [r9]
 8004292:	b110      	cbz	r0, 800429a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004294:	6803      	ldr	r3, [r0, #0]
 8004296:	68db      	ldr	r3, [r3, #12]
 8004298:	4798      	blx	r3
    if (*currentTrans)
 800429a:	f8d9 0000 	ldr.w	r0, [r9]
 800429e:	b110      	cbz	r0, 80042a6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80042a0:	6803      	ldr	r3, [r0, #0]
 80042a2:	681b      	ldr	r3, [r3, #0]
 80042a4:	4798      	blx	r3
    if (*currentScreen)
 80042a6:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004370 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 80042aa:	f8d8 0000 	ldr.w	r0, [r8]
 80042ae:	b110      	cbz	r0, 80042b6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80042b0:	6803      	ldr	r3, [r0, #0]
 80042b2:	695b      	ldr	r3, [r3, #20]
 80042b4:	4798      	blx	r3
    if (*currentPresenter)
 80042b6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80042ba:	b110      	cbz	r0, 80042c2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80042bc:	6803      	ldr	r3, [r0, #0]
 80042be:	685b      	ldr	r3, [r3, #4]
 80042c0:	4798      	blx	r3
    if (*currentScreen)
 80042c2:	f8d8 0000 	ldr.w	r0, [r8]
 80042c6:	b110      	cbz	r0, 80042ce <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80042c8:	6803      	ldr	r3, [r0, #0]
 80042ca:	681b      	ldr	r3, [r3, #0]
 80042cc:	4798      	blx	r3
    if (*currentPresenter)
 80042ce:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80042d2:	b110      	cbz	r0, 80042da <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80042d4:	6803      	ldr	r3, [r0, #0]
 80042d6:	689b      	ldr	r3, [r3, #8]
 80042d8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80042da:	68e0      	ldr	r0, [r4, #12]
 80042dc:	2100      	movs	r1, #0
 80042de:	f7ff fd97 	bl	8003e10 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80042e2:	2114      	movs	r1, #20
 80042e4:	4605      	mov	r5, r0
 80042e6:	f7ff fd97 	bl	8003e18 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80042ea:	68a0      	ldr	r0, [r4, #8]
 80042ec:	6803      	ldr	r3, [r0, #0]
 80042ee:	2100      	movs	r1, #0
 80042f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80042f2:	4798      	blx	r3
 80042f4:	4606      	mov	r6, r0
 80042f6:	f003 fc75 	bl	8007be4 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80042fa:	6860      	ldr	r0, [r4, #4]
 80042fc:	6803      	ldr	r3, [r0, #0]
 80042fe:	2100      	movs	r1, #0
 8004300:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004302:	4798      	blx	r3
 8004304:	4631      	mov	r1, r6
 8004306:	4604      	mov	r4, r0
 8004308:	f003 fc46 	bl	8007b98 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 800430c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004310:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004314:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004318:	b1dc      	cbz	r4, 8004352 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x11e>
 800431a:	1d23      	adds	r3, r4, #4
 800431c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004320:	6833      	ldr	r3, [r6, #0]
 8004322:	f8c4 a008 	str.w	sl, [r4, #8]
 8004326:	4630      	mov	r0, r6
 8004328:	68db      	ldr	r3, [r3, #12]
 800432a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800432c:	4798      	blx	r3
    newPresenter->activate();
 800432e:	6823      	ldr	r3, [r4, #0]
 8004330:	4620      	mov	r0, r4
 8004332:	681b      	ldr	r3, [r3, #0]
 8004334:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004336:	4629      	mov	r1, r5
 8004338:	4630      	mov	r0, r6
 800433a:	f012 f9dd 	bl	80166f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800433e:	682b      	ldr	r3, [r5, #0]
 8004340:	4628      	mov	r0, r5
 8004342:	691b      	ldr	r3, [r3, #16]
 8004344:	4798      	blx	r3
    newTransition->invalidate();
 8004346:	682b      	ldr	r3, [r5, #0]
 8004348:	4628      	mov	r0, r5
 800434a:	695b      	ldr	r3, [r3, #20]
}
 800434c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004350:	4718      	bx	r3
    model->bind(newPresenter);
 8004352:	4623      	mov	r3, r4
 8004354:	e7e2      	b.n	800431c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xe8>
 8004356:	bf00      	nop
 8004358:	08029ec8 	.word	0x08029ec8
 800435c:	0802aaed 	.word	0x0802aaed
 8004360:	0802a064 	.word	0x0802a064
 8004364:	0802a0ab 	.word	0x0802a0ab
 8004368:	0802a14e 	.word	0x0802a14e
 800436c:	20013804 	.word	0x20013804
 8004370:	20013800 	.word	0x20013800

08004374 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8004374:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004378:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800437c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800437e:	68a0      	ldr	r0, [r4, #8]
 8004380:	6803      	ldr	r3, [r0, #0]
 8004382:	6a1b      	ldr	r3, [r3, #32]
 8004384:	4798      	blx	r3
 8004386:	f241 33e3 	movw	r3, #5091	; 0x13e3
 800438a:	4298      	cmp	r0, r3
 800438c:	d805      	bhi.n	800439a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 800438e:	4b42      	ldr	r3, [pc, #264]	; (8004498 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8004390:	4a42      	ldr	r2, [pc, #264]	; (800449c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004392:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004394:	4842      	ldr	r0, [pc, #264]	; (80044a0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 8004396:	f023 fed3 	bl	8028140 <__assert_func>
 800439a:	6860      	ldr	r0, [r4, #4]
 800439c:	6803      	ldr	r3, [r0, #0]
 800439e:	6a1b      	ldr	r3, [r3, #32]
 80043a0:	4798      	blx	r3
 80043a2:	280f      	cmp	r0, #15
 80043a4:	d803      	bhi.n	80043ae <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 80043a6:	4b3f      	ldr	r3, [pc, #252]	; (80044a4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 80043a8:	4a3c      	ldr	r2, [pc, #240]	; (800449c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80043aa:	21a4      	movs	r1, #164	; 0xa4
 80043ac:	e7f2      	b.n	8004394 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80043ae:	68e0      	ldr	r0, [r4, #12]
 80043b0:	6803      	ldr	r3, [r0, #0]
 80043b2:	6a1b      	ldr	r3, [r3, #32]
 80043b4:	4798      	blx	r3
 80043b6:	2837      	cmp	r0, #55	; 0x37
 80043b8:	d803      	bhi.n	80043c2 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 80043ba:	4b3b      	ldr	r3, [pc, #236]	; (80044a8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 80043bc:	4a37      	ldr	r2, [pc, #220]	; (800449c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80043be:	21a5      	movs	r1, #165	; 0xa5
 80043c0:	e7e8      	b.n	8004394 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80043c2:	f010 fb6d 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80043c6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80044ac <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 80043ca:	3004      	adds	r0, #4
 80043cc:	f010 fbce 	bl	8014b6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80043d0:	f8d9 0000 	ldr.w	r0, [r9]
 80043d4:	b110      	cbz	r0, 80043dc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80043d6:	6803      	ldr	r3, [r0, #0]
 80043d8:	68db      	ldr	r3, [r3, #12]
 80043da:	4798      	blx	r3
    if (*currentTrans)
 80043dc:	f8d9 0000 	ldr.w	r0, [r9]
 80043e0:	b110      	cbz	r0, 80043e8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80043e2:	6803      	ldr	r3, [r0, #0]
 80043e4:	681b      	ldr	r3, [r3, #0]
 80043e6:	4798      	blx	r3
    if (*currentScreen)
 80043e8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80044b0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 80043ec:	f8d8 0000 	ldr.w	r0, [r8]
 80043f0:	b110      	cbz	r0, 80043f8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80043f2:	6803      	ldr	r3, [r0, #0]
 80043f4:	695b      	ldr	r3, [r3, #20]
 80043f6:	4798      	blx	r3
    if (*currentPresenter)
 80043f8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80043fc:	b110      	cbz	r0, 8004404 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80043fe:	6803      	ldr	r3, [r0, #0]
 8004400:	685b      	ldr	r3, [r3, #4]
 8004402:	4798      	blx	r3
    if (*currentScreen)
 8004404:	f8d8 0000 	ldr.w	r0, [r8]
 8004408:	b110      	cbz	r0, 8004410 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800440a:	6803      	ldr	r3, [r0, #0]
 800440c:	681b      	ldr	r3, [r3, #0]
 800440e:	4798      	blx	r3
    if (*currentPresenter)
 8004410:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004414:	b110      	cbz	r0, 800441c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004416:	6803      	ldr	r3, [r0, #0]
 8004418:	689b      	ldr	r3, [r3, #8]
 800441a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800441c:	68e0      	ldr	r0, [r4, #12]
 800441e:	2100      	movs	r1, #0
 8004420:	f7ff fcf6 	bl	8003e10 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004424:	2114      	movs	r1, #20
 8004426:	4605      	mov	r5, r0
 8004428:	f7ff fcf6 	bl	8003e18 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800442c:	68a0      	ldr	r0, [r4, #8]
 800442e:	6803      	ldr	r3, [r0, #0]
 8004430:	2100      	movs	r1, #0
 8004432:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004434:	4798      	blx	r3
 8004436:	4606      	mov	r6, r0
 8004438:	f003 fe54 	bl	80080e4 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800443c:	6860      	ldr	r0, [r4, #4]
 800443e:	6803      	ldr	r3, [r0, #0]
 8004440:	2100      	movs	r1, #0
 8004442:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004444:	4798      	blx	r3
 8004446:	4631      	mov	r1, r6
 8004448:	4604      	mov	r4, r0
 800444a:	f003 fe25 	bl	8008098 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 800444e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004452:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004456:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800445a:	b1dc      	cbz	r4, 8004494 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 800445c:	1d23      	adds	r3, r4, #4
 800445e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004462:	6833      	ldr	r3, [r6, #0]
 8004464:	f8c4 a008 	str.w	sl, [r4, #8]
 8004468:	4630      	mov	r0, r6
 800446a:	68db      	ldr	r3, [r3, #12]
 800446c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800446e:	4798      	blx	r3
    newPresenter->activate();
 8004470:	6823      	ldr	r3, [r4, #0]
 8004472:	4620      	mov	r0, r4
 8004474:	681b      	ldr	r3, [r3, #0]
 8004476:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004478:	4629      	mov	r1, r5
 800447a:	4630      	mov	r0, r6
 800447c:	f012 f93c 	bl	80166f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004480:	682b      	ldr	r3, [r5, #0]
 8004482:	4628      	mov	r0, r5
 8004484:	691b      	ldr	r3, [r3, #16]
 8004486:	4798      	blx	r3
    newTransition->invalidate();
 8004488:	682b      	ldr	r3, [r5, #0]
 800448a:	4628      	mov	r0, r5
 800448c:	695b      	ldr	r3, [r3, #20]
}
 800448e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004492:	4718      	bx	r3
    model->bind(newPresenter);
 8004494:	4623      	mov	r3, r4
 8004496:	e7e2      	b.n	800445e <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8004498:	08029ec8 	.word	0x08029ec8
 800449c:	0802ac0b 	.word	0x0802ac0b
 80044a0:	0802a064 	.word	0x0802a064
 80044a4:	0802a0ab 	.word	0x0802a0ab
 80044a8:	0802a14e 	.word	0x0802a14e
 80044ac:	20013804 	.word	0x20013804
 80044b0:	20013800 	.word	0x20013800

080044b4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 80044b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80044b8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80044bc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80044be:	68a0      	ldr	r0, [r4, #8]
 80044c0:	6803      	ldr	r3, [r0, #0]
 80044c2:	6a1b      	ldr	r3, [r3, #32]
 80044c4:	4798      	blx	r3
 80044c6:	f241 33e3 	movw	r3, #5091	; 0x13e3
 80044ca:	4298      	cmp	r0, r3
 80044cc:	d805      	bhi.n	80044da <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 80044ce:	4b42      	ldr	r3, [pc, #264]	; (80045d8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 80044d0:	4a42      	ldr	r2, [pc, #264]	; (80045dc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80044d2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80044d4:	4842      	ldr	r0, [pc, #264]	; (80045e0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 80044d6:	f023 fe33 	bl	8028140 <__assert_func>
 80044da:	6860      	ldr	r0, [r4, #4]
 80044dc:	6803      	ldr	r3, [r0, #0]
 80044de:	6a1b      	ldr	r3, [r3, #32]
 80044e0:	4798      	blx	r3
 80044e2:	280f      	cmp	r0, #15
 80044e4:	d803      	bhi.n	80044ee <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 80044e6:	4b3f      	ldr	r3, [pc, #252]	; (80045e4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 80044e8:	4a3c      	ldr	r2, [pc, #240]	; (80045dc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80044ea:	21a4      	movs	r1, #164	; 0xa4
 80044ec:	e7f2      	b.n	80044d4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80044ee:	68e0      	ldr	r0, [r4, #12]
 80044f0:	6803      	ldr	r3, [r0, #0]
 80044f2:	6a1b      	ldr	r3, [r3, #32]
 80044f4:	4798      	blx	r3
 80044f6:	2837      	cmp	r0, #55	; 0x37
 80044f8:	d803      	bhi.n	8004502 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 80044fa:	4b3b      	ldr	r3, [pc, #236]	; (80045e8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 80044fc:	4a37      	ldr	r2, [pc, #220]	; (80045dc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80044fe:	21a5      	movs	r1, #165	; 0xa5
 8004500:	e7e8      	b.n	80044d4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004502:	f010 facd 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004506:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80045ec <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 800450a:	3004      	adds	r0, #4
 800450c:	f010 fb2e 	bl	8014b6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004510:	f8d9 0000 	ldr.w	r0, [r9]
 8004514:	b110      	cbz	r0, 800451c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004516:	6803      	ldr	r3, [r0, #0]
 8004518:	68db      	ldr	r3, [r3, #12]
 800451a:	4798      	blx	r3
    if (*currentTrans)
 800451c:	f8d9 0000 	ldr.w	r0, [r9]
 8004520:	b110      	cbz	r0, 8004528 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004522:	6803      	ldr	r3, [r0, #0]
 8004524:	681b      	ldr	r3, [r3, #0]
 8004526:	4798      	blx	r3
    if (*currentScreen)
 8004528:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80045f0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 800452c:	f8d8 0000 	ldr.w	r0, [r8]
 8004530:	b110      	cbz	r0, 8004538 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004532:	6803      	ldr	r3, [r0, #0]
 8004534:	695b      	ldr	r3, [r3, #20]
 8004536:	4798      	blx	r3
    if (*currentPresenter)
 8004538:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800453c:	b110      	cbz	r0, 8004544 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800453e:	6803      	ldr	r3, [r0, #0]
 8004540:	685b      	ldr	r3, [r3, #4]
 8004542:	4798      	blx	r3
    if (*currentScreen)
 8004544:	f8d8 0000 	ldr.w	r0, [r8]
 8004548:	b110      	cbz	r0, 8004550 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800454a:	6803      	ldr	r3, [r0, #0]
 800454c:	681b      	ldr	r3, [r3, #0]
 800454e:	4798      	blx	r3
    if (*currentPresenter)
 8004550:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004554:	b110      	cbz	r0, 800455c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004556:	6803      	ldr	r3, [r0, #0]
 8004558:	689b      	ldr	r3, [r3, #8]
 800455a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800455c:	68e0      	ldr	r0, [r4, #12]
 800455e:	2100      	movs	r1, #0
 8004560:	f7ff fc56 	bl	8003e10 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004564:	2114      	movs	r1, #20
 8004566:	4605      	mov	r5, r0
 8004568:	f7ff fc56 	bl	8003e18 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800456c:	68a0      	ldr	r0, [r4, #8]
 800456e:	6803      	ldr	r3, [r0, #0]
 8004570:	2100      	movs	r1, #0
 8004572:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004574:	4798      	blx	r3
 8004576:	4606      	mov	r6, r0
 8004578:	f003 fd72 	bl	8008060 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800457c:	6860      	ldr	r0, [r4, #4]
 800457e:	6803      	ldr	r3, [r0, #0]
 8004580:	2100      	movs	r1, #0
 8004582:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004584:	4798      	blx	r3
 8004586:	4631      	mov	r1, r6
 8004588:	4604      	mov	r4, r0
 800458a:	f003 fd43 	bl	8008014 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 800458e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004592:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004596:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800459a:	b1dc      	cbz	r4, 80045d4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 800459c:	1d23      	adds	r3, r4, #4
 800459e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80045a2:	6833      	ldr	r3, [r6, #0]
 80045a4:	f8c4 a008 	str.w	sl, [r4, #8]
 80045a8:	4630      	mov	r0, r6
 80045aa:	68db      	ldr	r3, [r3, #12]
 80045ac:	63f4      	str	r4, [r6, #60]	; 0x3c
 80045ae:	4798      	blx	r3
    newPresenter->activate();
 80045b0:	6823      	ldr	r3, [r4, #0]
 80045b2:	4620      	mov	r0, r4
 80045b4:	681b      	ldr	r3, [r3, #0]
 80045b6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80045b8:	4629      	mov	r1, r5
 80045ba:	4630      	mov	r0, r6
 80045bc:	f012 f89c 	bl	80166f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80045c0:	682b      	ldr	r3, [r5, #0]
 80045c2:	4628      	mov	r0, r5
 80045c4:	691b      	ldr	r3, [r3, #16]
 80045c6:	4798      	blx	r3
    newTransition->invalidate();
 80045c8:	682b      	ldr	r3, [r5, #0]
 80045ca:	4628      	mov	r0, r5
 80045cc:	695b      	ldr	r3, [r3, #20]
}
 80045ce:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80045d2:	4718      	bx	r3
    model->bind(newPresenter);
 80045d4:	4623      	mov	r3, r4
 80045d6:	e7e2      	b.n	800459e <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 80045d8:	08029ec8 	.word	0x08029ec8
 80045dc:	0802ad4f 	.word	0x0802ad4f
 80045e0:	0802a064 	.word	0x0802a064
 80045e4:	0802a0ab 	.word	0x0802a0ab
 80045e8:	0802a14e 	.word	0x0802a14e
 80045ec:	20013804 	.word	0x20013804
 80045f0:	20013800 	.word	0x20013800

080045f4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 80045f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80045f8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80045fc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80045fe:	68a0      	ldr	r0, [r4, #8]
 8004600:	6803      	ldr	r3, [r0, #0]
 8004602:	6a1b      	ldr	r3, [r3, #32]
 8004604:	4798      	blx	r3
 8004606:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 800460a:	d205      	bcs.n	8004618 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 800460c:	4b42      	ldr	r3, [pc, #264]	; (8004718 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 800460e:	4a43      	ldr	r2, [pc, #268]	; (800471c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004610:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004612:	4843      	ldr	r0, [pc, #268]	; (8004720 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 8004614:	f023 fd94 	bl	8028140 <__assert_func>
 8004618:	6860      	ldr	r0, [r4, #4]
 800461a:	6803      	ldr	r3, [r0, #0]
 800461c:	6a1b      	ldr	r3, [r3, #32]
 800461e:	4798      	blx	r3
 8004620:	280f      	cmp	r0, #15
 8004622:	d803      	bhi.n	800462c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 8004624:	4b3f      	ldr	r3, [pc, #252]	; (8004724 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 8004626:	4a3d      	ldr	r2, [pc, #244]	; (800471c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004628:	21a4      	movs	r1, #164	; 0xa4
 800462a:	e7f2      	b.n	8004612 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800462c:	68e0      	ldr	r0, [r4, #12]
 800462e:	6803      	ldr	r3, [r0, #0]
 8004630:	6a1b      	ldr	r3, [r3, #32]
 8004632:	4798      	blx	r3
 8004634:	2837      	cmp	r0, #55	; 0x37
 8004636:	d803      	bhi.n	8004640 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8004638:	4b3b      	ldr	r3, [pc, #236]	; (8004728 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 800463a:	4a38      	ldr	r2, [pc, #224]	; (800471c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 800463c:	21a5      	movs	r1, #165	; 0xa5
 800463e:	e7e8      	b.n	8004612 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004640:	f010 fa2e 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004644:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800472c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8004648:	3004      	adds	r0, #4
 800464a:	f010 fa8f 	bl	8014b6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800464e:	f8d9 0000 	ldr.w	r0, [r9]
 8004652:	b110      	cbz	r0, 800465a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004654:	6803      	ldr	r3, [r0, #0]
 8004656:	68db      	ldr	r3, [r3, #12]
 8004658:	4798      	blx	r3
    if (*currentTrans)
 800465a:	f8d9 0000 	ldr.w	r0, [r9]
 800465e:	b110      	cbz	r0, 8004666 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004660:	6803      	ldr	r3, [r0, #0]
 8004662:	681b      	ldr	r3, [r3, #0]
 8004664:	4798      	blx	r3
    if (*currentScreen)
 8004666:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004730 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 800466a:	f8d8 0000 	ldr.w	r0, [r8]
 800466e:	b110      	cbz	r0, 8004676 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004670:	6803      	ldr	r3, [r0, #0]
 8004672:	695b      	ldr	r3, [r3, #20]
 8004674:	4798      	blx	r3
    if (*currentPresenter)
 8004676:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800467a:	b110      	cbz	r0, 8004682 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800467c:	6803      	ldr	r3, [r0, #0]
 800467e:	685b      	ldr	r3, [r3, #4]
 8004680:	4798      	blx	r3
    if (*currentScreen)
 8004682:	f8d8 0000 	ldr.w	r0, [r8]
 8004686:	b110      	cbz	r0, 800468e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004688:	6803      	ldr	r3, [r0, #0]
 800468a:	681b      	ldr	r3, [r3, #0]
 800468c:	4798      	blx	r3
    if (*currentPresenter)
 800468e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004692:	b110      	cbz	r0, 800469a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004694:	6803      	ldr	r3, [r0, #0]
 8004696:	689b      	ldr	r3, [r3, #8]
 8004698:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800469a:	68e0      	ldr	r0, [r4, #12]
 800469c:	2100      	movs	r1, #0
 800469e:	f7ff fbb7 	bl	8003e10 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80046a2:	2114      	movs	r1, #20
 80046a4:	4605      	mov	r5, r0
 80046a6:	f7ff fbb7 	bl	8003e18 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80046aa:	68a0      	ldr	r0, [r4, #8]
 80046ac:	6803      	ldr	r3, [r0, #0]
 80046ae:	2100      	movs	r1, #0
 80046b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046b2:	4798      	blx	r3
 80046b4:	4606      	mov	r6, r0
 80046b6:	f003 fc79 	bl	8007fac <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80046ba:	6860      	ldr	r0, [r4, #4]
 80046bc:	6803      	ldr	r3, [r0, #0]
 80046be:	2100      	movs	r1, #0
 80046c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046c2:	4798      	blx	r3
 80046c4:	4631      	mov	r1, r6
 80046c6:	4604      	mov	r4, r0
 80046c8:	f003 fc4a 	bl	8007f60 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 80046cc:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80046d0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80046d4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80046d8:	b1dc      	cbz	r4, 8004712 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 80046da:	1d23      	adds	r3, r4, #4
 80046dc:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80046e0:	6833      	ldr	r3, [r6, #0]
 80046e2:	f8c4 a008 	str.w	sl, [r4, #8]
 80046e6:	4630      	mov	r0, r6
 80046e8:	68db      	ldr	r3, [r3, #12]
 80046ea:	63f4      	str	r4, [r6, #60]	; 0x3c
 80046ec:	4798      	blx	r3
    newPresenter->activate();
 80046ee:	6823      	ldr	r3, [r4, #0]
 80046f0:	4620      	mov	r0, r4
 80046f2:	681b      	ldr	r3, [r3, #0]
 80046f4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80046f6:	4629      	mov	r1, r5
 80046f8:	4630      	mov	r0, r6
 80046fa:	f011 fffd 	bl	80166f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80046fe:	682b      	ldr	r3, [r5, #0]
 8004700:	4628      	mov	r0, r5
 8004702:	691b      	ldr	r3, [r3, #16]
 8004704:	4798      	blx	r3
    newTransition->invalidate();
 8004706:	682b      	ldr	r3, [r5, #0]
 8004708:	4628      	mov	r0, r5
 800470a:	695b      	ldr	r3, [r3, #20]
}
 800470c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004710:	4718      	bx	r3
    model->bind(newPresenter);
 8004712:	4623      	mov	r3, r4
 8004714:	e7e2      	b.n	80046dc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 8004716:	bf00      	nop
 8004718:	08029ec8 	.word	0x08029ec8
 800471c:	0802ae8f 	.word	0x0802ae8f
 8004720:	0802a064 	.word	0x0802a064
 8004724:	0802a0ab 	.word	0x0802a0ab
 8004728:	0802a14e 	.word	0x0802a14e
 800472c:	20013804 	.word	0x20013804
 8004730:	20013800 	.word	0x20013800

08004734 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 8004734:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004738:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800473c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800473e:	68a0      	ldr	r0, [r4, #8]
 8004740:	6803      	ldr	r3, [r0, #0]
 8004742:	6a1b      	ldr	r3, [r3, #32]
 8004744:	4798      	blx	r3
 8004746:	f241 33e3 	movw	r3, #5091	; 0x13e3
 800474a:	4298      	cmp	r0, r3
 800474c:	d805      	bhi.n	800475a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 800474e:	4b42      	ldr	r3, [pc, #264]	; (8004858 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8004750:	4a42      	ldr	r2, [pc, #264]	; (800485c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004752:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004754:	4842      	ldr	r0, [pc, #264]	; (8004860 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8004756:	f023 fcf3 	bl	8028140 <__assert_func>
 800475a:	6860      	ldr	r0, [r4, #4]
 800475c:	6803      	ldr	r3, [r0, #0]
 800475e:	6a1b      	ldr	r3, [r3, #32]
 8004760:	4798      	blx	r3
 8004762:	280f      	cmp	r0, #15
 8004764:	d803      	bhi.n	800476e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8004766:	4b3f      	ldr	r3, [pc, #252]	; (8004864 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8004768:	4a3c      	ldr	r2, [pc, #240]	; (800485c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800476a:	21a4      	movs	r1, #164	; 0xa4
 800476c:	e7f2      	b.n	8004754 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800476e:	68e0      	ldr	r0, [r4, #12]
 8004770:	6803      	ldr	r3, [r0, #0]
 8004772:	6a1b      	ldr	r3, [r3, #32]
 8004774:	4798      	blx	r3
 8004776:	2837      	cmp	r0, #55	; 0x37
 8004778:	d803      	bhi.n	8004782 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 800477a:	4b3b      	ldr	r3, [pc, #236]	; (8004868 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 800477c:	4a37      	ldr	r2, [pc, #220]	; (800485c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800477e:	21a5      	movs	r1, #165	; 0xa5
 8004780:	e7e8      	b.n	8004754 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004782:	f010 f98d 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004786:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800486c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 800478a:	3004      	adds	r0, #4
 800478c:	f010 f9ee 	bl	8014b6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004790:	f8d9 0000 	ldr.w	r0, [r9]
 8004794:	b110      	cbz	r0, 800479c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004796:	6803      	ldr	r3, [r0, #0]
 8004798:	68db      	ldr	r3, [r3, #12]
 800479a:	4798      	blx	r3
    if (*currentTrans)
 800479c:	f8d9 0000 	ldr.w	r0, [r9]
 80047a0:	b110      	cbz	r0, 80047a8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80047a2:	6803      	ldr	r3, [r0, #0]
 80047a4:	681b      	ldr	r3, [r3, #0]
 80047a6:	4798      	blx	r3
    if (*currentScreen)
 80047a8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004870 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 80047ac:	f8d8 0000 	ldr.w	r0, [r8]
 80047b0:	b110      	cbz	r0, 80047b8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80047b2:	6803      	ldr	r3, [r0, #0]
 80047b4:	695b      	ldr	r3, [r3, #20]
 80047b6:	4798      	blx	r3
    if (*currentPresenter)
 80047b8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80047bc:	b110      	cbz	r0, 80047c4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80047be:	6803      	ldr	r3, [r0, #0]
 80047c0:	685b      	ldr	r3, [r3, #4]
 80047c2:	4798      	blx	r3
    if (*currentScreen)
 80047c4:	f8d8 0000 	ldr.w	r0, [r8]
 80047c8:	b110      	cbz	r0, 80047d0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80047ca:	6803      	ldr	r3, [r0, #0]
 80047cc:	681b      	ldr	r3, [r3, #0]
 80047ce:	4798      	blx	r3
    if (*currentPresenter)
 80047d0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80047d4:	b110      	cbz	r0, 80047dc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80047d6:	6803      	ldr	r3, [r0, #0]
 80047d8:	689b      	ldr	r3, [r3, #8]
 80047da:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80047dc:	68e0      	ldr	r0, [r4, #12]
 80047de:	2100      	movs	r1, #0
 80047e0:	f7ff fb16 	bl	8003e10 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80047e4:	2114      	movs	r1, #20
 80047e6:	4605      	mov	r5, r0
 80047e8:	f7ff fb16 	bl	8003e18 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80047ec:	68a0      	ldr	r0, [r4, #8]
 80047ee:	6803      	ldr	r3, [r0, #0]
 80047f0:	2100      	movs	r1, #0
 80047f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047f4:	4798      	blx	r3
 80047f6:	4606      	mov	r6, r0
 80047f8:	f003 fd58 	bl	80082ac <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80047fc:	6860      	ldr	r0, [r4, #4]
 80047fe:	6803      	ldr	r3, [r0, #0]
 8004800:	2100      	movs	r1, #0
 8004802:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004804:	4798      	blx	r3
 8004806:	4631      	mov	r1, r6
 8004808:	4604      	mov	r4, r0
 800480a:	f003 fd29 	bl	8008260 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 800480e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004812:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004816:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800481a:	b1dc      	cbz	r4, 8004854 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 800481c:	1d23      	adds	r3, r4, #4
 800481e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004822:	6833      	ldr	r3, [r6, #0]
 8004824:	f8c4 a008 	str.w	sl, [r4, #8]
 8004828:	4630      	mov	r0, r6
 800482a:	68db      	ldr	r3, [r3, #12]
 800482c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800482e:	4798      	blx	r3
    newPresenter->activate();
 8004830:	6823      	ldr	r3, [r4, #0]
 8004832:	4620      	mov	r0, r4
 8004834:	681b      	ldr	r3, [r3, #0]
 8004836:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004838:	4629      	mov	r1, r5
 800483a:	4630      	mov	r0, r6
 800483c:	f011 ff5c 	bl	80166f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004840:	682b      	ldr	r3, [r5, #0]
 8004842:	4628      	mov	r0, r5
 8004844:	691b      	ldr	r3, [r3, #16]
 8004846:	4798      	blx	r3
    newTransition->invalidate();
 8004848:	682b      	ldr	r3, [r5, #0]
 800484a:	4628      	mov	r0, r5
 800484c:	695b      	ldr	r3, [r3, #20]
}
 800484e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004852:	4718      	bx	r3
    model->bind(newPresenter);
 8004854:	4623      	mov	r3, r4
 8004856:	e7e2      	b.n	800481e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8004858:	08029ec8 	.word	0x08029ec8
 800485c:	0802afbf 	.word	0x0802afbf
 8004860:	0802a064 	.word	0x0802a064
 8004864:	0802a0ab 	.word	0x0802a0ab
 8004868:	0802a14e 	.word	0x0802a14e
 800486c:	20013804 	.word	0x20013804
 8004870:	20013800 	.word	0x20013800

08004874 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8004874:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004878:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800487c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800487e:	68a0      	ldr	r0, [r4, #8]
 8004880:	6803      	ldr	r3, [r0, #0]
 8004882:	6a1b      	ldr	r3, [r3, #32]
 8004884:	4798      	blx	r3
 8004886:	f241 33e3 	movw	r3, #5091	; 0x13e3
 800488a:	4298      	cmp	r0, r3
 800488c:	d805      	bhi.n	800489a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 800488e:	4b42      	ldr	r3, [pc, #264]	; (8004998 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8004890:	4a42      	ldr	r2, [pc, #264]	; (800499c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004892:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004894:	4842      	ldr	r0, [pc, #264]	; (80049a0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8004896:	f023 fc53 	bl	8028140 <__assert_func>
 800489a:	6860      	ldr	r0, [r4, #4]
 800489c:	6803      	ldr	r3, [r0, #0]
 800489e:	6a1b      	ldr	r3, [r3, #32]
 80048a0:	4798      	blx	r3
 80048a2:	280f      	cmp	r0, #15
 80048a4:	d803      	bhi.n	80048ae <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 80048a6:	4b3f      	ldr	r3, [pc, #252]	; (80049a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 80048a8:	4a3c      	ldr	r2, [pc, #240]	; (800499c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80048aa:	21a4      	movs	r1, #164	; 0xa4
 80048ac:	e7f2      	b.n	8004894 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80048ae:	68e0      	ldr	r0, [r4, #12]
 80048b0:	6803      	ldr	r3, [r0, #0]
 80048b2:	6a1b      	ldr	r3, [r3, #32]
 80048b4:	4798      	blx	r3
 80048b6:	2837      	cmp	r0, #55	; 0x37
 80048b8:	d803      	bhi.n	80048c2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 80048ba:	4b3b      	ldr	r3, [pc, #236]	; (80049a8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 80048bc:	4a37      	ldr	r2, [pc, #220]	; (800499c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80048be:	21a5      	movs	r1, #165	; 0xa5
 80048c0:	e7e8      	b.n	8004894 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80048c2:	f010 f8ed 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80048c6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80049ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 80048ca:	3004      	adds	r0, #4
 80048cc:	f010 f94e 	bl	8014b6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80048d0:	f8d9 0000 	ldr.w	r0, [r9]
 80048d4:	b110      	cbz	r0, 80048dc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80048d6:	6803      	ldr	r3, [r0, #0]
 80048d8:	68db      	ldr	r3, [r3, #12]
 80048da:	4798      	blx	r3
    if (*currentTrans)
 80048dc:	f8d9 0000 	ldr.w	r0, [r9]
 80048e0:	b110      	cbz	r0, 80048e8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80048e2:	6803      	ldr	r3, [r0, #0]
 80048e4:	681b      	ldr	r3, [r3, #0]
 80048e6:	4798      	blx	r3
    if (*currentScreen)
 80048e8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80049b0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 80048ec:	f8d8 0000 	ldr.w	r0, [r8]
 80048f0:	b110      	cbz	r0, 80048f8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80048f2:	6803      	ldr	r3, [r0, #0]
 80048f4:	695b      	ldr	r3, [r3, #20]
 80048f6:	4798      	blx	r3
    if (*currentPresenter)
 80048f8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80048fc:	b110      	cbz	r0, 8004904 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80048fe:	6803      	ldr	r3, [r0, #0]
 8004900:	685b      	ldr	r3, [r3, #4]
 8004902:	4798      	blx	r3
    if (*currentScreen)
 8004904:	f8d8 0000 	ldr.w	r0, [r8]
 8004908:	b110      	cbz	r0, 8004910 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800490a:	6803      	ldr	r3, [r0, #0]
 800490c:	681b      	ldr	r3, [r3, #0]
 800490e:	4798      	blx	r3
    if (*currentPresenter)
 8004910:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004914:	b110      	cbz	r0, 800491c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004916:	6803      	ldr	r3, [r0, #0]
 8004918:	689b      	ldr	r3, [r3, #8]
 800491a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800491c:	68e0      	ldr	r0, [r4, #12]
 800491e:	2100      	movs	r1, #0
 8004920:	f7ff fa76 	bl	8003e10 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004924:	2114      	movs	r1, #20
 8004926:	4605      	mov	r5, r0
 8004928:	f7ff fa76 	bl	8003e18 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800492c:	68a0      	ldr	r0, [r4, #8]
 800492e:	6803      	ldr	r3, [r0, #0]
 8004930:	2100      	movs	r1, #0
 8004932:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004934:	4798      	blx	r3
 8004936:	4606      	mov	r6, r0
 8004938:	f003 fc76 	bl	8008228 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800493c:	6860      	ldr	r0, [r4, #4]
 800493e:	6803      	ldr	r3, [r0, #0]
 8004940:	2100      	movs	r1, #0
 8004942:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004944:	4798      	blx	r3
 8004946:	4631      	mov	r1, r6
 8004948:	4604      	mov	r4, r0
 800494a:	f003 fc47 	bl	80081dc <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 800494e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004952:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004956:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800495a:	b1dc      	cbz	r4, 8004994 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 800495c:	1d23      	adds	r3, r4, #4
 800495e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004962:	6833      	ldr	r3, [r6, #0]
 8004964:	f8c4 a008 	str.w	sl, [r4, #8]
 8004968:	4630      	mov	r0, r6
 800496a:	68db      	ldr	r3, [r3, #12]
 800496c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800496e:	4798      	blx	r3
    newPresenter->activate();
 8004970:	6823      	ldr	r3, [r4, #0]
 8004972:	4620      	mov	r0, r4
 8004974:	681b      	ldr	r3, [r3, #0]
 8004976:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004978:	4629      	mov	r1, r5
 800497a:	4630      	mov	r0, r6
 800497c:	f011 febc 	bl	80166f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004980:	682b      	ldr	r3, [r5, #0]
 8004982:	4628      	mov	r0, r5
 8004984:	691b      	ldr	r3, [r3, #16]
 8004986:	4798      	blx	r3
    newTransition->invalidate();
 8004988:	682b      	ldr	r3, [r5, #0]
 800498a:	4628      	mov	r0, r5
 800498c:	695b      	ldr	r3, [r3, #20]
}
 800498e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004992:	4718      	bx	r3
    model->bind(newPresenter);
 8004994:	4623      	mov	r3, r4
 8004996:	e7e2      	b.n	800495e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8004998:	08029ec8 	.word	0x08029ec8
 800499c:	0802b101 	.word	0x0802b101
 80049a0:	0802a064 	.word	0x0802a064
 80049a4:	0802a0ab 	.word	0x0802a0ab
 80049a8:	0802a14e 	.word	0x0802a14e
 80049ac:	20013804 	.word	0x20013804
 80049b0:	20013800 	.word	0x20013800

080049b4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 80049b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80049b8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80049bc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80049be:	68a0      	ldr	r0, [r4, #8]
 80049c0:	6803      	ldr	r3, [r0, #0]
 80049c2:	6a1b      	ldr	r3, [r3, #32]
 80049c4:	4798      	blx	r3
 80049c6:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80049ca:	d205      	bcs.n	80049d8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 80049cc:	4b42      	ldr	r3, [pc, #264]	; (8004ad8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 80049ce:	4a43      	ldr	r2, [pc, #268]	; (8004adc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80049d0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80049d2:	4843      	ldr	r0, [pc, #268]	; (8004ae0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 80049d4:	f023 fbb4 	bl	8028140 <__assert_func>
 80049d8:	6860      	ldr	r0, [r4, #4]
 80049da:	6803      	ldr	r3, [r0, #0]
 80049dc:	6a1b      	ldr	r3, [r3, #32]
 80049de:	4798      	blx	r3
 80049e0:	280f      	cmp	r0, #15
 80049e2:	d803      	bhi.n	80049ec <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 80049e4:	4b3f      	ldr	r3, [pc, #252]	; (8004ae4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 80049e6:	4a3d      	ldr	r2, [pc, #244]	; (8004adc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80049e8:	21a4      	movs	r1, #164	; 0xa4
 80049ea:	e7f2      	b.n	80049d2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80049ec:	68e0      	ldr	r0, [r4, #12]
 80049ee:	6803      	ldr	r3, [r0, #0]
 80049f0:	6a1b      	ldr	r3, [r3, #32]
 80049f2:	4798      	blx	r3
 80049f4:	2837      	cmp	r0, #55	; 0x37
 80049f6:	d803      	bhi.n	8004a00 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 80049f8:	4b3b      	ldr	r3, [pc, #236]	; (8004ae8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 80049fa:	4a38      	ldr	r2, [pc, #224]	; (8004adc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80049fc:	21a5      	movs	r1, #165	; 0xa5
 80049fe:	e7e8      	b.n	80049d2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004a00:	f010 f84e 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004a04:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004aec <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8004a08:	3004      	adds	r0, #4
 8004a0a:	f010 f8af 	bl	8014b6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004a0e:	f8d9 0000 	ldr.w	r0, [r9]
 8004a12:	b110      	cbz	r0, 8004a1a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004a14:	6803      	ldr	r3, [r0, #0]
 8004a16:	68db      	ldr	r3, [r3, #12]
 8004a18:	4798      	blx	r3
    if (*currentTrans)
 8004a1a:	f8d9 0000 	ldr.w	r0, [r9]
 8004a1e:	b110      	cbz	r0, 8004a26 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004a20:	6803      	ldr	r3, [r0, #0]
 8004a22:	681b      	ldr	r3, [r3, #0]
 8004a24:	4798      	blx	r3
    if (*currentScreen)
 8004a26:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004af0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8004a2a:	f8d8 0000 	ldr.w	r0, [r8]
 8004a2e:	b110      	cbz	r0, 8004a36 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004a30:	6803      	ldr	r3, [r0, #0]
 8004a32:	695b      	ldr	r3, [r3, #20]
 8004a34:	4798      	blx	r3
    if (*currentPresenter)
 8004a36:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004a3a:	b110      	cbz	r0, 8004a42 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004a3c:	6803      	ldr	r3, [r0, #0]
 8004a3e:	685b      	ldr	r3, [r3, #4]
 8004a40:	4798      	blx	r3
    if (*currentScreen)
 8004a42:	f8d8 0000 	ldr.w	r0, [r8]
 8004a46:	b110      	cbz	r0, 8004a4e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004a48:	6803      	ldr	r3, [r0, #0]
 8004a4a:	681b      	ldr	r3, [r3, #0]
 8004a4c:	4798      	blx	r3
    if (*currentPresenter)
 8004a4e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004a52:	b110      	cbz	r0, 8004a5a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004a54:	6803      	ldr	r3, [r0, #0]
 8004a56:	689b      	ldr	r3, [r3, #8]
 8004a58:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004a5a:	68e0      	ldr	r0, [r4, #12]
 8004a5c:	2100      	movs	r1, #0
 8004a5e:	f7ff f9d7 	bl	8003e10 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004a62:	2114      	movs	r1, #20
 8004a64:	4605      	mov	r5, r0
 8004a66:	f7ff f9d7 	bl	8003e18 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004a6a:	68a0      	ldr	r0, [r4, #8]
 8004a6c:	6803      	ldr	r3, [r0, #0]
 8004a6e:	2100      	movs	r1, #0
 8004a70:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a72:	4798      	blx	r3
 8004a74:	4606      	mov	r6, r0
 8004a76:	f003 fb7d 	bl	8008174 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004a7a:	6860      	ldr	r0, [r4, #4]
 8004a7c:	6803      	ldr	r3, [r0, #0]
 8004a7e:	2100      	movs	r1, #0
 8004a80:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a82:	4798      	blx	r3
 8004a84:	4631      	mov	r1, r6
 8004a86:	4604      	mov	r4, r0
 8004a88:	f003 fb4e 	bl	8008128 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8004a8c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004a90:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004a94:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004a98:	b1dc      	cbz	r4, 8004ad2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8004a9a:	1d23      	adds	r3, r4, #4
 8004a9c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004aa0:	6833      	ldr	r3, [r6, #0]
 8004aa2:	f8c4 a008 	str.w	sl, [r4, #8]
 8004aa6:	4630      	mov	r0, r6
 8004aa8:	68db      	ldr	r3, [r3, #12]
 8004aaa:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004aac:	4798      	blx	r3
    newPresenter->activate();
 8004aae:	6823      	ldr	r3, [r4, #0]
 8004ab0:	4620      	mov	r0, r4
 8004ab2:	681b      	ldr	r3, [r3, #0]
 8004ab4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004ab6:	4629      	mov	r1, r5
 8004ab8:	4630      	mov	r0, r6
 8004aba:	f011 fe1d 	bl	80166f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004abe:	682b      	ldr	r3, [r5, #0]
 8004ac0:	4628      	mov	r0, r5
 8004ac2:	691b      	ldr	r3, [r3, #16]
 8004ac4:	4798      	blx	r3
    newTransition->invalidate();
 8004ac6:	682b      	ldr	r3, [r5, #0]
 8004ac8:	4628      	mov	r0, r5
 8004aca:	695b      	ldr	r3, [r3, #20]
}
 8004acc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004ad0:	4718      	bx	r3
    model->bind(newPresenter);
 8004ad2:	4623      	mov	r3, r4
 8004ad4:	e7e2      	b.n	8004a9c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8004ad6:	bf00      	nop
 8004ad8:	08029ec8 	.word	0x08029ec8
 8004adc:	0802b243 	.word	0x0802b243
 8004ae0:	0802a064 	.word	0x0802a064
 8004ae4:	0802a0ab 	.word	0x0802a0ab
 8004ae8:	0802a14e 	.word	0x0802a14e
 8004aec:	20013804 	.word	0x20013804
 8004af0:	20013800 	.word	0x20013800

08004af4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8004af4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004af8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004afc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004afe:	68a0      	ldr	r0, [r4, #8]
 8004b00:	6803      	ldr	r3, [r0, #0]
 8004b02:	6a1b      	ldr	r3, [r3, #32]
 8004b04:	4798      	blx	r3
 8004b06:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004b0a:	d205      	bcs.n	8004b18 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8004b0c:	4b42      	ldr	r3, [pc, #264]	; (8004c18 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8004b0e:	4a43      	ldr	r2, [pc, #268]	; (8004c1c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004b10:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004b12:	4843      	ldr	r0, [pc, #268]	; (8004c20 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8004b14:	f023 fb14 	bl	8028140 <__assert_func>
 8004b18:	6860      	ldr	r0, [r4, #4]
 8004b1a:	6803      	ldr	r3, [r0, #0]
 8004b1c:	6a1b      	ldr	r3, [r3, #32]
 8004b1e:	4798      	blx	r3
 8004b20:	280f      	cmp	r0, #15
 8004b22:	d803      	bhi.n	8004b2c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8004b24:	4b3f      	ldr	r3, [pc, #252]	; (8004c24 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8004b26:	4a3d      	ldr	r2, [pc, #244]	; (8004c1c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004b28:	21a4      	movs	r1, #164	; 0xa4
 8004b2a:	e7f2      	b.n	8004b12 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004b2c:	68e0      	ldr	r0, [r4, #12]
 8004b2e:	6803      	ldr	r3, [r0, #0]
 8004b30:	6a1b      	ldr	r3, [r3, #32]
 8004b32:	4798      	blx	r3
 8004b34:	2837      	cmp	r0, #55	; 0x37
 8004b36:	d803      	bhi.n	8004b40 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8004b38:	4b3b      	ldr	r3, [pc, #236]	; (8004c28 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8004b3a:	4a38      	ldr	r2, [pc, #224]	; (8004c1c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004b3c:	21a5      	movs	r1, #165	; 0xa5
 8004b3e:	e7e8      	b.n	8004b12 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004b40:	f00f ffae 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004b44:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004c2c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8004b48:	3004      	adds	r0, #4
 8004b4a:	f010 f80f 	bl	8014b6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004b4e:	f8d9 0000 	ldr.w	r0, [r9]
 8004b52:	b110      	cbz	r0, 8004b5a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004b54:	6803      	ldr	r3, [r0, #0]
 8004b56:	68db      	ldr	r3, [r3, #12]
 8004b58:	4798      	blx	r3
    if (*currentTrans)
 8004b5a:	f8d9 0000 	ldr.w	r0, [r9]
 8004b5e:	b110      	cbz	r0, 8004b66 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004b60:	6803      	ldr	r3, [r0, #0]
 8004b62:	681b      	ldr	r3, [r3, #0]
 8004b64:	4798      	blx	r3
    if (*currentScreen)
 8004b66:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004c30 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8004b6a:	f8d8 0000 	ldr.w	r0, [r8]
 8004b6e:	b110      	cbz	r0, 8004b76 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004b70:	6803      	ldr	r3, [r0, #0]
 8004b72:	695b      	ldr	r3, [r3, #20]
 8004b74:	4798      	blx	r3
    if (*currentPresenter)
 8004b76:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b7a:	b110      	cbz	r0, 8004b82 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004b7c:	6803      	ldr	r3, [r0, #0]
 8004b7e:	685b      	ldr	r3, [r3, #4]
 8004b80:	4798      	blx	r3
    if (*currentScreen)
 8004b82:	f8d8 0000 	ldr.w	r0, [r8]
 8004b86:	b110      	cbz	r0, 8004b8e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004b88:	6803      	ldr	r3, [r0, #0]
 8004b8a:	681b      	ldr	r3, [r3, #0]
 8004b8c:	4798      	blx	r3
    if (*currentPresenter)
 8004b8e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b92:	b110      	cbz	r0, 8004b9a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004b94:	6803      	ldr	r3, [r0, #0]
 8004b96:	689b      	ldr	r3, [r3, #8]
 8004b98:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004b9a:	68e0      	ldr	r0, [r4, #12]
 8004b9c:	2100      	movs	r1, #0
 8004b9e:	f7ff f937 	bl	8003e10 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004ba2:	2114      	movs	r1, #20
 8004ba4:	4605      	mov	r5, r0
 8004ba6:	f7ff f937 	bl	8003e18 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004baa:	68a0      	ldr	r0, [r4, #8]
 8004bac:	6803      	ldr	r3, [r0, #0]
 8004bae:	2100      	movs	r1, #0
 8004bb0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bb2:	4798      	blx	r3
 8004bb4:	4606      	mov	r6, r0
 8004bb6:	f003 f999 	bl	8007eec <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004bba:	6860      	ldr	r0, [r4, #4]
 8004bbc:	6803      	ldr	r3, [r0, #0]
 8004bbe:	2100      	movs	r1, #0
 8004bc0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bc2:	4798      	blx	r3
 8004bc4:	4631      	mov	r1, r6
 8004bc6:	4604      	mov	r4, r0
 8004bc8:	f003 f96a 	bl	8007ea0 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004bcc:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004bd0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004bd4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004bd8:	b1dc      	cbz	r4, 8004c12 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8004bda:	1d23      	adds	r3, r4, #4
 8004bdc:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004be0:	6833      	ldr	r3, [r6, #0]
 8004be2:	f8c4 a008 	str.w	sl, [r4, #8]
 8004be6:	4630      	mov	r0, r6
 8004be8:	68db      	ldr	r3, [r3, #12]
 8004bea:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004bec:	4798      	blx	r3
    newPresenter->activate();
 8004bee:	6823      	ldr	r3, [r4, #0]
 8004bf0:	4620      	mov	r0, r4
 8004bf2:	681b      	ldr	r3, [r3, #0]
 8004bf4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004bf6:	4629      	mov	r1, r5
 8004bf8:	4630      	mov	r0, r6
 8004bfa:	f011 fd7d 	bl	80166f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004bfe:	682b      	ldr	r3, [r5, #0]
 8004c00:	4628      	mov	r0, r5
 8004c02:	691b      	ldr	r3, [r3, #16]
 8004c04:	4798      	blx	r3
    newTransition->invalidate();
 8004c06:	682b      	ldr	r3, [r5, #0]
 8004c08:	4628      	mov	r0, r5
 8004c0a:	695b      	ldr	r3, [r3, #20]
}
 8004c0c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004c10:	4718      	bx	r3
    model->bind(newPresenter);
 8004c12:	4623      	mov	r3, r4
 8004c14:	e7e2      	b.n	8004bdc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8004c16:	bf00      	nop
 8004c18:	08029ec8 	.word	0x08029ec8
 8004c1c:	0802b36f 	.word	0x0802b36f
 8004c20:	0802a064 	.word	0x0802a064
 8004c24:	0802a0ab 	.word	0x0802a0ab
 8004c28:	0802a14e 	.word	0x0802a14e
 8004c2c:	20013804 	.word	0x20013804
 8004c30:	20013800 	.word	0x20013800

08004c34 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8004c34:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8004c36:	4770      	bx	lr

08004c38 <_ZN21Gauge_with_ValuesBaseD1Ev>:
}

Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
{

}
 8004c38:	4770      	bx	lr

08004c3a <_ZN21Gauge_with_ValuesBase10initializeEv>:

void Gauge_with_ValuesBase::initialize()
{

}
 8004c3a:	4770      	bx	lr

08004c3c <_ZN21Gauge_with_ValuesBaseD0Ev>:
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8004c3c:	b510      	push	{r4, lr}
}
 8004c3e:	f44f 7162 	mov.w	r1, #904	; 0x388
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8004c42:	4604      	mov	r4, r0
}
 8004c44:	f022 fc8b 	bl	802755e <_ZdlPvj>
 8004c48:	4620      	mov	r0, r4
 8004c4a:	bd10      	pop	{r4, pc}

08004c4c <_ZN21Gauge_with_ValuesBaseC1Ev>:
Gauge_with_ValuesBase::Gauge_with_ValuesBase()
 8004c4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
          touchable(false),
 8004c50:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004c54:	4680      	mov	r8, r0
        : x(0), y(0), width(0), height(0)
 8004c56:	2600      	movs	r6, #0
 8004c58:	ed2d 8b02 	vpush	{d8}
 8004c5c:	8483      	strh	r3, [r0, #36]	; 0x24
 8004c5e:	4bb2      	ldr	r3, [pc, #712]	; (8004f28 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2dc>)
          firstChild(0)
 8004c60:	6286      	str	r6, [r0, #40]	; 0x28
 8004c62:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004c66:	e9c0 6603 	strd	r6, r6, [r0, #12]
          nextSibling(0),
 8004c6a:	e9c0 6605 	strd	r6, r6, [r0, #20]
          cachedAbsX(0),
 8004c6e:	e9c0 6607 	strd	r6, r6, [r0, #28]
 8004c72:	f848 3b2c 	str.w	r3, [r8], #44
 8004c76:	b08b      	sub	sp, #44	; 0x2c
 8004c78:	4604      	mov	r4, r0
 8004c7a:	4640      	mov	r0, r8
 8004c7c:	f7fd fc42 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8004c80:	f104 0374 	add.w	r3, r4, #116	; 0x74
 8004c84:	f104 0bbc 	add.w	fp, r4, #188	; 0xbc
 8004c88:	4618      	mov	r0, r3
 8004c8a:	9303      	str	r3, [sp, #12]
 8004c8c:	f504 7a82 	add.w	sl, r4, #260	; 0x104
 8004c90:	f7fd fc38 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8004c94:	4658      	mov	r0, fp
 8004c96:	f7fd fc35 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8004c9a:	f504 79a8 	add.w	r9, r4, #336	; 0x150
        : TextAreaWithWildcardBase(), wc1(0)
 8004c9e:	4da3      	ldr	r5, [pc, #652]	; (8004f2c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e0>)
        : TextArea()
 8004ca0:	4650      	mov	r0, sl
 8004ca2:	f7fd fc2f 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004ca6:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8004caa:	f8c4 614c 	str.w	r6, [r4, #332]	; 0x14c
        : TextArea()
 8004cae:	4648      	mov	r0, r9
 8004cb0:	f7fd fc28 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8004cb4:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
 8004cb8:	f504 77f4 	add.w	r7, r4, #488	; 0x1e8
 8004cbc:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8004cbe:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8004cc2:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 8004cc6:	ee08 3a10 	vmov	s16, r3
        : TextArea()
 8004cca:	f7fd fc1b 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004cce:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
 8004cd2:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 8004cd6:	4638      	mov	r0, r7
 8004cd8:	f00c fe9c 	bl	8011a14 <_ZN8touchgfx5GaugeC1Ev>
        rect.width = width;
 8004cdc:	4a94      	ldr	r2, [pc, #592]	; (8004f30 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e4>)
 8004cde:	60a2      	str	r2, [r4, #8]
    textArea4_2.setXY(217, 109);
 8004ce0:	4640      	mov	r0, r8
 8004ce2:	226d      	movs	r2, #109	; 0x6d
 8004ce4:	21d9      	movs	r1, #217	; 0xd9
 8004ce6:	ad04      	add	r5, sp, #16
 8004ce8:	f7fd fbd9 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004cec:	f04f 33ff 	mov.w	r3, #4294967295
 8004cf0:	65e3      	str	r3, [r4, #92]	; 0x5c
        boundingArea = calculateBoundingArea();
 8004cf2:	4641      	mov	r1, r8
 8004cf4:	4628      	mov	r0, r5
        linespace = space;
 8004cf6:	f8a4 6060 	strh.w	r6, [r4, #96]	; 0x60
        boundingArea = calculateBoundingArea();
 8004cfa:	f00c fb53 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004cfe:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004d02:	f104 0c68 	add.w	ip, r4, #104	; 0x68
 8004d06:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8004d0a:	4b8a      	ldr	r3, [pc, #552]	; (8004f34 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004d0c:	9308      	str	r3, [sp, #32]
 8004d0e:	2226      	movs	r2, #38	; 0x26
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D6CM));
 8004d10:	a908      	add	r1, sp, #32
 8004d12:	4640      	mov	r0, r8
 8004d14:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8004d18:	f00c fdde 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_2);
 8004d1c:	4641      	mov	r1, r8
 8004d1e:	4620      	mov	r0, r4
 8004d20:	f00a fc26 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 109);
 8004d24:	9b03      	ldr	r3, [sp, #12]
 8004d26:	4631      	mov	r1, r6
 8004d28:	4618      	mov	r0, r3
 8004d2a:	226d      	movs	r2, #109	; 0x6d
 8004d2c:	f7fd fbb7 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8004d30:	9b03      	ldr	r3, [sp, #12]
        linespace = space;
 8004d32:	f8a4 60a8 	strh.w	r6, [r4, #168]	; 0xa8
        color = newColor;
 8004d36:	f04f 32ff 	mov.w	r2, #4294967295
 8004d3a:	f8c4 20a4 	str.w	r2, [r4, #164]	; 0xa4
        boundingArea = calculateBoundingArea();
 8004d3e:	4619      	mov	r1, r3
 8004d40:	4628      	mov	r0, r5
 8004d42:	f00c fb2f 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004d46:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004d4a:	4b7a      	ldr	r3, [pc, #488]	; (8004f34 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004d4c:	9308      	str	r3, [sp, #32]
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YENI));
 8004d4e:	9b03      	ldr	r3, [sp, #12]
 8004d50:	f104 0cb0 	add.w	ip, r4, #176	; 0xb0
 8004d54:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8004d58:	2227      	movs	r2, #39	; 0x27
 8004d5a:	a908      	add	r1, sp, #32
 8004d5c:	4618      	mov	r0, r3
 8004d5e:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8004d62:	f00c fdb9 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_1);
 8004d66:	9b03      	ldr	r3, [sp, #12]
 8004d68:	4620      	mov	r0, r4
 8004d6a:	4619      	mov	r1, r3
 8004d6c:	f00a fc00 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 0);
 8004d70:	4632      	mov	r2, r6
 8004d72:	4658      	mov	r0, fp
 8004d74:	2171      	movs	r1, #113	; 0x71
 8004d76:	f7fd fb92 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004d7a:	f04f 32ff 	mov.w	r2, #4294967295
 8004d7e:	f8c4 20ec 	str.w	r2, [r4, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 8004d82:	4659      	mov	r1, fp
 8004d84:	4628      	mov	r0, r5
        linespace = space;
 8004d86:	f8a4 60f0 	strh.w	r6, [r4, #240]	; 0xf0
        boundingArea = calculateBoundingArea();
 8004d8a:	f00c fb0b 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004d8e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004d92:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
 8004d96:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004d9a:	4b66      	ldr	r3, [pc, #408]	; (8004f34 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004d9c:	9308      	str	r3, [sp, #32]
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z8XU));
 8004d9e:	a908      	add	r1, sp, #32
 8004da0:	2328      	movs	r3, #40	; 0x28
 8004da2:	4658      	mov	r0, fp
 8004da4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004da8:	f00c fd96 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4);
 8004dac:	4659      	mov	r1, fp
 8004dae:	4620      	mov	r0, r4
 8004db0:	f00a fbde 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(76, 124);
 8004db4:	4650      	mov	r0, sl
 8004db6:	227c      	movs	r2, #124	; 0x7c
 8004db8:	214c      	movs	r1, #76	; 0x4c
 8004dba:	f7fd fb70 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8004dbe:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
        linespace = space;
 8004dc2:	f8a4 6138 	strh.w	r6, [r4, #312]	; 0x138
        color = newColor;
 8004dc6:	f04f 32ff 	mov.w	r2, #4294967295
 8004dca:	f8c4 2134 	str.w	r2, [r4, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 8004dce:	4651      	mov	r1, sl
 8004dd0:	4628      	mov	r0, r5
 8004dd2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004dd6:	4798      	blx	r3
 8004dd8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004ddc:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 8004de0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004de4:	4b53      	ldr	r3, [pc, #332]	; (8004f34 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004de6:	9308      	str	r3, [sp, #32]
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RQ3J));
 8004de8:	a908      	add	r1, sp, #32
 8004dea:	2325      	movs	r3, #37	; 0x25
 8004dec:	4650      	mov	r0, sl
 8004dee:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004df2:	f00c fd71 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5);
 8004df6:	4651      	mov	r1, sl
 8004df8:	4620      	mov	r0, r4
 8004dfa:	f00a fbb9 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1.setXY(86, 139);
 8004dfe:	4648      	mov	r0, r9
 8004e00:	228b      	movs	r2, #139	; 0x8b
 8004e02:	2156      	movs	r1, #86	; 0x56
 8004e04:	f7fd fb4b 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8004e08:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
        linespace = space;
 8004e0c:	f8a4 6184 	strh.w	r6, [r4, #388]	; 0x184
        color = newColor;
 8004e10:	f04f 32ff 	mov.w	r2, #4294967295
 8004e14:	f8c4 2180 	str.w	r2, [r4, #384]	; 0x180
        boundingArea = calculateBoundingArea();
 8004e18:	4649      	mov	r1, r9
 8004e1a:	4628      	mov	r0, r5
 8004e1c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004e20:	4798      	blx	r3
 8004e22:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004e26:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
 8004e2a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004e2e:	4b41      	ldr	r3, [pc, #260]	; (8004f34 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004e30:	9308      	str	r3, [sp, #32]
    textArea5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_54VS));
 8004e32:	a908      	add	r1, sp, #32
 8004e34:	2324      	movs	r3, #36	; 0x24
 8004e36:	4648      	mov	r0, r9
 8004e38:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004e3c:	f00c fd4c 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_1);
 8004e40:	4649      	mov	r1, r9
 8004e42:	4620      	mov	r0, r4
 8004e44:	f00a fb94 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_2.setXY(86, 154);
 8004e48:	ee18 0a10 	vmov	r0, s16
 8004e4c:	229a      	movs	r2, #154	; 0x9a
 8004e4e:	2156      	movs	r1, #86	; 0x56
 8004e50:	f7fd fb25 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8004e54:	f8d4 319c 	ldr.w	r3, [r4, #412]	; 0x19c
        linespace = space;
 8004e58:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        color = newColor;
 8004e5c:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8004e60:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 8004e64:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
        boundingArea = calculateBoundingArea();
 8004e68:	4628      	mov	r0, r5
 8004e6a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004e6e:	4798      	blx	r3
 8004e70:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004e74:	f504 73ec 	add.w	r3, r4, #472	; 0x1d8
 8004e78:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004e7c:	4b2d      	ldr	r3, [pc, #180]	; (8004f34 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004e7e:	9308      	str	r3, [sp, #32]
    textArea5_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UKDF));
 8004e80:	ee18 0a10 	vmov	r0, s16
 8004e84:	2323      	movs	r3, #35	; 0x23
 8004e86:	a908      	add	r1, sp, #32
 8004e88:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004e8c:	f00c fd24 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_2);
 8004e90:	ee18 1a10 	vmov	r1, s16
 8004e94:	4620      	mov	r0, r4
 8004e96:	f00a fb6b 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004e9a:	2304      	movs	r3, #4
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8004e9c:	a908      	add	r1, sp, #32
 8004e9e:	4638      	mov	r0, r7
 8004ea0:	f8ad 3020 	strh.w	r3, [sp, #32]
 8004ea4:	f00a faf6 	bl	800f494 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
        setXY(x, y);
 8004ea8:	2212      	movs	r2, #18
 8004eaa:	4638      	mov	r0, r7
 8004eac:	211c      	movs	r1, #28
 8004eae:	f7fd faf6 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8004eb2:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 8004eb6:	4638      	mov	r0, r7
 8004eb8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004eba:	21b8      	movs	r1, #184	; 0xb8
 8004ebc:	4798      	blx	r3
        setHeight(height);
 8004ebe:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 8004ec2:	4638      	mov	r0, r7
 8004ec4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004ec6:	216a      	movs	r1, #106	; 0x6a
 8004ec8:	4798      	blx	r3
    gauge1.setCenter(92, 92);
 8004eca:	225c      	movs	r2, #92	; 0x5c
 8004ecc:	4611      	mov	r1, r2
 8004ece:	4638      	mov	r0, r7
 8004ed0:	f00c fe4b 	bl	8011b6a <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 90);
 8004ed4:	4638      	mov	r0, r7
 8004ed6:	225a      	movs	r2, #90	; 0x5a
 8004ed8:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8004edc:	f00c feca 	bl	8011c74 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(-90, 90);
 8004ee0:	4633      	mov	r3, r6
 8004ee2:	225a      	movs	r2, #90	; 0x5a
 8004ee4:	4638      	mov	r0, r7
 8004ee6:	9600      	str	r6, [sp, #0]
 8004ee8:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8004eec:	f00a f97f 	bl	800f1ee <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 8004ef0:	4631      	mov	r1, r6
 8004ef2:	4638      	mov	r0, r7
 8004ef4:	f00c fe68 	bl	8011bc8 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8004ef8:	2335      	movs	r3, #53	; 0x35
 8004efa:	2208      	movs	r2, #8
 8004efc:	4638      	mov	r0, r7
 8004efe:	2105      	movs	r1, #5
 8004f00:	f00c fe1e 	bl	8011b40 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8004f04:	4638      	mov	r0, r7
 8004f06:	2101      	movs	r1, #1
 8004f08:	f00c fdbc 	bl	8011a84 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8004f0c:	4638      	mov	r0, r7
 8004f0e:	2101      	movs	r1, #1
 8004f10:	f00c fdbb 	bl	8011a8a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(gauge1);
 8004f14:	4620      	mov	r0, r4
 8004f16:	4639      	mov	r1, r7
 8004f18:	f00a fb2a 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004f1c:	4620      	mov	r0, r4
 8004f1e:	b00b      	add	sp, #44	; 0x2c
 8004f20:	ecbd 8b02 	vpop	{d8}
 8004f24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004f28:	0802b5d8 	.word	0x0802b5d8
 8004f2c:	08029d5c 	.word	0x08029d5c
 8004f30:	00a900f0 	.word	0x00a900f0
 8004f34:	08029d4c 	.word	0x08029d4c

08004f38 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8004f38:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8004f3a:	4770      	bx	lr

08004f3c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8004f3c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8004f3e:	4770      	bx	lr

08004f40 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8004f40:	4770      	bx	lr

08004f42 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8004f42:	888b      	ldrh	r3, [r1, #4]
 8004f44:	69c0      	ldr	r0, [r0, #28]
 8004f46:	680a      	ldr	r2, [r1, #0]
 8004f48:	0adb      	lsrs	r3, r3, #11
 8004f4a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8004f4e:	4410      	add	r0, r2
 8004f50:	4770      	bx	lr

08004f52 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8004f52:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8004f54:	b1c2      	cbz	r2, 8004f88 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8004f56:	7b13      	ldrb	r3, [r2, #12]
 8004f58:	b1b3      	cbz	r3, 8004f88 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8004f5a:	7b54      	ldrb	r4, [r2, #13]
 8004f5c:	7ad2      	ldrb	r2, [r2, #11]
 8004f5e:	0224      	lsls	r4, r4, #8
 8004f60:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8004f64:	4314      	orrs	r4, r2
 8004f66:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8004f68:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8004f6a:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8004f6e:	8813      	ldrh	r3, [r2, #0]
 8004f70:	428b      	cmp	r3, r1
 8004f72:	d102      	bne.n	8004f7a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8004f74:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8004f78:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8004f7a:	d805      	bhi.n	8004f88 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8004f7c:	3801      	subs	r0, #1
 8004f7e:	b280      	uxth	r0, r0
 8004f80:	3204      	adds	r2, #4
 8004f82:	2800      	cmp	r0, #0
 8004f84:	d1f3      	bne.n	8004f6e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8004f86:	e7f7      	b.n	8004f78 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8004f88:	2000      	movs	r0, #0
 8004f8a:	e7f5      	b.n	8004f78 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08004f8c <_ZN8touchgfx13GeneratedFontD0Ev>:
 8004f8c:	b510      	push	{r4, lr}
 8004f8e:	212c      	movs	r1, #44	; 0x2c
 8004f90:	4604      	mov	r4, r0
 8004f92:	f022 fae4 	bl	802755e <_ZdlPvj>
 8004f96:	4620      	mov	r0, r4
 8004f98:	bd10      	pop	{r4, pc}
	...

08004f9c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8004f9c:	b530      	push	{r4, r5, lr}
 8004f9e:	b08b      	sub	sp, #44	; 0x2c
 8004fa0:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8004fa2:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8004fa6:	9508      	str	r5, [sp, #32]
 8004fa8:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8004fac:	9507      	str	r5, [sp, #28]
 8004fae:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8004fb2:	9506      	str	r5, [sp, #24]
 8004fb4:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8004fb8:	9505      	str	r5, [sp, #20]
 8004fba:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8004fbe:	9504      	str	r5, [sp, #16]
 8004fc0:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8004fc4:	9503      	str	r5, [sp, #12]
 8004fc6:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8004fca:	9502      	str	r5, [sp, #8]
 8004fcc:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8004fd0:	9501      	str	r5, [sp, #4]
 8004fd2:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8004fd6:	9500      	str	r5, [sp, #0]
 8004fd8:	f010 fef8 	bl	8015dcc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8004fdc:	4b06      	ldr	r3, [pc, #24]	; (8004ff8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8004fde:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8004fe0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004fe2:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8004fe4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8004fe6:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8004fe8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004fea:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 8004fec:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8004fee:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8004ff0:	4620      	mov	r0, r4
 8004ff2:	b00b      	add	sp, #44	; 0x2c
 8004ff4:	bd30      	pop	{r4, r5, pc}
 8004ff6:	bf00      	nop
 8004ff8:	0802b66c 	.word	0x0802b66c

08004ffc <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 8004ffc:	4770      	bx	lr

08004ffe <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004ffe:	4770      	bx	lr

08005000 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005000:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005002:	68c2      	ldr	r2, [r0, #12]
 8005004:	6844      	ldr	r4, [r0, #4]
 8005006:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005008:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800500a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800500e:	07d2      	lsls	r2, r2, #31
 8005010:	bf48      	it	mi
 8005012:	5962      	ldrmi	r2, [r4, r5]
 8005014:	689b      	ldr	r3, [r3, #8]
    }
 8005016:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005018:	bf48      	it	mi
 800501a:	58d3      	ldrmi	r3, [r2, r3]
 800501c:	4718      	bx	r3

0800501e <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800501e:	6843      	ldr	r3, [r0, #4]
 8005020:	b12b      	cbz	r3, 800502e <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005022:	6883      	ldr	r3, [r0, #8]
 8005024:	b92b      	cbnz	r3, 8005032 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005026:	68c0      	ldr	r0, [r0, #12]
 8005028:	f000 0001 	and.w	r0, r0, #1
 800502c:	4770      	bx	lr
 800502e:	4618      	mov	r0, r3
 8005030:	4770      	bx	lr
 8005032:	2001      	movs	r0, #1
    }
 8005034:	4770      	bx	lr

08005036 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005036:	b510      	push	{r4, lr}
 8005038:	2110      	movs	r1, #16
 800503a:	4604      	mov	r4, r0
 800503c:	f022 fa8f 	bl	802755e <_ZdlPvj>
 8005040:	4620      	mov	r0, r4
 8005042:	bd10      	pop	{r4, pc}

08005044 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005044:	b510      	push	{r4, lr}
 8005046:	4b03      	ldr	r3, [pc, #12]	; (8005054 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8005048:	6003      	str	r3, [r0, #0]
 800504a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800504c:	f00e f826 	bl	801309c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005050:	4620      	mov	r0, r4
 8005052:	bd10      	pop	{r4, pc}
 8005054:	0802b6e4 	.word	0x0802b6e4

08005058 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005058:	b507      	push	{r0, r1, r2, lr}
 800505a:	4b07      	ldr	r3, [pc, #28]	; (8005078 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 800505c:	6003      	str	r3, [r0, #0]
 800505e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005060:	f00e f81c 	bl	801309c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005064:	9801      	ldr	r0, [sp, #4]
 8005066:	f241 117c 	movw	r1, #4476	; 0x117c
 800506a:	f022 fa78 	bl	802755e <_ZdlPvj>
 800506e:	9801      	ldr	r0, [sp, #4]
 8005070:	b003      	add	sp, #12
 8005072:	f85d fb04 	ldr.w	pc, [sp], #4
 8005076:	bf00      	nop
 8005078:	0802b6e4 	.word	0x0802b6e4

0800507c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800507c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 800507e:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 8005082:	4299      	cmp	r1, r3
{
 8005084:	4604      	mov	r4, r0
 8005086:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8005088:	d103      	bne.n	8005092 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800508a:	f00f fd09 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 800508e:	f7fe fb1d 	bl	80036cc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8005092:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005096:	429d      	cmp	r5, r3
 8005098:	d103      	bne.n	80050a2 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800509a:	f00f fd01 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 800509e:	f7fe fba5 	bl	80037ec <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 80050a2:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80050a6:	429d      	cmp	r5, r3
 80050a8:	d103      	bne.n	80050b2 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 80050aa:	f00f fcf9 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 80050ae:	f7fe fbdd 	bl	800386c <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 80050b2:	f504 7446 	add.w	r4, r4, #792	; 0x318
 80050b6:	42a5      	cmp	r5, r4
 80050b8:	d10a      	bne.n	80050d0 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80050ba:	4806      	ldr	r0, [pc, #24]	; (80050d4 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 80050bc:	2200      	movs	r2, #0
 80050be:	2120      	movs	r1, #32
 80050c0:	f003 ff74 	bl	8008fac <HAL_GPIO_WritePin>
 80050c4:	f00f fcec 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 80050c8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 80050cc:	f7fe bbde 	b.w	800388c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80050d0:	bd38      	pop	{r3, r4, r5, pc}
 80050d2:	bf00      	nop
 80050d4:	40021000 	.word	0x40021000

080050d8 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 80050d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80050dc:	ed2d 8b06 	vpush	{d8-d10}
 80050e0:	4604      	mov	r4, r0
 80050e2:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 80050e4:	46a3      	mov	fp, r4
        : presenter(0)
 80050e6:	2500      	movs	r5, #0
 80050e8:	f011 f95a 	bl	80163a0 <_ZN8touchgfx6ScreenC1Ev>
 80050ec:	4b6a      	ldr	r3, [pc, #424]	; (8005298 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 80050ee:	63e5      	str	r5, [r4, #60]	; 0x3c
 80050f0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80050f4:	2226      	movs	r2, #38	; 0x26
 80050f6:	4629      	mov	r1, r5
 80050f8:	4658      	mov	r0, fp
 80050fa:	f023 fa26 	bl	802854a <memset>
 80050fe:	4658      	mov	r0, fp
 8005100:	f7fd f9ee 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 8005104:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005108:	26ff      	movs	r6, #255	; 0xff
 800510a:	4b64      	ldr	r3, [pc, #400]	; (800529c <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 800510c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800510e:	2226      	movs	r2, #38	; 0x26
 8005110:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005114:	4629      	mov	r1, r5
 8005116:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800511a:	4650      	mov	r0, sl
        : color(col)
 800511c:	66a5      	str	r5, [r4, #104]	; 0x68
 800511e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005122:	f023 fa12 	bl	802854a <memset>
 8005126:	4650      	mov	r0, sl
 8005128:	f7fd f9da 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 800512c:	4b5c      	ldr	r3, [pc, #368]	; (80052a0 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 800512e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005130:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8005134:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005138:	a90c      	add	r1, sp, #48	; 0x30
 800513a:	4650      	mov	r0, sl
 800513c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005140:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005144:	f00c ffa3 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005148:	4648      	mov	r0, r9
 800514a:	f7fd f9db 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 800514e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005152:	4b54      	ldr	r3, [pc, #336]	; (80052a4 <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 8005154:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005158:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800515c:	4638      	mov	r0, r7
 800515e:	f00b fe5f 	bl	8010e20 <_ZN8touchgfx4LineC1Ev>
 8005162:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005166:	4618      	mov	r0, r3
 8005168:	9303      	str	r3, [sp, #12]
 800516a:	f7fc f8a9 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800516e:	4b4e      	ldr	r3, [pc, #312]	; (80052a8 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 8005170:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005174:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005178:	3324      	adds	r3, #36	; 0x24
 800517a:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 800517e:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005182:	4640      	mov	r0, r8
 8005184:	f7fd f9be 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8005188:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 800518c:	4618      	mov	r0, r3
 800518e:	ee08 3a10 	vmov	s16, r3
 8005192:	f7fd f9b7 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8005196:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800519a:	4618      	mov	r0, r3
 800519c:	ee08 3a90 	vmov	s17, r3
 80051a0:	f7fd f9b0 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 80051a4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80051a8:	4618      	mov	r0, r3
 80051aa:	ee09 3a10 	vmov	s18, r3
 80051ae:	f00d f8af 	bl	8012310 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80051b2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80051b6:	4618      	mov	r0, r3
 80051b8:	ee09 3a90 	vmov	s19, r3
 80051bc:	f00d f8a8 	bl	8012310 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80051c0:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80051c4:	4618      	mov	r0, r3
 80051c6:	ee0a 3a10 	vmov	s20, r3
 80051ca:	f00d f8a1 	bl	8012310 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80051ce:	f504 7346 	add.w	r3, r4, #792	; 0x318
 80051d2:	4618      	mov	r0, r3
 80051d4:	ee0a 3a90 	vmov	s21, r3
 80051d8:	f00c ff32 	bl	8012040 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80051dc:	4a33      	ldr	r2, [pc, #204]	; (80052ac <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 80051de:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80051e2:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 80051e6:	4a32      	ldr	r2, [pc, #200]	; (80052b0 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80051e8:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80051ec:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 80051f0:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 80051f4:	f00d ff48 	bl	8013088 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80051f8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80051fc:	462a      	mov	r2, r5
 80051fe:	4658      	mov	r0, fp
 8005200:	9300      	str	r3, [sp, #0]
 8005202:	4629      	mov	r1, r5
 8005204:	23f0      	movs	r3, #240	; 0xf0
 8005206:	f7fd f957 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800520a:	1d26      	adds	r6, r4, #4
        color = newColor;
 800520c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005210:	66a3      	str	r3, [r4, #104]	; 0x68
 8005212:	4659      	mov	r1, fp
 8005214:	4630      	mov	r0, r6
 8005216:	f00a f9ab 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800521a:	462a      	mov	r2, r5
 800521c:	4650      	mov	r0, sl
 800521e:	4629      	mov	r1, r5
 8005220:	f7fd f93d 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8005224:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005226:	4650      	mov	r0, sl
 8005228:	a90c      	add	r1, sp, #48	; 0x30
 800522a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800522e:	f00c ff2e 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005232:	4651      	mov	r1, sl
 8005234:	4630      	mov	r0, r6
 8005236:	f00a f99b 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 800523a:	f44f 729a 	mov.w	r2, #308	; 0x134
 800523e:	2156      	movs	r1, #86	; 0x56
 8005240:	4648      	mov	r0, r9
 8005242:	f7fd f92c 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8005246:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800524a:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800524e:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005252:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005256:	4650      	mov	r0, sl
 8005258:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800525c:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005260:	4649      	mov	r1, r9
 8005262:	4798      	blx	r3
 8005264:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005268:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800526c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005270:	4b10      	ldr	r3, [pc, #64]	; (80052b4 <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 8005272:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8005274:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8005278:	b92b      	cbnz	r3, 8005286 <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 800527a:	4b0f      	ldr	r3, [pc, #60]	; (80052b8 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 800527c:	4a0f      	ldr	r2, [pc, #60]	; (80052bc <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 800527e:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005280:	480f      	ldr	r0, [pc, #60]	; (80052c0 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 8005282:	f022 ff5d 	bl	8028140 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005286:	4b0f      	ldr	r3, [pc, #60]	; (80052c4 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005288:	881b      	ldrh	r3, [r3, #0]
 800528a:	2b21      	cmp	r3, #33	; 0x21
 800528c:	d81e      	bhi.n	80052cc <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 800528e:	4b0e      	ldr	r3, [pc, #56]	; (80052c8 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 8005290:	4a0a      	ldr	r2, [pc, #40]	; (80052bc <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005292:	2161      	movs	r1, #97	; 0x61
 8005294:	e7f4      	b.n	8005280 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 8005296:	bf00      	nop
 8005298:	0802b6e4 	.word	0x0802b6e4
 800529c:	0802c68c 	.word	0x0802c68c
 80052a0:	0802c854 	.word	0x0802c854
 80052a4:	08029d5c 	.word	0x08029d5c
 80052a8:	0802c3c0 	.word	0x0802c3c0
 80052ac:	0802b6cc 	.word	0x0802b6cc
 80052b0:	0800507d 	.word	0x0800507d
 80052b4:	20013814 	.word	0x20013814
 80052b8:	08029b9c 	.word	0x08029b9c
 80052bc:	08029c9e 	.word	0x08029c9e
 80052c0:	08029c19 	.word	0x08029c19
 80052c4:	20013818 	.word	0x20013818
 80052c8:	08029c60 	.word	0x08029c60
        return texts->getText(typedTextId);
 80052cc:	4ba5      	ldr	r3, [pc, #660]	; (8005564 <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 80052ce:	2121      	movs	r1, #33	; 0x21
 80052d0:	6818      	ldr	r0, [r3, #0]
 80052d2:	f002 fc25 	bl	8007b20 <_ZNK8touchgfx5Texts7getTextEt>
 80052d6:	4aa4      	ldr	r2, [pc, #656]	; (8005568 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 80052d8:	4603      	mov	r3, r0
 80052da:	2104      	movs	r1, #4
 80052dc:	4650      	mov	r0, sl
 80052de:	f012 fd43 	bl	8017d68 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 80052e2:	4648      	mov	r0, r9
        wc1 = value;
 80052e4:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80052e8:	f00c fad6 	bl	8011898 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80052ec:	4b9f      	ldr	r3, [pc, #636]	; (800556c <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 80052ee:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 80052f0:	a90c      	add	r1, sp, #48	; 0x30
 80052f2:	2322      	movs	r3, #34	; 0x22
 80052f4:	4648      	mov	r0, r9
 80052f6:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80052fa:	f00c faed 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80052fe:	4649      	mov	r1, r9
 8005300:	4630      	mov	r0, r6
 8005302:	f00a f935 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005306:	230a      	movs	r3, #10
 8005308:	9300      	str	r3, [sp, #0]
 800530a:	2232      	movs	r2, #50	; 0x32
 800530c:	23f0      	movs	r3, #240	; 0xf0
 800530e:	4629      	mov	r1, r5
 8005310:	4638      	mov	r0, r7
 8005312:	f7fd f8d1 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005316:	9b03      	ldr	r3, [sp, #12]
 8005318:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800531c:	22a0      	movs	r2, #160	; 0xa0
 800531e:	4611      	mov	r1, r2
 8005320:	4638      	mov	r0, r7
 8005322:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005326:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800532a:	f00b fe8f 	bl	801104c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800532e:	22a0      	movs	r2, #160	; 0xa0
 8005330:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005334:	4638      	mov	r0, r7
 8005336:	f00b fe94 	bl	8011062 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800533a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800533e:	2b20      	cmp	r3, #32
 8005340:	d005      	beq.n	800534e <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 8005342:	2320      	movs	r3, #32
 8005344:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005348:	4638      	mov	r0, r7
 800534a:	f00b fd89 	bl	8010e60 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800534e:	4638      	mov	r0, r7
 8005350:	2101      	movs	r1, #1
 8005352:	f00b fe91 	bl	8011078 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005356:	4639      	mov	r1, r7
 8005358:	4630      	mov	r0, r6
 800535a:	ad04      	add	r5, sp, #16
        color = newColor;
 800535c:	f04f 37ff 	mov.w	r7, #4294967295
 8005360:	f00a f906 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005364:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005368:	2223      	movs	r2, #35	; 0x23
 800536a:	4640      	mov	r0, r8
 800536c:	2145      	movs	r1, #69	; 0x45
 800536e:	f7fd f896 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005372:	4641      	mov	r1, r8
 8005374:	4628      	mov	r0, r5
        color = newColor;
 8005376:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 800537a:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 800537e:	f00c f811 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005382:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8005386:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 800538a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800538e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005392:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 800556c <_ZN17Main_MenuViewBaseC1Ev+0x494>
 8005396:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 800539a:	2347      	movs	r3, #71	; 0x47
 800539c:	4649      	mov	r1, r9
 800539e:	4640      	mov	r0, r8
 80053a0:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80053a4:	f00c fa98 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80053a8:	4641      	mov	r1, r8
 80053aa:	4630      	mov	r0, r6
 80053ac:	f00a f8e0 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80053b0:	ee18 0a10 	vmov	r0, s16
 80053b4:	220c      	movs	r2, #12
 80053b6:	2136      	movs	r1, #54	; 0x36
 80053b8:	f7fd f871 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 80053bc:	ee18 1a10 	vmov	r1, s16
 80053c0:	4628      	mov	r0, r5
        color = newColor;
 80053c2:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80053c6:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80053ca:	f00b ffeb 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80053ce:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80053d2:	ee18 3a10 	vmov	r3, s16
 80053d6:	333c      	adds	r3, #60	; 0x3c
 80053d8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80053dc:	2348      	movs	r3, #72	; 0x48
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 80053de:	ee18 0a10 	vmov	r0, s16
 80053e2:	4649      	mov	r1, r9
 80053e4:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80053e8:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80053ec:	f00c fa74 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80053f0:	ee18 1a10 	vmov	r1, s16
 80053f4:	4630      	mov	r0, r6
 80053f6:	f00a f8bb 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 80053fa:	ee18 0a90 	vmov	r0, s17
 80053fe:	223c      	movs	r2, #60	; 0x3c
 8005400:	2158      	movs	r1, #88	; 0x58
 8005402:	f7fd f84c 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8005406:	ee18 1a90 	vmov	r1, s17
 800540a:	4628      	mov	r0, r5
        color = newColor;
 800540c:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8005410:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005414:	f00b ffc6 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005418:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800541c:	ee18 3a90 	vmov	r3, s17
 8005420:	333c      	adds	r3, #60	; 0x3c
 8005422:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005426:	2311      	movs	r3, #17
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8005428:	ee18 0a90 	vmov	r0, s17
 800542c:	4649      	mov	r1, r9
 800542e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005432:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005436:	f00c fa4f 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800543a:	ee18 1a90 	vmov	r1, s17
 800543e:	4630      	mov	r0, r6
 8005440:	f00a f896 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005444:	ee19 0a10 	vmov	r0, s18
 8005448:	22f0      	movs	r2, #240	; 0xf0
 800544a:	2121      	movs	r1, #33	; 0x21
 800544c:	f7fd f827 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8005450:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005454:	464a      	mov	r2, r9
 8005456:	f04f 0802 	mov.w	r8, #2
 800545a:	a90b      	add	r1, sp, #44	; 0x2c
 800545c:	ee19 0a10 	vmov	r0, s18
 8005460:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005464:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8005468:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800546c:	f00c fc19 	bl	8011ca2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005470:	2349      	movs	r3, #73	; 0x49
 8005472:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005476:	350c      	adds	r5, #12
        updateTextPosition();
 8005478:	ee19 0a10 	vmov	r0, s18
 800547c:	f7fd f864 	bl	8002548 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005480:	ee19 1a10 	vmov	r1, s18
 8005484:	4630      	mov	r0, r6
        colorPressed = col;
 8005486:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 800548a:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 800548e:	f00a f86f 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005492:	ee19 0a90 	vmov	r0, s19
 8005496:	22aa      	movs	r2, #170	; 0xaa
 8005498:	2121      	movs	r1, #33	; 0x21
 800549a:	f7fd f800 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800549e:	464a      	mov	r2, r9
 80054a0:	a90b      	add	r1, sp, #44	; 0x2c
 80054a2:	ee19 0a90 	vmov	r0, s19
 80054a6:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80054aa:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80054ae:	f00c fbf8 	bl	8011ca2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80054b2:	234a      	movs	r3, #74	; 0x4a
 80054b4:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80054b8:	ee19 0a90 	vmov	r0, s19
 80054bc:	f7fd f844 	bl	8002548 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80054c0:	ee19 1a90 	vmov	r1, s19
 80054c4:	4630      	mov	r0, r6
        colorPressed = col;
 80054c6:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80054ca:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80054ce:	f00a f84f 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80054d2:	ee1a 0a10 	vmov	r0, s20
 80054d6:	2264      	movs	r2, #100	; 0x64
 80054d8:	2121      	movs	r1, #33	; 0x21
 80054da:	f7fc ffe0 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80054de:	464a      	mov	r2, r9
 80054e0:	a90b      	add	r1, sp, #44	; 0x2c
 80054e2:	ee1a 0a10 	vmov	r0, s20
 80054e6:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80054ea:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80054ee:	f00c fbd8 	bl	8011ca2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80054f2:	234b      	movs	r3, #75	; 0x4b
 80054f4:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 80054f8:	ee1a 0a10 	vmov	r0, s20
 80054fc:	f7fd f824 	bl	8002548 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005500:	ee1a 1a10 	vmov	r1, s20
 8005504:	4630      	mov	r0, r6
        colorPressed = col;
 8005506:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 800550a:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 800550e:	f00a f82f 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 8005512:	ee1a 0a90 	vmov	r0, s21
 8005516:	2205      	movs	r2, #5
 8005518:	21c6      	movs	r1, #198	; 0xc6
 800551a:	f7fc ffc0 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 800551e:	2301      	movs	r3, #1
 8005520:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005524:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 8005526:	ee1a 0a90 	vmov	r0, s21
 800552a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800552e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005532:	aa0a      	add	r2, sp, #40	; 0x28
 8005534:	ab0b      	add	r3, sp, #44	; 0x2c
 8005536:	a909      	add	r1, sp, #36	; 0x24
 8005538:	f8cd 9000 	str.w	r9, [sp]
 800553c:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8005540:	f00c fce9 	bl	8011f16 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8005544:	4630      	mov	r0, r6
 8005546:	ee1a 1a90 	vmov	r1, s21
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 800554a:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 800554e:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 8005552:	f00a f80d 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005556:	4620      	mov	r0, r4
 8005558:	b00f      	add	sp, #60	; 0x3c
 800555a:	ecbd 8b06 	vpop	{d8-d10}
 800555e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005562:	bf00      	nop
 8005564:	20013820 	.word	0x20013820
 8005568:	08029cd6 	.word	0x08029cd6
 800556c:	08029d4c 	.word	0x08029d4c

08005570 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8005570:	4770      	bx	lr

08005572 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005572:	4770      	bx	lr

08005574 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005574:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005576:	68c2      	ldr	r2, [r0, #12]
 8005578:	6844      	ldr	r4, [r0, #4]
 800557a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800557c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800557e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005582:	07d2      	lsls	r2, r2, #31
 8005584:	bf48      	it	mi
 8005586:	5962      	ldrmi	r2, [r4, r5]
 8005588:	689b      	ldr	r3, [r3, #8]
    }
 800558a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800558c:	bf48      	it	mi
 800558e:	58d3      	ldrmi	r3, [r2, r3]
 8005590:	4718      	bx	r3

08005592 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005592:	6843      	ldr	r3, [r0, #4]
 8005594:	b12b      	cbz	r3, 80055a2 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005596:	6883      	ldr	r3, [r0, #8]
 8005598:	b92b      	cbnz	r3, 80055a6 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800559a:	68c0      	ldr	r0, [r0, #12]
 800559c:	f000 0001 	and.w	r0, r0, #1
 80055a0:	4770      	bx	lr
 80055a2:	4618      	mov	r0, r3
 80055a4:	4770      	bx	lr
 80055a6:	2001      	movs	r0, #1
    }
 80055a8:	4770      	bx	lr

080055aa <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80055aa:	b510      	push	{r4, lr}
 80055ac:	2110      	movs	r1, #16
 80055ae:	4604      	mov	r4, r0
 80055b0:	f021 ffd5 	bl	802755e <_ZdlPvj>
 80055b4:	4620      	mov	r0, r4
 80055b6:	bd10      	pop	{r4, pc}

080055b8 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80055b8:	b510      	push	{r4, lr}
 80055ba:	4b03      	ldr	r3, [pc, #12]	; (80055c8 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 80055bc:	6003      	str	r3, [r0, #0]
 80055be:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80055c0:	f00d fd6c 	bl	801309c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80055c4:	4620      	mov	r0, r4
 80055c6:	bd10      	pop	{r4, pc}
 80055c8:	0802b730 	.word	0x0802b730

080055cc <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80055cc:	b507      	push	{r0, r1, r2, lr}
 80055ce:	4b07      	ldr	r3, [pc, #28]	; (80055ec <_ZN19MeasurementViewBaseD0Ev+0x20>)
 80055d0:	6003      	str	r3, [r0, #0]
 80055d2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80055d4:	f00d fd62 	bl	801309c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80055d8:	9801      	ldr	r0, [sp, #4]
 80055da:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80055de:	f021 ffbe 	bl	802755e <_ZdlPvj>
 80055e2:	9801      	ldr	r0, [sp, #4]
 80055e4:	b003      	add	sp, #12
 80055e6:	f85d fb04 	ldr.w	pc, [sp], #4
 80055ea:	bf00      	nop
 80055ec:	0802b730 	.word	0x0802b730

080055f0 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80055f0:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80055f2:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80055f6:	4299      	cmp	r1, r3
{
 80055f8:	4604      	mov	r4, r0
 80055fa:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80055fc:	d103      	bne.n	8005606 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80055fe:	f00f fa4f 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8005602:	f7fe f853 	bl	80036ac <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8005606:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800560a:	429d      	cmp	r5, r3
 800560c:	d103      	bne.n	8005616 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800560e:	f00f fa47 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8005612:	f7fe f87b 	bl	800370c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8005616:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800561a:	42a5      	cmp	r5, r4
 800561c:	d105      	bne.n	800562a <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800561e:	f00f fa3f 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 8005622:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 8005626:	f7fe b8a1 	b.w	800376c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 800562a:	bd38      	pop	{r3, r4, r5, pc}

0800562c <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 800562c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005630:	ed2d 8b06 	vpush	{d8-d10}
 8005634:	4604      	mov	r4, r0
 8005636:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8005638:	46a3      	mov	fp, r4
 800563a:	2500      	movs	r5, #0
 800563c:	f010 feb0 	bl	80163a0 <_ZN8touchgfx6ScreenC1Ev>
 8005640:	4b66      	ldr	r3, [pc, #408]	; (80057dc <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 8005642:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005644:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005648:	2226      	movs	r2, #38	; 0x26
 800564a:	4629      	mov	r1, r5
 800564c:	4658      	mov	r0, fp
 800564e:	f022 ff7c 	bl	802854a <memset>
 8005652:	4658      	mov	r0, fp
 8005654:	f7fc ff44 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 8005658:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800565c:	26ff      	movs	r6, #255	; 0xff
 800565e:	4b60      	ldr	r3, [pc, #384]	; (80057e0 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8005660:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005662:	2226      	movs	r2, #38	; 0x26
 8005664:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005668:	4629      	mov	r1, r5
 800566a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800566e:	4650      	mov	r0, sl
 8005670:	66a5      	str	r5, [r4, #104]	; 0x68
 8005672:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005676:	f022 ff68 	bl	802854a <memset>
 800567a:	4650      	mov	r0, sl
 800567c:	f7fc ff30 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 8005680:	4b58      	ldr	r3, [pc, #352]	; (80057e4 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 8005682:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005684:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005688:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800568c:	a90a      	add	r1, sp, #40	; 0x28
 800568e:	4650      	mov	r0, sl
 8005690:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005694:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005698:	f00c fcf9 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 800569c:	4648      	mov	r0, r9
 800569e:	f7fc ff31 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80056a2:	4b51      	ldr	r3, [pc, #324]	; (80057e8 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 80056a4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80056a8:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 80056ac:	4618      	mov	r0, r3
 80056ae:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80056b2:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 80056b6:	ee08 3a90 	vmov	s17, r3
 80056ba:	f7fc ff23 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 80056be:	4638      	mov	r0, r7
 80056c0:	f00b fbae 	bl	8010e20 <_ZN8touchgfx4LineC1Ev>
 80056c4:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80056c8:	4618      	mov	r0, r3
 80056ca:	9303      	str	r3, [sp, #12]
 80056cc:	f7fb fdf8 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80056d0:	4b46      	ldr	r3, [pc, #280]	; (80057ec <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 80056d2:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 80056d6:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80056da:	3324      	adds	r3, #36	; 0x24
 80056dc:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 80056e0:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 80056e4:	4640      	mov	r0, r8
 80056e6:	f7fc ff0d 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 80056ea:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80056ee:	4618      	mov	r0, r3
 80056f0:	ee08 3a10 	vmov	s16, r3
 80056f4:	f7fc ff06 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 80056f8:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80056fc:	4618      	mov	r0, r3
 80056fe:	ee09 3a10 	vmov	s18, r3
 8005702:	f00c fe05 	bl	8012310 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005706:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800570a:	4618      	mov	r0, r3
 800570c:	ee09 3a90 	vmov	s19, r3
 8005710:	f00c fdfe 	bl	8012310 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005714:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005718:	4618      	mov	r0, r3
 800571a:	ee0a 3a10 	vmov	s20, r3
 800571e:	f00c fdf7 	bl	8012310 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005722:	4a33      	ldr	r2, [pc, #204]	; (80057f0 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 8005724:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005728:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 800572c:	4a31      	ldr	r2, [pc, #196]	; (80057f4 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800572e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005732:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005736:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800573a:	f00d fca5 	bl	8013088 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800573e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005742:	462a      	mov	r2, r5
 8005744:	4658      	mov	r0, fp
 8005746:	9300      	str	r3, [sp, #0]
 8005748:	4629      	mov	r1, r5
 800574a:	23f0      	movs	r3, #240	; 0xf0
 800574c:	f7fc feb4 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005750:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005752:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005756:	66a3      	str	r3, [r4, #104]	; 0x68
 8005758:	4659      	mov	r1, fp
 800575a:	4630      	mov	r0, r6
 800575c:	f009 ff08 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005760:	462a      	mov	r2, r5
 8005762:	4650      	mov	r0, sl
 8005764:	4629      	mov	r1, r5
 8005766:	f7fc fe9a 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 800576a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800576c:	4650      	mov	r0, sl
 800576e:	a90a      	add	r1, sp, #40	; 0x28
 8005770:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005774:	f00c fc8b 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005778:	4651      	mov	r1, sl
 800577a:	4630      	mov	r0, r6
 800577c:	f009 fef8 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005780:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005784:	2156      	movs	r1, #86	; 0x56
 8005786:	4648      	mov	r0, r9
 8005788:	f7fc fe89 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800578c:	f04f 33ff 	mov.w	r3, #4294967295
 8005790:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005794:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005798:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800579c:	f10d 0b10 	add.w	fp, sp, #16
 80057a0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80057a4:	4649      	mov	r1, r9
 80057a6:	4658      	mov	r0, fp
 80057a8:	4798      	blx	r3
 80057aa:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80057ae:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80057b2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80057b6:	4b10      	ldr	r3, [pc, #64]	; (80057f8 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 80057b8:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 80057ba:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80057be:	b92b      	cbnz	r3, 80057cc <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 80057c0:	4b0e      	ldr	r3, [pc, #56]	; (80057fc <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 80057c2:	4a0f      	ldr	r2, [pc, #60]	; (8005800 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 80057c4:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80057c6:	480f      	ldr	r0, [pc, #60]	; (8005804 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 80057c8:	f022 fcba 	bl	8028140 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80057cc:	4b0e      	ldr	r3, [pc, #56]	; (8005808 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80057ce:	881b      	ldrh	r3, [r3, #0]
 80057d0:	2b12      	cmp	r3, #18
 80057d2:	d81d      	bhi.n	8005810 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 80057d4:	4b0d      	ldr	r3, [pc, #52]	; (800580c <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 80057d6:	4a0a      	ldr	r2, [pc, #40]	; (8005800 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 80057d8:	2161      	movs	r1, #97	; 0x61
 80057da:	e7f4      	b.n	80057c6 <_ZN19MeasurementViewBaseC1Ev+0x19a>
 80057dc:	0802b730 	.word	0x0802b730
 80057e0:	0802c68c 	.word	0x0802c68c
 80057e4:	0802c854 	.word	0x0802c854
 80057e8:	08029d5c 	.word	0x08029d5c
 80057ec:	0802c3c0 	.word	0x0802c3c0
 80057f0:	0802b718 	.word	0x0802b718
 80057f4:	080055f1 	.word	0x080055f1
 80057f8:	20013814 	.word	0x20013814
 80057fc:	08029b9c 	.word	0x08029b9c
 8005800:	08029c9e 	.word	0x08029c9e
 8005804:	08029c19 	.word	0x08029c19
 8005808:	20013818 	.word	0x20013818
 800580c:	08029c60 	.word	0x08029c60
        return texts->getText(typedTextId);
 8005810:	4b95      	ldr	r3, [pc, #596]	; (8005a68 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 8005812:	2112      	movs	r1, #18
 8005814:	6818      	ldr	r0, [r3, #0]
 8005816:	f002 f983 	bl	8007b20 <_ZNK8touchgfx5Texts7getTextEt>
 800581a:	4a94      	ldr	r2, [pc, #592]	; (8005a6c <_ZN19MeasurementViewBaseC1Ev+0x440>)
 800581c:	4603      	mov	r3, r0
 800581e:	2104      	movs	r1, #4
 8005820:	4650      	mov	r0, sl
 8005822:	f012 faa1 	bl	8017d68 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8005826:	4648      	mov	r0, r9
        wc1 = value;
 8005828:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 800582c:	f00c f834 	bl	8011898 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005830:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8005a70 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8005834:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005838:	2313      	movs	r3, #19
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 800583a:	4648      	mov	r0, r9
 800583c:	a90a      	add	r1, sp, #40	; 0x28
 800583e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005842:	f00c f849 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005846:	4649      	mov	r1, r9
 8005848:	4630      	mov	r0, r6
 800584a:	f009 fe91 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 800584e:	223c      	movs	r2, #60	; 0x3c
 8005850:	ee18 0a90 	vmov	r0, s17
 8005854:	213d      	movs	r1, #61	; 0x3d
 8005856:	f7fc fe22 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800585a:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800585e:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8005862:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8005866:	4658      	mov	r0, fp
        linespace = space;
 8005868:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 800586c:	f00b fd9a 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005870:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005874:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8005878:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800587c:	f04f 0920 	mov.w	r9, #32
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8005880:	ee18 0a90 	vmov	r0, s17
 8005884:	a90a      	add	r1, sp, #40	; 0x28
 8005886:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800588a:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 800588e:	f00c f823 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005892:	ee18 1a90 	vmov	r1, s17
 8005896:	4630      	mov	r0, r6
 8005898:	f009 fe6a 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800589c:	230a      	movs	r3, #10
 800589e:	9300      	str	r3, [sp, #0]
 80058a0:	2232      	movs	r2, #50	; 0x32
 80058a2:	23f0      	movs	r3, #240	; 0xf0
 80058a4:	4629      	mov	r1, r5
 80058a6:	4638      	mov	r0, r7
 80058a8:	f7fc fe06 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80058ac:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80058b0:	22a0      	movs	r2, #160	; 0xa0
 80058b2:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80058b6:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 80058ba:	9b03      	ldr	r3, [sp, #12]
 80058bc:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80058c0:	4611      	mov	r1, r2
 80058c2:	4638      	mov	r0, r7
 80058c4:	f00b fbc2 	bl	801104c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80058c8:	22a0      	movs	r2, #160	; 0xa0
 80058ca:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80058ce:	4638      	mov	r0, r7
 80058d0:	f00b fbc7 	bl	8011062 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80058d4:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 80058d8:	454b      	cmp	r3, r9
 80058da:	d004      	beq.n	80058e6 <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 80058dc:	f8c4 9168 	str.w	r9, [r4, #360]	; 0x168
        updateCachedShape();
 80058e0:	4638      	mov	r0, r7
 80058e2:	f00b fabd 	bl	8010e60 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80058e6:	4638      	mov	r0, r7
 80058e8:	2101      	movs	r1, #1
 80058ea:	f00b fbc5 	bl	8011078 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80058ee:	4639      	mov	r1, r7
 80058f0:	4630      	mov	r0, r6
 80058f2:	f009 fe3d 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80058f6:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 80058fa:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 80058fc:	2223      	movs	r2, #35	; 0x23
 80058fe:	4640      	mov	r0, r8
        linespace = space;
 8005900:	f04f 0a00 	mov.w	sl, #0
 8005904:	2145      	movs	r1, #69	; 0x45
 8005906:	f7fc fdca 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800590a:	4641      	mov	r1, r8
 800590c:	4638      	mov	r0, r7
        color = newColor;
 800590e:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8005912:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005916:	f00b fd45 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800591a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800591e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005922:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005926:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8005a70 <_ZN19MeasurementViewBaseC1Ev+0x444>
 800592a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800592e:	2345      	movs	r3, #69	; 0x45
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8005930:	a90a      	add	r1, sp, #40	; 0x28
 8005932:	4640      	mov	r0, r8
 8005934:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005938:	f00b ffce 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800593c:	4641      	mov	r1, r8
 800593e:	4630      	mov	r0, r6
 8005940:	f009 fe16 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005944:	ee18 0a10 	vmov	r0, s16
 8005948:	220c      	movs	r2, #12
 800594a:	2136      	movs	r1, #54	; 0x36
 800594c:	f7fc fda7 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8005950:	ee18 1a10 	vmov	r1, s16
 8005954:	4638      	mov	r0, r7
        color = newColor;
 8005956:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 800595a:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800595e:	f00b fd21 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005962:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005966:	ee18 3a10 	vmov	r3, s16
 800596a:	333c      	adds	r3, #60	; 0x3c
 800596c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005970:	2346      	movs	r3, #70	; 0x46
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8005972:	ee18 0a10 	vmov	r0, s16
 8005976:	a90a      	add	r1, sp, #40	; 0x28
 8005978:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800597c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005980:	f00b ffaa 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005984:	ee18 1a10 	vmov	r1, s16
 8005988:	4630      	mov	r0, r6
 800598a:	f009 fdf1 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800598e:	ee19 0a10 	vmov	r0, s18
 8005992:	22f0      	movs	r2, #240	; 0xf0
 8005994:	2121      	movs	r1, #33	; 0x21
 8005996:	f7fc fd82 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 800599a:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800599e:	aa0a      	add	r2, sp, #40	; 0x28
 80059a0:	f04f 0802 	mov.w	r8, #2
 80059a4:	a909      	add	r1, sp, #36	; 0x24
 80059a6:	ee19 0a10 	vmov	r0, s18
 80059aa:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80059ae:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 80059b2:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80059b6:	f00c f974 	bl	8011ca2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80059ba:	2344      	movs	r3, #68	; 0x44
 80059bc:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80059c0:	3710      	adds	r7, #16
        updateTextPosition();
 80059c2:	ee19 0a10 	vmov	r0, s18
 80059c6:	f7fc fdbf 	bl	8002548 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80059ca:	ee19 1a10 	vmov	r1, s18
 80059ce:	4630      	mov	r0, r6
        colorPressed = col;
 80059d0:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 80059d4:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 80059d8:	f009 fdca 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80059dc:	ee19 0a90 	vmov	r0, s19
 80059e0:	22aa      	movs	r2, #170	; 0xaa
 80059e2:	2121      	movs	r1, #33	; 0x21
 80059e4:	f7fc fd5b 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80059e8:	aa0a      	add	r2, sp, #40	; 0x28
 80059ea:	a909      	add	r1, sp, #36	; 0x24
 80059ec:	ee19 0a90 	vmov	r0, s19
 80059f0:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80059f4:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80059f8:	f00c f953 	bl	8011ca2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80059fc:	2343      	movs	r3, #67	; 0x43
 80059fe:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005a02:	ee19 0a90 	vmov	r0, s19
 8005a06:	f7fc fd9f 	bl	8002548 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005a0a:	ee19 1a90 	vmov	r1, s19
 8005a0e:	4630      	mov	r0, r6
        colorPressed = col;
 8005a10:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8005a14:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8005a18:	f009 fdaa 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005a1c:	ee1a 0a10 	vmov	r0, s20
 8005a20:	2264      	movs	r2, #100	; 0x64
 8005a22:	2121      	movs	r1, #33	; 0x21
 8005a24:	f7fc fd3b 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005a28:	aa0a      	add	r2, sp, #40	; 0x28
 8005a2a:	a909      	add	r1, sp, #36	; 0x24
 8005a2c:	ee1a 0a10 	vmov	r0, s20
 8005a30:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005a34:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005a38:	f00c f933 	bl	8011ca2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005a3c:	2342      	movs	r3, #66	; 0x42
        updateTextPosition();
 8005a3e:	ee1a 0a10 	vmov	r0, s20
 8005a42:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005a46:	f7fc fd7f 	bl	8002548 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005a4a:	4630      	mov	r0, r6
        colorPressed = col;
 8005a4c:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8005a50:	ee1a 1a10 	vmov	r1, s20
 8005a54:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8005a58:	f009 fd8a 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005a5c:	4620      	mov	r0, r4
 8005a5e:	b00d      	add	sp, #52	; 0x34
 8005a60:	ecbd 8b06 	vpop	{d8-d10}
 8005a64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005a68:	20013820 	.word	0x20013820
 8005a6c:	08029cd6 	.word	0x08029cd6
 8005a70:	08029d4c 	.word	0x08029d4c

08005a74 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8005a74:	4770      	bx	lr

08005a76 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005a76:	4770      	bx	lr

08005a78 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005a78:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005a7a:	68c2      	ldr	r2, [r0, #12]
 8005a7c:	6844      	ldr	r4, [r0, #4]
 8005a7e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005a80:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005a82:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005a86:	07d2      	lsls	r2, r2, #31
 8005a88:	bf48      	it	mi
 8005a8a:	5962      	ldrmi	r2, [r4, r5]
 8005a8c:	689b      	ldr	r3, [r3, #8]
    }
 8005a8e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005a90:	bf48      	it	mi
 8005a92:	58d3      	ldrmi	r3, [r2, r3]
 8005a94:	4718      	bx	r3

08005a96 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005a96:	6843      	ldr	r3, [r0, #4]
 8005a98:	b12b      	cbz	r3, 8005aa6 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005a9a:	6883      	ldr	r3, [r0, #8]
 8005a9c:	b92b      	cbnz	r3, 8005aaa <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005a9e:	68c0      	ldr	r0, [r0, #12]
 8005aa0:	f000 0001 	and.w	r0, r0, #1
 8005aa4:	4770      	bx	lr
 8005aa6:	4618      	mov	r0, r3
 8005aa8:	4770      	bx	lr
 8005aaa:	2001      	movs	r0, #1
    }
 8005aac:	4770      	bx	lr

08005aae <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005aae:	b510      	push	{r4, lr}
 8005ab0:	2110      	movs	r1, #16
 8005ab2:	4604      	mov	r4, r0
 8005ab4:	f021 fd53 	bl	802755e <_ZdlPvj>
 8005ab8:	4620      	mov	r0, r4
 8005aba:	bd10      	pop	{r4, pc}

08005abc <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005abc:	b510      	push	{r4, lr}
 8005abe:	4b03      	ldr	r3, [pc, #12]	; (8005acc <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8005ac0:	6003      	str	r3, [r0, #0]
 8005ac2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005ac4:	f00d faea 	bl	801309c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005ac8:	4620      	mov	r0, r4
 8005aca:	bd10      	pop	{r4, pc}
 8005acc:	0802b77c 	.word	0x0802b77c

08005ad0 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005ad0:	b507      	push	{r0, r1, r2, lr}
 8005ad2:	4b07      	ldr	r3, [pc, #28]	; (8005af0 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8005ad4:	6003      	str	r3, [r0, #0]
 8005ad6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005ad8:	f00d fae0 	bl	801309c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005adc:	9801      	ldr	r0, [sp, #4]
 8005ade:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8005ae2:	f021 fd3c 	bl	802755e <_ZdlPvj>
 8005ae6:	9801      	ldr	r0, [sp, #4]
 8005ae8:	b003      	add	sp, #12
 8005aea:	f85d fb04 	ldr.w	pc, [sp], #4
 8005aee:	bf00      	nop
 8005af0:	0802b77c 	.word	0x0802b77c

08005af4 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005af4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005af6:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005afa:	4299      	cmp	r1, r3
{
 8005afc:	4604      	mov	r4, r0
 8005afe:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8005b00:	d103      	bne.n	8005b0a <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005b02:	f00e ffcd 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8005b06:	f7fd fdf1 	bl	80036ec <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8005b0a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005b0e:	429d      	cmp	r5, r3
 8005b10:	d103      	bne.n	8005b1a <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005b12:	f00e ffc5 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8005b16:	f7fd fe59 	bl	80037cc <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8005b1a:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8005b1e:	42a5      	cmp	r5, r4
 8005b20:	d105      	bne.n	8005b2e <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005b22:	f00e ffbd 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8005b26:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8005b2a:	f7fd be3f 	b.w	80037ac <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8005b2e:	bd38      	pop	{r3, r4, r5, pc}

08005b30 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8005b30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005b34:	ed2d 8b06 	vpush	{d8-d10}
 8005b38:	4604      	mov	r4, r0
 8005b3a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8005b3c:	46a3      	mov	fp, r4
 8005b3e:	2500      	movs	r5, #0
 8005b40:	f010 fc2e 	bl	80163a0 <_ZN8touchgfx6ScreenC1Ev>
 8005b44:	4b66      	ldr	r3, [pc, #408]	; (8005ce0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8005b46:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005b48:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005b4c:	2226      	movs	r2, #38	; 0x26
 8005b4e:	4629      	mov	r1, r5
 8005b50:	4658      	mov	r0, fp
 8005b52:	f022 fcfa 	bl	802854a <memset>
 8005b56:	4658      	mov	r0, fp
 8005b58:	f7fc fcc2 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 8005b5c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005b60:	26ff      	movs	r6, #255	; 0xff
 8005b62:	4b60      	ldr	r3, [pc, #384]	; (8005ce4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8005b64:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005b66:	2226      	movs	r2, #38	; 0x26
 8005b68:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005b6c:	4629      	mov	r1, r5
 8005b6e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005b72:	4650      	mov	r0, sl
 8005b74:	66a5      	str	r5, [r4, #104]	; 0x68
 8005b76:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005b7a:	f022 fce6 	bl	802854a <memset>
 8005b7e:	4650      	mov	r0, sl
 8005b80:	f7fc fcae 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 8005b84:	4b58      	ldr	r3, [pc, #352]	; (8005ce8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8005b86:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005b88:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005b8c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005b90:	a90a      	add	r1, sp, #40	; 0x28
 8005b92:	4650      	mov	r0, sl
 8005b94:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005b98:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005b9c:	f00c fa77 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005ba0:	4648      	mov	r0, r9
 8005ba2:	f7fc fcaf 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8005ba6:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005baa:	4b50      	ldr	r3, [pc, #320]	; (8005cec <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8005bac:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005bb0:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005bb4:	4638      	mov	r0, r7
 8005bb6:	f00b f933 	bl	8010e20 <_ZN8touchgfx4LineC1Ev>
 8005bba:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005bbe:	4618      	mov	r0, r3
 8005bc0:	9303      	str	r3, [sp, #12]
 8005bc2:	f7fb fb7d 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005bc6:	4b4a      	ldr	r3, [pc, #296]	; (8005cf0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8005bc8:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005bcc:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005bd0:	3324      	adds	r3, #36	; 0x24
 8005bd2:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005bd6:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005bda:	4640      	mov	r0, r8
 8005bdc:	f7fc fc92 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8005be0:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005be4:	4618      	mov	r0, r3
 8005be6:	ee08 3a10 	vmov	s16, r3
 8005bea:	f7fc fc8b 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8005bee:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005bf2:	4618      	mov	r0, r3
 8005bf4:	ee08 3a90 	vmov	s17, r3
 8005bf8:	f7fc fc84 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8005bfc:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005c00:	4618      	mov	r0, r3
 8005c02:	ee09 3a10 	vmov	s18, r3
 8005c06:	f00c fb83 	bl	8012310 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005c0a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005c0e:	4618      	mov	r0, r3
 8005c10:	ee09 3a90 	vmov	s19, r3
 8005c14:	f00c fb7c 	bl	8012310 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005c18:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005c1c:	4618      	mov	r0, r3
 8005c1e:	ee0a 3a10 	vmov	s20, r3
 8005c22:	f00c fb75 	bl	8012310 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005c26:	4a33      	ldr	r2, [pc, #204]	; (8005cf4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8005c28:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005c2c:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005c30:	4a31      	ldr	r2, [pc, #196]	; (8005cf8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005c32:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005c36:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005c3a:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8005c3e:	f00d fa23 	bl	8013088 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005c42:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005c46:	462a      	mov	r2, r5
 8005c48:	4658      	mov	r0, fp
 8005c4a:	9300      	str	r3, [sp, #0]
 8005c4c:	4629      	mov	r1, r5
 8005c4e:	23f0      	movs	r3, #240	; 0xf0
 8005c50:	f7fc fc32 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005c54:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005c56:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005c5a:	66a3      	str	r3, [r4, #104]	; 0x68
 8005c5c:	4659      	mov	r1, fp
 8005c5e:	4630      	mov	r0, r6
 8005c60:	f009 fc86 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005c64:	462a      	mov	r2, r5
 8005c66:	4650      	mov	r0, sl
 8005c68:	4629      	mov	r1, r5
 8005c6a:	f7fc fc18 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8005c6e:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005c70:	4650      	mov	r0, sl
 8005c72:	a90a      	add	r1, sp, #40	; 0x28
 8005c74:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005c78:	f00c fa09 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005c7c:	4651      	mov	r1, sl
 8005c7e:	4630      	mov	r0, r6
 8005c80:	f009 fc76 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005c84:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005c88:	2156      	movs	r1, #86	; 0x56
 8005c8a:	4648      	mov	r0, r9
 8005c8c:	f7fc fc07 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8005c90:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005c94:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005c98:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005c9c:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005ca0:	4650      	mov	r0, sl
 8005ca2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005ca6:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005caa:	4649      	mov	r1, r9
 8005cac:	4798      	blx	r3
 8005cae:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005cb2:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005cb6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005cba:	4b10      	ldr	r3, [pc, #64]	; (8005cfc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8005cbc:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 8005cbe:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8005cc2:	b92b      	cbnz	r3, 8005cd0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8005cc4:	4b0e      	ldr	r3, [pc, #56]	; (8005d00 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 8005cc6:	4a0f      	ldr	r2, [pc, #60]	; (8005d04 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8005cc8:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005cca:	480f      	ldr	r0, [pc, #60]	; (8005d08 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 8005ccc:	f022 fa38 	bl	8028140 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005cd0:	4b0e      	ldr	r3, [pc, #56]	; (8005d0c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005cd2:	881b      	ldrh	r3, [r3, #0]
 8005cd4:	2b0d      	cmp	r3, #13
 8005cd6:	d81d      	bhi.n	8005d14 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 8005cd8:	4b0d      	ldr	r3, [pc, #52]	; (8005d10 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 8005cda:	4a0a      	ldr	r2, [pc, #40]	; (8005d04 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8005cdc:	2161      	movs	r1, #97	; 0x61
 8005cde:	e7f4      	b.n	8005cca <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 8005ce0:	0802b77c 	.word	0x0802b77c
 8005ce4:	0802c68c 	.word	0x0802c68c
 8005ce8:	0802c854 	.word	0x0802c854
 8005cec:	08029d5c 	.word	0x08029d5c
 8005cf0:	0802c3c0 	.word	0x0802c3c0
 8005cf4:	0802b764 	.word	0x0802b764
 8005cf8:	08005af5 	.word	0x08005af5
 8005cfc:	20013814 	.word	0x20013814
 8005d00:	08029b9c 	.word	0x08029b9c
 8005d04:	08029c9e 	.word	0x08029c9e
 8005d08:	08029c19 	.word	0x08029c19
 8005d0c:	20013818 	.word	0x20013818
 8005d10:	08029c60 	.word	0x08029c60
        return texts->getText(typedTextId);
 8005d14:	4b93      	ldr	r3, [pc, #588]	; (8005f64 <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 8005d16:	210d      	movs	r1, #13
 8005d18:	6818      	ldr	r0, [r3, #0]
 8005d1a:	f001 ff01 	bl	8007b20 <_ZNK8touchgfx5Texts7getTextEt>
 8005d1e:	4a92      	ldr	r2, [pc, #584]	; (8005f68 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 8005d20:	4603      	mov	r3, r0
 8005d22:	2104      	movs	r1, #4
 8005d24:	4650      	mov	r0, sl
 8005d26:	f012 f81f 	bl	8017d68 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8005d2a:	4648      	mov	r0, r9
        wc1 = value;
 8005d2c:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8005d30:	f00b fdb2 	bl	8011898 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005d34:	4b8d      	ldr	r3, [pc, #564]	; (8005f6c <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 8005d36:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8005d38:	a90a      	add	r1, sp, #40	; 0x28
 8005d3a:	230e      	movs	r3, #14
 8005d3c:	4648      	mov	r0, r9
 8005d3e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005d42:	f00b fdc9 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005d46:	4649      	mov	r1, r9
 8005d48:	4630      	mov	r0, r6
 8005d4a:	f009 fc11 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005d4e:	230a      	movs	r3, #10
 8005d50:	9300      	str	r3, [sp, #0]
 8005d52:	2232      	movs	r2, #50	; 0x32
 8005d54:	23f0      	movs	r3, #240	; 0xf0
 8005d56:	4629      	mov	r1, r5
 8005d58:	4638      	mov	r0, r7
 8005d5a:	f7fc fbad 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005d5e:	9b03      	ldr	r3, [sp, #12]
 8005d60:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005d64:	22a0      	movs	r2, #160	; 0xa0
 8005d66:	4611      	mov	r1, r2
 8005d68:	4638      	mov	r0, r7
 8005d6a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005d6e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005d72:	f00b f96b 	bl	801104c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005d76:	22a0      	movs	r2, #160	; 0xa0
 8005d78:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005d7c:	4638      	mov	r0, r7
 8005d7e:	f00b f970 	bl	8011062 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005d82:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005d86:	2b20      	cmp	r3, #32
 8005d88:	d005      	beq.n	8005d96 <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 8005d8a:	2320      	movs	r3, #32
 8005d8c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005d90:	4638      	mov	r0, r7
 8005d92:	f00b f865 	bl	8010e60 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005d96:	4638      	mov	r0, r7
 8005d98:	2101      	movs	r1, #1
 8005d9a:	f00b f96d 	bl	8011078 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005d9e:	4639      	mov	r1, r7
 8005da0:	4630      	mov	r0, r6
 8005da2:	ad04      	add	r5, sp, #16
        color = newColor;
 8005da4:	f04f 37ff 	mov.w	r7, #4294967295
 8005da8:	f009 fbe2 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005dac:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005db0:	2223      	movs	r2, #35	; 0x23
 8005db2:	4640      	mov	r0, r8
 8005db4:	2145      	movs	r1, #69	; 0x45
 8005db6:	f7fc fb72 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005dba:	4641      	mov	r1, r8
 8005dbc:	4628      	mov	r0, r5
        color = newColor;
 8005dbe:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005dc2:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8005dc6:	f00b faed 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005dca:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005dce:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005dd2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005dd6:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8005f6c <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 8005dda:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005dde:	2333      	movs	r3, #51	; 0x33
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 8005de0:	a90a      	add	r1, sp, #40	; 0x28
 8005de2:	4640      	mov	r0, r8
 8005de4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005de8:	f00b fd76 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005dec:	4641      	mov	r1, r8
 8005dee:	4630      	mov	r0, r6
 8005df0:	f009 fbbe 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005df4:	ee18 0a10 	vmov	r0, s16
 8005df8:	220c      	movs	r2, #12
 8005dfa:	2136      	movs	r1, #54	; 0x36
 8005dfc:	f7fc fb4f 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8005e00:	ee18 1a10 	vmov	r1, s16
 8005e04:	4628      	mov	r0, r5
        color = newColor;
 8005e06:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8005e0a:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005e0e:	f00b fac9 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005e12:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005e16:	ee18 3a10 	vmov	r3, s16
 8005e1a:	333c      	adds	r3, #60	; 0x3c
 8005e1c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005e20:	2332      	movs	r3, #50	; 0x32
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 8005e22:	ee18 0a10 	vmov	r0, s16
 8005e26:	a90a      	add	r1, sp, #40	; 0x28
 8005e28:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005e2c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005e30:	f00b fd52 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005e34:	ee18 1a10 	vmov	r1, s16
 8005e38:	4630      	mov	r0, r6
 8005e3a:	f009 fb99 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 8005e3e:	ee18 0a90 	vmov	r0, s17
 8005e42:	223c      	movs	r2, #60	; 0x3c
 8005e44:	2121      	movs	r1, #33	; 0x21
 8005e46:	f7fc fb2a 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8005e4a:	ee18 1a90 	vmov	r1, s17
 8005e4e:	4628      	mov	r0, r5
        color = newColor;
 8005e50:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8005e54:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005e58:	f00b faa4 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005e5c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005e60:	ee18 3a90 	vmov	r3, s17
 8005e64:	333c      	adds	r3, #60	; 0x3c
 8005e66:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005e6a:	231c      	movs	r3, #28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8005e6c:	ee18 0a90 	vmov	r0, s17
 8005e70:	a90a      	add	r1, sp, #40	; 0x28
 8005e72:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005e76:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005e7a:	f00b fd2d 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005e7e:	ee18 1a90 	vmov	r1, s17
 8005e82:	4630      	mov	r0, r6
 8005e84:	f009 fb74 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005e88:	ee19 0a10 	vmov	r0, s18
 8005e8c:	22f0      	movs	r2, #240	; 0xf0
 8005e8e:	2121      	movs	r1, #33	; 0x21
 8005e90:	f7fc fb05 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8005e94:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005e98:	aa0a      	add	r2, sp, #40	; 0x28
 8005e9a:	f04f 0802 	mov.w	r8, #2
 8005e9e:	a909      	add	r1, sp, #36	; 0x24
 8005ea0:	ee19 0a10 	vmov	r0, s18
 8005ea4:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005ea8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8005eac:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005eb0:	f00b fef7 	bl	8011ca2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005eb4:	2331      	movs	r3, #49	; 0x31
 8005eb6:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005eba:	3510      	adds	r5, #16
        updateTextPosition();
 8005ebc:	ee19 0a10 	vmov	r0, s18
 8005ec0:	f7fc fb42 	bl	8002548 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005ec4:	ee19 1a10 	vmov	r1, s18
 8005ec8:	4630      	mov	r0, r6
        colorPressed = col;
 8005eca:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8005ece:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8005ed2:	f009 fb4d 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005ed6:	ee19 0a90 	vmov	r0, s19
 8005eda:	22aa      	movs	r2, #170	; 0xaa
 8005edc:	2121      	movs	r1, #33	; 0x21
 8005ede:	f7fc fade 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005ee2:	aa0a      	add	r2, sp, #40	; 0x28
 8005ee4:	a909      	add	r1, sp, #36	; 0x24
 8005ee6:	ee19 0a90 	vmov	r0, s19
 8005eea:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005eee:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005ef2:	f00b fed6 	bl	8011ca2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005ef6:	2330      	movs	r3, #48	; 0x30
 8005ef8:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005efc:	ee19 0a90 	vmov	r0, s19
 8005f00:	f7fc fb22 	bl	8002548 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005f04:	ee19 1a90 	vmov	r1, s19
 8005f08:	4630      	mov	r0, r6
        colorPressed = col;
 8005f0a:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8005f0e:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8005f12:	f009 fb2d 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005f16:	ee1a 0a10 	vmov	r0, s20
 8005f1a:	2264      	movs	r2, #100	; 0x64
 8005f1c:	2121      	movs	r1, #33	; 0x21
 8005f1e:	f7fc fabe 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005f22:	aa0a      	add	r2, sp, #40	; 0x28
 8005f24:	a909      	add	r1, sp, #36	; 0x24
 8005f26:	ee1a 0a10 	vmov	r0, s20
 8005f2a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005f2e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005f32:	f00b feb6 	bl	8011ca2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005f36:	232f      	movs	r3, #47	; 0x2f
        updateTextPosition();
 8005f38:	ee1a 0a10 	vmov	r0, s20
 8005f3c:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005f40:	f7fc fb02 	bl	8002548 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005f44:	4630      	mov	r0, r6
        colorPressed = col;
 8005f46:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8005f4a:	ee1a 1a10 	vmov	r1, s20
 8005f4e:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8005f52:	f009 fb0d 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005f56:	4620      	mov	r0, r4
 8005f58:	b00d      	add	sp, #52	; 0x34
 8005f5a:	ecbd 8b06 	vpop	{d8-d10}
 8005f5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005f62:	bf00      	nop
 8005f64:	20013820 	.word	0x20013820
 8005f68:	08029cd6 	.word	0x08029cd6
 8005f6c:	08029d4c 	.word	0x08029d4c

08005f70 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005f70:	4770      	bx	lr

08005f72 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005f72:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005f74:	68c2      	ldr	r2, [r0, #12]
 8005f76:	6844      	ldr	r4, [r0, #4]
 8005f78:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005f7a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005f7c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005f80:	07d2      	lsls	r2, r2, #31
 8005f82:	bf48      	it	mi
 8005f84:	5962      	ldrmi	r2, [r4, r5]
 8005f86:	689b      	ldr	r3, [r3, #8]
    }
 8005f88:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005f8a:	bf48      	it	mi
 8005f8c:	58d3      	ldrmi	r3, [r2, r3]
 8005f8e:	4718      	bx	r3

08005f90 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005f90:	6843      	ldr	r3, [r0, #4]
 8005f92:	b12b      	cbz	r3, 8005fa0 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005f94:	6883      	ldr	r3, [r0, #8]
 8005f96:	b92b      	cbnz	r3, 8005fa4 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005f98:	68c0      	ldr	r0, [r0, #12]
 8005f9a:	f000 0001 	and.w	r0, r0, #1
 8005f9e:	4770      	bx	lr
 8005fa0:	4618      	mov	r0, r3
 8005fa2:	4770      	bx	lr
 8005fa4:	2001      	movs	r0, #1
    }
 8005fa6:	4770      	bx	lr

08005fa8 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005fa8:	b510      	push	{r4, lr}
 8005faa:	2110      	movs	r1, #16
 8005fac:	4604      	mov	r4, r0
 8005fae:	f021 fad6 	bl	802755e <_ZdlPvj>
 8005fb2:	4620      	mov	r0, r4
 8005fb4:	bd10      	pop	{r4, pc}

08005fb6 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8005fb6:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8005fba:	f001 bef9 	b.w	8007db0 <_ZN17Gauge_with_Values10initializeEv>

08005fbe <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8005fbe:	3098      	adds	r0, #152	; 0x98
 8005fc0:	4288      	cmp	r0, r1
{
 8005fc2:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8005fc4:	d105      	bne.n	8005fd2 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005fc6:	f00e fd6b 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8005fca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8005fce:	f7fd bbdd 	b.w	800378c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8005fd2:	bd08      	pop	{r3, pc}

08005fd4 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8005fd4:	b510      	push	{r4, lr}
 8005fd6:	4b07      	ldr	r3, [pc, #28]	; (8005ff4 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x20>)
 8005fd8:	6003      	str	r3, [r0, #0]
 8005fda:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005fdc:	f00d f85e 	bl	801309c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>

class Gauge_with_Values : public Gauge_with_ValuesBase
{
public:
    Gauge_with_Values();
    virtual ~Gauge_with_Values() {}
 8005fe0:	4b05      	ldr	r3, [pc, #20]	; (8005ff8 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x24>)
 8005fe2:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8005fe6:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8005fea:	f7fe fe25 	bl	8004c38 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8005fee:	4620      	mov	r0, r4
 8005ff0:	bd10      	pop	{r4, pc}
 8005ff2:	bf00      	nop
 8005ff4:	0802b7c8 	.word	0x0802b7c8
 8005ff8:	0802bd1c 	.word	0x0802bd1c

08005ffc <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8005ffc:	b510      	push	{r4, lr}
 8005ffe:	4604      	mov	r4, r0
}
 8006000:	f7ff ffe8 	bl	8005fd4 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8006004:	4620      	mov	r0, r4
 8006006:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800600a:	f021 faa8 	bl	802755e <_ZdlPvj>
 800600e:	4620      	mov	r0, r4
 8006010:	bd10      	pop	{r4, pc}
	...

08006014 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 8006014:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006018:	ed2d 8b04 	vpush	{d8-d9}
 800601c:	4604      	mov	r4, r0
 800601e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8006020:	46a1      	mov	r9, r4
 8006022:	2500      	movs	r5, #0
 8006024:	f010 f9bc 	bl	80163a0 <_ZN8touchgfx6ScreenC1Ev>
 8006028:	4bac      	ldr	r3, [pc, #688]	; (80062dc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c8>)
 800602a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800602c:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006030:	2226      	movs	r2, #38	; 0x26
 8006032:	4629      	mov	r1, r5
 8006034:	4648      	mov	r0, r9
 8006036:	f022 fa88 	bl	802854a <memset>
 800603a:	4648      	mov	r0, r9
 800603c:	f7fc fa50 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 8006040:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006044:	26ff      	movs	r6, #255	; 0xff
 8006046:	4ba6      	ldr	r3, [pc, #664]	; (80062e0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2cc>)
 8006048:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800604a:	2226      	movs	r2, #38	; 0x26
 800604c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006050:	4629      	mov	r1, r5
 8006052:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006056:	4640      	mov	r0, r8
 8006058:	66a5      	str	r5, [r4, #104]	; 0x68
 800605a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800605e:	f022 fa74 	bl	802854a <memset>
 8006062:	4640      	mov	r0, r8
 8006064:	f7fc fa3c 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 8006068:	4b9e      	ldr	r3, [pc, #632]	; (80062e4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d0>)
 800606a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800606c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006070:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006074:	a90a      	add	r1, sp, #40	; 0x28
 8006076:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006078:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800607c:	f00c f807 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006080:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8006084:	4618      	mov	r0, r3
 8006086:	ee08 3a10 	vmov	s16, r3
 800608a:	f00c f941 	bl	8012310 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800608e:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006092:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006096:	4618      	mov	r0, r3
 8006098:	ee08 3a90 	vmov	s17, r3
 800609c:	f7fc fa32 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 80060a0:	4638      	mov	r0, r7
 80060a2:	f00a febd 	bl	8010e20 <_ZN8touchgfx4LineC1Ev>
 80060a6:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80060aa:	4618      	mov	r0, r3
 80060ac:	9303      	str	r3, [sp, #12]
 80060ae:	f7fb f907 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80060b2:	4b8d      	ldr	r3, [pc, #564]	; (80062e8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d4>)
 80060b4:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 80060b8:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 80060bc:	3324      	adds	r3, #36	; 0x24
 80060be:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 80060c2:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 80060c6:	4658      	mov	r0, fp
 80060c8:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 80060cc:	f7fc fa1a 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 80060d0:	4650      	mov	r0, sl
 80060d2:	f7fc fa17 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 80060d6:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80060da:	4618      	mov	r0, r3
 80060dc:	ee09 3a10 	vmov	s18, r3
 80060e0:	f001 fe5c 	bl	8007d9c <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80060e4:	4a81      	ldr	r2, [pc, #516]	; (80062ec <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d8>)
 80060e6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80060ea:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80060ee:	4a80      	ldr	r2, [pc, #512]	; (80062f0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80060f0:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80060f4:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80060f8:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80060fc:	f00c ffc4 	bl	8013088 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006100:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006104:	462a      	mov	r2, r5
 8006106:	4648      	mov	r0, r9
 8006108:	9300      	str	r3, [sp, #0]
 800610a:	4629      	mov	r1, r5
 800610c:	23f0      	movs	r3, #240	; 0xf0
 800610e:	f7fc f9d3 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006112:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006114:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006118:	66a3      	str	r3, [r4, #104]	; 0x68
 800611a:	4649      	mov	r1, r9
 800611c:	4630      	mov	r0, r6
 800611e:	f009 fa27 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006122:	462a      	mov	r2, r5
 8006124:	4640      	mov	r0, r8
 8006126:	4629      	mov	r1, r5
 8006128:	f7fc f9b9 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 800612c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800612e:	4640      	mov	r0, r8
 8006130:	a90a      	add	r1, sp, #40	; 0x28
 8006132:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006136:	f00b ffaa 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800613a:	4641      	mov	r1, r8
 800613c:	4630      	mov	r0, r6
 800613e:	f009 fa17 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006142:	ee18 0a10 	vmov	r0, s16
 8006146:	f240 1201 	movw	r2, #257	; 0x101
 800614a:	2121      	movs	r1, #33	; 0x21
 800614c:	f7fc f9a7 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8006150:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006152:	aa0a      	add	r2, sp, #40	; 0x28
 8006154:	a909      	add	r1, sp, #36	; 0x24
 8006156:	ee18 0a10 	vmov	r0, s16
 800615a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800615e:	2302      	movs	r3, #2
 8006160:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006164:	f00b fd9d 	bl	8011ca2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006168:	2318      	movs	r3, #24
        updateTextPosition();
 800616a:	ee18 0a10 	vmov	r0, s16
 800616e:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8006172:	f7fc f9e9 	bl	8002548 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006176:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 800617a:	3314      	adds	r3, #20
        color = col;
 800617c:	f04f 39ff 	mov.w	r9, #4294967295
 8006180:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006184:	ee18 1a10 	vmov	r1, s16
 8006188:	4630      	mov	r0, r6
        colorPressed = col;
 800618a:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 800618e:	f009 f9ef 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006192:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006196:	223c      	movs	r2, #60	; 0x3c
 8006198:	ee18 0a90 	vmov	r0, s17
 800619c:	2117      	movs	r1, #23
 800619e:	f7fc f97e 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 80061a2:	ee18 1a90 	vmov	r1, s17
 80061a6:	4640      	mov	r0, r8
        color = newColor;
 80061a8:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 80061ac:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80061b0:	f00b f8f8 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80061b4:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80061b8:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80061bc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80061c0:	4b4c      	ldr	r3, [pc, #304]	; (80062f4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 80061c2:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 80061c4:	ee18 0a90 	vmov	r0, s17
 80061c8:	2319      	movs	r3, #25
 80061ca:	a90a      	add	r1, sp, #40	; 0x28
 80061cc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80061d0:	f00b fb82 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80061d4:	ee18 1a90 	vmov	r1, s17
 80061d8:	4630      	mov	r0, r6
 80061da:	f009 f9c9 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80061de:	230a      	movs	r3, #10
 80061e0:	9300      	str	r3, [sp, #0]
 80061e2:	2232      	movs	r2, #50	; 0x32
 80061e4:	23f0      	movs	r3, #240	; 0xf0
 80061e6:	4629      	mov	r1, r5
 80061e8:	4638      	mov	r0, r7
 80061ea:	f7fc f965 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80061ee:	9b03      	ldr	r3, [sp, #12]
 80061f0:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80061f4:	22a0      	movs	r2, #160	; 0xa0
 80061f6:	4611      	mov	r1, r2
 80061f8:	4638      	mov	r0, r7
 80061fa:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80061fe:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8006202:	f00a ff23 	bl	801104c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006206:	22a0      	movs	r2, #160	; 0xa0
 8006208:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800620c:	4638      	mov	r0, r7
 800620e:	f00a ff28 	bl	8011062 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006212:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8006216:	2b20      	cmp	r3, #32
 8006218:	d005      	beq.n	8006226 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 800621a:	2320      	movs	r3, #32
 800621c:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006220:	4638      	mov	r0, r7
 8006222:	f00a fe1d 	bl	8010e60 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006226:	4638      	mov	r0, r7
 8006228:	2101      	movs	r1, #1
 800622a:	f00a ff25 	bl	8011078 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800622e:	4639      	mov	r1, r7
 8006230:	4630      	mov	r0, r6
 8006232:	f009 f99d 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006236:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 8006238:	2223      	movs	r2, #35	; 0x23
 800623a:	4658      	mov	r0, fp
        color = newColor;
 800623c:	f04f 39ff 	mov.w	r9, #4294967295
 8006240:	2145      	movs	r1, #69	; 0x45
 8006242:	f7fc f92c 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006246:	4659      	mov	r1, fp
 8006248:	4640      	mov	r0, r8
        color = newColor;
 800624a:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 800624e:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006252:	f00b f8a7 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006256:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800625a:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 800625e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006262:	4f24      	ldr	r7, [pc, #144]	; (80062f4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 8006264:	970a      	str	r7, [sp, #40]	; 0x28
 8006266:	231a      	movs	r3, #26
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8006268:	a90a      	add	r1, sp, #40	; 0x28
 800626a:	4658      	mov	r0, fp
 800626c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006270:	f00b fb32 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006274:	4659      	mov	r1, fp
 8006276:	4630      	mov	r0, r6
 8006278:	f009 f97a 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800627c:	220c      	movs	r2, #12
 800627e:	4650      	mov	r0, sl
 8006280:	2136      	movs	r1, #54	; 0x36
 8006282:	f7fc f90c 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8006286:	4651      	mov	r1, sl
 8006288:	4640      	mov	r0, r8
        color = newColor;
 800628a:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 800628e:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8006292:	f00b f887 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006296:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800629a:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800629e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80062a2:	231b      	movs	r3, #27
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 80062a4:	a90a      	add	r1, sp, #40	; 0x28
 80062a6:	4650      	mov	r0, sl
 80062a8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80062ac:	970a      	str	r7, [sp, #40]	; 0x28
 80062ae:	f00b fb13 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80062b2:	4651      	mov	r1, sl
 80062b4:	4630      	mov	r0, r6
 80062b6:	f009 f95b 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 80062ba:	ee19 0a10 	vmov	r0, s18
 80062be:	224e      	movs	r2, #78	; 0x4e
 80062c0:	4629      	mov	r1, r5
 80062c2:	f7fc f8ec 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 80062c6:	4630      	mov	r0, r6
 80062c8:	ee19 1a10 	vmov	r1, s18
 80062cc:	f009 f950 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80062d0:	4620      	mov	r0, r4
 80062d2:	b00d      	add	sp, #52	; 0x34
 80062d4:	ecbd 8b04 	vpop	{d8-d9}
 80062d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80062dc:	0802b7c8 	.word	0x0802b7c8
 80062e0:	0802c68c 	.word	0x0802c68c
 80062e4:	0802c854 	.word	0x0802c854
 80062e8:	0802c3c0 	.word	0x0802c3c0
 80062ec:	0802b7b0 	.word	0x0802b7b0
 80062f0:	08005fbf 	.word	0x08005fbf
 80062f4:	08029d4c 	.word	0x08029d4c

080062f8 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80062f8:	4770      	bx	lr

080062fa <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80062fa:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80062fc:	68c2      	ldr	r2, [r0, #12]
 80062fe:	6844      	ldr	r4, [r0, #4]
 8006300:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006302:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006304:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006308:	07d2      	lsls	r2, r2, #31
 800630a:	bf48      	it	mi
 800630c:	5962      	ldrmi	r2, [r4, r5]
 800630e:	689b      	ldr	r3, [r3, #8]
    }
 8006310:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006312:	bf48      	it	mi
 8006314:	58d3      	ldrmi	r3, [r2, r3]
 8006316:	4718      	bx	r3

08006318 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006318:	6843      	ldr	r3, [r0, #4]
 800631a:	b12b      	cbz	r3, 8006328 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800631c:	6883      	ldr	r3, [r0, #8]
 800631e:	b92b      	cbnz	r3, 800632c <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006320:	68c0      	ldr	r0, [r0, #12]
 8006322:	f000 0001 	and.w	r0, r0, #1
 8006326:	4770      	bx	lr
 8006328:	4618      	mov	r0, r3
 800632a:	4770      	bx	lr
 800632c:	2001      	movs	r0, #1
    }
 800632e:	4770      	bx	lr

08006330 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006330:	b510      	push	{r4, lr}
 8006332:	2110      	movs	r1, #16
 8006334:	4604      	mov	r4, r0
 8006336:	f021 f912 	bl	802755e <_ZdlPvj>
 800633a:	4620      	mov	r0, r4
 800633c:	bd10      	pop	{r4, pc}

0800633e <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 800633e:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8006342:	f001 bd35 	b.w	8007db0 <_ZN17Gauge_with_Values10initializeEv>

08006346 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006346:	3098      	adds	r0, #152	; 0x98
 8006348:	4288      	cmp	r0, r1
{
 800634a:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800634c:	d105      	bne.n	800635a <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800634e:	f00e fba7 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006352:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006356:	f7fd ba19 	b.w	800378c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 800635a:	bd08      	pop	{r3, pc}

0800635c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 800635c:	b510      	push	{r4, lr}
 800635e:	4b07      	ldr	r3, [pc, #28]	; (800637c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x20>)
 8006360:	6003      	str	r3, [r0, #0]
 8006362:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006364:	f00c fe9a 	bl	801309c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8006368:	4b05      	ldr	r3, [pc, #20]	; (8006380 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x24>)
 800636a:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800636e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006372:	f7fe fc61 	bl	8004c38 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8006376:	4620      	mov	r0, r4
 8006378:	bd10      	pop	{r4, pc}
 800637a:	bf00      	nop
 800637c:	0802b814 	.word	0x0802b814
 8006380:	0802bd1c 	.word	0x0802bd1c

08006384 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006384:	b510      	push	{r4, lr}
 8006386:	4604      	mov	r4, r0
}
 8006388:	f7ff ffe8 	bl	800635c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 800638c:	4620      	mov	r0, r4
 800638e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8006392:	f021 f8e4 	bl	802755e <_ZdlPvj>
 8006396:	4620      	mov	r0, r4
 8006398:	bd10      	pop	{r4, pc}
	...

0800639c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 800639c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80063a0:	ed2d 8b04 	vpush	{d8-d9}
 80063a4:	4604      	mov	r4, r0
 80063a6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 80063a8:	46a1      	mov	r9, r4
 80063aa:	2500      	movs	r5, #0
 80063ac:	f00f fff8 	bl	80163a0 <_ZN8touchgfx6ScreenC1Ev>
 80063b0:	4bac      	ldr	r3, [pc, #688]	; (8006664 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c8>)
 80063b2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80063b4:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 80063b8:	2226      	movs	r2, #38	; 0x26
 80063ba:	4629      	mov	r1, r5
 80063bc:	4648      	mov	r0, r9
 80063be:	f022 f8c4 	bl	802854a <memset>
 80063c2:	4648      	mov	r0, r9
 80063c4:	f7fc f88c 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 80063c8:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 80063cc:	26ff      	movs	r6, #255	; 0xff
 80063ce:	4ba6      	ldr	r3, [pc, #664]	; (8006668 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2cc>)
 80063d0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80063d2:	2226      	movs	r2, #38	; 0x26
 80063d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80063d8:	4629      	mov	r1, r5
 80063da:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80063de:	4640      	mov	r0, r8
 80063e0:	66a5      	str	r5, [r4, #104]	; 0x68
 80063e2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80063e6:	f022 f8b0 	bl	802854a <memset>
 80063ea:	4640      	mov	r0, r8
 80063ec:	f7fc f878 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 80063f0:	4b9e      	ldr	r3, [pc, #632]	; (800666c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d0>)
 80063f2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80063f4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80063f8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80063fc:	a90a      	add	r1, sp, #40	; 0x28
 80063fe:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006400:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006404:	f00b fe43 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006408:	f104 0398 	add.w	r3, r4, #152	; 0x98
 800640c:	4618      	mov	r0, r3
 800640e:	ee08 3a10 	vmov	s16, r3
 8006412:	f00b ff7d 	bl	8012310 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006416:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800641a:	f504 7794 	add.w	r7, r4, #296	; 0x128
 800641e:	4618      	mov	r0, r3
 8006420:	ee08 3a90 	vmov	s17, r3
 8006424:	f7fc f86e 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8006428:	4638      	mov	r0, r7
 800642a:	f00a fcf9 	bl	8010e20 <_ZN8touchgfx4LineC1Ev>
 800642e:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006432:	4618      	mov	r0, r3
 8006434:	9303      	str	r3, [sp, #12]
 8006436:	f7fa ff43 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800643a:	4b8d      	ldr	r3, [pc, #564]	; (8006670 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d4>)
 800643c:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006440:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8006444:	3324      	adds	r3, #36	; 0x24
 8006446:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 800644a:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 800644e:	4658      	mov	r0, fp
 8006450:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006454:	f7fc f856 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8006458:	4650      	mov	r0, sl
 800645a:	f7fc f853 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 800645e:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8006462:	4618      	mov	r0, r3
 8006464:	ee09 3a10 	vmov	s18, r3
 8006468:	f001 fc98 	bl	8007d9c <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800646c:	4a81      	ldr	r2, [pc, #516]	; (8006674 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d8>)
 800646e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006472:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8006476:	4a80      	ldr	r2, [pc, #512]	; (8006678 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006478:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800647c:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8006480:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8006484:	f00c fe00 	bl	8013088 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006488:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800648c:	462a      	mov	r2, r5
 800648e:	4648      	mov	r0, r9
 8006490:	9300      	str	r3, [sp, #0]
 8006492:	4629      	mov	r1, r5
 8006494:	23f0      	movs	r3, #240	; 0xf0
 8006496:	f7fc f80f 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800649a:	1d26      	adds	r6, r4, #4
        color = newColor;
 800649c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80064a0:	66a3      	str	r3, [r4, #104]	; 0x68
 80064a2:	4649      	mov	r1, r9
 80064a4:	4630      	mov	r0, r6
 80064a6:	f009 f863 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80064aa:	462a      	mov	r2, r5
 80064ac:	4640      	mov	r0, r8
 80064ae:	4629      	mov	r1, r5
 80064b0:	f7fb fff5 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 80064b4:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80064b6:	4640      	mov	r0, r8
 80064b8:	a90a      	add	r1, sp, #40	; 0x28
 80064ba:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80064be:	f00b fde6 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80064c2:	4641      	mov	r1, r8
 80064c4:	4630      	mov	r0, r6
 80064c6:	f009 f853 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80064ca:	ee18 0a10 	vmov	r0, s16
 80064ce:	f240 1201 	movw	r2, #257	; 0x101
 80064d2:	2121      	movs	r1, #33	; 0x21
 80064d4:	f7fb ffe3 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 80064d8:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80064da:	aa0a      	add	r2, sp, #40	; 0x28
 80064dc:	a909      	add	r1, sp, #36	; 0x24
 80064de:	ee18 0a10 	vmov	r0, s16
 80064e2:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80064e6:	2302      	movs	r3, #2
 80064e8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80064ec:	f00b fbd9 	bl	8011ca2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80064f0:	2314      	movs	r3, #20
        updateTextPosition();
 80064f2:	ee18 0a10 	vmov	r0, s16
 80064f6:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80064fa:	f7fc f825 	bl	8002548 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80064fe:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8006502:	3314      	adds	r3, #20
        color = col;
 8006504:	f04f 39ff 	mov.w	r9, #4294967295
 8006508:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800650c:	ee18 1a10 	vmov	r1, s16
 8006510:	4630      	mov	r0, r6
        colorPressed = col;
 8006512:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8006516:	f009 f82b 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800651a:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 800651e:	223c      	movs	r2, #60	; 0x3c
 8006520:	ee18 0a90 	vmov	r0, s17
 8006524:	2117      	movs	r1, #23
 8006526:	f7fb ffba 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 800652a:	ee18 1a90 	vmov	r1, s17
 800652e:	4640      	mov	r0, r8
        color = newColor;
 8006530:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006534:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006538:	f00a ff34 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800653c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006540:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006544:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006548:	4b4c      	ldr	r3, [pc, #304]	; (800667c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 800654a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 800654c:	ee18 0a90 	vmov	r0, s17
 8006550:	2315      	movs	r3, #21
 8006552:	a90a      	add	r1, sp, #40	; 0x28
 8006554:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006558:	f00b f9be 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800655c:	ee18 1a90 	vmov	r1, s17
 8006560:	4630      	mov	r0, r6
 8006562:	f009 f805 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006566:	230a      	movs	r3, #10
 8006568:	9300      	str	r3, [sp, #0]
 800656a:	2232      	movs	r2, #50	; 0x32
 800656c:	23f0      	movs	r3, #240	; 0xf0
 800656e:	4629      	mov	r1, r5
 8006570:	4638      	mov	r0, r7
 8006572:	f7fb ffa1 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006576:	9b03      	ldr	r3, [sp, #12]
 8006578:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800657c:	22a0      	movs	r2, #160	; 0xa0
 800657e:	4611      	mov	r1, r2
 8006580:	4638      	mov	r0, r7
 8006582:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006586:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 800658a:	f00a fd5f 	bl	801104c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800658e:	22a0      	movs	r2, #160	; 0xa0
 8006590:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006594:	4638      	mov	r0, r7
 8006596:	f00a fd64 	bl	8011062 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800659a:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 800659e:	2b20      	cmp	r3, #32
 80065a0:	d005      	beq.n	80065ae <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 80065a2:	2320      	movs	r3, #32
 80065a4:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 80065a8:	4638      	mov	r0, r7
 80065aa:	f00a fc59 	bl	8010e60 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80065ae:	4638      	mov	r0, r7
 80065b0:	2101      	movs	r1, #1
 80065b2:	f00a fd61 	bl	8011078 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80065b6:	4639      	mov	r1, r7
 80065b8:	4630      	mov	r0, r6
 80065ba:	f008 ffd9 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80065be:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 80065c0:	2223      	movs	r2, #35	; 0x23
 80065c2:	4658      	mov	r0, fp
        color = newColor;
 80065c4:	f04f 39ff 	mov.w	r9, #4294967295
 80065c8:	2145      	movs	r1, #69	; 0x45
 80065ca:	f7fb ff68 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80065ce:	4659      	mov	r1, fp
 80065d0:	4640      	mov	r0, r8
        color = newColor;
 80065d2:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 80065d6:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80065da:	f00a fee3 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065de:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80065e2:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 80065e6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80065ea:	4f24      	ldr	r7, [pc, #144]	; (800667c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 80065ec:	970a      	str	r7, [sp, #40]	; 0x28
 80065ee:	2316      	movs	r3, #22
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 80065f0:	a90a      	add	r1, sp, #40	; 0x28
 80065f2:	4658      	mov	r0, fp
 80065f4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80065f8:	f00b f96e 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80065fc:	4659      	mov	r1, fp
 80065fe:	4630      	mov	r0, r6
 8006600:	f008 ffb6 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006604:	220c      	movs	r2, #12
 8006606:	4650      	mov	r0, sl
 8006608:	2136      	movs	r1, #54	; 0x36
 800660a:	f7fb ff48 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 800660e:	4651      	mov	r1, sl
 8006610:	4640      	mov	r0, r8
        color = newColor;
 8006612:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 8006616:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800661a:	f00a fec3 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800661e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006622:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8006626:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800662a:	2317      	movs	r3, #23
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 800662c:	a90a      	add	r1, sp, #40	; 0x28
 800662e:	4650      	mov	r0, sl
 8006630:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006634:	970a      	str	r7, [sp, #40]	; 0x28
 8006636:	f00b f94f 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800663a:	4651      	mov	r1, sl
 800663c:	4630      	mov	r0, r6
 800663e:	f008 ff97 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8006642:	ee19 0a10 	vmov	r0, s18
 8006646:	224e      	movs	r2, #78	; 0x4e
 8006648:	4629      	mov	r1, r5
 800664a:	f7fb ff28 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 800664e:	4630      	mov	r0, r6
 8006650:	ee19 1a10 	vmov	r1, s18
 8006654:	f008 ff8c 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006658:	4620      	mov	r0, r4
 800665a:	b00d      	add	sp, #52	; 0x34
 800665c:	ecbd 8b04 	vpop	{d8-d9}
 8006660:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006664:	0802b814 	.word	0x0802b814
 8006668:	0802c68c 	.word	0x0802c68c
 800666c:	0802c854 	.word	0x0802c854
 8006670:	0802c3c0 	.word	0x0802c3c0
 8006674:	0802b7fc 	.word	0x0802b7fc
 8006678:	08006347 	.word	0x08006347
 800667c:	08029d4c 	.word	0x08029d4c

08006680 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8006680:	4770      	bx	lr

08006682 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006682:	4770      	bx	lr

08006684 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006684:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006686:	68c2      	ldr	r2, [r0, #12]
 8006688:	6844      	ldr	r4, [r0, #4]
 800668a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800668c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800668e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006692:	07d2      	lsls	r2, r2, #31
 8006694:	bf48      	it	mi
 8006696:	5962      	ldrmi	r2, [r4, r5]
 8006698:	689b      	ldr	r3, [r3, #8]
    }
 800669a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800669c:	bf48      	it	mi
 800669e:	58d3      	ldrmi	r3, [r2, r3]
 80066a0:	4718      	bx	r3

080066a2 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80066a2:	6843      	ldr	r3, [r0, #4]
 80066a4:	b12b      	cbz	r3, 80066b2 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80066a6:	6883      	ldr	r3, [r0, #8]
 80066a8:	b92b      	cbnz	r3, 80066b6 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80066aa:	68c0      	ldr	r0, [r0, #12]
 80066ac:	f000 0001 	and.w	r0, r0, #1
 80066b0:	4770      	bx	lr
 80066b2:	4618      	mov	r0, r3
 80066b4:	4770      	bx	lr
 80066b6:	2001      	movs	r0, #1
    }
 80066b8:	4770      	bx	lr

080066ba <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80066ba:	b510      	push	{r4, lr}
 80066bc:	2110      	movs	r1, #16
 80066be:	4604      	mov	r4, r0
 80066c0:	f020 ff4d 	bl	802755e <_ZdlPvj>
 80066c4:	4620      	mov	r0, r4
 80066c6:	bd10      	pop	{r4, pc}

080066c8 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 80066c8:	b510      	push	{r4, lr}
 80066ca:	4b03      	ldr	r3, [pc, #12]	; (80066d8 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 80066cc:	6003      	str	r3, [r0, #0]
 80066ce:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80066d0:	f00c fce4 	bl	801309c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80066d4:	4620      	mov	r0, r4
 80066d6:	bd10      	pop	{r4, pc}
 80066d8:	0802b860 	.word	0x0802b860

080066dc <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 80066dc:	b507      	push	{r0, r1, r2, lr}
 80066de:	4b07      	ldr	r3, [pc, #28]	; (80066fc <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 80066e0:	6003      	str	r3, [r0, #0]
 80066e2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80066e4:	f00c fcda 	bl	801309c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80066e8:	9801      	ldr	r0, [sp, #4]
 80066ea:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80066ee:	f020 ff36 	bl	802755e <_ZdlPvj>
 80066f2:	9801      	ldr	r0, [sp, #4]
 80066f4:	b003      	add	sp, #12
 80066f6:	f85d fb04 	ldr.w	pc, [sp], #4
 80066fa:	bf00      	nop
 80066fc:	0802b860 	.word	0x0802b860

08006700 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006700:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006702:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8006706:	4299      	cmp	r1, r3
{
 8006708:	4604      	mov	r4, r0
 800670a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 800670c:	d103      	bne.n	8006716 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800670e:	f00e f9c7 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8006712:	f7fc ffeb 	bl	80036ec <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8006716:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800671a:	429d      	cmp	r5, r3
 800671c:	d103      	bne.n	8006726 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800671e:	f00e f9bf 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 8006722:	f7fd f803 	bl	800372c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8006726:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800672a:	42a5      	cmp	r5, r4
 800672c:	d105      	bne.n	800673a <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800672e:	f00e f9b7 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 8006732:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 8006736:	f7fd b809 	b.w	800374c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 800673a:	bd38      	pop	{r3, r4, r5, pc}

0800673c <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 800673c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006740:	ed2d 8b06 	vpush	{d8-d10}
 8006744:	4604      	mov	r4, r0
 8006746:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8006748:	46a3      	mov	fp, r4
 800674a:	2500      	movs	r5, #0
 800674c:	f00f fe28 	bl	80163a0 <_ZN8touchgfx6ScreenC1Ev>
 8006750:	4b66      	ldr	r3, [pc, #408]	; (80068ec <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 8006752:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006754:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006758:	2226      	movs	r2, #38	; 0x26
 800675a:	4629      	mov	r1, r5
 800675c:	4658      	mov	r0, fp
 800675e:	f021 fef4 	bl	802854a <memset>
 8006762:	4658      	mov	r0, fp
 8006764:	f7fb febc 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 8006768:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800676c:	26ff      	movs	r6, #255	; 0xff
 800676e:	4b60      	ldr	r3, [pc, #384]	; (80068f0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 8006770:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006772:	2226      	movs	r2, #38	; 0x26
 8006774:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006778:	4629      	mov	r1, r5
 800677a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800677e:	4650      	mov	r0, sl
 8006780:	66a5      	str	r5, [r4, #104]	; 0x68
 8006782:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006786:	f021 fee0 	bl	802854a <memset>
 800678a:	4650      	mov	r0, sl
 800678c:	f7fb fea8 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 8006790:	4b58      	ldr	r3, [pc, #352]	; (80068f4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 8006792:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006794:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006798:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800679c:	a90a      	add	r1, sp, #40	; 0x28
 800679e:	4650      	mov	r0, sl
 80067a0:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80067a4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80067a8:	f00b fc71 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80067ac:	4648      	mov	r0, r9
 80067ae:	f7fb fea9 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80067b2:	4b51      	ldr	r3, [pc, #324]	; (80068f8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 80067b4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80067b8:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 80067bc:	4618      	mov	r0, r3
 80067be:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80067c2:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 80067c6:	ee08 3a90 	vmov	s17, r3
 80067ca:	f7fb fe9b 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 80067ce:	4638      	mov	r0, r7
 80067d0:	f00a fb26 	bl	8010e20 <_ZN8touchgfx4LineC1Ev>
 80067d4:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80067d8:	4618      	mov	r0, r3
 80067da:	9303      	str	r3, [sp, #12]
 80067dc:	f7fa fd70 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80067e0:	4b46      	ldr	r3, [pc, #280]	; (80068fc <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 80067e2:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 80067e6:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80067ea:	3324      	adds	r3, #36	; 0x24
 80067ec:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 80067f0:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 80067f4:	4640      	mov	r0, r8
 80067f6:	f7fb fe85 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 80067fa:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80067fe:	4618      	mov	r0, r3
 8006800:	ee08 3a10 	vmov	s16, r3
 8006804:	f7fb fe7e 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8006808:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800680c:	4618      	mov	r0, r3
 800680e:	ee09 3a10 	vmov	s18, r3
 8006812:	f00b fd7d 	bl	8012310 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006816:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800681a:	4618      	mov	r0, r3
 800681c:	ee09 3a90 	vmov	s19, r3
 8006820:	f00b fd76 	bl	8012310 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006824:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006828:	4618      	mov	r0, r3
 800682a:	ee0a 3a10 	vmov	s20, r3
 800682e:	f00b fd6f 	bl	8012310 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006832:	4a33      	ldr	r2, [pc, #204]	; (8006900 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 8006834:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006838:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 800683c:	4a31      	ldr	r2, [pc, #196]	; (8006904 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800683e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006842:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006846:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800684a:	f00c fc1d 	bl	8013088 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800684e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006852:	462a      	mov	r2, r5
 8006854:	4658      	mov	r0, fp
 8006856:	9300      	str	r3, [sp, #0]
 8006858:	4629      	mov	r1, r5
 800685a:	23f0      	movs	r3, #240	; 0xf0
 800685c:	f7fb fe2c 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006860:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006862:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006866:	66a3      	str	r3, [r4, #104]	; 0x68
 8006868:	4659      	mov	r1, fp
 800686a:	4630      	mov	r0, r6
 800686c:	f008 fe80 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006870:	462a      	mov	r2, r5
 8006872:	4650      	mov	r0, sl
 8006874:	4629      	mov	r1, r5
 8006876:	f7fb fe12 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 800687a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800687c:	4650      	mov	r0, sl
 800687e:	a90a      	add	r1, sp, #40	; 0x28
 8006880:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006884:	f00b fc03 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006888:	4651      	mov	r1, sl
 800688a:	4630      	mov	r0, r6
 800688c:	f008 fe70 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006890:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006894:	2156      	movs	r1, #86	; 0x56
 8006896:	4648      	mov	r0, r9
 8006898:	f7fb fe01 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800689c:	f04f 33ff 	mov.w	r3, #4294967295
 80068a0:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80068a4:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80068a8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80068ac:	f10d 0b10 	add.w	fp, sp, #16
 80068b0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80068b4:	4649      	mov	r1, r9
 80068b6:	4658      	mov	r0, fp
 80068b8:	4798      	blx	r3
 80068ba:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80068be:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80068c2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80068c6:	4b10      	ldr	r3, [pc, #64]	; (8006908 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 80068c8:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 80068ca:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80068ce:	b92b      	cbnz	r3, 80068dc <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 80068d0:	4b0e      	ldr	r3, [pc, #56]	; (800690c <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 80068d2:	4a0f      	ldr	r2, [pc, #60]	; (8006910 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 80068d4:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80068d6:	480f      	ldr	r0, [pc, #60]	; (8006914 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 80068d8:	f021 fc32 	bl	8028140 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80068dc:	4b0e      	ldr	r3, [pc, #56]	; (8006918 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80068de:	881b      	ldrh	r3, [r3, #0]
 80068e0:	2b0f      	cmp	r3, #15
 80068e2:	d81d      	bhi.n	8006920 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 80068e4:	4b0d      	ldr	r3, [pc, #52]	; (800691c <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 80068e6:	4a0a      	ldr	r2, [pc, #40]	; (8006910 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 80068e8:	2161      	movs	r1, #97	; 0x61
 80068ea:	e7f4      	b.n	80068d6 <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 80068ec:	0802b860 	.word	0x0802b860
 80068f0:	0802c68c 	.word	0x0802c68c
 80068f4:	0802c854 	.word	0x0802c854
 80068f8:	08029d5c 	.word	0x08029d5c
 80068fc:	0802c3c0 	.word	0x0802c3c0
 8006900:	0802b848 	.word	0x0802b848
 8006904:	08006701 	.word	0x08006701
 8006908:	20013814 	.word	0x20013814
 800690c:	08029b9c 	.word	0x08029b9c
 8006910:	08029c9e 	.word	0x08029c9e
 8006914:	08029c19 	.word	0x08029c19
 8006918:	20013818 	.word	0x20013818
 800691c:	08029c60 	.word	0x08029c60
        return texts->getText(typedTextId);
 8006920:	4b95      	ldr	r3, [pc, #596]	; (8006b78 <_ZN26Measurement_SingleViewBaseC1Ev+0x43c>)
 8006922:	210f      	movs	r1, #15
 8006924:	6818      	ldr	r0, [r3, #0]
 8006926:	f001 f8fb 	bl	8007b20 <_ZNK8touchgfx5Texts7getTextEt>
 800692a:	4a94      	ldr	r2, [pc, #592]	; (8006b7c <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 800692c:	4603      	mov	r3, r0
 800692e:	2104      	movs	r1, #4
 8006930:	4650      	mov	r0, sl
 8006932:	f011 fa19 	bl	8017d68 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006936:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 800693a:	4648      	mov	r0, r9
 800693c:	f00a ffac 	bl	8011898 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006940:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8006b80 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8006944:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006948:	2310      	movs	r3, #16
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 800694a:	a90a      	add	r1, sp, #40	; 0x28
 800694c:	4648      	mov	r0, r9
 800694e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006952:	f00a ffc1 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006956:	4649      	mov	r1, r9
 8006958:	4630      	mov	r0, r6
 800695a:	f008 fe09 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 800695e:	223c      	movs	r2, #60	; 0x3c
 8006960:	ee18 0a90 	vmov	r0, s17
 8006964:	2129      	movs	r1, #41	; 0x29
 8006966:	f7fb fd9a 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800696a:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800696e:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8006972:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006976:	4658      	mov	r0, fp
        linespace = space;
 8006978:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 800697c:	f00a fd12 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006980:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006984:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006988:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800698c:	231f      	movs	r3, #31
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 800698e:	ee18 0a90 	vmov	r0, s17
 8006992:	a90a      	add	r1, sp, #40	; 0x28
 8006994:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006998:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800699c:	f00a ff9c 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069a0:	ee18 1a90 	vmov	r1, s17
 80069a4:	4630      	mov	r0, r6
 80069a6:	f008 fde3 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80069aa:	230a      	movs	r3, #10
 80069ac:	9300      	str	r3, [sp, #0]
 80069ae:	2232      	movs	r2, #50	; 0x32
 80069b0:	23f0      	movs	r3, #240	; 0xf0
 80069b2:	4629      	mov	r1, r5
 80069b4:	4638      	mov	r0, r7
 80069b6:	f7fb fd7f 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80069ba:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80069be:	22a0      	movs	r2, #160	; 0xa0
 80069c0:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80069c4:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 80069c8:	9b03      	ldr	r3, [sp, #12]
 80069ca:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80069ce:	4611      	mov	r1, r2
 80069d0:	4638      	mov	r0, r7
 80069d2:	f00a fb3b 	bl	801104c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80069d6:	22a0      	movs	r2, #160	; 0xa0
 80069d8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80069dc:	4638      	mov	r0, r7
 80069de:	f00a fb40 	bl	8011062 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80069e2:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 80069e6:	2b20      	cmp	r3, #32
 80069e8:	d005      	beq.n	80069f6 <_ZN26Measurement_SingleViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 80069ea:	2320      	movs	r3, #32
 80069ec:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 80069f0:	4638      	mov	r0, r7
 80069f2:	f00a fa35 	bl	8010e60 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80069f6:	4638      	mov	r0, r7
 80069f8:	2101      	movs	r1, #1
 80069fa:	f00a fb3d 	bl	8011078 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80069fe:	4639      	mov	r1, r7
 8006a00:	4630      	mov	r0, r6
 8006a02:	f008 fdb5 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006a06:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8006a0a:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8006a0c:	2223      	movs	r2, #35	; 0x23
 8006a0e:	4640      	mov	r0, r8
        linespace = space;
 8006a10:	f04f 0a00 	mov.w	sl, #0
 8006a14:	2145      	movs	r1, #69	; 0x45
 8006a16:	f7fb fd42 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006a1a:	4641      	mov	r1, r8
 8006a1c:	4638      	mov	r0, r7
        color = newColor;
 8006a1e:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8006a22:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006a26:	f00a fcbd 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a2a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006a2e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006a32:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006a36:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006b80 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8006a3a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006a3e:	2338      	movs	r3, #56	; 0x38
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8006a40:	a90a      	add	r1, sp, #40	; 0x28
 8006a42:	4640      	mov	r0, r8
 8006a44:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a48:	f00a ff46 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a4c:	4641      	mov	r1, r8
 8006a4e:	4630      	mov	r0, r6
 8006a50:	f008 fd8e 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006a54:	ee18 0a10 	vmov	r0, s16
 8006a58:	220c      	movs	r2, #12
 8006a5a:	2136      	movs	r1, #54	; 0x36
 8006a5c:	f7fb fd1f 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8006a60:	ee18 1a10 	vmov	r1, s16
 8006a64:	4638      	mov	r0, r7
        color = newColor;
 8006a66:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006a6a:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006a6e:	f00a fc99 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a72:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006a76:	ee18 3a10 	vmov	r3, s16
 8006a7a:	333c      	adds	r3, #60	; 0x3c
 8006a7c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006a80:	2337      	movs	r3, #55	; 0x37
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8006a82:	ee18 0a10 	vmov	r0, s16
 8006a86:	a90a      	add	r1, sp, #40	; 0x28
 8006a88:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a8c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006a90:	f00a ff22 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a94:	ee18 1a10 	vmov	r1, s16
 8006a98:	4630      	mov	r0, r6
 8006a9a:	f008 fd69 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006a9e:	ee19 0a10 	vmov	r0, s18
 8006aa2:	22f0      	movs	r2, #240	; 0xf0
 8006aa4:	2121      	movs	r1, #33	; 0x21
 8006aa6:	f7fb fcfa 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8006aaa:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006aae:	aa0a      	add	r2, sp, #40	; 0x28
 8006ab0:	f04f 0802 	mov.w	r8, #2
 8006ab4:	a909      	add	r1, sp, #36	; 0x24
 8006ab6:	ee19 0a10 	vmov	r0, s18
 8006aba:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006abe:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006ac2:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006ac6:	f00b f8ec 	bl	8011ca2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006aca:	2336      	movs	r3, #54	; 0x36
 8006acc:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006ad0:	3710      	adds	r7, #16
        updateTextPosition();
 8006ad2:	ee19 0a10 	vmov	r0, s18
 8006ad6:	f7fb fd37 	bl	8002548 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006ada:	ee19 1a10 	vmov	r1, s18
 8006ade:	4630      	mov	r0, r6
        colorPressed = col;
 8006ae0:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006ae4:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006ae8:	f008 fd42 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006aec:	ee19 0a90 	vmov	r0, s19
 8006af0:	22aa      	movs	r2, #170	; 0xaa
 8006af2:	2121      	movs	r1, #33	; 0x21
 8006af4:	f7fb fcd3 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006af8:	aa0a      	add	r2, sp, #40	; 0x28
 8006afa:	a909      	add	r1, sp, #36	; 0x24
 8006afc:	ee19 0a90 	vmov	r0, s19
 8006b00:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006b04:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006b08:	f00b f8cb 	bl	8011ca2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006b0c:	2335      	movs	r3, #53	; 0x35
 8006b0e:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006b12:	ee19 0a90 	vmov	r0, s19
 8006b16:	f7fb fd17 	bl	8002548 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b1a:	ee19 1a90 	vmov	r1, s19
 8006b1e:	4630      	mov	r0, r6
        colorPressed = col;
 8006b20:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8006b24:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8006b28:	f008 fd22 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006b2c:	ee1a 0a10 	vmov	r0, s20
 8006b30:	2264      	movs	r2, #100	; 0x64
 8006b32:	2121      	movs	r1, #33	; 0x21
 8006b34:	f7fb fcb3 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b38:	aa0a      	add	r2, sp, #40	; 0x28
 8006b3a:	a909      	add	r1, sp, #36	; 0x24
 8006b3c:	ee1a 0a10 	vmov	r0, s20
 8006b40:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006b44:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006b48:	f00b f8ab 	bl	8011ca2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006b4c:	2334      	movs	r3, #52	; 0x34
        updateTextPosition();
 8006b4e:	ee1a 0a10 	vmov	r0, s20
 8006b52:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006b56:	f7fb fcf7 	bl	8002548 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b5a:	4630      	mov	r0, r6
        colorPressed = col;
 8006b5c:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006b60:	ee1a 1a10 	vmov	r1, s20
 8006b64:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006b68:	f008 fd02 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006b6c:	4620      	mov	r0, r4
 8006b6e:	b00d      	add	sp, #52	; 0x34
 8006b70:	ecbd 8b06 	vpop	{d8-d10}
 8006b74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006b78:	20013820 	.word	0x20013820
 8006b7c:	08029cd6 	.word	0x08029cd6
 8006b80:	08029d4c 	.word	0x08029d4c

08006b84 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006b84:	4770      	bx	lr

08006b86 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006b86:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006b88:	68c2      	ldr	r2, [r0, #12]
 8006b8a:	6844      	ldr	r4, [r0, #4]
 8006b8c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006b8e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006b90:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006b94:	07d2      	lsls	r2, r2, #31
 8006b96:	bf48      	it	mi
 8006b98:	5962      	ldrmi	r2, [r4, r5]
 8006b9a:	689b      	ldr	r3, [r3, #8]
    }
 8006b9c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006b9e:	bf48      	it	mi
 8006ba0:	58d3      	ldrmi	r3, [r2, r3]
 8006ba2:	4718      	bx	r3

08006ba4 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006ba4:	6843      	ldr	r3, [r0, #4]
 8006ba6:	b12b      	cbz	r3, 8006bb4 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006ba8:	6883      	ldr	r3, [r0, #8]
 8006baa:	b92b      	cbnz	r3, 8006bb8 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006bac:	68c0      	ldr	r0, [r0, #12]
 8006bae:	f000 0001 	and.w	r0, r0, #1
 8006bb2:	4770      	bx	lr
 8006bb4:	4618      	mov	r0, r3
 8006bb6:	4770      	bx	lr
 8006bb8:	2001      	movs	r0, #1
    }
 8006bba:	4770      	bx	lr

08006bbc <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006bbc:	b510      	push	{r4, lr}
 8006bbe:	2110      	movs	r1, #16
 8006bc0:	4604      	mov	r4, r0
 8006bc2:	f020 fccc 	bl	802755e <_ZdlPvj>
 8006bc6:	4620      	mov	r0, r4
 8006bc8:	bd10      	pop	{r4, pc}

08006bca <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8006bca:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8006bce:	f001 b8ef 	b.w	8007db0 <_ZN17Gauge_with_Values10initializeEv>

08006bd2 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_1PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006bd2:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8006bd6:	4288      	cmp	r0, r1
{
 8006bd8:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006bda:	d105      	bne.n	8006be8 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_1PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006bdc:	f00d ff60 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8006be0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006be4:	f7fc bd92 	b.w	800370c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8006be8:	bd08      	pop	{r3, pc}
	...

08006bec <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006bec:	b510      	push	{r4, lr}
 8006bee:	4b07      	ldr	r3, [pc, #28]	; (8006c0c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x20>)
 8006bf0:	6003      	str	r3, [r0, #0]
 8006bf2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006bf4:	f00c fa52 	bl	801309c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8006bf8:	4b05      	ldr	r3, [pc, #20]	; (8006c10 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x24>)
 8006bfa:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8006bfe:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006c02:	f7fe f819 	bl	8004c38 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8006c06:	4620      	mov	r0, r4
 8006c08:	bd10      	pop	{r4, pc}
 8006c0a:	bf00      	nop
 8006c0c:	0802b8ac 	.word	0x0802b8ac
 8006c10:	0802bd1c 	.word	0x0802bd1c

08006c14 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006c14:	b510      	push	{r4, lr}
 8006c16:	4604      	mov	r4, r0
}
 8006c18:	f7ff ffe8 	bl	8006bec <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8006c1c:	4620      	mov	r0, r4
 8006c1e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8006c22:	f020 fc9c 	bl	802755e <_ZdlPvj>
 8006c26:	4620      	mov	r0, r4
 8006c28:	bd10      	pop	{r4, pc}
	...

08006c2c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8006c2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006c30:	ed2d 8b04 	vpush	{d8-d9}
 8006c34:	4604      	mov	r4, r0
 8006c36:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_1PViewBase::buttonCallbackHandler)
 8006c38:	46a2      	mov	sl, r4
 8006c3a:	2500      	movs	r5, #0
 8006c3c:	f00f fbb0 	bl	80163a0 <_ZN8touchgfx6ScreenC1Ev>
 8006c40:	4baf      	ldr	r3, [pc, #700]	; (8006f00 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 8006c42:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006c44:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8006c48:	2226      	movs	r2, #38	; 0x26
 8006c4a:	4629      	mov	r1, r5
 8006c4c:	4650      	mov	r0, sl
 8006c4e:	f021 fc7c 	bl	802854a <memset>
 8006c52:	4650      	mov	r0, sl
 8006c54:	f7fb fc44 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 8006c58:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8006c5c:	26ff      	movs	r6, #255	; 0xff
 8006c5e:	4ba9      	ldr	r3, [pc, #676]	; (8006f04 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8006c60:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006c62:	2226      	movs	r2, #38	; 0x26
 8006c64:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006c68:	4629      	mov	r1, r5
 8006c6a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006c6e:	4648      	mov	r0, r9
 8006c70:	66a5      	str	r5, [r4, #104]	; 0x68
 8006c72:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006c76:	f021 fc68 	bl	802854a <memset>
 8006c7a:	4648      	mov	r0, r9
 8006c7c:	f7fb fc30 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 8006c80:	4ba1      	ldr	r3, [pc, #644]	; (8006f08 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 8006c82:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006c84:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006c88:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006c8c:	a90a      	add	r1, sp, #40	; 0x28
 8006c8e:	4648      	mov	r0, r9
        : Widget(), bitmap(bmp), alpha(255)
 8006c90:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006c94:	f00b f9fb 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006c98:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8006c9c:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8006ca0:	4618      	mov	r0, r3
 8006ca2:	ee08 3a10 	vmov	s16, r3
 8006ca6:	f7fb fc2d 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8006caa:	4638      	mov	r0, r7
 8006cac:	f00a f8b8 	bl	8010e20 <_ZN8touchgfx4LineC1Ev>
 8006cb0:	f504 73a8 	add.w	r3, r4, #336	; 0x150
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006cb4:	4618      	mov	r0, r3
 8006cb6:	9303      	str	r3, [sp, #12]
 8006cb8:	f7fa fb02 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006cbc:	4b93      	ldr	r3, [pc, #588]	; (8006f0c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 8006cbe:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
 8006cc2:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 8006cc6:	3324      	adds	r3, #36	; 0x24
 8006cc8:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158
 8006ccc:	f8c4 515c 	str.w	r5, [r4, #348]	; 0x15c
 8006cd0:	4640      	mov	r0, r8
 8006cd2:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8006cd6:	f7fb fc15 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8006cda:	4658      	mov	r0, fp
 8006cdc:	f7fb fc12 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8006ce0:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8006ce4:	4618      	mov	r0, r3
 8006ce6:	ee08 3a90 	vmov	s17, r3
 8006cea:	f00b fb11 	bl	8012310 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006cee:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8006cf2:	4618      	mov	r0, r3
 8006cf4:	ee09 3a10 	vmov	s18, r3
 8006cf8:	f001 f850 	bl	8007d9c <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006cfc:	4a84      	ldr	r2, [pc, #528]	; (8006f10 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8006cfe:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006d02:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8006d06:	4a83      	ldr	r2, [pc, #524]	; (8006f14 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006d08:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006d0c:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8006d10:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8006d14:	f00c f9b8 	bl	8013088 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006d18:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006d1c:	462a      	mov	r2, r5
 8006d1e:	4650      	mov	r0, sl
 8006d20:	9300      	str	r3, [sp, #0]
 8006d22:	4629      	mov	r1, r5
 8006d24:	23f0      	movs	r3, #240	; 0xf0
 8006d26:	f7fb fbc7 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006d2a:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006d2c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006d30:	66a3      	str	r3, [r4, #104]	; 0x68
 8006d32:	4651      	mov	r1, sl
 8006d34:	4630      	mov	r0, r6
 8006d36:	f008 fc1b 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006d3a:	462a      	mov	r2, r5
 8006d3c:	4648      	mov	r0, r9
 8006d3e:	4629      	mov	r1, r5
 8006d40:	f7fb fbad 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8006d44:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006d46:	4648      	mov	r0, r9
 8006d48:	a90a      	add	r1, sp, #40	; 0x28
 8006d4a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006d4e:	f00b f99e 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006d52:	4649      	mov	r1, r9
 8006d54:	4630      	mov	r0, r6
 8006d56:	f008 fc0b 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006d5a:	f04f 39ff 	mov.w	r9, #4294967295
    textArea3.setXY(31, 60);
 8006d5e:	223c      	movs	r2, #60	; 0x3c
 8006d60:	ee18 0a10 	vmov	r0, s16
 8006d64:	211f      	movs	r1, #31
        boundingArea = calculateBoundingArea();
 8006d66:	f10d 0a10 	add.w	sl, sp, #16
 8006d6a:	f7fb fb98 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8006d6e:	ee18 1a10 	vmov	r1, s16
 8006d72:	4650      	mov	r0, sl
        color = newColor;
 8006d74:	f8c4 90c8 	str.w	r9, [r4, #200]	; 0xc8
        linespace = space;
 8006d78:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006d7c:	f00a fb12 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d80:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8006d84:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006d88:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006d8c:	4b62      	ldr	r3, [pc, #392]	; (8006f18 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 8006d8e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8006d90:	ee18 0a10 	vmov	r0, s16
 8006d94:	231e      	movs	r3, #30
 8006d96:	a90a      	add	r1, sp, #40	; 0x28
 8006d98:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006d9c:	f00a fd9c 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006da0:	ee18 1a10 	vmov	r1, s16
 8006da4:	4630      	mov	r0, r6
 8006da6:	f008 fbe3 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006daa:	230a      	movs	r3, #10
 8006dac:	9300      	str	r3, [sp, #0]
 8006dae:	2232      	movs	r2, #50	; 0x32
 8006db0:	23f0      	movs	r3, #240	; 0xf0
 8006db2:	4629      	mov	r1, r5
 8006db4:	4638      	mov	r0, r7
 8006db6:	f7fb fb7f 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006dba:	9b03      	ldr	r3, [sp, #12]
 8006dbc:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006dc0:	22a0      	movs	r2, #160	; 0xa0
 8006dc2:	4611      	mov	r1, r2
 8006dc4:	4638      	mov	r0, r7
 8006dc6:	f8c4 915c 	str.w	r9, [r4, #348]	; 0x15c
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006dca:	f8a4 9160 	strh.w	r9, [r4, #352]	; 0x160
 8006dce:	f00a f93d 	bl	801104c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006dd2:	22a0      	movs	r2, #160	; 0xa0
 8006dd4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006dd8:	4638      	mov	r0, r7
 8006dda:	f00a f942 	bl	8011062 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006dde:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
 8006de2:	2b20      	cmp	r3, #32
 8006de4:	d005      	beq.n	8006df2 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x1c6>
        lineWidthQ5 = widthQ5;
 8006de6:	2320      	movs	r3, #32
 8006de8:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
        updateCachedShape();
 8006dec:	4638      	mov	r0, r7
 8006dee:	f00a f837 	bl	8010e60 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006df2:	4638      	mov	r0, r7
 8006df4:	2101      	movs	r1, #1
 8006df6:	f00a f93f 	bl	8011078 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006dfa:	4639      	mov	r1, r7
 8006dfc:	4630      	mov	r0, r6
 8006dfe:	f008 fbb7 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006e02:	ad04      	add	r5, sp, #16
        color = newColor;
 8006e04:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 8006e08:	f04f 0900 	mov.w	r9, #0
    textArea2.setXY(69, 35);
 8006e0c:	2223      	movs	r2, #35	; 0x23
 8006e0e:	4640      	mov	r0, r8
 8006e10:	2145      	movs	r1, #69	; 0x45
 8006e12:	f7fb fb44 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006e16:	4641      	mov	r1, r8
 8006e18:	4628      	mov	r0, r5
        color = newColor;
 8006e1a:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 8006e1e:	f8a4 9198 	strh.w	r9, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8006e22:	f00a fabf 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e26:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006e2a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006e2e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e32:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8006f18 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>
 8006e36:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006e3a:	232b      	movs	r3, #43	; 0x2b
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 8006e3c:	a90a      	add	r1, sp, #40	; 0x28
 8006e3e:	4640      	mov	r0, r8
 8006e40:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e44:	f00a fd48 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e48:	4641      	mov	r1, r8
 8006e4a:	4630      	mov	r0, r6
 8006e4c:	f008 fb90 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006e50:	220c      	movs	r2, #12
 8006e52:	4658      	mov	r0, fp
 8006e54:	2136      	movs	r1, #54	; 0x36
 8006e56:	f7fb fb22 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8006e5a:	4659      	mov	r1, fp
 8006e5c:	4628      	mov	r0, r5
        color = newColor;
 8006e5e:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8006e62:	f8a4 91e0 	strh.w	r9, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006e66:	f00a fa9d 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e6a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006e6e:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 8006e72:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e76:	232a      	movs	r3, #42	; 0x2a
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 8006e78:	a90a      	add	r1, sp, #40	; 0x28
 8006e7a:	4658      	mov	r0, fp
 8006e7c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e80:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006e84:	f00a fd28 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e88:	4659      	mov	r1, fp
 8006e8a:	4630      	mov	r0, r6
 8006e8c:	f008 fb70 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 8006e90:	ee18 0a90 	vmov	r0, s17
 8006e94:	f44f 7280 	mov.w	r2, #256	; 0x100
 8006e98:	2121      	movs	r1, #33	; 0x21
 8006e9a:	f7fb fb00 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8006e9e:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006ea0:	aa0a      	add	r2, sp, #40	; 0x28
 8006ea2:	a909      	add	r1, sp, #36	; 0x24
 8006ea4:	ee18 0a90 	vmov	r0, s17
 8006ea8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006eac:	2302      	movs	r3, #2
 8006eae:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006eb2:	f00a fef6 	bl	8011ca2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006eb6:	2329      	movs	r3, #41	; 0x29
        updateTextPosition();
 8006eb8:	ee18 0a90 	vmov	r0, s17
 8006ebc:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 8006ec0:	f7fb fb42 	bl	8002548 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006ec4:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8006ec8:	3314      	adds	r3, #20
 8006eca:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 8006ece:	ee18 1a90 	vmov	r1, s17
 8006ed2:	4630      	mov	r0, r6
        colorPressed = col;
 8006ed4:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 8006ed8:	f008 fb4a 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8006edc:	ee19 0a10 	vmov	r0, s18
 8006ee0:	224e      	movs	r2, #78	; 0x4e
 8006ee2:	4649      	mov	r1, r9
 8006ee4:	f7fb fadb 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8006ee8:	4630      	mov	r0, r6
 8006eea:	ee19 1a10 	vmov	r1, s18
 8006eee:	f008 fb3f 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006ef2:	4620      	mov	r0, r4
 8006ef4:	b00d      	add	sp, #52	; 0x34
 8006ef6:	ecbd 8b04 	vpop	{d8-d9}
 8006efa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006efe:	bf00      	nop
 8006f00:	0802b8ac 	.word	0x0802b8ac
 8006f04:	0802c68c 	.word	0x0802c68c
 8006f08:	0802c854 	.word	0x0802c854
 8006f0c:	0802c3c0 	.word	0x0802c3c0
 8006f10:	0802b894 	.word	0x0802b894
 8006f14:	08006bd3 	.word	0x08006bd3
 8006f18:	08029d4c 	.word	0x08029d4c

08006f1c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006f1c:	4770      	bx	lr

08006f1e <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006f1e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006f20:	68c2      	ldr	r2, [r0, #12]
 8006f22:	6844      	ldr	r4, [r0, #4]
 8006f24:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006f26:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006f28:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006f2c:	07d2      	lsls	r2, r2, #31
 8006f2e:	bf48      	it	mi
 8006f30:	5962      	ldrmi	r2, [r4, r5]
 8006f32:	689b      	ldr	r3, [r3, #8]
    }
 8006f34:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006f36:	bf48      	it	mi
 8006f38:	58d3      	ldrmi	r3, [r2, r3]
 8006f3a:	4718      	bx	r3

08006f3c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006f3c:	6843      	ldr	r3, [r0, #4]
 8006f3e:	b12b      	cbz	r3, 8006f4c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006f40:	6883      	ldr	r3, [r0, #8]
 8006f42:	b92b      	cbnz	r3, 8006f50 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006f44:	68c0      	ldr	r0, [r0, #12]
 8006f46:	f000 0001 	and.w	r0, r0, #1
 8006f4a:	4770      	bx	lr
 8006f4c:	4618      	mov	r0, r3
 8006f4e:	4770      	bx	lr
 8006f50:	2001      	movs	r0, #1
    }
 8006f52:	4770      	bx	lr

08006f54 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006f54:	b510      	push	{r4, lr}
 8006f56:	2110      	movs	r1, #16
 8006f58:	4604      	mov	r4, r0
 8006f5a:	f020 fb00 	bl	802755e <_ZdlPvj>
 8006f5e:	4620      	mov	r0, r4
 8006f60:	bd10      	pop	{r4, pc}

08006f62 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8006f62:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8006f66:	f000 bf23 	b.w	8007db0 <_ZN17Gauge_with_Values10initializeEv>

08006f6a <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006f6a:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8006f6e:	4288      	cmp	r0, r1
{
 8006f70:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006f72:	d105      	bne.n	8006f80 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006f74:	f00d fd94 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8006f78:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006f7c:	f7fc bbc6 	b.w	800370c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8006f80:	bd08      	pop	{r3, pc}
	...

08006f84 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8006f84:	b510      	push	{r4, lr}
 8006f86:	4b07      	ldr	r3, [pc, #28]	; (8006fa4 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x20>)
 8006f88:	6003      	str	r3, [r0, #0]
 8006f8a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006f8c:	f00c f886 	bl	801309c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8006f90:	4b05      	ldr	r3, [pc, #20]	; (8006fa8 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x24>)
 8006f92:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 8006f96:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006f9a:	f7fd fe4d 	bl	8004c38 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8006f9e:	4620      	mov	r0, r4
 8006fa0:	bd10      	pop	{r4, pc}
 8006fa2:	bf00      	nop
 8006fa4:	0802b8f8 	.word	0x0802b8f8
 8006fa8:	0802bd1c 	.word	0x0802bd1c

08006fac <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8006fac:	b510      	push	{r4, lr}
 8006fae:	4604      	mov	r4, r0
}
 8006fb0:	f7ff ffe8 	bl	8006f84 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8006fb4:	4620      	mov	r0, r4
 8006fb6:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8006fba:	f020 fad0 	bl	802755e <_ZdlPvj>
 8006fbe:	4620      	mov	r0, r4
 8006fc0:	bd10      	pop	{r4, pc}
	...

08006fc4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8006fc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006fc8:	ed2d 8b04 	vpush	{d8-d9}
 8006fcc:	4604      	mov	r4, r0
 8006fce:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8006fd0:	46a3      	mov	fp, r4
 8006fd2:	2500      	movs	r5, #0
 8006fd4:	f00f f9e4 	bl	80163a0 <_ZN8touchgfx6ScreenC1Ev>
 8006fd8:	4bae      	ldr	r3, [pc, #696]	; (8007294 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d0>)
 8006fda:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006fdc:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006fe0:	2226      	movs	r2, #38	; 0x26
 8006fe2:	4629      	mov	r1, r5
 8006fe4:	4658      	mov	r0, fp
 8006fe6:	f021 fab0 	bl	802854a <memset>
 8006fea:	4658      	mov	r0, fp
 8006fec:	f7fb fa78 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 8006ff0:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006ff4:	26ff      	movs	r6, #255	; 0xff
 8006ff6:	4ba8      	ldr	r3, [pc, #672]	; (8007298 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d4>)
 8006ff8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006ffa:	2226      	movs	r2, #38	; 0x26
 8006ffc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007000:	4629      	mov	r1, r5
 8007002:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007006:	66a5      	str	r5, [r4, #104]	; 0x68
 8007008:	4650      	mov	r0, sl
 800700a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800700e:	f021 fa9c 	bl	802854a <memset>
 8007012:	4650      	mov	r0, sl
 8007014:	f7fb fa64 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 8007018:	4ba0      	ldr	r3, [pc, #640]	; (800729c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d8>)
 800701a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800701c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007020:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007024:	a90a      	add	r1, sp, #40	; 0x28
 8007026:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800702a:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800702e:	4650      	mov	r0, sl
 8007030:	f00b f82d 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007034:	4638      	mov	r0, r7
 8007036:	f009 fef3 	bl	8010e20 <_ZN8touchgfx4LineC1Ev>
 800703a:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800703e:	4618      	mov	r0, r3
 8007040:	9303      	str	r3, [sp, #12]
 8007042:	f7fa f93d 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007046:	4b96      	ldr	r3, [pc, #600]	; (80072a0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2dc>)
 8007048:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 800704c:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 8007050:	3324      	adds	r3, #36	; 0x24
 8007052:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8007056:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 800705a:	4648      	mov	r0, r9
 800705c:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 8007060:	f7fb fa50 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8007064:	4640      	mov	r0, r8
 8007066:	f7fb fa4d 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 800706a:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 800706e:	4618      	mov	r0, r3
 8007070:	ee08 3a10 	vmov	s16, r3
 8007074:	f7fb fa46 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8007078:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 800707c:	4618      	mov	r0, r3
 800707e:	ee08 3a90 	vmov	s17, r3
 8007082:	f00b f945 	bl	8012310 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007086:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800708a:	4618      	mov	r0, r3
 800708c:	ee09 3a10 	vmov	s18, r3
 8007090:	f000 fe84 	bl	8007d9c <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007094:	4a83      	ldr	r2, [pc, #524]	; (80072a4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e0>)
 8007096:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800709a:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 800709e:	4a82      	ldr	r2, [pc, #520]	; (80072a8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80070a0:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80070a4:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80070a8:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80070ac:	f00b ffec 	bl	8013088 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80070b0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80070b4:	462a      	mov	r2, r5
 80070b6:	9300      	str	r3, [sp, #0]
 80070b8:	4629      	mov	r1, r5
 80070ba:	23f0      	movs	r3, #240	; 0xf0
 80070bc:	4658      	mov	r0, fp
 80070be:	f7fb f9fb 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 80070c2:	1d26      	adds	r6, r4, #4
        color = newColor;
 80070c4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80070c8:	66a3      	str	r3, [r4, #104]	; 0x68
 80070ca:	4659      	mov	r1, fp
 80070cc:	4630      	mov	r0, r6
 80070ce:	f008 fa4f 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80070d2:	462a      	mov	r2, r5
 80070d4:	4629      	mov	r1, r5
 80070d6:	4650      	mov	r0, sl
 80070d8:	f7fb f9e1 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 80070dc:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80070de:	a90a      	add	r1, sp, #40	; 0x28
 80070e0:	4650      	mov	r0, sl
 80070e2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80070e6:	f00a ffd2 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80070ea:	4651      	mov	r1, sl
 80070ec:	4630      	mov	r0, r6
 80070ee:	f008 fa3f 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80070f2:	230a      	movs	r3, #10
 80070f4:	9300      	str	r3, [sp, #0]
 80070f6:	2232      	movs	r2, #50	; 0x32
 80070f8:	23f0      	movs	r3, #240	; 0xf0
 80070fa:	4629      	mov	r1, r5
 80070fc:	4638      	mov	r0, r7
 80070fe:	f7fb f9db 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007102:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007106:	22a0      	movs	r2, #160	; 0xa0
 8007108:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 800710c:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8007110:	9b03      	ldr	r3, [sp, #12]
 8007112:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007116:	4611      	mov	r1, r2
 8007118:	4638      	mov	r0, r7
 800711a:	f009 ff97 	bl	801104c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800711e:	22a0      	movs	r2, #160	; 0xa0
 8007120:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007124:	4638      	mov	r0, r7
 8007126:	f009 ff9c 	bl	8011062 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800712a:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 800712e:	2b20      	cmp	r3, #32
 8007130:	d005      	beq.n	800713e <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x17a>
        lineWidthQ5 = widthQ5;
 8007132:	2320      	movs	r3, #32
 8007134:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 8007138:	4638      	mov	r0, r7
 800713a:	f009 fe91 	bl	8010e60 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800713e:	4638      	mov	r0, r7
 8007140:	2101      	movs	r1, #1
 8007142:	f009 ff99 	bl	8011078 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007146:	4639      	mov	r1, r7
 8007148:	4630      	mov	r0, r6
 800714a:	ad04      	add	r5, sp, #16
 800714c:	f008 fa10 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007150:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 8007154:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8007158:	2223      	movs	r2, #35	; 0x23
 800715a:	4648      	mov	r0, r9
 800715c:	2145      	movs	r1, #69	; 0x45
 800715e:	f7fb f99e 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007162:	4649      	mov	r1, r9
 8007164:	4628      	mov	r0, r5
        color = newColor;
 8007166:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 800716a:	f8a4 a150 	strh.w	sl, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 800716e:	f00a f919 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007172:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007176:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 800717a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800717e:	f8df b12c 	ldr.w	fp, [pc, #300]	; 80072ac <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e8>
 8007182:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007186:	232e      	movs	r3, #46	; 0x2e
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8007188:	a90a      	add	r1, sp, #40	; 0x28
 800718a:	4648      	mov	r0, r9
 800718c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007190:	f00a fba2 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007194:	4649      	mov	r1, r9
 8007196:	4630      	mov	r0, r6
 8007198:	f008 f9ea 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 800719c:	223c      	movs	r2, #60	; 0x3c
 800719e:	4640      	mov	r0, r8
 80071a0:	211f      	movs	r1, #31
 80071a2:	f7fb f97c 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 80071a6:	4641      	mov	r1, r8
 80071a8:	4628      	mov	r0, r5
        color = newColor;
 80071aa:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 80071ae:	f8a4 a198 	strh.w	sl, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 80071b2:	f00a f8f7 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80071b6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80071ba:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80071be:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80071c2:	231d      	movs	r3, #29
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 80071c4:	a90a      	add	r1, sp, #40	; 0x28
 80071c6:	4640      	mov	r0, r8
 80071c8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80071cc:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80071d0:	f00a fb82 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80071d4:	4641      	mov	r1, r8
 80071d6:	4630      	mov	r0, r6
 80071d8:	f008 f9ca 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80071dc:	ee18 0a10 	vmov	r0, s16
 80071e0:	220c      	movs	r2, #12
 80071e2:	2136      	movs	r1, #54	; 0x36
 80071e4:	f7fb f95b 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 80071e8:	ee18 1a10 	vmov	r1, s16
 80071ec:	4628      	mov	r0, r5
        color = newColor;
 80071ee:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 80071f2:	f8a4 a1e0 	strh.w	sl, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80071f6:	f00a f8d5 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80071fa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80071fe:	ee18 3a10 	vmov	r3, s16
 8007202:	333c      	adds	r3, #60	; 0x3c
 8007204:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007208:	232d      	movs	r3, #45	; 0x2d
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 800720a:	ee18 0a10 	vmov	r0, s16
 800720e:	a90a      	add	r1, sp, #40	; 0x28
 8007210:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007214:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007218:	f00a fb5e 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800721c:	ee18 1a10 	vmov	r1, s16
 8007220:	4630      	mov	r0, r6
 8007222:	f008 f9a5 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8007226:	ee18 0a90 	vmov	r0, s17
 800722a:	f240 1201 	movw	r2, #257	; 0x101
 800722e:	2121      	movs	r1, #33	; 0x21
 8007230:	f7fb f935 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8007234:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007236:	aa0a      	add	r2, sp, #40	; 0x28
 8007238:	a909      	add	r1, sp, #36	; 0x24
 800723a:	ee18 0a90 	vmov	r0, s17
 800723e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007242:	2302      	movs	r3, #2
 8007244:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007248:	f00a fd2b 	bl	8011ca2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800724c:	232c      	movs	r3, #44	; 0x2c
        updateTextPosition();
 800724e:	ee18 0a90 	vmov	r0, s17
 8007252:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 8007256:	f7fb f977 	bl	8002548 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800725a:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 800725e:	3314      	adds	r3, #20
 8007260:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 8007264:	ee18 1a90 	vmov	r1, s17
 8007268:	4630      	mov	r0, r6
        colorPressed = col;
 800726a:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 800726e:	f008 f97f 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8007272:	ee19 0a10 	vmov	r0, s18
 8007276:	224e      	movs	r2, #78	; 0x4e
 8007278:	4651      	mov	r1, sl
 800727a:	f7fb f910 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 800727e:	4630      	mov	r0, r6
 8007280:	ee19 1a10 	vmov	r1, s18
 8007284:	f008 f974 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007288:	4620      	mov	r0, r4
 800728a:	b00d      	add	sp, #52	; 0x34
 800728c:	ecbd 8b04 	vpop	{d8-d9}
 8007290:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007294:	0802b8f8 	.word	0x0802b8f8
 8007298:	0802c68c 	.word	0x0802c68c
 800729c:	0802c854 	.word	0x0802c854
 80072a0:	0802c3c0 	.word	0x0802c3c0
 80072a4:	0802b8e0 	.word	0x0802b8e0
 80072a8:	08006f6b 	.word	0x08006f6b
 80072ac:	08029d4c 	.word	0x08029d4c

080072b0 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 80072b0:	4770      	bx	lr

080072b2 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80072b2:	4770      	bx	lr

080072b4 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80072b4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80072b6:	68c2      	ldr	r2, [r0, #12]
 80072b8:	6844      	ldr	r4, [r0, #4]
 80072ba:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80072bc:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80072be:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80072c2:	07d2      	lsls	r2, r2, #31
 80072c4:	bf48      	it	mi
 80072c6:	5962      	ldrmi	r2, [r4, r5]
 80072c8:	689b      	ldr	r3, [r3, #8]
    }
 80072ca:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80072cc:	bf48      	it	mi
 80072ce:	58d3      	ldrmi	r3, [r2, r3]
 80072d0:	4718      	bx	r3

080072d2 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80072d2:	6843      	ldr	r3, [r0, #4]
 80072d4:	b12b      	cbz	r3, 80072e2 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80072d6:	6883      	ldr	r3, [r0, #8]
 80072d8:	b92b      	cbnz	r3, 80072e6 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80072da:	68c0      	ldr	r0, [r0, #12]
 80072dc:	f000 0001 	and.w	r0, r0, #1
 80072e0:	4770      	bx	lr
 80072e2:	4618      	mov	r0, r3
 80072e4:	4770      	bx	lr
 80072e6:	2001      	movs	r0, #1
    }
 80072e8:	4770      	bx	lr

080072ea <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80072ea:	b510      	push	{r4, lr}
 80072ec:	2110      	movs	r1, #16
 80072ee:	4604      	mov	r4, r0
 80072f0:	f020 f935 	bl	802755e <_ZdlPvj>
 80072f4:	4620      	mov	r0, r4
 80072f6:	bd10      	pop	{r4, pc}

080072f8 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 80072f8:	b510      	push	{r4, lr}
 80072fa:	4b03      	ldr	r3, [pc, #12]	; (8007308 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 80072fc:	6003      	str	r3, [r0, #0]
 80072fe:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007300:	f00b fecc 	bl	801309c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007304:	4620      	mov	r0, r4
 8007306:	bd10      	pop	{r4, pc}
 8007308:	0802b944 	.word	0x0802b944

0800730c <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 800730c:	b507      	push	{r0, r1, r2, lr}
 800730e:	4b07      	ldr	r3, [pc, #28]	; (800732c <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8007310:	6003      	str	r3, [r0, #0]
 8007312:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007314:	f00b fec2 	bl	801309c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007318:	9801      	ldr	r0, [sp, #4]
 800731a:	f241 01b0 	movw	r1, #4272	; 0x10b0
 800731e:	f020 f91e 	bl	802755e <_ZdlPvj>
 8007322:	9801      	ldr	r0, [sp, #4]
 8007324:	b003      	add	sp, #12
 8007326:	f85d fb04 	ldr.w	pc, [sp], #4
 800732a:	bf00      	nop
 800732c:	0802b944 	.word	0x0802b944

08007330 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007330:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 8007334:	4288      	cmp	r0, r1
{
 8007336:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007338:	d105      	bne.n	8007346 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800733a:	f00d fbb1 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 800733e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8007342:	f7fc b9b3 	b.w	80036ac <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8007346:	bd08      	pop	{r3, pc}

08007348 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8007348:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800734c:	ed2d 8b04 	vpush	{d8-d9}
 8007350:	4604      	mov	r4, r0
 8007352:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8007354:	46a3      	mov	fp, r4
 8007356:	2500      	movs	r5, #0
 8007358:	f00f f822 	bl	80163a0 <_ZN8touchgfx6ScreenC1Ev>
 800735c:	4bd2      	ldr	r3, [pc, #840]	; (80076a8 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 800735e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007360:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8007364:	2226      	movs	r2, #38	; 0x26
 8007366:	4629      	mov	r1, r5
 8007368:	4658      	mov	r0, fp
 800736a:	f021 f8ee 	bl	802854a <memset>
 800736e:	4658      	mov	r0, fp
 8007370:	f7fb f8b6 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 8007374:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007378:	26ff      	movs	r6, #255	; 0xff
 800737a:	4bcc      	ldr	r3, [pc, #816]	; (80076ac <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 800737c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800737e:	2226      	movs	r2, #38	; 0x26
 8007380:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007384:	4629      	mov	r1, r5
 8007386:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800738a:	4650      	mov	r0, sl
 800738c:	66a5      	str	r5, [r4, #104]	; 0x68
 800738e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007392:	f021 f8da 	bl	802854a <memset>
 8007396:	4650      	mov	r0, sl
 8007398:	f7fb f8a2 	bl	80024e0 <_ZN8touchgfx6WidgetC1Ev>
 800739c:	4bc4      	ldr	r3, [pc, #784]	; (80076b0 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 800739e:	66e3      	str	r3, [r4, #108]	; 0x6c
 80073a0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80073a4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80073a8:	a90a      	add	r1, sp, #40	; 0x28
 80073aa:	4650      	mov	r0, sl
 80073ac:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80073b0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80073b4:	f00a fe6b 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80073b8:	4648      	mov	r0, r9
 80073ba:	f7fb f8a3 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 80073be:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80073c2:	4bbc      	ldr	r3, [pc, #752]	; (80076b4 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 80073c4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80073c8:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80073cc:	4638      	mov	r0, r7
 80073ce:	f009 fd27 	bl	8010e20 <_ZN8touchgfx4LineC1Ev>
 80073d2:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80073d6:	4618      	mov	r0, r3
 80073d8:	9303      	str	r3, [sp, #12]
 80073da:	f7f9 ff71 	bl	80012c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80073de:	4bb6      	ldr	r3, [pc, #728]	; (80076b8 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 80073e0:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80073e4:	3324      	adds	r3, #36	; 0x24
 80073e6:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80073ea:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 80073ee:	4618      	mov	r0, r3
 80073f0:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80073f4:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80073f8:	ee09 3a10 	vmov	s18, r3
 80073fc:	f00a ff88 	bl	8012310 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007400:	4640      	mov	r0, r8
 8007402:	f7fb f87f 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8007406:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800740a:	4618      	mov	r0, r3
 800740c:	ee08 3a10 	vmov	s16, r3
 8007410:	f7fb f878 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
 8007414:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007418:	4618      	mov	r0, r3
 800741a:	ee08 3a90 	vmov	s17, r3
 800741e:	f7fb f871 	bl	8002504 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007422:	4aa6      	ldr	r2, [pc, #664]	; (80076bc <_ZN20Project_InfoViewBaseC1Ev+0x374>)
 8007424:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007428:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 800742c:	4aa4      	ldr	r2, [pc, #656]	; (80076c0 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800742e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007432:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 8007436:	f504 7024 	add.w	r0, r4, #656	; 0x290
 800743a:	f00b fe25 	bl	8013088 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800743e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007442:	462a      	mov	r2, r5
 8007444:	4658      	mov	r0, fp
 8007446:	9300      	str	r3, [sp, #0]
 8007448:	4629      	mov	r1, r5
 800744a:	23f0      	movs	r3, #240	; 0xf0
 800744c:	f7fb f834 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007450:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007452:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007456:	66a3      	str	r3, [r4, #104]	; 0x68
 8007458:	4659      	mov	r1, fp
 800745a:	4630      	mov	r0, r6
 800745c:	f008 f888 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007460:	462a      	mov	r2, r5
 8007462:	4650      	mov	r0, sl
 8007464:	4629      	mov	r1, r5
 8007466:	f7fb f81a 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 800746a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800746c:	4650      	mov	r0, sl
 800746e:	a90a      	add	r1, sp, #40	; 0x28
 8007470:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007474:	f00a fe0b 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007478:	4651      	mov	r1, sl
 800747a:	4630      	mov	r0, r6
 800747c:	f008 f878 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8007480:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007484:	2156      	movs	r1, #86	; 0x56
 8007486:	4648      	mov	r0, r9
 8007488:	f7fb f809 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 800748c:	f8d4 2098 	ldr.w	r2, [r4, #152]	; 0x98
        linespace = space;
 8007490:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007494:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8007498:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 800749c:	4650      	mov	r0, sl
 800749e:	f8d2 2084 	ldr.w	r2, [r2, #132]	; 0x84
        color = newColor;
 80074a2:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80074a6:	4649      	mov	r1, r9
 80074a8:	4790      	blx	r2
 80074aa:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80074ae:	f104 0cd4 	add.w	ip, r4, #212	; 0xd4
 80074b2:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80074b6:	4a83      	ldr	r2, [pc, #524]	; (80076c4 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 80074b8:	6812      	ldr	r2, [r2, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 80074ba:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 80074be:	2309      	movs	r3, #9
 80074c0:	b92a      	cbnz	r2, 80074ce <_ZN20Project_InfoViewBaseC1Ev+0x186>
 80074c2:	4b81      	ldr	r3, [pc, #516]	; (80076c8 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 80074c4:	4a81      	ldr	r2, [pc, #516]	; (80076cc <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 80074c6:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80074c8:	4881      	ldr	r0, [pc, #516]	; (80076d0 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
 80074ca:	f020 fe39 	bl	8028140 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80074ce:	4a81      	ldr	r2, [pc, #516]	; (80076d4 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80074d0:	8812      	ldrh	r2, [r2, #0]
 80074d2:	2a09      	cmp	r2, #9
 80074d4:	d803      	bhi.n	80074de <_ZN20Project_InfoViewBaseC1Ev+0x196>
 80074d6:	4b80      	ldr	r3, [pc, #512]	; (80076d8 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 80074d8:	4a7c      	ldr	r2, [pc, #496]	; (80076cc <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 80074da:	2161      	movs	r1, #97	; 0x61
 80074dc:	e7f4      	b.n	80074c8 <_ZN20Project_InfoViewBaseC1Ev+0x180>
        return texts->getText(typedTextId);
 80074de:	4619      	mov	r1, r3
 80074e0:	4b7e      	ldr	r3, [pc, #504]	; (80076dc <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 80074e2:	6818      	ldr	r0, [r3, #0]
 80074e4:	f000 fb1c 	bl	8007b20 <_ZNK8touchgfx5Texts7getTextEt>
 80074e8:	4a7d      	ldr	r2, [pc, #500]	; (80076e0 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 80074ea:	4603      	mov	r3, r0
 80074ec:	2104      	movs	r1, #4
 80074ee:	4650      	mov	r0, sl
 80074f0:	f010 fc3a 	bl	8017d68 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80074f4:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 80074f8:	4648      	mov	r0, r9
 80074fa:	f00a f9cd 	bl	8011898 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80074fe:	f04f 0a0a 	mov.w	sl, #10
 8007502:	4b78      	ldr	r3, [pc, #480]	; (80076e4 <_ZN20Project_InfoViewBaseC1Ev+0x39c>)
 8007504:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8007506:	a90a      	add	r1, sp, #40	; 0x28
 8007508:	4648      	mov	r0, r9
 800750a:	f8ad a02c 	strh.w	sl, [sp, #44]	; 0x2c
 800750e:	f00a f9e3 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007512:	4649      	mov	r1, r9
 8007514:	4630      	mov	r0, r6
 8007516:	f008 f82b 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800751a:	23f0      	movs	r3, #240	; 0xf0
 800751c:	2232      	movs	r2, #50	; 0x32
 800751e:	4629      	mov	r1, r5
 8007520:	4638      	mov	r0, r7
 8007522:	f8cd a000 	str.w	sl, [sp]
 8007526:	f7fa ffc7 	bl	80024b8 <_ZN8touchgfx8Drawable11setPositionEssss>
 800752a:	9b03      	ldr	r3, [sp, #12]
 800752c:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007530:	22a0      	movs	r2, #160	; 0xa0
 8007532:	4611      	mov	r1, r2
 8007534:	4638      	mov	r0, r7
 8007536:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 800753a:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800753e:	f009 fd85 	bl	801104c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007542:	22a0      	movs	r2, #160	; 0xa0
 8007544:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007548:	4638      	mov	r0, r7
 800754a:	f009 fd8a 	bl	8011062 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800754e:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8007552:	2b20      	cmp	r3, #32
 8007554:	d005      	beq.n	8007562 <_ZN20Project_InfoViewBaseC1Ev+0x21a>
        lineWidthQ5 = widthQ5;
 8007556:	2320      	movs	r3, #32
 8007558:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 800755c:	4638      	mov	r0, r7
 800755e:	f009 fc7f 	bl	8010e60 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007562:	4638      	mov	r0, r7
 8007564:	2101      	movs	r1, #1
 8007566:	f009 fd87 	bl	8011078 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800756a:	4639      	mov	r1, r7
 800756c:	4630      	mov	r0, r6
 800756e:	f007 ffff 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007572:	ee19 0a10 	vmov	r0, s18
 8007576:	22f0      	movs	r2, #240	; 0xf0
 8007578:	2121      	movs	r1, #33	; 0x21
 800757a:	f7fa ff90 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 800757e:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007580:	aa0a      	add	r2, sp, #40	; 0x28
 8007582:	a909      	add	r1, sp, #36	; 0x24
 8007584:	ee19 0a10 	vmov	r0, s18
 8007588:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800758c:	2302      	movs	r3, #2
 800758e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007592:	f00a fb86 	bl	8011ca2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007596:	2339      	movs	r3, #57	; 0x39
        updateTextPosition();
 8007598:	ee19 0a10 	vmov	r0, s18
 800759c:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 80075a0:	f7fa ffd2 	bl	8002548 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80075a4:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 80075a8:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 80075ac:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 80075b0:	ee19 1a10 	vmov	r1, s18
 80075b4:	4630      	mov	r0, r6
        colorPressed = col;
 80075b6:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 80075ba:	ad04      	add	r5, sp, #16
 80075bc:	f007 ffd8 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80075c0:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 80075c4:	225b      	movs	r2, #91	; 0x5b
 80075c6:	4640      	mov	r0, r8
 80075c8:	2105      	movs	r1, #5
 80075ca:	f7fa ff68 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80075ce:	4641      	mov	r1, r8
 80075d0:	4628      	mov	r0, r5
        color = newColor;
 80075d2:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80075d6:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80075da:	f009 fee3 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80075de:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80075e2:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80075e6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80075ea:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80076e4 <_ZN20Project_InfoViewBaseC1Ev+0x39c>
 80075ee:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80075f2:	233a      	movs	r3, #58	; 0x3a
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 80075f4:	a90a      	add	r1, sp, #40	; 0x28
 80075f6:	4640      	mov	r0, r8
 80075f8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80075fc:	f00a f96c 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007600:	4641      	mov	r1, r8
 8007602:	4630      	mov	r0, r6
 8007604:	f007 ffb4 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8007608:	ee18 0a10 	vmov	r0, s16
 800760c:	2223      	movs	r2, #35	; 0x23
 800760e:	2145      	movs	r1, #69	; 0x45
 8007610:	f7fa ff45 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8007614:	ee18 1a10 	vmov	r1, s16
 8007618:	4628      	mov	r0, r5
        color = newColor;
 800761a:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 800761e:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8007622:	f009 febf 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007626:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800762a:	ee18 3a10 	vmov	r3, s16
 800762e:	333c      	adds	r3, #60	; 0x3c
 8007630:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007634:	233c      	movs	r3, #60	; 0x3c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8007636:	ee18 0a10 	vmov	r0, s16
 800763a:	a90a      	add	r1, sp, #40	; 0x28
 800763c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007640:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007644:	f00a f948 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007648:	ee18 1a10 	vmov	r1, s16
 800764c:	4630      	mov	r0, r6
 800764e:	f007 ff8f 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007652:	ee18 0a90 	vmov	r0, s17
 8007656:	220c      	movs	r2, #12
 8007658:	2136      	movs	r1, #54	; 0x36
 800765a:	f7fa ff20 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 800765e:	ee18 1a90 	vmov	r1, s17
 8007662:	4628      	mov	r0, r5
        color = newColor;
 8007664:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8007668:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 800766c:	f009 fe9a 	bl	80113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007670:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007674:	ee18 3a90 	vmov	r3, s17
 8007678:	333c      	adds	r3, #60	; 0x3c
 800767a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800767e:	233b      	movs	r3, #59	; 0x3b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8007680:	ee18 0a90 	vmov	r0, s17
 8007684:	a90a      	add	r1, sp, #40	; 0x28
 8007686:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800768a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800768e:	f00a f923 	bl	80118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007692:	4630      	mov	r0, r6
 8007694:	ee18 1a90 	vmov	r1, s17
 8007698:	f007 ff6a 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800769c:	4620      	mov	r0, r4
 800769e:	b00d      	add	sp, #52	; 0x34
 80076a0:	ecbd 8b04 	vpop	{d8-d9}
 80076a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80076a8:	0802b944 	.word	0x0802b944
 80076ac:	0802c68c 	.word	0x0802c68c
 80076b0:	0802c854 	.word	0x0802c854
 80076b4:	08029d5c 	.word	0x08029d5c
 80076b8:	0802c3c0 	.word	0x0802c3c0
 80076bc:	0802b92c 	.word	0x0802b92c
 80076c0:	08007331 	.word	0x08007331
 80076c4:	20013814 	.word	0x20013814
 80076c8:	08029b9c 	.word	0x08029b9c
 80076cc:	08029c9e 	.word	0x08029c9e
 80076d0:	08029c19 	.word	0x08029c19
 80076d4:	20013818 	.word	0x20013818
 80076d8:	08029c60 	.word	0x08029c60
 80076dc:	20013820 	.word	0x20013820
 80076e0:	08029cd6 	.word	0x08029cd6
 80076e4:	08029d4c 	.word	0x08029d4c

080076e8 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 80076e8:	4770      	bx	lr

080076ea <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 80076ea:	4770      	bx	lr

080076ec <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 80076ec:	b510      	push	{r4, lr}
}
 80076ee:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 80076f0:	4604      	mov	r4, r0
}
 80076f2:	f01f ff34 	bl	802755e <_ZdlPvj>
 80076f6:	4620      	mov	r0, r4
 80076f8:	bd10      	pop	{r4, pc}
	...

080076fc <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 80076fc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007700:	4604      	mov	r4, r0
 8007702:	4626      	mov	r6, r4
 8007704:	f00e fe4c 	bl	80163a0 <_ZN8touchgfx6ScreenC1Ev>
 8007708:	2500      	movs	r5, #0
 800770a:	4b2e      	ldr	r3, [pc, #184]	; (80077c4 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 800770c:	63e5      	str	r5, [r4, #60]	; 0x3c
 800770e:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8007712:	4b2d      	ldr	r3, [pc, #180]	; (80077c8 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8007714:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8007716:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 800771a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800771e:	23ff      	movs	r3, #255	; 0xff
 8007720:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8007724:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8007728:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 800772c:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8007730:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8007734:	4a25      	ldr	r2, [pc, #148]	; (80077cc <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8007736:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800773a:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 800773e:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8007740:	a901      	add	r1, sp, #4
 8007742:	4638      	mov	r0, r7
 8007744:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8007748:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 800774c:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8007750:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8007754:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8007758:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 800775c:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8007760:	66a5      	str	r5, [r4, #104]	; 0x68
 8007762:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007766:	f00a fc92 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 800776a:	462a      	mov	r2, r5
 800776c:	4629      	mov	r1, r5
 800776e:	4630      	mov	r0, r6
 8007770:	f7fa fe95 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8007774:	4630      	mov	r0, r6
 8007776:	21f0      	movs	r1, #240	; 0xf0
 8007778:	f7f9 fce2 	bl	8001140 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 800777c:	4630      	mov	r0, r6
 800777e:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8007782:	f7f9 fcdf 	bl	8001144 <_ZN8touchgfx8Drawable9setHeightEs>
 8007786:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 800778a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800778e:	66a3      	str	r3, [r4, #104]	; 0x68
 8007790:	4631      	mov	r1, r6
 8007792:	4640      	mov	r0, r8
 8007794:	f007 feec 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8007798:	462a      	mov	r2, r5
 800779a:	4638      	mov	r0, r7
 800779c:	f06f 0102 	mvn.w	r1, #2
 80077a0:	f7fa fe7d 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 80077a4:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 80077a6:	a901      	add	r1, sp, #4
 80077a8:	4638      	mov	r0, r7
 80077aa:	f8ad 3004 	strh.w	r3, [sp, #4]
 80077ae:	f00a fc6e 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80077b2:	4640      	mov	r0, r8
 80077b4:	4639      	mov	r1, r7
 80077b6:	f007 fedb 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80077ba:	4620      	mov	r0, r4
 80077bc:	b002      	add	sp, #8
 80077be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80077c2:	bf00      	nop
 80077c4:	0802b978 	.word	0x0802b978
 80077c8:	0802c68c 	.word	0x0802c68c
 80077cc:	0802c854 	.word	0x0802c854

080077d0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80077d0:	4770      	bx	lr
	...

080077d4 <_Z23getFont_verdana_10_4bppv>:
{
 80077d4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80077d6:	4d17      	ldr	r5, [pc, #92]	; (8007834 <_Z23getFont_verdana_10_4bppv+0x60>)
 80077d8:	682c      	ldr	r4, [r5, #0]
 80077da:	f3bf 8f5b 	dmb	ish
 80077de:	f014 0401 	ands.w	r4, r4, #1
{
 80077e2:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80077e4:	d122      	bne.n	800782c <_Z23getFont_verdana_10_4bppv+0x58>
 80077e6:	4628      	mov	r0, r5
 80077e8:	f01f febb 	bl	8027562 <__cxa_guard_acquire>
 80077ec:	b1f0      	cbz	r0, 800782c <_Z23getFont_verdana_10_4bppv+0x58>
 80077ee:	233f      	movs	r3, #63	; 0x3f
 80077f0:	9309      	str	r3, [sp, #36]	; 0x24
 80077f2:	4b11      	ldr	r3, [pc, #68]	; (8007838 <_Z23getFont_verdana_10_4bppv+0x64>)
 80077f4:	9308      	str	r3, [sp, #32]
 80077f6:	4b11      	ldr	r3, [pc, #68]	; (800783c <_Z23getFont_verdana_10_4bppv+0x68>)
 80077f8:	9307      	str	r3, [sp, #28]
 80077fa:	2301      	movs	r3, #1
 80077fc:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007800:	9304      	str	r3, [sp, #16]
 8007802:	2304      	movs	r3, #4
 8007804:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007808:	230a      	movs	r3, #10
 800780a:	490d      	ldr	r1, [pc, #52]	; (8007840 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800780c:	9300      	str	r3, [sp, #0]
 800780e:	225f      	movs	r2, #95	; 0x5f
 8007810:	230c      	movs	r3, #12
 8007812:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007816:	480b      	ldr	r0, [pc, #44]	; (8007844 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007818:	940a      	str	r4, [sp, #40]	; 0x28
 800781a:	9401      	str	r4, [sp, #4]
 800781c:	f7fd fbbe 	bl	8004f9c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007820:	4809      	ldr	r0, [pc, #36]	; (8007848 <_Z23getFont_verdana_10_4bppv+0x74>)
 8007822:	f020 fcab 	bl	802817c <atexit>
 8007826:	4628      	mov	r0, r5
 8007828:	f01f fea7 	bl	802757a <__cxa_guard_release>
    return verdana_10_4bpp;
}
 800782c:	4805      	ldr	r0, [pc, #20]	; (8007844 <_Z23getFont_verdana_10_4bppv+0x70>)
 800782e:	b00f      	add	sp, #60	; 0x3c
 8007830:	bd30      	pop	{r4, r5, pc}
 8007832:	bf00      	nop
 8007834:	200028dc 	.word	0x200028dc
 8007838:	0802f5f8 	.word	0x0802f5f8
 800783c:	0802f6d8 	.word	0x0802f6d8
 8007840:	0802ec50 	.word	0x0802ec50
 8007844:	200028e0 	.word	0x200028e0
 8007848:	080077d1 	.word	0x080077d1

0800784c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 33, 15, 12, 0, 0, 4, 1, 0, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800784c:	4770      	bx	lr
	...

08007850 <_Z23getFont_verdana_12_4bppv>:
{
 8007850:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 33, 15, 12, 0, 0, 4, 1, 0, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007852:	4d17      	ldr	r5, [pc, #92]	; (80078b0 <_Z23getFont_verdana_12_4bppv+0x60>)
 8007854:	682c      	ldr	r4, [r5, #0]
 8007856:	f3bf 8f5b 	dmb	ish
 800785a:	f014 0401 	ands.w	r4, r4, #1
{
 800785e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 33, 15, 12, 0, 0, 4, 1, 0, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007860:	d122      	bne.n	80078a8 <_Z23getFont_verdana_12_4bppv+0x58>
 8007862:	4628      	mov	r0, r5
 8007864:	f01f fe7d 	bl	8027562 <__cxa_guard_acquire>
 8007868:	b1f0      	cbz	r0, 80078a8 <_Z23getFont_verdana_12_4bppv+0x58>
 800786a:	233f      	movs	r3, #63	; 0x3f
 800786c:	9309      	str	r3, [sp, #36]	; 0x24
 800786e:	4b11      	ldr	r3, [pc, #68]	; (80078b4 <_Z23getFont_verdana_12_4bppv+0x64>)
 8007870:	9308      	str	r3, [sp, #32]
 8007872:	4b11      	ldr	r3, [pc, #68]	; (80078b8 <_Z23getFont_verdana_12_4bppv+0x68>)
 8007874:	9307      	str	r3, [sp, #28]
 8007876:	2301      	movs	r3, #1
 8007878:	e9cd 4305 	strd	r4, r3, [sp, #20]
 800787c:	9304      	str	r3, [sp, #16]
 800787e:	2304      	movs	r3, #4
 8007880:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007884:	230c      	movs	r3, #12
 8007886:	490d      	ldr	r1, [pc, #52]	; (80078bc <_Z23getFont_verdana_12_4bppv+0x6c>)
 8007888:	9300      	str	r3, [sp, #0]
 800788a:	2221      	movs	r2, #33	; 0x21
 800788c:	230f      	movs	r3, #15
 800788e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007892:	480b      	ldr	r0, [pc, #44]	; (80078c0 <_Z23getFont_verdana_12_4bppv+0x70>)
 8007894:	940a      	str	r4, [sp, #40]	; 0x28
 8007896:	9401      	str	r4, [sp, #4]
 8007898:	f7fd fb80 	bl	8004f9c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800789c:	4809      	ldr	r0, [pc, #36]	; (80078c4 <_Z23getFont_verdana_12_4bppv+0x74>)
 800789e:	f020 fc6d 	bl	802817c <atexit>
 80078a2:	4628      	mov	r0, r5
 80078a4:	f01f fe69 	bl	802757a <__cxa_guard_release>
    return verdana_12_4bpp;
}
 80078a8:	4805      	ldr	r0, [pc, #20]	; (80078c0 <_Z23getFont_verdana_12_4bppv+0x70>)
 80078aa:	b00f      	add	sp, #60	; 0x3c
 80078ac:	bd30      	pop	{r4, r5, pc}
 80078ae:	bf00      	nop
 80078b0:	2000290c 	.word	0x2000290c
 80078b4:	0802f62c 	.word	0x0802f62c
 80078b8:	0802f6dc 	.word	0x0802f6dc
 80078bc:	0802f184 	.word	0x0802f184
 80078c0:	20002910 	.word	0x20002910
 80078c4:	0800784d 	.word	0x0800784d

080078c8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80078c8:	4770      	bx	lr
	...

080078cc <_Z23getFont_verdana_19_4bppv>:
{
 80078cc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80078ce:	4d17      	ldr	r5, [pc, #92]	; (800792c <_Z23getFont_verdana_19_4bppv+0x60>)
 80078d0:	682c      	ldr	r4, [r5, #0]
 80078d2:	f3bf 8f5b 	dmb	ish
 80078d6:	f014 0401 	ands.w	r4, r4, #1
{
 80078da:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80078dc:	d122      	bne.n	8007924 <_Z23getFont_verdana_19_4bppv+0x58>
 80078de:	4628      	mov	r0, r5
 80078e0:	f01f fe3f 	bl	8027562 <__cxa_guard_acquire>
 80078e4:	b1f0      	cbz	r0, 8007924 <_Z23getFont_verdana_19_4bppv+0x58>
 80078e6:	233f      	movs	r3, #63	; 0x3f
 80078e8:	9309      	str	r3, [sp, #36]	; 0x24
 80078ea:	4b11      	ldr	r3, [pc, #68]	; (8007930 <_Z23getFont_verdana_19_4bppv+0x64>)
 80078ec:	9308      	str	r3, [sp, #32]
 80078ee:	4b11      	ldr	r3, [pc, #68]	; (8007934 <_Z23getFont_verdana_19_4bppv+0x68>)
 80078f0:	9307      	str	r3, [sp, #28]
 80078f2:	2301      	movs	r3, #1
 80078f4:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80078f8:	9304      	str	r3, [sp, #16]
 80078fa:	2304      	movs	r3, #4
 80078fc:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007900:	2313      	movs	r3, #19
 8007902:	490d      	ldr	r1, [pc, #52]	; (8007938 <_Z23getFont_verdana_19_4bppv+0x6c>)
 8007904:	9300      	str	r3, [sp, #0]
 8007906:	222f      	movs	r2, #47	; 0x2f
 8007908:	2317      	movs	r3, #23
 800790a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800790e:	480b      	ldr	r0, [pc, #44]	; (800793c <_Z23getFont_verdana_19_4bppv+0x70>)
 8007910:	940a      	str	r4, [sp, #40]	; 0x28
 8007912:	9401      	str	r4, [sp, #4]
 8007914:	f7fd fb42 	bl	8004f9c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007918:	4809      	ldr	r0, [pc, #36]	; (8007940 <_Z23getFont_verdana_19_4bppv+0x74>)
 800791a:	f020 fc2f 	bl	802817c <atexit>
 800791e:	4628      	mov	r0, r5
 8007920:	f01f fe2b 	bl	802757a <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8007924:	4805      	ldr	r0, [pc, #20]	; (800793c <_Z23getFont_verdana_19_4bppv+0x70>)
 8007926:	b00f      	add	sp, #60	; 0x3c
 8007928:	bd30      	pop	{r4, r5, pc}
 800792a:	bf00      	nop
 800792c:	2000293c 	.word	0x2000293c
 8007930:	0802f630 	.word	0x0802f630
 8007934:	0802f6e0 	.word	0x0802f6e0
 8007938:	0802f354 	.word	0x0802f354
 800793c:	20002940 	.word	0x20002940
 8007940:	080078c9 	.word	0x080078c9

08007944 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007944:	4770      	bx	lr
	...

08007948 <_Z23getFont_verdana_40_4bppv>:
{
 8007948:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800794a:	4d16      	ldr	r5, [pc, #88]	; (80079a4 <_Z23getFont_verdana_40_4bppv+0x5c>)
 800794c:	682c      	ldr	r4, [r5, #0]
 800794e:	f3bf 8f5b 	dmb	ish
 8007952:	f014 0401 	ands.w	r4, r4, #1
{
 8007956:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007958:	d120      	bne.n	800799c <_Z23getFont_verdana_40_4bppv+0x54>
 800795a:	4628      	mov	r0, r5
 800795c:	f01f fe01 	bl	8027562 <__cxa_guard_acquire>
 8007960:	b1e0      	cbz	r0, 800799c <_Z23getFont_verdana_40_4bppv+0x54>
 8007962:	233f      	movs	r3, #63	; 0x3f
 8007964:	9309      	str	r3, [sp, #36]	; 0x24
 8007966:	4b10      	ldr	r3, [pc, #64]	; (80079a8 <_Z23getFont_verdana_40_4bppv+0x60>)
 8007968:	9308      	str	r3, [sp, #32]
 800796a:	4b10      	ldr	r3, [pc, #64]	; (80079ac <_Z23getFont_verdana_40_4bppv+0x64>)
 800796c:	4910      	ldr	r1, [pc, #64]	; (80079b0 <_Z23getFont_verdana_40_4bppv+0x68>)
 800796e:	4811      	ldr	r0, [pc, #68]	; (80079b4 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8007970:	940a      	str	r4, [sp, #40]	; 0x28
 8007972:	2201      	movs	r2, #1
 8007974:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8007978:	2304      	movs	r3, #4
 800797a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800797e:	2328      	movs	r3, #40	; 0x28
 8007980:	9300      	str	r3, [sp, #0]
 8007982:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007986:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800798a:	9405      	str	r4, [sp, #20]
 800798c:	f7fd fb06 	bl	8004f9c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007990:	4809      	ldr	r0, [pc, #36]	; (80079b8 <_Z23getFont_verdana_40_4bppv+0x70>)
 8007992:	f020 fbf3 	bl	802817c <atexit>
 8007996:	4628      	mov	r0, r5
 8007998:	f01f fdef 	bl	802757a <__cxa_guard_release>
    return verdana_40_4bpp;
}
 800799c:	4805      	ldr	r0, [pc, #20]	; (80079b4 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800799e:	b00f      	add	sp, #60	; 0x3c
 80079a0:	bd30      	pop	{r4, r5, pc}
 80079a2:	bf00      	nop
 80079a4:	2000296c 	.word	0x2000296c
 80079a8:	0802f6d4 	.word	0x0802f6d4
 80079ac:	0802f6e4 	.word	0x0802f6e4
 80079b0:	0802f5e8 	.word	0x0802f5e8
 80079b4:	20002970 	.word	0x20002970
 80079b8:	08007945 	.word	0x08007945

080079bc <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80079bc:	2000      	movs	r0, #0
 80079be:	4770      	bx	lr

080079c0 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 80079c0:	2000      	movs	r0, #0
 80079c2:	4770      	bx	lr

080079c4 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80079c4:	b40e      	push	{r1, r2, r3}
 80079c6:	b503      	push	{r0, r1, lr}
 80079c8:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80079ca:	2100      	movs	r1, #0
{
 80079cc:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80079d0:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80079d2:	f00e f823 	bl	8015a1c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80079d6:	b002      	add	sp, #8
 80079d8:	f85d eb04 	ldr.w	lr, [sp], #4
 80079dc:	b003      	add	sp, #12
 80079de:	4770      	bx	lr

080079e0 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80079e0:	b40c      	push	{r2, r3}
 80079e2:	b507      	push	{r0, r1, r2, lr}
 80079e4:	ab04      	add	r3, sp, #16
 80079e6:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80079ea:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80079ec:	f00e f816 	bl	8015a1c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80079f0:	b003      	add	sp, #12
 80079f2:	f85d eb04 	ldr.w	lr, [sp], #4
 80079f6:	b002      	add	sp, #8
 80079f8:	4770      	bx	lr
	...

080079fc <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80079fc:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 80079fe:	b510      	push	{r4, lr}
 8007a00:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8007a02:	b373      	cbz	r3, 8007a62 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8007a04:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8007a06:	b92b      	cbnz	r3, 8007a14 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8007a08:	4b18      	ldr	r3, [pc, #96]	; (8007a6c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8007a0a:	4a19      	ldr	r2, [pc, #100]	; (8007a70 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8007a0c:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8007a0e:	4819      	ldr	r0, [pc, #100]	; (8007a74 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8007a10:	f020 fb96 	bl	8028140 <__assert_func>
            return buffer[pos];
 8007a14:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8007a16:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8007a1a:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8007a1c:	b30b      	cbz	r3, 8007a62 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8007a1e:	f00f fbfa 	bl	8017216 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8007a22:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8007a24:	2b01      	cmp	r3, #1
 8007a26:	d803      	bhi.n	8007a30 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8007a28:	4b13      	ldr	r3, [pc, #76]	; (8007a78 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8007a2a:	4a14      	ldr	r2, [pc, #80]	; (8007a7c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8007a2c:	21cb      	movs	r1, #203	; 0xcb
 8007a2e:	e7ee      	b.n	8007a0e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8007a30:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8007a32:	1c53      	adds	r3, r2, #1
 8007a34:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8007a36:	2b09      	cmp	r3, #9
 8007a38:	4619      	mov	r1, r3
 8007a3a:	bf88      	it	hi
 8007a3c:	f1a3 010a 	subhi.w	r1, r3, #10
 8007a40:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8007a44:	f640 103f 	movw	r0, #2367	; 0x93f
 8007a48:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8007a4a:	4281      	cmp	r1, r0
 8007a4c:	d109      	bne.n	8007a62 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8007a4e:	2b0a      	cmp	r3, #10
 8007a50:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8007a54:	bf28      	it	cs
 8007a56:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8007a58:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8007a5c:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8007a5e:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8007a60:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8007a62:	4620      	mov	r0, r4
}
 8007a64:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8007a68:	f00f bad8 	b.w	801701c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8007a6c:	0802b9a4 	.word	0x0802b9a4
 8007a70:	0802b9ad 	.word	0x0802b9ad
 8007a74:	0802ba58 	.word	0x0802ba58
 8007a78:	0802baa2 	.word	0x0802baa2
 8007a7c:	0802bab0 	.word	0x0802bab0

08007a80 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8007a80:	f00f ba93 	b.w	8016faa <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08007a84 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8007a84:	b510      	push	{r4, lr}
 8007a86:	b086      	sub	sp, #24
 8007a88:	ac02      	add	r4, sp, #8
 8007a8a:	e884 0006 	stmia.w	r4, {r1, r2}
 8007a8e:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8007a90:	ab0a      	add	r3, sp, #40	; 0x28
 8007a92:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8007a94:	9301      	str	r3, [sp, #4]
 8007a96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007a98:	9300      	str	r3, [sp, #0]
 8007a9a:	4621      	mov	r1, r4
 8007a9c:	9b08      	ldr	r3, [sp, #32]
 8007a9e:	f00c fb81 	bl	80141a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8007aa2:	b006      	add	sp, #24
 8007aa4:	bd10      	pop	{r4, pc}
	...

08007aa8 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8007aa8:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8007aaa:	bb18      	cbnz	r0, 8007af4 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8007aac:	4b12      	ldr	r3, [pc, #72]	; (8007af8 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8007aae:	4813      	ldr	r0, [pc, #76]	; (8007afc <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8007ab0:	681c      	ldr	r4, [r3, #0]
 8007ab2:	4913      	ldr	r1, [pc, #76]	; (8007b00 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8007ab4:	b1b4      	cbz	r4, 8007ae4 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8007ab6:	6822      	ldr	r2, [r4, #0]
 8007ab8:	4422      	add	r2, r4
 8007aba:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8007abc:	6862      	ldr	r2, [r4, #4]
 8007abe:	4422      	add	r2, r4
 8007ac0:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8007ac2:	68a2      	ldr	r2, [r4, #8]
 8007ac4:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8007ac6:	4b0f      	ldr	r3, [pc, #60]	; (8007b04 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8007ac8:	2200      	movs	r2, #0
 8007aca:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8007acc:	f000 f838 	bl	8007b40 <_ZN17TypedTextDatabase8getFontsEv>
 8007ad0:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8007ad2:	f000 f833 	bl	8007b3c <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8007ad6:	4b0c      	ldr	r3, [pc, #48]	; (8007b08 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8007ad8:	601c      	str	r4, [r3, #0]
        fonts = f;
 8007ada:	4b0c      	ldr	r3, [pc, #48]	; (8007b0c <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8007adc:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8007ade:	4b0c      	ldr	r3, [pc, #48]	; (8007b10 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8007ae0:	8018      	strh	r0, [r3, #0]
    }
}
 8007ae2:	e007      	b.n	8007af4 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8007ae4:	4b0b      	ldr	r3, [pc, #44]	; (8007b14 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8007ae6:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8007ae8:	4b0b      	ldr	r3, [pc, #44]	; (8007b18 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8007aea:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8007aec:	4b0b      	ldr	r3, [pc, #44]	; (8007b1c <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8007aee:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8007af0:	2c00      	cmp	r4, #0
 8007af2:	d1e8      	bne.n	8007ac6 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8007af4:	bd38      	pop	{r3, r4, r5, pc}
 8007af6:	bf00      	nop
 8007af8:	2000299c 	.word	0x2000299c
 8007afc:	200029a0 	.word	0x200029a0
 8007b00:	200029a4 	.word	0x200029a4
 8007b04:	200029a8 	.word	0x200029a8
 8007b08:	20013814 	.word	0x20013814
 8007b0c:	2001381c 	.word	0x2001381c
 8007b10:	20013818 	.word	0x20013818
 8007b14:	0802f818 	.word	0x0802f818
 8007b18:	0802f6e8 	.word	0x0802f6e8
 8007b1c:	0802fcec 	.word	0x0802fcec

08007b20 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8007b20:	4b04      	ldr	r3, [pc, #16]	; (8007b34 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8007b22:	681b      	ldr	r3, [r3, #0]
 8007b24:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8007b28:	4b03      	ldr	r3, [pc, #12]	; (8007b38 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8007b2a:	681b      	ldr	r3, [r3, #0]
}
 8007b2c:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8007b30:	4770      	bx	lr
 8007b32:	bf00      	nop
 8007b34:	200029a4 	.word	0x200029a4
 8007b38:	200029a0 	.word	0x200029a0

08007b3c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8007b3c:	204c      	movs	r0, #76	; 0x4c
 8007b3e:	4770      	bx	lr

08007b40 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8007b40:	4800      	ldr	r0, [pc, #0]	; (8007b44 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8007b42:	4770      	bx	lr
 8007b44:	200029ac 	.word	0x200029ac

08007b48 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8007b48:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 8007b4a:	f7ff febf 	bl	80078cc <_Z23getFont_verdana_19_4bppv>
};
 8007b4e:	4c06      	ldr	r4, [pc, #24]	; (8007b68 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8007b50:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8007b52:	f7ff fef9 	bl	8007948 <_Z23getFont_verdana_40_4bppv>
};
 8007b56:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8007b58:	f7ff fe3c 	bl	80077d4 <_Z23getFont_verdana_10_4bppv>
};
 8007b5c:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 8007b5e:	f7ff fe77 	bl	8007850 <_Z23getFont_verdana_12_4bppv>
};
 8007b62:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8007b64:	bd10      	pop	{r4, pc}
 8007b66:	bf00      	nop
 8007b68:	200029ac 	.word	0x200029ac

08007b6c <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 8007b6c:	4770      	bx	lr

08007b6e <_ZThn4_N20CalibrationPresenterD1Ev>:
 8007b6e:	3804      	subs	r0, #4
 8007b70:	4770      	bx	lr

08007b72 <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 8007b72:	4770      	bx	lr

08007b74 <_ZN20CalibrationPresenter15setTimeoutValueEi>:

}

void CalibrationPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8007b74:	68c0      	ldr	r0, [r0, #12]
 8007b76:	6803      	ldr	r3, [r0, #0]
 8007b78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007b7a:	4718      	bx	r3

08007b7c <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8007b7c:	f1a0 0004 	sub.w	r0, r0, #4
 8007b80:	f7ff bff8 	b.w	8007b74 <_ZN20CalibrationPresenter15setTimeoutValueEi>

08007b84 <_ZN20CalibrationPresenterD0Ev>:
    virtual ~CalibrationPresenter() {}
 8007b84:	b510      	push	{r4, lr}
 8007b86:	2110      	movs	r1, #16
 8007b88:	4604      	mov	r4, r0
 8007b8a:	f01f fce8 	bl	802755e <_ZdlPvj>
 8007b8e:	4620      	mov	r0, r4
 8007b90:	bd10      	pop	{r4, pc}

08007b92 <_ZThn4_N20CalibrationPresenterD0Ev>:
 8007b92:	f1a0 0004 	sub.w	r0, r0, #4
 8007b96:	e7f5      	b.n	8007b84 <_ZN20CalibrationPresenterD0Ev>

08007b98 <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 8007b98:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8007b9a:	2200      	movs	r2, #0
 8007b9c:	6082      	str	r2, [r0, #8]
    : view(v)
 8007b9e:	4a04      	ldr	r2, [pc, #16]	; (8007bb0 <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 8007ba0:	60c1      	str	r1, [r0, #12]
 8007ba2:	f102 0408 	add.w	r4, r2, #8
 8007ba6:	3224      	adds	r2, #36	; 0x24
 8007ba8:	6004      	str	r4, [r0, #0]
 8007baa:	6042      	str	r2, [r0, #4]
}
 8007bac:	bd10      	pop	{r4, pc}
 8007bae:	bf00      	nop
 8007bb0:	0802bb84 	.word	0x0802bb84

08007bb4 <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 8007bb4:	4770      	bx	lr
	...

08007bb8 <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 8007bb8:	b510      	push	{r4, lr}
 8007bba:	4b03      	ldr	r3, [pc, #12]	; (8007bc8 <_ZN15CalibrationViewD1Ev+0x10>)
 8007bbc:	6003      	str	r3, [r0, #0]
 8007bbe:	4604      	mov	r4, r0
 8007bc0:	f7fa fbf2 	bl	80023a8 <_ZN19CalibrationViewBaseD1Ev>
 8007bc4:	4620      	mov	r0, r4
 8007bc6:	bd10      	pop	{r4, pc}
 8007bc8:	0802bbc0 	.word	0x0802bbc0

08007bcc <_ZN15CalibrationViewD0Ev>:
 8007bcc:	b510      	push	{r4, lr}
 8007bce:	4604      	mov	r4, r0
 8007bd0:	f7ff fff2 	bl	8007bb8 <_ZN15CalibrationViewD1Ev>
 8007bd4:	4620      	mov	r0, r4
 8007bd6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8007bda:	f01f fcc0 	bl	802755e <_ZdlPvj>
 8007bde:	4620      	mov	r0, r4
 8007be0:	bd10      	pop	{r4, pc}
	...

08007be4 <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 8007be4:	b510      	push	{r4, lr}
 8007be6:	4604      	mov	r4, r0
 8007be8:	f7fa fcf2 	bl	80025d0 <_ZN19CalibrationViewBaseC1Ev>
 8007bec:	4b01      	ldr	r3, [pc, #4]	; (8007bf4 <_ZN15CalibrationViewC1Ev+0x10>)
 8007bee:	6023      	str	r3, [r4, #0]
}
 8007bf0:	4620      	mov	r0, r4
 8007bf2:	bd10      	pop	{r4, pc}
 8007bf4:	0802bbc0 	.word	0x0802bbc0

08007bf8 <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 8007bf8:	f7fa bba3 	b.w	8002342 <_ZN19CalibrationViewBase11setupScreenEv>

08007bfc <_ZN15CalibrationView15setTimeoutValueEi>:

void CalibrationView::setTimeoutValue(int value)
{
 8007bfc:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007bfe:	4a0a      	ldr	r2, [pc, #40]	; (8007c28 <_ZN15CalibrationView15setTimeoutValueEi+0x2c>)
{
 8007c00:	4605      	mov	r5, r0
 8007c02:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007c04:	460b      	mov	r3, r1
 8007c06:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8007c0a:	2104      	movs	r1, #4
 8007c0c:	f010 f8ac 	bl	8017d68 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8007c10:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8007c14:	f00e f82c 	bl	8015c70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8007c18:	b92c      	cbnz	r4, 8007c26 <_ZN15CalibrationView15setTimeoutValueEi+0x2a>
 8007c1a:	f00c ff41 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8007c1e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8007c22:	f7fb be33 	b.w	800388c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8007c26:	bd38      	pop	{r3, r4, r5, pc}
 8007c28:	0802bbb4 	.word	0x0802bbb4

08007c2c <_ZN25Calibration_HallPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_HallPresenter() {}
 8007c2c:	4770      	bx	lr

08007c2e <_ZThn4_N25Calibration_HallPresenterD1Ev>:
 8007c2e:	3804      	subs	r0, #4
 8007c30:	4770      	bx	lr

08007c32 <_ZN25Calibration_HallPresenter10deactivateEv>:
}

void Calibration_HallPresenter::activate()
{

}
 8007c32:	4770      	bx	lr

08007c34 <_ZN25Calibration_HallPresenter15setTimeoutValueEi>:
}

void Calibration_HallPresenter::setTimeoutValue(int value)
{

}
 8007c34:	4770      	bx	lr

08007c36 <_ZN25Calibration_HallPresenterD0Ev>:
 8007c36:	b510      	push	{r4, lr}
 8007c38:	2110      	movs	r1, #16
 8007c3a:	4604      	mov	r4, r0
 8007c3c:	f01f fc8f 	bl	802755e <_ZdlPvj>
 8007c40:	4620      	mov	r0, r4
 8007c42:	bd10      	pop	{r4, pc}

08007c44 <_ZThn4_N25Calibration_HallPresenterD0Ev>:
 8007c44:	f1a0 0004 	sub.w	r0, r0, #4
 8007c48:	e7f5      	b.n	8007c36 <_ZN25Calibration_HallPresenterD0Ev>

08007c4a <_ZThn4_N25Calibration_HallPresenter15setTimeoutValueEi>:
 8007c4a:	4770      	bx	lr

08007c4c <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>:
Calibration_HallPresenter::Calibration_HallPresenter(Calibration_HallView& v)
 8007c4c:	b510      	push	{r4, lr}
 8007c4e:	2200      	movs	r2, #0
 8007c50:	6082      	str	r2, [r0, #8]
    : view(v)
 8007c52:	4a04      	ldr	r2, [pc, #16]	; (8007c64 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView+0x18>)
 8007c54:	60c1      	str	r1, [r0, #12]
 8007c56:	f102 0408 	add.w	r4, r2, #8
 8007c5a:	3224      	adds	r2, #36	; 0x24
 8007c5c:	6004      	str	r4, [r0, #0]
 8007c5e:	6042      	str	r2, [r0, #4]
}
 8007c60:	bd10      	pop	{r4, pc}
 8007c62:	bf00      	nop
 8007c64:	0802bbf0 	.word	0x0802bbf0

08007c68 <_ZN20Calibration_HallView14tearDownScreenEv>:
}

void Calibration_HallView::tearDownScreen()
{
    Calibration_HallViewBase::tearDownScreen();
}
 8007c68:	4770      	bx	lr

08007c6a <_ZN20Calibration_HallView15setTimeoutValueEi>:

void Calibration_HallView::setTimeoutValue(int value)
{

}
 8007c6a:	4770      	bx	lr

08007c6c <_ZN20Calibration_HallViewD1Ev>:

class Calibration_HallView : public Calibration_HallViewBase
{
public:
    Calibration_HallView();
    virtual ~Calibration_HallView() {}
 8007c6c:	b510      	push	{r4, lr}
 8007c6e:	4b03      	ldr	r3, [pc, #12]	; (8007c7c <_ZN20Calibration_HallViewD1Ev+0x10>)
 8007c70:	6003      	str	r3, [r0, #0]
 8007c72:	4604      	mov	r4, r0
 8007c74:	f7fa fef0 	bl	8002a58 <_ZN24Calibration_HallViewBaseD1Ev>
 8007c78:	4620      	mov	r0, r4
 8007c7a:	bd10      	pop	{r4, pc}
 8007c7c:	0802bc28 	.word	0x0802bc28

08007c80 <_ZN20Calibration_HallViewD0Ev>:
 8007c80:	b510      	push	{r4, lr}
 8007c82:	4604      	mov	r4, r0
 8007c84:	f7ff fff2 	bl	8007c6c <_ZN20Calibration_HallViewD1Ev>
 8007c88:	4620      	mov	r0, r4
 8007c8a:	f241 015c 	movw	r1, #4188	; 0x105c
 8007c8e:	f01f fc66 	bl	802755e <_ZdlPvj>
 8007c92:	4620      	mov	r0, r4
 8007c94:	bd10      	pop	{r4, pc}
	...

08007c98 <_ZN20Calibration_HallViewC1Ev>:
Calibration_HallView::Calibration_HallView()
 8007c98:	b510      	push	{r4, lr}
 8007c9a:	4604      	mov	r4, r0
 8007c9c:	f7fa ff04 	bl	8002aa8 <_ZN24Calibration_HallViewBaseC1Ev>
 8007ca0:	4b01      	ldr	r3, [pc, #4]	; (8007ca8 <_ZN20Calibration_HallViewC1Ev+0x10>)
 8007ca2:	6023      	str	r3, [r4, #0]
}
 8007ca4:	4620      	mov	r0, r4
 8007ca6:	bd10      	pop	{r4, pc}
 8007ca8:	0802bc28 	.word	0x0802bc28

08007cac <_ZN20Calibration_HallView11setupScreenEv>:
    Calibration_HallViewBase::setupScreen();
 8007cac:	f7fa beb0 	b.w	8002a10 <_ZN24Calibration_HallViewBase11setupScreenEv>

08007cb0 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 8007cb0:	4770      	bx	lr

08007cb2 <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 8007cb2:	3804      	subs	r0, #4
 8007cb4:	4770      	bx	lr

08007cb6 <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 8007cb6:	4770      	bx	lr

08007cb8 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 8007cb8:	4770      	bx	lr

08007cba <_ZN24Calibration_PadPresenterD0Ev>:
 8007cba:	b510      	push	{r4, lr}
 8007cbc:	2110      	movs	r1, #16
 8007cbe:	4604      	mov	r4, r0
 8007cc0:	f01f fc4d 	bl	802755e <_ZdlPvj>
 8007cc4:	4620      	mov	r0, r4
 8007cc6:	bd10      	pop	{r4, pc}

08007cc8 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 8007cc8:	f1a0 0004 	sub.w	r0, r0, #4
 8007ccc:	e7f5      	b.n	8007cba <_ZN24Calibration_PadPresenterD0Ev>

08007cce <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 8007cce:	4770      	bx	lr

08007cd0 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 8007cd0:	b510      	push	{r4, lr}
 8007cd2:	2200      	movs	r2, #0
 8007cd4:	6082      	str	r2, [r0, #8]
    : view(v)
 8007cd6:	4a04      	ldr	r2, [pc, #16]	; (8007ce8 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 8007cd8:	60c1      	str	r1, [r0, #12]
 8007cda:	f102 0408 	add.w	r4, r2, #8
 8007cde:	3224      	adds	r2, #36	; 0x24
 8007ce0:	6004      	str	r4, [r0, #0]
 8007ce2:	6042      	str	r2, [r0, #4]
}
 8007ce4:	bd10      	pop	{r4, pc}
 8007ce6:	bf00      	nop
 8007ce8:	0802bc58 	.word	0x0802bc58

08007cec <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 8007cec:	4770      	bx	lr

08007cee <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 8007cee:	4770      	bx	lr

08007cf0 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 8007cf0:	b510      	push	{r4, lr}
 8007cf2:	4b03      	ldr	r3, [pc, #12]	; (8007d00 <_ZN19Calibration_PadViewD1Ev+0x10>)
 8007cf4:	6003      	str	r3, [r0, #0]
 8007cf6:	4604      	mov	r4, r0
 8007cf8:	f7fb f85e 	bl	8002db8 <_ZN23Calibration_PadViewBaseD1Ev>
 8007cfc:	4620      	mov	r0, r4
 8007cfe:	bd10      	pop	{r4, pc}
 8007d00:	0802bc90 	.word	0x0802bc90

08007d04 <_ZN19Calibration_PadViewD0Ev>:
 8007d04:	b510      	push	{r4, lr}
 8007d06:	4604      	mov	r4, r0
 8007d08:	f7ff fff2 	bl	8007cf0 <_ZN19Calibration_PadViewD1Ev>
 8007d0c:	4620      	mov	r0, r4
 8007d0e:	f241 015c 	movw	r1, #4188	; 0x105c
 8007d12:	f01f fc24 	bl	802755e <_ZdlPvj>
 8007d16:	4620      	mov	r0, r4
 8007d18:	bd10      	pop	{r4, pc}
	...

08007d1c <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 8007d1c:	b510      	push	{r4, lr}
 8007d1e:	4604      	mov	r4, r0
 8007d20:	f7fb f872 	bl	8002e08 <_ZN23Calibration_PadViewBaseC1Ev>
 8007d24:	4b01      	ldr	r3, [pc, #4]	; (8007d2c <_ZN19Calibration_PadViewC1Ev+0x10>)
 8007d26:	6023      	str	r3, [r4, #0]
}
 8007d28:	4620      	mov	r0, r4
 8007d2a:	bd10      	pop	{r4, pc}
 8007d2c:	0802bc90 	.word	0x0802bc90

08007d30 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 8007d30:	f7fb b81e 	b.w	8002d70 <_ZN23Calibration_PadViewBase11setupScreenEv>

08007d34 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8007d34:	4770      	bx	lr

08007d36 <_ZN19FrontendApplicationD0Ev>:
 8007d36:	b510      	push	{r4, lr}
 8007d38:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8007d3c:	4604      	mov	r4, r0
 8007d3e:	f01f fc0e 	bl	802755e <_ZdlPvj>
 8007d42:	4620      	mov	r0, r4
 8007d44:	bd10      	pop	{r4, pc}

08007d46 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8007d46:	b510      	push	{r4, lr}
 8007d48:	4604      	mov	r4, r0
    {
        model.tick();
 8007d4a:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 8007d4e:	f000 fabf 	bl	80082d0 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8007d52:	4620      	mov	r0, r4
    }
 8007d54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8007d58:	f00c bf66 	b.w	8014c28 <_ZN8touchgfx11Application15handleTickEventEv>

08007d5c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8007d5c:	b510      	push	{r4, lr}
 8007d5e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8007d60:	f7fb fc64 	bl	800362c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8007d64:	4b01      	ldr	r3, [pc, #4]	; (8007d6c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8007d66:	6023      	str	r3, [r4, #0]
{

}
 8007d68:	4620      	mov	r0, r4
 8007d6a:	bd10      	pop	{r4, pc}
 8007d6c:	0802bcc8 	.word	0x0802bcc8

08007d70 <_ZN17Gauge_with_ValuesD1Ev>:
 8007d70:	b510      	push	{r4, lr}
 8007d72:	4b03      	ldr	r3, [pc, #12]	; (8007d80 <_ZN17Gauge_with_ValuesD1Ev+0x10>)
 8007d74:	6003      	str	r3, [r0, #0]
 8007d76:	4604      	mov	r4, r0
 8007d78:	f7fc ff5e 	bl	8004c38 <_ZN21Gauge_with_ValuesBaseD1Ev>
 8007d7c:	4620      	mov	r0, r4
 8007d7e:	bd10      	pop	{r4, pc}
 8007d80:	0802bd1c 	.word	0x0802bd1c

08007d84 <_ZN17Gauge_with_ValuesD0Ev>:
 8007d84:	b510      	push	{r4, lr}
 8007d86:	4604      	mov	r4, r0
 8007d88:	f7ff fff2 	bl	8007d70 <_ZN17Gauge_with_ValuesD1Ev>
 8007d8c:	4620      	mov	r0, r4
 8007d8e:	f44f 7162 	mov.w	r1, #904	; 0x388
 8007d92:	f01f fbe4 	bl	802755e <_ZdlPvj>
 8007d96:	4620      	mov	r0, r4
 8007d98:	bd10      	pop	{r4, pc}
	...

08007d9c <_ZN17Gauge_with_ValuesC1Ev>:
#include <gui/containers/Gauge_with_Values.hpp>

Gauge_with_Values::Gauge_with_Values()
 8007d9c:	b510      	push	{r4, lr}
 8007d9e:	4604      	mov	r4, r0
 8007da0:	f7fc ff54 	bl	8004c4c <_ZN21Gauge_with_ValuesBaseC1Ev>
 8007da4:	4b01      	ldr	r3, [pc, #4]	; (8007dac <_ZN17Gauge_with_ValuesC1Ev+0x10>)
 8007da6:	6023      	str	r3, [r4, #0]
{

}
 8007da8:	4620      	mov	r0, r4
 8007daa:	bd10      	pop	{r4, pc}
 8007dac:	0802bd1c 	.word	0x0802bd1c

08007db0 <_ZN17Gauge_with_Values10initializeEv>:

void Gauge_with_Values::initialize()
{
    Gauge_with_ValuesBase::initialize();
 8007db0:	f7fc bf43 	b.w	8004c3a <_ZN21Gauge_with_ValuesBase10initializeEv>

08007db4 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8007db4:	4770      	bx	lr

08007db6 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 8007db6:	3804      	subs	r0, #4
 8007db8:	4770      	bx	lr

08007dba <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 8007dba:	4770      	bx	lr

08007dbc <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8007dbc:	68c0      	ldr	r0, [r0, #12]
 8007dbe:	6803      	ldr	r3, [r0, #0]
 8007dc0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007dc2:	4718      	bx	r3

08007dc4 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8007dc4:	f1a0 0004 	sub.w	r0, r0, #4
 8007dc8:	f7ff bff8 	b.w	8007dbc <_ZN18Main_MenuPresenter15setTimeoutValueEi>

08007dcc <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 8007dcc:	b510      	push	{r4, lr}
 8007dce:	2110      	movs	r1, #16
 8007dd0:	4604      	mov	r4, r0
 8007dd2:	f01f fbc4 	bl	802755e <_ZdlPvj>
 8007dd6:	4620      	mov	r0, r4
 8007dd8:	bd10      	pop	{r4, pc}

08007dda <_ZThn4_N18Main_MenuPresenterD0Ev>:
 8007dda:	f1a0 0004 	sub.w	r0, r0, #4
 8007dde:	e7f5      	b.n	8007dcc <_ZN18Main_MenuPresenterD0Ev>

08007de0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 8007de0:	b510      	push	{r4, lr}
 8007de2:	2200      	movs	r2, #0
 8007de4:	6082      	str	r2, [r0, #8]
    : view(v)
 8007de6:	4a04      	ldr	r2, [pc, #16]	; (8007df8 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8007de8:	60c1      	str	r1, [r0, #12]
 8007dea:	f102 0408 	add.w	r4, r2, #8
 8007dee:	3224      	adds	r2, #36	; 0x24
 8007df0:	6004      	str	r4, [r0, #0]
 8007df2:	6042      	str	r2, [r0, #4]
}
 8007df4:	bd10      	pop	{r4, pc}
 8007df6:	bf00      	nop
 8007df8:	0802bda8 	.word	0x0802bda8

08007dfc <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 8007dfc:	4770      	bx	lr
	...

08007e00 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8007e00:	b510      	push	{r4, lr}
 8007e02:	4b03      	ldr	r3, [pc, #12]	; (8007e10 <_ZN13Main_MenuViewD1Ev+0x10>)
 8007e04:	6003      	str	r3, [r0, #0]
 8007e06:	4604      	mov	r4, r0
 8007e08:	f7fd f91c 	bl	8005044 <_ZN17Main_MenuViewBaseD1Ev>
 8007e0c:	4620      	mov	r0, r4
 8007e0e:	bd10      	pop	{r4, pc}
 8007e10:	0802bde0 	.word	0x0802bde0

08007e14 <_ZN13Main_MenuViewD0Ev>:
 8007e14:	b510      	push	{r4, lr}
 8007e16:	4604      	mov	r4, r0
 8007e18:	f7ff fff2 	bl	8007e00 <_ZN13Main_MenuViewD1Ev>
 8007e1c:	4620      	mov	r0, r4
 8007e1e:	f241 117c 	movw	r1, #4476	; 0x117c
 8007e22:	f01f fb9c 	bl	802755e <_ZdlPvj>
 8007e26:	4620      	mov	r0, r4
 8007e28:	bd10      	pop	{r4, pc}
	...

08007e2c <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 8007e2c:	b510      	push	{r4, lr}
 8007e2e:	4604      	mov	r4, r0
 8007e30:	f7fd f952 	bl	80050d8 <_ZN17Main_MenuViewBaseC1Ev>
 8007e34:	4b01      	ldr	r3, [pc, #4]	; (8007e3c <_ZN13Main_MenuViewC1Ev+0x10>)
 8007e36:	6023      	str	r3, [r4, #0]
}
 8007e38:	4620      	mov	r0, r4
 8007e3a:	bd10      	pop	{r4, pc}
 8007e3c:	0802bde0 	.word	0x0802bde0

08007e40 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 8007e40:	f7fd b8dc 	b.w	8004ffc <_ZN17Main_MenuViewBase11setupScreenEv>

08007e44 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 8007e44:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8007e46:	4a0a      	ldr	r2, [pc, #40]	; (8007e70 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 8007e48:	4605      	mov	r5, r0
 8007e4a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8007e4c:	460b      	mov	r3, r1
 8007e4e:	f500 7055 	add.w	r0, r0, #852	; 0x354
 8007e52:	2104      	movs	r1, #4
 8007e54:	f00f ff88 	bl	8017d68 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 8007e58:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8007e5c:	f00d ff08 	bl	8015c70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8007e60:	b92c      	cbnz	r4, 8007e6e <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 8007e62:	f00c fe1d 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8007e66:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8007e6a:	f7fb bd0f 	b.w	800388c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8007e6e:	bd38      	pop	{r3, r4, r5, pc}
 8007e70:	0802bbb4 	.word	0x0802bbb4

08007e74 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 8007e74:	4770      	bx	lr

08007e76 <_ZThn4_N20MeasurementPresenterD1Ev>:
 8007e76:	3804      	subs	r0, #4
 8007e78:	4770      	bx	lr

08007e7a <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 8007e7a:	4770      	bx	lr

08007e7c <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8007e7c:	68c0      	ldr	r0, [r0, #12]
 8007e7e:	6803      	ldr	r3, [r0, #0]
 8007e80:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007e82:	4718      	bx	r3

08007e84 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8007e84:	f1a0 0004 	sub.w	r0, r0, #4
 8007e88:	f7ff bff8 	b.w	8007e7c <_ZN20MeasurementPresenter15setTimeoutValueEi>

08007e8c <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 8007e8c:	b510      	push	{r4, lr}
 8007e8e:	2110      	movs	r1, #16
 8007e90:	4604      	mov	r4, r0
 8007e92:	f01f fb64 	bl	802755e <_ZdlPvj>
 8007e96:	4620      	mov	r0, r4
 8007e98:	bd10      	pop	{r4, pc}

08007e9a <_ZThn4_N20MeasurementPresenterD0Ev>:
 8007e9a:	f1a0 0004 	sub.w	r0, r0, #4
 8007e9e:	e7f5      	b.n	8007e8c <_ZN20MeasurementPresenterD0Ev>

08007ea0 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 8007ea0:	b510      	push	{r4, lr}
 8007ea2:	2200      	movs	r2, #0
 8007ea4:	6082      	str	r2, [r0, #8]
    : view(v)
 8007ea6:	4a04      	ldr	r2, [pc, #16]	; (8007eb8 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 8007ea8:	60c1      	str	r1, [r0, #12]
 8007eaa:	f102 0408 	add.w	r4, r2, #8
 8007eae:	3224      	adds	r2, #36	; 0x24
 8007eb0:	6004      	str	r4, [r0, #0]
 8007eb2:	6042      	str	r2, [r0, #4]
}
 8007eb4:	bd10      	pop	{r4, pc}
 8007eb6:	bf00      	nop
 8007eb8:	0802be10 	.word	0x0802be10

08007ebc <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8007ebc:	4770      	bx	lr
	...

08007ec0 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8007ec0:	b510      	push	{r4, lr}
 8007ec2:	4b03      	ldr	r3, [pc, #12]	; (8007ed0 <_ZN15MeasurementViewD1Ev+0x10>)
 8007ec4:	6003      	str	r3, [r0, #0]
 8007ec6:	4604      	mov	r4, r0
 8007ec8:	f7fd fb76 	bl	80055b8 <_ZN19MeasurementViewBaseD1Ev>
 8007ecc:	4620      	mov	r0, r4
 8007ece:	bd10      	pop	{r4, pc}
 8007ed0:	0802be48 	.word	0x0802be48

08007ed4 <_ZN15MeasurementViewD0Ev>:
 8007ed4:	b510      	push	{r4, lr}
 8007ed6:	4604      	mov	r4, r0
 8007ed8:	f7ff fff2 	bl	8007ec0 <_ZN15MeasurementViewD1Ev>
 8007edc:	4620      	mov	r0, r4
 8007ede:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8007ee2:	f01f fb3c 	bl	802755e <_ZdlPvj>
 8007ee6:	4620      	mov	r0, r4
 8007ee8:	bd10      	pop	{r4, pc}
	...

08007eec <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8007eec:	b510      	push	{r4, lr}
 8007eee:	4604      	mov	r4, r0
 8007ef0:	f7fd fb9c 	bl	800562c <_ZN19MeasurementViewBaseC1Ev>
 8007ef4:	4b01      	ldr	r3, [pc, #4]	; (8007efc <_ZN15MeasurementViewC1Ev+0x10>)
 8007ef6:	6023      	str	r3, [r4, #0]
}
 8007ef8:	4620      	mov	r0, r4
 8007efa:	bd10      	pop	{r4, pc}
 8007efc:	0802be48 	.word	0x0802be48

08007f00 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8007f00:	f7fd bb36 	b.w	8005570 <_ZN19MeasurementViewBase11setupScreenEv>

08007f04 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8007f04:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007f06:	4a0a      	ldr	r2, [pc, #40]	; (8007f30 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8007f08:	4605      	mov	r5, r0
 8007f0a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007f0c:	460b      	mov	r3, r1
 8007f0e:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8007f12:	2104      	movs	r1, #4
 8007f14:	f00f ff28 	bl	8017d68 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8007f18:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8007f1c:	f00d fea8 	bl	8015c70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8007f20:	b92c      	cbnz	r4, 8007f2e <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 8007f22:	f00c fdbd 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8007f26:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8007f2a:	f7fb bcaf 	b.w	800388c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8007f2e:	bd38      	pop	{r3, r4, r5, pc}
 8007f30:	0802bbb4 	.word	0x0802bbb4

08007f34 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 8007f34:	4770      	bx	lr

08007f36 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 8007f36:	3804      	subs	r0, #4
 8007f38:	4770      	bx	lr

08007f3a <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 8007f3a:	4770      	bx	lr

08007f3c <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8007f3c:	68c0      	ldr	r0, [r0, #12]
 8007f3e:	6803      	ldr	r3, [r0, #0]
 8007f40:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007f42:	4718      	bx	r3

08007f44 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8007f44:	f1a0 0004 	sub.w	r0, r0, #4
 8007f48:	f7ff bff8 	b.w	8007f3c <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

08007f4c <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 8007f4c:	b510      	push	{r4, lr}
 8007f4e:	2110      	movs	r1, #16
 8007f50:	4604      	mov	r4, r0
 8007f52:	f01f fb04 	bl	802755e <_ZdlPvj>
 8007f56:	4620      	mov	r0, r4
 8007f58:	bd10      	pop	{r4, pc}

08007f5a <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 8007f5a:	f1a0 0004 	sub.w	r0, r0, #4
 8007f5e:	e7f5      	b.n	8007f4c <_ZN29Measurement_AccuratePresenterD0Ev>

08007f60 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 8007f60:	b510      	push	{r4, lr}
 8007f62:	2200      	movs	r2, #0
 8007f64:	6082      	str	r2, [r0, #8]
    : view(v)
 8007f66:	4a04      	ldr	r2, [pc, #16]	; (8007f78 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 8007f68:	60c1      	str	r1, [r0, #12]
 8007f6a:	f102 0408 	add.w	r4, r2, #8
 8007f6e:	3224      	adds	r2, #36	; 0x24
 8007f70:	6004      	str	r4, [r0, #0]
 8007f72:	6042      	str	r2, [r0, #4]
}
 8007f74:	bd10      	pop	{r4, pc}
 8007f76:	bf00      	nop
 8007f78:	0802be78 	.word	0x0802be78

08007f7c <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 8007f7c:	4770      	bx	lr
	...

08007f80 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8007f80:	b510      	push	{r4, lr}
 8007f82:	4b03      	ldr	r3, [pc, #12]	; (8007f90 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8007f84:	6003      	str	r3, [r0, #0]
 8007f86:	4604      	mov	r4, r0
 8007f88:	f7fd fd98 	bl	8005abc <_ZN28Measurement_AccurateViewBaseD1Ev>
 8007f8c:	4620      	mov	r0, r4
 8007f8e:	bd10      	pop	{r4, pc}
 8007f90:	0802beb0 	.word	0x0802beb0

08007f94 <_ZN24Measurement_AccurateViewD0Ev>:
 8007f94:	b510      	push	{r4, lr}
 8007f96:	4604      	mov	r4, r0
 8007f98:	f7ff fff2 	bl	8007f80 <_ZN24Measurement_AccurateViewD1Ev>
 8007f9c:	4620      	mov	r0, r4
 8007f9e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8007fa2:	f01f fadc 	bl	802755e <_ZdlPvj>
 8007fa6:	4620      	mov	r0, r4
 8007fa8:	bd10      	pop	{r4, pc}
	...

08007fac <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 8007fac:	b510      	push	{r4, lr}
 8007fae:	4604      	mov	r4, r0
 8007fb0:	f7fd fdbe 	bl	8005b30 <_ZN28Measurement_AccurateViewBaseC1Ev>
 8007fb4:	4b01      	ldr	r3, [pc, #4]	; (8007fbc <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 8007fb6:	6023      	str	r3, [r4, #0]
}
 8007fb8:	4620      	mov	r0, r4
 8007fba:	bd10      	pop	{r4, pc}
 8007fbc:	0802beb0 	.word	0x0802beb0

08007fc0 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8007fc0:	f7fd bd58 	b.w	8005a74 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08007fc4 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 8007fc4:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007fc6:	4a0a      	ldr	r2, [pc, #40]	; (8007ff0 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 8007fc8:	4605      	mov	r5, r0
 8007fca:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8007fcc:	460b      	mov	r3, r1
 8007fce:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8007fd2:	2104      	movs	r1, #4
 8007fd4:	f00f fec8 	bl	8017d68 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8007fd8:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8007fdc:	f00d fe48 	bl	8015c70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8007fe0:	b92c      	cbnz	r4, 8007fee <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 8007fe2:	f00c fd5d 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8007fe6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8007fea:	f7fb bc4f 	b.w	800388c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8007fee:	bd38      	pop	{r3, r4, r5, pc}
 8007ff0:	0802bbb4 	.word	0x0802bbb4

08007ff4 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8007ff4:	4770      	bx	lr

08007ff6 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 8007ff6:	3804      	subs	r0, #4
 8007ff8:	4770      	bx	lr

08007ffa <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 8007ffa:	4770      	bx	lr

08007ffc <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8007ffc:	4770      	bx	lr

08007ffe <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 8007ffe:	b510      	push	{r4, lr}
 8008000:	2110      	movs	r1, #16
 8008002:	4604      	mov	r4, r0
 8008004:	f01f faab 	bl	802755e <_ZdlPvj>
 8008008:	4620      	mov	r0, r4
 800800a:	bd10      	pop	{r4, pc}

0800800c <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 800800c:	f1a0 0004 	sub.w	r0, r0, #4
 8008010:	e7f5      	b.n	8007ffe <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

08008012 <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 8008012:	4770      	bx	lr

08008014 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8008014:	b510      	push	{r4, lr}
 8008016:	2200      	movs	r2, #0
 8008018:	6082      	str	r2, [r0, #8]
    : view(v)
 800801a:	4a04      	ldr	r2, [pc, #16]	; (800802c <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 800801c:	60c1      	str	r1, [r0, #12]
 800801e:	f102 0408 	add.w	r4, r2, #8
 8008022:	3224      	adds	r2, #36	; 0x24
 8008024:	6004      	str	r4, [r0, #0]
 8008026:	6042      	str	r2, [r0, #4]
}
 8008028:	bd10      	pop	{r4, pc}
 800802a:	bf00      	nop
 800802c:	0802bee0 	.word	0x0802bee0

08008030 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8008030:	4770      	bx	lr
	...

08008034 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 8008034:	b510      	push	{r4, lr}
 8008036:	4b03      	ldr	r3, [pc, #12]	; (8008044 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8008038:	6003      	str	r3, [r0, #0]
 800803a:	4604      	mov	r4, r0
 800803c:	f7fd ffca 	bl	8005fd4 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8008040:	4620      	mov	r0, r4
 8008042:	bd10      	pop	{r4, pc}
 8008044:	0802bf18 	.word	0x0802bf18

08008048 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 8008048:	b510      	push	{r4, lr}
 800804a:	4604      	mov	r4, r0
 800804c:	f7ff fff2 	bl	8008034 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 8008050:	4620      	mov	r0, r4
 8008052:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8008056:	f01f fa82 	bl	802755e <_ZdlPvj>
 800805a:	4620      	mov	r0, r4
 800805c:	bd10      	pop	{r4, pc}
	...

08008060 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 8008060:	b510      	push	{r4, lr}
 8008062:	4604      	mov	r4, r0
 8008064:	f7fd ffd6 	bl	8006014 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 8008068:	4b01      	ldr	r3, [pc, #4]	; (8008070 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 800806a:	6023      	str	r3, [r4, #0]
}
 800806c:	4620      	mov	r0, r4
 800806e:	bd10      	pop	{r4, pc}
 8008070:	0802bf18 	.word	0x0802bf18

08008074 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 8008074:	f7fd bf9f 	b.w	8005fb6 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

08008078 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 8008078:	4770      	bx	lr

0800807a <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 800807a:	3804      	subs	r0, #4
 800807c:	4770      	bx	lr

0800807e <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 800807e:	4770      	bx	lr

08008080 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8008080:	4770      	bx	lr

08008082 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008082:	b510      	push	{r4, lr}
 8008084:	2110      	movs	r1, #16
 8008086:	4604      	mov	r4, r0
 8008088:	f01f fa69 	bl	802755e <_ZdlPvj>
 800808c:	4620      	mov	r0, r4
 800808e:	bd10      	pop	{r4, pc}

08008090 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008090:	f1a0 0004 	sub.w	r0, r0, #4
 8008094:	e7f5      	b.n	8008082 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

08008096 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 8008096:	4770      	bx	lr

08008098 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 8008098:	b510      	push	{r4, lr}
 800809a:	2200      	movs	r2, #0
 800809c:	6082      	str	r2, [r0, #8]
    : view(v)
 800809e:	4a04      	ldr	r2, [pc, #16]	; (80080b0 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 80080a0:	60c1      	str	r1, [r0, #12]
 80080a2:	f102 0408 	add.w	r4, r2, #8
 80080a6:	3224      	adds	r2, #36	; 0x24
 80080a8:	6004      	str	r4, [r0, #0]
 80080aa:	6042      	str	r2, [r0, #4]
}
 80080ac:	bd10      	pop	{r4, pc}
 80080ae:	bf00      	nop
 80080b0:	0802bf44 	.word	0x0802bf44

080080b4 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 80080b4:	4770      	bx	lr
	...

080080b8 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 80080b8:	b510      	push	{r4, lr}
 80080ba:	4b03      	ldr	r3, [pc, #12]	; (80080c8 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 80080bc:	6003      	str	r3, [r0, #0]
 80080be:	4604      	mov	r4, r0
 80080c0:	f7fe f94c 	bl	800635c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 80080c4:	4620      	mov	r0, r4
 80080c6:	bd10      	pop	{r4, pc}
 80080c8:	0802bf7c 	.word	0x0802bf7c

080080cc <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 80080cc:	b510      	push	{r4, lr}
 80080ce:	4604      	mov	r4, r0
 80080d0:	f7ff fff2 	bl	80080b8 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 80080d4:	4620      	mov	r0, r4
 80080d6:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80080da:	f01f fa40 	bl	802755e <_ZdlPvj>
 80080de:	4620      	mov	r0, r4
 80080e0:	bd10      	pop	{r4, pc}
	...

080080e4 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 80080e4:	b510      	push	{r4, lr}
 80080e6:	4604      	mov	r4, r0
 80080e8:	f7fe f958 	bl	800639c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 80080ec:	4b01      	ldr	r3, [pc, #4]	; (80080f4 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 80080ee:	6023      	str	r3, [r4, #0]
}
 80080f0:	4620      	mov	r0, r4
 80080f2:	bd10      	pop	{r4, pc}
 80080f4:	0802bf7c 	.word	0x0802bf7c

080080f8 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 80080f8:	f7fe b921 	b.w	800633e <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

080080fc <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 80080fc:	4770      	bx	lr

080080fe <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 80080fe:	3804      	subs	r0, #4
 8008100:	4770      	bx	lr

08008102 <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 8008102:	4770      	bx	lr

08008104 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008104:	68c0      	ldr	r0, [r0, #12]
 8008106:	6803      	ldr	r3, [r0, #0]
 8008108:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800810a:	4718      	bx	r3

0800810c <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800810c:	f1a0 0004 	sub.w	r0, r0, #4
 8008110:	f7ff bff8 	b.w	8008104 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

08008114 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 8008114:	b510      	push	{r4, lr}
 8008116:	2110      	movs	r1, #16
 8008118:	4604      	mov	r4, r0
 800811a:	f01f fa20 	bl	802755e <_ZdlPvj>
 800811e:	4620      	mov	r0, r4
 8008120:	bd10      	pop	{r4, pc}

08008122 <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 8008122:	f1a0 0004 	sub.w	r0, r0, #4
 8008126:	e7f5      	b.n	8008114 <_ZN27Measurement_SinglePresenterD0Ev>

08008128 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8008128:	b510      	push	{r4, lr}
 800812a:	2200      	movs	r2, #0
 800812c:	6082      	str	r2, [r0, #8]
    : view(v)
 800812e:	4a04      	ldr	r2, [pc, #16]	; (8008140 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8008130:	60c1      	str	r1, [r0, #12]
 8008132:	f102 0408 	add.w	r4, r2, #8
 8008136:	3224      	adds	r2, #36	; 0x24
 8008138:	6004      	str	r4, [r0, #0]
 800813a:	6042      	str	r2, [r0, #4]
}
 800813c:	bd10      	pop	{r4, pc}
 800813e:	bf00      	nop
 8008140:	0802bfa8 	.word	0x0802bfa8

08008144 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 8008144:	4770      	bx	lr
	...

08008148 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 8008148:	b510      	push	{r4, lr}
 800814a:	4b03      	ldr	r3, [pc, #12]	; (8008158 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 800814c:	6003      	str	r3, [r0, #0]
 800814e:	4604      	mov	r4, r0
 8008150:	f7fe faba 	bl	80066c8 <_ZN26Measurement_SingleViewBaseD1Ev>
 8008154:	4620      	mov	r0, r4
 8008156:	bd10      	pop	{r4, pc}
 8008158:	0802bfe0 	.word	0x0802bfe0

0800815c <_ZN22Measurement_SingleViewD0Ev>:
 800815c:	b510      	push	{r4, lr}
 800815e:	4604      	mov	r4, r0
 8008160:	f7ff fff2 	bl	8008148 <_ZN22Measurement_SingleViewD1Ev>
 8008164:	4620      	mov	r0, r4
 8008166:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800816a:	f01f f9f8 	bl	802755e <_ZdlPvj>
 800816e:	4620      	mov	r0, r4
 8008170:	bd10      	pop	{r4, pc}
	...

08008174 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 8008174:	b510      	push	{r4, lr}
 8008176:	4604      	mov	r4, r0
 8008178:	f7fe fae0 	bl	800673c <_ZN26Measurement_SingleViewBaseC1Ev>
 800817c:	4b01      	ldr	r3, [pc, #4]	; (8008184 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 800817e:	6023      	str	r3, [r4, #0]
}
 8008180:	4620      	mov	r0, r4
 8008182:	bd10      	pop	{r4, pc}
 8008184:	0802bfe0 	.word	0x0802bfe0

08008188 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 8008188:	f7fe ba7a 	b.w	8006680 <_ZN26Measurement_SingleViewBase11setupScreenEv>

0800818c <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 800818c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800818e:	4a0a      	ldr	r2, [pc, #40]	; (80081b8 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 8008190:	4605      	mov	r5, r0
 8008192:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008194:	460b      	mov	r3, r1
 8008196:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800819a:	2104      	movs	r1, #4
 800819c:	f00f fde4 	bl	8017d68 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80081a0:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80081a4:	f00d fd64 	bl	8015c70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80081a8:	b92c      	cbnz	r4, 80081b6 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 80081aa:	f00c fc79 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80081ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80081b2:	f7fb bb6b 	b.w	800388c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80081b6:	bd38      	pop	{r3, r4, r5, pc}
 80081b8:	0802bbb4 	.word	0x0802bbb4

080081bc <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 80081bc:	4770      	bx	lr

080081be <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 80081be:	3804      	subs	r0, #4
 80081c0:	4770      	bx	lr

080081c2 <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 80081c2:	4770      	bx	lr

080081c4 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 80081c4:	4770      	bx	lr

080081c6 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 80081c6:	b510      	push	{r4, lr}
 80081c8:	2110      	movs	r1, #16
 80081ca:	4604      	mov	r4, r0
 80081cc:	f01f f9c7 	bl	802755e <_ZdlPvj>
 80081d0:	4620      	mov	r0, r4
 80081d2:	bd10      	pop	{r4, pc}

080081d4 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 80081d4:	f1a0 0004 	sub.w	r0, r0, #4
 80081d8:	e7f5      	b.n	80081c6 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

080081da <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 80081da:	4770      	bx	lr

080081dc <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 80081dc:	b510      	push	{r4, lr}
 80081de:	2200      	movs	r2, #0
 80081e0:	6082      	str	r2, [r0, #8]
    : view(v)
 80081e2:	4a04      	ldr	r2, [pc, #16]	; (80081f4 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 80081e4:	60c1      	str	r1, [r0, #12]
 80081e6:	f102 0408 	add.w	r4, r2, #8
 80081ea:	3224      	adds	r2, #36	; 0x24
 80081ec:	6004      	str	r4, [r0, #0]
 80081ee:	6042      	str	r2, [r0, #4]
}
 80081f0:	bd10      	pop	{r4, pc}
 80081f2:	bf00      	nop
 80081f4:	0802c010 	.word	0x0802c010

080081f8 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 80081f8:	4770      	bx	lr
	...

080081fc <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 80081fc:	b510      	push	{r4, lr}
 80081fe:	4b03      	ldr	r3, [pc, #12]	; (800820c <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8008200:	6003      	str	r3, [r0, #0]
 8008202:	4604      	mov	r4, r0
 8008204:	f7fe fcf2 	bl	8006bec <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8008208:	4620      	mov	r0, r4
 800820a:	bd10      	pop	{r4, pc}
 800820c:	0802c048 	.word	0x0802c048

08008210 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8008210:	b510      	push	{r4, lr}
 8008212:	4604      	mov	r4, r0
 8008214:	f7ff fff2 	bl	80081fc <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8008218:	4620      	mov	r0, r4
 800821a:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800821e:	f01f f99e 	bl	802755e <_ZdlPvj>
 8008222:	4620      	mov	r0, r4
 8008224:	bd10      	pop	{r4, pc}
	...

08008228 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8008228:	b510      	push	{r4, lr}
 800822a:	4604      	mov	r4, r0
 800822c:	f7fe fcfe 	bl	8006c2c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8008230:	4b01      	ldr	r3, [pc, #4]	; (8008238 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 8008232:	6023      	str	r3, [r4, #0]
}
 8008234:	4620      	mov	r0, r4
 8008236:	bd10      	pop	{r4, pc}
 8008238:	0802c048 	.word	0x0802c048

0800823c <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 800823c:	f7fe bcc5 	b.w	8006bca <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

08008240 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 8008240:	4770      	bx	lr

08008242 <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 8008242:	3804      	subs	r0, #4
 8008244:	4770      	bx	lr

08008246 <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 8008246:	4770      	bx	lr

08008248 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 8008248:	4770      	bx	lr

0800824a <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 800824a:	b510      	push	{r4, lr}
 800824c:	2110      	movs	r1, #16
 800824e:	4604      	mov	r4, r0
 8008250:	f01f f985 	bl	802755e <_ZdlPvj>
 8008254:	4620      	mov	r0, r4
 8008256:	bd10      	pop	{r4, pc}

08008258 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 8008258:	f1a0 0004 	sub.w	r0, r0, #4
 800825c:	e7f5      	b.n	800824a <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

0800825e <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 800825e:	4770      	bx	lr

08008260 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 8008260:	b510      	push	{r4, lr}
 8008262:	2200      	movs	r2, #0
 8008264:	6082      	str	r2, [r0, #8]
    : view(v)
 8008266:	4a04      	ldr	r2, [pc, #16]	; (8008278 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 8008268:	60c1      	str	r1, [r0, #12]
 800826a:	f102 0408 	add.w	r4, r2, #8
 800826e:	3224      	adds	r2, #36	; 0x24
 8008270:	6004      	str	r4, [r0, #0]
 8008272:	6042      	str	r2, [r0, #4]
}
 8008274:	bd10      	pop	{r4, pc}
 8008276:	bf00      	nop
 8008278:	0802c074 	.word	0x0802c074

0800827c <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 800827c:	4770      	bx	lr
	...

08008280 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 8008280:	b510      	push	{r4, lr}
 8008282:	4b03      	ldr	r3, [pc, #12]	; (8008290 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8008284:	6003      	str	r3, [r0, #0]
 8008286:	4604      	mov	r4, r0
 8008288:	f7fe fe7c 	bl	8006f84 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 800828c:	4620      	mov	r0, r4
 800828e:	bd10      	pop	{r4, pc}
 8008290:	0802c0ac 	.word	0x0802c0ac

08008294 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8008294:	b510      	push	{r4, lr}
 8008296:	4604      	mov	r4, r0
 8008298:	f7ff fff2 	bl	8008280 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 800829c:	4620      	mov	r0, r4
 800829e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80082a2:	f01f f95c 	bl	802755e <_ZdlPvj>
 80082a6:	4620      	mov	r0, r4
 80082a8:	bd10      	pop	{r4, pc}
	...

080082ac <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 80082ac:	b510      	push	{r4, lr}
 80082ae:	4604      	mov	r4, r0
 80082b0:	f7fe fe88 	bl	8006fc4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 80082b4:	4b01      	ldr	r3, [pc, #4]	; (80082bc <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 80082b6:	6023      	str	r3, [r4, #0]
}
 80082b8:	4620      	mov	r0, r4
 80082ba:	bd10      	pop	{r4, pc}
 80082bc:	0802c0ac 	.word	0x0802c0ac

080082c0 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 80082c0:	f7fe be4f 	b.w	8006f62 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

080082c4 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 80082c4:	2100      	movs	r1, #0
 80082c6:	223c      	movs	r2, #60	; 0x3c
 80082c8:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 80082cc:	4770      	bx	lr
	...

080082d0 <_ZN5Model4tickEv>:

void Model::tick()
{
 80082d0:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80082d2:	4d0a      	ldr	r5, [pc, #40]	; (80082fc <_ZN5Model4tickEv+0x2c>)
{
 80082d4:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80082d6:	6828      	ldr	r0, [r5, #0]
 80082d8:	f004 fb44 	bl	800c964 <osMessageQueueGetCount>
 80082dc:	b168      	cbz	r0, 80082fa <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 80082de:	2300      	movs	r3, #0
 80082e0:	6828      	ldr	r0, [r5, #0]
 80082e2:	461a      	mov	r2, r3
 80082e4:	1d21      	adds	r1, r4, #4
 80082e6:	f004 fb09 	bl	800c8fc <osMessageQueueGet>
 80082ea:	b930      	cbnz	r0, 80082fa <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 80082ec:	6820      	ldr	r0, [r4, #0]
 80082ee:	6861      	ldr	r1, [r4, #4]
 80082f0:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 80082f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 80082f6:	689b      	ldr	r3, [r3, #8]
 80082f8:	4718      	bx	r3
}
 80082fa:	bd70      	pop	{r4, r5, r6, pc}
 80082fc:	20002620 	.word	0x20002620

08008300 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 8008300:	4770      	bx	lr

08008302 <_ZThn4_N21Project_InfoPresenterD1Ev>:
 8008302:	3804      	subs	r0, #4
 8008304:	4770      	bx	lr

08008306 <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 8008306:	4770      	bx	lr

08008308 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008308:	68c0      	ldr	r0, [r0, #12]
 800830a:	6803      	ldr	r3, [r0, #0]
 800830c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800830e:	4718      	bx	r3

08008310 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008310:	f1a0 0004 	sub.w	r0, r0, #4
 8008314:	f7ff bff8 	b.w	8008308 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

08008318 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 8008318:	b510      	push	{r4, lr}
 800831a:	2110      	movs	r1, #16
 800831c:	4604      	mov	r4, r0
 800831e:	f01f f91e 	bl	802755e <_ZdlPvj>
 8008322:	4620      	mov	r0, r4
 8008324:	bd10      	pop	{r4, pc}

08008326 <_ZThn4_N21Project_InfoPresenterD0Ev>:
 8008326:	f1a0 0004 	sub.w	r0, r0, #4
 800832a:	e7f5      	b.n	8008318 <_ZN21Project_InfoPresenterD0Ev>

0800832c <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 800832c:	b510      	push	{r4, lr}
 800832e:	2200      	movs	r2, #0
 8008330:	6082      	str	r2, [r0, #8]
    : view(v)
 8008332:	4a04      	ldr	r2, [pc, #16]	; (8008344 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8008334:	60c1      	str	r1, [r0, #12]
 8008336:	f102 0408 	add.w	r4, r2, #8
 800833a:	3224      	adds	r2, #36	; 0x24
 800833c:	6004      	str	r4, [r0, #0]
 800833e:	6042      	str	r2, [r0, #4]
}
 8008340:	bd10      	pop	{r4, pc}
 8008342:	bf00      	nop
 8008344:	0802c0d8 	.word	0x0802c0d8

08008348 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8008348:	4770      	bx	lr
	...

0800834c <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 800834c:	b510      	push	{r4, lr}
 800834e:	4b03      	ldr	r3, [pc, #12]	; (800835c <_ZN16Project_InfoViewD1Ev+0x10>)
 8008350:	6003      	str	r3, [r0, #0]
 8008352:	4604      	mov	r4, r0
 8008354:	f7fe ffd0 	bl	80072f8 <_ZN20Project_InfoViewBaseD1Ev>
 8008358:	4620      	mov	r0, r4
 800835a:	bd10      	pop	{r4, pc}
 800835c:	0802c110 	.word	0x0802c110

08008360 <_ZN16Project_InfoViewD0Ev>:
 8008360:	b510      	push	{r4, lr}
 8008362:	4604      	mov	r4, r0
 8008364:	f7ff fff2 	bl	800834c <_ZN16Project_InfoViewD1Ev>
 8008368:	4620      	mov	r0, r4
 800836a:	f241 01b0 	movw	r1, #4272	; 0x10b0
 800836e:	f01f f8f6 	bl	802755e <_ZdlPvj>
 8008372:	4620      	mov	r0, r4
 8008374:	bd10      	pop	{r4, pc}
	...

08008378 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8008378:	b510      	push	{r4, lr}
 800837a:	4604      	mov	r4, r0
 800837c:	f7fe ffe4 	bl	8007348 <_ZN20Project_InfoViewBaseC1Ev>
 8008380:	4b01      	ldr	r3, [pc, #4]	; (8008388 <_ZN16Project_InfoViewC1Ev+0x10>)
 8008382:	6023      	str	r3, [r4, #0]
}
 8008384:	4620      	mov	r0, r4
 8008386:	bd10      	pop	{r4, pc}
 8008388:	0802c110 	.word	0x0802c110

0800838c <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 800838c:	f7fe bf90 	b.w	80072b0 <_ZN20Project_InfoViewBase11setupScreenEv>

08008390 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8008390:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008392:	4a0a      	ldr	r2, [pc, #40]	; (80083bc <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8008394:	4605      	mov	r5, r0
 8008396:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008398:	460b      	mov	r3, r1
 800839a:	f500 7022 	add.w	r0, r0, #648	; 0x288
 800839e:	2104      	movs	r1, #4
 80083a0:	f00f fce2 	bl	8017d68 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80083a4:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80083a8:	f00d fc62 	bl	8015c70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 80083ac:	b92c      	cbnz	r4, 80083ba <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 80083ae:	f00c fb77 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80083b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80083b6:	f7fb ba69 	b.w	800388c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80083ba:	bd38      	pop	{r3, r4, r5, pc}
 80083bc:	0802bbb4 	.word	0x0802bbb4

080083c0 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 80083c0:	4770      	bx	lr

080083c2 <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 80083c2:	3804      	subs	r0, #4
 80083c4:	4770      	bx	lr

080083c6 <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 80083c6:	4770      	bx	lr

080083c8 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 80083c8:	4770      	bx	lr

080083ca <_ZN21Shutting_OffPresenterD0Ev>:
 80083ca:	b510      	push	{r4, lr}
 80083cc:	2110      	movs	r1, #16
 80083ce:	4604      	mov	r4, r0
 80083d0:	f01f f8c5 	bl	802755e <_ZdlPvj>
 80083d4:	4620      	mov	r0, r4
 80083d6:	bd10      	pop	{r4, pc}

080083d8 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 80083d8:	f1a0 0004 	sub.w	r0, r0, #4
 80083dc:	e7f5      	b.n	80083ca <_ZN21Shutting_OffPresenterD0Ev>

080083de <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 80083de:	4770      	bx	lr

080083e0 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 80083e0:	b510      	push	{r4, lr}
 80083e2:	2200      	movs	r2, #0
 80083e4:	6082      	str	r2, [r0, #8]
    : view(v)
 80083e6:	4a04      	ldr	r2, [pc, #16]	; (80083f8 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 80083e8:	60c1      	str	r1, [r0, #12]
 80083ea:	f102 0408 	add.w	r4, r2, #8
 80083ee:	3224      	adds	r2, #36	; 0x24
 80083f0:	6004      	str	r4, [r0, #0]
 80083f2:	6042      	str	r2, [r0, #4]
}
 80083f4:	bd10      	pop	{r4, pc}
 80083f6:	bf00      	nop
 80083f8:	0802c140 	.word	0x0802c140

080083fc <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 80083fc:	4770      	bx	lr
	...

08008400 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 8008400:	b510      	push	{r4, lr}
 8008402:	4b03      	ldr	r3, [pc, #12]	; (8008410 <_ZN16Shutting_OffViewD1Ev+0x10>)
 8008404:	6003      	str	r3, [r0, #0]
 8008406:	4604      	mov	r4, r0
 8008408:	f7ff f96e 	bl	80076e8 <_ZN20Shutting_OffViewBaseD1Ev>
 800840c:	4620      	mov	r0, r4
 800840e:	bd10      	pop	{r4, pc}
 8008410:	0802c178 	.word	0x0802c178

08008414 <_ZN16Shutting_OffViewD0Ev>:
 8008414:	b510      	push	{r4, lr}
 8008416:	4604      	mov	r4, r0
 8008418:	f7ff fff2 	bl	8008400 <_ZN16Shutting_OffViewD1Ev>
 800841c:	4620      	mov	r0, r4
 800841e:	2198      	movs	r1, #152	; 0x98
 8008420:	f01f f89d 	bl	802755e <_ZdlPvj>
 8008424:	4620      	mov	r0, r4
 8008426:	bd10      	pop	{r4, pc}

08008428 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8008428:	b510      	push	{r4, lr}
 800842a:	4604      	mov	r4, r0
 800842c:	f7ff f966 	bl	80076fc <_ZN20Shutting_OffViewBaseC1Ev>
 8008430:	4b01      	ldr	r3, [pc, #4]	; (8008438 <_ZN16Shutting_OffViewC1Ev+0x10>)
 8008432:	6023      	str	r3, [r4, #0]
}
 8008434:	4620      	mov	r0, r4
 8008436:	bd10      	pop	{r4, pc}
 8008438:	0802c178 	.word	0x0802c178

0800843c <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 800843c:	f7ff b955 	b.w	80076ea <_ZN20Shutting_OffViewBase11setupScreenEv>

08008440 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8008440:	20f0      	movs	r0, #240	; 0xf0
 8008442:	4770      	bx	lr

08008444 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8008444:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8008448:	4770      	bx	lr
 800844a:	bf00      	nop

0800844c <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800844c:	2029      	movs	r0, #41	; 0x29
 800844e:	f7f9 bb19 	b.w	8001a84 <LCD_IO_WriteReg>
 8008452:	bf00      	nop

08008454 <ili9341_DisplayOff>:
 8008454:	2028      	movs	r0, #40	; 0x28
 8008456:	f7f9 bb15 	b.w	8001a84 <LCD_IO_WriteReg>
 800845a:	bf00      	nop

0800845c <ili9341_Init>:
{
 800845c:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800845e:	f7f9 fad7 	bl	8001a10 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8008462:	20ca      	movs	r0, #202	; 0xca
 8008464:	f7f9 fb0e 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008468:	20c3      	movs	r0, #195	; 0xc3
 800846a:	f7f9 fae1 	bl	8001a30 <LCD_IO_WriteData>
 800846e:	2008      	movs	r0, #8
 8008470:	f7f9 fade 	bl	8001a30 <LCD_IO_WriteData>
 8008474:	2050      	movs	r0, #80	; 0x50
 8008476:	f7f9 fadb 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800847a:	20cf      	movs	r0, #207	; 0xcf
 800847c:	f7f9 fb02 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008480:	2000      	movs	r0, #0
 8008482:	f7f9 fad5 	bl	8001a30 <LCD_IO_WriteData>
 8008486:	20c1      	movs	r0, #193	; 0xc1
 8008488:	f7f9 fad2 	bl	8001a30 <LCD_IO_WriteData>
 800848c:	2030      	movs	r0, #48	; 0x30
 800848e:	f7f9 facf 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008492:	20ed      	movs	r0, #237	; 0xed
 8008494:	f7f9 faf6 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008498:	2064      	movs	r0, #100	; 0x64
 800849a:	f7f9 fac9 	bl	8001a30 <LCD_IO_WriteData>
 800849e:	2003      	movs	r0, #3
 80084a0:	f7f9 fac6 	bl	8001a30 <LCD_IO_WriteData>
 80084a4:	2012      	movs	r0, #18
 80084a6:	f7f9 fac3 	bl	8001a30 <LCD_IO_WriteData>
 80084aa:	2081      	movs	r0, #129	; 0x81
 80084ac:	f7f9 fac0 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80084b0:	20e8      	movs	r0, #232	; 0xe8
 80084b2:	f7f9 fae7 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80084b6:	2085      	movs	r0, #133	; 0x85
 80084b8:	f7f9 faba 	bl	8001a30 <LCD_IO_WriteData>
 80084bc:	2000      	movs	r0, #0
 80084be:	f7f9 fab7 	bl	8001a30 <LCD_IO_WriteData>
 80084c2:	2078      	movs	r0, #120	; 0x78
 80084c4:	f7f9 fab4 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80084c8:	20cb      	movs	r0, #203	; 0xcb
 80084ca:	f7f9 fadb 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80084ce:	2039      	movs	r0, #57	; 0x39
 80084d0:	f7f9 faae 	bl	8001a30 <LCD_IO_WriteData>
 80084d4:	202c      	movs	r0, #44	; 0x2c
 80084d6:	f7f9 faab 	bl	8001a30 <LCD_IO_WriteData>
 80084da:	2000      	movs	r0, #0
 80084dc:	f7f9 faa8 	bl	8001a30 <LCD_IO_WriteData>
 80084e0:	2034      	movs	r0, #52	; 0x34
 80084e2:	f7f9 faa5 	bl	8001a30 <LCD_IO_WriteData>
 80084e6:	2002      	movs	r0, #2
 80084e8:	f7f9 faa2 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80084ec:	20f7      	movs	r0, #247	; 0xf7
 80084ee:	f7f9 fac9 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80084f2:	2020      	movs	r0, #32
 80084f4:	f7f9 fa9c 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80084f8:	20ea      	movs	r0, #234	; 0xea
 80084fa:	f7f9 fac3 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80084fe:	2000      	movs	r0, #0
 8008500:	f7f9 fa96 	bl	8001a30 <LCD_IO_WriteData>
 8008504:	2000      	movs	r0, #0
 8008506:	f7f9 fa93 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800850a:	20b1      	movs	r0, #177	; 0xb1
 800850c:	f7f9 faba 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008510:	2000      	movs	r0, #0
 8008512:	f7f9 fa8d 	bl	8001a30 <LCD_IO_WriteData>
 8008516:	201b      	movs	r0, #27
 8008518:	f7f9 fa8a 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800851c:	20b6      	movs	r0, #182	; 0xb6
 800851e:	f7f9 fab1 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008522:	200a      	movs	r0, #10
 8008524:	f7f9 fa84 	bl	8001a30 <LCD_IO_WriteData>
 8008528:	20a2      	movs	r0, #162	; 0xa2
 800852a:	f7f9 fa81 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800852e:	20c0      	movs	r0, #192	; 0xc0
 8008530:	f7f9 faa8 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008534:	2010      	movs	r0, #16
 8008536:	f7f9 fa7b 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800853a:	20c1      	movs	r0, #193	; 0xc1
 800853c:	f7f9 faa2 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008540:	2010      	movs	r0, #16
 8008542:	f7f9 fa75 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008546:	20c5      	movs	r0, #197	; 0xc5
 8008548:	f7f9 fa9c 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800854c:	2045      	movs	r0, #69	; 0x45
 800854e:	f7f9 fa6f 	bl	8001a30 <LCD_IO_WriteData>
 8008552:	2015      	movs	r0, #21
 8008554:	f7f9 fa6c 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008558:	20c7      	movs	r0, #199	; 0xc7
 800855a:	f7f9 fa93 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800855e:	2090      	movs	r0, #144	; 0x90
 8008560:	f7f9 fa66 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008564:	2036      	movs	r0, #54	; 0x36
 8008566:	f7f9 fa8d 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800856a:	20c8      	movs	r0, #200	; 0xc8
 800856c:	f7f9 fa60 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008570:	20f2      	movs	r0, #242	; 0xf2
 8008572:	f7f9 fa87 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008576:	2000      	movs	r0, #0
 8008578:	f7f9 fa5a 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800857c:	20b0      	movs	r0, #176	; 0xb0
 800857e:	f7f9 fa81 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008582:	20c2      	movs	r0, #194	; 0xc2
 8008584:	f7f9 fa54 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008588:	20b6      	movs	r0, #182	; 0xb6
 800858a:	f7f9 fa7b 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800858e:	200a      	movs	r0, #10
 8008590:	f7f9 fa4e 	bl	8001a30 <LCD_IO_WriteData>
 8008594:	20a7      	movs	r0, #167	; 0xa7
 8008596:	f7f9 fa4b 	bl	8001a30 <LCD_IO_WriteData>
 800859a:	2027      	movs	r0, #39	; 0x27
 800859c:	f7f9 fa48 	bl	8001a30 <LCD_IO_WriteData>
 80085a0:	2004      	movs	r0, #4
 80085a2:	f7f9 fa45 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80085a6:	202a      	movs	r0, #42	; 0x2a
 80085a8:	f7f9 fa6c 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80085ac:	2000      	movs	r0, #0
 80085ae:	f7f9 fa3f 	bl	8001a30 <LCD_IO_WriteData>
 80085b2:	2000      	movs	r0, #0
 80085b4:	f7f9 fa3c 	bl	8001a30 <LCD_IO_WriteData>
 80085b8:	2000      	movs	r0, #0
 80085ba:	f7f9 fa39 	bl	8001a30 <LCD_IO_WriteData>
 80085be:	20ef      	movs	r0, #239	; 0xef
 80085c0:	f7f9 fa36 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80085c4:	202b      	movs	r0, #43	; 0x2b
 80085c6:	f7f9 fa5d 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80085ca:	2000      	movs	r0, #0
 80085cc:	f7f9 fa30 	bl	8001a30 <LCD_IO_WriteData>
 80085d0:	2000      	movs	r0, #0
 80085d2:	f7f9 fa2d 	bl	8001a30 <LCD_IO_WriteData>
 80085d6:	2001      	movs	r0, #1
 80085d8:	f7f9 fa2a 	bl	8001a30 <LCD_IO_WriteData>
 80085dc:	203f      	movs	r0, #63	; 0x3f
 80085de:	f7f9 fa27 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80085e2:	20f6      	movs	r0, #246	; 0xf6
 80085e4:	f7f9 fa4e 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80085e8:	2001      	movs	r0, #1
 80085ea:	f7f9 fa21 	bl	8001a30 <LCD_IO_WriteData>
 80085ee:	2000      	movs	r0, #0
 80085f0:	f7f9 fa1e 	bl	8001a30 <LCD_IO_WriteData>
 80085f4:	2006      	movs	r0, #6
 80085f6:	f7f9 fa1b 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80085fa:	202c      	movs	r0, #44	; 0x2c
 80085fc:	f7f9 fa42 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008600:	20c8      	movs	r0, #200	; 0xc8
 8008602:	f7f9 faa7 	bl	8001b54 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008606:	2026      	movs	r0, #38	; 0x26
 8008608:	f7f9 fa3c 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800860c:	2001      	movs	r0, #1
 800860e:	f7f9 fa0f 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008612:	20e0      	movs	r0, #224	; 0xe0
 8008614:	f7f9 fa36 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008618:	200f      	movs	r0, #15
 800861a:	f7f9 fa09 	bl	8001a30 <LCD_IO_WriteData>
 800861e:	2029      	movs	r0, #41	; 0x29
 8008620:	f7f9 fa06 	bl	8001a30 <LCD_IO_WriteData>
 8008624:	2024      	movs	r0, #36	; 0x24
 8008626:	f7f9 fa03 	bl	8001a30 <LCD_IO_WriteData>
 800862a:	200c      	movs	r0, #12
 800862c:	f7f9 fa00 	bl	8001a30 <LCD_IO_WriteData>
 8008630:	200e      	movs	r0, #14
 8008632:	f7f9 f9fd 	bl	8001a30 <LCD_IO_WriteData>
 8008636:	2009      	movs	r0, #9
 8008638:	f7f9 f9fa 	bl	8001a30 <LCD_IO_WriteData>
 800863c:	204e      	movs	r0, #78	; 0x4e
 800863e:	f7f9 f9f7 	bl	8001a30 <LCD_IO_WriteData>
 8008642:	2078      	movs	r0, #120	; 0x78
 8008644:	f7f9 f9f4 	bl	8001a30 <LCD_IO_WriteData>
 8008648:	203c      	movs	r0, #60	; 0x3c
 800864a:	f7f9 f9f1 	bl	8001a30 <LCD_IO_WriteData>
 800864e:	2009      	movs	r0, #9
 8008650:	f7f9 f9ee 	bl	8001a30 <LCD_IO_WriteData>
 8008654:	2013      	movs	r0, #19
 8008656:	f7f9 f9eb 	bl	8001a30 <LCD_IO_WriteData>
 800865a:	2005      	movs	r0, #5
 800865c:	f7f9 f9e8 	bl	8001a30 <LCD_IO_WriteData>
 8008660:	2017      	movs	r0, #23
 8008662:	f7f9 f9e5 	bl	8001a30 <LCD_IO_WriteData>
 8008666:	2011      	movs	r0, #17
 8008668:	f7f9 f9e2 	bl	8001a30 <LCD_IO_WriteData>
 800866c:	2000      	movs	r0, #0
 800866e:	f7f9 f9df 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008672:	20e1      	movs	r0, #225	; 0xe1
 8008674:	f7f9 fa06 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008678:	2000      	movs	r0, #0
 800867a:	f7f9 f9d9 	bl	8001a30 <LCD_IO_WriteData>
 800867e:	2016      	movs	r0, #22
 8008680:	f7f9 f9d6 	bl	8001a30 <LCD_IO_WriteData>
 8008684:	201b      	movs	r0, #27
 8008686:	f7f9 f9d3 	bl	8001a30 <LCD_IO_WriteData>
 800868a:	2004      	movs	r0, #4
 800868c:	f7f9 f9d0 	bl	8001a30 <LCD_IO_WriteData>
 8008690:	2011      	movs	r0, #17
 8008692:	f7f9 f9cd 	bl	8001a30 <LCD_IO_WriteData>
 8008696:	2007      	movs	r0, #7
 8008698:	f7f9 f9ca 	bl	8001a30 <LCD_IO_WriteData>
 800869c:	2031      	movs	r0, #49	; 0x31
 800869e:	f7f9 f9c7 	bl	8001a30 <LCD_IO_WriteData>
 80086a2:	2033      	movs	r0, #51	; 0x33
 80086a4:	f7f9 f9c4 	bl	8001a30 <LCD_IO_WriteData>
 80086a8:	2042      	movs	r0, #66	; 0x42
 80086aa:	f7f9 f9c1 	bl	8001a30 <LCD_IO_WriteData>
 80086ae:	2005      	movs	r0, #5
 80086b0:	f7f9 f9be 	bl	8001a30 <LCD_IO_WriteData>
 80086b4:	200c      	movs	r0, #12
 80086b6:	f7f9 f9bb 	bl	8001a30 <LCD_IO_WriteData>
 80086ba:	200a      	movs	r0, #10
 80086bc:	f7f9 f9b8 	bl	8001a30 <LCD_IO_WriteData>
 80086c0:	2028      	movs	r0, #40	; 0x28
 80086c2:	f7f9 f9b5 	bl	8001a30 <LCD_IO_WriteData>
 80086c6:	202f      	movs	r0, #47	; 0x2f
 80086c8:	f7f9 f9b2 	bl	8001a30 <LCD_IO_WriteData>
 80086cc:	200f      	movs	r0, #15
 80086ce:	f7f9 f9af 	bl	8001a30 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80086d2:	2011      	movs	r0, #17
 80086d4:	f7f9 f9d6 	bl	8001a84 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80086d8:	20c8      	movs	r0, #200	; 0xc8
 80086da:	f7f9 fa3b 	bl	8001b54 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80086de:	2029      	movs	r0, #41	; 0x29
 80086e0:	f7f9 f9d0 	bl	8001a84 <LCD_IO_WriteReg>
}
 80086e4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 80086e8:	202c      	movs	r0, #44	; 0x2c
 80086ea:	f7f9 b9cb 	b.w	8001a84 <LCD_IO_WriteReg>
 80086ee:	bf00      	nop

080086f0 <ili9341_ReadID>:
{
 80086f0:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80086f2:	f7f9 f98d 	bl	8001a10 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 80086f6:	2103      	movs	r1, #3
 80086f8:	20d3      	movs	r0, #211	; 0xd3
 80086fa:	f7f9 f9ed 	bl	8001ad8 <LCD_IO_ReadData>
}
 80086fe:	b280      	uxth	r0, r0
 8008700:	bd08      	pop	{r3, pc}
 8008702:	bf00      	nop

08008704 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8008704:	221f      	movs	r2, #31
 8008706:	210b      	movs	r1, #11
 8008708:	b2c0      	uxtb	r0, r0
 800870a:	f7f9 b933 	b.w	8001974 <IOE_Write>
 800870e:	bf00      	nop

08008710 <stmpe811_Reset>:
{
 8008710:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8008712:	b2c4      	uxtb	r4, r0
 8008714:	2202      	movs	r2, #2
 8008716:	2103      	movs	r1, #3
 8008718:	4620      	mov	r0, r4
 800871a:	f7f9 f92b 	bl	8001974 <IOE_Write>
  IOE_Delay(10); 
 800871e:	200a      	movs	r0, #10
 8008720:	f7f9 f974 	bl	8001a0c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8008724:	4620      	mov	r0, r4
 8008726:	2200      	movs	r2, #0
 8008728:	2103      	movs	r1, #3
 800872a:	f7f9 f923 	bl	8001974 <IOE_Write>
}
 800872e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8008732:	2002      	movs	r0, #2
 8008734:	f7f9 b96a 	b.w	8001a0c <IOE_Delay>

08008738 <stmpe811_ReadID>:
{
 8008738:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800873a:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 800873c:	f7f9 f916 	bl	800196c <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008740:	2100      	movs	r1, #0
 8008742:	4620      	mov	r0, r4
 8008744:	f7f9 f92e 	bl	80019a4 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008748:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800874a:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800874c:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800874e:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008750:	f7f9 f928 	bl	80019a4 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008754:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8008758:	b280      	uxth	r0, r0
 800875a:	bd10      	pop	{r4, pc}

0800875c <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 800875c:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800875e:	b2c4      	uxtb	r4, r0
 8008760:	2140      	movs	r1, #64	; 0x40
 8008762:	4620      	mov	r0, r4
 8008764:	f7f9 f91e 	bl	80019a4 <IOE_Read>
  
  if(state > 0)
 8008768:	0603      	lsls	r3, r0, #24
 800876a:	d40b      	bmi.n	8008784 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800876c:	4620      	mov	r0, r4
 800876e:	2201      	movs	r2, #1
 8008770:	214b      	movs	r1, #75	; 0x4b
 8008772:	f7f9 f8ff 	bl	8001974 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008776:	4620      	mov	r0, r4
 8008778:	2200      	movs	r2, #0
 800877a:	214b      	movs	r1, #75	; 0x4b
 800877c:	f7f9 f8fa 	bl	8001974 <IOE_Write>
  uint8_t ret = 0;
 8008780:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8008782:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8008784:	214c      	movs	r1, #76	; 0x4c
 8008786:	4620      	mov	r0, r4
 8008788:	f7f9 f90c 	bl	80019a4 <IOE_Read>
      ret = 1;
 800878c:	3800      	subs	r0, #0
 800878e:	bf18      	it	ne
 8008790:	2001      	movne	r0, #1
}
 8008792:	bd10      	pop	{r4, pc}

08008794 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8008794:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8008796:	210b      	movs	r1, #11
 8008798:	b2c0      	uxtb	r0, r0
 800879a:	f7f9 f903 	bl	80019a4 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 800879e:	f000 001f 	and.w	r0, r0, #31
 80087a2:	bd08      	pop	{r3, pc}

080087a4 <stmpe811_TS_GetXY>:
{
 80087a4:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80087a6:	2304      	movs	r3, #4
{
 80087a8:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80087aa:	b2c4      	uxtb	r4, r0
{
 80087ac:	4615      	mov	r5, r2
 80087ae:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80087b0:	eb0d 0203 	add.w	r2, sp, r3
 80087b4:	21d7      	movs	r1, #215	; 0xd7
 80087b6:	4620      	mov	r0, r4
 80087b8:	f7f9 f910 	bl	80019dc <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 80087bc:	9b01      	ldr	r3, [sp, #4]
 80087be:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80087c0:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80087c2:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80087c6:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80087c8:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80087ca:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80087cc:	2201      	movs	r2, #1
 80087ce:	214b      	movs	r1, #75	; 0x4b
 80087d0:	f7f9 f8d0 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80087d4:	2200      	movs	r2, #0
 80087d6:	214b      	movs	r1, #75	; 0x4b
 80087d8:	4620      	mov	r0, r4
 80087da:	f7f9 f8cb 	bl	8001974 <IOE_Write>
}
 80087de:	b002      	add	sp, #8
 80087e0:	bd70      	pop	{r4, r5, r6, pc}
 80087e2:	bf00      	nop

080087e4 <stmpe811_TS_Start>:
{
 80087e4:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80087e6:	b2c4      	uxtb	r4, r0
 80087e8:	2104      	movs	r1, #4
 80087ea:	4620      	mov	r0, r4
 80087ec:	f7f9 f8da 	bl	80019a4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80087f0:	2104      	movs	r1, #4
 80087f2:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80087f6:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80087f8:	4620      	mov	r0, r4
 80087fa:	f7f9 f8bb 	bl	8001974 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 80087fe:	2117      	movs	r1, #23
 8008800:	4620      	mov	r0, r4
 8008802:	f7f9 f8cf 	bl	80019a4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8008806:	2117      	movs	r1, #23
 8008808:	f000 020f 	and.w	r2, r0, #15
 800880c:	4620      	mov	r0, r4
 800880e:	f7f9 f8b1 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008812:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8008816:	4620      	mov	r0, r4
 8008818:	2104      	movs	r1, #4
 800881a:	f7f9 f8ab 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800881e:	2249      	movs	r2, #73	; 0x49
 8008820:	2120      	movs	r1, #32
 8008822:	4620      	mov	r0, r4
 8008824:	f7f9 f8a6 	bl	8001974 <IOE_Write>
  IOE_Delay(2); 
 8008828:	2002      	movs	r0, #2
 800882a:	f7f9 f8ef 	bl	8001a0c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 800882e:	4620      	mov	r0, r4
 8008830:	2201      	movs	r2, #1
 8008832:	2121      	movs	r1, #33	; 0x21
 8008834:	f7f9 f89e 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8008838:	4620      	mov	r0, r4
 800883a:	229a      	movs	r2, #154	; 0x9a
 800883c:	2141      	movs	r1, #65	; 0x41
 800883e:	f7f9 f899 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8008842:	4620      	mov	r0, r4
 8008844:	2201      	movs	r2, #1
 8008846:	214a      	movs	r1, #74	; 0x4a
 8008848:	f7f9 f894 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800884c:	4620      	mov	r0, r4
 800884e:	2201      	movs	r2, #1
 8008850:	214b      	movs	r1, #75	; 0x4b
 8008852:	f7f9 f88f 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008856:	4620      	mov	r0, r4
 8008858:	2200      	movs	r2, #0
 800885a:	214b      	movs	r1, #75	; 0x4b
 800885c:	f7f9 f88a 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8008860:	4620      	mov	r0, r4
 8008862:	2201      	movs	r2, #1
 8008864:	2156      	movs	r1, #86	; 0x56
 8008866:	f7f9 f885 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800886a:	4620      	mov	r0, r4
 800886c:	2201      	movs	r2, #1
 800886e:	2158      	movs	r1, #88	; 0x58
 8008870:	f7f9 f880 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8008874:	4620      	mov	r0, r4
 8008876:	2201      	movs	r2, #1
 8008878:	2140      	movs	r1, #64	; 0x40
 800887a:	f7f9 f87b 	bl	8001974 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800887e:	4620      	mov	r0, r4
 8008880:	22ff      	movs	r2, #255	; 0xff
 8008882:	210b      	movs	r1, #11
 8008884:	f7f9 f876 	bl	8001974 <IOE_Write>
}
 8008888:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 800888c:	2002      	movs	r0, #2
 800888e:	f7f9 b8bd 	b.w	8001a0c <IOE_Delay>
 8008892:	bf00      	nop

08008894 <stmpe811_TS_DisableIT>:
{
 8008894:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8008896:	b2c4      	uxtb	r4, r0
 8008898:	2109      	movs	r1, #9
 800889a:	4620      	mov	r0, r4
 800889c:	f7f9 f882 	bl	80019a4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80088a0:	2109      	movs	r1, #9
 80088a2:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 80088a6:	4620      	mov	r0, r4
 80088a8:	f7f9 f864 	bl	8001974 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80088ac:	210a      	movs	r1, #10
 80088ae:	4620      	mov	r0, r4
 80088b0:	f7f9 f878 	bl	80019a4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80088b4:	210a      	movs	r1, #10
 80088b6:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 80088ba:	4620      	mov	r0, r4
}
 80088bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80088c0:	f7f9 b858 	b.w	8001974 <IOE_Write>

080088c4 <stmpe811_TS_EnableIT>:
{
 80088c4:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80088c6:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 80088c8:	f7f9 f852 	bl	8001970 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80088cc:	210a      	movs	r1, #10
 80088ce:	4620      	mov	r0, r4
 80088d0:	f7f9 f868 	bl	80019a4 <IOE_Read>
  tmp |= Source; 
 80088d4:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80088d8:	b2c2      	uxtb	r2, r0
 80088da:	210a      	movs	r1, #10
 80088dc:	4620      	mov	r0, r4
 80088de:	f7f9 f849 	bl	8001974 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80088e2:	2109      	movs	r1, #9
 80088e4:	4620      	mov	r0, r4
 80088e6:	f7f9 f85d 	bl	80019a4 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 80088ea:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80088ee:	b2c2      	uxtb	r2, r0
 80088f0:	2109      	movs	r1, #9
 80088f2:	4620      	mov	r0, r4
}
 80088f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80088f8:	f7f9 b83c 	b.w	8001974 <IOE_Write>

080088fc <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 80088fc:	4a10      	ldr	r2, [pc, #64]	; (8008940 <stmpe811_Init+0x44>)
 80088fe:	7813      	ldrb	r3, [r2, #0]
 8008900:	4298      	cmp	r0, r3
 8008902:	d004      	beq.n	800890e <stmpe811_Init+0x12>
 8008904:	7851      	ldrb	r1, [r2, #1]
 8008906:	4288      	cmp	r0, r1
 8008908:	d001      	beq.n	800890e <stmpe811_Init+0x12>
 800890a:	b113      	cbz	r3, 8008912 <stmpe811_Init+0x16>
 800890c:	b101      	cbz	r1, 8008910 <stmpe811_Init+0x14>
 800890e:	4770      	bx	lr
 8008910:	2301      	movs	r3, #1
{
 8008912:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 8008914:	b2c4      	uxtb	r4, r0
 8008916:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8008918:	f7f9 f828 	bl	800196c <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800891c:	2202      	movs	r2, #2
 800891e:	2103      	movs	r1, #3
 8008920:	4620      	mov	r0, r4
 8008922:	f7f9 f827 	bl	8001974 <IOE_Write>
  IOE_Delay(10); 
 8008926:	200a      	movs	r0, #10
 8008928:	f7f9 f870 	bl	8001a0c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800892c:	4620      	mov	r0, r4
 800892e:	2200      	movs	r2, #0
 8008930:	2103      	movs	r1, #3
 8008932:	f7f9 f81f 	bl	8001974 <IOE_Write>
}
 8008936:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800893a:	2002      	movs	r0, #2
 800893c:	f7f9 b866 	b.w	8001a0c <IOE_Delay>
 8008940:	200029bc 	.word	0x200029bc

08008944 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8008944:	4b05      	ldr	r3, [pc, #20]	; (800895c <SystemInit+0x18>)
 8008946:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800894a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800894e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8008952:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8008956:	6099      	str	r1, [r3, #8]
#endif
}
 8008958:	4770      	bx	lr
 800895a:	bf00      	nop
 800895c:	e000ed00 	.word	0xe000ed00

08008960 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8008960:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8008962:	4b0b      	ldr	r3, [pc, #44]	; (8008990 <HAL_Init+0x30>)
 8008964:	681a      	ldr	r2, [r3, #0]
 8008966:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800896a:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800896c:	681a      	ldr	r2, [r3, #0]
 800896e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8008972:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8008974:	681a      	ldr	r2, [r3, #0]
 8008976:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800897a:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800897c:	2003      	movs	r0, #3
 800897e:	f000 f82d 	bl	80089dc <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8008982:	2000      	movs	r0, #0
 8008984:	f7f9 fb74 	bl	8002070 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8008988:	f7f9 f8f2 	bl	8001b70 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800898c:	2000      	movs	r0, #0
 800898e:	bd08      	pop	{r3, pc}
 8008990:	40023c00 	.word	0x40023c00

08008994 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8008994:	4a03      	ldr	r2, [pc, #12]	; (80089a4 <HAL_IncTick+0x10>)
 8008996:	4b04      	ldr	r3, [pc, #16]	; (80089a8 <HAL_IncTick+0x14>)
 8008998:	6811      	ldr	r1, [r2, #0]
 800899a:	781b      	ldrb	r3, [r3, #0]
 800899c:	440b      	add	r3, r1
 800899e:	6013      	str	r3, [r2, #0]
}
 80089a0:	4770      	bx	lr
 80089a2:	bf00      	nop
 80089a4:	200029c0 	.word	0x200029c0
 80089a8:	2000007c 	.word	0x2000007c

080089ac <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80089ac:	4b01      	ldr	r3, [pc, #4]	; (80089b4 <HAL_GetTick+0x8>)
 80089ae:	6818      	ldr	r0, [r3, #0]
}
 80089b0:	4770      	bx	lr
 80089b2:	bf00      	nop
 80089b4:	200029c0 	.word	0x200029c0

080089b8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80089b8:	b538      	push	{r3, r4, r5, lr}
 80089ba:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80089bc:	f7ff fff6 	bl	80089ac <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80089c0:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 80089c2:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 80089c4:	d002      	beq.n	80089cc <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 80089c6:	4b04      	ldr	r3, [pc, #16]	; (80089d8 <HAL_Delay+0x20>)
 80089c8:	781b      	ldrb	r3, [r3, #0]
 80089ca:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80089cc:	f7ff ffee 	bl	80089ac <HAL_GetTick>
 80089d0:	1b43      	subs	r3, r0, r5
 80089d2:	42a3      	cmp	r3, r4
 80089d4:	d3fa      	bcc.n	80089cc <HAL_Delay+0x14>
  {
  }
}
 80089d6:	bd38      	pop	{r3, r4, r5, pc}
 80089d8:	2000007c 	.word	0x2000007c

080089dc <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80089dc:	4907      	ldr	r1, [pc, #28]	; (80089fc <HAL_NVIC_SetPriorityGrouping+0x20>)
 80089de:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80089e0:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80089e2:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80089e6:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80089ea:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80089ec:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80089ee:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80089f2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80089f6:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80089f8:	4770      	bx	lr
 80089fa:	bf00      	nop
 80089fc:	e000ed00 	.word	0xe000ed00

08008a00 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8008a00:	4b1c      	ldr	r3, [pc, #112]	; (8008a74 <HAL_NVIC_SetPriority+0x74>)
 8008a02:	68db      	ldr	r3, [r3, #12]
 8008a04:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8008a08:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8008a0a:	f1c3 0e07 	rsb	lr, r3, #7
 8008a0e:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008a12:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8008a16:	bf28      	it	cs
 8008a18:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008a1c:	f1bc 0f06 	cmp.w	ip, #6
 8008a20:	d91b      	bls.n	8008a5a <HAL_NVIC_SetPriority+0x5a>
 8008a22:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8008a24:	f04f 3cff 	mov.w	ip, #4294967295
 8008a28:	fa0c fc03 	lsl.w	ip, ip, r3
 8008a2c:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8008a30:	f04f 3cff 	mov.w	ip, #4294967295
 8008a34:	fa0c fc0e 	lsl.w	ip, ip, lr
 8008a38:	ea21 010c 	bic.w	r1, r1, ip
 8008a3c:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 8008a3e:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8008a40:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 8008a44:	db0c      	blt.n	8008a60 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8008a46:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8008a4a:	0109      	lsls	r1, r1, #4
 8008a4c:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8008a50:	b2c9      	uxtb	r1, r1
 8008a52:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8008a56:	f85d fb04 	ldr.w	pc, [sp], #4
 8008a5a:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8008a5c:	4613      	mov	r3, r2
 8008a5e:	e7e7      	b.n	8008a30 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8008a60:	4b05      	ldr	r3, [pc, #20]	; (8008a78 <HAL_NVIC_SetPriority+0x78>)
 8008a62:	f000 000f 	and.w	r0, r0, #15
 8008a66:	0109      	lsls	r1, r1, #4
 8008a68:	4403      	add	r3, r0
 8008a6a:	b2c9      	uxtb	r1, r1
 8008a6c:	7619      	strb	r1, [r3, #24]
 8008a6e:	f85d fb04 	ldr.w	pc, [sp], #4
 8008a72:	bf00      	nop
 8008a74:	e000ed00 	.word	0xe000ed00
 8008a78:	e000ecfc 	.word	0xe000ecfc

08008a7c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8008a7c:	2800      	cmp	r0, #0
 8008a7e:	db07      	blt.n	8008a90 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8008a80:	0941      	lsrs	r1, r0, #5
 8008a82:	4a04      	ldr	r2, [pc, #16]	; (8008a94 <HAL_NVIC_EnableIRQ+0x18>)
 8008a84:	f000 001f 	and.w	r0, r0, #31
 8008a88:	2301      	movs	r3, #1
 8008a8a:	4083      	lsls	r3, r0
 8008a8c:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8008a90:	4770      	bx	lr
 8008a92:	bf00      	nop
 8008a94:	e000e100 	.word	0xe000e100

08008a98 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8008a98:	b180      	cbz	r0, 8008abc <HAL_CRC_Init+0x24>
{
 8008a9a:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8008a9c:	7943      	ldrb	r3, [r0, #5]
 8008a9e:	4604      	mov	r4, r0
 8008aa0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008aa4:	b11b      	cbz	r3, 8008aae <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8008aa6:	2301      	movs	r3, #1
 8008aa8:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8008aaa:	2000      	movs	r0, #0
}
 8008aac:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 8008aae:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 8008ab0:	f7f9 f87e 	bl	8001bb0 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 8008ab4:	2301      	movs	r3, #1
 8008ab6:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 8008ab8:	2000      	movs	r0, #0
}
 8008aba:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8008abc:	2001      	movs	r0, #1
}
 8008abe:	4770      	bx	lr

08008ac0 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8008ac0:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8008ac4:	2b02      	cmp	r3, #2
 8008ac6:	d003      	beq.n	8008ad0 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8008ac8:	2380      	movs	r3, #128	; 0x80
 8008aca:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8008acc:	2001      	movs	r0, #1
 8008ace:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8008ad0:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8008ad2:	2305      	movs	r3, #5
 8008ad4:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8008ad8:	6813      	ldr	r3, [r2, #0]
 8008ada:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 8008ade:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8008ae0:	6013      	str	r3, [r2, #0]
}
 8008ae2:	4770      	bx	lr

08008ae4 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 8008ae4:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 8008ae8:	4770      	bx	lr
 8008aea:	bf00      	nop

08008aec <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8008aec:	b348      	cbz	r0, 8008b42 <HAL_DMA2D_Init+0x56>
{
 8008aee:	b510      	push	{r4, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8008af0:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8008af4:	4604      	mov	r4, r0
 8008af6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008afa:	b1eb      	cbz	r3, 8008b38 <HAL_DMA2D_Init+0x4c>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8008afc:	6822      	ldr	r2, [r4, #0]
 8008afe:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8008b00:	2302      	movs	r3, #2
 8008b02:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8008b06:	6813      	ldr	r3, [r2, #0]
 8008b08:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8008b0c:	430b      	orrs	r3, r1
 8008b0e:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8008b10:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8008b12:	68a1      	ldr	r1, [r4, #8]
 8008b14:	f023 0307 	bic.w	r3, r3, #7
 8008b18:	430b      	orrs	r3, r1
 8008b1a:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8008b1c:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8008b1e:	68e1      	ldr	r1, [r4, #12]
 8008b20:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8008b24:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8008b28:	430b      	orrs	r3, r1
 8008b2a:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8008b2c:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8008b2e:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8008b30:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8008b32:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8008b36:	bd10      	pop	{r4, pc}
    hdma2d->Lock = HAL_UNLOCKED;
 8008b38:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 8008b3c:	f7f9 f852 	bl	8001be4 <HAL_DMA2D_MspInit>
 8008b40:	e7dc      	b.n	8008afc <HAL_DMA2D_Init+0x10>
    return HAL_ERROR;
 8008b42:	2001      	movs	r0, #1
}
 8008b44:	4770      	bx	lr
 8008b46:	bf00      	nop

08008b48 <HAL_DMA2D_LineEventCallback>:
 8008b48:	4770      	bx	lr
 8008b4a:	bf00      	nop

08008b4c <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8008b4c:	4770      	bx	lr
 8008b4e:	bf00      	nop

08008b50 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8008b50:	6803      	ldr	r3, [r0, #0]
{
 8008b52:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8008b54:	685d      	ldr	r5, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8008b56:	681e      	ldr	r6, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8008b58:	07ea      	lsls	r2, r5, #31
{
 8008b5a:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8008b5c:	d501      	bpl.n	8008b62 <HAL_DMA2D_IRQHandler+0x12>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8008b5e:	05f1      	lsls	r1, r6, #23
 8008b60:	d457      	bmi.n	8008c12 <HAL_DMA2D_IRQHandler+0xc2>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8008b62:	06aa      	lsls	r2, r5, #26
 8008b64:	d501      	bpl.n	8008b6a <HAL_DMA2D_IRQHandler+0x1a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8008b66:	04b3      	lsls	r3, r6, #18
 8008b68:	d43c      	bmi.n	8008be4 <HAL_DMA2D_IRQHandler+0x94>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8008b6a:	0728      	lsls	r0, r5, #28
 8008b6c:	d501      	bpl.n	8008b72 <HAL_DMA2D_IRQHandler+0x22>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8008b6e:	0531      	lsls	r1, r6, #20
 8008b70:	d421      	bmi.n	8008bb6 <HAL_DMA2D_IRQHandler+0x66>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8008b72:	076a      	lsls	r2, r5, #29
 8008b74:	d501      	bpl.n	8008b7a <HAL_DMA2D_IRQHandler+0x2a>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8008b76:	0573      	lsls	r3, r6, #21
 8008b78:	d473      	bmi.n	8008c62 <HAL_DMA2D_IRQHandler+0x112>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8008b7a:	07a8      	lsls	r0, r5, #30
 8008b7c:	d501      	bpl.n	8008b82 <HAL_DMA2D_IRQHandler+0x32>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8008b7e:	05b1      	lsls	r1, r6, #22
 8008b80:	d404      	bmi.n	8008b8c <HAL_DMA2D_IRQHandler+0x3c>
        hdma2d->XferCpltCallback(hdma2d);
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8008b82:	06ea      	lsls	r2, r5, #27
 8008b84:	d501      	bpl.n	8008b8a <HAL_DMA2D_IRQHandler+0x3a>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8008b86:	04f3      	lsls	r3, r6, #19
 8008b88:	d458      	bmi.n	8008c3c <HAL_DMA2D_IRQHandler+0xec>
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8008b8a:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8008b8c:	6823      	ldr	r3, [r4, #0]
 8008b8e:	681a      	ldr	r2, [r3, #0]
 8008b90:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8008b94:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8008b96:	2202      	movs	r2, #2
 8008b98:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8008b9a:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8008b9c:	63e2      	str	r2, [r4, #60]	; 0x3c
      if (hdma2d->XferCpltCallback != NULL)
 8008b9e:	6923      	ldr	r3, [r4, #16]
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8008ba0:	2201      	movs	r2, #1
 8008ba2:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8008ba6:	2200      	movs	r2, #0
 8008ba8:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
      if (hdma2d->XferCpltCallback != NULL)
 8008bac:	2b00      	cmp	r3, #0
 8008bae:	d0e8      	beq.n	8008b82 <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
 8008bb0:	4620      	mov	r0, r4
 8008bb2:	4798      	blx	r3
 8008bb4:	e7e5      	b.n	8008b82 <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8008bb6:	6823      	ldr	r3, [r4, #0]
 8008bb8:	681a      	ldr	r2, [r3, #0]
 8008bba:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8008bbe:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8008bc0:	2208      	movs	r2, #8
 8008bc2:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8008bc4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 8008bc6:	6962      	ldr	r2, [r4, #20]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8008bc8:	f043 0304 	orr.w	r3, r3, #4
 8008bcc:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8008bce:	2104      	movs	r1, #4
      __HAL_UNLOCK(hdma2d);
 8008bd0:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8008bd2:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8008bd6:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8008bda:	2a00      	cmp	r2, #0
 8008bdc:	d0c9      	beq.n	8008b72 <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
 8008bde:	4620      	mov	r0, r4
 8008be0:	4790      	blx	r2
 8008be2:	e7c6      	b.n	8008b72 <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8008be4:	6823      	ldr	r3, [r4, #0]
 8008be6:	681a      	ldr	r2, [r3, #0]
 8008be8:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8008bec:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8008bee:	2220      	movs	r2, #32
 8008bf0:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8008bf2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 8008bf4:	6962      	ldr	r2, [r4, #20]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8008bf6:	f043 0302 	orr.w	r3, r3, #2
 8008bfa:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8008bfc:	2104      	movs	r1, #4
      __HAL_UNLOCK(hdma2d);
 8008bfe:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8008c00:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8008c04:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8008c08:	2a00      	cmp	r2, #0
 8008c0a:	d0ae      	beq.n	8008b6a <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
 8008c0c:	4620      	mov	r0, r4
 8008c0e:	4790      	blx	r2
 8008c10:	e7ab      	b.n	8008b6a <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8008c12:	681a      	ldr	r2, [r3, #0]
 8008c14:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8008c18:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8008c1a:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8008c1c:	2101      	movs	r1, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8008c1e:	f042 0201 	orr.w	r2, r2, #1
 8008c22:	63c2      	str	r2, [r0, #60]	; 0x3c
      if (hdma2d->XferErrorCallback != NULL)
 8008c24:	6942      	ldr	r2, [r0, #20]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8008c26:	6099      	str	r1, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8008c28:	2304      	movs	r3, #4
 8008c2a:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8008c2e:	2300      	movs	r3, #0
 8008c30:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8008c34:	2a00      	cmp	r2, #0
 8008c36:	d094      	beq.n	8008b62 <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
 8008c38:	4790      	blx	r2
 8008c3a:	e792      	b.n	8008b62 <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8008c3c:	6823      	ldr	r3, [r4, #0]
 8008c3e:	681a      	ldr	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8008c40:	2010      	movs	r0, #16
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8008c42:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8008c46:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8008c48:	6098      	str	r0, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8008c4a:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8008c4c:	63e2      	str	r2, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8008c4e:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
 8008c50:	2300      	movs	r3, #0
 8008c52:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8008c56:	f884 1039 	strb.w	r1, [r4, #57]	; 0x39
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8008c5a:	4620      	mov	r0, r4
 8008c5c:	f7ff ff76 	bl	8008b4c <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8008c60:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8008c62:	6823      	ldr	r3, [r4, #0]
 8008c64:	681a      	ldr	r2, [r3, #0]
 8008c66:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8008c6a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8008c6c:	2204      	movs	r2, #4
 8008c6e:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8008c70:	4620      	mov	r0, r4
 8008c72:	f7ff ff69 	bl	8008b48 <HAL_DMA2D_LineEventCallback>
 8008c76:	e780      	b.n	8008b7a <HAL_DMA2D_IRQHandler+0x2a>

08008c78 <HAL_DMA2D_ConfigLayer>:
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8008c78:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8008c7c:	2b01      	cmp	r3, #1
 8008c7e:	d04d      	beq.n	8008d1c <HAL_DMA2D_ConfigLayer+0xa4>
 8008c80:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8008c82:	2302      	movs	r3, #2
{
 8008c84:	b470      	push	{r4, r5, r6}

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8008c86:	eb00 1c01 	add.w	ip, r0, r1, lsl #4
  __HAL_LOCK(hdma2d);
 8008c8a:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8008c8e:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8008c92:	e9dc 2307 	ldrd	r2, r3, [ip, #28]
 8008c96:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8008c9a:	3a09      	subs	r2, #9
 8008c9c:	2a01      	cmp	r2, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8008c9e:	f8dc 2024 	ldr.w	r2, [ip, #36]	; 0x24
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8008ca2:	d91d      	bls.n	8008ce0 <HAL_DMA2D_ConfigLayer+0x68>
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8008ca4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8008ca8:	b189      	cbz	r1, 8008cce <HAL_DMA2D_ConfigLayer+0x56>
  else
  {


    /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8008caa:	6801      	ldr	r1, [r0, #0]
 8008cac:	4a1c      	ldr	r2, [pc, #112]	; (8008d20 <HAL_DMA2D_ConfigLayer+0xa8>)
 8008cae:	69cd      	ldr	r5, [r1, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8008cb0:	f8dc 4018 	ldr.w	r4, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8008cb4:	402a      	ands	r2, r5
 8008cb6:	431a      	orrs	r2, r3
 8008cb8:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8008cba:	610c      	str	r4, [r1, #16]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8008cbc:	2300      	movs	r3, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8008cbe:	2201      	movs	r2, #1
 8008cc0:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8008cc4:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

  return HAL_OK;
}
 8008cc8:	bc70      	pop	{r4, r5, r6}
  return HAL_OK;
 8008cca:	4618      	mov	r0, r3
}
 8008ccc:	4770      	bx	lr
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8008cce:	6801      	ldr	r1, [r0, #0]
 8008cd0:	4a13      	ldr	r2, [pc, #76]	; (8008d20 <HAL_DMA2D_ConfigLayer+0xa8>)
 8008cd2:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 8008cd4:	4022      	ands	r2, r4
 8008cd6:	431a      	orrs	r2, r3
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8008cd8:	6984      	ldr	r4, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8008cda:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8008cdc:	618c      	str	r4, [r1, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8008cde:	e7ed      	b.n	8008cbc <HAL_DMA2D_ConfigLayer+0x44>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8008ce0:	f002 447f 	and.w	r4, r2, #4278190080	; 0xff000000
 8008ce4:	4323      	orrs	r3, r4
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8008ce6:	b961      	cbnz	r1, 8008d02 <HAL_DMA2D_ConfigLayer+0x8a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8008ce8:	6801      	ldr	r1, [r0, #0]
 8008cea:	4a0d      	ldr	r2, [pc, #52]	; (8008d20 <HAL_DMA2D_ConfigLayer+0xa8>)
 8008cec:	6a4c      	ldr	r4, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8008cee:	6985      	ldr	r5, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8008cf0:	4022      	ands	r2, r4
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8008cf2:	6a44      	ldr	r4, [r0, #36]	; 0x24
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8008cf4:	431a      	orrs	r2, r3
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8008cf6:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8008cfa:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8008cfc:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8008cfe:	628c      	str	r4, [r1, #40]	; 0x28
 8008d00:	e7dc      	b.n	8008cbc <HAL_DMA2D_ConfigLayer+0x44>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8008d02:	6804      	ldr	r4, [r0, #0]
 8008d04:	4906      	ldr	r1, [pc, #24]	; (8008d20 <HAL_DMA2D_ConfigLayer+0xa8>)
 8008d06:	69e6      	ldr	r6, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8008d08:	f8dc 5018 	ldr.w	r5, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8008d0c:	4031      	ands	r1, r6
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8008d0e:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8008d12:	4319      	orrs	r1, r3
 8008d14:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8008d16:	6125      	str	r5, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8008d18:	6222      	str	r2, [r4, #32]
 8008d1a:	e7cf      	b.n	8008cbc <HAL_DMA2D_ConfigLayer+0x44>
  __HAL_LOCK(hdma2d);
 8008d1c:	2002      	movs	r0, #2
}
 8008d1e:	4770      	bx	lr
 8008d20:	00fcfff0 	.word	0x00fcfff0

08008d24 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8008d24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8008d28:	2200      	movs	r2, #0
 8008d2a:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8008d2c:	f8df a260 	ldr.w	sl, [pc, #608]	; 8008f90 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8008d30:	4e90      	ldr	r6, [pc, #576]	; (8008f74 <HAL_GPIO_Init+0x250>)
{
 8008d32:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 8008d34:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8008d36:	4689      	mov	r9, r1
 8008d38:	e005      	b.n	8008d46 <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8008d3a:	3301      	adds	r3, #1
 8008d3c:	2b10      	cmp	r3, #16
 8008d3e:	f102 0202 	add.w	r2, r2, #2
 8008d42:	f000 8095 	beq.w	8008e70 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 8008d46:	2101      	movs	r1, #1
 8008d48:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8008d4a:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 8008d4e:	43a1      	bics	r1, r4
 8008d50:	d1f3      	bne.n	8008d3a <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8008d52:	f8d9 c004 	ldr.w	ip, [r9, #4]
 8008d56:	f00c 0103 	and.w	r1, ip, #3
 8008d5a:	1e4d      	subs	r5, r1, #1
 8008d5c:	2d01      	cmp	r5, #1
 8008d5e:	f240 808a 	bls.w	8008e76 <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8008d62:	2903      	cmp	r1, #3
 8008d64:	f040 80ca 	bne.w	8008efc <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8008d68:	4091      	lsls	r1, r2
 8008d6a:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 8008d6c:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8008d6e:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8008d70:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8008d72:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 8008d76:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8008d78:	d0df      	beq.n	8008d3a <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8008d7a:	2100      	movs	r1, #0
 8008d7c:	9103      	str	r1, [sp, #12]
 8008d7e:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8008d82:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8008d86:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 8008d8a:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8008d8e:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8008d92:	9103      	str	r1, [sp, #12]
 8008d94:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 8008d96:	f023 0103 	bic.w	r1, r3, #3
 8008d9a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8008d9e:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8008da2:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8008da6:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8008da8:	00bf      	lsls	r7, r7, #2
 8008daa:	f04f 0e0f 	mov.w	lr, #15
 8008dae:	fa0e fe07 	lsl.w	lr, lr, r7
 8008db2:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8008db6:	4d70      	ldr	r5, [pc, #448]	; (8008f78 <HAL_GPIO_Init+0x254>)
 8008db8:	42a8      	cmp	r0, r5
 8008dba:	d02e      	beq.n	8008e1a <HAL_GPIO_Init+0xf6>
 8008dbc:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8008dc0:	42a8      	cmp	r0, r5
 8008dc2:	f000 809f 	beq.w	8008f04 <HAL_GPIO_Init+0x1e0>
 8008dc6:	4d6d      	ldr	r5, [pc, #436]	; (8008f7c <HAL_GPIO_Init+0x258>)
 8008dc8:	42a8      	cmp	r0, r5
 8008dca:	f000 80a2 	beq.w	8008f12 <HAL_GPIO_Init+0x1ee>
 8008dce:	4d6c      	ldr	r5, [pc, #432]	; (8008f80 <HAL_GPIO_Init+0x25c>)
 8008dd0:	42a8      	cmp	r0, r5
 8008dd2:	f000 80a5 	beq.w	8008f20 <HAL_GPIO_Init+0x1fc>
 8008dd6:	4d6b      	ldr	r5, [pc, #428]	; (8008f84 <HAL_GPIO_Init+0x260>)
 8008dd8:	42a8      	cmp	r0, r5
 8008dda:	f000 80a8 	beq.w	8008f2e <HAL_GPIO_Init+0x20a>
 8008dde:	4d6a      	ldr	r5, [pc, #424]	; (8008f88 <HAL_GPIO_Init+0x264>)
 8008de0:	42a8      	cmp	r0, r5
 8008de2:	f000 80b2 	beq.w	8008f4a <HAL_GPIO_Init+0x226>
 8008de6:	4d69      	ldr	r5, [pc, #420]	; (8008f8c <HAL_GPIO_Init+0x268>)
 8008de8:	42a8      	cmp	r0, r5
 8008dea:	f000 80b5 	beq.w	8008f58 <HAL_GPIO_Init+0x234>
 8008dee:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 8008f94 <HAL_GPIO_Init+0x270>
 8008df2:	4570      	cmp	r0, lr
 8008df4:	f000 80a2 	beq.w	8008f3c <HAL_GPIO_Init+0x218>
 8008df8:	f8df e19c 	ldr.w	lr, [pc, #412]	; 8008f98 <HAL_GPIO_Init+0x274>
 8008dfc:	4570      	cmp	r0, lr
 8008dfe:	f000 80b2 	beq.w	8008f66 <HAL_GPIO_Init+0x242>
 8008e02:	f8df e198 	ldr.w	lr, [pc, #408]	; 8008f9c <HAL_GPIO_Init+0x278>
 8008e06:	4570      	cmp	r0, lr
 8008e08:	bf0c      	ite	eq
 8008e0a:	f04f 0e09 	moveq.w	lr, #9
 8008e0e:	f04f 0e0a 	movne.w	lr, #10
 8008e12:	fa0e f707 	lsl.w	r7, lr, r7
 8008e16:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8008e1a:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 8008e1e:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 8008e20:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8008e24:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8008e28:	bf0c      	ite	eq
 8008e2a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8008e2c:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 8008e30:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 8008e32:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8008e34:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 8008e38:	bf0c      	ite	eq
 8008e3a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8008e3c:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 8008e40:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 8008e42:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8008e44:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8008e48:	bf0c      	ite	eq
 8008e4a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8008e4c:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 8008e50:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8008e52:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8008e54:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 8008e58:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 8008e5c:	bf0c      	ite	eq
 8008e5e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8008e60:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 8008e64:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 8008e66:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8008e68:	f102 0202 	add.w	r2, r2, #2
 8008e6c:	f47f af6b 	bne.w	8008d46 <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 8008e70:	b005      	add	sp, #20
 8008e72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 8008e76:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 8008e7a:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8008e7e:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8008e82:	2503      	movs	r5, #3
 8008e84:	fa05 f802 	lsl.w	r8, r5, r2
 8008e88:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 8008e8c:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8008e90:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8008e92:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8008e94:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8008e98:	f3cc 1700 	ubfx	r7, ip, #4, #1
 8008e9c:	409f      	lsls	r7, r3
 8008e9e:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8008ea2:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 8008ea6:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8008ea8:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8008eaa:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8008eae:	f8d9 7008 	ldr.w	r7, [r9, #8]
 8008eb2:	4097      	lsls	r7, r2
 8008eb4:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8008eb8:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 8008eba:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8008ebc:	fa01 f102 	lsl.w	r1, r1, r2
 8008ec0:	f47f af54 	bne.w	8008d6c <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 8008ec4:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 8008ec8:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8008ecc:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8008ed0:	f8de 7020 	ldr.w	r7, [lr, #32]
 8008ed4:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8008ed6:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8008eda:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8008ede:	fa07 f708 	lsl.w	r7, r7, r8
 8008ee2:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8008ee4:	270f      	movs	r7, #15
 8008ee6:	fa07 f808 	lsl.w	r8, r7, r8
 8008eea:	9f00      	ldr	r7, [sp, #0]
 8008eec:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8008ef0:	9f01      	ldr	r7, [sp, #4]
 8008ef2:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 8008ef6:	f8ce 7020 	str.w	r7, [lr, #32]
 8008efa:	e737      	b.n	8008d6c <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8008efc:	2503      	movs	r5, #3
 8008efe:	4095      	lsls	r5, r2
 8008f00:	43ed      	mvns	r5, r5
 8008f02:	e7d1      	b.n	8008ea8 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8008f04:	f04f 0e01 	mov.w	lr, #1
 8008f08:	fa0e f707 	lsl.w	r7, lr, r7
 8008f0c:	ea48 0807 	orr.w	r8, r8, r7
 8008f10:	e783      	b.n	8008e1a <HAL_GPIO_Init+0xf6>
 8008f12:	f04f 0e02 	mov.w	lr, #2
 8008f16:	fa0e f707 	lsl.w	r7, lr, r7
 8008f1a:	ea48 0807 	orr.w	r8, r8, r7
 8008f1e:	e77c      	b.n	8008e1a <HAL_GPIO_Init+0xf6>
 8008f20:	f04f 0e03 	mov.w	lr, #3
 8008f24:	fa0e f707 	lsl.w	r7, lr, r7
 8008f28:	ea48 0807 	orr.w	r8, r8, r7
 8008f2c:	e775      	b.n	8008e1a <HAL_GPIO_Init+0xf6>
 8008f2e:	f04f 0e04 	mov.w	lr, #4
 8008f32:	fa0e f707 	lsl.w	r7, lr, r7
 8008f36:	ea48 0807 	orr.w	r8, r8, r7
 8008f3a:	e76e      	b.n	8008e1a <HAL_GPIO_Init+0xf6>
 8008f3c:	f04f 0e07 	mov.w	lr, #7
 8008f40:	fa0e f707 	lsl.w	r7, lr, r7
 8008f44:	ea48 0807 	orr.w	r8, r8, r7
 8008f48:	e767      	b.n	8008e1a <HAL_GPIO_Init+0xf6>
 8008f4a:	f04f 0e05 	mov.w	lr, #5
 8008f4e:	fa0e f707 	lsl.w	r7, lr, r7
 8008f52:	ea48 0807 	orr.w	r8, r8, r7
 8008f56:	e760      	b.n	8008e1a <HAL_GPIO_Init+0xf6>
 8008f58:	f04f 0e06 	mov.w	lr, #6
 8008f5c:	fa0e f707 	lsl.w	r7, lr, r7
 8008f60:	ea48 0807 	orr.w	r8, r8, r7
 8008f64:	e759      	b.n	8008e1a <HAL_GPIO_Init+0xf6>
 8008f66:	f04f 0e08 	mov.w	lr, #8
 8008f6a:	fa0e f707 	lsl.w	r7, lr, r7
 8008f6e:	ea48 0807 	orr.w	r8, r8, r7
 8008f72:	e752      	b.n	8008e1a <HAL_GPIO_Init+0xf6>
 8008f74:	40013c00 	.word	0x40013c00
 8008f78:	40020000 	.word	0x40020000
 8008f7c:	40020800 	.word	0x40020800
 8008f80:	40020c00 	.word	0x40020c00
 8008f84:	40021000 	.word	0x40021000
 8008f88:	40021400 	.word	0x40021400
 8008f8c:	40021800 	.word	0x40021800
 8008f90:	40023800 	.word	0x40023800
 8008f94:	40021c00 	.word	0x40021c00
 8008f98:	40022000 	.word	0x40022000
 8008f9c:	40022400 	.word	0x40022400

08008fa0 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8008fa0:	6903      	ldr	r3, [r0, #16]
 8008fa2:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8008fa4:	bf14      	ite	ne
 8008fa6:	2001      	movne	r0, #1
 8008fa8:	2000      	moveq	r0, #0
 8008faa:	4770      	bx	lr

08008fac <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8008fac:	b902      	cbnz	r2, 8008fb0 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8008fae:	0409      	lsls	r1, r1, #16
 8008fb0:	6181      	str	r1, [r0, #24]
  }
}
 8008fb2:	4770      	bx	lr

08008fb4 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8008fb4:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8008fb6:	ea01 0203 	and.w	r2, r1, r3
 8008fba:	ea21 0103 	bic.w	r1, r1, r3
 8008fbe:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8008fc2:	6181      	str	r1, [r0, #24]
}
 8008fc4:	4770      	bx	lr
 8008fc6:	bf00      	nop

08008fc8 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 8008fc8:	4770      	bx	lr
 8008fca:	bf00      	nop

08008fcc <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8008fcc:	4a04      	ldr	r2, [pc, #16]	; (8008fe0 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 8008fce:	6951      	ldr	r1, [r2, #20]
 8008fd0:	4201      	tst	r1, r0
 8008fd2:	d100      	bne.n	8008fd6 <HAL_GPIO_EXTI_IRQHandler+0xa>
 8008fd4:	4770      	bx	lr
{
 8008fd6:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8008fd8:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8008fda:	f7ff fff5 	bl	8008fc8 <HAL_GPIO_EXTI_Callback>
}
 8008fde:	bd08      	pop	{r3, pc}
 8008fe0:	40013c00 	.word	0x40013c00

08008fe4 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 8008fe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008fe8:	6804      	ldr	r4, [r0, #0]
{
 8008fea:	b083      	sub	sp, #12
 8008fec:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008fee:	6823      	ldr	r3, [r4, #0]
{
 8008ff0:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8008ff4:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008ff8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8008ffc:	4606      	mov	r6, r0
 8008ffe:	468a      	mov	sl, r1
 8009000:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009002:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009004:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009008:	d136      	bne.n	8009078 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800900a:	6965      	ldr	r5, [r4, #20]
 800900c:	07e8      	lsls	r0, r5, #31
 800900e:	d5fc      	bpl.n	800900a <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8009010:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 8009014:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 8009016:	f1b9 3fff 	cmp.w	r9, #4294967295
 800901a:	d003      	beq.n	8009024 <I2C_RequestMemoryWrite+0x40>
 800901c:	e04f      	b.n	80090be <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800901e:	6961      	ldr	r1, [r4, #20]
 8009020:	054d      	lsls	r5, r1, #21
 8009022:	d45d      	bmi.n	80090e0 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009024:	6961      	ldr	r1, [r4, #20]
 8009026:	078b      	lsls	r3, r1, #30
 8009028:	d5f9      	bpl.n	800901e <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800902a:	2300      	movs	r3, #0
 800902c:	9301      	str	r3, [sp, #4]
 800902e:	6963      	ldr	r3, [r4, #20]
 8009030:	9301      	str	r3, [sp, #4]
 8009032:	69a3      	ldr	r3, [r4, #24]
 8009034:	9301      	str	r3, [sp, #4]
 8009036:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009038:	f1b9 3fff 	cmp.w	r9, #4294967295
 800903c:	f040 8088 	bne.w	8009150 <I2C_RequestMemoryWrite+0x16c>
 8009040:	6963      	ldr	r3, [r4, #20]
 8009042:	061a      	lsls	r2, r3, #24
 8009044:	d464      	bmi.n	8009110 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009046:	6963      	ldr	r3, [r4, #20]
 8009048:	055b      	lsls	r3, r3, #21
 800904a:	d5f9      	bpl.n	8009040 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800904c:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800904e:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009052:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009054:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009056:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009058:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800905c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009060:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009062:	f043 0304 	orr.w	r3, r3, #4
 8009066:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009068:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800906a:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800906c:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800906e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009072:	d066      	beq.n	8009142 <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 8009074:	2001      	movs	r0, #1
 8009076:	e01f      	b.n	80090b8 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009078:	6963      	ldr	r3, [r4, #20]
 800907a:	07d9      	lsls	r1, r3, #31
 800907c:	d4c8      	bmi.n	8009010 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800907e:	f7ff fc95 	bl	80089ac <HAL_GetTick>
 8009082:	eba0 000b 	sub.w	r0, r0, fp
 8009086:	4581      	cmp	r9, r0
 8009088:	d304      	bcc.n	8009094 <I2C_RequestMemoryWrite+0xb0>
 800908a:	f1b9 0f00 	cmp.w	r9, #0
 800908e:	d001      	beq.n	8009094 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009090:	6834      	ldr	r4, [r6, #0]
 8009092:	e7b7      	b.n	8009004 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009094:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009096:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009098:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800909a:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800909e:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80090a2:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80090a4:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 80090a6:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80090aa:	f042 0220 	orr.w	r2, r2, #32
 80090ae:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80090b0:	680b      	ldr	r3, [r1, #0]
 80090b2:	05dc      	lsls	r4, r3, #23
 80090b4:	d435      	bmi.n	8009122 <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 80090b6:	2003      	movs	r0, #3
}
 80090b8:	b003      	add	sp, #12
 80090ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80090be:	6963      	ldr	r3, [r4, #20]
 80090c0:	0798      	lsls	r0, r3, #30
 80090c2:	d4b2      	bmi.n	800902a <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80090c4:	6963      	ldr	r3, [r4, #20]
 80090c6:	055a      	lsls	r2, r3, #21
 80090c8:	d40a      	bmi.n	80090e0 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80090ca:	f7ff fc6f 	bl	80089ac <HAL_GetTick>
 80090ce:	eba0 000b 	sub.w	r0, r0, fp
 80090d2:	4581      	cmp	r9, r0
 80090d4:	d34e      	bcc.n	8009174 <I2C_RequestMemoryWrite+0x190>
 80090d6:	f1b9 0f00 	cmp.w	r9, #0
 80090da:	d04b      	beq.n	8009174 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80090dc:	6834      	ldr	r4, [r6, #0]
 80090de:	e79a      	b.n	8009016 <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80090e0:	6823      	ldr	r3, [r4, #0]
 80090e2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80090e6:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80090e8:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80090ea:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 80090ee:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80090f0:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80090f2:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80090f4:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80090f8:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80090fc:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 80090fe:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009102:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 8009106:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009108:	6433      	str	r3, [r6, #64]	; 0x40
}
 800910a:	b003      	add	sp, #12
 800910c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8009110:	f1b8 0f01 	cmp.w	r8, #1
 8009114:	d109      	bne.n	800912a <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009116:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 8009118:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800911a:	6127      	str	r7, [r4, #16]
}
 800911c:	b003      	add	sp, #12
 800911e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8009122:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009126:	6433      	str	r3, [r6, #64]	; 0x40
 8009128:	e7c5      	b.n	80090b6 <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800912a:	0a3b      	lsrs	r3, r7, #8
 800912c:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800912e:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009132:	d12e      	bne.n	8009192 <I2C_RequestMemoryWrite+0x1ae>
 8009134:	6963      	ldr	r3, [r4, #20]
 8009136:	0619      	lsls	r1, r3, #24
 8009138:	d4ed      	bmi.n	8009116 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800913a:	6963      	ldr	r3, [r4, #20]
 800913c:	055a      	lsls	r2, r3, #21
 800913e:	d5f9      	bpl.n	8009134 <I2C_RequestMemoryWrite+0x150>
 8009140:	e784      	b.n	800904c <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009142:	6832      	ldr	r2, [r6, #0]
 8009144:	6813      	ldr	r3, [r2, #0]
 8009146:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800914a:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800914c:	6013      	str	r3, [r2, #0]
 800914e:	e7b3      	b.n	80090b8 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009150:	6963      	ldr	r3, [r4, #20]
 8009152:	061d      	lsls	r5, r3, #24
 8009154:	d4dc      	bmi.n	8009110 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009156:	6963      	ldr	r3, [r4, #20]
 8009158:	0559      	lsls	r1, r3, #21
 800915a:	f53f af77 	bmi.w	800904c <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800915e:	f7ff fc25 	bl	80089ac <HAL_GetTick>
 8009162:	eba0 000b 	sub.w	r0, r0, fp
 8009166:	4581      	cmp	r9, r0
 8009168:	d325      	bcc.n	80091b6 <I2C_RequestMemoryWrite+0x1d2>
 800916a:	f1b9 0f00 	cmp.w	r9, #0
 800916e:	d022      	beq.n	80091b6 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009170:	6834      	ldr	r4, [r6, #0]
 8009172:	e761      	b.n	8009038 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009174:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8009176:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009178:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800917a:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800917e:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009182:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009184:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009188:	f043 0320 	orr.w	r3, r3, #32
 800918c:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800918e:	2001      	movs	r0, #1
 8009190:	e792      	b.n	80090b8 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009192:	6963      	ldr	r3, [r4, #20]
 8009194:	061b      	lsls	r3, r3, #24
 8009196:	d4be      	bmi.n	8009116 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009198:	6963      	ldr	r3, [r4, #20]
 800919a:	0558      	lsls	r0, r3, #21
 800919c:	f53f af56 	bmi.w	800904c <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80091a0:	f7ff fc04 	bl	80089ac <HAL_GetTick>
 80091a4:	eba0 000b 	sub.w	r0, r0, fp
 80091a8:	4581      	cmp	r9, r0
 80091aa:	d304      	bcc.n	80091b6 <I2C_RequestMemoryWrite+0x1d2>
 80091ac:	f1b9 0f00 	cmp.w	r9, #0
 80091b0:	d001      	beq.n	80091b6 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80091b2:	6834      	ldr	r4, [r6, #0]
 80091b4:	e7bb      	b.n	800912e <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80091b6:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80091b8:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80091ba:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80091bc:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80091c0:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80091c4:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80091c6:	4313      	orrs	r3, r2
 80091c8:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 80091ca:	e74d      	b.n	8009068 <I2C_RequestMemoryWrite+0x84>

080091cc <I2C_RequestMemoryRead>:
{
 80091cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80091d0:	6804      	ldr	r4, [r0, #0]
{
 80091d2:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80091d4:	6823      	ldr	r3, [r4, #0]
 80091d6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80091da:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80091dc:	6823      	ldr	r3, [r4, #0]
{
 80091de:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80091e0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 80091e4:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80091e8:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80091ec:	6023      	str	r3, [r4, #0]
{
 80091ee:	4606      	mov	r6, r0
 80091f0:	468b      	mov	fp, r1
 80091f2:	4617      	mov	r7, r2
 80091f4:	f1ba 3fff 	cmp.w	sl, #4294967295
 80091f8:	d13a      	bne.n	8009270 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80091fa:	6965      	ldr	r5, [r4, #20]
 80091fc:	07eb      	lsls	r3, r5, #31
 80091fe:	d5fc      	bpl.n	80091fa <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8009200:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 8009204:	6123      	str	r3, [r4, #16]
 8009206:	fa5f fb8b 	uxtb.w	fp, fp
 800920a:	f1ba 3fff 	cmp.w	sl, #4294967295
 800920e:	d003      	beq.n	8009218 <I2C_RequestMemoryRead+0x4c>
 8009210:	e069      	b.n	80092e6 <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009212:	6965      	ldr	r5, [r4, #20]
 8009214:	056a      	lsls	r2, r5, #21
 8009216:	d44e      	bmi.n	80092b6 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009218:	6965      	ldr	r5, [r4, #20]
 800921a:	07a9      	lsls	r1, r5, #30
 800921c:	d5f9      	bpl.n	8009212 <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800921e:	2300      	movs	r3, #0
 8009220:	9301      	str	r3, [sp, #4]
 8009222:	6963      	ldr	r3, [r4, #20]
 8009224:	9301      	str	r3, [sp, #4]
 8009226:	69a3      	ldr	r3, [r4, #24]
 8009228:	9301      	str	r3, [sp, #4]
 800922a:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800922c:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009230:	f040 80bd 	bne.w	80093ae <I2C_RequestMemoryRead+0x1e2>
 8009234:	6963      	ldr	r3, [r4, #20]
 8009236:	0618      	lsls	r0, r3, #24
 8009238:	d468      	bmi.n	800930c <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800923a:	6963      	ldr	r3, [r4, #20]
 800923c:	0559      	lsls	r1, r3, #21
 800923e:	d5f9      	bpl.n	8009234 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009240:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009242:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009246:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009248:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800924a:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800924c:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009250:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009254:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009256:	f043 0304 	orr.w	r3, r3, #4
 800925a:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800925c:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800925e:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009260:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009262:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009266:	d070      	beq.n	800934a <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 8009268:	2001      	movs	r0, #1
}
 800926a:	b003      	add	sp, #12
 800926c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009270:	6963      	ldr	r3, [r4, #20]
 8009272:	07dd      	lsls	r5, r3, #31
 8009274:	d4c4      	bmi.n	8009200 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009276:	f7ff fb99 	bl	80089ac <HAL_GetTick>
 800927a:	eba0 0009 	sub.w	r0, r0, r9
 800927e:	4582      	cmp	sl, r0
 8009280:	d304      	bcc.n	800928c <I2C_RequestMemoryRead+0xc0>
 8009282:	f1ba 0f00 	cmp.w	sl, #0
 8009286:	d001      	beq.n	800928c <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009288:	6834      	ldr	r4, [r6, #0]
 800928a:	e7b3      	b.n	80091f4 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800928c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800928e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009290:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009292:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009296:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800929a:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800929c:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800929e:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80092a2:	f042 0220 	orr.w	r2, r2, #32
 80092a6:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80092a8:	680b      	ldr	r3, [r1, #0]
 80092aa:	05dc      	lsls	r4, r3, #23
 80092ac:	d43d      	bmi.n	800932a <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 80092ae:	2003      	movs	r0, #3
}
 80092b0:	b003      	add	sp, #12
 80092b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80092b6:	6823      	ldr	r3, [r4, #0]
 80092b8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80092bc:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80092be:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80092c0:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 80092c4:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80092c6:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80092c8:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80092ca:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80092ce:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80092d2:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 80092d4:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80092d8:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 80092dc:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80092de:	6433      	str	r3, [r6, #64]	; 0x40
}
 80092e0:	b003      	add	sp, #12
 80092e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80092e6:	6963      	ldr	r3, [r4, #20]
 80092e8:	079b      	lsls	r3, r3, #30
 80092ea:	d498      	bmi.n	800921e <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80092ec:	6963      	ldr	r3, [r4, #20]
 80092ee:	0558      	lsls	r0, r3, #21
 80092f0:	d4e1      	bmi.n	80092b6 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80092f2:	f7ff fb5b 	bl	80089ac <HAL_GetTick>
 80092f6:	eba0 0009 	sub.w	r0, r0, r9
 80092fa:	4582      	cmp	sl, r0
 80092fc:	f0c0 808f 	bcc.w	800941e <I2C_RequestMemoryRead+0x252>
 8009300:	f1ba 0f00 	cmp.w	sl, #0
 8009304:	f000 808b 	beq.w	800941e <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009308:	6834      	ldr	r4, [r6, #0]
 800930a:	e77e      	b.n	800920a <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800930c:	f1b8 0f01 	cmp.w	r8, #1
 8009310:	d10f      	bne.n	8009332 <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009312:	b2ff      	uxtb	r7, r7
 8009314:	6127      	str	r7, [r4, #16]
 8009316:	f1ba 3fff 	cmp.w	sl, #4294967295
 800931a:	d16e      	bne.n	80093fa <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800931c:	6963      	ldr	r3, [r4, #20]
 800931e:	061b      	lsls	r3, r3, #24
 8009320:	d41a      	bmi.n	8009358 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009322:	6963      	ldr	r3, [r4, #20]
 8009324:	055f      	lsls	r7, r3, #21
 8009326:	d5f9      	bpl.n	800931c <I2C_RequestMemoryRead+0x150>
 8009328:	e78a      	b.n	8009240 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800932a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800932e:	6433      	str	r3, [r6, #64]	; 0x40
 8009330:	e7bd      	b.n	80092ae <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8009332:	0a3b      	lsrs	r3, r7, #8
 8009334:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009336:	f1ba 3fff 	cmp.w	sl, #4294967295
 800933a:	d17e      	bne.n	800943a <I2C_RequestMemoryRead+0x26e>
 800933c:	6963      	ldr	r3, [r4, #20]
 800933e:	061d      	lsls	r5, r3, #24
 8009340:	d4e7      	bmi.n	8009312 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009342:	6963      	ldr	r3, [r4, #20]
 8009344:	0558      	lsls	r0, r3, #21
 8009346:	d5f9      	bpl.n	800933c <I2C_RequestMemoryRead+0x170>
 8009348:	e77a      	b.n	8009240 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800934a:	6832      	ldr	r2, [r6, #0]
 800934c:	6813      	ldr	r3, [r2, #0]
 800934e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 8009352:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009354:	6013      	str	r3, [r2, #0]
 8009356:	e7ab      	b.n	80092b0 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009358:	6823      	ldr	r3, [r4, #0]
 800935a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800935e:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009360:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009364:	d113      	bne.n	800938e <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009366:	6963      	ldr	r3, [r4, #20]
 8009368:	07d8      	lsls	r0, r3, #31
 800936a:	d5fc      	bpl.n	8009366 <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800936c:	f04b 0301 	orr.w	r3, fp, #1
 8009370:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 8009372:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009376:	d003      	beq.n	8009380 <I2C_RequestMemoryRead+0x1b4>
 8009378:	e02b      	b.n	80093d2 <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800937a:	6963      	ldr	r3, [r4, #20]
 800937c:	055b      	lsls	r3, r3, #21
 800937e:	d49a      	bmi.n	80092b6 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009380:	6963      	ldr	r3, [r4, #20]
 8009382:	43db      	mvns	r3, r3
 8009384:	f013 0302 	ands.w	r3, r3, #2
 8009388:	d1f7      	bne.n	800937a <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800938a:	4618      	mov	r0, r3
 800938c:	e790      	b.n	80092b0 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800938e:	6963      	ldr	r3, [r4, #20]
 8009390:	07d9      	lsls	r1, r3, #31
 8009392:	d4eb      	bmi.n	800936c <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009394:	f7ff fb0a 	bl	80089ac <HAL_GetTick>
 8009398:	eba0 0009 	sub.w	r0, r0, r9
 800939c:	4582      	cmp	sl, r0
 800939e:	f4ff af75 	bcc.w	800928c <I2C_RequestMemoryRead+0xc0>
 80093a2:	f1ba 0f00 	cmp.w	sl, #0
 80093a6:	f43f af71 	beq.w	800928c <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80093aa:	6834      	ldr	r4, [r6, #0]
 80093ac:	e7d8      	b.n	8009360 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80093ae:	6963      	ldr	r3, [r4, #20]
 80093b0:	061a      	lsls	r2, r3, #24
 80093b2:	d4ab      	bmi.n	800930c <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80093b4:	6963      	ldr	r3, [r4, #20]
 80093b6:	055d      	lsls	r5, r3, #21
 80093b8:	f53f af42 	bmi.w	8009240 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80093bc:	f7ff faf6 	bl	80089ac <HAL_GetTick>
 80093c0:	eba0 0009 	sub.w	r0, r0, r9
 80093c4:	4582      	cmp	sl, r0
 80093c6:	d34b      	bcc.n	8009460 <I2C_RequestMemoryRead+0x294>
 80093c8:	f1ba 0f00 	cmp.w	sl, #0
 80093cc:	d048      	beq.n	8009460 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80093ce:	6834      	ldr	r4, [r6, #0]
 80093d0:	e72c      	b.n	800922c <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80093d2:	6963      	ldr	r3, [r4, #20]
 80093d4:	43db      	mvns	r3, r3
 80093d6:	f013 0302 	ands.w	r3, r3, #2
 80093da:	d0d6      	beq.n	800938a <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80093dc:	6963      	ldr	r3, [r4, #20]
 80093de:	055a      	lsls	r2, r3, #21
 80093e0:	f53f af69 	bmi.w	80092b6 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80093e4:	f7ff fae2 	bl	80089ac <HAL_GetTick>
 80093e8:	eba0 0009 	sub.w	r0, r0, r9
 80093ec:	4582      	cmp	sl, r0
 80093ee:	d316      	bcc.n	800941e <I2C_RequestMemoryRead+0x252>
 80093f0:	f1ba 0f00 	cmp.w	sl, #0
 80093f4:	d013      	beq.n	800941e <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80093f6:	6834      	ldr	r4, [r6, #0]
 80093f8:	e7bb      	b.n	8009372 <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80093fa:	6963      	ldr	r3, [r4, #20]
 80093fc:	061d      	lsls	r5, r3, #24
 80093fe:	d4ab      	bmi.n	8009358 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009400:	6963      	ldr	r3, [r4, #20]
 8009402:	055a      	lsls	r2, r3, #21
 8009404:	f53f af1c 	bmi.w	8009240 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009408:	f7ff fad0 	bl	80089ac <HAL_GetTick>
 800940c:	eba0 0009 	sub.w	r0, r0, r9
 8009410:	4582      	cmp	sl, r0
 8009412:	d325      	bcc.n	8009460 <I2C_RequestMemoryRead+0x294>
 8009414:	f1ba 0f00 	cmp.w	sl, #0
 8009418:	d022      	beq.n	8009460 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800941a:	6834      	ldr	r4, [r6, #0]
 800941c:	e77b      	b.n	8009316 <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800941e:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8009420:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009422:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009424:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009428:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800942c:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800942e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009432:	f043 0320 	orr.w	r3, r3, #32
 8009436:	6433      	str	r3, [r6, #64]	; 0x40
 8009438:	e716      	b.n	8009268 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800943a:	6963      	ldr	r3, [r4, #20]
 800943c:	0619      	lsls	r1, r3, #24
 800943e:	f53f af68 	bmi.w	8009312 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009442:	6963      	ldr	r3, [r4, #20]
 8009444:	055b      	lsls	r3, r3, #21
 8009446:	f53f aefb 	bmi.w	8009240 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800944a:	f7ff faaf 	bl	80089ac <HAL_GetTick>
 800944e:	eba0 0009 	sub.w	r0, r0, r9
 8009452:	4582      	cmp	sl, r0
 8009454:	d304      	bcc.n	8009460 <I2C_RequestMemoryRead+0x294>
 8009456:	f1ba 0f00 	cmp.w	sl, #0
 800945a:	d001      	beq.n	8009460 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800945c:	6834      	ldr	r4, [r6, #0]
 800945e:	e76a      	b.n	8009336 <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009460:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009462:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009464:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009466:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800946a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800946e:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009470:	4313      	orrs	r3, r2
 8009472:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8009474:	e6f2      	b.n	800925c <I2C_RequestMemoryRead+0x90>
 8009476:	bf00      	nop

08009478 <HAL_I2C_Init>:
  if (hi2c == NULL)
 8009478:	2800      	cmp	r0, #0
 800947a:	f000 80b9 	beq.w	80095f0 <HAL_I2C_Init+0x178>
{
 800947e:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8009480:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009484:	4604      	mov	r4, r0
 8009486:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800948a:	2b00      	cmp	r3, #0
 800948c:	f000 8098 	beq.w	80095c0 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 8009490:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8009492:	2224      	movs	r2, #36	; 0x24
 8009494:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8009498:	681a      	ldr	r2, [r3, #0]
 800949a:	f022 0201 	bic.w	r2, r2, #1
 800949e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80094a0:	681a      	ldr	r2, [r3, #0]
 80094a2:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80094a6:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80094a8:	681a      	ldr	r2, [r3, #0]
 80094aa:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80094ae:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80094b0:	f001 fe70 	bl	800b194 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80094b4:	6865      	ldr	r5, [r4, #4]
 80094b6:	4b4f      	ldr	r3, [pc, #316]	; (80095f4 <HAL_I2C_Init+0x17c>)
 80094b8:	429d      	cmp	r5, r3
 80094ba:	d84f      	bhi.n	800955c <HAL_I2C_Init+0xe4>
 80094bc:	4b4e      	ldr	r3, [pc, #312]	; (80095f8 <HAL_I2C_Init+0x180>)
 80094be:	4298      	cmp	r0, r3
 80094c0:	d97c      	bls.n	80095bc <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 80094c2:	4b4e      	ldr	r3, [pc, #312]	; (80095fc <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80094c4:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 80094c6:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80094ca:	1e43      	subs	r3, r0, #1
 80094cc:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80094d0:	6822      	ldr	r2, [r4, #0]
 80094d2:	6851      	ldr	r1, [r2, #4]
 80094d4:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 80094d8:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 80094dc:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80094de:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 80094e0:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80094e4:	f10c 0c01 	add.w	ip, ip, #1
 80094e8:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 80094ec:	ea41 010c 	orr.w	r1, r1, ip
 80094f0:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80094f2:	69d1      	ldr	r1, [r2, #28]
 80094f4:	f640 70fc 	movw	r0, #4092	; 0xffc
 80094f8:	3301      	adds	r3, #1
 80094fa:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 80094fe:	4203      	tst	r3, r0
 8009500:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009504:	d161      	bne.n	80095ca <HAL_I2C_Init+0x152>
 8009506:	2304      	movs	r3, #4
 8009508:	430b      	orrs	r3, r1
 800950a:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800950c:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8009510:	6811      	ldr	r1, [r2, #0]
 8009512:	4303      	orrs	r3, r0
 8009514:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8009518:	430b      	orrs	r3, r1
 800951a:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800951c:	6891      	ldr	r1, [r2, #8]
 800951e:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8009522:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8009526:	4303      	orrs	r3, r0
 8009528:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800952c:	430b      	orrs	r3, r1
 800952e:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8009530:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8009534:	68d1      	ldr	r1, [r2, #12]
 8009536:	4303      	orrs	r3, r0
 8009538:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800953c:	430b      	orrs	r3, r1
 800953e:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8009540:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009542:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 8009544:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 8009548:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800954a:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800954c:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800954e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8009552:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8009554:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 8009558:	4618      	mov	r0, r3
}
 800955a:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800955c:	4b28      	ldr	r3, [pc, #160]	; (8009600 <HAL_I2C_Init+0x188>)
 800955e:	4298      	cmp	r0, r3
 8009560:	d92c      	bls.n	80095bc <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009562:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8009564:	4b25      	ldr	r3, [pc, #148]	; (80095fc <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009566:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009568:	4e26      	ldr	r6, [pc, #152]	; (8009604 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800956a:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800956e:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009572:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 8009576:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8009578:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800957c:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8009580:	fb01 f303 	mul.w	r3, r1, r3
 8009584:	fba6 6303 	umull	r6, r3, r6, r3
 8009588:	6a11      	ldr	r1, [r2, #32]
 800958a:	099b      	lsrs	r3, r3, #6
 800958c:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009590:	3301      	adds	r3, #1
 8009592:	430b      	orrs	r3, r1
 8009594:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009596:	69d1      	ldr	r1, [r2, #28]
 8009598:	68a3      	ldr	r3, [r4, #8]
 800959a:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800959e:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80095a2:	b9ab      	cbnz	r3, 80095d0 <HAL_I2C_Init+0x158>
 80095a4:	1e43      	subs	r3, r0, #1
 80095a6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80095aa:	fbb3 f3f5 	udiv	r3, r3, r5
 80095ae:	3301      	adds	r3, #1
 80095b0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80095b4:	b1d3      	cbz	r3, 80095ec <HAL_I2C_Init+0x174>
 80095b6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80095ba:	e7a5      	b.n	8009508 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 80095bc:	2001      	movs	r0, #1
}
 80095be:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 80095c0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 80095c4:	f7f8 fb2e 	bl	8001c24 <HAL_I2C_MspInit>
 80095c8:	e762      	b.n	8009490 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80095ca:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80095ce:	e79b      	b.n	8009508 <HAL_I2C_Init+0x90>
 80095d0:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 80095d4:	1e43      	subs	r3, r0, #1
 80095d6:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 80095da:	fbb3 f3f5 	udiv	r3, r3, r5
 80095de:	3301      	adds	r3, #1
 80095e0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80095e4:	b113      	cbz	r3, 80095ec <HAL_I2C_Init+0x174>
 80095e6:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80095ea:	e78d      	b.n	8009508 <HAL_I2C_Init+0x90>
 80095ec:	2301      	movs	r3, #1
 80095ee:	e78b      	b.n	8009508 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 80095f0:	2001      	movs	r0, #1
}
 80095f2:	4770      	bx	lr
 80095f4:	000186a0 	.word	0x000186a0
 80095f8:	001e847f 	.word	0x001e847f
 80095fc:	431bde83 	.word	0x431bde83
 8009600:	003d08ff 	.word	0x003d08ff
 8009604:	10624dd3 	.word	0x10624dd3

08009608 <HAL_I2C_Mem_Write>:
{
 8009608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800960c:	4604      	mov	r4, r0
 800960e:	b083      	sub	sp, #12
 8009610:	4699      	mov	r9, r3
 8009612:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 8009616:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8009618:	460f      	mov	r7, r1
 800961a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800961c:	f7ff f9c6 	bl	80089ac <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009620:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009624:	2b20      	cmp	r3, #32
 8009626:	d004      	beq.n	8009632 <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 8009628:	2702      	movs	r7, #2
}
 800962a:	4638      	mov	r0, r7
 800962c:	b003      	add	sp, #12
 800962e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009632:	4605      	mov	r5, r0
 8009634:	e005      	b.n	8009642 <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009636:	f7ff f9b9 	bl	80089ac <HAL_GetTick>
 800963a:	1b40      	subs	r0, r0, r5
 800963c:	2819      	cmp	r0, #25
 800963e:	f200 80a8 	bhi.w	8009792 <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009642:	6820      	ldr	r0, [r4, #0]
 8009644:	6983      	ldr	r3, [r0, #24]
 8009646:	ea6f 0c03 	mvn.w	ip, r3
 800964a:	f01c 0b02 	ands.w	fp, ip, #2
 800964e:	d0f2      	beq.n	8009636 <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 8009650:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8009654:	2b01      	cmp	r3, #1
 8009656:	d0e7      	beq.n	8009628 <HAL_I2C_Mem_Write+0x20>
 8009658:	2301      	movs	r3, #1
 800965a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800965e:	6803      	ldr	r3, [r0, #0]
 8009660:	07db      	lsls	r3, r3, #31
 8009662:	d572      	bpl.n	800974a <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009664:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009666:	6807      	ldr	r7, [r0, #0]
 8009668:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800966c:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800966e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8009670:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009672:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009674:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009678:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800967c:	2040      	movs	r0, #64	; 0x40
 800967e:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009682:	2000      	movs	r0, #0
 8009684:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8009686:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800968a:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800968c:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800968e:	4856      	ldr	r0, [pc, #344]	; (80097e8 <HAL_I2C_Mem_Write+0x1e0>)
 8009690:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009692:	464b      	mov	r3, r9
 8009694:	4642      	mov	r2, r8
 8009696:	4620      	mov	r0, r4
 8009698:	f7ff fca4 	bl	8008fe4 <I2C_RequestMemoryWrite>
 800969c:	4607      	mov	r7, r0
 800969e:	bb00      	cbnz	r0, 80096e2 <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 80096a0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80096a2:	2b00      	cmp	r3, #0
 80096a4:	f000 809e 	beq.w	80097e4 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80096a8:	6823      	ldr	r3, [r4, #0]
 80096aa:	1c72      	adds	r2, r6, #1
 80096ac:	d159      	bne.n	8009762 <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80096ae:	695a      	ldr	r2, [r3, #20]
 80096b0:	0610      	lsls	r0, r2, #24
 80096b2:	d41b      	bmi.n	80096ec <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80096b4:	695a      	ldr	r2, [r3, #20]
 80096b6:	0551      	lsls	r1, r2, #21
 80096b8:	d5f9      	bpl.n	80096ae <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 80096ba:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80096bc:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 80096c0:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80096c2:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 80096c4:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80096c6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80096ca:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80096ce:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80096d0:	f043 0304 	orr.w	r3, r3, #4
 80096d4:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80096d6:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 80096d8:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80096da:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 80096dc:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80096e0:	d038      	beq.n	8009754 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 80096e2:	2701      	movs	r7, #1
}
 80096e4:	4638      	mov	r0, r7
 80096e6:	b003      	add	sp, #12
 80096e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80096ec:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 80096f0:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80096f4:	4661      	mov	r1, ip
      hi2c->XferSize--;
 80096f6:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80096fa:	f811 2b01 	ldrb.w	r2, [r1], #1
 80096fe:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 8009700:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8009702:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009704:	3a01      	subs	r2, #1
 8009706:	b292      	uxth	r2, r2
 8009708:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800970a:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800970c:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800970e:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009710:	0740      	lsls	r0, r0, #29
 8009712:	d517      	bpl.n	8009744 <HAL_I2C_Mem_Write+0x13c>
 8009714:	b942      	cbnz	r2, 8009728 <HAL_I2C_Mem_Write+0x120>
 8009716:	1c72      	adds	r2, r6, #1
 8009718:	d156      	bne.n	80097c8 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800971a:	695a      	ldr	r2, [r3, #20]
 800971c:	0750      	lsls	r0, r2, #29
 800971e:	d446      	bmi.n	80097ae <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009720:	695a      	ldr	r2, [r3, #20]
 8009722:	0551      	lsls	r1, r2, #21
 8009724:	d5f9      	bpl.n	800971a <HAL_I2C_Mem_Write+0x112>
 8009726:	e7c8      	b.n	80096ba <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009728:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800972c:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800972e:	f10c 0102 	add.w	r1, ip, #2
 8009732:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8009734:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 8009736:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800973a:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800973c:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800973e:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 8009740:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8009742:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8009744:	2a00      	cmp	r2, #0
 8009746:	d1b0      	bne.n	80096aa <HAL_I2C_Mem_Write+0xa2>
 8009748:	e7e5      	b.n	8009716 <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800974a:	6803      	ldr	r3, [r0, #0]
 800974c:	f043 0301 	orr.w	r3, r3, #1
 8009750:	6003      	str	r3, [r0, #0]
 8009752:	e787      	b.n	8009664 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009754:	6822      	ldr	r2, [r4, #0]
 8009756:	6813      	ldr	r3, [r2, #0]
 8009758:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800975c:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800975e:	6013      	str	r3, [r2, #0]
 8009760:	e763      	b.n	800962a <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009762:	695a      	ldr	r2, [r3, #20]
 8009764:	0612      	lsls	r2, r2, #24
 8009766:	d4c1      	bmi.n	80096ec <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009768:	695a      	ldr	r2, [r3, #20]
 800976a:	0551      	lsls	r1, r2, #21
 800976c:	d4a5      	bmi.n	80096ba <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800976e:	f7ff f91d 	bl	80089ac <HAL_GetTick>
 8009772:	1b40      	subs	r0, r0, r5
 8009774:	4286      	cmp	r6, r0
 8009776:	d301      	bcc.n	800977c <HAL_I2C_Mem_Write+0x174>
 8009778:	2e00      	cmp	r6, #0
 800977a:	d195      	bne.n	80096a8 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800977c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800977e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009780:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009782:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009786:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800978a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800978c:	4313      	orrs	r3, r2
 800978e:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 8009790:	e7a1      	b.n	80096d6 <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 8009792:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009794:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009798:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800979c:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80097a0:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80097a2:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80097a6:	f043 0320 	orr.w	r3, r3, #32
 80097aa:	6423      	str	r3, [r4, #64]	; 0x40
 80097ac:	e73c      	b.n	8009628 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80097ae:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80097b0:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80097b2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 80097b6:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80097b8:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 80097ba:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 80097be:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80097c2:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 80097c6:	e730      	b.n	800962a <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80097c8:	695a      	ldr	r2, [r3, #20]
 80097ca:	0752      	lsls	r2, r2, #29
 80097cc:	d4ef      	bmi.n	80097ae <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80097ce:	695a      	ldr	r2, [r3, #20]
 80097d0:	0551      	lsls	r1, r2, #21
 80097d2:	f53f af72 	bmi.w	80096ba <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80097d6:	f7ff f8e9 	bl	80089ac <HAL_GetTick>
 80097da:	1b40      	subs	r0, r0, r5
 80097dc:	4286      	cmp	r6, r0
 80097de:	d3cd      	bcc.n	800977c <HAL_I2C_Mem_Write+0x174>
 80097e0:	2e00      	cmp	r6, #0
 80097e2:	d0cb      	beq.n	800977c <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80097e4:	6823      	ldr	r3, [r4, #0]
 80097e6:	e796      	b.n	8009716 <HAL_I2C_Mem_Write+0x10e>
 80097e8:	ffff0000 	.word	0xffff0000

080097ec <HAL_I2C_Mem_Read>:
{
 80097ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80097f0:	4604      	mov	r4, r0
 80097f2:	b087      	sub	sp, #28
 80097f4:	4699      	mov	r9, r3
 80097f6:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 80097fa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80097fc:	460f      	mov	r7, r1
 80097fe:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009800:	f7ff f8d4 	bl	80089ac <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009804:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009808:	2b20      	cmp	r3, #32
 800980a:	d004      	beq.n	8009816 <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800980c:	2702      	movs	r7, #2
}
 800980e:	4638      	mov	r0, r7
 8009810:	b007      	add	sp, #28
 8009812:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009816:	4606      	mov	r6, r0
 8009818:	e005      	b.n	8009826 <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800981a:	f7ff f8c7 	bl	80089ac <HAL_GetTick>
 800981e:	1b80      	subs	r0, r0, r6
 8009820:	2819      	cmp	r0, #25
 8009822:	f200 80d2 	bhi.w	80099ca <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009826:	f8d4 c000 	ldr.w	ip, [r4]
 800982a:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800982e:	43c0      	mvns	r0, r0
 8009830:	f010 0b02 	ands.w	fp, r0, #2
 8009834:	d0f1      	beq.n	800981a <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 8009836:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800983a:	2b01      	cmp	r3, #1
 800983c:	d0e6      	beq.n	800980c <HAL_I2C_Mem_Read+0x20>
 800983e:	2301      	movs	r3, #1
 8009840:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009844:	f8dc 3000 	ldr.w	r3, [ip]
 8009848:	07d9      	lsls	r1, r3, #31
 800984a:	d537      	bpl.n	80098bc <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800984c:	f8dc 0000 	ldr.w	r0, [ip]
 8009850:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 8009854:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 8009858:	9810      	ldr	r0, [sp, #64]	; 0x40
 800985a:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800985c:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800985e:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8009862:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009866:	2040      	movs	r0, #64	; 0x40
 8009868:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800986c:	2000      	movs	r0, #0
 800986e:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8009870:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009874:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8009876:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009878:	4893      	ldr	r0, [pc, #588]	; (8009ac8 <HAL_I2C_Mem_Read+0x2dc>)
 800987a:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800987c:	4639      	mov	r1, r7
 800987e:	464b      	mov	r3, r9
 8009880:	4642      	mov	r2, r8
 8009882:	4620      	mov	r0, r4
 8009884:	f7ff fca2 	bl	80091cc <I2C_RequestMemoryRead>
 8009888:	4607      	mov	r7, r0
 800988a:	2800      	cmp	r0, #0
 800988c:	f040 80ab 	bne.w	80099e6 <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 8009890:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8009892:	b9d2      	cbnz	r2, 80098ca <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009894:	6823      	ldr	r3, [r4, #0]
 8009896:	9002      	str	r0, [sp, #8]
 8009898:	695a      	ldr	r2, [r3, #20]
 800989a:	9202      	str	r2, [sp, #8]
 800989c:	699a      	ldr	r2, [r3, #24]
 800989e:	9202      	str	r2, [sp, #8]
 80098a0:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80098a2:	681a      	ldr	r2, [r3, #0]
 80098a4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80098a8:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80098aa:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 80098ac:	2220      	movs	r2, #32
 80098ae:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 80098b2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80098b6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 80098ba:	e7a8      	b.n	800980e <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 80098bc:	f8dc 3000 	ldr.w	r3, [ip]
 80098c0:	f043 0301 	orr.w	r3, r3, #1
 80098c4:	f8cc 3000 	str.w	r3, [ip]
 80098c8:	e7c0      	b.n	800984c <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 80098ca:	2a01      	cmp	r2, #1
 80098cc:	f000 812c 	beq.w	8009b28 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 80098d0:	2a02      	cmp	r2, #2
 80098d2:	f000 80bd 	beq.w	8009a50 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80098d6:	6823      	ldr	r3, [r4, #0]
 80098d8:	9005      	str	r0, [sp, #20]
 80098da:	6959      	ldr	r1, [r3, #20]
 80098dc:	9105      	str	r1, [sp, #20]
 80098de:	6999      	ldr	r1, [r3, #24]
 80098e0:	9105      	str	r1, [sp, #20]
 80098e2:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 80098e4:	2a03      	cmp	r2, #3
 80098e6:	d849      	bhi.n	800997c <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 80098e8:	2a01      	cmp	r2, #1
 80098ea:	f000 80eb 	beq.w	8009ac4 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 80098ee:	2a02      	cmp	r2, #2
 80098f0:	f000 8089 	beq.w	8009a06 <HAL_I2C_Mem_Read+0x21a>
 80098f4:	1c69      	adds	r1, r5, #1
 80098f6:	f040 80bb 	bne.w	8009a70 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80098fa:	695a      	ldr	r2, [r3, #20]
 80098fc:	0752      	lsls	r2, r2, #29
 80098fe:	d5fc      	bpl.n	80098fa <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009900:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009902:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009904:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009908:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800990a:	691b      	ldr	r3, [r3, #16]
 800990c:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800990e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009910:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009912:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009914:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8009916:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8009918:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800991a:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800991c:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800991e:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009920:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009922:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009924:	6822      	ldr	r2, [r4, #0]
 8009926:	f040 80af 	bne.w	8009a88 <HAL_I2C_Mem_Read+0x29c>
 800992a:	6953      	ldr	r3, [r2, #20]
 800992c:	075b      	lsls	r3, r3, #29
 800992e:	d5fc      	bpl.n	800992a <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009930:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009932:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009934:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009938:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800993a:	6913      	ldr	r3, [r2, #16]
 800993c:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800993e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009940:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009942:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009944:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 8009946:	3b01      	subs	r3, #1
 8009948:	b29b      	uxth	r3, r3
 800994a:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800994c:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800994e:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 8009950:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 8009954:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009956:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800995a:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800995c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800995e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009960:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009962:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009964:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8009966:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8009968:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800996a:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800996c:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800996e:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009970:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8009972:	2a00      	cmp	r2, #0
 8009974:	d099      	beq.n	80098aa <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 8009976:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009978:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800997a:	d9b5      	bls.n	80098e8 <HAL_I2C_Mem_Read+0xfc>
 800997c:	b95d      	cbnz	r5, 8009996 <HAL_I2C_Mem_Read+0x1aa>
 800997e:	e0c5      	b.n	8009b0c <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009980:	695a      	ldr	r2, [r3, #20]
 8009982:	06d0      	lsls	r0, r2, #27
 8009984:	f100 80b2 	bmi.w	8009aec <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009988:	f7ff f810 	bl	80089ac <HAL_GetTick>
 800998c:	1b80      	subs	r0, r0, r6
 800998e:	4285      	cmp	r5, r0
 8009990:	f0c0 8086 	bcc.w	8009aa0 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009994:	6823      	ldr	r3, [r4, #0]
 8009996:	695a      	ldr	r2, [r3, #20]
 8009998:	0652      	lsls	r2, r2, #25
 800999a:	d5f1      	bpl.n	8009980 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800999c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800999e:	691b      	ldr	r3, [r3, #16]
 80099a0:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 80099a2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80099a4:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 80099a6:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 80099a8:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 80099aa:	3b01      	subs	r3, #1
 80099ac:	b29b      	uxth	r3, r3
 80099ae:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80099b0:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 80099b2:	3a01      	subs	r2, #1
 80099b4:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 80099b6:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80099ba:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 80099bc:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 80099be:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80099c2:	d5d6      	bpl.n	8009972 <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80099c4:	6903      	ldr	r3, [r0, #16]
 80099c6:	704b      	strb	r3, [r1, #1]
 80099c8:	e036      	b.n	8009a38 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 80099ca:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80099cc:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80099d0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80099d4:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80099d8:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80099da:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80099de:	f043 0320 	orr.w	r3, r3, #32
 80099e2:	6423      	str	r3, [r4, #64]	; 0x40
 80099e4:	e712      	b.n	800980c <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 80099e6:	2701      	movs	r7, #1
}
 80099e8:	4638      	mov	r0, r7
 80099ea:	b007      	add	sp, #28
 80099ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80099f0:	695a      	ldr	r2, [r3, #20]
 80099f2:	0750      	lsls	r0, r2, #29
 80099f4:	d40c      	bmi.n	8009a10 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80099f6:	f7fe ffd9 	bl	80089ac <HAL_GetTick>
 80099fa:	1b80      	subs	r0, r0, r6
 80099fc:	4285      	cmp	r5, r0
 80099fe:	d34f      	bcc.n	8009aa0 <HAL_I2C_Mem_Read+0x2b4>
 8009a00:	2d00      	cmp	r5, #0
 8009a02:	d04d      	beq.n	8009aa0 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009a04:	6823      	ldr	r3, [r4, #0]
 8009a06:	1c69      	adds	r1, r5, #1
 8009a08:	d1f2      	bne.n	80099f0 <HAL_I2C_Mem_Read+0x204>
 8009a0a:	695a      	ldr	r2, [r3, #20]
 8009a0c:	0752      	lsls	r2, r2, #29
 8009a0e:	d5fc      	bpl.n	8009a0a <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009a10:	681a      	ldr	r2, [r3, #0]
 8009a12:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009a16:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009a18:	691a      	ldr	r2, [r3, #16]
 8009a1a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009a1c:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 8009a1e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009a20:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 8009a22:	3b01      	subs	r3, #1
 8009a24:	b29b      	uxth	r3, r3
 8009a26:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009a28:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8009a2a:	3b01      	subs	r3, #1
 8009a2c:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009a2e:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 8009a30:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009a32:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 8009a34:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009a36:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8009a38:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009a3a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009a3c:	3301      	adds	r3, #1
 8009a3e:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 8009a40:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009a42:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009a44:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 8009a46:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8009a48:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 8009a4a:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009a4c:	8563      	strh	r3, [r4, #42]	; 0x2a
 8009a4e:	e790      	b.n	8009972 <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009a50:	6823      	ldr	r3, [r4, #0]
 8009a52:	6819      	ldr	r1, [r3, #0]
 8009a54:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8009a58:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009a5a:	6819      	ldr	r1, [r3, #0]
 8009a5c:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8009a60:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009a62:	9004      	str	r0, [sp, #16]
 8009a64:	6959      	ldr	r1, [r3, #20]
 8009a66:	9104      	str	r1, [sp, #16]
 8009a68:	6999      	ldr	r1, [r3, #24]
 8009a6a:	9104      	str	r1, [sp, #16]
 8009a6c:	9904      	ldr	r1, [sp, #16]
 8009a6e:	e739      	b.n	80098e4 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009a70:	695a      	ldr	r2, [r3, #20]
 8009a72:	0750      	lsls	r0, r2, #29
 8009a74:	f53f af44 	bmi.w	8009900 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009a78:	f7fe ff98 	bl	80089ac <HAL_GetTick>
 8009a7c:	1b80      	subs	r0, r0, r6
 8009a7e:	4285      	cmp	r5, r0
 8009a80:	d30e      	bcc.n	8009aa0 <HAL_I2C_Mem_Read+0x2b4>
 8009a82:	b16d      	cbz	r5, 8009aa0 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009a84:	6823      	ldr	r3, [r4, #0]
 8009a86:	e735      	b.n	80098f4 <HAL_I2C_Mem_Read+0x108>
 8009a88:	6953      	ldr	r3, [r2, #20]
 8009a8a:	0758      	lsls	r0, r3, #29
 8009a8c:	f53f af50 	bmi.w	8009930 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009a90:	f7fe ff8c 	bl	80089ac <HAL_GetTick>
 8009a94:	1b80      	subs	r0, r0, r6
 8009a96:	4285      	cmp	r5, r0
 8009a98:	d302      	bcc.n	8009aa0 <HAL_I2C_Mem_Read+0x2b4>
 8009a9a:	2d00      	cmp	r5, #0
 8009a9c:	f47f af41 	bne.w	8009922 <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009aa0:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009aa2:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009aa4:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009aa6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009aaa:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009aae:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009ab0:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 8009ab4:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009ab6:	f043 0320 	orr.w	r3, r3, #32
}
 8009aba:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009abc:	6423      	str	r3, [r4, #64]	; 0x40
}
 8009abe:	b007      	add	sp, #28
 8009ac0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009ac4:	b95d      	cbnz	r5, 8009ade <HAL_I2C_Mem_Read+0x2f2>
 8009ac6:	e02b      	b.n	8009b20 <HAL_I2C_Mem_Read+0x334>
 8009ac8:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009acc:	695a      	ldr	r2, [r3, #20]
 8009ace:	06d2      	lsls	r2, r2, #27
 8009ad0:	d40c      	bmi.n	8009aec <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009ad2:	f7fe ff6b 	bl	80089ac <HAL_GetTick>
 8009ad6:	1b80      	subs	r0, r0, r6
 8009ad8:	4285      	cmp	r5, r0
 8009ada:	d3e1      	bcc.n	8009aa0 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009adc:	6823      	ldr	r3, [r4, #0]
 8009ade:	695a      	ldr	r2, [r3, #20]
 8009ae0:	0651      	lsls	r1, r2, #25
 8009ae2:	d5f3      	bpl.n	8009acc <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009ae4:	691a      	ldr	r2, [r3, #16]
 8009ae6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009ae8:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8009aea:	e7a5      	b.n	8009a38 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009aec:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8009aee:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 8009af2:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8009af4:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009af6:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009af8:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009afc:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8009b00:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009b02:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009b04:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 8009b08:	2701      	movs	r7, #1
 8009b0a:	e680      	b.n	800980e <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009b0c:	695a      	ldr	r2, [r3, #20]
 8009b0e:	0652      	lsls	r2, r2, #25
 8009b10:	f53f af44 	bmi.w	800999c <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009b14:	695a      	ldr	r2, [r3, #20]
 8009b16:	06d1      	lsls	r1, r2, #27
 8009b18:	d4e8      	bmi.n	8009aec <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009b1a:	f7fe ff47 	bl	80089ac <HAL_GetTick>
 8009b1e:	e7bf      	b.n	8009aa0 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009b20:	695a      	ldr	r2, [r3, #20]
 8009b22:	0650      	lsls	r0, r2, #25
 8009b24:	d5f6      	bpl.n	8009b14 <HAL_I2C_Mem_Read+0x328>
 8009b26:	e7dd      	b.n	8009ae4 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009b28:	6823      	ldr	r3, [r4, #0]
 8009b2a:	6819      	ldr	r1, [r3, #0]
 8009b2c:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8009b30:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009b32:	9003      	str	r0, [sp, #12]
 8009b34:	6959      	ldr	r1, [r3, #20]
 8009b36:	9103      	str	r1, [sp, #12]
 8009b38:	6999      	ldr	r1, [r3, #24]
 8009b3a:	9103      	str	r1, [sp, #12]
 8009b3c:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009b3e:	6819      	ldr	r1, [r3, #0]
 8009b40:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 8009b44:	6019      	str	r1, [r3, #0]
 8009b46:	e6cd      	b.n	80098e4 <HAL_I2C_Mem_Read+0xf8>

08009b48 <HAL_I2C_MasterTxCpltCallback>:
 8009b48:	4770      	bx	lr
 8009b4a:	bf00      	nop

08009b4c <HAL_I2C_MasterRxCpltCallback>:
 8009b4c:	4770      	bx	lr
 8009b4e:	bf00      	nop

08009b50 <HAL_I2C_SlaveTxCpltCallback>:
 8009b50:	4770      	bx	lr
 8009b52:	bf00      	nop

08009b54 <HAL_I2C_SlaveRxCpltCallback>:
 8009b54:	4770      	bx	lr
 8009b56:	bf00      	nop

08009b58 <HAL_I2C_AddrCallback>:
}
 8009b58:	4770      	bx	lr
 8009b5a:	bf00      	nop

08009b5c <HAL_I2C_ListenCpltCallback>:
 8009b5c:	4770      	bx	lr
 8009b5e:	bf00      	nop

08009b60 <HAL_I2C_MemTxCpltCallback>:
 8009b60:	4770      	bx	lr
 8009b62:	bf00      	nop

08009b64 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009b64:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 8009b68:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 8009b6a:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 8009b6c:	b959      	cbnz	r1, 8009b86 <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8009b6e:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8009b70:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8009b72:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8009b74:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 8009b76:	d00d      	beq.n	8009b94 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 8009b78:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8009b7c:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 8009b7e:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009b80:	3201      	adds	r2, #1
 8009b82:	6502      	str	r2, [r0, #80]	; 0x50
 8009b84:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 8009b86:	6d01      	ldr	r1, [r0, #80]	; 0x50
 8009b88:	2901      	cmp	r1, #1
 8009b8a:	d009      	beq.n	8009ba0 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 8009b8c:	6d01      	ldr	r1, [r0, #80]	; 0x50
 8009b8e:	2902      	cmp	r1, #2
 8009b90:	d00e      	beq.n	8009bb0 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 8009b92:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8009b94:	b2d2      	uxtb	r2, r2
 8009b96:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 8009b98:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009b9a:	3202      	adds	r2, #2
 8009b9c:	6502      	str	r2, [r0, #80]	; 0x50
 8009b9e:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 8009ba0:	6c82      	ldr	r2, [r0, #72]	; 0x48
 8009ba2:	6801      	ldr	r1, [r0, #0]
 8009ba4:	b2d2      	uxtb	r2, r2
 8009ba6:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 8009ba8:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009baa:	3201      	adds	r2, #1
 8009bac:	6502      	str	r2, [r0, #80]	; 0x50
 8009bae:	4770      	bx	lr
 8009bb0:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 8009bb2:	2a22      	cmp	r2, #34	; 0x22
 8009bb4:	d01f      	beq.n	8009bf6 <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8009bb6:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 8009bb8:	b289      	uxth	r1, r1
 8009bba:	b9c1      	cbnz	r1, 8009bee <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8009bbc:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 8009bbe:	b289      	uxth	r1, r1
 8009bc0:	2900      	cmp	r1, #0
 8009bc2:	d1e6      	bne.n	8009b92 <I2C_MemoryTransmit_TXE_BTF+0x2e>
 8009bc4:	2a21      	cmp	r2, #33	; 0x21
 8009bc6:	d1e4      	bne.n	8009b92 <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8009bc8:	6802      	ldr	r2, [r0, #0]
{
 8009bca:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8009bcc:	6854      	ldr	r4, [r2, #4]
 8009bce:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 8009bd2:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009bd4:	6814      	ldr	r4, [r2, #0]
 8009bd6:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 8009bda:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 8009bdc:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 8009bde:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 8009be0:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009be4:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 8009be8:	f7ff ffba 	bl	8009b60 <HAL_I2C_MemTxCpltCallback>
}
 8009bec:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8009bee:	2a21      	cmp	r2, #33	; 0x21
 8009bf0:	d00a      	beq.n	8009c08 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 8009bf2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8009bf4:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 8009bf6:	6801      	ldr	r1, [r0, #0]
 8009bf8:	680a      	ldr	r2, [r1, #0]
 8009bfa:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009bfe:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 8009c00:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009c02:	3201      	adds	r2, #1
 8009c04:	6502      	str	r2, [r0, #80]	; 0x50
 8009c06:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009c08:	6a41      	ldr	r1, [r0, #36]	; 0x24
 8009c0a:	6802      	ldr	r2, [r0, #0]
 8009c0c:	f811 0b01 	ldrb.w	r0, [r1], #1
 8009c10:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 8009c12:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8009c14:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 8009c16:	3a01      	subs	r2, #1
 8009c18:	b292      	uxth	r2, r2
 8009c1a:	855a      	strh	r2, [r3, #42]	; 0x2a
 8009c1c:	4770      	bx	lr
 8009c1e:	bf00      	nop

08009c20 <HAL_I2C_MemRxCpltCallback>:
 8009c20:	4770      	bx	lr
 8009c22:	bf00      	nop

08009c24 <HAL_I2C_ErrorCallback>:
 8009c24:	4770      	bx	lr
 8009c26:	bf00      	nop

08009c28 <HAL_I2C_AbortCpltCallback>:
 8009c28:	4770      	bx	lr
 8009c2a:	bf00      	nop

08009c2c <I2C_DMAAbort>:
{
 8009c2c:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8009c2e:	4b3a      	ldr	r3, [pc, #232]	; (8009d18 <I2C_DMAAbort+0xec>)
 8009c30:	4a3a      	ldr	r2, [pc, #232]	; (8009d1c <I2C_DMAAbort+0xf0>)
 8009c32:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 8009c34:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 8009c36:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8009c38:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 8009c3a:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8009c3c:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 8009c40:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8009c42:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009c44:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 8009c48:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8009c4a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8009c4e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009c52:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 8009c54:	9301      	str	r3, [sp, #4]
 8009c56:	e005      	b.n	8009c64 <I2C_DMAAbort+0x38>
    count--;
 8009c58:	9b01      	ldr	r3, [sp, #4]
 8009c5a:	3b01      	subs	r3, #1
 8009c5c:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 8009c5e:	6813      	ldr	r3, [r2, #0]
 8009c60:	059b      	lsls	r3, r3, #22
 8009c62:	d506      	bpl.n	8009c72 <I2C_DMAAbort+0x46>
    if (count == 0U)
 8009c64:	9b01      	ldr	r3, [sp, #4]
 8009c66:	2b00      	cmp	r3, #0
 8009c68:	d1f6      	bne.n	8009c58 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8009c6a:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009c6c:	f043 0320 	orr.w	r3, r3, #32
 8009c70:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 8009c72:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8009c74:	b34c      	cbz	r4, 8009cca <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 8009c76:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 8009c78:	2500      	movs	r5, #0
 8009c7a:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 8009c7c:	b1f3      	cbz	r3, 8009cbc <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009c7e:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 8009c80:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009c82:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 8009c86:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 8009c88:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 8009c8a:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 8009c8c:	2400      	movs	r4, #0
 8009c8e:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 8009c90:	6813      	ldr	r3, [r2, #0]
 8009c92:	f023 0301 	bic.w	r3, r3, #1
 8009c96:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 8009c98:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009c9c:	2b60      	cmp	r3, #96	; 0x60
 8009c9e:	d02a      	beq.n	8009cf6 <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 8009ca0:	f001 0128 	and.w	r1, r1, #40	; 0x28
 8009ca4:	2928      	cmp	r1, #40	; 0x28
 8009ca6:	d019      	beq.n	8009cdc <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 8009ca8:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009caa:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 8009cac:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009cb0:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 8009cb4:	f7ff ffb6 	bl	8009c24 <HAL_I2C_ErrorCallback>
}
 8009cb8:	b002      	add	sp, #8
 8009cba:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009cbc:	6815      	ldr	r5, [r2, #0]
 8009cbe:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 8009cc2:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 8009cc4:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 8009cc6:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 8009cc8:	e7e2      	b.n	8009c90 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 8009cca:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8009ccc:	b1f3      	cbz	r3, 8009d0c <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009cce:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 8009cd0:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009cd2:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 8009cd6:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 8009cd8:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 8009cda:	e7d7      	b.n	8009c8c <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 8009cdc:	6813      	ldr	r3, [r2, #0]
 8009cde:	f043 0301 	orr.w	r3, r3, #1
 8009ce2:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009ce4:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 8009ce6:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009ce8:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8009cec:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 8009cee:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 8009cf0:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 8009cf4:	e7de      	b.n	8009cb4 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 8009cf6:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 8009cf8:	2220      	movs	r2, #32
 8009cfa:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 8009cfe:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 8009d02:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 8009d04:	f7ff ff90 	bl	8009c28 <HAL_I2C_AbortCpltCallback>
}
 8009d08:	b002      	add	sp, #8
 8009d0a:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009d0c:	6814      	ldr	r4, [r2, #0]
 8009d0e:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 8009d12:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 8009d14:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 8009d16:	e7bb      	b.n	8009c90 <I2C_DMAAbort+0x64>
 8009d18:	20000078 	.word	0x20000078
 8009d1c:	14f8b589 	.word	0x14f8b589

08009d20 <I2C_ITError>:
{
 8009d20:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009d22:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 8009d26:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 8009d2a:	2b10      	cmp	r3, #16
{
 8009d2c:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009d2e:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 8009d30:	d039      	beq.n	8009da6 <I2C_ITError+0x86>
 8009d32:	b2d9      	uxtb	r1, r3
 8009d34:	2940      	cmp	r1, #64	; 0x40
 8009d36:	d036      	beq.n	8009da6 <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 8009d38:	f002 0128 	and.w	r1, r2, #40	; 0x28
 8009d3c:	2928      	cmp	r1, #40	; 0x28
 8009d3e:	d03d      	beq.n	8009dbc <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 8009d40:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 8009d42:	6859      	ldr	r1, [r3, #4]
 8009d44:	0508      	lsls	r0, r1, #20
 8009d46:	d407      	bmi.n	8009d58 <I2C_ITError+0x38>
 8009d48:	2a60      	cmp	r2, #96	; 0x60
 8009d4a:	d005      	beq.n	8009d58 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 8009d4c:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009d4e:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 8009d50:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8009d54:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 8009d58:	2200      	movs	r2, #0
 8009d5a:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 8009d5c:	685a      	ldr	r2, [r3, #4]
 8009d5e:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 8009d62:	d134      	bne.n	8009dce <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 8009d64:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 8009d68:	2960      	cmp	r1, #96	; 0x60
 8009d6a:	d075      	beq.n	8009e58 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 8009d6c:	695a      	ldr	r2, [r3, #20]
 8009d6e:	0650      	lsls	r0, r2, #25
 8009d70:	d505      	bpl.n	8009d7e <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009d72:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009d74:	691b      	ldr	r3, [r3, #16]
 8009d76:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 8009d78:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009d7a:	3301      	adds	r3, #1
 8009d7c:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 8009d7e:	4620      	mov	r0, r4
 8009d80:	f7ff ff50 	bl	8009c24 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 8009d84:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 8009d86:	0719      	lsls	r1, r3, #28
 8009d88:	d004      	beq.n	8009d94 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 8009d8a:	6822      	ldr	r2, [r4, #0]
 8009d8c:	6853      	ldr	r3, [r2, #4]
 8009d8e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8009d92:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 8009d94:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 8009d98:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009d9a:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 8009d9c:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 8009d9e:	d501      	bpl.n	8009da4 <I2C_ITError+0x84>
 8009da0:	2b28      	cmp	r3, #40	; 0x28
 8009da2:	d02f      	beq.n	8009e04 <I2C_ITError+0xe4>
}
 8009da4:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 8009da6:	2a22      	cmp	r2, #34	; 0x22
 8009da8:	d1c6      	bne.n	8009d38 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 8009daa:	6823      	ldr	r3, [r4, #0]
 8009dac:	681a      	ldr	r2, [r3, #0]
 8009dae:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009db2:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 8009db4:	685a      	ldr	r2, [r3, #4]
 8009db6:	0512      	lsls	r2, r2, #20
 8009db8:	d5c8      	bpl.n	8009d4c <I2C_ITError+0x2c>
 8009dba:	e7cd      	b.n	8009d58 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 8009dbc:	2300      	movs	r3, #0
 8009dbe:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 8009dc0:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 8009dc2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 8009dc6:	685a      	ldr	r2, [r3, #4]
 8009dc8:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 8009dcc:	d0ca      	beq.n	8009d64 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 8009dce:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 8009dd0:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 8009dd2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009dd6:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 8009dd8:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8009ddc:	2b01      	cmp	r3, #1
 8009dde:	d01e      	beq.n	8009e1e <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 8009de0:	4b28      	ldr	r3, [pc, #160]	; (8009e84 <I2C_ITError+0x164>)
 8009de2:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 8009de4:	f7fe fe6c 	bl	8008ac0 <HAL_DMA_Abort_IT>
 8009de8:	2800      	cmp	r0, #0
 8009dea:	d0cb      	beq.n	8009d84 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 8009dec:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 8009dee:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 8009df0:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 8009df2:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 8009df4:	f023 0301 	bic.w	r3, r3, #1
 8009df8:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 8009dfa:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 8009dfe:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8009e00:	4798      	blx	r3
 8009e02:	e7bf      	b.n	8009d84 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 8009e04:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 8009e06:	4920      	ldr	r1, [pc, #128]	; (8009e88 <I2C_ITError+0x168>)
 8009e08:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 8009e0a:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 8009e0c:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 8009e0e:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 8009e10:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 8009e14:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 8009e18:	f7ff fea0 	bl	8009b5c <HAL_I2C_ListenCpltCallback>
}
 8009e1c:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 8009e1e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8009e20:	4b18      	ldr	r3, [pc, #96]	; (8009e84 <I2C_ITError+0x164>)
 8009e22:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 8009e24:	f7fe fe4c 	bl	8008ac0 <HAL_DMA_Abort_IT>
 8009e28:	2800      	cmp	r0, #0
 8009e2a:	d0ab      	beq.n	8009d84 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 8009e2c:	6823      	ldr	r3, [r4, #0]
 8009e2e:	695a      	ldr	r2, [r3, #20]
 8009e30:	0651      	lsls	r1, r2, #25
 8009e32:	d506      	bpl.n	8009e42 <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e34:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009e36:	691b      	ldr	r3, [r3, #16]
 8009e38:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 8009e3a:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 8009e3c:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 8009e3e:	3201      	adds	r2, #1
 8009e40:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 8009e42:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 8009e44:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 8009e46:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 8009e4a:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 8009e4c:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 8009e4e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 8009e52:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8009e54:	4798      	blx	r3
 8009e56:	e795      	b.n	8009d84 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 8009e58:	2120      	movs	r1, #32
 8009e5a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009e5e:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 8009e60:	695a      	ldr	r2, [r3, #20]
 8009e62:	0652      	lsls	r2, r2, #25
 8009e64:	d506      	bpl.n	8009e74 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e66:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009e68:	691b      	ldr	r3, [r3, #16]
 8009e6a:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 8009e6c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 8009e6e:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 8009e70:	3201      	adds	r2, #1
 8009e72:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 8009e74:	681a      	ldr	r2, [r3, #0]
 8009e76:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 8009e7a:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 8009e7c:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 8009e7e:	f7ff fed3 	bl	8009c28 <HAL_I2C_AbortCpltCallback>
 8009e82:	e77f      	b.n	8009d84 <I2C_ITError+0x64>
 8009e84:	08009c2d 	.word	0x08009c2d
 8009e88:	ffff0000 	.word	0xffff0000

08009e8c <HAL_I2C_EV_IRQHandler>:
{
 8009e8c:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 8009e8e:	6803      	ldr	r3, [r0, #0]
{
 8009e90:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 8009e92:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 8009e94:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 8009e96:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009e9a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 8009e9e:	2910      	cmp	r1, #16
{
 8009ea0:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009ea2:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 8009ea4:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 8009ea8:	d022      	beq.n	8009ef0 <HAL_I2C_EV_IRQHandler+0x64>
 8009eaa:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 8009eae:	d01f      	beq.n	8009ef0 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 8009eb0:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8009eb2:	2900      	cmp	r1, #0
 8009eb4:	f000 8094 	beq.w	8009fe0 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 8009eb8:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 8009eba:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009ebc:	f011 0602 	ands.w	r6, r1, #2
 8009ec0:	d059      	beq.n	8009f76 <HAL_I2C_EV_IRQHandler+0xea>
 8009ec2:	0586      	lsls	r6, r0, #22
 8009ec4:	d559      	bpl.n	8009f7a <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 8009ec6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009ec8:	b102      	cbz	r2, 8009ecc <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 8009eca:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 8009ecc:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 8009ed0:	f002 0228 	and.w	r2, r2, #40	; 0x28
 8009ed4:	2a28      	cmp	r2, #40	; 0x28
 8009ed6:	f000 821e 	beq.w	800a316 <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009eda:	2200      	movs	r2, #0
 8009edc:	920c      	str	r2, [sp, #48]	; 0x30
 8009ede:	6959      	ldr	r1, [r3, #20]
 8009ee0:	910c      	str	r1, [sp, #48]	; 0x30
 8009ee2:	699b      	ldr	r3, [r3, #24]
 8009ee4:	930c      	str	r3, [sp, #48]	; 0x30
 8009ee6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 8009ee8:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 8009eec:	b00e      	add	sp, #56	; 0x38
 8009eee:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 8009ef0:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 8009ef2:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 8009ef4:	f011 0f01 	tst.w	r1, #1
 8009ef8:	d11a      	bne.n	8009f30 <HAL_I2C_EV_IRQHandler+0xa4>
 8009efa:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 8009efe:	d0f5      	beq.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
 8009f00:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 8009f04:	d0f2      	beq.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009f06:	070d      	lsls	r5, r1, #28
 8009f08:	d56d      	bpl.n	8009fe6 <HAL_I2C_EV_IRQHandler+0x15a>
 8009f0a:	0585      	lsls	r5, r0, #22
 8009f0c:	f140 8083 	bpl.w	800a016 <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 8009f10:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 8009f12:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8009f14:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 8009f16:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 8009f18:	2900      	cmp	r1, #0
 8009f1a:	f000 81e3 	beq.w	800a2e4 <HAL_I2C_EV_IRQHandler+0x458>
 8009f1e:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 8009f20:	2a00      	cmp	r2, #0
 8009f22:	f000 81df 	beq.w	800a2e4 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 8009f26:	685a      	ldr	r2, [r3, #4]
 8009f28:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009f2c:	605a      	str	r2, [r3, #4]
 8009f2e:	e7dd      	b.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009f30:	0585      	lsls	r5, r0, #22
 8009f32:	d56e      	bpl.n	800a012 <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 8009f34:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009f36:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 8009f3a:	f000 81e9 	beq.w	800a310 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 8009f3e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009f40:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 8009f44:	bf04      	itt	eq
 8009f46:	2208      	moveq	r2, #8
 8009f48:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 8009f4a:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 8009f4e:	2a40      	cmp	r2, #64	; 0x40
 8009f50:	f000 81d7 	beq.w	800a302 <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8009f54:	6922      	ldr	r2, [r4, #16]
 8009f56:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 8009f5a:	f000 81b2 	beq.w	800a2c2 <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 8009f5e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8009f60:	2a00      	cmp	r2, #0
 8009f62:	f040 81ef 	bne.w	800a344 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 8009f66:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8009f68:	11d2      	asrs	r2, r2, #7
 8009f6a:	f002 0206 	and.w	r2, r2, #6
 8009f6e:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 8009f72:	611a      	str	r2, [r3, #16]
 8009f74:	e7ba      	b.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009f76:	06cd      	lsls	r5, r1, #27
 8009f78:	d47c      	bmi.n	800a074 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 8009f7a:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 8009f7e:	2a21      	cmp	r2, #33	; 0x21
 8009f80:	f000 80f5 	beq.w	800a16e <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 8009f84:	064e      	lsls	r6, r1, #25
 8009f86:	f140 8132 	bpl.w	800a1ee <HAL_I2C_EV_IRQHandler+0x362>
 8009f8a:	0545      	lsls	r5, r0, #21
 8009f8c:	f140 812f 	bpl.w	800a1ee <HAL_I2C_EV_IRQHandler+0x362>
 8009f90:	0749      	lsls	r1, r1, #29
 8009f92:	f100 812f 	bmi.w	800a1f4 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009f96:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 8009f9a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8009f9c:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009f9e:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 8009fa0:	2a00      	cmp	r2, #0
 8009fa2:	d0a3      	beq.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009fa4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009fa6:	691b      	ldr	r3, [r3, #16]
 8009fa8:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 8009faa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 8009fac:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 8009fae:	3b01      	subs	r3, #1
 8009fb0:	b29b      	uxth	r3, r3
 8009fb2:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8009fb4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 8009fb6:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8009fb8:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 8009fba:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 8009fbc:	2b00      	cmp	r3, #0
 8009fbe:	d195      	bne.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
 8009fc0:	292a      	cmp	r1, #42	; 0x2a
 8009fc2:	d193      	bne.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009fc4:	6822      	ldr	r2, [r4, #0]
 8009fc6:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 8009fc8:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 8009fca:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 8009fcc:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8009fd0:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 8009fd2:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 8009fd4:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 8009fd6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 8009fda:	f7ff fdbb 	bl	8009b54 <HAL_I2C_SlaveRxCpltCallback>
 8009fde:	e785      	b.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 8009fe0:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 8009fe2:	6959      	ldr	r1, [r3, #20]
 8009fe4:	e76a      	b.n	8009ebc <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 8009fe6:	078d      	lsls	r5, r1, #30
 8009fe8:	d515      	bpl.n	800a016 <HAL_I2C_EV_IRQHandler+0x18a>
 8009fea:	0585      	lsls	r5, r0, #22
 8009fec:	d513      	bpl.n	800a016 <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 8009fee:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 8009ff2:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 8009ff4:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 8009ff6:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 8009ffa:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 8009ffc:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 8009ffe:	f000 81b3 	beq.w	800a368 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a002:	2200      	movs	r2, #0
 800a004:	920a      	str	r2, [sp, #40]	; 0x28
 800a006:	695a      	ldr	r2, [r3, #20]
 800a008:	920a      	str	r2, [sp, #40]	; 0x28
 800a00a:	699b      	ldr	r3, [r3, #24]
 800a00c:	930a      	str	r3, [sp, #40]	; 0x28
 800a00e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a010:	e76c      	b.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a012:	070d      	lsls	r5, r1, #28
 800a014:	d5e7      	bpl.n	8009fe6 <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800a016:	0776      	lsls	r6, r6, #29
 800a018:	f140 80f5 	bpl.w	800a206 <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a01c:	685d      	ldr	r5, [r3, #4]
 800a01e:	052d      	lsls	r5, r5, #20
 800a020:	f53f af64 	bmi.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a024:	060e      	lsls	r6, r1, #24
 800a026:	f140 8115 	bpl.w	800a254 <HAL_I2C_EV_IRQHandler+0x3c8>
 800a02a:	0545      	lsls	r5, r0, #21
 800a02c:	f140 8112 	bpl.w	800a254 <HAL_I2C_EV_IRQHandler+0x3c8>
 800a030:	074e      	lsls	r6, r1, #29
 800a032:	f100 8112 	bmi.w	800a25a <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a036:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a03a:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a03c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a040:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a042:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a044:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a046:	2800      	cmp	r0, #0
 800a048:	f040 8235 	bne.w	800a4b6 <HAL_I2C_EV_IRQHandler+0x62a>
 800a04c:	2a21      	cmp	r2, #33	; 0x21
 800a04e:	f000 8347 	beq.w	800a6e0 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800a052:	2940      	cmp	r1, #64	; 0x40
 800a054:	f47f af4a 	bne.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800a058:	2a22      	cmp	r2, #34	; 0x22
 800a05a:	f47f af47 	bne.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800a05e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a060:	b292      	uxth	r2, r2
 800a062:	2a00      	cmp	r2, #0
 800a064:	f000 8268 	beq.w	800a538 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a068:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a06c:	2a40      	cmp	r2, #64	; 0x40
 800a06e:	f040 80b4 	bne.w	800a1da <HAL_I2C_EV_IRQHandler+0x34e>
 800a072:	e0fc      	b.n	800a26e <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a074:	0585      	lsls	r5, r0, #22
 800a076:	d580      	bpl.n	8009f7a <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a078:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a07c:	685a      	ldr	r2, [r3, #4]
 800a07e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800a082:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800a084:	960d      	str	r6, [sp, #52]	; 0x34
 800a086:	695a      	ldr	r2, [r3, #20]
 800a088:	920d      	str	r2, [sp, #52]	; 0x34
 800a08a:	681a      	ldr	r2, [r3, #0]
 800a08c:	f042 0201 	orr.w	r2, r2, #1
 800a090:	601a      	str	r2, [r3, #0]
 800a092:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a094:	681a      	ldr	r2, [r3, #0]
 800a096:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a09a:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a09c:	685a      	ldr	r2, [r3, #4]
 800a09e:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a0a0:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a0a2:	d521      	bpl.n	800a0e8 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a0a4:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800a0a8:	2a22      	cmp	r2, #34	; 0x22
 800a0aa:	f000 817a 	beq.w	800a3a2 <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800a0ae:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a0b0:	6802      	ldr	r2, [r0, #0]
 800a0b2:	6852      	ldr	r2, [r2, #4]
 800a0b4:	b292      	uxth	r2, r2
 800a0b6:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800a0b8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a0ba:	b292      	uxth	r2, r2
 800a0bc:	b11a      	cbz	r2, 800a0c6 <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a0be:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a0c0:	f042 0204 	orr.w	r2, r2, #4
 800a0c4:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a0c6:	685a      	ldr	r2, [r3, #4]
 800a0c8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a0cc:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800a0ce:	f7fe fd09 	bl	8008ae4 <HAL_DMA_GetState>
 800a0d2:	2801      	cmp	r0, #1
 800a0d4:	d008      	beq.n	800a0e8 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a0d6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a0d8:	4b99      	ldr	r3, [pc, #612]	; (800a340 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800a0da:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a0dc:	f7fe fcf0 	bl	8008ac0 <HAL_DMA_Abort_IT>
 800a0e0:	b110      	cbz	r0, 800a0e8 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a0e2:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a0e4:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a0e6:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800a0e8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a0ea:	b29b      	uxth	r3, r3
 800a0ec:	b313      	cbz	r3, 800a134 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a0ee:	6823      	ldr	r3, [r4, #0]
 800a0f0:	695a      	ldr	r2, [r3, #20]
 800a0f2:	0752      	lsls	r2, r2, #29
 800a0f4:	d50a      	bpl.n	800a10c <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a0f6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a0f8:	691b      	ldr	r3, [r3, #16]
 800a0fa:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a0fc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a0fe:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a100:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800a102:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800a104:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a106:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a108:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a10a:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a10c:	695a      	ldr	r2, [r3, #20]
 800a10e:	0656      	lsls	r6, r2, #25
 800a110:	d509      	bpl.n	800a126 <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a112:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a114:	691b      	ldr	r3, [r3, #16]
 800a116:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a118:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a11a:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a11c:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800a11e:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800a120:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800a122:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a124:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800a126:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a128:	b29b      	uxth	r3, r3
 800a12a:	b11b      	cbz	r3, 800a134 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a12c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a12e:	f043 0304 	orr.w	r3, r3, #4
 800a132:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a134:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a136:	2b00      	cmp	r3, #0
 800a138:	f040 80dd 	bne.w	800a2f6 <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800a13c:	2d2a      	cmp	r5, #42	; 0x2a
 800a13e:	f000 8151 	beq.w	800a3e4 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800a142:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a146:	2b28      	cmp	r3, #40	; 0x28
 800a148:	f000 8154 	beq.w	800a3f4 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a14c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a14e:	2b22      	cmp	r3, #34	; 0x22
 800a150:	d002      	beq.n	800a158 <HAL_I2C_EV_IRQHandler+0x2cc>
 800a152:	2d22      	cmp	r5, #34	; 0x22
 800a154:	f47f aeca 	bne.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800a158:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800a15a:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800a15c:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a15e:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800a160:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800a164:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a168:	f7ff fcf4 	bl	8009b54 <HAL_I2C_SlaveRxCpltCallback>
 800a16c:	e6be      	b.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a16e:	060d      	lsls	r5, r1, #24
 800a170:	d528      	bpl.n	800a1c4 <HAL_I2C_EV_IRQHandler+0x338>
 800a172:	0546      	lsls	r6, r0, #21
 800a174:	d526      	bpl.n	800a1c4 <HAL_I2C_EV_IRQHandler+0x338>
 800a176:	074d      	lsls	r5, r1, #29
 800a178:	d427      	bmi.n	800a1ca <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a17a:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a17e:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a180:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a182:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800a184:	2900      	cmp	r1, #0
 800a186:	f43f aeb1 	beq.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a18a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a18c:	f811 5b01 	ldrb.w	r5, [r1], #1
 800a190:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800a192:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a194:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a196:	3901      	subs	r1, #1
 800a198:	b289      	uxth	r1, r1
 800a19a:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a19c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a19e:	b289      	uxth	r1, r1
 800a1a0:	2900      	cmp	r1, #0
 800a1a2:	f47f aea3 	bne.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
 800a1a6:	2829      	cmp	r0, #41	; 0x29
 800a1a8:	f47f aea0 	bne.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a1ac:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a1ae:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a1b0:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a1b4:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800a1b6:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800a1b8:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a1ba:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800a1be:	f7ff fcc7 	bl	8009b50 <HAL_I2C_SlaveTxCpltCallback>
 800a1c2:	e693      	b.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a1c4:	0749      	lsls	r1, r1, #29
 800a1c6:	f57f ae91 	bpl.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
 800a1ca:	0582      	lsls	r2, r0, #22
 800a1cc:	f57f ae8e 	bpl.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800a1d0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a1d2:	b292      	uxth	r2, r2
 800a1d4:	2a00      	cmp	r2, #0
 800a1d6:	f43f ae89 	beq.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a1da:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a1dc:	f812 1b01 	ldrb.w	r1, [r2], #1
 800a1e0:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800a1e2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a1e4:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a1e6:	3b01      	subs	r3, #1
 800a1e8:	b29b      	uxth	r3, r3
 800a1ea:	8563      	strh	r3, [r4, #42]	; 0x2a
 800a1ec:	e67e      	b.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a1ee:	074a      	lsls	r2, r1, #29
 800a1f0:	f57f ae7c 	bpl.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
 800a1f4:	0586      	lsls	r6, r0, #22
 800a1f6:	f57f ae79 	bpl.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800a1fa:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a1fc:	b292      	uxth	r2, r2
 800a1fe:	2a00      	cmp	r2, #0
 800a200:	f43f ae74 	beq.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
 800a204:	e01b      	b.n	800a23e <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a206:	685a      	ldr	r2, [r3, #4]
 800a208:	0512      	lsls	r2, r2, #20
 800a20a:	f53f ae6f 	bmi.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a20e:	064e      	lsls	r6, r1, #25
 800a210:	d433      	bmi.n	800a27a <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a212:	0749      	lsls	r1, r1, #29
 800a214:	f57f ae6a 	bpl.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
 800a218:	0582      	lsls	r2, r0, #22
 800a21a:	f57f ae67 	bpl.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800a21e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800a220:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a222:	b292      	uxth	r2, r2
 800a224:	2a04      	cmp	r2, #4
 800a226:	f000 8113 	beq.w	800a450 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800a22a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a22c:	b292      	uxth	r2, r2
 800a22e:	2a03      	cmp	r2, #3
 800a230:	f000 8153 	beq.w	800a4da <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800a234:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a236:	b292      	uxth	r2, r2
 800a238:	2a02      	cmp	r2, #2
 800a23a:	f000 8182 	beq.w	800a542 <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a23e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a240:	691b      	ldr	r3, [r3, #16]
 800a242:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a244:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a246:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a248:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800a24a:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800a24c:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800a24e:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a250:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800a252:	e64b      	b.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a254:	074d      	lsls	r5, r1, #29
 800a256:	f57f ae49 	bpl.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
 800a25a:	0581      	lsls	r1, r0, #22
 800a25c:	f57f ae46 	bpl.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800a260:	2a21      	cmp	r2, #33	; 0x21
 800a262:	f000 80fd 	beq.w	800a460 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800a266:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800a26a:	f47f ae3f 	bne.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800a26e:	4620      	mov	r0, r4
}
 800a270:	b00e      	add	sp, #56	; 0x38
 800a272:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800a276:	f7ff bc75 	b.w	8009b64 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a27a:	0545      	lsls	r5, r0, #21
 800a27c:	d5c9      	bpl.n	800a212 <HAL_I2C_EV_IRQHandler+0x386>
 800a27e:	f011 0104 	ands.w	r1, r1, #4
 800a282:	d1c9      	bne.n	800a218 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a284:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a288:	2a22      	cmp	r2, #34	; 0x22
 800a28a:	f47f ae2f 	bne.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800a28e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a290:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800a292:	2a03      	cmp	r2, #3
 800a294:	f240 81ec 	bls.w	800a670 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a298:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a29a:	691b      	ldr	r3, [r3, #16]
 800a29c:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a29e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a2a0:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a2a2:	3b01      	subs	r3, #1
 800a2a4:	b29b      	uxth	r3, r3
 800a2a6:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800a2a8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a2aa:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800a2ac:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800a2ae:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800a2b0:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800a2b2:	f47f ae1b 	bne.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a2b6:	6822      	ldr	r2, [r4, #0]
 800a2b8:	6853      	ldr	r3, [r2, #4]
 800a2ba:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a2be:	6053      	str	r3, [r2, #4]
 800a2c0:	e614      	b.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800a2c2:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a2c6:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a2c8:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a2ca:	bf16      	itet	ne
 800a2cc:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a2d0:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a2d4:	b2d2      	uxtbne	r2, r2
 800a2d6:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a2d8:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800a2da:	b11a      	cbz	r2, 800a2e4 <HAL_I2C_EV_IRQHandler+0x458>
 800a2dc:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800a2de:	2a00      	cmp	r2, #0
 800a2e0:	f47f ae21 	bne.w	8009f26 <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800a2e4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a2e6:	2a00      	cmp	r2, #0
 800a2e8:	f43f ae00 	beq.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
 800a2ec:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800a2ee:	2a00      	cmp	r2, #0
 800a2f0:	f47f ae19 	bne.w	8009f26 <HAL_I2C_EV_IRQHandler+0x9a>
 800a2f4:	e5fa      	b.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800a2f6:	4620      	mov	r0, r4
}
 800a2f8:	b00e      	add	sp, #56	; 0x38
 800a2fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800a2fe:	f7ff bd0f 	b.w	8009d20 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800a302:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a304:	bb52      	cbnz	r2, 800a35c <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a306:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a308:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800a30c:	611a      	str	r2, [r3, #16]
 800a30e:	e5ed      	b.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800a310:	2201      	movs	r2, #1
 800a312:	62e2      	str	r2, [r4, #44]	; 0x2c
 800a314:	e619      	b.n	8009f4a <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800a316:	685a      	ldr	r2, [r3, #4]
 800a318:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a31c:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800a31e:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800a320:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800a324:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800a328:	bf54      	ite	pl
 800a32a:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800a32c:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800a32e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800a332:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800a336:	4620      	mov	r0, r4
 800a338:	f7ff fc0e 	bl	8009b58 <HAL_I2C_AddrCallback>
 800a33c:	e5d6      	b.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
 800a33e:	bf00      	nop
 800a340:	08009c2d 	.word	0x08009c2d
      else if (hi2c->EventCount == 1U)
 800a344:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a346:	2a01      	cmp	r2, #1
 800a348:	f47f add0 	bne.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800a34c:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a34e:	11d2      	asrs	r2, r2, #7
 800a350:	f002 0206 	and.w	r2, r2, #6
 800a354:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800a358:	611a      	str	r2, [r3, #16]
 800a35a:	e5c7      	b.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a35c:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a35e:	f042 0201 	orr.w	r2, r2, #1
 800a362:	b2d2      	uxtb	r2, r2
 800a364:	611a      	str	r2, [r3, #16]
 800a366:	e5c1      	b.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800a368:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800a36a:	b911      	cbnz	r1, 800a372 <HAL_I2C_EV_IRQHandler+0x4e6>
 800a36c:	2a40      	cmp	r2, #64	; 0x40
 800a36e:	f000 809b 	beq.w	800a4a8 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800a372:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a374:	b922      	cbnz	r2, 800a380 <HAL_I2C_EV_IRQHandler+0x4f4>
 800a376:	6921      	ldr	r1, [r4, #16]
 800a378:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800a37c:	f000 809f 	beq.w	800a4be <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800a380:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a382:	b292      	uxth	r2, r2
 800a384:	2a00      	cmp	r2, #0
 800a386:	d142      	bne.n	800a40e <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a388:	9203      	str	r2, [sp, #12]
 800a38a:	695a      	ldr	r2, [r3, #20]
 800a38c:	9203      	str	r2, [sp, #12]
 800a38e:	699a      	ldr	r2, [r3, #24]
 800a390:	9203      	str	r2, [sp, #12]
 800a392:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a394:	681a      	ldr	r2, [r3, #0]
 800a396:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a39a:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800a39c:	2300      	movs	r3, #0
 800a39e:	6523      	str	r3, [r4, #80]	; 0x50
 800a3a0:	e5a4      	b.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800a3a2:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a3a4:	6802      	ldr	r2, [r0, #0]
 800a3a6:	6852      	ldr	r2, [r2, #4]
 800a3a8:	b292      	uxth	r2, r2
 800a3aa:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800a3ac:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a3ae:	b292      	uxth	r2, r2
 800a3b0:	b11a      	cbz	r2, 800a3ba <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a3b2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a3b4:	f042 0204 	orr.w	r2, r2, #4
 800a3b8:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a3ba:	685a      	ldr	r2, [r3, #4]
 800a3bc:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a3c0:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800a3c2:	f7fe fb8f 	bl	8008ae4 <HAL_DMA_GetState>
 800a3c6:	2801      	cmp	r0, #1
 800a3c8:	f43f ae8e 	beq.w	800a0e8 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800a3cc:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a3ce:	4b98      	ldr	r3, [pc, #608]	; (800a630 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800a3d0:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800a3d2:	f7fe fb75 	bl	8008ac0 <HAL_DMA_Abort_IT>
 800a3d6:	2800      	cmp	r0, #0
 800a3d8:	f43f ae86 	beq.w	800a0e8 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a3dc:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a3de:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a3e0:	4798      	blx	r3
 800a3e2:	e681      	b.n	800a0e8 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a3e4:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800a3e6:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a3e8:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a3ea:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a3ee:	f7ff fbb1 	bl	8009b54 <HAL_I2C_SlaveRxCpltCallback>
 800a3f2:	e6a6      	b.n	800a142 <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800a3f4:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a3f6:	498f      	ldr	r1, [pc, #572]	; (800a634 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800a3f8:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800a3fa:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800a3fc:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800a3fe:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800a400:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a404:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800a408:	f7ff fba8 	bl	8009b5c <HAL_I2C_ListenCpltCallback>
 800a40c:	e56e      	b.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800a40e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a410:	b292      	uxth	r2, r2
 800a412:	2a01      	cmp	r2, #1
 800a414:	d070      	beq.n	800a4f8 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800a416:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a418:	b292      	uxth	r2, r2
 800a41a:	2a02      	cmp	r2, #2
 800a41c:	f000 80d6 	beq.w	800a5cc <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a420:	681a      	ldr	r2, [r3, #0]
 800a422:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a426:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800a428:	685a      	ldr	r2, [r3, #4]
 800a42a:	0511      	lsls	r1, r2, #20
 800a42c:	d508      	bpl.n	800a440 <HAL_I2C_EV_IRQHandler+0x5b4>
 800a42e:	2820      	cmp	r0, #32
 800a430:	f200 80f8 	bhi.w	800a624 <HAL_I2C_EV_IRQHandler+0x798>
 800a434:	2807      	cmp	r0, #7
 800a436:	f200 80ea 	bhi.w	800a60e <HAL_I2C_EV_IRQHandler+0x782>
 800a43a:	2801      	cmp	r0, #1
 800a43c:	f000 80ed 	beq.w	800a61a <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a440:	2200      	movs	r2, #0
 800a442:	9209      	str	r2, [sp, #36]	; 0x24
 800a444:	695a      	ldr	r2, [r3, #20]
 800a446:	9209      	str	r2, [sp, #36]	; 0x24
 800a448:	699b      	ldr	r3, [r3, #24]
 800a44a:	9309      	str	r3, [sp, #36]	; 0x24
 800a44c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a44e:	e7a5      	b.n	800a39c <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a450:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a452:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a454:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a458:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a45a:	691b      	ldr	r3, [r3, #16]
 800a45c:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800a45e:	e6f1      	b.n	800a244 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800a460:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800a462:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a466:	2a21      	cmp	r2, #33	; 0x21
 800a468:	f47f ad40 	bne.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800a46c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a46e:	b292      	uxth	r2, r2
 800a470:	2a00      	cmp	r2, #0
 800a472:	f47f aeb2 	bne.w	800a1da <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800a476:	2908      	cmp	r1, #8
 800a478:	f000 80e2 	beq.w	800a640 <HAL_I2C_EV_IRQHandler+0x7b4>
 800a47c:	2920      	cmp	r1, #32
 800a47e:	f000 80df 	beq.w	800a640 <HAL_I2C_EV_IRQHandler+0x7b4>
 800a482:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800a486:	f000 80db 	beq.w	800a640 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a48a:	6859      	ldr	r1, [r3, #4]
 800a48c:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800a490:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800a492:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800a494:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800a496:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800a498:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800a49c:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800a49e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800a4a2:	f7ff fb51 	bl	8009b48 <HAL_I2C_MasterTxCpltCallback>
 800a4a6:	e521      	b.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a4a8:	9101      	str	r1, [sp, #4]
 800a4aa:	695a      	ldr	r2, [r3, #20]
 800a4ac:	9201      	str	r2, [sp, #4]
 800a4ae:	699b      	ldr	r3, [r3, #24]
 800a4b0:	9301      	str	r3, [sp, #4]
 800a4b2:	9b01      	ldr	r3, [sp, #4]
 800a4b4:	e51a      	b.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800a4b6:	2a21      	cmp	r2, #33	; 0x21
 800a4b8:	f43f add1 	beq.w	800a05e <HAL_I2C_EV_IRQHandler+0x1d2>
 800a4bc:	e5c9      	b.n	800a052 <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a4be:	9202      	str	r2, [sp, #8]
 800a4c0:	695a      	ldr	r2, [r3, #20]
 800a4c2:	9202      	str	r2, [sp, #8]
 800a4c4:	699a      	ldr	r2, [r3, #24]
 800a4c6:	9202      	str	r2, [sp, #8]
 800a4c8:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a4ca:	681a      	ldr	r2, [r3, #0]
 800a4cc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a4d0:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800a4d2:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a4d4:	3301      	adds	r3, #1
 800a4d6:	6523      	str	r3, [r4, #80]	; 0x50
 800a4d8:	e508      	b.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a4da:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800a4dc:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a4de:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a4e2:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800a4e4:	f43f aeab 	beq.w	800a23e <HAL_I2C_EV_IRQHandler+0x3b2>
 800a4e8:	2902      	cmp	r1, #2
 800a4ea:	f43f aea8 	beq.w	800a23e <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a4ee:	681a      	ldr	r2, [r3, #0]
 800a4f0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a4f4:	601a      	str	r2, [r3, #0]
 800a4f6:	e6a2      	b.n	800a23e <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800a4f8:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800a4fc:	f000 811b 	beq.w	800a736 <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800a500:	2808      	cmp	r0, #8
 800a502:	f000 8108 	beq.w	800a716 <HAL_I2C_EV_IRQHandler+0x88a>
 800a506:	2820      	cmp	r0, #32
 800a508:	f000 8105 	beq.w	800a716 <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800a50c:	2d12      	cmp	r5, #18
 800a50e:	f000 80ff 	beq.w	800a710 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800a512:	2810      	cmp	r0, #16
 800a514:	d804      	bhi.n	800a520 <HAL_I2C_EV_IRQHandler+0x694>
 800a516:	4a48      	ldr	r2, [pc, #288]	; (800a638 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800a518:	40c2      	lsrs	r2, r0
 800a51a:	07d1      	lsls	r1, r2, #31
 800a51c:	f100 814c 	bmi.w	800a7b8 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a520:	681a      	ldr	r2, [r3, #0]
 800a522:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a526:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a528:	2200      	movs	r2, #0
 800a52a:	9206      	str	r2, [sp, #24]
 800a52c:	695a      	ldr	r2, [r3, #20]
 800a52e:	9206      	str	r2, [sp, #24]
 800a530:	699b      	ldr	r3, [r3, #24]
 800a532:	9306      	str	r3, [sp, #24]
 800a534:	9b06      	ldr	r3, [sp, #24]
 800a536:	e731      	b.n	800a39c <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a538:	685a      	ldr	r2, [r3, #4]
 800a53a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a53e:	605a      	str	r2, [r3, #4]
 800a540:	e4d4      	b.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800a542:	3901      	subs	r1, #1
 800a544:	290f      	cmp	r1, #15
 800a546:	d809      	bhi.n	800a55c <HAL_I2C_EV_IRQHandler+0x6d0>
 800a548:	e8df f001 	tbb	[pc, r1]
 800a54c:	3608363b 	.word	0x3608363b
 800a550:	08080808 	.word	0x08080808
 800a554:	08080808 	.word	0x08080808
 800a558:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a55c:	681a      	ldr	r2, [r3, #0]
 800a55e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a562:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a564:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a566:	691b      	ldr	r3, [r3, #16]
 800a568:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a56a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a56c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a56e:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800a570:	3b01      	subs	r3, #1
 800a572:	b29b      	uxth	r3, r3
 800a574:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a576:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800a578:	1c51      	adds	r1, r2, #1
 800a57a:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a57c:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800a57e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800a580:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800a582:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a584:	3b01      	subs	r3, #1
 800a586:	b29b      	uxth	r3, r3
 800a588:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800a58a:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800a58c:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800a58e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800a592:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800a594:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800a596:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800a598:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a59c:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800a5a0:	2b40      	cmp	r3, #64	; 0x40
 800a5a2:	f000 80f5 	beq.w	800a790 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a5a6:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800a5a8:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a5aa:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800a5ae:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800a5b0:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800a5b2:	f7ff facb 	bl	8009b4c <HAL_I2C_MasterRxCpltCallback>
 800a5b6:	e499      	b.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a5b8:	681a      	ldr	r2, [r3, #0]
 800a5ba:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a5be:	601a      	str	r2, [r3, #0]
 800a5c0:	e7d0      	b.n	800a564 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a5c2:	681a      	ldr	r2, [r3, #0]
 800a5c4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a5c8:	601a      	str	r2, [r3, #0]
 800a5ca:	e7cb      	b.n	800a564 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800a5cc:	2810      	cmp	r0, #16
 800a5ce:	d804      	bhi.n	800a5da <HAL_I2C_EV_IRQHandler+0x74e>
 800a5d0:	4a19      	ldr	r2, [pc, #100]	; (800a638 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800a5d2:	40c2      	lsrs	r2, r0
 800a5d4:	07d2      	lsls	r2, r2, #31
 800a5d6:	f100 80c2 	bmi.w	800a75e <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a5da:	681a      	ldr	r2, [r3, #0]
 800a5dc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a5e0:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a5e2:	681a      	ldr	r2, [r3, #0]
 800a5e4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a5e8:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800a5ea:	685a      	ldr	r2, [r3, #4]
 800a5ec:	0516      	lsls	r6, r2, #20
 800a5ee:	d506      	bpl.n	800a5fe <HAL_I2C_EV_IRQHandler+0x772>
 800a5f0:	2820      	cmp	r0, #32
 800a5f2:	f240 80bc 	bls.w	800a76e <HAL_I2C_EV_IRQHandler+0x8e2>
 800a5f6:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800a5fa:	f000 80bd 	beq.w	800a778 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a5fe:	2200      	movs	r2, #0
 800a600:	9208      	str	r2, [sp, #32]
 800a602:	695a      	ldr	r2, [r3, #20]
 800a604:	9208      	str	r2, [sp, #32]
 800a606:	699b      	ldr	r3, [r3, #24]
 800a608:	9308      	str	r3, [sp, #32]
 800a60a:	9b08      	ldr	r3, [sp, #32]
 800a60c:	e6c6      	b.n	800a39c <HAL_I2C_EV_IRQHandler+0x510>
 800a60e:	4a0b      	ldr	r2, [pc, #44]	; (800a63c <HAL_I2C_EV_IRQHandler+0x7b0>)
 800a610:	3808      	subs	r0, #8
 800a612:	40c2      	lsrs	r2, r0
 800a614:	07d2      	lsls	r2, r2, #31
 800a616:	f57f af13 	bpl.w	800a440 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800a61a:	685a      	ldr	r2, [r3, #4]
 800a61c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800a620:	605a      	str	r2, [r3, #4]
 800a622:	e70d      	b.n	800a440 <HAL_I2C_EV_IRQHandler+0x5b4>
 800a624:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800a628:	f47f af0a 	bne.w	800a440 <HAL_I2C_EV_IRQHandler+0x5b4>
 800a62c:	e7f5      	b.n	800a61a <HAL_I2C_EV_IRQHandler+0x78e>
 800a62e:	bf00      	nop
 800a630:	08009c2d 	.word	0x08009c2d
 800a634:	ffff0000 	.word	0xffff0000
 800a638:	00010014 	.word	0x00010014
 800a63c:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a640:	6859      	ldr	r1, [r3, #4]
 800a642:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800a646:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a648:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800a64a:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800a64c:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a64e:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800a652:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800a654:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800a656:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a65a:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800a65e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a662:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800a664:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a666:	f47f af1c 	bne.w	800a4a2 <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800a66a:	f7ff fa79 	bl	8009b60 <HAL_I2C_MemTxCpltCallback>
 800a66e:	e43d      	b.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800a670:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800a672:	2802      	cmp	r0, #2
 800a674:	f43f af60 	beq.w	800a538 <HAL_I2C_EV_IRQHandler+0x6ac>
 800a678:	2a01      	cmp	r2, #1
 800a67a:	f63f af5d 	bhi.w	800a538 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800a67e:	4a62      	ldr	r2, [pc, #392]	; (800a808 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800a680:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800a682:	6812      	ldr	r2, [r2, #0]
 800a684:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800a688:	fbb2 f2f0 	udiv	r2, r2, r0
 800a68c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800a690:	920b      	str	r2, [sp, #44]	; 0x2c
 800a692:	e004      	b.n	800a69e <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a694:	681a      	ldr	r2, [r3, #0]
 800a696:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800a69a:	f000 8092 	beq.w	800a7c2 <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800a69e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800a6a0:	3a01      	subs	r2, #1
 800a6a2:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800a6a4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800a6a6:	2900      	cmp	r1, #0
 800a6a8:	d1f4      	bne.n	800a694 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a6aa:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a6ac:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a6ae:	f042 0220 	orr.w	r2, r2, #32
 800a6b2:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a6b4:	685a      	ldr	r2, [r3, #4]
 800a6b6:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800a6ba:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a6bc:	691b      	ldr	r3, [r3, #16]
 800a6be:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800a6c0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800a6c2:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800a6c4:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800a6c6:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800a6c8:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800a6ca:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800a6cc:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800a6ce:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800a6d0:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800a6d4:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800a6d6:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800a6da:	f7ff faa3 	bl	8009c24 <HAL_I2C_ErrorCallback>
 800a6de:	e405      	b.n	8009eec <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800a6e0:	2d08      	cmp	r5, #8
 800a6e2:	d0ad      	beq.n	800a640 <HAL_I2C_EV_IRQHandler+0x7b4>
 800a6e4:	2d20      	cmp	r5, #32
 800a6e6:	d0ab      	beq.n	800a640 <HAL_I2C_EV_IRQHandler+0x7b4>
 800a6e8:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800a6ec:	d0a8      	beq.n	800a640 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a6ee:	685a      	ldr	r2, [r3, #4]
 800a6f0:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800a6f4:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800a6f6:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a6f8:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a6fa:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800a6fc:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a6fe:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800a702:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800a704:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800a708:	f7ff fa1e 	bl	8009b48 <HAL_I2C_MasterTxCpltCallback>
 800a70c:	f7ff bbee 	b.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800a710:	2801      	cmp	r0, #1
 800a712:	f43f af05 	beq.w	800a520 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a716:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a718:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a71a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a71e:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a720:	9107      	str	r1, [sp, #28]
 800a722:	695a      	ldr	r2, [r3, #20]
 800a724:	9207      	str	r2, [sp, #28]
 800a726:	699a      	ldr	r2, [r3, #24]
 800a728:	9207      	str	r2, [sp, #28]
 800a72a:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a72c:	681a      	ldr	r2, [r3, #0]
 800a72e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a732:	601a      	str	r2, [r3, #0]
 800a734:	e632      	b.n	800a39c <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a736:	681a      	ldr	r2, [r3, #0]
 800a738:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a73c:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a73e:	685a      	ldr	r2, [r3, #4]
 800a740:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a744:	d02d      	beq.n	800a7a2 <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a746:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a748:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a74a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a74e:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a750:	9104      	str	r1, [sp, #16]
 800a752:	695a      	ldr	r2, [r3, #20]
 800a754:	9204      	str	r2, [sp, #16]
 800a756:	699b      	ldr	r3, [r3, #24]
 800a758:	9304      	str	r3, [sp, #16]
 800a75a:	9b04      	ldr	r3, [sp, #16]
 800a75c:	e61e      	b.n	800a39c <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a75e:	681a      	ldr	r2, [r3, #0]
 800a760:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a764:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800a766:	685a      	ldr	r2, [r3, #4]
 800a768:	0515      	lsls	r5, r2, #20
 800a76a:	f57f af48 	bpl.w	800a5fe <HAL_I2C_EV_IRQHandler+0x772>
 800a76e:	2807      	cmp	r0, #7
 800a770:	d807      	bhi.n	800a782 <HAL_I2C_EV_IRQHandler+0x8f6>
 800a772:	2801      	cmp	r0, #1
 800a774:	f47f af43 	bne.w	800a5fe <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800a778:	685a      	ldr	r2, [r3, #4]
 800a77a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800a77e:	605a      	str	r2, [r3, #4]
 800a780:	e73d      	b.n	800a5fe <HAL_I2C_EV_IRQHandler+0x772>
 800a782:	4a22      	ldr	r2, [pc, #136]	; (800a80c <HAL_I2C_EV_IRQHandler+0x980>)
 800a784:	3808      	subs	r0, #8
 800a786:	40c2      	lsrs	r2, r0
 800a788:	07d0      	lsls	r0, r2, #31
 800a78a:	f57f af38 	bpl.w	800a5fe <HAL_I2C_EV_IRQHandler+0x772>
 800a78e:	e7f3      	b.n	800a778 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a790:	2300      	movs	r3, #0
 800a792:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800a796:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800a798:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800a79a:	f7ff fa41 	bl	8009c20 <HAL_I2C_MemRxCpltCallback>
 800a79e:	f7ff bba5 	b.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a7a2:	9205      	str	r2, [sp, #20]
 800a7a4:	695a      	ldr	r2, [r3, #20]
 800a7a6:	9205      	str	r2, [sp, #20]
 800a7a8:	699a      	ldr	r2, [r3, #24]
 800a7aa:	9205      	str	r2, [sp, #20]
 800a7ac:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a7ae:	681a      	ldr	r2, [r3, #0]
 800a7b0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a7b4:	601a      	str	r2, [r3, #0]
 800a7b6:	e5f1      	b.n	800a39c <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a7b8:	681a      	ldr	r2, [r3, #0]
 800a7ba:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a7be:	601a      	str	r2, [r3, #0]
 800a7c0:	e6b2      	b.n	800a528 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a7c2:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a7c4:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a7c6:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a7ca:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a7cc:	6859      	ldr	r1, [r3, #4]
 800a7ce:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800a7d2:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a7d4:	691b      	ldr	r3, [r3, #16]
 800a7d6:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800a7d8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a7da:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800a7dc:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800a7de:	b29b      	uxth	r3, r3
 800a7e0:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800a7e2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800a7e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a7e8:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800a7ec:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a7ee:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800a7f0:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a7f2:	f47f aed9 	bne.w	800a5a8 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800a7f6:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800a7fa:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800a7fc:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800a7fe:	f7ff fa0f 	bl	8009c20 <HAL_I2C_MemRxCpltCallback>
 800a802:	f7ff bb73 	b.w	8009eec <HAL_I2C_EV_IRQHandler+0x60>
 800a806:	bf00      	nop
 800a808:	20000078 	.word	0x20000078
 800a80c:	01000101 	.word	0x01000101

0800a810 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800a810:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800a814:	2a20      	cmp	r2, #32
{
 800a816:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a818:	fa5f fc82 	uxtb.w	ip, r2
 800a81c:	d001      	beq.n	800a822 <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800a81e:	2002      	movs	r0, #2
  }
}
 800a820:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800a822:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800a824:	2024      	movs	r0, #36	; 0x24
 800a826:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800a82a:	6810      	ldr	r0, [r2, #0]
 800a82c:	f020 0001 	bic.w	r0, r0, #1
 800a830:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800a832:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800a834:	f020 0010 	bic.w	r0, r0, #16
 800a838:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800a83a:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800a83c:	4301      	orrs	r1, r0
 800a83e:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800a840:	6811      	ldr	r1, [r2, #0]
 800a842:	f041 0101 	orr.w	r1, r1, #1
 800a846:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800a848:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800a84a:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800a84e:	4770      	bx	lr

0800a850 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800a850:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800a854:	2a20      	cmp	r2, #32
 800a856:	d001      	beq.n	800a85c <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800a858:	2002      	movs	r0, #2
  }
}
 800a85a:	4770      	bx	lr
{
 800a85c:	b410      	push	{r4}
 800a85e:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800a862:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800a864:	2224      	movs	r2, #36	; 0x24
 800a866:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800a86a:	6822      	ldr	r2, [r4, #0]
 800a86c:	f022 0201 	bic.w	r2, r2, #1
 800a870:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800a872:	4603      	mov	r3, r0
 800a874:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800a876:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800a87a:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800a87c:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800a87e:	b289      	uxth	r1, r1
 800a880:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800a882:	6822      	ldr	r2, [r4, #0]
 800a884:	f042 0201 	orr.w	r2, r2, #1
 800a888:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800a88a:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800a88e:	2000      	movs	r0, #0
}
 800a890:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a894:	4770      	bx	lr
 800a896:	bf00      	nop

0800a898 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800a898:	2800      	cmp	r0, #0
 800a89a:	d069      	beq.n	800a970 <HAL_LTDC_Init+0xd8>
{
 800a89c:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800a89e:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800a8a2:	4604      	mov	r4, r0
 800a8a4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a8a8:	2b00      	cmp	r3, #0
 800a8aa:	d05c      	beq.n	800a966 <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800a8ac:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800a8ae:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800a8b0:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800a8b4:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800a8b8:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800a8ba:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800a8bc:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800a8c0:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800a8c4:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800a8c6:	6999      	ldr	r1, [r3, #24]
 800a8c8:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800a8ca:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800a8cc:	430a      	orrs	r2, r1
 800a8ce:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800a8d0:	689a      	ldr	r2, [r3, #8]
 800a8d2:	4928      	ldr	r1, [pc, #160]	; (800a974 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800a8d4:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800a8d6:	400a      	ands	r2, r1
 800a8d8:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800a8da:	689a      	ldr	r2, [r3, #8]
 800a8dc:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800a8e0:	69a0      	ldr	r0, [r4, #24]
 800a8e2:	4302      	orrs	r2, r0
 800a8e4:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800a8e6:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800a8e8:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800a8ea:	400a      	ands	r2, r1
 800a8ec:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800a8ee:	68da      	ldr	r2, [r3, #12]
 800a8f0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800a8f4:	6a20      	ldr	r0, [r4, #32]
 800a8f6:	4302      	orrs	r2, r0
 800a8f8:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800a8fa:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800a8fc:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800a8fe:	400a      	ands	r2, r1
 800a900:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800a902:	691a      	ldr	r2, [r3, #16]
 800a904:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800a908:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800a90a:	4302      	orrs	r2, r0
 800a90c:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800a90e:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800a910:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800a912:	400a      	ands	r2, r1
 800a914:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800a916:	695a      	ldr	r2, [r3, #20]
 800a918:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800a91a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800a91e:	430a      	orrs	r2, r1
 800a920:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800a922:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800a924:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800a928:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800a92c:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800a930:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800a932:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800a934:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800a938:	432a      	orrs	r2, r5
 800a93a:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800a93e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800a942:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800a944:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800a946:	f042 0206 	orr.w	r2, r2, #6
 800a94a:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800a94c:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800a94e:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800a952:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800a954:	ea42 020c 	orr.w	r2, r2, ip
 800a958:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800a95a:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800a95e:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800a962:	4608      	mov	r0, r1
}
 800a964:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800a966:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800a96a:	f7f7 f9c3 	bl	8001cf4 <HAL_LTDC_MspInit>
 800a96e:	e79d      	b.n	800a8ac <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800a970:	2001      	movs	r0, #1
}
 800a972:	4770      	bx	lr
 800a974:	f000f800 	.word	0xf000f800

0800a978 <HAL_LTDC_ErrorCallback>:
 800a978:	4770      	bx	lr
 800a97a:	bf00      	nop

0800a97c <HAL_LTDC_ReloadEventCallback>:
 800a97c:	4770      	bx	lr
 800a97e:	bf00      	nop

0800a980 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800a980:	6803      	ldr	r3, [r0, #0]
{
 800a982:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800a984:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800a986:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800a988:	076a      	lsls	r2, r5, #29
{
 800a98a:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800a98c:	d501      	bpl.n	800a992 <HAL_LTDC_IRQHandler+0x12>
 800a98e:	0771      	lsls	r1, r6, #29
 800a990:	d41d      	bmi.n	800a9ce <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800a992:	07aa      	lsls	r2, r5, #30
 800a994:	d501      	bpl.n	800a99a <HAL_LTDC_IRQHandler+0x1a>
 800a996:	07b3      	lsls	r3, r6, #30
 800a998:	d42d      	bmi.n	800a9f6 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800a99a:	07e8      	lsls	r0, r5, #31
 800a99c:	d501      	bpl.n	800a9a2 <HAL_LTDC_IRQHandler+0x22>
 800a99e:	07f1      	lsls	r1, r6, #31
 800a9a0:	d440      	bmi.n	800aa24 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800a9a2:	072a      	lsls	r2, r5, #28
 800a9a4:	d501      	bpl.n	800a9aa <HAL_LTDC_IRQHandler+0x2a>
 800a9a6:	0733      	lsls	r3, r6, #28
 800a9a8:	d400      	bmi.n	800a9ac <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800a9aa:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800a9ac:	6823      	ldr	r3, [r4, #0]
 800a9ae:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800a9b0:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800a9b2:	f022 0208 	bic.w	r2, r2, #8
 800a9b6:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800a9b8:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800a9ba:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800a9bc:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800a9be:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800a9c2:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800a9c6:	4620      	mov	r0, r4
 800a9c8:	f7ff ffd8 	bl	800a97c <HAL_LTDC_ReloadEventCallback>
}
 800a9cc:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800a9ce:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800a9d0:	f022 0204 	bic.w	r2, r2, #4
 800a9d4:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800a9d6:	2204      	movs	r2, #4
 800a9d8:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800a9da:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800a9de:	f043 0301 	orr.w	r3, r3, #1
 800a9e2:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800a9e6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800a9e8:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800a9ec:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800a9f0:	f7ff ffc2 	bl	800a978 <HAL_LTDC_ErrorCallback>
 800a9f4:	e7cd      	b.n	800a992 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800a9f6:	6823      	ldr	r3, [r4, #0]
 800a9f8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800a9fa:	f022 0202 	bic.w	r2, r2, #2
 800a9fe:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800aa00:	2202      	movs	r2, #2
 800aa02:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800aa04:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800aa08:	f043 0302 	orr.w	r3, r3, #2
 800aa0c:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800aa10:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800aa12:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800aa14:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800aa18:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800aa1c:	4620      	mov	r0, r4
 800aa1e:	f7ff ffab 	bl	800a978 <HAL_LTDC_ErrorCallback>
 800aa22:	e7ba      	b.n	800a99a <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800aa24:	6823      	ldr	r3, [r4, #0]
 800aa26:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800aa28:	f022 0201 	bic.w	r2, r2, #1
 800aa2c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800aa2e:	2201      	movs	r2, #1
 800aa30:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800aa32:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800aa34:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800aa38:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800aa3c:	4620      	mov	r0, r4
 800aa3e:	f7f6 fc71 	bl	8001324 <HAL_LTDC_LineEventCallback>
 800aa42:	e7ae      	b.n	800a9a2 <HAL_LTDC_IRQHandler+0x22>

0800aa44 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800aa44:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800aa48:	2b01      	cmp	r3, #1
 800aa4a:	f000 80c2 	beq.w	800abd2 <HAL_LTDC_ConfigLayer+0x18e>
{
 800aa4e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800aa52:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800aa56:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800aa5a:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800aa5e:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800aa60:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800aa62:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800aa66:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800aa6a:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800aa6e:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800aa72:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800aa76:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800aa7a:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800aa7c:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800aa80:	460c      	mov	r4, r1
 800aa82:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800aa84:	9301      	str	r3, [sp, #4]
 800aa86:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800aa88:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800aa8a:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800aa8e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800aa92:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800aa94:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800aa96:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800aa9a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800aa9c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800aaa0:	6823      	ldr	r3, [r4, #0]
 800aaa2:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800aaa6:	9b01      	ldr	r3, [sp, #4]
 800aaa8:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800aaac:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800aab0:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800aab2:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800aab4:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800aab8:	1c51      	adds	r1, r2, #1
 800aaba:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800aabe:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800aac0:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800aac2:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800aac6:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800aaca:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800aace:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800aad2:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800aad6:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800aada:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800aade:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800aae0:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800aae2:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800aae6:	3301      	adds	r3, #1
 800aae8:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800aaec:	4403      	add	r3, r0
 800aaee:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800aaf2:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800aaf6:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800aafa:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800aafc:	f023 0307 	bic.w	r3, r3, #7
 800ab00:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800ab04:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800ab08:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800ab0c:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800ab10:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800ab14:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800ab18:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800ab1c:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800ab20:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800ab24:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800ab28:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800ab2c:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800ab30:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800ab34:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800ab38:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800ab3c:	696b      	ldr	r3, [r5, #20]
 800ab3e:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800ab42:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800ab46:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800ab4a:	f023 0307 	bic.w	r3, r3, #7
 800ab4e:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800ab52:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800ab56:	4303      	orrs	r3, r0
 800ab58:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800ab5c:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800ab60:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800ab62:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800ab66:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800ab6a:	bb69      	cbnz	r1, 800abc8 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800ab6c:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800ab6e:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800ab70:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800ab72:	fb03 f707 	mul.w	r7, r3, r7
 800ab76:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800ab78:	fb02 f303 	mul.w	r3, r2, r3
 800ab7c:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800ab80:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800ab84:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800ab86:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800ab8a:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800ab8e:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800ab92:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800ab96:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800ab9a:	f023 0307 	bic.w	r3, r3, #7
 800ab9e:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800aba2:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800aba6:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800abaa:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800abac:	4313      	orrs	r3, r2
 800abae:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800abb2:	2300      	movs	r3, #0
  return HAL_OK;
 800abb4:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800abb6:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800abba:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800abbe:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800abc2:	b003      	add	sp, #12
 800abc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800abc8:	3901      	subs	r1, #1
 800abca:	2906      	cmp	r1, #6
 800abcc:	d903      	bls.n	800abd6 <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800abce:	2301      	movs	r3, #1
 800abd0:	e7cd      	b.n	800ab6e <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800abd2:	2002      	movs	r0, #2
}
 800abd4:	4770      	bx	lr
 800abd6:	4b02      	ldr	r3, [pc, #8]	; (800abe0 <HAL_LTDC_ConfigLayer+0x19c>)
 800abd8:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800abdc:	e7c7      	b.n	800ab6e <HAL_LTDC_ConfigLayer+0x12a>
 800abde:	bf00      	nop
 800abe0:	0802c1bc 	.word	0x0802c1bc

0800abe4 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800abe4:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800abe8:	2b01      	cmp	r3, #1
 800abea:	d019      	beq.n	800ac20 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800abec:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800abee:	2302      	movs	r3, #2
{
 800abf0:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800abf2:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800abf6:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800abf8:	4c0a      	ldr	r4, [pc, #40]	; (800ac24 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800abfa:	f023 0301 	bic.w	r3, r3, #1
 800abfe:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800ac00:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800ac02:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800ac04:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800ac06:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800ac0a:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800ac0e:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800ac10:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800ac14:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800ac18:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800ac1c:	4618      	mov	r0, r3
}
 800ac1e:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800ac20:	2002      	movs	r0, #2
}
 800ac22:	4770      	bx	lr
 800ac24:	40016800 	.word	0x40016800

0800ac28 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800ac28:	2800      	cmp	r0, #0
 800ac2a:	f000 81a2 	beq.w	800af72 <HAL_RCC_OscConfig+0x34a>
{
 800ac2e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800ac32:	6803      	ldr	r3, [r0, #0]
 800ac34:	07dd      	lsls	r5, r3, #31
{
 800ac36:	b082      	sub	sp, #8
 800ac38:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800ac3a:	d52f      	bpl.n	800ac9c <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800ac3c:	499e      	ldr	r1, [pc, #632]	; (800aeb8 <HAL_RCC_OscConfig+0x290>)
 800ac3e:	688a      	ldr	r2, [r1, #8]
 800ac40:	f002 020c 	and.w	r2, r2, #12
 800ac44:	2a04      	cmp	r2, #4
 800ac46:	f000 80ed 	beq.w	800ae24 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800ac4a:	688a      	ldr	r2, [r1, #8]
 800ac4c:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800ac50:	2a08      	cmp	r2, #8
 800ac52:	f000 80e3 	beq.w	800ae1c <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800ac56:	6863      	ldr	r3, [r4, #4]
 800ac58:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800ac5c:	f000 80ec 	beq.w	800ae38 <HAL_RCC_OscConfig+0x210>
 800ac60:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800ac64:	f000 8175 	beq.w	800af52 <HAL_RCC_OscConfig+0x32a>
 800ac68:	4d93      	ldr	r5, [pc, #588]	; (800aeb8 <HAL_RCC_OscConfig+0x290>)
 800ac6a:	682a      	ldr	r2, [r5, #0]
 800ac6c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800ac70:	602a      	str	r2, [r5, #0]
 800ac72:	682a      	ldr	r2, [r5, #0]
 800ac74:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800ac78:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800ac7a:	2b00      	cmp	r3, #0
 800ac7c:	f040 80e1 	bne.w	800ae42 <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800ac80:	f7fd fe94 	bl	80089ac <HAL_GetTick>
 800ac84:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800ac86:	e005      	b.n	800ac94 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800ac88:	f7fd fe90 	bl	80089ac <HAL_GetTick>
 800ac8c:	1b80      	subs	r0, r0, r6
 800ac8e:	2864      	cmp	r0, #100	; 0x64
 800ac90:	f200 8101 	bhi.w	800ae96 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800ac94:	682b      	ldr	r3, [r5, #0]
 800ac96:	039b      	lsls	r3, r3, #14
 800ac98:	d4f6      	bmi.n	800ac88 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800ac9a:	6823      	ldr	r3, [r4, #0]
 800ac9c:	079f      	lsls	r7, r3, #30
 800ac9e:	d528      	bpl.n	800acf2 <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800aca0:	4a85      	ldr	r2, [pc, #532]	; (800aeb8 <HAL_RCC_OscConfig+0x290>)
 800aca2:	6891      	ldr	r1, [r2, #8]
 800aca4:	f011 0f0c 	tst.w	r1, #12
 800aca8:	f000 8090 	beq.w	800adcc <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800acac:	6891      	ldr	r1, [r2, #8]
 800acae:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800acb2:	2908      	cmp	r1, #8
 800acb4:	f000 8086 	beq.w	800adc4 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800acb8:	68e3      	ldr	r3, [r4, #12]
 800acba:	2b00      	cmp	r3, #0
 800acbc:	f000 810e 	beq.w	800aedc <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800acc0:	4b7e      	ldr	r3, [pc, #504]	; (800aebc <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800acc2:	4e7d      	ldr	r6, [pc, #500]	; (800aeb8 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800acc4:	2201      	movs	r2, #1
 800acc6:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800acc8:	f7fd fe70 	bl	80089ac <HAL_GetTick>
 800accc:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800acce:	e005      	b.n	800acdc <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800acd0:	f7fd fe6c 	bl	80089ac <HAL_GetTick>
 800acd4:	1b40      	subs	r0, r0, r5
 800acd6:	2802      	cmp	r0, #2
 800acd8:	f200 80dd 	bhi.w	800ae96 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800acdc:	6833      	ldr	r3, [r6, #0]
 800acde:	0798      	lsls	r0, r3, #30
 800ace0:	d5f6      	bpl.n	800acd0 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800ace2:	6833      	ldr	r3, [r6, #0]
 800ace4:	6922      	ldr	r2, [r4, #16]
 800ace6:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800acea:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800acee:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800acf0:	6823      	ldr	r3, [r4, #0]
 800acf2:	071a      	lsls	r2, r3, #28
 800acf4:	d451      	bmi.n	800ad9a <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800acf6:	0758      	lsls	r0, r3, #29
 800acf8:	d52f      	bpl.n	800ad5a <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800acfa:	4a6f      	ldr	r2, [pc, #444]	; (800aeb8 <HAL_RCC_OscConfig+0x290>)
 800acfc:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800acfe:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800ad02:	d07f      	beq.n	800ae04 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800ad04:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800ad06:	4e6e      	ldr	r6, [pc, #440]	; (800aec0 <HAL_RCC_OscConfig+0x298>)
 800ad08:	6833      	ldr	r3, [r6, #0]
 800ad0a:	05d9      	lsls	r1, r3, #23
 800ad0c:	f140 80b3 	bpl.w	800ae76 <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800ad10:	68a3      	ldr	r3, [r4, #8]
 800ad12:	2b01      	cmp	r3, #1
 800ad14:	f000 80c3 	beq.w	800ae9e <HAL_RCC_OscConfig+0x276>
 800ad18:	2b05      	cmp	r3, #5
 800ad1a:	f000 812c 	beq.w	800af76 <HAL_RCC_OscConfig+0x34e>
 800ad1e:	4e66      	ldr	r6, [pc, #408]	; (800aeb8 <HAL_RCC_OscConfig+0x290>)
 800ad20:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800ad22:	f022 0201 	bic.w	r2, r2, #1
 800ad26:	6732      	str	r2, [r6, #112]	; 0x70
 800ad28:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800ad2a:	f022 0204 	bic.w	r2, r2, #4
 800ad2e:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800ad30:	2b00      	cmp	r3, #0
 800ad32:	f040 80b9 	bne.w	800aea8 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800ad36:	f7fd fe39 	bl	80089ac <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800ad3a:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800ad3e:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800ad40:	e005      	b.n	800ad4e <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800ad42:	f7fd fe33 	bl	80089ac <HAL_GetTick>
 800ad46:	1bc0      	subs	r0, r0, r7
 800ad48:	4540      	cmp	r0, r8
 800ad4a:	f200 80a4 	bhi.w	800ae96 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800ad4e:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800ad50:	0798      	lsls	r0, r3, #30
 800ad52:	d4f6      	bmi.n	800ad42 <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800ad54:	2d00      	cmp	r5, #0
 800ad56:	f040 8106 	bne.w	800af66 <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800ad5a:	69a0      	ldr	r0, [r4, #24]
 800ad5c:	b1c8      	cbz	r0, 800ad92 <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800ad5e:	4d56      	ldr	r5, [pc, #344]	; (800aeb8 <HAL_RCC_OscConfig+0x290>)
 800ad60:	68ab      	ldr	r3, [r5, #8]
 800ad62:	f003 030c 	and.w	r3, r3, #12
 800ad66:	2b08      	cmp	r3, #8
 800ad68:	f000 80c9 	beq.w	800aefe <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800ad6c:	4b53      	ldr	r3, [pc, #332]	; (800aebc <HAL_RCC_OscConfig+0x294>)
 800ad6e:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800ad70:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800ad72:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800ad74:	f000 8109 	beq.w	800af8a <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800ad78:	f7fd fe18 	bl	80089ac <HAL_GetTick>
 800ad7c:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800ad7e:	e005      	b.n	800ad8c <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800ad80:	f7fd fe14 	bl	80089ac <HAL_GetTick>
 800ad84:	1b00      	subs	r0, r0, r4
 800ad86:	2802      	cmp	r0, #2
 800ad88:	f200 8085 	bhi.w	800ae96 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800ad8c:	682b      	ldr	r3, [r5, #0]
 800ad8e:	019b      	lsls	r3, r3, #6
 800ad90:	d4f6      	bmi.n	800ad80 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800ad92:	2000      	movs	r0, #0
}
 800ad94:	b002      	add	sp, #8
 800ad96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800ad9a:	6963      	ldr	r3, [r4, #20]
 800ad9c:	b30b      	cbz	r3, 800ade2 <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800ad9e:	4b47      	ldr	r3, [pc, #284]	; (800aebc <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800ada0:	4e45      	ldr	r6, [pc, #276]	; (800aeb8 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800ada2:	2201      	movs	r2, #1
 800ada4:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800ada8:	f7fd fe00 	bl	80089ac <HAL_GetTick>
 800adac:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800adae:	e004      	b.n	800adba <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800adb0:	f7fd fdfc 	bl	80089ac <HAL_GetTick>
 800adb4:	1b40      	subs	r0, r0, r5
 800adb6:	2802      	cmp	r0, #2
 800adb8:	d86d      	bhi.n	800ae96 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800adba:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800adbc:	079b      	lsls	r3, r3, #30
 800adbe:	d5f7      	bpl.n	800adb0 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800adc0:	6823      	ldr	r3, [r4, #0]
 800adc2:	e798      	b.n	800acf6 <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800adc4:	6852      	ldr	r2, [r2, #4]
 800adc6:	0256      	lsls	r6, r2, #9
 800adc8:	f53f af76 	bmi.w	800acb8 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800adcc:	4a3a      	ldr	r2, [pc, #232]	; (800aeb8 <HAL_RCC_OscConfig+0x290>)
 800adce:	6812      	ldr	r2, [r2, #0]
 800add0:	0795      	lsls	r5, r2, #30
 800add2:	d544      	bpl.n	800ae5e <HAL_RCC_OscConfig+0x236>
 800add4:	68e2      	ldr	r2, [r4, #12]
 800add6:	2a01      	cmp	r2, #1
 800add8:	d041      	beq.n	800ae5e <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800adda:	2001      	movs	r0, #1
}
 800addc:	b002      	add	sp, #8
 800adde:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800ade2:	4a36      	ldr	r2, [pc, #216]	; (800aebc <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800ade4:	4e34      	ldr	r6, [pc, #208]	; (800aeb8 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800ade6:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800adea:	f7fd fddf 	bl	80089ac <HAL_GetTick>
 800adee:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800adf0:	e004      	b.n	800adfc <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800adf2:	f7fd fddb 	bl	80089ac <HAL_GetTick>
 800adf6:	1b40      	subs	r0, r0, r5
 800adf8:	2802      	cmp	r0, #2
 800adfa:	d84c      	bhi.n	800ae96 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800adfc:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800adfe:	079f      	lsls	r7, r3, #30
 800ae00:	d4f7      	bmi.n	800adf2 <HAL_RCC_OscConfig+0x1ca>
 800ae02:	e7dd      	b.n	800adc0 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800ae04:	9301      	str	r3, [sp, #4]
 800ae06:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800ae08:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800ae0c:	6413      	str	r3, [r2, #64]	; 0x40
 800ae0e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800ae10:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800ae14:	9301      	str	r3, [sp, #4]
 800ae16:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800ae18:	2501      	movs	r5, #1
 800ae1a:	e774      	b.n	800ad06 <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800ae1c:	684a      	ldr	r2, [r1, #4]
 800ae1e:	0250      	lsls	r0, r2, #9
 800ae20:	f57f af19 	bpl.w	800ac56 <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800ae24:	4a24      	ldr	r2, [pc, #144]	; (800aeb8 <HAL_RCC_OscConfig+0x290>)
 800ae26:	6812      	ldr	r2, [r2, #0]
 800ae28:	0391      	lsls	r1, r2, #14
 800ae2a:	f57f af37 	bpl.w	800ac9c <HAL_RCC_OscConfig+0x74>
 800ae2e:	6862      	ldr	r2, [r4, #4]
 800ae30:	2a00      	cmp	r2, #0
 800ae32:	f47f af33 	bne.w	800ac9c <HAL_RCC_OscConfig+0x74>
 800ae36:	e7d0      	b.n	800adda <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800ae38:	4a1f      	ldr	r2, [pc, #124]	; (800aeb8 <HAL_RCC_OscConfig+0x290>)
 800ae3a:	6813      	ldr	r3, [r2, #0]
 800ae3c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800ae40:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800ae42:	f7fd fdb3 	bl	80089ac <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800ae46:	4e1c      	ldr	r6, [pc, #112]	; (800aeb8 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800ae48:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800ae4a:	e004      	b.n	800ae56 <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800ae4c:	f7fd fdae 	bl	80089ac <HAL_GetTick>
 800ae50:	1b40      	subs	r0, r0, r5
 800ae52:	2864      	cmp	r0, #100	; 0x64
 800ae54:	d81f      	bhi.n	800ae96 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800ae56:	6833      	ldr	r3, [r6, #0]
 800ae58:	039a      	lsls	r2, r3, #14
 800ae5a:	d5f7      	bpl.n	800ae4c <HAL_RCC_OscConfig+0x224>
 800ae5c:	e71d      	b.n	800ac9a <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800ae5e:	4916      	ldr	r1, [pc, #88]	; (800aeb8 <HAL_RCC_OscConfig+0x290>)
 800ae60:	6920      	ldr	r0, [r4, #16]
 800ae62:	680a      	ldr	r2, [r1, #0]
 800ae64:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800ae68:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800ae6c:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800ae6e:	071a      	lsls	r2, r3, #28
 800ae70:	f57f af41 	bpl.w	800acf6 <HAL_RCC_OscConfig+0xce>
 800ae74:	e791      	b.n	800ad9a <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800ae76:	6833      	ldr	r3, [r6, #0]
 800ae78:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800ae7c:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800ae7e:	f7fd fd95 	bl	80089ac <HAL_GetTick>
 800ae82:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800ae84:	6833      	ldr	r3, [r6, #0]
 800ae86:	05da      	lsls	r2, r3, #23
 800ae88:	f53f af42 	bmi.w	800ad10 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800ae8c:	f7fd fd8e 	bl	80089ac <HAL_GetTick>
 800ae90:	1bc0      	subs	r0, r0, r7
 800ae92:	2802      	cmp	r0, #2
 800ae94:	d9f6      	bls.n	800ae84 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800ae96:	2003      	movs	r0, #3
}
 800ae98:	b002      	add	sp, #8
 800ae9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800ae9e:	4a06      	ldr	r2, [pc, #24]	; (800aeb8 <HAL_RCC_OscConfig+0x290>)
 800aea0:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800aea2:	f043 0301 	orr.w	r3, r3, #1
 800aea6:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800aea8:	f7fd fd80 	bl	80089ac <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800aeac:	4f02      	ldr	r7, [pc, #8]	; (800aeb8 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800aeae:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800aeb0:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800aeb4:	e00b      	b.n	800aece <HAL_RCC_OscConfig+0x2a6>
 800aeb6:	bf00      	nop
 800aeb8:	40023800 	.word	0x40023800
 800aebc:	42470000 	.word	0x42470000
 800aec0:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800aec4:	f7fd fd72 	bl	80089ac <HAL_GetTick>
 800aec8:	1b80      	subs	r0, r0, r6
 800aeca:	4540      	cmp	r0, r8
 800aecc:	d8e3      	bhi.n	800ae96 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800aece:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800aed0:	079b      	lsls	r3, r3, #30
 800aed2:	d5f7      	bpl.n	800aec4 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800aed4:	2d00      	cmp	r5, #0
 800aed6:	f43f af40 	beq.w	800ad5a <HAL_RCC_OscConfig+0x132>
 800aeda:	e044      	b.n	800af66 <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800aedc:	4a42      	ldr	r2, [pc, #264]	; (800afe8 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800aede:	4e43      	ldr	r6, [pc, #268]	; (800afec <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800aee0:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800aee2:	f7fd fd63 	bl	80089ac <HAL_GetTick>
 800aee6:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800aee8:	e004      	b.n	800aef4 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800aeea:	f7fd fd5f 	bl	80089ac <HAL_GetTick>
 800aeee:	1b40      	subs	r0, r0, r5
 800aef0:	2802      	cmp	r0, #2
 800aef2:	d8d0      	bhi.n	800ae96 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800aef4:	6833      	ldr	r3, [r6, #0]
 800aef6:	0799      	lsls	r1, r3, #30
 800aef8:	d4f7      	bmi.n	800aeea <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800aefa:	6823      	ldr	r3, [r4, #0]
 800aefc:	e6f9      	b.n	800acf2 <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800aefe:	2801      	cmp	r0, #1
 800af00:	f43f af48 	beq.w	800ad94 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800af04:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800af06:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800af08:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800af0c:	4291      	cmp	r1, r2
 800af0e:	f47f af64 	bne.w	800adda <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800af12:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800af14:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800af18:	4291      	cmp	r1, r2
 800af1a:	f47f af5e 	bne.w	800adda <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800af1e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800af20:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800af24:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800af26:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800af2a:	f47f af56 	bne.w	800adda <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800af2e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800af30:	0852      	lsrs	r2, r2, #1
 800af32:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800af36:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800af38:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800af3c:	f47f af4d 	bne.w	800adda <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800af40:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800af42:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800af46:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800af4a:	bf14      	ite	ne
 800af4c:	2001      	movne	r0, #1
 800af4e:	2000      	moveq	r0, #0
 800af50:	e720      	b.n	800ad94 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800af52:	4b26      	ldr	r3, [pc, #152]	; (800afec <HAL_RCC_OscConfig+0x3c4>)
 800af54:	681a      	ldr	r2, [r3, #0]
 800af56:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800af5a:	601a      	str	r2, [r3, #0]
 800af5c:	681a      	ldr	r2, [r3, #0]
 800af5e:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800af62:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800af64:	e76d      	b.n	800ae42 <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800af66:	4a21      	ldr	r2, [pc, #132]	; (800afec <HAL_RCC_OscConfig+0x3c4>)
 800af68:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800af6a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800af6e:	6413      	str	r3, [r2, #64]	; 0x40
 800af70:	e6f3      	b.n	800ad5a <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800af72:	2001      	movs	r0, #1
}
 800af74:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800af76:	4b1d      	ldr	r3, [pc, #116]	; (800afec <HAL_RCC_OscConfig+0x3c4>)
 800af78:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800af7a:	f042 0204 	orr.w	r2, r2, #4
 800af7e:	671a      	str	r2, [r3, #112]	; 0x70
 800af80:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800af82:	f042 0201 	orr.w	r2, r2, #1
 800af86:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800af88:	e78e      	b.n	800aea8 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800af8a:	f7fd fd0f 	bl	80089ac <HAL_GetTick>
 800af8e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800af90:	e005      	b.n	800af9e <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800af92:	f7fd fd0b 	bl	80089ac <HAL_GetTick>
 800af96:	1b80      	subs	r0, r0, r6
 800af98:	2802      	cmp	r0, #2
 800af9a:	f63f af7c 	bhi.w	800ae96 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800af9e:	682b      	ldr	r3, [r5, #0]
 800afa0:	0199      	lsls	r1, r3, #6
 800afa2:	d4f6      	bmi.n	800af92 <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800afa4:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800afa8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800afaa:	430b      	orrs	r3, r1
 800afac:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800afb0:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800afb4:	0852      	lsrs	r2, r2, #1
 800afb6:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800afba:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800afbc:	490a      	ldr	r1, [pc, #40]	; (800afe8 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800afbe:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800afc2:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800afc4:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800afc6:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800afc8:	f7fd fcf0 	bl	80089ac <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800afcc:	4d07      	ldr	r5, [pc, #28]	; (800afec <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800afce:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800afd0:	e005      	b.n	800afde <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800afd2:	f7fd fceb 	bl	80089ac <HAL_GetTick>
 800afd6:	1b00      	subs	r0, r0, r4
 800afd8:	2802      	cmp	r0, #2
 800afda:	f63f af5c 	bhi.w	800ae96 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800afde:	682b      	ldr	r3, [r5, #0]
 800afe0:	019a      	lsls	r2, r3, #6
 800afe2:	d5f6      	bpl.n	800afd2 <HAL_RCC_OscConfig+0x3aa>
 800afe4:	e6d5      	b.n	800ad92 <HAL_RCC_OscConfig+0x16a>
 800afe6:	bf00      	nop
 800afe8:	42470000 	.word	0x42470000
 800afec:	40023800 	.word	0x40023800

0800aff0 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800aff0:	4916      	ldr	r1, [pc, #88]	; (800b04c <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800aff2:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800aff4:	688b      	ldr	r3, [r1, #8]
 800aff6:	f003 030c 	and.w	r3, r3, #12
 800affa:	2b04      	cmp	r3, #4
 800affc:	d01b      	beq.n	800b036 <HAL_RCC_GetSysClockFreq+0x46>
 800affe:	2b08      	cmp	r3, #8
 800b000:	d117      	bne.n	800b032 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b002:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b004:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b006:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b008:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b00c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b010:	d113      	bne.n	800b03a <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b012:	480f      	ldr	r0, [pc, #60]	; (800b050 <HAL_RCC_GetSysClockFreq+0x60>)
 800b014:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b018:	fba1 0100 	umull	r0, r1, r1, r0
 800b01c:	f7f5 f938 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800b020:	4b0a      	ldr	r3, [pc, #40]	; (800b04c <HAL_RCC_GetSysClockFreq+0x5c>)
 800b022:	685b      	ldr	r3, [r3, #4]
 800b024:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800b028:	3301      	adds	r3, #1
 800b02a:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800b02c:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800b030:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800b032:	4807      	ldr	r0, [pc, #28]	; (800b050 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800b034:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b036:	4807      	ldr	r0, [pc, #28]	; (800b054 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800b038:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b03a:	4806      	ldr	r0, [pc, #24]	; (800b054 <HAL_RCC_GetSysClockFreq+0x64>)
 800b03c:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b040:	2300      	movs	r3, #0
 800b042:	fba1 0100 	umull	r0, r1, r1, r0
 800b046:	f7f5 f923 	bl	8000290 <__aeabi_uldivmod>
 800b04a:	e7e9      	b.n	800b020 <HAL_RCC_GetSysClockFreq+0x30>
 800b04c:	40023800 	.word	0x40023800
 800b050:	00f42400 	.word	0x00f42400
 800b054:	007a1200 	.word	0x007a1200

0800b058 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800b058:	2800      	cmp	r0, #0
 800b05a:	f000 8087 	beq.w	800b16c <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b05e:	4a48      	ldr	r2, [pc, #288]	; (800b180 <HAL_RCC_ClockConfig+0x128>)
 800b060:	6813      	ldr	r3, [r2, #0]
 800b062:	f003 030f 	and.w	r3, r3, #15
 800b066:	428b      	cmp	r3, r1
{
 800b068:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b06c:	460d      	mov	r5, r1
 800b06e:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b070:	d209      	bcs.n	800b086 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b072:	b2cb      	uxtb	r3, r1
 800b074:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b076:	6813      	ldr	r3, [r2, #0]
 800b078:	f003 030f 	and.w	r3, r3, #15
 800b07c:	428b      	cmp	r3, r1
 800b07e:	d002      	beq.n	800b086 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800b080:	2001      	movs	r0, #1
}
 800b082:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800b086:	6823      	ldr	r3, [r4, #0]
 800b088:	0798      	lsls	r0, r3, #30
 800b08a:	d514      	bpl.n	800b0b6 <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b08c:	0759      	lsls	r1, r3, #29
 800b08e:	d504      	bpl.n	800b09a <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800b090:	493c      	ldr	r1, [pc, #240]	; (800b184 <HAL_RCC_ClockConfig+0x12c>)
 800b092:	688a      	ldr	r2, [r1, #8]
 800b094:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800b098:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b09a:	071a      	lsls	r2, r3, #28
 800b09c:	d504      	bpl.n	800b0a8 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800b09e:	4939      	ldr	r1, [pc, #228]	; (800b184 <HAL_RCC_ClockConfig+0x12c>)
 800b0a0:	688a      	ldr	r2, [r1, #8]
 800b0a2:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800b0a6:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800b0a8:	4936      	ldr	r1, [pc, #216]	; (800b184 <HAL_RCC_ClockConfig+0x12c>)
 800b0aa:	68a0      	ldr	r0, [r4, #8]
 800b0ac:	688a      	ldr	r2, [r1, #8]
 800b0ae:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800b0b2:	4302      	orrs	r2, r0
 800b0b4:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800b0b6:	07df      	lsls	r7, r3, #31
 800b0b8:	d521      	bpl.n	800b0fe <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800b0ba:	6862      	ldr	r2, [r4, #4]
 800b0bc:	2a01      	cmp	r2, #1
 800b0be:	d057      	beq.n	800b170 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b0c0:	1e93      	subs	r3, r2, #2
 800b0c2:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b0c4:	4b2f      	ldr	r3, [pc, #188]	; (800b184 <HAL_RCC_ClockConfig+0x12c>)
 800b0c6:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b0c8:	d94d      	bls.n	800b166 <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b0ca:	0799      	lsls	r1, r3, #30
 800b0cc:	d5d8      	bpl.n	800b080 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800b0ce:	4e2d      	ldr	r6, [pc, #180]	; (800b184 <HAL_RCC_ClockConfig+0x12c>)
 800b0d0:	68b3      	ldr	r3, [r6, #8]
 800b0d2:	f023 0303 	bic.w	r3, r3, #3
 800b0d6:	4313      	orrs	r3, r2
 800b0d8:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800b0da:	f7fd fc67 	bl	80089ac <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b0de:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800b0e2:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b0e4:	e004      	b.n	800b0f0 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b0e6:	f7fd fc61 	bl	80089ac <HAL_GetTick>
 800b0ea:	1bc0      	subs	r0, r0, r7
 800b0ec:	4540      	cmp	r0, r8
 800b0ee:	d844      	bhi.n	800b17a <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b0f0:	68b3      	ldr	r3, [r6, #8]
 800b0f2:	6862      	ldr	r2, [r4, #4]
 800b0f4:	f003 030c 	and.w	r3, r3, #12
 800b0f8:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800b0fc:	d1f3      	bne.n	800b0e6 <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800b0fe:	4a20      	ldr	r2, [pc, #128]	; (800b180 <HAL_RCC_ClockConfig+0x128>)
 800b100:	6813      	ldr	r3, [r2, #0]
 800b102:	f003 030f 	and.w	r3, r3, #15
 800b106:	42ab      	cmp	r3, r5
 800b108:	d906      	bls.n	800b118 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b10a:	b2eb      	uxtb	r3, r5
 800b10c:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b10e:	6813      	ldr	r3, [r2, #0]
 800b110:	f003 030f 	and.w	r3, r3, #15
 800b114:	42ab      	cmp	r3, r5
 800b116:	d1b3      	bne.n	800b080 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b118:	6823      	ldr	r3, [r4, #0]
 800b11a:	075a      	lsls	r2, r3, #29
 800b11c:	d506      	bpl.n	800b12c <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800b11e:	4919      	ldr	r1, [pc, #100]	; (800b184 <HAL_RCC_ClockConfig+0x12c>)
 800b120:	68e0      	ldr	r0, [r4, #12]
 800b122:	688a      	ldr	r2, [r1, #8]
 800b124:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800b128:	4302      	orrs	r2, r0
 800b12a:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b12c:	071b      	lsls	r3, r3, #28
 800b12e:	d507      	bpl.n	800b140 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800b130:	4a14      	ldr	r2, [pc, #80]	; (800b184 <HAL_RCC_ClockConfig+0x12c>)
 800b132:	6921      	ldr	r1, [r4, #16]
 800b134:	6893      	ldr	r3, [r2, #8]
 800b136:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800b13a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800b13e:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b140:	f7ff ff56 	bl	800aff0 <HAL_RCC_GetSysClockFreq>
 800b144:	4a0f      	ldr	r2, [pc, #60]	; (800b184 <HAL_RCC_ClockConfig+0x12c>)
 800b146:	4c10      	ldr	r4, [pc, #64]	; (800b188 <HAL_RCC_ClockConfig+0x130>)
 800b148:	6892      	ldr	r2, [r2, #8]
 800b14a:	4910      	ldr	r1, [pc, #64]	; (800b18c <HAL_RCC_ClockConfig+0x134>)
 800b14c:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800b150:	4603      	mov	r3, r0
 800b152:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800b154:	480e      	ldr	r0, [pc, #56]	; (800b190 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b156:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800b158:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b15a:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800b15c:	f7f6 ff88 	bl	8002070 <HAL_InitTick>
  return HAL_OK;
 800b160:	2000      	movs	r0, #0
}
 800b162:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b166:	0198      	lsls	r0, r3, #6
 800b168:	d4b1      	bmi.n	800b0ce <HAL_RCC_ClockConfig+0x76>
 800b16a:	e789      	b.n	800b080 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800b16c:	2001      	movs	r0, #1
}
 800b16e:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b170:	4b04      	ldr	r3, [pc, #16]	; (800b184 <HAL_RCC_ClockConfig+0x12c>)
 800b172:	681b      	ldr	r3, [r3, #0]
 800b174:	039e      	lsls	r6, r3, #14
 800b176:	d4aa      	bmi.n	800b0ce <HAL_RCC_ClockConfig+0x76>
 800b178:	e782      	b.n	800b080 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800b17a:	2003      	movs	r0, #3
 800b17c:	e781      	b.n	800b082 <HAL_RCC_ClockConfig+0x2a>
 800b17e:	bf00      	nop
 800b180:	40023c00 	.word	0x40023c00
 800b184:	40023800 	.word	0x40023800
 800b188:	0802c1a4 	.word	0x0802c1a4
 800b18c:	20000078 	.word	0x20000078
 800b190:	20000080 	.word	0x20000080

0800b194 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b194:	4b04      	ldr	r3, [pc, #16]	; (800b1a8 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800b196:	4905      	ldr	r1, [pc, #20]	; (800b1ac <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b198:	689b      	ldr	r3, [r3, #8]
 800b19a:	4a05      	ldr	r2, [pc, #20]	; (800b1b0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800b19c:	6808      	ldr	r0, [r1, #0]
 800b19e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800b1a2:	5cd3      	ldrb	r3, [r2, r3]
}
 800b1a4:	40d8      	lsrs	r0, r3
 800b1a6:	4770      	bx	lr
 800b1a8:	40023800 	.word	0x40023800
 800b1ac:	20000078 	.word	0x20000078
 800b1b0:	0802c1b4 	.word	0x0802c1b4

0800b1b4 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800b1b4:	4b0e      	ldr	r3, [pc, #56]	; (800b1f0 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800b1b6:	220f      	movs	r2, #15
 800b1b8:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800b1ba:	689a      	ldr	r2, [r3, #8]
 800b1bc:	f002 0203 	and.w	r2, r2, #3
 800b1c0:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800b1c2:	689a      	ldr	r2, [r3, #8]
 800b1c4:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800b1c8:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800b1ca:	689a      	ldr	r2, [r3, #8]
 800b1cc:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800b1d0:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b1d2:	689b      	ldr	r3, [r3, #8]
 800b1d4:	08db      	lsrs	r3, r3, #3
{
 800b1d6:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b1d8:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b1dc:	4c05      	ldr	r4, [pc, #20]	; (800b1f4 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b1de:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b1e0:	6823      	ldr	r3, [r4, #0]
}
 800b1e2:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b1e6:	f003 030f 	and.w	r3, r3, #15
 800b1ea:	600b      	str	r3, [r1, #0]
}
 800b1ec:	4770      	bx	lr
 800b1ee:	bf00      	nop
 800b1f0:	40023800 	.word	0x40023800
 800b1f4:	40023c00 	.word	0x40023c00

0800b1f8 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800b1f8:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800b1fa:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800b1fc:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800b200:	b083      	sub	sp, #12
 800b202:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800b204:	d111      	bne.n	800b22a <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800b206:	f013 0f0c 	tst.w	r3, #12
 800b20a:	d16f      	bne.n	800b2ec <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800b20c:	0698      	lsls	r0, r3, #26
 800b20e:	f100 80c2 	bmi.w	800b396 <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800b212:	f013 0310 	ands.w	r3, r3, #16
 800b216:	f000 80bb 	beq.w	800b390 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800b21a:	4b89      	ldr	r3, [pc, #548]	; (800b440 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800b21c:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800b220:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800b224:	2000      	movs	r0, #0
}
 800b226:	b003      	add	sp, #12
 800b228:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800b22a:	4b86      	ldr	r3, [pc, #536]	; (800b444 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b22c:	4e86      	ldr	r6, [pc, #536]	; (800b448 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800b22e:	2200      	movs	r2, #0
 800b230:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800b232:	f7fd fbbb 	bl	80089ac <HAL_GetTick>
 800b236:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b238:	e004      	b.n	800b244 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800b23a:	f7fd fbb7 	bl	80089ac <HAL_GetTick>
 800b23e:	1b43      	subs	r3, r0, r5
 800b240:	2b02      	cmp	r3, #2
 800b242:	d850      	bhi.n	800b2e6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b244:	6833      	ldr	r3, [r6, #0]
 800b246:	0118      	lsls	r0, r3, #4
 800b248:	d4f7      	bmi.n	800b23a <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800b24a:	6823      	ldr	r3, [r4, #0]
 800b24c:	07d9      	lsls	r1, r3, #31
 800b24e:	d506      	bpl.n	800b25e <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800b250:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800b254:	0712      	lsls	r2, r2, #28
 800b256:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800b25a:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800b25e:	079a      	lsls	r2, r3, #30
 800b260:	d515      	bpl.n	800b28e <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800b262:	4979      	ldr	r1, [pc, #484]	; (800b448 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800b264:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800b266:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800b26a:	6865      	ldr	r5, [r4, #4]
 800b26c:	0612      	lsls	r2, r2, #24
 800b26e:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800b272:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800b276:	4302      	orrs	r2, r0
 800b278:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800b27c:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800b280:	69e2      	ldr	r2, [r4, #28]
 800b282:	f020 001f 	bic.w	r0, r0, #31
 800b286:	3a01      	subs	r2, #1
 800b288:	4302      	orrs	r2, r0
 800b28a:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800b28e:	065b      	lsls	r3, r3, #25
 800b290:	d509      	bpl.n	800b2a6 <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800b292:	1d20      	adds	r0, r4, #4
 800b294:	c80b      	ldmia	r0, {r0, r1, r3}
 800b296:	061b      	lsls	r3, r3, #24
 800b298:	4a6b      	ldr	r2, [pc, #428]	; (800b448 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b29a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b29e:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800b2a2:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800b2a6:	4b67      	ldr	r3, [pc, #412]	; (800b444 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b2a8:	4e67      	ldr	r6, [pc, #412]	; (800b448 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800b2aa:	2201      	movs	r2, #1
 800b2ac:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800b2ae:	f7fd fb7d 	bl	80089ac <HAL_GetTick>
 800b2b2:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b2b4:	e004      	b.n	800b2c0 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800b2b6:	f7fd fb79 	bl	80089ac <HAL_GetTick>
 800b2ba:	1b40      	subs	r0, r0, r5
 800b2bc:	2802      	cmp	r0, #2
 800b2be:	d812      	bhi.n	800b2e6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b2c0:	6833      	ldr	r3, [r6, #0]
 800b2c2:	011f      	lsls	r7, r3, #4
 800b2c4:	d5f7      	bpl.n	800b2b6 <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800b2c6:	6823      	ldr	r3, [r4, #0]
 800b2c8:	e79d      	b.n	800b206 <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800b2ca:	f7fd fb6f 	bl	80089ac <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b2ce:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800b2d2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b2d4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800b2d6:	079b      	lsls	r3, r3, #30
 800b2d8:	f100 80a5 	bmi.w	800b426 <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b2dc:	f7fd fb66 	bl	80089ac <HAL_GetTick>
 800b2e0:	1b80      	subs	r0, r0, r6
 800b2e2:	42b8      	cmp	r0, r7
 800b2e4:	d9f6      	bls.n	800b2d4 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800b2e6:	2003      	movs	r0, #3
}
 800b2e8:	b003      	add	sp, #12
 800b2ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800b2ec:	4b55      	ldr	r3, [pc, #340]	; (800b444 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b2ee:	4e56      	ldr	r6, [pc, #344]	; (800b448 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800b2f0:	2200      	movs	r2, #0
 800b2f2:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800b2f4:	f7fd fb5a 	bl	80089ac <HAL_GetTick>
 800b2f8:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b2fa:	e004      	b.n	800b306 <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800b2fc:	f7fd fb56 	bl	80089ac <HAL_GetTick>
 800b300:	1b43      	subs	r3, r0, r5
 800b302:	2b02      	cmp	r3, #2
 800b304:	d8ef      	bhi.n	800b2e6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b306:	6833      	ldr	r3, [r6, #0]
 800b308:	0098      	lsls	r0, r3, #2
 800b30a:	d4f7      	bmi.n	800b2fc <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800b30c:	6822      	ldr	r2, [r4, #0]
 800b30e:	0751      	lsls	r1, r2, #29
 800b310:	d515      	bpl.n	800b33e <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800b312:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800b314:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800b318:	6920      	ldr	r0, [r4, #16]
 800b31a:	061b      	lsls	r3, r3, #24
 800b31c:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800b320:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b324:	430b      	orrs	r3, r1
 800b326:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800b32a:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800b32e:	6a21      	ldr	r1, [r4, #32]
 800b330:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800b334:	3901      	subs	r1, #1
 800b336:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800b33a:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800b33e:	0713      	lsls	r3, r2, #28
 800b340:	d514      	bpl.n	800b36c <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800b342:	4a41      	ldr	r2, [pc, #260]	; (800b448 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800b344:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800b346:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800b34a:	6920      	ldr	r0, [r4, #16]
 800b34c:	071b      	lsls	r3, r3, #28
 800b34e:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800b352:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b356:	430b      	orrs	r3, r1
 800b358:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800b35c:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800b360:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b362:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800b366:	430b      	orrs	r3, r1
 800b368:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800b36c:	4b35      	ldr	r3, [pc, #212]	; (800b444 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b36e:	4e36      	ldr	r6, [pc, #216]	; (800b448 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800b370:	2201      	movs	r2, #1
 800b372:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800b374:	f7fd fb1a 	bl	80089ac <HAL_GetTick>
 800b378:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b37a:	e004      	b.n	800b386 <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800b37c:	f7fd fb16 	bl	80089ac <HAL_GetTick>
 800b380:	1b40      	subs	r0, r0, r5
 800b382:	2802      	cmp	r0, #2
 800b384:	d8af      	bhi.n	800b2e6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b386:	6833      	ldr	r3, [r6, #0]
 800b388:	009f      	lsls	r7, r3, #2
 800b38a:	d5f7      	bpl.n	800b37c <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800b38c:	6823      	ldr	r3, [r4, #0]
 800b38e:	e73d      	b.n	800b20c <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800b390:	4618      	mov	r0, r3
}
 800b392:	b003      	add	sp, #12
 800b394:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800b396:	4b2c      	ldr	r3, [pc, #176]	; (800b448 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800b398:	4d2c      	ldr	r5, [pc, #176]	; (800b44c <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800b39a:	2200      	movs	r2, #0
 800b39c:	9201      	str	r2, [sp, #4]
 800b39e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800b3a0:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800b3a4:	641a      	str	r2, [r3, #64]	; 0x40
 800b3a6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b3a8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b3ac:	9301      	str	r3, [sp, #4]
 800b3ae:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800b3b0:	682b      	ldr	r3, [r5, #0]
 800b3b2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b3b6:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800b3b8:	f7fd faf8 	bl	80089ac <HAL_GetTick>
 800b3bc:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800b3be:	e004      	b.n	800b3ca <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800b3c0:	f7fd faf4 	bl	80089ac <HAL_GetTick>
 800b3c4:	1b83      	subs	r3, r0, r6
 800b3c6:	2b02      	cmp	r3, #2
 800b3c8:	d88d      	bhi.n	800b2e6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800b3ca:	682b      	ldr	r3, [r5, #0]
 800b3cc:	05d9      	lsls	r1, r3, #23
 800b3ce:	d5f7      	bpl.n	800b3c0 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800b3d0:	4d1d      	ldr	r5, [pc, #116]	; (800b448 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b3d2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800b3d4:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b3d6:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800b3da:	d111      	bne.n	800b400 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800b3dc:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800b3e0:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800b3e4:	d021      	beq.n	800b42a <HAL_RCCEx_PeriphCLKConfig+0x232>
 800b3e6:	4918      	ldr	r1, [pc, #96]	; (800b448 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b3e8:	688a      	ldr	r2, [r1, #8]
 800b3ea:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800b3ee:	608a      	str	r2, [r1, #8]
 800b3f0:	4a15      	ldr	r2, [pc, #84]	; (800b448 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b3f2:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800b3f4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b3f8:	430b      	orrs	r3, r1
 800b3fa:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800b3fc:	6823      	ldr	r3, [r4, #0]
 800b3fe:	e708      	b.n	800b212 <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b400:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800b404:	4291      	cmp	r1, r2
 800b406:	d0eb      	beq.n	800b3e0 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800b408:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800b40a:	4a0e      	ldr	r2, [pc, #56]	; (800b444 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800b40c:	2101      	movs	r1, #1
 800b40e:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800b412:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800b416:	2100      	movs	r1, #0
 800b418:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800b41c:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800b41e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800b420:	07da      	lsls	r2, r3, #31
 800b422:	f53f af52 	bmi.w	800b2ca <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800b426:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800b428:	e7d8      	b.n	800b3dc <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800b42a:	4807      	ldr	r0, [pc, #28]	; (800b448 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b42c:	6882      	ldr	r2, [r0, #8]
 800b42e:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800b432:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800b436:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800b43a:	430a      	orrs	r2, r1
 800b43c:	6082      	str	r2, [r0, #8]
 800b43e:	e7d7      	b.n	800b3f0 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800b440:	42471000 	.word	0x42471000
 800b444:	42470000 	.word	0x42470000
 800b448:	40023800 	.word	0x40023800
 800b44c:	40007000 	.word	0x40007000

0800b450 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800b450:	b1f0      	cbz	r0, 800b490 <HAL_SDRAM_Init+0x40>
{
 800b452:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800b454:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800b458:	460d      	mov	r5, r1
 800b45a:	4604      	mov	r4, r0
 800b45c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b460:	b18b      	cbz	r3, 800b486 <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800b462:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b464:	2302      	movs	r3, #2
 800b466:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800b46a:	f851 0b04 	ldr.w	r0, [r1], #4
 800b46e:	f000 ffcd 	bl	800c40c <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800b472:	e9d4 0200 	ldrd	r0, r2, [r4]
 800b476:	4629      	mov	r1, r5
 800b478:	f001 f806 	bl	800c488 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800b47c:	2301      	movs	r3, #1
 800b47e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800b482:	2000      	movs	r0, #0
}
 800b484:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800b486:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800b48a:	f7f6 fd89 	bl	8001fa0 <HAL_SDRAM_MspInit>
 800b48e:	e7e8      	b.n	800b462 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800b490:	2001      	movs	r0, #1
}
 800b492:	4770      	bx	lr

0800b494 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800b494:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800b496:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800b49a:	2b02      	cmp	r3, #2
{
 800b49c:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800b49e:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800b4a0:	d004      	beq.n	800b4ac <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800b4a2:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800b4a6:	2c01      	cmp	r4, #1
 800b4a8:	d001      	beq.n	800b4ae <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800b4aa:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800b4ac:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b4ae:	460e      	mov	r6, r1
 800b4b0:	2302      	movs	r3, #2
 800b4b2:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800b4b6:	6828      	ldr	r0, [r5, #0]
 800b4b8:	f001 f832 	bl	800c520 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800b4bc:	6833      	ldr	r3, [r6, #0]
 800b4be:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800b4c0:	bf06      	itte	eq
 800b4c2:	2305      	moveq	r3, #5
 800b4c4:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800b4c8:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800b4cc:	2000      	movs	r0, #0
}
 800b4ce:	bd70      	pop	{r4, r5, r6, pc}

0800b4d0 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800b4d0:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800b4d2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800b4d6:	2b02      	cmp	r3, #2
{
 800b4d8:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800b4da:	b2d8      	uxtb	r0, r3
 800b4dc:	d005      	beq.n	800b4ea <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800b4de:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800b4e2:	2b01      	cmp	r3, #1
 800b4e4:	b2dd      	uxtb	r5, r3
 800b4e6:	d001      	beq.n	800b4ec <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800b4e8:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800b4ea:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b4ec:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800b4ee:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b4f0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800b4f4:	f001 f83e 	bl	800c574 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800b4f8:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800b4fc:	2000      	movs	r0, #0
}
 800b4fe:	bd38      	pop	{r3, r4, r5, pc}

0800b500 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800b500:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b504:	b082      	sub	sp, #8
 800b506:	461d      	mov	r5, r3
 800b508:	4616      	mov	r6, r2
 800b50a:	460c      	mov	r4, r1
 800b50c:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800b50e:	f7fd fa4d 	bl	80089ac <HAL_GetTick>
 800b512:	4435      	add	r5, r6
 800b514:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800b516:	f7fd fa49 	bl	80089ac <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800b51a:	4b27      	ldr	r3, [pc, #156]	; (800b5b8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800b51c:	681b      	ldr	r3, [r3, #0]
 800b51e:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800b522:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800b526:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800b528:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800b52a:	1c73      	adds	r3, r6, #1
 800b52c:	6839      	ldr	r1, [r7, #0]
 800b52e:	d107      	bne.n	800b540 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800b530:	688b      	ldr	r3, [r1, #8]
 800b532:	ea34 0303 	bics.w	r3, r4, r3
 800b536:	d0fb      	beq.n	800b530 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800b538:	2000      	movs	r0, #0
}
 800b53a:	b002      	add	sp, #8
 800b53c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800b540:	688b      	ldr	r3, [r1, #8]
 800b542:	ea34 0303 	bics.w	r3, r4, r3
 800b546:	d1f7      	bne.n	800b538 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800b548:	f7fd fa30 	bl	80089ac <HAL_GetTick>
 800b54c:	eba0 0008 	sub.w	r0, r0, r8
 800b550:	42a8      	cmp	r0, r5
 800b552:	d208      	bcs.n	800b566 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800b554:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800b556:	2b00      	cmp	r3, #0
      count--;
 800b558:	9b01      	ldr	r3, [sp, #4]
 800b55a:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800b55e:	bf08      	it	eq
 800b560:	2500      	moveq	r5, #0
      count--;
 800b562:	9301      	str	r3, [sp, #4]
 800b564:	e7e1      	b.n	800b52a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b566:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800b56a:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b56c:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800b570:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800b574:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b576:	d013      	beq.n	800b5a0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800b578:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800b57a:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800b57e:	d107      	bne.n	800b590 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800b580:	681a      	ldr	r2, [r3, #0]
 800b582:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800b586:	601a      	str	r2, [r3, #0]
 800b588:	681a      	ldr	r2, [r3, #0]
 800b58a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800b58e:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800b590:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800b592:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800b594:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800b598:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800b59c:	2003      	movs	r0, #3
 800b59e:	e7cc      	b.n	800b53a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b5a0:	68ba      	ldr	r2, [r7, #8]
 800b5a2:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800b5a6:	d002      	beq.n	800b5ae <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800b5a8:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800b5ac:	d1e4      	bne.n	800b578 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800b5ae:	681a      	ldr	r2, [r3, #0]
 800b5b0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800b5b4:	601a      	str	r2, [r3, #0]
 800b5b6:	e7df      	b.n	800b578 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800b5b8:	20000078 	.word	0x20000078

0800b5bc <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800b5bc:	b538      	push	{r3, r4, r5, lr}
 800b5be:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b5c0:	6842      	ldr	r2, [r0, #4]
 800b5c2:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800b5c6:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b5c8:	d006      	beq.n	800b5d8 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800b5ca:	460a      	mov	r2, r1
 800b5cc:	2101      	movs	r1, #1
 800b5ce:	f7ff ff97 	bl	800b500 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800b5d2:	b978      	cbnz	r0, 800b5f4 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800b5d4:	2000      	movs	r0, #0
}
 800b5d6:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b5d8:	6882      	ldr	r2, [r0, #8]
 800b5da:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800b5de:	d01c      	beq.n	800b61a <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800b5e0:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800b5e4:	d00c      	beq.n	800b600 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800b5e6:	460a      	mov	r2, r1
 800b5e8:	4620      	mov	r0, r4
 800b5ea:	2180      	movs	r1, #128	; 0x80
 800b5ec:	f7ff ff88 	bl	800b500 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800b5f0:	2800      	cmp	r0, #0
 800b5f2:	d0ef      	beq.n	800b5d4 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800b5f4:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800b5f6:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800b5fa:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800b5fc:	6563      	str	r3, [r4, #84]	; 0x54
}
 800b5fe:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800b600:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800b602:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800b604:	6829      	ldr	r1, [r5, #0]
 800b606:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800b60a:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800b60c:	2101      	movs	r1, #1
 800b60e:	f7ff ff77 	bl	800b500 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800b612:	2800      	cmp	r0, #0
 800b614:	d1ee      	bne.n	800b5f4 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800b616:	2000      	movs	r0, #0
 800b618:	e7dd      	b.n	800b5d6 <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800b61a:	6800      	ldr	r0, [r0, #0]
 800b61c:	6802      	ldr	r2, [r0, #0]
 800b61e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800b622:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800b624:	460a      	mov	r2, r1
 800b626:	4620      	mov	r0, r4
 800b628:	2180      	movs	r1, #128	; 0x80
 800b62a:	f7ff ff69 	bl	800b500 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800b62e:	2800      	cmp	r0, #0
 800b630:	d0d0      	beq.n	800b5d4 <SPI_EndRxTransaction+0x18>
 800b632:	e7df      	b.n	800b5f4 <SPI_EndRxTransaction+0x38>

0800b634 <HAL_SPI_Init>:
  if (hspi == NULL)
 800b634:	2800      	cmp	r0, #0
 800b636:	d05c      	beq.n	800b6f2 <HAL_SPI_Init+0xbe>
{
 800b638:	b570      	push	{r4, r5, r6, lr}
 800b63a:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800b63c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800b63e:	2800      	cmp	r0, #0
 800b640:	d047      	beq.n	800b6d2 <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800b642:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800b644:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800b648:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800b64c:	2200      	movs	r2, #0
 800b64e:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800b650:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800b654:	2b00      	cmp	r3, #0
 800b656:	d042      	beq.n	800b6de <HAL_SPI_Init+0xaa>
 800b658:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800b65a:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800b65c:	68a5      	ldr	r5, [r4, #8]
 800b65e:	69a2      	ldr	r2, [r4, #24]
 800b660:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800b662:	2302      	movs	r3, #2
 800b664:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800b668:	680b      	ldr	r3, [r1, #0]
 800b66a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800b66e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800b670:	6863      	ldr	r3, [r4, #4]
 800b672:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800b676:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800b67a:	432b      	orrs	r3, r5
 800b67c:	68e5      	ldr	r5, [r4, #12]
 800b67e:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800b682:	432b      	orrs	r3, r5
 800b684:	6925      	ldr	r5, [r4, #16]
 800b686:	f005 0502 	and.w	r5, r5, #2
 800b68a:	432b      	orrs	r3, r5
 800b68c:	6965      	ldr	r5, [r4, #20]
 800b68e:	f005 0501 	and.w	r5, r5, #1
 800b692:	432b      	orrs	r3, r5
 800b694:	69e5      	ldr	r5, [r4, #28]
 800b696:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800b69a:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800b69e:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800b6a2:	4333      	orrs	r3, r6
 800b6a4:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800b6a6:	0c12      	lsrs	r2, r2, #16
 800b6a8:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800b6ac:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800b6b0:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800b6b4:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800b6b8:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800b6ba:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800b6bc:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800b6be:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800b6c0:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800b6c2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800b6c6:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800b6c8:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800b6ca:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800b6cc:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800b6d0:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800b6d2:	6863      	ldr	r3, [r4, #4]
 800b6d4:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800b6d8:	d0b6      	beq.n	800b648 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800b6da:	61e0      	str	r0, [r4, #28]
 800b6dc:	e7b4      	b.n	800b648 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800b6de:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800b6e0:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800b6e4:	f7f6 fbf4 	bl	8001ed0 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800b6e8:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800b6ec:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800b6f0:	e7b3      	b.n	800b65a <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800b6f2:	2001      	movs	r0, #1
}
 800b6f4:	4770      	bx	lr
 800b6f6:	bf00      	nop

0800b6f8 <HAL_SPI_Transmit>:
{
 800b6f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b6fc:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800b6fe:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800b702:	2801      	cmp	r0, #1
{
 800b704:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800b706:	f000 8085 	beq.w	800b814 <HAL_SPI_Transmit+0x11c>
 800b70a:	461d      	mov	r5, r3
 800b70c:	2301      	movs	r3, #1
 800b70e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800b712:	4688      	mov	r8, r1
 800b714:	4617      	mov	r7, r2
 800b716:	f7fd f949 	bl	80089ac <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800b71a:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800b71e:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800b720:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800b722:	b2d8      	uxtb	r0, r3
 800b724:	d009      	beq.n	800b73a <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800b726:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800b728:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800b72a:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800b72c:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800b730:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800b734:	b002      	add	sp, #8
 800b736:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800b73a:	f1b8 0f00 	cmp.w	r8, #0
 800b73e:	d0f3      	beq.n	800b728 <HAL_SPI_Transmit+0x30>
 800b740:	2f00      	cmp	r7, #0
 800b742:	d0f1      	beq.n	800b728 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b744:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800b746:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800b748:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800b74c:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800b74e:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b750:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800b754:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800b758:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800b75c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800b75e:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800b760:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800b762:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800b764:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800b766:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b768:	f000 8085 	beq.w	800b876 <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800b76c:	6803      	ldr	r3, [r0, #0]
 800b76e:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800b770:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800b772:	d403      	bmi.n	800b77c <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800b774:	6803      	ldr	r3, [r0, #0]
 800b776:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800b77a:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800b77c:	68e3      	ldr	r3, [r4, #12]
 800b77e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800b782:	d04b      	beq.n	800b81c <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800b784:	6863      	ldr	r3, [r4, #4]
 800b786:	2b00      	cmp	r3, #0
 800b788:	f000 8097 	beq.w	800b8ba <HAL_SPI_Transmit+0x1c2>
 800b78c:	2f01      	cmp	r7, #1
 800b78e:	f000 8094 	beq.w	800b8ba <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800b792:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b794:	b29b      	uxth	r3, r3
 800b796:	b1ab      	cbz	r3, 800b7c4 <HAL_SPI_Transmit+0xcc>
 800b798:	1c68      	adds	r0, r5, #1
 800b79a:	f040 8083 	bne.w	800b8a4 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800b79e:	6823      	ldr	r3, [r4, #0]
 800b7a0:	689a      	ldr	r2, [r3, #8]
 800b7a2:	0791      	lsls	r1, r2, #30
 800b7a4:	f140 8094 	bpl.w	800b8d0 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800b7a8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800b7aa:	7812      	ldrb	r2, [r2, #0]
 800b7ac:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800b7ae:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800b7b0:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800b7b2:	3901      	subs	r1, #1
 800b7b4:	b289      	uxth	r1, r1
 800b7b6:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800b7b8:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800b7ba:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800b7bc:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800b7be:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800b7c0:	2900      	cmp	r1, #0
 800b7c2:	d1ec      	bne.n	800b79e <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800b7c4:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800b7c6:	4b5b      	ldr	r3, [pc, #364]	; (800b934 <HAL_SPI_Transmit+0x23c>)
 800b7c8:	4a5b      	ldr	r2, [pc, #364]	; (800b938 <HAL_SPI_Transmit+0x240>)
 800b7ca:	681b      	ldr	r3, [r3, #0]
 800b7cc:	fba2 2303 	umull	r2, r3, r2, r3
 800b7d0:	0d5b      	lsrs	r3, r3, #21
 800b7d2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800b7d6:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800b7da:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800b7de:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800b7e0:	d107      	bne.n	800b7f2 <HAL_SPI_Transmit+0xfa>
 800b7e2:	e098      	b.n	800b916 <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800b7e4:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800b7e6:	6822      	ldr	r2, [r4, #0]
      count--;
 800b7e8:	3b01      	subs	r3, #1
 800b7ea:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800b7ec:	6893      	ldr	r3, [r2, #8]
 800b7ee:	061b      	lsls	r3, r3, #24
 800b7f0:	d502      	bpl.n	800b7f8 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800b7f2:	9b01      	ldr	r3, [sp, #4]
 800b7f4:	2b00      	cmp	r3, #0
 800b7f6:	d1f5      	bne.n	800b7e4 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800b7f8:	68a3      	ldr	r3, [r4, #8]
 800b7fa:	b933      	cbnz	r3, 800b80a <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800b7fc:	6822      	ldr	r2, [r4, #0]
 800b7fe:	9300      	str	r3, [sp, #0]
 800b800:	68d3      	ldr	r3, [r2, #12]
 800b802:	9300      	str	r3, [sp, #0]
 800b804:	6893      	ldr	r3, [r2, #8]
 800b806:	9300      	str	r3, [sp, #0]
 800b808:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800b80a:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800b80c:	3800      	subs	r0, #0
 800b80e:	bf18      	it	ne
 800b810:	2001      	movne	r0, #1
error:
 800b812:	e789      	b.n	800b728 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800b814:	2002      	movs	r0, #2
}
 800b816:	b002      	add	sp, #8
 800b818:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800b81c:	6861      	ldr	r1, [r4, #4]
 800b81e:	2900      	cmp	r1, #0
 800b820:	d176      	bne.n	800b910 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800b822:	4643      	mov	r3, r8
 800b824:	f833 7b02 	ldrh.w	r7, [r3], #2
 800b828:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800b82a:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800b82c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b82e:	3b01      	subs	r3, #1
 800b830:	b29b      	uxth	r3, r3
 800b832:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800b834:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b836:	b29b      	uxth	r3, r3
 800b838:	2b00      	cmp	r3, #0
 800b83a:	d0c4      	beq.n	800b7c6 <HAL_SPI_Transmit+0xce>
 800b83c:	1c6b      	adds	r3, r5, #1
 800b83e:	d15e      	bne.n	800b8fe <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800b840:	6883      	ldr	r3, [r0, #8]
 800b842:	079f      	lsls	r7, r3, #30
 800b844:	d50f      	bpl.n	800b866 <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800b846:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800b848:	f832 3b02 	ldrh.w	r3, [r2], #2
 800b84c:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800b84e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800b850:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800b852:	3b01      	subs	r3, #1
 800b854:	b29b      	uxth	r3, r3
 800b856:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800b858:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b85a:	b29b      	uxth	r3, r3
 800b85c:	2b00      	cmp	r3, #0
 800b85e:	d0b1      	beq.n	800b7c4 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800b860:	6883      	ldr	r3, [r0, #8]
 800b862:	079f      	lsls	r7, r3, #30
 800b864:	d4ef      	bmi.n	800b846 <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b866:	f7fd f8a1 	bl	80089ac <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800b86a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b86c:	b29b      	uxth	r3, r3
 800b86e:	2b00      	cmp	r3, #0
 800b870:	d0a8      	beq.n	800b7c4 <HAL_SPI_Transmit+0xcc>
 800b872:	6820      	ldr	r0, [r4, #0]
 800b874:	e7e4      	b.n	800b840 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800b876:	6803      	ldr	r3, [r0, #0]
 800b878:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800b87c:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800b87e:	6803      	ldr	r3, [r0, #0]
 800b880:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800b884:	6003      	str	r3, [r0, #0]
 800b886:	e771      	b.n	800b76c <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800b888:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800b88a:	7812      	ldrb	r2, [r2, #0]
 800b88c:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800b88e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800b890:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800b892:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800b894:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800b896:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800b898:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800b89a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800b89c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b89e:	b29b      	uxth	r3, r3
 800b8a0:	2b00      	cmp	r3, #0
 800b8a2:	d08f      	beq.n	800b7c4 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800b8a4:	6823      	ldr	r3, [r4, #0]
 800b8a6:	689a      	ldr	r2, [r3, #8]
 800b8a8:	0792      	lsls	r2, r2, #30
 800b8aa:	d4ed      	bmi.n	800b888 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b8ac:	f7fd f87e 	bl	80089ac <HAL_GetTick>
 800b8b0:	1b80      	subs	r0, r0, r6
 800b8b2:	42a8      	cmp	r0, r5
 800b8b4:	d3f2      	bcc.n	800b89c <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800b8b6:	2003      	movs	r0, #3
 800b8b8:	e736      	b.n	800b728 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800b8ba:	f898 3000 	ldrb.w	r3, [r8]
 800b8be:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800b8c0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800b8c2:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800b8c4:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800b8c6:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800b8c8:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800b8ca:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800b8cc:	86e3      	strh	r3, [r4, #54]	; 0x36
 800b8ce:	e760      	b.n	800b792 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b8d0:	f7fd f86c 	bl	80089ac <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800b8d4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b8d6:	b29b      	uxth	r3, r3
 800b8d8:	2b00      	cmp	r3, #0
 800b8da:	f47f af60 	bne.w	800b79e <HAL_SPI_Transmit+0xa6>
 800b8de:	e771      	b.n	800b7c4 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800b8e0:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800b8e2:	f831 3b02 	ldrh.w	r3, [r1], #2
 800b8e6:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800b8e8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800b8ea:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800b8ec:	3b01      	subs	r3, #1
 800b8ee:	b29b      	uxth	r3, r3
 800b8f0:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800b8f2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b8f4:	b29b      	uxth	r3, r3
 800b8f6:	2b00      	cmp	r3, #0
 800b8f8:	f43f af64 	beq.w	800b7c4 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800b8fc:	6822      	ldr	r2, [r4, #0]
 800b8fe:	6893      	ldr	r3, [r2, #8]
 800b900:	0799      	lsls	r1, r3, #30
 800b902:	d4ed      	bmi.n	800b8e0 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800b904:	f7fd f852 	bl	80089ac <HAL_GetTick>
 800b908:	1b80      	subs	r0, r0, r6
 800b90a:	42a8      	cmp	r0, r5
 800b90c:	d3f1      	bcc.n	800b8f2 <HAL_SPI_Transmit+0x1fa>
 800b90e:	e7d2      	b.n	800b8b6 <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800b910:	2f01      	cmp	r7, #1
 800b912:	d18f      	bne.n	800b834 <HAL_SPI_Transmit+0x13c>
 800b914:	e785      	b.n	800b822 <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800b916:	4633      	mov	r3, r6
 800b918:	462a      	mov	r2, r5
 800b91a:	2180      	movs	r1, #128	; 0x80
 800b91c:	4620      	mov	r0, r4
 800b91e:	f7ff fdef 	bl	800b500 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800b922:	2800      	cmp	r0, #0
 800b924:	f43f af68 	beq.w	800b7f8 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800b928:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800b92a:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800b92c:	4313      	orrs	r3, r2
 800b92e:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800b930:	6562      	str	r2, [r4, #84]	; 0x54
 800b932:	e761      	b.n	800b7f8 <HAL_SPI_Transmit+0x100>
 800b934:	20000078 	.word	0x20000078
 800b938:	165e9f81 	.word	0x165e9f81

0800b93c <HAL_SPI_TransmitReceive>:
{
 800b93c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b940:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800b942:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800b946:	2801      	cmp	r0, #1
{
 800b948:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800b94a:	f000 80ac 	beq.w	800baa6 <HAL_SPI_TransmitReceive+0x16a>
 800b94e:	461e      	mov	r6, r3
 800b950:	2301      	movs	r3, #1
 800b952:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800b956:	4690      	mov	r8, r2
 800b958:	460f      	mov	r7, r1
 800b95a:	f7fd f827 	bl	80089ac <HAL_GetTick>
 800b95e:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800b960:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800b964:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800b966:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800b968:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800b96a:	d011      	beq.n	800b990 <HAL_SPI_TransmitReceive+0x54>
 800b96c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800b970:	d009      	beq.n	800b986 <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800b972:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800b974:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800b976:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800b978:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800b97c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800b980:	b002      	add	sp, #8
 800b982:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800b986:	68a1      	ldr	r1, [r4, #8]
 800b988:	2900      	cmp	r1, #0
 800b98a:	d1f2      	bne.n	800b972 <HAL_SPI_TransmitReceive+0x36>
 800b98c:	2a04      	cmp	r2, #4
 800b98e:	d1f0      	bne.n	800b972 <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800b990:	2f00      	cmp	r7, #0
 800b992:	f000 808c 	beq.w	800baae <HAL_SPI_TransmitReceive+0x172>
 800b996:	f1b8 0f00 	cmp.w	r8, #0
 800b99a:	f000 8088 	beq.w	800baae <HAL_SPI_TransmitReceive+0x172>
 800b99e:	2e00      	cmp	r6, #0
 800b9a0:	f000 8085 	beq.w	800baae <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800b9a4:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800b9a8:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800b9ac:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800b9ae:	bf1c      	itt	ne
 800b9b0:	2205      	movne	r2, #5
 800b9b2:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800b9b6:	2200      	movs	r2, #0
 800b9b8:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800b9ba:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800b9be:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800b9c0:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800b9c2:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800b9c4:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800b9c6:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800b9c8:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800b9ca:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800b9cc:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800b9ce:	d403      	bmi.n	800b9d8 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800b9d0:	6811      	ldr	r1, [r2, #0]
 800b9d2:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800b9d6:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800b9d8:	68e1      	ldr	r1, [r4, #12]
 800b9da:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800b9de:	f000 809e 	beq.w	800bb1e <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800b9e2:	2b00      	cmp	r3, #0
 800b9e4:	f000 8091 	beq.w	800bb0a <HAL_SPI_TransmitReceive+0x1ce>
 800b9e8:	2e01      	cmp	r6, #1
 800b9ea:	f000 808e 	beq.w	800bb0a <HAL_SPI_TransmitReceive+0x1ce>
 800b9ee:	9b08      	ldr	r3, [sp, #32]
 800b9f0:	3301      	adds	r3, #1
        txallowed = 1U;
 800b9f2:	f04f 0601 	mov.w	r6, #1
 800b9f6:	d028      	beq.n	800ba4a <HAL_SPI_TransmitReceive+0x10e>
 800b9f8:	e05b      	b.n	800bab2 <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800b9fa:	6821      	ldr	r1, [r4, #0]
 800b9fc:	688b      	ldr	r3, [r1, #8]
 800b9fe:	0798      	lsls	r0, r3, #30
 800ba00:	d50f      	bpl.n	800ba22 <HAL_SPI_TransmitReceive+0xe6>
 800ba02:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ba04:	b29b      	uxth	r3, r3
 800ba06:	b163      	cbz	r3, 800ba22 <HAL_SPI_TransmitReceive+0xe6>
 800ba08:	b15e      	cbz	r6, 800ba22 <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800ba0a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ba0c:	781b      	ldrb	r3, [r3, #0]
 800ba0e:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800ba10:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800ba12:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ba14:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800ba16:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800ba18:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800ba1a:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800ba1c:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800ba1e:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800ba20:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ba22:	688a      	ldr	r2, [r1, #8]
 800ba24:	f012 0201 	ands.w	r2, r2, #1
 800ba28:	d00d      	beq.n	800ba46 <HAL_SPI_TransmitReceive+0x10a>
 800ba2a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ba2c:	b29b      	uxth	r3, r3
 800ba2e:	b153      	cbz	r3, 800ba46 <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800ba30:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ba32:	68c9      	ldr	r1, [r1, #12]
 800ba34:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800ba36:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800ba38:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ba3a:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800ba3c:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800ba3e:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800ba40:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ba42:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800ba44:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800ba46:	f7fc ffb1 	bl	80089ac <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800ba4a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800ba4c:	b292      	uxth	r2, r2
 800ba4e:	2a00      	cmp	r2, #0
 800ba50:	d1d3      	bne.n	800b9fa <HAL_SPI_TransmitReceive+0xbe>
 800ba52:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ba54:	b29b      	uxth	r3, r3
 800ba56:	2b00      	cmp	r3, #0
 800ba58:	d1cf      	bne.n	800b9fa <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800ba5a:	4b79      	ldr	r3, [pc, #484]	; (800bc40 <HAL_SPI_TransmitReceive+0x304>)
 800ba5c:	4a79      	ldr	r2, [pc, #484]	; (800bc44 <HAL_SPI_TransmitReceive+0x308>)
 800ba5e:	681b      	ldr	r3, [r3, #0]
 800ba60:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ba64:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800ba66:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800ba6a:	0d5b      	lsrs	r3, r3, #21
 800ba6c:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ba70:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800ba74:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ba76:	d107      	bne.n	800ba88 <HAL_SPI_TransmitReceive+0x14c>
 800ba78:	e0d2      	b.n	800bc20 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800ba7a:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800ba7c:	6822      	ldr	r2, [r4, #0]
      count--;
 800ba7e:	3b01      	subs	r3, #1
 800ba80:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800ba82:	6893      	ldr	r3, [r2, #8]
 800ba84:	061b      	lsls	r3, r3, #24
 800ba86:	d502      	bpl.n	800ba8e <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800ba88:	9b01      	ldr	r3, [sp, #4]
 800ba8a:	2b00      	cmp	r3, #0
 800ba8c:	d1f5      	bne.n	800ba7a <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800ba8e:	68a0      	ldr	r0, [r4, #8]
 800ba90:	2800      	cmp	r0, #0
 800ba92:	f040 8082 	bne.w	800bb9a <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800ba96:	6823      	ldr	r3, [r4, #0]
 800ba98:	9000      	str	r0, [sp, #0]
 800ba9a:	68da      	ldr	r2, [r3, #12]
 800ba9c:	9200      	str	r2, [sp, #0]
 800ba9e:	689b      	ldr	r3, [r3, #8]
 800baa0:	9300      	str	r3, [sp, #0]
 800baa2:	9b00      	ldr	r3, [sp, #0]
 800baa4:	e766      	b.n	800b974 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800baa6:	2002      	movs	r0, #2
}
 800baa8:	b002      	add	sp, #8
 800baaa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800baae:	2001      	movs	r0, #1
 800bab0:	e760      	b.n	800b974 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800bab2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bab4:	b29b      	uxth	r3, r3
 800bab6:	b91b      	cbnz	r3, 800bac0 <HAL_SPI_TransmitReceive+0x184>
 800bab8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800baba:	b29b      	uxth	r3, r3
 800babc:	2b00      	cmp	r3, #0
 800babe:	d0cc      	beq.n	800ba5a <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800bac0:	6822      	ldr	r2, [r4, #0]
 800bac2:	6893      	ldr	r3, [r2, #8]
 800bac4:	0799      	lsls	r1, r3, #30
 800bac6:	d50f      	bpl.n	800bae8 <HAL_SPI_TransmitReceive+0x1ac>
 800bac8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800baca:	b29b      	uxth	r3, r3
 800bacc:	b163      	cbz	r3, 800bae8 <HAL_SPI_TransmitReceive+0x1ac>
 800bace:	b15e      	cbz	r6, 800bae8 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800bad0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800bad2:	781b      	ldrb	r3, [r3, #0]
 800bad4:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800bad6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800bad8:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bada:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800badc:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800bade:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800bae0:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bae2:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800bae4:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800bae6:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bae8:	6893      	ldr	r3, [r2, #8]
 800baea:	f013 0301 	ands.w	r3, r3, #1
 800baee:	d004      	beq.n	800bafa <HAL_SPI_TransmitReceive+0x1be>
 800baf0:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800baf2:	b289      	uxth	r1, r1
 800baf4:	2900      	cmp	r1, #0
 800baf6:	f040 8087 	bne.w	800bc08 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800bafa:	f7fc ff57 	bl	80089ac <HAL_GetTick>
 800bafe:	9b08      	ldr	r3, [sp, #32]
 800bb00:	1b40      	subs	r0, r0, r5
 800bb02:	4298      	cmp	r0, r3
 800bb04:	d3d5      	bcc.n	800bab2 <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800bb06:	2003      	movs	r0, #3
 800bb08:	e734      	b.n	800b974 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bb0a:	783b      	ldrb	r3, [r7, #0]
 800bb0c:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800bb0e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bb10:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bb12:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bb14:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800bb16:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bb18:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bb1a:	86e3      	strh	r3, [r4, #54]	; 0x36
 800bb1c:	e767      	b.n	800b9ee <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bb1e:	2b00      	cmp	r3, #0
 800bb20:	d13d      	bne.n	800bb9e <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bb22:	f837 3b02 	ldrh.w	r3, [r7], #2
 800bb26:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800bb28:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800bb2a:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bb2c:	3b01      	subs	r3, #1
 800bb2e:	b29b      	uxth	r3, r3
 800bb30:	86e3      	strh	r3, [r4, #54]	; 0x36
 800bb32:	9b08      	ldr	r3, [sp, #32]
 800bb34:	3301      	adds	r3, #1
{
 800bb36:	f04f 0601 	mov.w	r6, #1
 800bb3a:	d025      	beq.n	800bb88 <HAL_SPI_TransmitReceive+0x24c>
 800bb3c:	e032      	b.n	800bba4 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800bb3e:	6823      	ldr	r3, [r4, #0]
 800bb40:	689a      	ldr	r2, [r3, #8]
 800bb42:	0792      	lsls	r2, r2, #30
 800bb44:	d50d      	bpl.n	800bb62 <HAL_SPI_TransmitReceive+0x226>
 800bb46:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800bb48:	b292      	uxth	r2, r2
 800bb4a:	b152      	cbz	r2, 800bb62 <HAL_SPI_TransmitReceive+0x226>
 800bb4c:	b14e      	cbz	r6, 800bb62 <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bb4e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800bb50:	f831 2b02 	ldrh.w	r2, [r1], #2
 800bb54:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800bb56:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800bb58:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bb5a:	3a01      	subs	r2, #1
 800bb5c:	b292      	uxth	r2, r2
        txallowed = 0U;
 800bb5e:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800bb60:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bb62:	689a      	ldr	r2, [r3, #8]
 800bb64:	f012 0201 	ands.w	r2, r2, #1
 800bb68:	d00c      	beq.n	800bb84 <HAL_SPI_TransmitReceive+0x248>
 800bb6a:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800bb6c:	b289      	uxth	r1, r1
 800bb6e:	b149      	cbz	r1, 800bb84 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800bb70:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800bb72:	68db      	ldr	r3, [r3, #12]
 800bb74:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800bb78:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800bb7a:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bb7c:	3b01      	subs	r3, #1
 800bb7e:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800bb80:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800bb82:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800bb84:	f7fc ff12 	bl	80089ac <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800bb88:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bb8a:	b29b      	uxth	r3, r3
 800bb8c:	2b00      	cmp	r3, #0
 800bb8e:	d1d6      	bne.n	800bb3e <HAL_SPI_TransmitReceive+0x202>
 800bb90:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bb92:	b29b      	uxth	r3, r3
 800bb94:	2b00      	cmp	r3, #0
 800bb96:	d1d2      	bne.n	800bb3e <HAL_SPI_TransmitReceive+0x202>
 800bb98:	e75f      	b.n	800ba5a <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800bb9a:	2000      	movs	r0, #0
 800bb9c:	e6ea      	b.n	800b974 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bb9e:	2e01      	cmp	r6, #1
 800bba0:	d1c7      	bne.n	800bb32 <HAL_SPI_TransmitReceive+0x1f6>
 800bba2:	e7be      	b.n	800bb22 <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800bba4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bba6:	b29b      	uxth	r3, r3
 800bba8:	b923      	cbnz	r3, 800bbb4 <HAL_SPI_TransmitReceive+0x278>
 800bbaa:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bbac:	b29b      	uxth	r3, r3
 800bbae:	2b00      	cmp	r3, #0
 800bbb0:	f43f af53 	beq.w	800ba5a <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800bbb4:	6822      	ldr	r2, [r4, #0]
 800bbb6:	6893      	ldr	r3, [r2, #8]
 800bbb8:	079f      	lsls	r7, r3, #30
 800bbba:	d50d      	bpl.n	800bbd8 <HAL_SPI_TransmitReceive+0x29c>
 800bbbc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bbbe:	b29b      	uxth	r3, r3
 800bbc0:	b153      	cbz	r3, 800bbd8 <HAL_SPI_TransmitReceive+0x29c>
 800bbc2:	b14e      	cbz	r6, 800bbd8 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bbc4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800bbc6:	f831 3b02 	ldrh.w	r3, [r1], #2
 800bbca:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800bbcc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800bbce:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bbd0:	3b01      	subs	r3, #1
 800bbd2:	b29b      	uxth	r3, r3
 800bbd4:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800bbd6:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bbd8:	6893      	ldr	r3, [r2, #8]
 800bbda:	f013 0301 	ands.w	r3, r3, #1
 800bbde:	d00c      	beq.n	800bbfa <HAL_SPI_TransmitReceive+0x2be>
 800bbe0:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800bbe2:	b289      	uxth	r1, r1
 800bbe4:	b149      	cbz	r1, 800bbfa <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800bbe6:	68d1      	ldr	r1, [r2, #12]
 800bbe8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800bbea:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800bbee:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800bbf0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800bbf2:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bbf4:	3b01      	subs	r3, #1
 800bbf6:	b29b      	uxth	r3, r3
 800bbf8:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800bbfa:	f7fc fed7 	bl	80089ac <HAL_GetTick>
 800bbfe:	9b08      	ldr	r3, [sp, #32]
 800bc00:	1b40      	subs	r0, r0, r5
 800bc02:	4298      	cmp	r0, r3
 800bc04:	d3ce      	bcc.n	800bba4 <HAL_SPI_TransmitReceive+0x268>
 800bc06:	e77e      	b.n	800bb06 <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800bc08:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800bc0a:	68d2      	ldr	r2, [r2, #12]
 800bc0c:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800bc0e:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800bc10:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bc12:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800bc14:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800bc16:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800bc18:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bc1a:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800bc1c:	461e      	mov	r6, r3
 800bc1e:	e76c      	b.n	800bafa <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800bc20:	9a08      	ldr	r2, [sp, #32]
 800bc22:	462b      	mov	r3, r5
 800bc24:	2180      	movs	r1, #128	; 0x80
 800bc26:	4620      	mov	r0, r4
 800bc28:	f7ff fc6a 	bl	800b500 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bc2c:	2800      	cmp	r0, #0
 800bc2e:	f43f af2e 	beq.w	800ba8e <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bc32:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800bc34:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bc36:	4313      	orrs	r3, r2
 800bc38:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800bc3a:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800bc3c:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800bc3e:	e699      	b.n	800b974 <HAL_SPI_TransmitReceive+0x38>
 800bc40:	20000078 	.word	0x20000078
 800bc44:	165e9f81 	.word	0x165e9f81

0800bc48 <HAL_SPI_Receive>:
{
 800bc48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800bc4c:	6846      	ldr	r6, [r0, #4]
 800bc4e:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800bc52:	b082      	sub	sp, #8
 800bc54:	4604      	mov	r4, r0
 800bc56:	4690      	mov	r8, r2
 800bc58:	461d      	mov	r5, r3
 800bc5a:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800bc5c:	d06e      	beq.n	800bd3c <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800bc5e:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800bc62:	2b01      	cmp	r3, #1
 800bc64:	d076      	beq.n	800bd54 <HAL_SPI_Receive+0x10c>
 800bc66:	2301      	movs	r3, #1
 800bc68:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800bc6c:	f7fc fe9e 	bl	80089ac <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800bc70:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800bc74:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800bc78:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800bc7a:	fa5f f08c 	uxtb.w	r0, ip
 800bc7e:	d009      	beq.n	800bc94 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800bc80:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800bc82:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800bc84:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800bc86:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800bc8a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800bc8e:	b002      	add	sp, #8
 800bc90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800bc94:	2f00      	cmp	r7, #0
 800bc96:	d0f4      	beq.n	800bc82 <HAL_SPI_Receive+0x3a>
 800bc98:	f1b8 0f00 	cmp.w	r8, #0
 800bc9c:	d0f1      	beq.n	800bc82 <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bc9e:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800bca0:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bca2:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800bca6:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800bca8:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bcac:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800bcb0:	f04f 0104 	mov.w	r1, #4
 800bcb4:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800bcb8:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bcbc:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800bcbe:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800bcc0:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800bcc2:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800bcc6:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800bcc8:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bcca:	d107      	bne.n	800bcdc <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800bccc:	6811      	ldr	r1, [r2, #0]
 800bcce:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800bcd2:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800bcd4:	6811      	ldr	r1, [r2, #0]
 800bcd6:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800bcda:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bcdc:	6811      	ldr	r1, [r2, #0]
 800bcde:	0648      	lsls	r0, r1, #25
 800bce0:	d403      	bmi.n	800bcea <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800bce2:	6811      	ldr	r1, [r2, #0]
 800bce4:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800bce8:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800bcea:	68e1      	ldr	r1, [r4, #12]
 800bcec:	2900      	cmp	r1, #0
 800bcee:	d054      	beq.n	800bd9a <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800bcf0:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800bcf2:	b289      	uxth	r1, r1
 800bcf4:	b1a9      	cbz	r1, 800bd22 <HAL_SPI_Receive+0xda>
 800bcf6:	1c69      	adds	r1, r5, #1
 800bcf8:	d13e      	bne.n	800bd78 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800bcfa:	6893      	ldr	r3, [r2, #8]
 800bcfc:	07db      	lsls	r3, r3, #31
 800bcfe:	d544      	bpl.n	800bd8a <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800bd00:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800bd02:	68d1      	ldr	r1, [r2, #12]
 800bd04:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800bd08:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800bd0c:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bd0e:	f10c 3cff 	add.w	ip, ip, #4294967295
 800bd12:	fa1f fc8c 	uxth.w	ip, ip
 800bd16:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800bd1a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bd1c:	b29b      	uxth	r3, r3
 800bd1e:	2b00      	cmp	r3, #0
 800bd20:	d1eb      	bne.n	800bcfa <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800bd22:	4632      	mov	r2, r6
 800bd24:	4629      	mov	r1, r5
 800bd26:	4620      	mov	r0, r4
 800bd28:	f7ff fc48 	bl	800b5bc <SPI_EndRxTransaction>
 800bd2c:	b108      	cbz	r0, 800bd32 <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800bd2e:	2320      	movs	r3, #32
 800bd30:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800bd32:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800bd34:	3800      	subs	r0, #0
 800bd36:	bf18      	it	ne
 800bd38:	2001      	movne	r0, #1
error :
 800bd3a:	e7a2      	b.n	800bc82 <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800bd3c:	6883      	ldr	r3, [r0, #8]
 800bd3e:	2b00      	cmp	r3, #0
 800bd40:	d18d      	bne.n	800bc5e <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800bd42:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800bd44:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800bd46:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800bd48:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800bd4c:	460a      	mov	r2, r1
 800bd4e:	f7ff fdf5 	bl	800b93c <HAL_SPI_TransmitReceive>
 800bd52:	e79c      	b.n	800bc8e <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800bd54:	2002      	movs	r0, #2
}
 800bd56:	b002      	add	sp, #8
 800bd58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800bd5c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800bd5e:	68db      	ldr	r3, [r3, #12]
 800bd60:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800bd64:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800bd66:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bd68:	3b01      	subs	r3, #1
 800bd6a:	b29b      	uxth	r3, r3
 800bd6c:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800bd6e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bd70:	b29b      	uxth	r3, r3
 800bd72:	2b00      	cmp	r3, #0
 800bd74:	d0d5      	beq.n	800bd22 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800bd76:	6823      	ldr	r3, [r4, #0]
 800bd78:	689a      	ldr	r2, [r3, #8]
 800bd7a:	07d2      	lsls	r2, r2, #31
 800bd7c:	d4ee      	bmi.n	800bd5c <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bd7e:	f7fc fe15 	bl	80089ac <HAL_GetTick>
 800bd82:	1b80      	subs	r0, r0, r6
 800bd84:	42a8      	cmp	r0, r5
 800bd86:	d243      	bcs.n	800be10 <HAL_SPI_Receive+0x1c8>
 800bd88:	e7f1      	b.n	800bd6e <HAL_SPI_Receive+0x126>
 800bd8a:	f7fc fe0f 	bl	80089ac <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800bd8e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bd90:	b29b      	uxth	r3, r3
 800bd92:	2b00      	cmp	r3, #0
 800bd94:	d0c5      	beq.n	800bd22 <HAL_SPI_Receive+0xda>
 800bd96:	6822      	ldr	r2, [r4, #0]
 800bd98:	e7af      	b.n	800bcfa <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800bd9a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800bd9c:	b292      	uxth	r2, r2
 800bd9e:	2a00      	cmp	r2, #0
 800bda0:	d0bf      	beq.n	800bd22 <HAL_SPI_Receive+0xda>
 800bda2:	1c6f      	adds	r7, r5, #1
 800bda4:	d013      	beq.n	800bdce <HAL_SPI_Receive+0x186>
 800bda6:	e02b      	b.n	800be00 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800bda8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800bdaa:	7b1b      	ldrb	r3, [r3, #12]
 800bdac:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800bdae:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800bdb2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bdb4:	f10c 3cff 	add.w	ip, ip, #4294967295
 800bdb8:	fa1f fc8c 	uxth.w	ip, ip
 800bdbc:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800bdc0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800bdc2:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800bdc4:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800bdc6:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800bdc8:	2b00      	cmp	r3, #0
 800bdca:	d0aa      	beq.n	800bd22 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800bdcc:	6823      	ldr	r3, [r4, #0]
 800bdce:	689a      	ldr	r2, [r3, #8]
 800bdd0:	07d0      	lsls	r0, r2, #31
 800bdd2:	d4e9      	bmi.n	800bda8 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bdd4:	f7fc fdea 	bl	80089ac <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800bdd8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bdda:	b29b      	uxth	r3, r3
 800bddc:	2b00      	cmp	r3, #0
 800bdde:	d1f5      	bne.n	800bdcc <HAL_SPI_Receive+0x184>
 800bde0:	e79f      	b.n	800bd22 <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800bde2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800bde4:	7b1b      	ldrb	r3, [r3, #12]
 800bde6:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800bde8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800bdea:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bdec:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800bdee:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800bdf0:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800bdf2:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bdf4:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800bdf6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bdf8:	b29b      	uxth	r3, r3
 800bdfa:	2b00      	cmp	r3, #0
 800bdfc:	d091      	beq.n	800bd22 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800bdfe:	6823      	ldr	r3, [r4, #0]
 800be00:	689a      	ldr	r2, [r3, #8]
 800be02:	07d1      	lsls	r1, r2, #31
 800be04:	d4ed      	bmi.n	800bde2 <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800be06:	f7fc fdd1 	bl	80089ac <HAL_GetTick>
 800be0a:	1b80      	subs	r0, r0, r6
 800be0c:	42a8      	cmp	r0, r5
 800be0e:	d3f2      	bcc.n	800bdf6 <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800be10:	2003      	movs	r0, #3
 800be12:	e736      	b.n	800bc82 <HAL_SPI_Receive+0x3a>

0800be14 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800be14:	2800      	cmp	r0, #0
 800be16:	f000 8087 	beq.w	800bf28 <HAL_TIM_Base_Init+0x114>
{
 800be1a:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800be1c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800be20:	4604      	mov	r4, r0
 800be22:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800be26:	2b00      	cmp	r3, #0
 800be28:	d079      	beq.n	800bf1e <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800be2a:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800be2c:	493f      	ldr	r1, [pc, #252]	; (800bf2c <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800be2e:	2302      	movs	r3, #2
 800be30:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800be34:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800be36:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800be38:	d05d      	beq.n	800bef6 <HAL_TIM_Base_Init+0xe2>
 800be3a:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800be3e:	d031      	beq.n	800bea4 <HAL_TIM_Base_Init+0x90>
 800be40:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800be44:	428a      	cmp	r2, r1
 800be46:	d02d      	beq.n	800bea4 <HAL_TIM_Base_Init+0x90>
 800be48:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800be4c:	428a      	cmp	r2, r1
 800be4e:	d029      	beq.n	800bea4 <HAL_TIM_Base_Init+0x90>
 800be50:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800be54:	428a      	cmp	r2, r1
 800be56:	d025      	beq.n	800bea4 <HAL_TIM_Base_Init+0x90>
 800be58:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800be5c:	428a      	cmp	r2, r1
 800be5e:	d04a      	beq.n	800bef6 <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800be60:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800be64:	428a      	cmp	r2, r1
 800be66:	d021      	beq.n	800beac <HAL_TIM_Base_Init+0x98>
 800be68:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800be6c:	428a      	cmp	r2, r1
 800be6e:	d01d      	beq.n	800beac <HAL_TIM_Base_Init+0x98>
 800be70:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800be74:	428a      	cmp	r2, r1
 800be76:	d019      	beq.n	800beac <HAL_TIM_Base_Init+0x98>
 800be78:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800be7c:	428a      	cmp	r2, r1
 800be7e:	d015      	beq.n	800beac <HAL_TIM_Base_Init+0x98>
 800be80:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800be84:	428a      	cmp	r2, r1
 800be86:	d011      	beq.n	800beac <HAL_TIM_Base_Init+0x98>
 800be88:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800be8c:	428a      	cmp	r2, r1
 800be8e:	d00d      	beq.n	800beac <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800be90:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800be92:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800be94:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800be98:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800be9a:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800be9c:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800be9e:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800bea0:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800bea2:	e010      	b.n	800bec6 <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800bea4:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800bea6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800beaa:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800beac:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800beae:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800beb0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800beb4:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800beb6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800beba:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800bebc:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800bebe:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800bec0:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800bec2:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800bec4:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800bec6:	2301      	movs	r3, #1
 800bec8:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800beca:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800bece:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800bed2:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800bed6:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800beda:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800bede:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800bee2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800bee6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800beea:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800beee:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800bef2:	2000      	movs	r0, #0
}
 800bef4:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800bef6:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800bef8:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800befa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800befe:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800bf00:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800bf04:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800bf06:	69a1      	ldr	r1, [r4, #24]
 800bf08:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800bf0c:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800bf0e:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800bf10:	68e3      	ldr	r3, [r4, #12]
 800bf12:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800bf14:	6863      	ldr	r3, [r4, #4]
 800bf16:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800bf18:	6963      	ldr	r3, [r4, #20]
 800bf1a:	6313      	str	r3, [r2, #48]	; 0x30
 800bf1c:	e7d3      	b.n	800bec6 <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800bf1e:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800bf22:	f7f6 f811 	bl	8001f48 <HAL_TIM_Base_MspInit>
 800bf26:	e780      	b.n	800be2a <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800bf28:	2001      	movs	r0, #1
}
 800bf2a:	4770      	bx	lr
 800bf2c:	40010000 	.word	0x40010000

0800bf30 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800bf30:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800bf34:	2b01      	cmp	r3, #1
 800bf36:	d12f      	bne.n	800bf98 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800bf38:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800bf3a:	4919      	ldr	r1, [pc, #100]	; (800bfa0 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800bf3c:	2202      	movs	r2, #2
 800bf3e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800bf42:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800bf44:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800bf46:	f042 0201 	orr.w	r2, r2, #1
 800bf4a:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800bf4c:	d019      	beq.n	800bf82 <HAL_TIM_Base_Start_IT+0x52>
 800bf4e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800bf52:	d016      	beq.n	800bf82 <HAL_TIM_Base_Start_IT+0x52>
 800bf54:	4a13      	ldr	r2, [pc, #76]	; (800bfa4 <HAL_TIM_Base_Start_IT+0x74>)
 800bf56:	4293      	cmp	r3, r2
 800bf58:	d013      	beq.n	800bf82 <HAL_TIM_Base_Start_IT+0x52>
 800bf5a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800bf5e:	4293      	cmp	r3, r2
 800bf60:	d00f      	beq.n	800bf82 <HAL_TIM_Base_Start_IT+0x52>
 800bf62:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800bf66:	4293      	cmp	r3, r2
 800bf68:	d00b      	beq.n	800bf82 <HAL_TIM_Base_Start_IT+0x52>
 800bf6a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800bf6e:	4293      	cmp	r3, r2
 800bf70:	d007      	beq.n	800bf82 <HAL_TIM_Base_Start_IT+0x52>
 800bf72:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800bf76:	4293      	cmp	r3, r2
 800bf78:	d003      	beq.n	800bf82 <HAL_TIM_Base_Start_IT+0x52>
 800bf7a:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800bf7e:	4293      	cmp	r3, r2
 800bf80:	d104      	bne.n	800bf8c <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800bf82:	689a      	ldr	r2, [r3, #8]
 800bf84:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800bf88:	2a06      	cmp	r2, #6
 800bf8a:	d007      	beq.n	800bf9c <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800bf8c:	681a      	ldr	r2, [r3, #0]
 800bf8e:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800bf92:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800bf94:	601a      	str	r2, [r3, #0]
 800bf96:	4770      	bx	lr
    return HAL_ERROR;
 800bf98:	2001      	movs	r0, #1
 800bf9a:	4770      	bx	lr
  return HAL_OK;
 800bf9c:	2000      	movs	r0, #0
}
 800bf9e:	4770      	bx	lr
 800bfa0:	40010000 	.word	0x40010000
 800bfa4:	40000400 	.word	0x40000400

0800bfa8 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800bfa8:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800bfac:	2b01      	cmp	r3, #1
 800bfae:	d075      	beq.n	800c09c <HAL_TIM_ConfigClockSource+0xf4>
 800bfb0:	4602      	mov	r2, r0
{
 800bfb2:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800bfb4:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800bfb6:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800bfb8:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800bfbc:	2001      	movs	r0, #1
 800bfbe:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800bfc2:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800bfc4:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800bfc8:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800bfcc:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800bfce:	680b      	ldr	r3, [r1, #0]
 800bfd0:	2b60      	cmp	r3, #96	; 0x60
 800bfd2:	d065      	beq.n	800c0a0 <HAL_TIM_ConfigClockSource+0xf8>
 800bfd4:	d824      	bhi.n	800c020 <HAL_TIM_ConfigClockSource+0x78>
 800bfd6:	2b40      	cmp	r3, #64	; 0x40
 800bfd8:	d07c      	beq.n	800c0d4 <HAL_TIM_ConfigClockSource+0x12c>
 800bfda:	d94b      	bls.n	800c074 <HAL_TIM_ConfigClockSource+0xcc>
 800bfdc:	2b50      	cmp	r3, #80	; 0x50
 800bfde:	d117      	bne.n	800c010 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800bfe0:	684b      	ldr	r3, [r1, #4]
 800bfe2:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800bfe4:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800bfe6:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800bfea:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800bfec:	6a23      	ldr	r3, [r4, #32]
 800bfee:	f023 0301 	bic.w	r3, r3, #1
 800bff2:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800bff4:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800bff6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800bffa:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800bffe:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800c000:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800c002:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800c004:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c008:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800c00c:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c00e:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800c010:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800c012:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800c014:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c018:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800c01c:	bc30      	pop	{r4, r5}
 800c01e:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800c020:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c024:	d038      	beq.n	800c098 <HAL_TIM_ConfigClockSource+0xf0>
 800c026:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800c02a:	d110      	bne.n	800c04e <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c02c:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800c030:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c032:	432b      	orrs	r3, r5
 800c034:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c036:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c03a:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800c03e:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c040:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800c042:	68a3      	ldr	r3, [r4, #8]
 800c044:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800c048:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800c04a:	60a3      	str	r3, [r4, #8]
      break;
 800c04c:	e7e0      	b.n	800c010 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c04e:	2b70      	cmp	r3, #112	; 0x70
 800c050:	d1de      	bne.n	800c010 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c052:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800c056:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c058:	432b      	orrs	r3, r5
 800c05a:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c05c:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c060:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800c064:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800c066:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800c068:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800c06a:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800c06e:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800c070:	60a3      	str	r3, [r4, #8]
      break;
 800c072:	e7cd      	b.n	800c010 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c074:	2b20      	cmp	r3, #32
 800c076:	d002      	beq.n	800c07e <HAL_TIM_ConfigClockSource+0xd6>
 800c078:	d90a      	bls.n	800c090 <HAL_TIM_ConfigClockSource+0xe8>
 800c07a:	2b30      	cmp	r3, #48	; 0x30
 800c07c:	d1c8      	bne.n	800c010 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800c07e:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c080:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c084:	430b      	orrs	r3, r1
 800c086:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800c08a:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c08c:	60a3      	str	r3, [r4, #8]
}
 800c08e:	e7bf      	b.n	800c010 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c090:	f033 0110 	bics.w	r1, r3, #16
 800c094:	d1bc      	bne.n	800c010 <HAL_TIM_ConfigClockSource+0x68>
 800c096:	e7f2      	b.n	800c07e <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800c098:	2000      	movs	r0, #0
 800c09a:	e7b9      	b.n	800c010 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800c09c:	2002      	movs	r0, #2
}
 800c09e:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c0a0:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800c0a2:	6848      	ldr	r0, [r1, #4]
 800c0a4:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c0a6:	f023 0310 	bic.w	r3, r3, #16
 800c0aa:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c0ac:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800c0ae:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800c0b0:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800c0b4:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800c0b8:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800c0bc:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800c0c0:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800c0c2:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800c0c4:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c0c6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c0ca:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800c0ce:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c0d0:	60a3      	str	r3, [r4, #8]
}
 800c0d2:	e79d      	b.n	800c010 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c0d4:	684b      	ldr	r3, [r1, #4]
 800c0d6:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800c0d8:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c0da:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c0de:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c0e0:	6a23      	ldr	r3, [r4, #32]
 800c0e2:	f023 0301 	bic.w	r3, r3, #1
 800c0e6:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c0e8:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c0ea:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c0ee:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800c0f2:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800c0f4:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800c0f6:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c0f8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c0fc:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800c100:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c102:	60a3      	str	r3, [r4, #8]
}
 800c104:	e784      	b.n	800c010 <HAL_TIM_ConfigClockSource+0x68>
 800c106:	bf00      	nop

0800c108 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800c108:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800c10c:	2a01      	cmp	r2, #1
 800c10e:	d050      	beq.n	800c1b2 <HAL_TIM_SlaveConfigSynchro+0xaa>
 800c110:	4603      	mov	r3, r0
{
 800c112:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c114:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800c116:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c118:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800c11c:	2001      	movs	r0, #1
 800c11e:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800c122:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800c124:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800c126:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c128:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800c12c:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800c12e:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800c132:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800c134:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800c136:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800c138:	d060      	beq.n	800c1fc <HAL_TIM_SlaveConfigSynchro+0xf4>
 800c13a:	d90f      	bls.n	800c15c <HAL_TIM_SlaveConfigSynchro+0x54>
 800c13c:	2860      	cmp	r0, #96	; 0x60
 800c13e:	d03a      	beq.n	800c1b6 <HAL_TIM_SlaveConfigSynchro+0xae>
 800c140:	2870      	cmp	r0, #112	; 0x70
 800c142:	d10e      	bne.n	800c162 <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c144:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800c148:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c14a:	432a      	orrs	r2, r5
 800c14c:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c14e:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c152:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800c156:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800c158:	60a2      	str	r2, [r4, #8]
 800c15a:	e00f      	b.n	800c17c <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800c15c:	2840      	cmp	r0, #64	; 0x40
 800c15e:	d03d      	beq.n	800c1dc <HAL_TIM_SlaveConfigSynchro+0xd4>
 800c160:	d907      	bls.n	800c172 <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800c162:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800c164:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800c166:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800c16a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800c16e:	bc30      	pop	{r4, r5}
 800c170:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800c172:	2820      	cmp	r0, #32
 800c174:	d002      	beq.n	800c17c <HAL_TIM_SlaveConfigSynchro+0x74>
 800c176:	d912      	bls.n	800c19e <HAL_TIM_SlaveConfigSynchro+0x96>
 800c178:	2830      	cmp	r0, #48	; 0x30
 800c17a:	d1f2      	bne.n	800c162 <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800c17c:	68e2      	ldr	r2, [r4, #12]
 800c17e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c182:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800c184:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800c186:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800c188:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800c18a:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800c18e:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800c190:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c194:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800c198:	4608      	mov	r0, r1
}
 800c19a:	bc30      	pop	{r4, r5}
 800c19c:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800c19e:	f030 0210 	bics.w	r2, r0, #16
 800c1a2:	d0eb      	beq.n	800c17c <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800c1a4:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800c1a6:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800c1a8:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800c1ac:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800c1b0:	e7dd      	b.n	800c16e <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800c1b2:	2002      	movs	r0, #2
}
 800c1b4:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c1b6:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800c1b8:	6888      	ldr	r0, [r1, #8]
 800c1ba:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c1bc:	f022 0210 	bic.w	r2, r2, #16
 800c1c0:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c1c2:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800c1c4:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800c1c6:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800c1ca:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800c1ce:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800c1d2:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800c1d6:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800c1d8:	6222      	str	r2, [r4, #32]
 800c1da:	e7cf      	b.n	800c17c <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800c1dc:	2d05      	cmp	r5, #5
 800c1de:	d0c0      	beq.n	800c162 <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800c1e0:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800c1e2:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800c1e4:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800c1e6:	f022 0201 	bic.w	r2, r2, #1
 800c1ea:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800c1ec:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c1ee:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800c1f2:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800c1f6:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800c1f8:	6220      	str	r0, [r4, #32]
      break;
 800c1fa:	e7bf      	b.n	800c17c <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c1fc:	688a      	ldr	r2, [r1, #8]
 800c1fe:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800c200:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c202:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c206:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c208:	6a22      	ldr	r2, [r4, #32]
 800c20a:	f022 0201 	bic.w	r2, r2, #1
 800c20e:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c210:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c212:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c216:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800c21a:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800c21c:	6221      	str	r1, [r4, #32]
 800c21e:	e7ad      	b.n	800c17c <HAL_TIM_SlaveConfigSynchro+0x74>

0800c220 <HAL_TIM_OC_DelayElapsedCallback>:
 800c220:	4770      	bx	lr
 800c222:	bf00      	nop

0800c224 <HAL_TIM_IC_CaptureCallback>:
 800c224:	4770      	bx	lr
 800c226:	bf00      	nop

0800c228 <HAL_TIM_PWM_PulseFinishedCallback>:
 800c228:	4770      	bx	lr
 800c22a:	bf00      	nop

0800c22c <HAL_TIM_TriggerCallback>:
 800c22c:	4770      	bx	lr
 800c22e:	bf00      	nop

0800c230 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c230:	6803      	ldr	r3, [r0, #0]
 800c232:	691a      	ldr	r2, [r3, #16]
 800c234:	0791      	lsls	r1, r2, #30
{
 800c236:	b510      	push	{r4, lr}
 800c238:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c23a:	d502      	bpl.n	800c242 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800c23c:	68da      	ldr	r2, [r3, #12]
 800c23e:	0792      	lsls	r2, r2, #30
 800c240:	d45f      	bmi.n	800c302 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c242:	691a      	ldr	r2, [r3, #16]
 800c244:	0750      	lsls	r0, r2, #29
 800c246:	d502      	bpl.n	800c24e <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800c248:	68da      	ldr	r2, [r3, #12]
 800c24a:	0751      	lsls	r1, r2, #29
 800c24c:	d446      	bmi.n	800c2dc <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c24e:	691a      	ldr	r2, [r3, #16]
 800c250:	0712      	lsls	r2, r2, #28
 800c252:	d502      	bpl.n	800c25a <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800c254:	68da      	ldr	r2, [r3, #12]
 800c256:	0710      	lsls	r0, r2, #28
 800c258:	d42e      	bmi.n	800c2b8 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c25a:	691a      	ldr	r2, [r3, #16]
 800c25c:	06d2      	lsls	r2, r2, #27
 800c25e:	d502      	bpl.n	800c266 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800c260:	68da      	ldr	r2, [r3, #12]
 800c262:	06d0      	lsls	r0, r2, #27
 800c264:	d418      	bmi.n	800c298 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c266:	691a      	ldr	r2, [r3, #16]
 800c268:	07d1      	lsls	r1, r2, #31
 800c26a:	d502      	bpl.n	800c272 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800c26c:	68da      	ldr	r2, [r3, #12]
 800c26e:	07d2      	lsls	r2, r2, #31
 800c270:	d45d      	bmi.n	800c32e <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c272:	691a      	ldr	r2, [r3, #16]
 800c274:	0610      	lsls	r0, r2, #24
 800c276:	d502      	bpl.n	800c27e <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800c278:	68da      	ldr	r2, [r3, #12]
 800c27a:	0611      	lsls	r1, r2, #24
 800c27c:	d45f      	bmi.n	800c33e <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800c27e:	691a      	ldr	r2, [r3, #16]
 800c280:	0652      	lsls	r2, r2, #25
 800c282:	d502      	bpl.n	800c28a <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800c284:	68da      	ldr	r2, [r3, #12]
 800c286:	0650      	lsls	r0, r2, #25
 800c288:	d461      	bmi.n	800c34e <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800c28a:	691a      	ldr	r2, [r3, #16]
 800c28c:	0691      	lsls	r1, r2, #26
 800c28e:	d502      	bpl.n	800c296 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800c290:	68da      	ldr	r2, [r3, #12]
 800c292:	0692      	lsls	r2, r2, #26
 800c294:	d443      	bmi.n	800c31e <HAL_TIM_IRQHandler+0xee>
}
 800c296:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800c298:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c29c:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800c29e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c2a0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c2a2:	69db      	ldr	r3, [r3, #28]
 800c2a4:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800c2a8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c2aa:	d064      	beq.n	800c376 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800c2ac:	f7ff ffba 	bl	800c224 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c2b0:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c2b2:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c2b4:	7722      	strb	r2, [r4, #28]
 800c2b6:	e7d6      	b.n	800c266 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800c2b8:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c2bc:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800c2be:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c2c0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c2c2:	69db      	ldr	r3, [r3, #28]
 800c2c4:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800c2c6:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c2c8:	d152      	bne.n	800c370 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c2ca:	f7ff ffa9 	bl	800c220 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c2ce:	4620      	mov	r0, r4
 800c2d0:	f7ff ffaa 	bl	800c228 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c2d4:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c2d6:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c2d8:	7722      	strb	r2, [r4, #28]
 800c2da:	e7be      	b.n	800c25a <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800c2dc:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c2e0:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800c2e2:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c2e4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c2e6:	699b      	ldr	r3, [r3, #24]
 800c2e8:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800c2ec:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c2ee:	d13c      	bne.n	800c36a <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c2f0:	f7ff ff96 	bl	800c220 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c2f4:	4620      	mov	r0, r4
 800c2f6:	f7ff ff97 	bl	800c228 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c2fa:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c2fc:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c2fe:	7722      	strb	r2, [r4, #28]
 800c300:	e7a5      	b.n	800c24e <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800c302:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c306:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800c308:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c30a:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800c30c:	699b      	ldr	r3, [r3, #24]
 800c30e:	079b      	lsls	r3, r3, #30
 800c310:	d025      	beq.n	800c35e <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800c312:	f7ff ff87 	bl	800c224 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c316:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c318:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c31a:	7722      	strb	r2, [r4, #28]
 800c31c:	e791      	b.n	800c242 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c31e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800c322:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c324:	611a      	str	r2, [r3, #16]
}
 800c326:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800c32a:	f000 b86b 	b.w	800c404 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800c32e:	f06f 0201 	mvn.w	r2, #1
 800c332:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800c334:	4620      	mov	r0, r4
 800c336:	f7f5 fc0f 	bl	8001b58 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c33a:	6823      	ldr	r3, [r4, #0]
 800c33c:	e799      	b.n	800c272 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800c33e:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800c342:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800c344:	4620      	mov	r0, r4
 800c346:	f000 f85f 	bl	800c408 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800c34a:	6823      	ldr	r3, [r4, #0]
 800c34c:	e797      	b.n	800c27e <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800c34e:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800c352:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800c354:	4620      	mov	r0, r4
 800c356:	f7ff ff69 	bl	800c22c <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800c35a:	6823      	ldr	r3, [r4, #0]
 800c35c:	e795      	b.n	800c28a <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800c35e:	f7ff ff5f 	bl	800c220 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c362:	4620      	mov	r0, r4
 800c364:	f7ff ff60 	bl	800c228 <HAL_TIM_PWM_PulseFinishedCallback>
 800c368:	e7d5      	b.n	800c316 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800c36a:	f7ff ff5b 	bl	800c224 <HAL_TIM_IC_CaptureCallback>
 800c36e:	e7c4      	b.n	800c2fa <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800c370:	f7ff ff58 	bl	800c224 <HAL_TIM_IC_CaptureCallback>
 800c374:	e7ae      	b.n	800c2d4 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c376:	f7ff ff53 	bl	800c220 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c37a:	4620      	mov	r0, r4
 800c37c:	f7ff ff54 	bl	800c228 <HAL_TIM_PWM_PulseFinishedCallback>
 800c380:	e796      	b.n	800c2b0 <HAL_TIM_IRQHandler+0x80>
 800c382:	bf00      	nop

0800c384 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800c384:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800c388:	2b01      	cmp	r3, #1
 800c38a:	d037      	beq.n	800c3fc <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800c38c:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c38e:	2202      	movs	r2, #2
{
 800c390:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c392:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800c396:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800c398:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800c39a:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800c39c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800c3a0:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800c3a2:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c3a4:	4a16      	ldr	r2, [pc, #88]	; (800c400 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800c3a6:	4293      	cmp	r3, r2
 800c3a8:	d01a      	beq.n	800c3e0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c3aa:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c3ae:	d017      	beq.n	800c3e0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c3b0:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800c3b4:	4293      	cmp	r3, r2
 800c3b6:	d013      	beq.n	800c3e0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c3b8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c3bc:	4293      	cmp	r3, r2
 800c3be:	d00f      	beq.n	800c3e0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c3c0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c3c4:	4293      	cmp	r3, r2
 800c3c6:	d00b      	beq.n	800c3e0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c3c8:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c3cc:	4293      	cmp	r3, r2
 800c3ce:	d007      	beq.n	800c3e0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c3d0:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800c3d4:	4293      	cmp	r3, r2
 800c3d6:	d003      	beq.n	800c3e0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800c3d8:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800c3dc:	4293      	cmp	r3, r2
 800c3de:	d104      	bne.n	800c3ea <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800c3e0:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800c3e2:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800c3e6:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800c3e8:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800c3ea:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800c3ec:	2201      	movs	r2, #1
 800c3ee:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c3f2:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800c3f6:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800c3f8:	4618      	mov	r0, r3
}
 800c3fa:	4770      	bx	lr
  __HAL_LOCK(htim);
 800c3fc:	2002      	movs	r0, #2
}
 800c3fe:	4770      	bx	lr
 800c400:	40010000 	.word	0x40010000

0800c404 <HAL_TIMEx_CommutCallback>:
 800c404:	4770      	bx	lr
 800c406:	bf00      	nop

0800c408 <HAL_TIMEx_BreakCallback>:
 800c408:	4770      	bx	lr
 800c40a:	bf00      	nop

0800c40c <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800c40c:	680b      	ldr	r3, [r1, #0]
{
 800c40e:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800c410:	b9d3      	cbnz	r3, 800c448 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c412:	6803      	ldr	r3, [r0, #0]
 800c414:	684c      	ldr	r4, [r1, #4]
 800c416:	688a      	ldr	r2, [r1, #8]
 800c418:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800c41c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800c420:	4323      	orrs	r3, r4
 800c422:	4313      	orrs	r3, r2
 800c424:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800c428:	4323      	orrs	r3, r4
 800c42a:	4313      	orrs	r3, r2
 800c42c:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800c430:	4323      	orrs	r3, r4
 800c432:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800c436:	4313      	orrs	r3, r2
 800c438:	432b      	orrs	r3, r5
 800c43a:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800c43c:	4323      	orrs	r3, r4
 800c43e:	4313      	orrs	r3, r2
 800c440:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800c442:	bc30      	pop	{r4, r5}
 800c444:	2000      	movs	r0, #0
 800c446:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c448:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800c44c:	6803      	ldr	r3, [r0, #0]
 800c44e:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800c452:	4323      	orrs	r3, r4
 800c454:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800c456:	4313      	orrs	r3, r2
 800c458:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800c45a:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c45c:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800c45e:	6843      	ldr	r3, [r0, #4]
 800c460:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800c464:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800c468:	4313      	orrs	r3, r2
 800c46a:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800c46e:	4323      	orrs	r3, r4
 800c470:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800c474:	4313      	orrs	r3, r2
 800c476:	432b      	orrs	r3, r5
 800c478:	698a      	ldr	r2, [r1, #24]
 800c47a:	4323      	orrs	r3, r4
 800c47c:	4313      	orrs	r3, r2
 800c47e:	6043      	str	r3, [r0, #4]
}
 800c480:	bc30      	pop	{r4, r5}
 800c482:	2000      	movs	r0, #0
 800c484:	4770      	bx	lr
 800c486:	bf00      	nop

0800c488 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800c488:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c48a:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800c48c:	bb02      	cbnz	r2, 800c4d0 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c48e:	e9d1 2400 	ldrd	r2, r4, [r1]
 800c492:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800c496:	3c01      	subs	r4, #1
 800c498:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800c49c:	3a01      	subs	r2, #1
 800c49e:	4313      	orrs	r3, r2
 800c4a0:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800c4a4:	3c01      	subs	r4, #1
 800c4a6:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800c4aa:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800c4ae:	3a01      	subs	r2, #1
 800c4b0:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800c4b4:	698a      	ldr	r2, [r1, #24]
 800c4b6:	1e69      	subs	r1, r5, #1
 800c4b8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800c4bc:	1e61      	subs	r1, r4, #1
 800c4be:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800c4c2:	3a01      	subs	r2, #1
 800c4c4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800c4c8:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800c4ca:	bc30      	pop	{r4, r5}
 800c4cc:	2000      	movs	r0, #0
 800c4ce:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c4d0:	68cc      	ldr	r4, [r1, #12]
 800c4d2:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800c4d4:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c4d6:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800c4da:	3c01      	subs	r4, #1
 800c4dc:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800c4e0:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800c4e4:	3a01      	subs	r2, #1
 800c4e6:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800c4ea:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800c4ec:	e9d1 2400 	ldrd	r2, r4, [r1]
 800c4f0:	68c3      	ldr	r3, [r0, #12]
 800c4f2:	3c01      	subs	r4, #1
 800c4f4:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800c4f8:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800c4fc:	3a01      	subs	r2, #1
 800c4fe:	690c      	ldr	r4, [r1, #16]
 800c500:	4313      	orrs	r3, r2
 800c502:	698a      	ldr	r2, [r1, #24]
 800c504:	1e69      	subs	r1, r5, #1
 800c506:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800c50a:	1e61      	subs	r1, r4, #1
 800c50c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800c510:	3a01      	subs	r2, #1
 800c512:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800c516:	60c3      	str	r3, [r0, #12]
}
 800c518:	bc30      	pop	{r4, r5}
 800c51a:	2000      	movs	r0, #0
 800c51c:	4770      	bx	lr
 800c51e:	bf00      	nop

0800c520 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800c520:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800c522:	680b      	ldr	r3, [r1, #0]
{
 800c524:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800c526:	684a      	ldr	r2, [r1, #4]
{
 800c528:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800c52a:	4313      	orrs	r3, r2
 800c52c:	6900      	ldr	r0, [r0, #16]
 800c52e:	68ca      	ldr	r2, [r1, #12]
 800c530:	0d80      	lsrs	r0, r0, #22
 800c532:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800c536:	688a      	ldr	r2, [r1, #8]
 800c538:	0580      	lsls	r0, r0, #22
 800c53a:	4303      	orrs	r3, r0
 800c53c:	3a01      	subs	r2, #1
 800c53e:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800c542:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800c544:	f7fc fa32 	bl	80089ac <HAL_GetTick>
 800c548:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800c54a:	1c6b      	adds	r3, r5, #1
 800c54c:	d105      	bne.n	800c55a <FMC_SDRAM_SendCommand+0x3a>
 800c54e:	69a3      	ldr	r3, [r4, #24]
 800c550:	f013 0320 	ands.w	r3, r3, #32
 800c554:	d1fb      	bne.n	800c54e <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800c556:	4618      	mov	r0, r3
}
 800c558:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800c55a:	69a3      	ldr	r3, [r4, #24]
 800c55c:	f013 0320 	ands.w	r3, r3, #32
 800c560:	d0f9      	beq.n	800c556 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800c562:	b125      	cbz	r5, 800c56e <FMC_SDRAM_SendCommand+0x4e>
 800c564:	f7fc fa22 	bl	80089ac <HAL_GetTick>
 800c568:	1b80      	subs	r0, r0, r6
 800c56a:	42a8      	cmp	r0, r5
 800c56c:	d9ed      	bls.n	800c54a <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800c56e:	2003      	movs	r0, #3
}
 800c570:	bd70      	pop	{r4, r5, r6, pc}
 800c572:	bf00      	nop

0800c574 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800c574:	6943      	ldr	r3, [r0, #20]
 800c576:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800c57a:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800c57c:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800c580:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800c584:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800c586:	6151      	str	r1, [r2, #20]
}
 800c588:	4770      	bx	lr
 800c58a:	bf00      	nop

0800c58c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800c58c:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800c58e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c592:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800c594:	f002 fafe 	bl	800eb94 <xTaskGetSchedulerState>
 800c598:	2801      	cmp	r0, #1
 800c59a:	d100      	bne.n	800c59e <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800c59c:	bd08      	pop	{r3, pc}
 800c59e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800c5a2:	f000 bc3f 	b.w	800ce24 <xPortSysTickHandler>
 800c5a6:	bf00      	nop

0800c5a8 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800c5a8:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800c5ac:	b92b      	cbnz	r3, 800c5ba <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800c5ae:	4b06      	ldr	r3, [pc, #24]	; (800c5c8 <osKernelInitialize+0x20>)
 800c5b0:	6818      	ldr	r0, [r3, #0]
 800c5b2:	b928      	cbnz	r0, 800c5c0 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800c5b4:	2201      	movs	r2, #1
 800c5b6:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800c5b8:	4770      	bx	lr
    stat = osErrorISR;
 800c5ba:	f06f 0005 	mvn.w	r0, #5
 800c5be:	4770      	bx	lr
    } else {
      stat = osError;
 800c5c0:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800c5c4:	4770      	bx	lr
 800c5c6:	bf00      	nop
 800c5c8:	20002c70 	.word	0x20002c70

0800c5cc <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800c5cc:	b510      	push	{r4, lr}
 800c5ce:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800c5d2:	b974      	cbnz	r4, 800c5f2 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800c5d4:	4b08      	ldr	r3, [pc, #32]	; (800c5f8 <osKernelStart+0x2c>)
 800c5d6:	681a      	ldr	r2, [r3, #0]
 800c5d8:	2a01      	cmp	r2, #1
 800c5da:	d107      	bne.n	800c5ec <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c5dc:	4907      	ldr	r1, [pc, #28]	; (800c5fc <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800c5de:	2202      	movs	r2, #2
 800c5e0:	77cc      	strb	r4, [r1, #31]
 800c5e2:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800c5e4:	f002 f8b0 	bl	800e748 <vTaskStartScheduler>
      stat = osOK;
 800c5e8:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800c5ea:	bd10      	pop	{r4, pc}
      stat = osError;
 800c5ec:	f04f 30ff 	mov.w	r0, #4294967295
}
 800c5f0:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800c5f2:	f06f 0005 	mvn.w	r0, #5
}
 800c5f6:	bd10      	pop	{r4, pc}
 800c5f8:	20002c70 	.word	0x20002c70
 800c5fc:	e000ed00 	.word	0xe000ed00

0800c600 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800c600:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c602:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800c604:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800c606:	4615      	mov	r5, r2
  hTask = NULL;
 800c608:	9405      	str	r4, [sp, #20]
 800c60a:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800c60e:	b9ea      	cbnz	r2, 800c64c <osThreadNew+0x4c>
 800c610:	b350      	cbz	r0, 800c668 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800c612:	b1f5      	cbz	r5, 800c652 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800c614:	69ab      	ldr	r3, [r5, #24]
 800c616:	bb5b      	cbnz	r3, 800c670 <osThreadNew+0x70>
 800c618:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800c61a:	686a      	ldr	r2, [r5, #4]
 800c61c:	07d2      	lsls	r2, r2, #31
 800c61e:	d423      	bmi.n	800c668 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800c620:	696e      	ldr	r6, [r5, #20]
 800c622:	b34e      	cbz	r6, 800c678 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800c624:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800c628:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800c62a:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800c62c:	b34c      	cbz	r4, 800c682 <osThreadNew+0x82>
 800c62e:	68ea      	ldr	r2, [r5, #12]
 800c630:	2aab      	cmp	r2, #171	; 0xab
 800c632:	d919      	bls.n	800c668 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800c634:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800c636:	b1bd      	cbz	r5, 800c668 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800c638:	b1b6      	cbz	r6, 800c668 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800c63a:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800c63e:	9300      	str	r3, [sp, #0]
 800c640:	4662      	mov	r2, ip
 800c642:	460b      	mov	r3, r1
 800c644:	4639      	mov	r1, r7
 800c646:	f001 ffbd 	bl	800e5c4 <xTaskCreateStatic>
 800c64a:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800c64c:	4620      	mov	r0, r4
 800c64e:	b007      	add	sp, #28
 800c650:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c652:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800c654:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800c656:	ac05      	add	r4, sp, #20
 800c658:	9300      	str	r3, [sp, #0]
 800c65a:	9401      	str	r4, [sp, #4]
 800c65c:	460b      	mov	r3, r1
 800c65e:	4629      	mov	r1, r5
 800c660:	f001 ffea 	bl	800e638 <xTaskCreate>
 800c664:	2801      	cmp	r0, #1
 800c666:	d00a      	beq.n	800c67e <osThreadNew+0x7e>
        return (NULL);
 800c668:	2400      	movs	r4, #0
}
 800c66a:	4620      	mov	r0, r4
 800c66c:	b007      	add	sp, #28
 800c66e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800c670:	1e5c      	subs	r4, r3, #1
 800c672:	2c37      	cmp	r4, #55	; 0x37
 800c674:	d9d1      	bls.n	800c61a <osThreadNew+0x1a>
 800c676:	e7f7      	b.n	800c668 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800c678:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800c67c:	e7d4      	b.n	800c628 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800c67e:	9c05      	ldr	r4, [sp, #20]
 800c680:	e7e4      	b.n	800c64c <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800c682:	68ee      	ldr	r6, [r5, #12]
 800c684:	2e00      	cmp	r6, #0
 800c686:	d1e1      	bne.n	800c64c <osThreadNew+0x4c>
 800c688:	692d      	ldr	r5, [r5, #16]
 800c68a:	2d00      	cmp	r5, #0
 800c68c:	d1de      	bne.n	800c64c <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800c68e:	fa1f f28c 	uxth.w	r2, ip
 800c692:	463d      	mov	r5, r7
 800c694:	e7df      	b.n	800c656 <osThreadNew+0x56>
 800c696:	bf00      	nop

0800c698 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800c698:	b510      	push	{r4, lr}
 800c69a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800c69e:	b92c      	cbnz	r4, 800c6ac <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800c6a0:	b900      	cbnz	r0, 800c6a4 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800c6a2:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800c6a4:	f001 fffa 	bl	800e69c <vTaskDelay>
    stat = osOK;
 800c6a8:	4620      	mov	r0, r4
}
 800c6aa:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800c6ac:	f06f 0005 	mvn.w	r0, #5
}
 800c6b0:	bd10      	pop	{r4, pc}
 800c6b2:	bf00      	nop

0800c6b4 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800c6b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c6b6:	b083      	sub	sp, #12
 800c6b8:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800c6bc:	b9fe      	cbnz	r6, 800c6fe <osSemaphoreNew+0x4a>
 800c6be:	b1f0      	cbz	r0, 800c6fe <osSemaphoreNew+0x4a>
 800c6c0:	4288      	cmp	r0, r1
 800c6c2:	460f      	mov	r7, r1
 800c6c4:	d31b      	bcc.n	800c6fe <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800c6c6:	4615      	mov	r5, r2
 800c6c8:	b192      	cbz	r2, 800c6f0 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800c6ca:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800c6ce:	b1d2      	cbz	r2, 800c706 <osSemaphoreNew+0x52>
 800c6d0:	2b4f      	cmp	r3, #79	; 0x4f
 800c6d2:	d914      	bls.n	800c6fe <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800c6d4:	2801      	cmp	r0, #1
 800c6d6:	d038      	beq.n	800c74a <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800c6d8:	f000 fd8a 	bl	800d1f0 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800c6dc:	4604      	mov	r4, r0
 800c6de:	b170      	cbz	r0, 800c6fe <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800c6e0:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800c6e2:	4620      	mov	r0, r4
 800c6e4:	4629      	mov	r1, r5
 800c6e6:	f001 fc35 	bl	800df54 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800c6ea:	4620      	mov	r0, r4
 800c6ec:	b003      	add	sp, #12
 800c6ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800c6f0:	2801      	cmp	r0, #1
 800c6f2:	d012      	beq.n	800c71a <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800c6f4:	f000 fddc 	bl	800d2b0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800c6f8:	4604      	mov	r4, r0
 800c6fa:	2800      	cmp	r0, #0
 800c6fc:	d1f1      	bne.n	800c6e2 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800c6fe:	2400      	movs	r4, #0
}
 800c700:	4620      	mov	r0, r4
 800c702:	b003      	add	sp, #12
 800c704:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800c706:	2b00      	cmp	r3, #0
 800c708:	d1f9      	bne.n	800c6fe <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800c70a:	2801      	cmp	r0, #1
 800c70c:	d005      	beq.n	800c71a <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800c70e:	f000 fdcf 	bl	800d2b0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800c712:	4604      	mov	r4, r0
 800c714:	2800      	cmp	r0, #0
 800c716:	d1e3      	bne.n	800c6e0 <osSemaphoreNew+0x2c>
 800c718:	e7f1      	b.n	800c6fe <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800c71a:	2203      	movs	r2, #3
 800c71c:	2100      	movs	r1, #0
 800c71e:	2001      	movs	r0, #1
 800c720:	f000 fd24 	bl	800d16c <xQueueGenericCreate>
 800c724:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800c726:	2c00      	cmp	r4, #0
 800c728:	d0e9      	beq.n	800c6fe <osSemaphoreNew+0x4a>
 800c72a:	b917      	cbnz	r7, 800c732 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800c72c:	2d00      	cmp	r5, #0
 800c72e:	d1d7      	bne.n	800c6e0 <osSemaphoreNew+0x2c>
 800c730:	e7d7      	b.n	800c6e2 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800c732:	2300      	movs	r3, #0
 800c734:	461a      	mov	r2, r3
 800c736:	4619      	mov	r1, r3
 800c738:	4620      	mov	r0, r4
 800c73a:	f000 fdff 	bl	800d33c <xQueueGenericSend>
 800c73e:	2801      	cmp	r0, #1
 800c740:	d0f4      	beq.n	800c72c <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800c742:	4620      	mov	r0, r4
 800c744:	f001 fbc0 	bl	800dec8 <vQueueDelete>
 800c748:	e7d9      	b.n	800c6fe <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800c74a:	4613      	mov	r3, r2
 800c74c:	2203      	movs	r2, #3
 800c74e:	9200      	str	r2, [sp, #0]
 800c750:	4631      	mov	r1, r6
 800c752:	4632      	mov	r2, r6
 800c754:	f000 fc9c 	bl	800d090 <xQueueGenericCreateStatic>
 800c758:	4604      	mov	r4, r0
 800c75a:	e7e4      	b.n	800c726 <osSemaphoreNew+0x72>

0800c75c <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800c75c:	b370      	cbz	r0, 800c7bc <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800c75e:	b510      	push	{r4, lr}
 800c760:	460c      	mov	r4, r1
 800c762:	b082      	sub	sp, #8
 800c764:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800c768:	b1c3      	cbz	r3, 800c79c <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800c76a:	bb21      	cbnz	r1, 800c7b6 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800c76c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800c76e:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800c770:	f001 fb28 	bl	800ddc4 <xQueueReceiveFromISR>
 800c774:	2801      	cmp	r0, #1
 800c776:	d11a      	bne.n	800c7ae <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800c778:	9b01      	ldr	r3, [sp, #4]
 800c77a:	b913      	cbnz	r3, 800c782 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800c77c:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800c77e:	b002      	add	sp, #8
 800c780:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800c782:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c786:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c78a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c78e:	f3bf 8f4f 	dsb	sy
 800c792:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800c796:	4620      	mov	r0, r4
}
 800c798:	b002      	add	sp, #8
 800c79a:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800c79c:	f001 f988 	bl	800dab0 <xQueueSemaphoreTake>
 800c7a0:	2801      	cmp	r0, #1
 800c7a2:	d0eb      	beq.n	800c77c <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800c7a4:	b11c      	cbz	r4, 800c7ae <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800c7a6:	f06f 0001 	mvn.w	r0, #1
}
 800c7aa:	b002      	add	sp, #8
 800c7ac:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800c7ae:	f06f 0002 	mvn.w	r0, #2
}
 800c7b2:	b002      	add	sp, #8
 800c7b4:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800c7b6:	f06f 0003 	mvn.w	r0, #3
 800c7ba:	e7e0      	b.n	800c77e <osSemaphoreAcquire+0x22>
 800c7bc:	f06f 0003 	mvn.w	r0, #3
}
 800c7c0:	4770      	bx	lr
 800c7c2:	bf00      	nop

0800c7c4 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800c7c4:	b330      	cbz	r0, 800c814 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800c7c6:	b510      	push	{r4, lr}
 800c7c8:	b082      	sub	sp, #8
 800c7ca:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800c7ce:	b1ab      	cbz	r3, 800c7fc <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800c7d0:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800c7d2:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800c7d4:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800c7d6:	f000 ff95 	bl	800d704 <xQueueGiveFromISR>
 800c7da:	2801      	cmp	r0, #1
 800c7dc:	d117      	bne.n	800c80e <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800c7de:	9b01      	ldr	r3, [sp, #4]
 800c7e0:	b193      	cbz	r3, 800c808 <osSemaphoreRelease+0x44>
 800c7e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c7e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c7ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c7ee:	f3bf 8f4f 	dsb	sy
 800c7f2:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800c7f6:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800c7f8:	b002      	add	sp, #8
 800c7fa:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800c7fc:	461a      	mov	r2, r3
 800c7fe:	4619      	mov	r1, r3
 800c800:	f000 fd9c 	bl	800d33c <xQueueGenericSend>
 800c804:	2801      	cmp	r0, #1
 800c806:	d102      	bne.n	800c80e <osSemaphoreRelease+0x4a>
  stat = osOK;
 800c808:	2000      	movs	r0, #0
}
 800c80a:	b002      	add	sp, #8
 800c80c:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800c80e:	f06f 0002 	mvn.w	r0, #2
 800c812:	e7fa      	b.n	800c80a <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800c814:	f06f 0003 	mvn.w	r0, #3
}
 800c818:	4770      	bx	lr
 800c81a:	bf00      	nop

0800c81c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800c81c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c81e:	b085      	sub	sp, #20
 800c820:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800c824:	b987      	cbnz	r7, 800c848 <osMessageQueueNew+0x2c>
 800c826:	4605      	mov	r5, r0
 800c828:	b170      	cbz	r0, 800c848 <osMessageQueueNew+0x2c>
 800c82a:	b169      	cbz	r1, 800c848 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800c82c:	4614      	mov	r4, r2
 800c82e:	b1ea      	cbz	r2, 800c86c <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800c830:	6893      	ldr	r3, [r2, #8]
 800c832:	b163      	cbz	r3, 800c84e <osMessageQueueNew+0x32>
 800c834:	68d2      	ldr	r2, [r2, #12]
 800c836:	2a4f      	cmp	r2, #79	; 0x4f
 800c838:	d906      	bls.n	800c848 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800c83a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800c83c:	b122      	cbz	r2, 800c848 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800c83e:	6966      	ldr	r6, [r4, #20]
 800c840:	fb01 f505 	mul.w	r5, r1, r5
 800c844:	42ae      	cmp	r6, r5
 800c846:	d21c      	bcs.n	800c882 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800c848:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800c84a:	b005      	add	sp, #20
 800c84c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800c84e:	68d3      	ldr	r3, [r2, #12]
 800c850:	2b00      	cmp	r3, #0
 800c852:	d1f9      	bne.n	800c848 <osMessageQueueNew+0x2c>
 800c854:	6913      	ldr	r3, [r2, #16]
 800c856:	2b00      	cmp	r3, #0
 800c858:	d1f6      	bne.n	800c848 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800c85a:	6952      	ldr	r2, [r2, #20]
 800c85c:	2a00      	cmp	r2, #0
 800c85e:	d1f3      	bne.n	800c848 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800c860:	f000 fc84 	bl	800d16c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800c864:	2800      	cmp	r0, #0
 800c866:	d0ef      	beq.n	800c848 <osMessageQueueNew+0x2c>
        name = attr->name;
 800c868:	6824      	ldr	r4, [r4, #0]
 800c86a:	e003      	b.n	800c874 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800c86c:	f000 fc7e 	bl	800d16c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800c870:	2800      	cmp	r0, #0
 800c872:	d0e9      	beq.n	800c848 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800c874:	4621      	mov	r1, r4
 800c876:	9003      	str	r0, [sp, #12]
 800c878:	f001 fb6c 	bl	800df54 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800c87c:	9803      	ldr	r0, [sp, #12]
}
 800c87e:	b005      	add	sp, #20
 800c880:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800c882:	9700      	str	r7, [sp, #0]
 800c884:	f000 fc04 	bl	800d090 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800c888:	2800      	cmp	r0, #0
 800c88a:	d1ed      	bne.n	800c868 <osMessageQueueNew+0x4c>
 800c88c:	e7dc      	b.n	800c848 <osMessageQueueNew+0x2c>
 800c88e:	bf00      	nop

0800c890 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800c890:	b570      	push	{r4, r5, r6, lr}
 800c892:	461c      	mov	r4, r3
 800c894:	b082      	sub	sp, #8
 800c896:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800c89a:	b1be      	cbz	r6, 800c8cc <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800c89c:	b350      	cbz	r0, 800c8f4 <osMessageQueuePut+0x64>
 800c89e:	b349      	cbz	r1, 800c8f4 <osMessageQueuePut+0x64>
 800c8a0:	bb43      	cbnz	r3, 800c8f4 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800c8a2:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800c8a4:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800c8a6:	f000 fec7 	bl	800d638 <xQueueGenericSendFromISR>
 800c8aa:	2801      	cmp	r0, #1
 800c8ac:	d11e      	bne.n	800c8ec <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800c8ae:	9b01      	ldr	r3, [sp, #4]
 800c8b0:	b1cb      	cbz	r3, 800c8e6 <osMessageQueuePut+0x56>
 800c8b2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c8b6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c8ba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c8be:	f3bf 8f4f 	dsb	sy
 800c8c2:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800c8c6:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800c8c8:	b002      	add	sp, #8
 800c8ca:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800c8cc:	b190      	cbz	r0, 800c8f4 <osMessageQueuePut+0x64>
 800c8ce:	b189      	cbz	r1, 800c8f4 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800c8d0:	4633      	mov	r3, r6
 800c8d2:	4622      	mov	r2, r4
 800c8d4:	f000 fd32 	bl	800d33c <xQueueGenericSend>
 800c8d8:	2801      	cmp	r0, #1
 800c8da:	d004      	beq.n	800c8e6 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800c8dc:	b134      	cbz	r4, 800c8ec <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800c8de:	f06f 0001 	mvn.w	r0, #1
}
 800c8e2:	b002      	add	sp, #8
 800c8e4:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800c8e6:	2000      	movs	r0, #0
}
 800c8e8:	b002      	add	sp, #8
 800c8ea:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800c8ec:	f06f 0002 	mvn.w	r0, #2
}
 800c8f0:	b002      	add	sp, #8
 800c8f2:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800c8f4:	f06f 0003 	mvn.w	r0, #3
 800c8f8:	e7e6      	b.n	800c8c8 <osMessageQueuePut+0x38>
 800c8fa:	bf00      	nop

0800c8fc <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800c8fc:	b530      	push	{r4, r5, lr}
 800c8fe:	461c      	mov	r4, r3
 800c900:	b083      	sub	sp, #12
 800c902:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800c906:	b1bb      	cbz	r3, 800c938 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800c908:	b348      	cbz	r0, 800c95e <osMessageQueueGet+0x62>
 800c90a:	b341      	cbz	r1, 800c95e <osMessageQueueGet+0x62>
 800c90c:	bb3c      	cbnz	r4, 800c95e <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800c90e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800c910:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800c912:	f001 fa57 	bl	800ddc4 <xQueueReceiveFromISR>
 800c916:	2801      	cmp	r0, #1
 800c918:	d11d      	bne.n	800c956 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800c91a:	9b01      	ldr	r3, [sp, #4]
 800c91c:	b1c3      	cbz	r3, 800c950 <osMessageQueueGet+0x54>
 800c91e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c922:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c926:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c92a:	f3bf 8f4f 	dsb	sy
 800c92e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800c932:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800c934:	b003      	add	sp, #12
 800c936:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800c938:	b188      	cbz	r0, 800c95e <osMessageQueueGet+0x62>
 800c93a:	b181      	cbz	r1, 800c95e <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800c93c:	4622      	mov	r2, r4
 800c93e:	f000 ff39 	bl	800d7b4 <xQueueReceive>
 800c942:	2801      	cmp	r0, #1
 800c944:	d004      	beq.n	800c950 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800c946:	b134      	cbz	r4, 800c956 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800c948:	f06f 0001 	mvn.w	r0, #1
}
 800c94c:	b003      	add	sp, #12
 800c94e:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800c950:	2000      	movs	r0, #0
}
 800c952:	b003      	add	sp, #12
 800c954:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800c956:	f06f 0002 	mvn.w	r0, #2
}
 800c95a:	b003      	add	sp, #12
 800c95c:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800c95e:	f06f 0003 	mvn.w	r0, #3
 800c962:	e7e7      	b.n	800c934 <osMessageQueueGet+0x38>

0800c964 <osMessageQueueGetCount>:
 800c964:	b130      	cbz	r0, 800c974 <osMessageQueueGetCount+0x10>
 800c966:	f3ef 8305 	mrs	r3, IPSR
 800c96a:	b10b      	cbz	r3, 800c970 <osMessageQueueGetCount+0xc>
 800c96c:	f001 ba9e 	b.w	800deac <uxQueueMessagesWaitingFromISR>
 800c970:	f001 ba86 	b.w	800de80 <uxQueueMessagesWaiting>
 800c974:	4770      	bx	lr
 800c976:	bf00      	nop

0800c978 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800c978:	4b04      	ldr	r3, [pc, #16]	; (800c98c <vApplicationGetIdleTaskMemory+0x14>)
 800c97a:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800c97c:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800c97e:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800c980:	4c03      	ldr	r4, [pc, #12]	; (800c990 <vApplicationGetIdleTaskMemory+0x18>)
 800c982:	600c      	str	r4, [r1, #0]
}
 800c984:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800c988:	6013      	str	r3, [r2, #0]
}
 800c98a:	4770      	bx	lr
 800c98c:	20002bc4 	.word	0x20002bc4
 800c990:	200029c4 	.word	0x200029c4

0800c994 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800c994:	4b05      	ldr	r3, [pc, #20]	; (800c9ac <vApplicationGetTimerTaskMemory+0x18>)
 800c996:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800c998:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800c99a:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800c99e:	4c04      	ldr	r4, [pc, #16]	; (800c9b0 <vApplicationGetTimerTaskMemory+0x1c>)
 800c9a0:	600c      	str	r4, [r1, #0]
}
 800c9a2:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800c9a6:	6013      	str	r3, [r2, #0]
}
 800c9a8:	4770      	bx	lr
 800c9aa:	bf00      	nop
 800c9ac:	20003074 	.word	0x20003074
 800c9b0:	20002c74 	.word	0x20002c74

0800c9b4 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800c9b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c9b8:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800c9ba:	f001 ff41 	bl	800e840 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800c9be:	4a54      	ldr	r2, [pc, #336]	; (800cb10 <pvPortMalloc+0x15c>)
 800c9c0:	6816      	ldr	r6, [r2, #0]
 800c9c2:	2e00      	cmp	r6, #0
 800c9c4:	d06e      	beq.n	800caa4 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800c9c6:	4b53      	ldr	r3, [pc, #332]	; (800cb14 <pvPortMalloc+0x160>)
 800c9c8:	681f      	ldr	r7, [r3, #0]
 800c9ca:	423d      	tst	r5, r7
 800c9cc:	d12e      	bne.n	800ca2c <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800c9ce:	b36d      	cbz	r5, 800ca2c <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800c9d0:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800c9d4:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800c9d6:	bf1c      	itt	ne
 800c9d8:	f024 0407 	bicne.w	r4, r4, #7
 800c9dc:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800c9de:	b32c      	cbz	r4, 800ca2c <pvPortMalloc+0x78>
 800c9e0:	f8df c144 	ldr.w	ip, [pc, #324]	; 800cb28 <pvPortMalloc+0x174>
 800c9e4:	f8dc 5000 	ldr.w	r5, [ip]
 800c9e8:	42a5      	cmp	r5, r4
 800c9ea:	d31f      	bcc.n	800ca2c <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800c9ec:	484a      	ldr	r0, [pc, #296]	; (800cb18 <pvPortMalloc+0x164>)
 800c9ee:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800c9f0:	e003      	b.n	800c9fa <pvPortMalloc+0x46>
 800c9f2:	681a      	ldr	r2, [r3, #0]
 800c9f4:	b122      	cbz	r2, 800ca00 <pvPortMalloc+0x4c>
 800c9f6:	4618      	mov	r0, r3
 800c9f8:	4613      	mov	r3, r2
 800c9fa:	6859      	ldr	r1, [r3, #4]
 800c9fc:	42a1      	cmp	r1, r4
 800c9fe:	d3f8      	bcc.n	800c9f2 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800ca00:	42b3      	cmp	r3, r6
 800ca02:	d013      	beq.n	800ca2c <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800ca04:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800ca06:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800ca08:	f858 eb08 	ldr.w	lr, [r8], #8
 800ca0c:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800ca10:	2a10      	cmp	r2, #16
 800ca12:	d929      	bls.n	800ca68 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800ca14:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800ca16:	0748      	lsls	r0, r1, #29
 800ca18:	d00f      	beq.n	800ca3a <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800ca1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ca1e:	f383 8811 	msr	BASEPRI, r3
 800ca22:	f3bf 8f6f 	isb	sy
 800ca26:	f3bf 8f4f 	dsb	sy
 800ca2a:	e7fe      	b.n	800ca2a <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800ca2c:	f001 ff10 	bl	800e850 <xTaskResumeAll>
 800ca30:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800ca34:	4640      	mov	r0, r8
 800ca36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800ca3a:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800ca3c:	4a36      	ldr	r2, [pc, #216]	; (800cb18 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800ca3e:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800ca40:	4614      	mov	r4, r2
 800ca42:	6812      	ldr	r2, [r2, #0]
 800ca44:	4291      	cmp	r1, r2
 800ca46:	d8fb      	bhi.n	800ca40 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800ca48:	6860      	ldr	r0, [r4, #4]
 800ca4a:	eb04 0e00 	add.w	lr, r4, r0
 800ca4e:	4571      	cmp	r1, lr
 800ca50:	d04b      	beq.n	800caea <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800ca52:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ca56:	eb01 000e 	add.w	r0, r1, lr
 800ca5a:	4282      	cmp	r2, r0
 800ca5c:	d051      	beq.n	800cb02 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800ca5e:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ca60:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800ca62:	bf18      	it	ne
 800ca64:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800ca66:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800ca68:	4a2c      	ldr	r2, [pc, #176]	; (800cb1c <pvPortMalloc+0x168>)
 800ca6a:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800ca6c:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800ca6e:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800ca70:	bf38      	it	cc
 800ca72:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800ca74:	4a2a      	ldr	r2, [pc, #168]	; (800cb20 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800ca76:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800ca7a:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800ca7c:	2000      	movs	r0, #0
 800ca7e:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800ca82:	6813      	ldr	r3, [r2, #0]
 800ca84:	3301      	adds	r3, #1
 800ca86:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800ca88:	f001 fee2 	bl	800e850 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800ca8c:	f018 0f07 	tst.w	r8, #7
 800ca90:	d0d0      	beq.n	800ca34 <pvPortMalloc+0x80>
 800ca92:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ca96:	f383 8811 	msr	BASEPRI, r3
 800ca9a:	f3bf 8f6f 	isb	sy
 800ca9e:	f3bf 8f4f 	dsb	sy
 800caa2:	e7fe      	b.n	800caa2 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800caa4:	4b1f      	ldr	r3, [pc, #124]	; (800cb24 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800caa6:	075e      	lsls	r6, r3, #29
 800caa8:	d118      	bne.n	800cadc <pvPortMalloc+0x128>
 800caaa:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800caae:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800cab0:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800cab2:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800cab6:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cab8:	4a18      	ldr	r2, [pc, #96]	; (800cb1c <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800caba:	4817      	ldr	r0, [pc, #92]	; (800cb18 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800cabc:	4c15      	ldr	r4, [pc, #84]	; (800cb14 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800cabe:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800cac0:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cac2:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cac4:	4a18      	ldr	r2, [pc, #96]	; (800cb28 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800cac6:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800caca:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800cacc:	2200      	movs	r2, #0
 800cace:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800cad0:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800cad2:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800cad6:	e9c1 6300 	strd	r6, r3, [r1]
}
 800cada:	e776      	b.n	800c9ca <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800cadc:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800cade:	f021 0107 	bic.w	r1, r1, #7
 800cae2:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800cae6:	460b      	mov	r3, r1
 800cae8:	e7e2      	b.n	800cab0 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800caea:	6849      	ldr	r1, [r1, #4]
 800caec:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800caf0:	eb04 010e 	add.w	r1, r4, lr
 800caf4:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800caf6:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cafa:	d001      	beq.n	800cb00 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cafc:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800cafe:	e7b2      	b.n	800ca66 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cb00:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800cb02:	42b2      	cmp	r2, r6
 800cb04:	d0ab      	beq.n	800ca5e <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800cb06:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cb08:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800cb0a:	4470      	add	r0, lr
 800cb0c:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cb0e:	e7a6      	b.n	800ca5e <pvPortMalloc+0xaa>
 800cb10:	20003120 	.word	0x20003120
 800cb14:	20013124 	.word	0x20013124
 800cb18:	20013138 	.word	0x20013138
 800cb1c:	2001312c 	.word	0x2001312c
 800cb20:	20013130 	.word	0x20013130
 800cb24:	20003124 	.word	0x20003124
 800cb28:	20013128 	.word	0x20013128

0800cb2c <vPortFree>:
	if( pv != NULL )
 800cb2c:	b1d0      	cbz	r0, 800cb64 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800cb2e:	4a2c      	ldr	r2, [pc, #176]	; (800cbe0 <vPortFree+0xb4>)
 800cb30:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800cb34:	6812      	ldr	r2, [r2, #0]
 800cb36:	4213      	tst	r3, r2
 800cb38:	d00b      	beq.n	800cb52 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800cb3a:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800cb3e:	b191      	cbz	r1, 800cb66 <vPortFree+0x3a>
 800cb40:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cb44:	f383 8811 	msr	BASEPRI, r3
 800cb48:	f3bf 8f6f 	isb	sy
 800cb4c:	f3bf 8f4f 	dsb	sy
 800cb50:	e7fe      	b.n	800cb50 <vPortFree+0x24>
 800cb52:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cb56:	f383 8811 	msr	BASEPRI, r3
 800cb5a:	f3bf 8f6f 	isb	sy
 800cb5e:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800cb62:	e7fe      	b.n	800cb62 <vPortFree+0x36>
 800cb64:	4770      	bx	lr
{
 800cb66:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800cb68:	ea23 0302 	bic.w	r3, r3, r2
{
 800cb6c:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800cb6e:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800cb72:	4c1c      	ldr	r4, [pc, #112]	; (800cbe4 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800cb74:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800cb76:	f001 fe63 	bl	800e840 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800cb7a:	9801      	ldr	r0, [sp, #4]
 800cb7c:	6822      	ldr	r2, [r4, #0]
 800cb7e:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800cb82:	4b19      	ldr	r3, [pc, #100]	; (800cbe8 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800cb84:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800cb86:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800cb88:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800cb8a:	461a      	mov	r2, r3
 800cb8c:	681b      	ldr	r3, [r3, #0]
 800cb8e:	4298      	cmp	r0, r3
 800cb90:	d8fb      	bhi.n	800cb8a <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800cb92:	6854      	ldr	r4, [r2, #4]
 800cb94:	eb02 0e04 	add.w	lr, r2, r4
 800cb98:	4570      	cmp	r0, lr
 800cb9a:	d010      	beq.n	800cbbe <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cb9c:	eb00 0c01 	add.w	ip, r0, r1
 800cba0:	4563      	cmp	r3, ip
 800cba2:	d014      	beq.n	800cbce <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800cba4:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cba6:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800cba8:	bf18      	it	ne
 800cbaa:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800cbac:	4a0f      	ldr	r2, [pc, #60]	; (800cbec <vPortFree+0xc0>)
 800cbae:	6813      	ldr	r3, [r2, #0]
 800cbb0:	3301      	adds	r3, #1
 800cbb2:	6013      	str	r3, [r2, #0]
}
 800cbb4:	b002      	add	sp, #8
 800cbb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800cbba:	f001 be49 	b.w	800e850 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cbbe:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cbc0:	1850      	adds	r0, r2, r1
 800cbc2:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cbc4:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cbc6:	d001      	beq.n	800cbcc <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cbc8:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800cbca:	e7ef      	b.n	800cbac <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cbcc:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800cbce:	4c08      	ldr	r4, [pc, #32]	; (800cbf0 <vPortFree+0xc4>)
 800cbd0:	6824      	ldr	r4, [r4, #0]
 800cbd2:	42a3      	cmp	r3, r4
 800cbd4:	d0e6      	beq.n	800cba4 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cbd6:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800cbda:	4421      	add	r1, r4
 800cbdc:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cbde:	e7e1      	b.n	800cba4 <vPortFree+0x78>
 800cbe0:	20013124 	.word	0x20013124
 800cbe4:	20013128 	.word	0x20013128
 800cbe8:	20013138 	.word	0x20013138
 800cbec:	20013134 	.word	0x20013134
 800cbf0:	20003120 	.word	0x20003120

0800cbf4 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800cbf4:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800cbf8:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800cbfc:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800cbfe:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800cc02:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800cc06:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800cc08:	4770      	bx	lr
 800cc0a:	bf00      	nop

0800cc0c <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800cc0c:	2300      	movs	r3, #0
 800cc0e:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800cc10:	4770      	bx	lr
 800cc12:	bf00      	nop

0800cc14 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800cc14:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800cc16:	689a      	ldr	r2, [r3, #8]
 800cc18:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800cc1a:	6802      	ldr	r2, [r0, #0]
{
 800cc1c:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800cc1e:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800cc20:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800cc22:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800cc24:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800cc26:	6099      	str	r1, [r3, #8]
}
 800cc28:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800cc2c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800cc2e:	6002      	str	r2, [r0, #0]
}
 800cc30:	4770      	bx	lr
 800cc32:	bf00      	nop

0800cc34 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800cc34:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800cc36:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800cc38:	1c6b      	adds	r3, r5, #1
 800cc3a:	d010      	beq.n	800cc5e <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800cc3c:	f100 0308 	add.w	r3, r0, #8
 800cc40:	461c      	mov	r4, r3
 800cc42:	685b      	ldr	r3, [r3, #4]
 800cc44:	681a      	ldr	r2, [r3, #0]
 800cc46:	42aa      	cmp	r2, r5
 800cc48:	d9fa      	bls.n	800cc40 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800cc4a:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800cc4c:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800cc4e:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800cc50:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800cc52:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800cc54:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800cc56:	6108      	str	r0, [r1, #16]
}
 800cc58:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800cc5a:	6002      	str	r2, [r0, #0]
}
 800cc5c:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800cc5e:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800cc60:	6863      	ldr	r3, [r4, #4]
 800cc62:	e7f2      	b.n	800cc4a <vListInsert+0x16>

0800cc64 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800cc64:	6903      	ldr	r3, [r0, #16]
{
 800cc66:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800cc68:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800cc6c:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800cc6e:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800cc70:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800cc72:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800cc74:	bf08      	it	eq
 800cc76:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800cc78:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800cc7a:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800cc7e:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800cc80:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800cc82:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800cc84:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800cc86:	6818      	ldr	r0, [r3, #0]
}
 800cc88:	4770      	bx	lr
 800cc8a:	bf00      	nop

0800cc8c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800cc8c:	4808      	ldr	r0, [pc, #32]	; (800ccb0 <prvPortStartFirstTask+0x24>)
 800cc8e:	6800      	ldr	r0, [r0, #0]
 800cc90:	6800      	ldr	r0, [r0, #0]
 800cc92:	f380 8808 	msr	MSP, r0
 800cc96:	f04f 0000 	mov.w	r0, #0
 800cc9a:	f380 8814 	msr	CONTROL, r0
 800cc9e:	b662      	cpsie	i
 800cca0:	b661      	cpsie	f
 800cca2:	f3bf 8f4f 	dsb	sy
 800cca6:	f3bf 8f6f 	isb	sy
 800ccaa:	df00      	svc	0
 800ccac:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800ccae:	0000      	.short	0x0000
 800ccb0:	e000ed08 	.word	0xe000ed08

0800ccb4 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800ccb4:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800ccc4 <vPortEnableVFP+0x10>
 800ccb8:	6801      	ldr	r1, [r0, #0]
 800ccba:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800ccbe:	6001      	str	r1, [r0, #0]
 800ccc0:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800ccc2:	0000      	.short	0x0000
 800ccc4:	e000ed88 	.word	0xe000ed88

0800ccc8 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800ccc8:	4b0e      	ldr	r3, [pc, #56]	; (800cd04 <prvTaskExitError+0x3c>)
 800ccca:	681b      	ldr	r3, [r3, #0]
{
 800cccc:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800ccce:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800ccd0:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800ccd2:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800ccd4:	d008      	beq.n	800cce8 <prvTaskExitError+0x20>
 800ccd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ccda:	f383 8811 	msr	BASEPRI, r3
 800ccde:	f3bf 8f6f 	isb	sy
 800cce2:	f3bf 8f4f 	dsb	sy
 800cce6:	e7fe      	b.n	800cce6 <prvTaskExitError+0x1e>
 800cce8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ccec:	f383 8811 	msr	BASEPRI, r3
 800ccf0:	f3bf 8f6f 	isb	sy
 800ccf4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800ccf8:	9b01      	ldr	r3, [sp, #4]
 800ccfa:	2b00      	cmp	r3, #0
 800ccfc:	d0fc      	beq.n	800ccf8 <prvTaskExitError+0x30>
}
 800ccfe:	b002      	add	sp, #8
 800cd00:	4770      	bx	lr
 800cd02:	bf00      	nop
 800cd04:	20000084 	.word	0x20000084

0800cd08 <pxPortInitialiseStack>:
{
 800cd08:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800cd0a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800cd0e:	4c07      	ldr	r4, [pc, #28]	; (800cd2c <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800cd10:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800cd14:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800cd18:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800cd1c:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800cd20:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800cd24:	f85d 4b04 	ldr.w	r4, [sp], #4
 800cd28:	3844      	subs	r0, #68	; 0x44
 800cd2a:	4770      	bx	lr
 800cd2c:	0800ccc9 	.word	0x0800ccc9

0800cd30 <SVC_Handler>:
	__asm volatile (
 800cd30:	4b07      	ldr	r3, [pc, #28]	; (800cd50 <pxCurrentTCBConst2>)
 800cd32:	6819      	ldr	r1, [r3, #0]
 800cd34:	6808      	ldr	r0, [r1, #0]
 800cd36:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cd3a:	f380 8809 	msr	PSP, r0
 800cd3e:	f3bf 8f6f 	isb	sy
 800cd42:	f04f 0000 	mov.w	r0, #0
 800cd46:	f380 8811 	msr	BASEPRI, r0
 800cd4a:	4770      	bx	lr
 800cd4c:	f3af 8000 	nop.w

0800cd50 <pxCurrentTCBConst2>:
 800cd50:	20013188 	.word	0x20013188

0800cd54 <vPortEnterCritical>:
 800cd54:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cd58:	f383 8811 	msr	BASEPRI, r3
 800cd5c:	f3bf 8f6f 	isb	sy
 800cd60:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800cd64:	4a0b      	ldr	r2, [pc, #44]	; (800cd94 <vPortEnterCritical+0x40>)
 800cd66:	6813      	ldr	r3, [r2, #0]
 800cd68:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800cd6a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800cd6c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800cd6e:	d000      	beq.n	800cd72 <vPortEnterCritical+0x1e>
}
 800cd70:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800cd72:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cd76:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800cd7a:	b2db      	uxtb	r3, r3
 800cd7c:	2b00      	cmp	r3, #0
 800cd7e:	d0f7      	beq.n	800cd70 <vPortEnterCritical+0x1c>
 800cd80:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cd84:	f383 8811 	msr	BASEPRI, r3
 800cd88:	f3bf 8f6f 	isb	sy
 800cd8c:	f3bf 8f4f 	dsb	sy
 800cd90:	e7fe      	b.n	800cd90 <vPortEnterCritical+0x3c>
 800cd92:	bf00      	nop
 800cd94:	20000084 	.word	0x20000084

0800cd98 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800cd98:	4a08      	ldr	r2, [pc, #32]	; (800cdbc <vPortExitCritical+0x24>)
 800cd9a:	6813      	ldr	r3, [r2, #0]
 800cd9c:	b943      	cbnz	r3, 800cdb0 <vPortExitCritical+0x18>
 800cd9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cda2:	f383 8811 	msr	BASEPRI, r3
 800cda6:	f3bf 8f6f 	isb	sy
 800cdaa:	f3bf 8f4f 	dsb	sy
 800cdae:	e7fe      	b.n	800cdae <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800cdb0:	3b01      	subs	r3, #1
 800cdb2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800cdb4:	b90b      	cbnz	r3, 800cdba <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800cdb6:	f383 8811 	msr	BASEPRI, r3
}
 800cdba:	4770      	bx	lr
 800cdbc:	20000084 	.word	0x20000084

0800cdc0 <PendSV_Handler>:
	__asm volatile
 800cdc0:	f3ef 8009 	mrs	r0, PSP
 800cdc4:	f3bf 8f6f 	isb	sy
 800cdc8:	4b15      	ldr	r3, [pc, #84]	; (800ce20 <pxCurrentTCBConst>)
 800cdca:	681a      	ldr	r2, [r3, #0]
 800cdcc:	f01e 0f10 	tst.w	lr, #16
 800cdd0:	bf08      	it	eq
 800cdd2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800cdd6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cdda:	6010      	str	r0, [r2, #0]
 800cddc:	e92d 0009 	stmdb	sp!, {r0, r3}
 800cde0:	f04f 0050 	mov.w	r0, #80	; 0x50
 800cde4:	f380 8811 	msr	BASEPRI, r0
 800cde8:	f3bf 8f4f 	dsb	sy
 800cdec:	f3bf 8f6f 	isb	sy
 800cdf0:	f001 fd54 	bl	800e89c <vTaskSwitchContext>
 800cdf4:	f04f 0000 	mov.w	r0, #0
 800cdf8:	f380 8811 	msr	BASEPRI, r0
 800cdfc:	bc09      	pop	{r0, r3}
 800cdfe:	6819      	ldr	r1, [r3, #0]
 800ce00:	6808      	ldr	r0, [r1, #0]
 800ce02:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce06:	f01e 0f10 	tst.w	lr, #16
 800ce0a:	bf08      	it	eq
 800ce0c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800ce10:	f380 8809 	msr	PSP, r0
 800ce14:	f3bf 8f6f 	isb	sy
 800ce18:	4770      	bx	lr
 800ce1a:	bf00      	nop
 800ce1c:	f3af 8000 	nop.w

0800ce20 <pxCurrentTCBConst>:
 800ce20:	20013188 	.word	0x20013188

0800ce24 <xPortSysTickHandler>:
{
 800ce24:	b508      	push	{r3, lr}
	__asm volatile
 800ce26:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ce2a:	f383 8811 	msr	BASEPRI, r3
 800ce2e:	f3bf 8f6f 	isb	sy
 800ce32:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800ce36:	f001 fd21 	bl	800e87c <xTaskIncrementTick>
 800ce3a:	b128      	cbz	r0, 800ce48 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800ce3c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ce40:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ce44:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800ce48:	2300      	movs	r3, #0
 800ce4a:	f383 8811 	msr	BASEPRI, r3
}
 800ce4e:	bd08      	pop	{r3, pc}

0800ce50 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800ce50:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800ce54:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800ce56:	4906      	ldr	r1, [pc, #24]	; (800ce70 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800ce58:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800ce5a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800ce5c:	680b      	ldr	r3, [r1, #0]
 800ce5e:	4905      	ldr	r1, [pc, #20]	; (800ce74 <vPortSetupTimerInterrupt+0x24>)
 800ce60:	fba1 1303 	umull	r1, r3, r1, r3
 800ce64:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800ce66:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800ce68:	3b01      	subs	r3, #1
 800ce6a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800ce6c:	6110      	str	r0, [r2, #16]
}
 800ce6e:	4770      	bx	lr
 800ce70:	20000078 	.word	0x20000078
 800ce74:	10624dd3 	.word	0x10624dd3

0800ce78 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800ce78:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ce7c:	4a49      	ldr	r2, [pc, #292]	; (800cfa4 <xPortStartScheduler+0x12c>)
 800ce7e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800ce82:	4291      	cmp	r1, r2
 800ce84:	d043      	beq.n	800cf0e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800ce86:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800ce8a:	4b47      	ldr	r3, [pc, #284]	; (800cfa8 <xPortStartScheduler+0x130>)
 800ce8c:	429a      	cmp	r2, r3
 800ce8e:	d035      	beq.n	800cefc <xPortStartScheduler+0x84>
{
 800ce90:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800ce92:	4b46      	ldr	r3, [pc, #280]	; (800cfac <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800ce94:	4846      	ldr	r0, [pc, #280]	; (800cfb0 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800ce96:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800ce98:	4c46      	ldr	r4, [pc, #280]	; (800cfb4 <xPortStartScheduler+0x13c>)
{
 800ce9a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800ce9c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800ce9e:	b2d2      	uxtb	r2, r2
 800cea0:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800cea2:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800cea4:	781b      	ldrb	r3, [r3, #0]
 800cea6:	b2db      	uxtb	r3, r3
 800cea8:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800ceac:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800ceb0:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800ceb4:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800ceb8:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800ceba:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800cebc:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800cebe:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800cec0:	bf48      	it	mi
 800cec2:	2206      	movmi	r2, #6
 800cec4:	d511      	bpl.n	800ceea <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800cec6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800ceca:	005b      	lsls	r3, r3, #1
 800cecc:	b2db      	uxtb	r3, r3
 800cece:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800ced2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800ced6:	0609      	lsls	r1, r1, #24
 800ced8:	4610      	mov	r0, r2
 800ceda:	f102 32ff 	add.w	r2, r2, #4294967295
 800cede:	d4f2      	bmi.n	800cec6 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800cee0:	2803      	cmp	r0, #3
 800cee2:	6020      	str	r0, [r4, #0]
 800cee4:	f88d 3007 	strb.w	r3, [sp, #7]
 800cee8:	d01a      	beq.n	800cf20 <xPortStartScheduler+0xa8>
	__asm volatile
 800ceea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ceee:	f383 8811 	msr	BASEPRI, r3
 800cef2:	f3bf 8f6f 	isb	sy
 800cef6:	f3bf 8f4f 	dsb	sy
 800cefa:	e7fe      	b.n	800cefa <xPortStartScheduler+0x82>
 800cefc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cf00:	f383 8811 	msr	BASEPRI, r3
 800cf04:	f3bf 8f6f 	isb	sy
 800cf08:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800cf0c:	e7fe      	b.n	800cf0c <xPortStartScheduler+0x94>
 800cf0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cf12:	f383 8811 	msr	BASEPRI, r3
 800cf16:	f3bf 8f6f 	isb	sy
 800cf1a:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800cf1e:	e7fe      	b.n	800cf1e <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800cf20:	9b02      	ldr	r3, [sp, #8]
 800cf22:	4a22      	ldr	r2, [pc, #136]	; (800cfac <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800cf24:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800cf28:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800cf2c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800cf2e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800cf30:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800cf32:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800cf36:	4c20      	ldr	r4, [pc, #128]	; (800cfb8 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800cf38:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800cf3c:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800cf40:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800cf44:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800cf48:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800cf4c:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800cf4e:	f7ff ff7f 	bl	800ce50 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800cf52:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800cf54:	f7ff feae 	bl	800ccb4 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800cf58:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800cf5c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800cf60:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800cf64:	f7ff fe92 	bl	800cc8c <prvPortStartFirstTask>
	vTaskSwitchContext();
 800cf68:	f001 fc98 	bl	800e89c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800cf6c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800cf6e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800cf70:	3301      	adds	r3, #1
 800cf72:	d008      	beq.n	800cf86 <xPortStartScheduler+0x10e>
 800cf74:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cf78:	f383 8811 	msr	BASEPRI, r3
 800cf7c:	f3bf 8f6f 	isb	sy
 800cf80:	f3bf 8f4f 	dsb	sy
 800cf84:	e7fe      	b.n	800cf84 <xPortStartScheduler+0x10c>
 800cf86:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cf8a:	f383 8811 	msr	BASEPRI, r3
 800cf8e:	f3bf 8f6f 	isb	sy
 800cf92:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800cf96:	9b03      	ldr	r3, [sp, #12]
 800cf98:	2b00      	cmp	r3, #0
 800cf9a:	d0fc      	beq.n	800cf96 <xPortStartScheduler+0x11e>
}
 800cf9c:	2000      	movs	r0, #0
 800cf9e:	b004      	add	sp, #16
 800cfa0:	bd70      	pop	{r4, r5, r6, pc}
 800cfa2:	bf00      	nop
 800cfa4:	410fc271 	.word	0x410fc271
 800cfa8:	410fc270 	.word	0x410fc270
 800cfac:	e000e400 	.word	0xe000e400
 800cfb0:	20013140 	.word	0x20013140
 800cfb4:	20013144 	.word	0x20013144
 800cfb8:	20000084 	.word	0x20000084

0800cfbc <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800cfbc:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800cfc0:	2b0f      	cmp	r3, #15
 800cfc2:	d90e      	bls.n	800cfe2 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800cfc4:	4911      	ldr	r1, [pc, #68]	; (800d00c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800cfc6:	4a12      	ldr	r2, [pc, #72]	; (800d010 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800cfc8:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800cfca:	7812      	ldrb	r2, [r2, #0]
 800cfcc:	429a      	cmp	r2, r3
 800cfce:	d908      	bls.n	800cfe2 <vPortValidateInterruptPriority+0x26>
 800cfd0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cfd4:	f383 8811 	msr	BASEPRI, r3
 800cfd8:	f3bf 8f6f 	isb	sy
 800cfdc:	f3bf 8f4f 	dsb	sy
 800cfe0:	e7fe      	b.n	800cfe0 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800cfe2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cfe6:	4a0b      	ldr	r2, [pc, #44]	; (800d014 <vPortValidateInterruptPriority+0x58>)
 800cfe8:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800cfec:	6812      	ldr	r2, [r2, #0]
 800cfee:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800cff2:	4293      	cmp	r3, r2
 800cff4:	d908      	bls.n	800d008 <vPortValidateInterruptPriority+0x4c>
 800cff6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cffa:	f383 8811 	msr	BASEPRI, r3
 800cffe:	f3bf 8f6f 	isb	sy
 800d002:	f3bf 8f4f 	dsb	sy
 800d006:	e7fe      	b.n	800d006 <vPortValidateInterruptPriority+0x4a>
	}
 800d008:	4770      	bx	lr
 800d00a:	bf00      	nop
 800d00c:	e000e3f0 	.word	0xe000e3f0
 800d010:	20013140 	.word	0x20013140
 800d014:	20013144 	.word	0x20013144

0800d018 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800d018:	b570      	push	{r4, r5, r6, lr}
 800d01a:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d01c:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d01e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d020:	b920      	cbnz	r0, 800d02c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d022:	6825      	ldr	r5, [r4, #0]
 800d024:	b34d      	cbz	r5, 800d07a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d026:	3601      	adds	r6, #1
 800d028:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800d02a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800d02c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d02e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800d030:	b97d      	cbnz	r5, 800d052 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d032:	6860      	ldr	r0, [r4, #4]
 800d034:	f01b fbaf 	bl	8028796 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d038:	6863      	ldr	r3, [r4, #4]
 800d03a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d03c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d03e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d040:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d042:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800d044:	bf24      	itt	cs
 800d046:	6823      	ldrcs	r3, [r4, #0]
 800d048:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d04a:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d04c:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d04e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d050:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800d052:	68e0      	ldr	r0, [r4, #12]
 800d054:	f01b fb9f 	bl	8028796 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d058:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d05a:	68e3      	ldr	r3, [r4, #12]
 800d05c:	4251      	negs	r1, r2
 800d05e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d060:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d062:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d064:	4293      	cmp	r3, r2
 800d066:	d202      	bcs.n	800d06e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800d068:	68a3      	ldr	r3, [r4, #8]
 800d06a:	440b      	add	r3, r1
 800d06c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800d06e:	2d02      	cmp	r5, #2
 800d070:	d008      	beq.n	800d084 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d072:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d074:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d076:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d078:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d07a:	68a0      	ldr	r0, [r4, #8]
 800d07c:	f001 fde0 	bl	800ec40 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800d080:	60a5      	str	r5, [r4, #8]
 800d082:	e7d0      	b.n	800d026 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d084:	2e01      	cmp	r6, #1
 800d086:	bf38      	it	cc
 800d088:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800d08a:	2000      	movs	r0, #0
 800d08c:	e7cc      	b.n	800d028 <prvCopyDataToQueue+0x10>
 800d08e:	bf00      	nop

0800d090 <xQueueGenericCreateStatic>:
	{
 800d090:	b530      	push	{r4, r5, lr}
 800d092:	b083      	sub	sp, #12
 800d094:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d098:	b940      	cbnz	r0, 800d0ac <xQueueGenericCreateStatic+0x1c>
 800d09a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d09e:	f383 8811 	msr	BASEPRI, r3
 800d0a2:	f3bf 8f6f 	isb	sy
 800d0a6:	f3bf 8f4f 	dsb	sy
 800d0aa:	e7fe      	b.n	800d0aa <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800d0ac:	461d      	mov	r5, r3
 800d0ae:	b17b      	cbz	r3, 800d0d0 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d0b0:	b302      	cbz	r2, 800d0f4 <xQueueGenericCreateStatic+0x64>
 800d0b2:	b1b1      	cbz	r1, 800d0e2 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d0b4:	2350      	movs	r3, #80	; 0x50
 800d0b6:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d0b8:	9b01      	ldr	r3, [sp, #4]
 800d0ba:	2b50      	cmp	r3, #80	; 0x50
 800d0bc:	d023      	beq.n	800d106 <xQueueGenericCreateStatic+0x76>
 800d0be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d0c2:	f383 8811 	msr	BASEPRI, r3
 800d0c6:	f3bf 8f6f 	isb	sy
 800d0ca:	f3bf 8f4f 	dsb	sy
 800d0ce:	e7fe      	b.n	800d0ce <xQueueGenericCreateStatic+0x3e>
 800d0d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d0d4:	f383 8811 	msr	BASEPRI, r3
 800d0d8:	f3bf 8f6f 	isb	sy
 800d0dc:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d0e0:	e7fe      	b.n	800d0e0 <xQueueGenericCreateStatic+0x50>
 800d0e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d0e6:	f383 8811 	msr	BASEPRI, r3
 800d0ea:	f3bf 8f6f 	isb	sy
 800d0ee:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d0f2:	e7fe      	b.n	800d0f2 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d0f4:	bb89      	cbnz	r1, 800d15a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d0f6:	2250      	movs	r2, #80	; 0x50
 800d0f8:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d0fa:	9a01      	ldr	r2, [sp, #4]
 800d0fc:	2a50      	cmp	r2, #80	; 0x50
 800d0fe:	d1de      	bne.n	800d0be <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d100:	9a01      	ldr	r2, [sp, #4]
 800d102:	462a      	mov	r2, r5
 800d104:	e000      	b.n	800d108 <xQueueGenericCreateStatic+0x78>
 800d106:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d108:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d10a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800d10c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d110:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800d114:	f7ff fe1e 	bl	800cd54 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d118:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800d11c:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d11e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d120:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d124:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d126:	4401      	add	r1, r0
 800d128:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d12a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d12c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d12e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d130:	21ff      	movs	r1, #255	; 0xff
 800d132:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d136:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d138:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d13c:	f105 0010 	add.w	r0, r5, #16
 800d140:	f7ff fd58 	bl	800cbf4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d144:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d148:	f7ff fd54 	bl	800cbf4 <vListInitialise>
	taskEXIT_CRITICAL();
 800d14c:	f7ff fe24 	bl	800cd98 <vPortExitCritical>
	}
 800d150:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d152:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800d156:	b003      	add	sp, #12
 800d158:	bd30      	pop	{r4, r5, pc}
 800d15a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d15e:	f383 8811 	msr	BASEPRI, r3
 800d162:	f3bf 8f6f 	isb	sy
 800d166:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d16a:	e7fe      	b.n	800d16a <xQueueGenericCreateStatic+0xda>

0800d16c <xQueueGenericCreate>:
	{
 800d16c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d16e:	b940      	cbnz	r0, 800d182 <xQueueGenericCreate+0x16>
 800d170:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d174:	f383 8811 	msr	BASEPRI, r3
 800d178:	f3bf 8f6f 	isb	sy
 800d17c:	f3bf 8f4f 	dsb	sy
 800d180:	e7fe      	b.n	800d180 <xQueueGenericCreate+0x14>
 800d182:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d184:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d188:	3050      	adds	r0, #80	; 0x50
 800d18a:	460e      	mov	r6, r1
 800d18c:	4617      	mov	r7, r2
 800d18e:	f7ff fc11 	bl	800c9b4 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d192:	4604      	mov	r4, r0
 800d194:	b340      	cbz	r0, 800d1e8 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d196:	2300      	movs	r3, #0
 800d198:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d19c:	b336      	cbz	r6, 800d1ec <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d19e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800d1a2:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d1a4:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800d1a8:	f7ff fdd4 	bl	800cd54 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d1ac:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800d1b0:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d1b2:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d1b4:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d1b8:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d1ba:	440a      	add	r2, r1
 800d1bc:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d1be:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d1c0:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d1c2:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d1c4:	22ff      	movs	r2, #255	; 0xff
 800d1c6:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d1ca:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d1cc:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d1d0:	f104 0010 	add.w	r0, r4, #16
 800d1d4:	f7ff fd0e 	bl	800cbf4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d1d8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d1dc:	f7ff fd0a 	bl	800cbf4 <vListInitialise>
	taskEXIT_CRITICAL();
 800d1e0:	f7ff fdda 	bl	800cd98 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800d1e4:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800d1e8:	4620      	mov	r0, r4
 800d1ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d1ec:	4603      	mov	r3, r0
 800d1ee:	e7d8      	b.n	800d1a2 <xQueueGenericCreate+0x36>

0800d1f0 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800d1f0:	b940      	cbnz	r0, 800d204 <xQueueCreateCountingSemaphoreStatic+0x14>
 800d1f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d1f6:	f383 8811 	msr	BASEPRI, r3
 800d1fa:	f3bf 8f6f 	isb	sy
 800d1fe:	f3bf 8f4f 	dsb	sy
 800d202:	e7fe      	b.n	800d202 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d204:	4288      	cmp	r0, r1
 800d206:	d208      	bcs.n	800d21a <xQueueCreateCountingSemaphoreStatic+0x2a>
 800d208:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d20c:	f383 8811 	msr	BASEPRI, r3
 800d210:	f3bf 8f6f 	isb	sy
 800d214:	f3bf 8f4f 	dsb	sy
 800d218:	e7fe      	b.n	800d218 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800d21a:	b530      	push	{r4, r5, lr}
 800d21c:	4615      	mov	r5, r2
 800d21e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800d220:	2a00      	cmp	r2, #0
 800d222:	d03c      	beq.n	800d29e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d224:	2350      	movs	r3, #80	; 0x50
 800d226:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d228:	9b03      	ldr	r3, [sp, #12]
 800d22a:	2b50      	cmp	r3, #80	; 0x50
 800d22c:	d008      	beq.n	800d240 <xQueueCreateCountingSemaphoreStatic+0x50>
 800d22e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d232:	f383 8811 	msr	BASEPRI, r3
 800d236:	f3bf 8f6f 	isb	sy
 800d23a:	f3bf 8f4f 	dsb	sy
 800d23e:	e7fe      	b.n	800d23e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800d240:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d242:	2301      	movs	r3, #1
 800d244:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800d248:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d24a:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800d24e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d250:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800d252:	f7ff fd7f 	bl	800cd54 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d256:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800d25a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d25c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d25e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d262:	1ac3      	subs	r3, r0, r3
 800d264:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d266:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800d268:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800d26c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d270:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d272:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800d274:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d278:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d27a:	f105 0010 	add.w	r0, r5, #16
 800d27e:	f7ff fcb9 	bl	800cbf4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d282:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d286:	f7ff fcb5 	bl	800cbf4 <vListInitialise>
	taskEXIT_CRITICAL();
 800d28a:	f7ff fd85 	bl	800cd98 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d28e:	9901      	ldr	r1, [sp, #4]
 800d290:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800d292:	2302      	movs	r3, #2
	}
 800d294:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d296:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800d29a:	b005      	add	sp, #20
 800d29c:	bd30      	pop	{r4, r5, pc}
 800d29e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2a2:	f383 8811 	msr	BASEPRI, r3
 800d2a6:	f3bf 8f6f 	isb	sy
 800d2aa:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d2ae:	e7fe      	b.n	800d2ae <xQueueCreateCountingSemaphoreStatic+0xbe>

0800d2b0 <xQueueCreateCountingSemaphore>:
	{
 800d2b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800d2b2:	b940      	cbnz	r0, 800d2c6 <xQueueCreateCountingSemaphore+0x16>
 800d2b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2b8:	f383 8811 	msr	BASEPRI, r3
 800d2bc:	f3bf 8f6f 	isb	sy
 800d2c0:	f3bf 8f4f 	dsb	sy
 800d2c4:	e7fe      	b.n	800d2c4 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d2c6:	4288      	cmp	r0, r1
 800d2c8:	460e      	mov	r6, r1
 800d2ca:	4604      	mov	r4, r0
 800d2cc:	d208      	bcs.n	800d2e0 <xQueueCreateCountingSemaphore+0x30>
 800d2ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2d2:	f383 8811 	msr	BASEPRI, r3
 800d2d6:	f3bf 8f6f 	isb	sy
 800d2da:	f3bf 8f4f 	dsb	sy
 800d2de:	e7fe      	b.n	800d2de <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d2e0:	2050      	movs	r0, #80	; 0x50
 800d2e2:	f7ff fb67 	bl	800c9b4 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d2e6:	4605      	mov	r5, r0
 800d2e8:	b330      	cbz	r0, 800d338 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d2ea:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800d2ec:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d2f0:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800d2f4:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800d2f6:	f7ff fd2d 	bl	800cd54 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d2fa:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800d2fe:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d300:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d302:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d306:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d308:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d30a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d30c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800d30e:	22ff      	movs	r2, #255	; 0xff
 800d310:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d314:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d316:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800d318:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d31c:	f105 0010 	add.w	r0, r5, #16
 800d320:	f7ff fc68 	bl	800cbf4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d324:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d328:	f7ff fc64 	bl	800cbf4 <vListInitialise>
	taskEXIT_CRITICAL();
 800d32c:	f7ff fd34 	bl	800cd98 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800d330:	2302      	movs	r3, #2
 800d332:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d336:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800d338:	4628      	mov	r0, r5
 800d33a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d33c <xQueueGenericSend>:
{
 800d33c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d340:	b085      	sub	sp, #20
 800d342:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800d344:	2800      	cmp	r0, #0
 800d346:	f000 80a4 	beq.w	800d492 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d34a:	4688      	mov	r8, r1
 800d34c:	461f      	mov	r7, r3
 800d34e:	4604      	mov	r4, r0
 800d350:	2900      	cmp	r1, #0
 800d352:	f000 8091 	beq.w	800d478 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800d356:	2f02      	cmp	r7, #2
 800d358:	d10b      	bne.n	800d372 <xQueueGenericSend+0x36>
 800d35a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d35c:	2b01      	cmp	r3, #1
 800d35e:	d008      	beq.n	800d372 <xQueueGenericSend+0x36>
 800d360:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d364:	f383 8811 	msr	BASEPRI, r3
 800d368:	f3bf 8f6f 	isb	sy
 800d36c:	f3bf 8f4f 	dsb	sy
 800d370:	e7fe      	b.n	800d370 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d372:	f001 fc0f 	bl	800eb94 <xTaskGetSchedulerState>
 800d376:	4605      	mov	r5, r0
 800d378:	2800      	cmp	r0, #0
 800d37a:	f000 8093 	beq.w	800d4a4 <xQueueGenericSend+0x168>
 800d37e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d380:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800d384:	f7ff fce6 	bl	800cd54 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800d388:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d38a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d38c:	429a      	cmp	r2, r3
 800d38e:	f0c0 80ef 	bcc.w	800d570 <xQueueGenericSend+0x234>
 800d392:	2f02      	cmp	r7, #2
 800d394:	f000 80ec 	beq.w	800d570 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800d398:	9801      	ldr	r0, [sp, #4]
 800d39a:	2800      	cmp	r0, #0
 800d39c:	f000 8101 	beq.w	800d5a2 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800d3a0:	2d00      	cmp	r5, #0
 800d3a2:	f000 80e1 	beq.w	800d568 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800d3a6:	f7ff fcf7 	bl	800cd98 <vPortExitCritical>
		vTaskSuspendAll();
 800d3aa:	f001 fa49 	bl	800e840 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800d3ae:	f7ff fcd1 	bl	800cd54 <vPortEnterCritical>
 800d3b2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d3b6:	2bff      	cmp	r3, #255	; 0xff
 800d3b8:	bf04      	itt	eq
 800d3ba:	2300      	moveq	r3, #0
 800d3bc:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800d3c0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d3c4:	2bff      	cmp	r3, #255	; 0xff
 800d3c6:	bf04      	itt	eq
 800d3c8:	2300      	moveq	r3, #0
 800d3ca:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800d3ce:	f7ff fce3 	bl	800cd98 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800d3d2:	a901      	add	r1, sp, #4
 800d3d4:	a802      	add	r0, sp, #8
 800d3d6:	f001 fb8f 	bl	800eaf8 <xTaskCheckForTimeOut>
 800d3da:	2800      	cmp	r0, #0
 800d3dc:	f040 80e6 	bne.w	800d5ac <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800d3e0:	f7ff fcb8 	bl	800cd54 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800d3e4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d3e6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d3e8:	429a      	cmp	r2, r3
 800d3ea:	d068      	beq.n	800d4be <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800d3ec:	f7ff fcd4 	bl	800cd98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d3f0:	f7ff fcb0 	bl	800cd54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d3f4:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800d3f8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d3fa:	2d00      	cmp	r5, #0
 800d3fc:	dc04      	bgt.n	800d408 <xQueueGenericSend+0xcc>
 800d3fe:	e011      	b.n	800d424 <xQueueGenericSend+0xe8>
			--cTxLock;
 800d400:	1e6a      	subs	r2, r5, #1
 800d402:	b2d3      	uxtb	r3, r2
 800d404:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d406:	b16b      	cbz	r3, 800d424 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d408:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d40a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d40c:	b153      	cbz	r3, 800d424 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d40e:	f001 fb1f 	bl	800ea50 <xTaskRemoveFromEventList>
 800d412:	2800      	cmp	r0, #0
 800d414:	d0f4      	beq.n	800d400 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800d416:	f001 fbb7 	bl	800eb88 <vTaskMissedYield>
			--cTxLock;
 800d41a:	1e6a      	subs	r2, r5, #1
 800d41c:	b2d3      	uxtb	r3, r2
 800d41e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d420:	2b00      	cmp	r3, #0
 800d422:	d1f1      	bne.n	800d408 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800d424:	23ff      	movs	r3, #255	; 0xff
 800d426:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d42a:	f7ff fcb5 	bl	800cd98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d42e:	f7ff fc91 	bl	800cd54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d432:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800d436:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d438:	2d00      	cmp	r5, #0
 800d43a:	dd14      	ble.n	800d466 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d43c:	f104 0910 	add.w	r9, r4, #16
 800d440:	e003      	b.n	800d44a <xQueueGenericSend+0x10e>
				--cRxLock;
 800d442:	1e6a      	subs	r2, r5, #1
 800d444:	b2d3      	uxtb	r3, r2
 800d446:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d448:	b16b      	cbz	r3, 800d466 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d44a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d44c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d44e:	b153      	cbz	r3, 800d466 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d450:	f001 fafe 	bl	800ea50 <xTaskRemoveFromEventList>
 800d454:	2800      	cmp	r0, #0
 800d456:	d0f4      	beq.n	800d442 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800d458:	f001 fb96 	bl	800eb88 <vTaskMissedYield>
				--cRxLock;
 800d45c:	1e6a      	subs	r2, r5, #1
 800d45e:	b2d3      	uxtb	r3, r2
 800d460:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d462:	2b00      	cmp	r3, #0
 800d464:	d1f1      	bne.n	800d44a <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800d466:	23ff      	movs	r3, #255	; 0xff
 800d468:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d46c:	f7ff fc94 	bl	800cd98 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800d470:	f001 f9ee 	bl	800e850 <xTaskResumeAll>
 800d474:	2501      	movs	r5, #1
 800d476:	e785      	b.n	800d384 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d478:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d47a:	2b00      	cmp	r3, #0
 800d47c:	f43f af6b 	beq.w	800d356 <xQueueGenericSend+0x1a>
 800d480:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d484:	f383 8811 	msr	BASEPRI, r3
 800d488:	f3bf 8f6f 	isb	sy
 800d48c:	f3bf 8f4f 	dsb	sy
 800d490:	e7fe      	b.n	800d490 <xQueueGenericSend+0x154>
 800d492:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d496:	f383 8811 	msr	BASEPRI, r3
 800d49a:	f3bf 8f6f 	isb	sy
 800d49e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d4a2:	e7fe      	b.n	800d4a2 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d4a4:	9b01      	ldr	r3, [sp, #4]
 800d4a6:	2b00      	cmp	r3, #0
 800d4a8:	f43f af6a 	beq.w	800d380 <xQueueGenericSend+0x44>
 800d4ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d4b0:	f383 8811 	msr	BASEPRI, r3
 800d4b4:	f3bf 8f6f 	isb	sy
 800d4b8:	f3bf 8f4f 	dsb	sy
 800d4bc:	e7fe      	b.n	800d4bc <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800d4be:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800d4c2:	f7ff fc69 	bl	800cd98 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800d4c6:	9901      	ldr	r1, [sp, #4]
 800d4c8:	4648      	mov	r0, r9
 800d4ca:	f001 fa33 	bl	800e934 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800d4ce:	f7ff fc41 	bl	800cd54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d4d2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d4d6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d4d8:	2d00      	cmp	r5, #0
 800d4da:	dc04      	bgt.n	800d4e6 <xQueueGenericSend+0x1aa>
 800d4dc:	e011      	b.n	800d502 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800d4de:	1e6b      	subs	r3, r5, #1
 800d4e0:	b2da      	uxtb	r2, r3
 800d4e2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d4e4:	b16a      	cbz	r2, 800d502 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d4e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d4e8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d4ea:	b153      	cbz	r3, 800d502 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d4ec:	f001 fab0 	bl	800ea50 <xTaskRemoveFromEventList>
 800d4f0:	2800      	cmp	r0, #0
 800d4f2:	d0f4      	beq.n	800d4de <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800d4f4:	f001 fb48 	bl	800eb88 <vTaskMissedYield>
			--cTxLock;
 800d4f8:	1e6b      	subs	r3, r5, #1
 800d4fa:	b2da      	uxtb	r2, r3
 800d4fc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d4fe:	2a00      	cmp	r2, #0
 800d500:	d1f1      	bne.n	800d4e6 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800d502:	23ff      	movs	r3, #255	; 0xff
 800d504:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d508:	f7ff fc46 	bl	800cd98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d50c:	f7ff fc22 	bl	800cd54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d510:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d514:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d516:	2d00      	cmp	r5, #0
 800d518:	dc04      	bgt.n	800d524 <xQueueGenericSend+0x1e8>
 800d51a:	e011      	b.n	800d540 <xQueueGenericSend+0x204>
				--cRxLock;
 800d51c:	1e6b      	subs	r3, r5, #1
 800d51e:	b2da      	uxtb	r2, r3
 800d520:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d522:	b16a      	cbz	r2, 800d540 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d524:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d526:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d528:	b153      	cbz	r3, 800d540 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d52a:	f001 fa91 	bl	800ea50 <xTaskRemoveFromEventList>
 800d52e:	2800      	cmp	r0, #0
 800d530:	d0f4      	beq.n	800d51c <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800d532:	f001 fb29 	bl	800eb88 <vTaskMissedYield>
				--cRxLock;
 800d536:	1e6b      	subs	r3, r5, #1
 800d538:	b2da      	uxtb	r2, r3
 800d53a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d53c:	2a00      	cmp	r2, #0
 800d53e:	d1f1      	bne.n	800d524 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800d540:	23ff      	movs	r3, #255	; 0xff
 800d542:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d546:	f7ff fc27 	bl	800cd98 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800d54a:	f001 f981 	bl	800e850 <xTaskResumeAll>
 800d54e:	2800      	cmp	r0, #0
 800d550:	d190      	bne.n	800d474 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800d552:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d556:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d55a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d55e:	f3bf 8f4f 	dsb	sy
 800d562:	f3bf 8f6f 	isb	sy
 800d566:	e785      	b.n	800d474 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800d568:	a802      	add	r0, sp, #8
 800d56a:	f001 fab9 	bl	800eae0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800d56e:	e71a      	b.n	800d3a6 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d570:	463a      	mov	r2, r7
 800d572:	4641      	mov	r1, r8
 800d574:	4620      	mov	r0, r4
 800d576:	f7ff fd4f 	bl	800d018 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d57a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d57c:	2b00      	cmp	r3, #0
 800d57e:	d153      	bne.n	800d628 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800d580:	b148      	cbz	r0, 800d596 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800d582:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d586:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d58a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d58e:	f3bf 8f4f 	dsb	sy
 800d592:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800d596:	f7ff fbff 	bl	800cd98 <vPortExitCritical>
				return pdPASS;
 800d59a:	2001      	movs	r0, #1
}
 800d59c:	b005      	add	sp, #20
 800d59e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d5a2:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800d5a4:	f7ff fbf8 	bl	800cd98 <vPortExitCritical>
					return errQUEUE_FULL;
 800d5a8:	9800      	ldr	r0, [sp, #0]
 800d5aa:	e7f7      	b.n	800d59c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800d5ac:	f7ff fbd2 	bl	800cd54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d5b0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d5b4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d5b6:	2d00      	cmp	r5, #0
 800d5b8:	dd10      	ble.n	800d5dc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d5ba:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800d5be:	e003      	b.n	800d5c8 <xQueueGenericSend+0x28c>
			--cTxLock;
 800d5c0:	1e6b      	subs	r3, r5, #1
 800d5c2:	b2da      	uxtb	r2, r3
 800d5c4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d5c6:	b14a      	cbz	r2, 800d5dc <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d5c8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d5ca:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d5cc:	b133      	cbz	r3, 800d5dc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d5ce:	f001 fa3f 	bl	800ea50 <xTaskRemoveFromEventList>
 800d5d2:	2800      	cmp	r0, #0
 800d5d4:	d0f4      	beq.n	800d5c0 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800d5d6:	f001 fad7 	bl	800eb88 <vTaskMissedYield>
 800d5da:	e7f1      	b.n	800d5c0 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800d5dc:	23ff      	movs	r3, #255	; 0xff
 800d5de:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d5e2:	f7ff fbd9 	bl	800cd98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d5e6:	f7ff fbb5 	bl	800cd54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d5ea:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d5ee:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d5f0:	2d00      	cmp	r5, #0
 800d5f2:	dd10      	ble.n	800d616 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d5f4:	f104 0610 	add.w	r6, r4, #16
 800d5f8:	e003      	b.n	800d602 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800d5fa:	1e6b      	subs	r3, r5, #1
 800d5fc:	b2da      	uxtb	r2, r3
 800d5fe:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d600:	b14a      	cbz	r2, 800d616 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d602:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d604:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d606:	b133      	cbz	r3, 800d616 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d608:	f001 fa22 	bl	800ea50 <xTaskRemoveFromEventList>
 800d60c:	2800      	cmp	r0, #0
 800d60e:	d0f4      	beq.n	800d5fa <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800d610:	f001 faba 	bl	800eb88 <vTaskMissedYield>
 800d614:	e7f1      	b.n	800d5fa <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800d616:	23ff      	movs	r3, #255	; 0xff
 800d618:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d61c:	f7ff fbbc 	bl	800cd98 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800d620:	f001 f916 	bl	800e850 <xTaskResumeAll>
			return errQUEUE_FULL;
 800d624:	2000      	movs	r0, #0
 800d626:	e7b9      	b.n	800d59c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d628:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d62c:	f001 fa10 	bl	800ea50 <xTaskRemoveFromEventList>
 800d630:	2800      	cmp	r0, #0
 800d632:	d0b0      	beq.n	800d596 <xQueueGenericSend+0x25a>
 800d634:	e7a5      	b.n	800d582 <xQueueGenericSend+0x246>
 800d636:	bf00      	nop

0800d638 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800d638:	2800      	cmp	r0, #0
 800d63a:	d04b      	beq.n	800d6d4 <xQueueGenericSendFromISR+0x9c>
{
 800d63c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d640:	460e      	mov	r6, r1
 800d642:	4617      	mov	r7, r2
 800d644:	461d      	mov	r5, r3
 800d646:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d648:	b321      	cbz	r1, 800d694 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800d64a:	2d02      	cmp	r5, #2
 800d64c:	d10b      	bne.n	800d666 <xQueueGenericSendFromISR+0x2e>
 800d64e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d650:	2b01      	cmp	r3, #1
 800d652:	d008      	beq.n	800d666 <xQueueGenericSendFromISR+0x2e>
 800d654:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d658:	f383 8811 	msr	BASEPRI, r3
 800d65c:	f3bf 8f6f 	isb	sy
 800d660:	f3bf 8f4f 	dsb	sy
 800d664:	e7fe      	b.n	800d664 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800d666:	f7ff fca9 	bl	800cfbc <vPortValidateInterruptPriority>
	__asm volatile
 800d66a:	f3ef 8811 	mrs	r8, BASEPRI
 800d66e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d672:	f383 8811 	msr	BASEPRI, r3
 800d676:	f3bf 8f6f 	isb	sy
 800d67a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800d67e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d680:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d682:	429a      	cmp	r2, r3
 800d684:	d312      	bcc.n	800d6ac <xQueueGenericSendFromISR+0x74>
 800d686:	2d02      	cmp	r5, #2
 800d688:	d010      	beq.n	800d6ac <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800d68a:	2000      	movs	r0, #0
	__asm volatile
 800d68c:	f388 8811 	msr	BASEPRI, r8
}
 800d690:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d694:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d696:	2b00      	cmp	r3, #0
 800d698:	d0d7      	beq.n	800d64a <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800d69a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d69e:	f383 8811 	msr	BASEPRI, r3
 800d6a2:	f3bf 8f6f 	isb	sy
 800d6a6:	f3bf 8f4f 	dsb	sy
 800d6aa:	e7fe      	b.n	800d6aa <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d6ac:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800d6ae:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d6b2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d6b4:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800d6b6:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d6b8:	4620      	mov	r0, r4
 800d6ba:	f7ff fcad 	bl	800d018 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800d6be:	1c6b      	adds	r3, r5, #1
 800d6c0:	d011      	beq.n	800d6e6 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800d6c2:	1c6b      	adds	r3, r5, #1
 800d6c4:	b25b      	sxtb	r3, r3
 800d6c6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800d6ca:	2001      	movs	r0, #1
	__asm volatile
 800d6cc:	f388 8811 	msr	BASEPRI, r8
}
 800d6d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800d6d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6d8:	f383 8811 	msr	BASEPRI, r3
 800d6dc:	f3bf 8f6f 	isb	sy
 800d6e0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d6e4:	e7fe      	b.n	800d6e4 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d6e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d6e8:	2b00      	cmp	r3, #0
 800d6ea:	d0ee      	beq.n	800d6ca <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d6ec:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d6f0:	f001 f9ae 	bl	800ea50 <xTaskRemoveFromEventList>
 800d6f4:	2800      	cmp	r0, #0
 800d6f6:	d0e8      	beq.n	800d6ca <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800d6f8:	2f00      	cmp	r7, #0
 800d6fa:	d0e6      	beq.n	800d6ca <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800d6fc:	2001      	movs	r0, #1
 800d6fe:	6038      	str	r0, [r7, #0]
 800d700:	e7c4      	b.n	800d68c <xQueueGenericSendFromISR+0x54>
 800d702:	bf00      	nop

0800d704 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800d704:	b370      	cbz	r0, 800d764 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800d706:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800d708:	b570      	push	{r4, r5, r6, lr}
 800d70a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800d70c:	b143      	cbz	r3, 800d720 <xQueueGiveFromISR+0x1c>
 800d70e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d712:	f383 8811 	msr	BASEPRI, r3
 800d716:	f3bf 8f6f 	isb	sy
 800d71a:	f3bf 8f4f 	dsb	sy
 800d71e:	e7fe      	b.n	800d71e <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800d720:	6803      	ldr	r3, [r0, #0]
 800d722:	460c      	mov	r4, r1
 800d724:	b33b      	cbz	r3, 800d776 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800d726:	f7ff fc49 	bl	800cfbc <vPortValidateInterruptPriority>
	__asm volatile
 800d72a:	f3ef 8511 	mrs	r5, BASEPRI
 800d72e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d732:	f383 8811 	msr	BASEPRI, r3
 800d736:	f3bf 8f6f 	isb	sy
 800d73a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d73e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800d740:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800d742:	429a      	cmp	r2, r3
 800d744:	d923      	bls.n	800d78e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800d746:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d74a:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800d74c:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d74e:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800d750:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800d752:	d020      	beq.n	800d796 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800d754:	3301      	adds	r3, #1
 800d756:	b25b      	sxtb	r3, r3
 800d758:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800d75c:	2001      	movs	r0, #1
	__asm volatile
 800d75e:	f385 8811 	msr	BASEPRI, r5
}
 800d762:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800d764:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d768:	f383 8811 	msr	BASEPRI, r3
 800d76c:	f3bf 8f6f 	isb	sy
 800d770:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d774:	e7fe      	b.n	800d774 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800d776:	6883      	ldr	r3, [r0, #8]
 800d778:	2b00      	cmp	r3, #0
 800d77a:	d0d4      	beq.n	800d726 <xQueueGiveFromISR+0x22>
 800d77c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d780:	f383 8811 	msr	BASEPRI, r3
 800d784:	f3bf 8f6f 	isb	sy
 800d788:	f3bf 8f4f 	dsb	sy
 800d78c:	e7fe      	b.n	800d78c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800d78e:	2000      	movs	r0, #0
	__asm volatile
 800d790:	f385 8811 	msr	BASEPRI, r5
}
 800d794:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d796:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800d798:	2b00      	cmp	r3, #0
 800d79a:	d0df      	beq.n	800d75c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d79c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800d7a0:	f001 f956 	bl	800ea50 <xTaskRemoveFromEventList>
 800d7a4:	2800      	cmp	r0, #0
 800d7a6:	d0d9      	beq.n	800d75c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800d7a8:	2c00      	cmp	r4, #0
 800d7aa:	d0d7      	beq.n	800d75c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800d7ac:	2001      	movs	r0, #1
 800d7ae:	6020      	str	r0, [r4, #0]
 800d7b0:	e7ee      	b.n	800d790 <xQueueGiveFromISR+0x8c>
 800d7b2:	bf00      	nop

0800d7b4 <xQueueReceive>:
{
 800d7b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d7b8:	b085      	sub	sp, #20
 800d7ba:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800d7bc:	2800      	cmp	r0, #0
 800d7be:	f000 815c 	beq.w	800da7a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d7c2:	460f      	mov	r7, r1
 800d7c4:	4604      	mov	r4, r0
 800d7c6:	2900      	cmp	r1, #0
 800d7c8:	d079      	beq.n	800d8be <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d7ca:	f001 f9e3 	bl	800eb94 <xTaskGetSchedulerState>
 800d7ce:	2800      	cmp	r0, #0
 800d7d0:	f000 8081 	beq.w	800d8d6 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800d7d4:	f7ff fabe 	bl	800cd54 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d7d8:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d7da:	2d00      	cmp	r5, #0
 800d7dc:	f040 8138 	bne.w	800da50 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800d7e0:	9b01      	ldr	r3, [sp, #4]
 800d7e2:	2b00      	cmp	r3, #0
 800d7e4:	f000 80d5 	beq.w	800d992 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800d7e8:	a802      	add	r0, sp, #8
 800d7ea:	f001 f979 	bl	800eae0 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800d7ee:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d7f0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800d7f4:	f7ff fad0 	bl	800cd98 <vPortExitCritical>
		vTaskSuspendAll();
 800d7f8:	f001 f822 	bl	800e840 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800d7fc:	f7ff faaa 	bl	800cd54 <vPortEnterCritical>
 800d800:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d804:	2bff      	cmp	r3, #255	; 0xff
 800d806:	bf08      	it	eq
 800d808:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800d80c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d810:	2bff      	cmp	r3, #255	; 0xff
 800d812:	bf08      	it	eq
 800d814:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800d818:	f7ff fabe 	bl	800cd98 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800d81c:	a901      	add	r1, sp, #4
 800d81e:	a802      	add	r0, sp, #8
 800d820:	f001 f96a 	bl	800eaf8 <xTaskCheckForTimeOut>
 800d824:	2800      	cmp	r0, #0
 800d826:	d163      	bne.n	800d8f0 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800d828:	f7ff fa94 	bl	800cd54 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800d82c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800d82e:	2b00      	cmp	r3, #0
 800d830:	f000 80b5 	beq.w	800d99e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800d834:	f7ff fab0 	bl	800cd98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d838:	f7ff fa8c 	bl	800cd54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d83c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d840:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d842:	2d00      	cmp	r5, #0
 800d844:	dc04      	bgt.n	800d850 <xQueueReceive+0x9c>
 800d846:	e011      	b.n	800d86c <xQueueReceive+0xb8>
			--cTxLock;
 800d848:	1e6b      	subs	r3, r5, #1
 800d84a:	b2da      	uxtb	r2, r3
 800d84c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d84e:	b16a      	cbz	r2, 800d86c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d850:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d852:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d854:	b153      	cbz	r3, 800d86c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d856:	f001 f8fb 	bl	800ea50 <xTaskRemoveFromEventList>
 800d85a:	2800      	cmp	r0, #0
 800d85c:	d0f4      	beq.n	800d848 <xQueueReceive+0x94>
						vTaskMissedYield();
 800d85e:	f001 f993 	bl	800eb88 <vTaskMissedYield>
			--cTxLock;
 800d862:	1e6b      	subs	r3, r5, #1
 800d864:	b2da      	uxtb	r2, r3
 800d866:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d868:	2a00      	cmp	r2, #0
 800d86a:	d1f1      	bne.n	800d850 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800d86c:	23ff      	movs	r3, #255	; 0xff
 800d86e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d872:	f7ff fa91 	bl	800cd98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d876:	f7ff fa6d 	bl	800cd54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d87a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d87e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d880:	2d00      	cmp	r5, #0
 800d882:	dd14      	ble.n	800d8ae <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d884:	f104 0910 	add.w	r9, r4, #16
 800d888:	e003      	b.n	800d892 <xQueueReceive+0xde>
				--cRxLock;
 800d88a:	1e6b      	subs	r3, r5, #1
 800d88c:	b2da      	uxtb	r2, r3
 800d88e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d890:	b16a      	cbz	r2, 800d8ae <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d892:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d894:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d896:	b153      	cbz	r3, 800d8ae <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d898:	f001 f8da 	bl	800ea50 <xTaskRemoveFromEventList>
 800d89c:	2800      	cmp	r0, #0
 800d89e:	d0f4      	beq.n	800d88a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800d8a0:	f001 f972 	bl	800eb88 <vTaskMissedYield>
				--cRxLock;
 800d8a4:	1e6b      	subs	r3, r5, #1
 800d8a6:	b2da      	uxtb	r2, r3
 800d8a8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d8aa:	2a00      	cmp	r2, #0
 800d8ac:	d1f1      	bne.n	800d892 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800d8ae:	23ff      	movs	r3, #255	; 0xff
 800d8b0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d8b4:	f7ff fa70 	bl	800cd98 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800d8b8:	f000 ffca 	bl	800e850 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800d8bc:	e060      	b.n	800d980 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d8be:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d8c0:	2b00      	cmp	r3, #0
 800d8c2:	d082      	beq.n	800d7ca <xQueueReceive+0x16>
	__asm volatile
 800d8c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8c8:	f383 8811 	msr	BASEPRI, r3
 800d8cc:	f3bf 8f6f 	isb	sy
 800d8d0:	f3bf 8f4f 	dsb	sy
 800d8d4:	e7fe      	b.n	800d8d4 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d8d6:	9b01      	ldr	r3, [sp, #4]
 800d8d8:	2b00      	cmp	r3, #0
 800d8da:	f43f af7b 	beq.w	800d7d4 <xQueueReceive+0x20>
 800d8de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8e2:	f383 8811 	msr	BASEPRI, r3
 800d8e6:	f3bf 8f6f 	isb	sy
 800d8ea:	f3bf 8f4f 	dsb	sy
 800d8ee:	e7fe      	b.n	800d8ee <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800d8f0:	f7ff fa30 	bl	800cd54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d8f4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d8f8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d8fa:	2d00      	cmp	r5, #0
 800d8fc:	dc04      	bgt.n	800d908 <xQueueReceive+0x154>
 800d8fe:	e011      	b.n	800d924 <xQueueReceive+0x170>
			--cTxLock;
 800d900:	1e6b      	subs	r3, r5, #1
 800d902:	b2da      	uxtb	r2, r3
 800d904:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d906:	b16a      	cbz	r2, 800d924 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d908:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d90a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d90c:	b153      	cbz	r3, 800d924 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d90e:	f001 f89f 	bl	800ea50 <xTaskRemoveFromEventList>
 800d912:	2800      	cmp	r0, #0
 800d914:	d0f4      	beq.n	800d900 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800d916:	f001 f937 	bl	800eb88 <vTaskMissedYield>
			--cTxLock;
 800d91a:	1e6b      	subs	r3, r5, #1
 800d91c:	b2da      	uxtb	r2, r3
 800d91e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d920:	2a00      	cmp	r2, #0
 800d922:	d1f1      	bne.n	800d908 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800d924:	23ff      	movs	r3, #255	; 0xff
 800d926:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d92a:	f7ff fa35 	bl	800cd98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d92e:	f7ff fa11 	bl	800cd54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d932:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d936:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d938:	2d00      	cmp	r5, #0
 800d93a:	dd14      	ble.n	800d966 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d93c:	f104 0910 	add.w	r9, r4, #16
 800d940:	e003      	b.n	800d94a <xQueueReceive+0x196>
				--cRxLock;
 800d942:	1e6b      	subs	r3, r5, #1
 800d944:	b2da      	uxtb	r2, r3
 800d946:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d948:	b16a      	cbz	r2, 800d966 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d94a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d94c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d94e:	b153      	cbz	r3, 800d966 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d950:	f001 f87e 	bl	800ea50 <xTaskRemoveFromEventList>
 800d954:	2800      	cmp	r0, #0
 800d956:	d0f4      	beq.n	800d942 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800d958:	f001 f916 	bl	800eb88 <vTaskMissedYield>
				--cRxLock;
 800d95c:	1e6b      	subs	r3, r5, #1
 800d95e:	b2da      	uxtb	r2, r3
 800d960:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d962:	2a00      	cmp	r2, #0
 800d964:	d1f1      	bne.n	800d94a <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800d966:	23ff      	movs	r3, #255	; 0xff
 800d968:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d96c:	f7ff fa14 	bl	800cd98 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800d970:	f000 ff6e 	bl	800e850 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800d974:	f7ff f9ee 	bl	800cd54 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800d978:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800d97a:	b153      	cbz	r3, 800d992 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800d97c:	f7ff fa0c 	bl	800cd98 <vPortExitCritical>
		taskENTER_CRITICAL();
 800d980:	f7ff f9e8 	bl	800cd54 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d984:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d986:	2d00      	cmp	r5, #0
 800d988:	d162      	bne.n	800da50 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800d98a:	9b01      	ldr	r3, [sp, #4]
 800d98c:	2b00      	cmp	r3, #0
 800d98e:	f47f af31 	bne.w	800d7f4 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800d992:	f7ff fa01 	bl	800cd98 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800d996:	2000      	movs	r0, #0
}
 800d998:	b005      	add	sp, #20
 800d99a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800d99e:	f7ff f9fb 	bl	800cd98 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800d9a2:	9901      	ldr	r1, [sp, #4]
 800d9a4:	4630      	mov	r0, r6
 800d9a6:	f000 ffc5 	bl	800e934 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800d9aa:	f7ff f9d3 	bl	800cd54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d9ae:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d9b2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d9b4:	2d00      	cmp	r5, #0
 800d9b6:	dc04      	bgt.n	800d9c2 <xQueueReceive+0x20e>
 800d9b8:	e011      	b.n	800d9de <xQueueReceive+0x22a>
			--cTxLock;
 800d9ba:	1e6b      	subs	r3, r5, #1
 800d9bc:	b2da      	uxtb	r2, r3
 800d9be:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d9c0:	b16a      	cbz	r2, 800d9de <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d9c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d9c4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d9c6:	b153      	cbz	r3, 800d9de <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d9c8:	f001 f842 	bl	800ea50 <xTaskRemoveFromEventList>
 800d9cc:	2800      	cmp	r0, #0
 800d9ce:	d0f4      	beq.n	800d9ba <xQueueReceive+0x206>
						vTaskMissedYield();
 800d9d0:	f001 f8da 	bl	800eb88 <vTaskMissedYield>
			--cTxLock;
 800d9d4:	1e6b      	subs	r3, r5, #1
 800d9d6:	b2da      	uxtb	r2, r3
 800d9d8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d9da:	2a00      	cmp	r2, #0
 800d9dc:	d1f1      	bne.n	800d9c2 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800d9de:	23ff      	movs	r3, #255	; 0xff
 800d9e0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d9e4:	f7ff f9d8 	bl	800cd98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d9e8:	f7ff f9b4 	bl	800cd54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d9ec:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d9f0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d9f2:	2d00      	cmp	r5, #0
 800d9f4:	dd14      	ble.n	800da20 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d9f6:	f104 0910 	add.w	r9, r4, #16
 800d9fa:	e003      	b.n	800da04 <xQueueReceive+0x250>
				--cRxLock;
 800d9fc:	1e6b      	subs	r3, r5, #1
 800d9fe:	b2da      	uxtb	r2, r3
 800da00:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800da02:	b16a      	cbz	r2, 800da20 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800da04:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800da06:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800da08:	b153      	cbz	r3, 800da20 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800da0a:	f001 f821 	bl	800ea50 <xTaskRemoveFromEventList>
 800da0e:	2800      	cmp	r0, #0
 800da10:	d0f4      	beq.n	800d9fc <xQueueReceive+0x248>
					vTaskMissedYield();
 800da12:	f001 f8b9 	bl	800eb88 <vTaskMissedYield>
				--cRxLock;
 800da16:	1e6b      	subs	r3, r5, #1
 800da18:	b2da      	uxtb	r2, r3
 800da1a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800da1c:	2a00      	cmp	r2, #0
 800da1e:	d1f1      	bne.n	800da04 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800da20:	23ff      	movs	r3, #255	; 0xff
 800da22:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800da26:	f7ff f9b7 	bl	800cd98 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800da2a:	f000 ff11 	bl	800e850 <xTaskResumeAll>
 800da2e:	2800      	cmp	r0, #0
 800da30:	d1a6      	bne.n	800d980 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800da32:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800da36:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800da3a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800da3e:	f3bf 8f4f 	dsb	sy
 800da42:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800da46:	f7ff f985 	bl	800cd54 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800da4a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800da4c:	2d00      	cmp	r5, #0
 800da4e:	d09c      	beq.n	800d98a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800da50:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800da52:	b152      	cbz	r2, 800da6a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800da54:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800da56:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800da58:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800da5a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800da5c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800da5e:	bf24      	itt	cs
 800da60:	6821      	ldrcs	r1, [r4, #0]
 800da62:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800da64:	4638      	mov	r0, r7
 800da66:	f01a fe96 	bl	8028796 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800da6a:	3d01      	subs	r5, #1
 800da6c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800da6e:	6923      	ldr	r3, [r4, #16]
 800da70:	b963      	cbnz	r3, 800da8c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800da72:	f7ff f991 	bl	800cd98 <vPortExitCritical>
				return pdPASS;
 800da76:	2001      	movs	r0, #1
 800da78:	e78e      	b.n	800d998 <xQueueReceive+0x1e4>
 800da7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da7e:	f383 8811 	msr	BASEPRI, r3
 800da82:	f3bf 8f6f 	isb	sy
 800da86:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800da8a:	e7fe      	b.n	800da8a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800da8c:	f104 0010 	add.w	r0, r4, #16
 800da90:	f000 ffde 	bl	800ea50 <xTaskRemoveFromEventList>
 800da94:	2800      	cmp	r0, #0
 800da96:	d0ec      	beq.n	800da72 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800da98:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800da9c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800daa0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800daa4:	f3bf 8f4f 	dsb	sy
 800daa8:	f3bf 8f6f 	isb	sy
 800daac:	e7e1      	b.n	800da72 <xQueueReceive+0x2be>
 800daae:	bf00      	nop

0800dab0 <xQueueSemaphoreTake>:
{
 800dab0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dab4:	b084      	sub	sp, #16
 800dab6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800dab8:	2800      	cmp	r0, #0
 800daba:	d05c      	beq.n	800db76 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800dabc:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800dabe:	4604      	mov	r4, r0
 800dac0:	b147      	cbz	r7, 800dad4 <xQueueSemaphoreTake+0x24>
 800dac2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dac6:	f383 8811 	msr	BASEPRI, r3
 800daca:	f3bf 8f6f 	isb	sy
 800dace:	f3bf 8f4f 	dsb	sy
 800dad2:	e7fe      	b.n	800dad2 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dad4:	f001 f85e 	bl	800eb94 <xTaskGetSchedulerState>
 800dad8:	4605      	mov	r5, r0
 800dada:	2800      	cmp	r0, #0
 800dadc:	d054      	beq.n	800db88 <xQueueSemaphoreTake+0xd8>
 800dade:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dae0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800dae4:	f7ff f936 	bl	800cd54 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800dae8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800daea:	2b00      	cmp	r3, #0
 800daec:	f040 8148 	bne.w	800dd80 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800daf0:	9b01      	ldr	r3, [sp, #4]
 800daf2:	2b00      	cmp	r3, #0
 800daf4:	f000 813a 	beq.w	800dd6c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800daf8:	2d00      	cmp	r5, #0
 800dafa:	f000 809d 	beq.w	800dc38 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800dafe:	f7ff f94b 	bl	800cd98 <vPortExitCritical>
		vTaskSuspendAll();
 800db02:	f000 fe9d 	bl	800e840 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800db06:	f7ff f925 	bl	800cd54 <vPortEnterCritical>
 800db0a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800db0e:	2bff      	cmp	r3, #255	; 0xff
 800db10:	bf04      	itt	eq
 800db12:	2300      	moveq	r3, #0
 800db14:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800db18:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800db1c:	2bff      	cmp	r3, #255	; 0xff
 800db1e:	bf04      	itt	eq
 800db20:	2300      	moveq	r3, #0
 800db22:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800db26:	f7ff f937 	bl	800cd98 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800db2a:	a901      	add	r1, sp, #4
 800db2c:	a802      	add	r0, sp, #8
 800db2e:	f000 ffe3 	bl	800eaf8 <xTaskCheckForTimeOut>
 800db32:	2800      	cmp	r0, #0
 800db34:	d135      	bne.n	800dba2 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800db36:	f7ff f90d 	bl	800cd54 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800db3a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800db3c:	2b00      	cmp	r3, #0
 800db3e:	f000 80a4 	beq.w	800dc8a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800db42:	f7ff f929 	bl	800cd98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800db46:	f7ff f905 	bl	800cd54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800db4a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800db4e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800db50:	2d00      	cmp	r5, #0
 800db52:	dc05      	bgt.n	800db60 <xQueueSemaphoreTake+0xb0>
 800db54:	e074      	b.n	800dc40 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800db56:	1e6b      	subs	r3, r5, #1
 800db58:	b2da      	uxtb	r2, r3
 800db5a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800db5c:	2a00      	cmp	r2, #0
 800db5e:	d06f      	beq.n	800dc40 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800db60:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800db62:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800db64:	2b00      	cmp	r3, #0
 800db66:	d06b      	beq.n	800dc40 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800db68:	f000 ff72 	bl	800ea50 <xTaskRemoveFromEventList>
 800db6c:	2800      	cmp	r0, #0
 800db6e:	d0f2      	beq.n	800db56 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800db70:	f001 f80a 	bl	800eb88 <vTaskMissedYield>
 800db74:	e7ef      	b.n	800db56 <xQueueSemaphoreTake+0xa6>
 800db76:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db7a:	f383 8811 	msr	BASEPRI, r3
 800db7e:	f3bf 8f6f 	isb	sy
 800db82:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800db86:	e7fe      	b.n	800db86 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800db88:	9b01      	ldr	r3, [sp, #4]
 800db8a:	2b00      	cmp	r3, #0
 800db8c:	f000 80d4 	beq.w	800dd38 <xQueueSemaphoreTake+0x288>
 800db90:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db94:	f383 8811 	msr	BASEPRI, r3
 800db98:	f3bf 8f6f 	isb	sy
 800db9c:	f3bf 8f4f 	dsb	sy
 800dba0:	e7fe      	b.n	800dba0 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800dba2:	f7ff f8d7 	bl	800cd54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dba6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dbaa:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dbac:	2d00      	cmp	r5, #0
 800dbae:	dc04      	bgt.n	800dbba <xQueueSemaphoreTake+0x10a>
 800dbb0:	e011      	b.n	800dbd6 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800dbb2:	1e6b      	subs	r3, r5, #1
 800dbb4:	b2da      	uxtb	r2, r3
 800dbb6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dbb8:	b16a      	cbz	r2, 800dbd6 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dbba:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dbbc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dbbe:	b153      	cbz	r3, 800dbd6 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dbc0:	f000 ff46 	bl	800ea50 <xTaskRemoveFromEventList>
 800dbc4:	2800      	cmp	r0, #0
 800dbc6:	d0f4      	beq.n	800dbb2 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800dbc8:	f000 ffde 	bl	800eb88 <vTaskMissedYield>
			--cTxLock;
 800dbcc:	1e6b      	subs	r3, r5, #1
 800dbce:	b2da      	uxtb	r2, r3
 800dbd0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dbd2:	2a00      	cmp	r2, #0
 800dbd4:	d1f1      	bne.n	800dbba <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800dbd6:	23ff      	movs	r3, #255	; 0xff
 800dbd8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dbdc:	f7ff f8dc 	bl	800cd98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dbe0:	f7ff f8b8 	bl	800cd54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dbe4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dbe8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dbea:	2d00      	cmp	r5, #0
 800dbec:	dd14      	ble.n	800dc18 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dbee:	f104 0810 	add.w	r8, r4, #16
 800dbf2:	e003      	b.n	800dbfc <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800dbf4:	1e6b      	subs	r3, r5, #1
 800dbf6:	b2da      	uxtb	r2, r3
 800dbf8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dbfa:	b16a      	cbz	r2, 800dc18 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dbfc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dbfe:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dc00:	b153      	cbz	r3, 800dc18 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dc02:	f000 ff25 	bl	800ea50 <xTaskRemoveFromEventList>
 800dc06:	2800      	cmp	r0, #0
 800dc08:	d0f4      	beq.n	800dbf4 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800dc0a:	f000 ffbd 	bl	800eb88 <vTaskMissedYield>
				--cRxLock;
 800dc0e:	1e6b      	subs	r3, r5, #1
 800dc10:	b2da      	uxtb	r2, r3
 800dc12:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dc14:	2a00      	cmp	r2, #0
 800dc16:	d1f1      	bne.n	800dbfc <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800dc18:	23ff      	movs	r3, #255	; 0xff
 800dc1a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dc1e:	f7ff f8bb 	bl	800cd98 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800dc22:	f000 fe15 	bl	800e850 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800dc26:	f7ff f895 	bl	800cd54 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800dc2a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800dc2c:	2b00      	cmp	r3, #0
 800dc2e:	d07c      	beq.n	800dd2a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800dc30:	f7ff f8b2 	bl	800cd98 <vPortExitCritical>
	return xReturn;
 800dc34:	2501      	movs	r5, #1
 800dc36:	e755      	b.n	800dae4 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800dc38:	a802      	add	r0, sp, #8
 800dc3a:	f000 ff51 	bl	800eae0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800dc3e:	e75e      	b.n	800dafe <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800dc40:	23ff      	movs	r3, #255	; 0xff
 800dc42:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dc46:	f7ff f8a7 	bl	800cd98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dc4a:	f7ff f883 	bl	800cd54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dc4e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dc52:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dc54:	2d00      	cmp	r5, #0
 800dc56:	dd10      	ble.n	800dc7a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dc58:	f104 0810 	add.w	r8, r4, #16
 800dc5c:	e003      	b.n	800dc66 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800dc5e:	1e6b      	subs	r3, r5, #1
 800dc60:	b2da      	uxtb	r2, r3
 800dc62:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dc64:	b14a      	cbz	r2, 800dc7a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dc66:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dc68:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dc6a:	b133      	cbz	r3, 800dc7a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dc6c:	f000 fef0 	bl	800ea50 <xTaskRemoveFromEventList>
 800dc70:	2800      	cmp	r0, #0
 800dc72:	d0f4      	beq.n	800dc5e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800dc74:	f000 ff88 	bl	800eb88 <vTaskMissedYield>
 800dc78:	e7f1      	b.n	800dc5e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800dc7a:	23ff      	movs	r3, #255	; 0xff
 800dc7c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dc80:	f7ff f88a 	bl	800cd98 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800dc84:	f000 fde4 	bl	800e850 <xTaskResumeAll>
 800dc88:	e7d4      	b.n	800dc34 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800dc8a:	f7ff f885 	bl	800cd98 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800dc8e:	6823      	ldr	r3, [r4, #0]
 800dc90:	2b00      	cmp	r3, #0
 800dc92:	d062      	beq.n	800dd5a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800dc94:	9901      	ldr	r1, [sp, #4]
 800dc96:	4630      	mov	r0, r6
 800dc98:	f000 fe4c 	bl	800e934 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800dc9c:	f7ff f85a 	bl	800cd54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dca0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dca4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dca6:	2d00      	cmp	r5, #0
 800dca8:	dc04      	bgt.n	800dcb4 <xQueueSemaphoreTake+0x204>
 800dcaa:	e00d      	b.n	800dcc8 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800dcac:	1e6b      	subs	r3, r5, #1
 800dcae:	b2da      	uxtb	r2, r3
 800dcb0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dcb2:	b14a      	cbz	r2, 800dcc8 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dcb4:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dcb6:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dcb8:	b133      	cbz	r3, 800dcc8 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dcba:	f000 fec9 	bl	800ea50 <xTaskRemoveFromEventList>
 800dcbe:	2800      	cmp	r0, #0
 800dcc0:	d0f4      	beq.n	800dcac <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800dcc2:	f000 ff61 	bl	800eb88 <vTaskMissedYield>
 800dcc6:	e7f1      	b.n	800dcac <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800dcc8:	23ff      	movs	r3, #255	; 0xff
 800dcca:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dcce:	f7ff f863 	bl	800cd98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dcd2:	f7ff f83f 	bl	800cd54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dcd6:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dcda:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dcdc:	2d00      	cmp	r5, #0
 800dcde:	dd10      	ble.n	800dd02 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dce0:	f104 0810 	add.w	r8, r4, #16
 800dce4:	e003      	b.n	800dcee <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800dce6:	1e6b      	subs	r3, r5, #1
 800dce8:	b2da      	uxtb	r2, r3
 800dcea:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dcec:	b14a      	cbz	r2, 800dd02 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dcee:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dcf0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dcf2:	b133      	cbz	r3, 800dd02 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dcf4:	f000 feac 	bl	800ea50 <xTaskRemoveFromEventList>
 800dcf8:	2800      	cmp	r0, #0
 800dcfa:	d0f4      	beq.n	800dce6 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800dcfc:	f000 ff44 	bl	800eb88 <vTaskMissedYield>
 800dd00:	e7f1      	b.n	800dce6 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800dd02:	23ff      	movs	r3, #255	; 0xff
 800dd04:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dd08:	f7ff f846 	bl	800cd98 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800dd0c:	f000 fda0 	bl	800e850 <xTaskResumeAll>
 800dd10:	2800      	cmp	r0, #0
 800dd12:	d18f      	bne.n	800dc34 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800dd14:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dd18:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dd1c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dd20:	f3bf 8f4f 	dsb	sy
 800dd24:	f3bf 8f6f 	isb	sy
 800dd28:	e784      	b.n	800dc34 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800dd2a:	f7ff f835 	bl	800cd98 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800dd2e:	b92f      	cbnz	r7, 800dd3c <xQueueSemaphoreTake+0x28c>
}
 800dd30:	4638      	mov	r0, r7
 800dd32:	b004      	add	sp, #16
 800dd34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dd38:	4607      	mov	r7, r0
 800dd3a:	e6d1      	b.n	800dae0 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800dd3c:	f7ff f80a 	bl	800cd54 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800dd40:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800dd42:	b119      	cbz	r1, 800dd4c <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800dd44:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800dd46:	6819      	ldr	r1, [r3, #0]
 800dd48:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800dd4c:	68a0      	ldr	r0, [r4, #8]
 800dd4e:	f000 ffbd 	bl	800eccc <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800dd52:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800dd54:	f7ff f820 	bl	800cd98 <vPortExitCritical>
 800dd58:	e7ea      	b.n	800dd30 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800dd5a:	f7fe fffb 	bl	800cd54 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800dd5e:	68a0      	ldr	r0, [r4, #8]
 800dd60:	f000 ff28 	bl	800ebb4 <xTaskPriorityInherit>
 800dd64:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800dd66:	f7ff f817 	bl	800cd98 <vPortExitCritical>
 800dd6a:	e793      	b.n	800dc94 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800dd6c:	b197      	cbz	r7, 800dd94 <xQueueSemaphoreTake+0x2e4>
 800dd6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd72:	f383 8811 	msr	BASEPRI, r3
 800dd76:	f3bf 8f6f 	isb	sy
 800dd7a:	f3bf 8f4f 	dsb	sy
 800dd7e:	e7fe      	b.n	800dd7e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800dd80:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800dd82:	3b01      	subs	r3, #1
 800dd84:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800dd86:	b1ca      	cbz	r2, 800ddbc <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dd88:	6923      	ldr	r3, [r4, #16]
 800dd8a:	b933      	cbnz	r3, 800dd9a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800dd8c:	f7ff f804 	bl	800cd98 <vPortExitCritical>
				return pdPASS;
 800dd90:	2701      	movs	r7, #1
 800dd92:	e7cd      	b.n	800dd30 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800dd94:	f7ff f800 	bl	800cd98 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800dd98:	e7ca      	b.n	800dd30 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd9a:	f104 0010 	add.w	r0, r4, #16
 800dd9e:	f000 fe57 	bl	800ea50 <xTaskRemoveFromEventList>
 800dda2:	2800      	cmp	r0, #0
 800dda4:	d0f2      	beq.n	800dd8c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800dda6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ddaa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ddae:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ddb2:	f3bf 8f4f 	dsb	sy
 800ddb6:	f3bf 8f6f 	isb	sy
 800ddba:	e7e7      	b.n	800dd8c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800ddbc:	f000 ffda 	bl	800ed74 <pvTaskIncrementMutexHeldCount>
 800ddc0:	60a0      	str	r0, [r4, #8]
 800ddc2:	e7e1      	b.n	800dd88 <xQueueSemaphoreTake+0x2d8>

0800ddc4 <xQueueReceiveFromISR>:
{
 800ddc4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800ddc8:	b310      	cbz	r0, 800de10 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ddca:	460e      	mov	r6, r1
 800ddcc:	4617      	mov	r7, r2
 800ddce:	4604      	mov	r4, r0
 800ddd0:	b191      	cbz	r1, 800ddf8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ddd2:	f7ff f8f3 	bl	800cfbc <vPortValidateInterruptPriority>
	__asm volatile
 800ddd6:	f3ef 8911 	mrs	r9, BASEPRI
 800ddda:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ddde:	f383 8811 	msr	BASEPRI, r3
 800dde2:	f3bf 8f6f 	isb	sy
 800dde6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ddea:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ddec:	b9cd      	cbnz	r5, 800de22 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800ddee:	4628      	mov	r0, r5
	__asm volatile
 800ddf0:	f389 8811 	msr	BASEPRI, r9
}
 800ddf4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ddf8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ddfa:	2b00      	cmp	r3, #0
 800ddfc:	d0e9      	beq.n	800ddd2 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800ddfe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de02:	f383 8811 	msr	BASEPRI, r3
 800de06:	f3bf 8f6f 	isb	sy
 800de0a:	f3bf 8f4f 	dsb	sy
 800de0e:	e7fe      	b.n	800de0e <xQueueReceiveFromISR+0x4a>
 800de10:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de14:	f383 8811 	msr	BASEPRI, r3
 800de18:	f3bf 8f6f 	isb	sy
 800de1c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800de20:	e7fe      	b.n	800de20 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800de22:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800de26:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800de28:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800de2c:	b152      	cbz	r2, 800de44 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800de2e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800de30:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800de32:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800de34:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800de36:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800de38:	bf24      	itt	cs
 800de3a:	6821      	ldrcs	r1, [r4, #0]
 800de3c:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800de3e:	4630      	mov	r0, r6
 800de40:	f01a fca9 	bl	8028796 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800de44:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800de46:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800de4a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800de4c:	d009      	beq.n	800de62 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800de4e:	f108 0301 	add.w	r3, r8, #1
 800de52:	b25b      	sxtb	r3, r3
 800de54:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800de58:	2001      	movs	r0, #1
	__asm volatile
 800de5a:	f389 8811 	msr	BASEPRI, r9
}
 800de5e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800de62:	6923      	ldr	r3, [r4, #16]
 800de64:	2b00      	cmp	r3, #0
 800de66:	d0f7      	beq.n	800de58 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de68:	f104 0010 	add.w	r0, r4, #16
 800de6c:	f000 fdf0 	bl	800ea50 <xTaskRemoveFromEventList>
 800de70:	2800      	cmp	r0, #0
 800de72:	d0f1      	beq.n	800de58 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800de74:	2f00      	cmp	r7, #0
 800de76:	d0ef      	beq.n	800de58 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800de78:	2001      	movs	r0, #1
 800de7a:	6038      	str	r0, [r7, #0]
 800de7c:	e7b8      	b.n	800ddf0 <xQueueReceiveFromISR+0x2c>
 800de7e:	bf00      	nop

0800de80 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800de80:	b158      	cbz	r0, 800de9a <uxQueueMessagesWaiting+0x1a>
{
 800de82:	b510      	push	{r4, lr}
 800de84:	4604      	mov	r4, r0
 800de86:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800de88:	f7fe ff64 	bl	800cd54 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800de8c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800de8e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800de90:	f7fe ff82 	bl	800cd98 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800de94:	9801      	ldr	r0, [sp, #4]
 800de96:	b002      	add	sp, #8
 800de98:	bd10      	pop	{r4, pc}
	__asm volatile
 800de9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de9e:	f383 8811 	msr	BASEPRI, r3
 800dea2:	f3bf 8f6f 	isb	sy
 800dea6:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800deaa:	e7fe      	b.n	800deaa <uxQueueMessagesWaiting+0x2a>

0800deac <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800deac:	b108      	cbz	r0, 800deb2 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800deae:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800deb0:	4770      	bx	lr
 800deb2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800deb6:	f383 8811 	msr	BASEPRI, r3
 800deba:	f3bf 8f6f 	isb	sy
 800debe:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800dec2:	e7fe      	b.n	800dec2 <uxQueueMessagesWaitingFromISR+0x16>
 800dec4:	0000      	movs	r0, r0
	...

0800dec8 <vQueueDelete>:
	configASSERT( pxQueue );
 800dec8:	b1f0      	cbz	r0, 800df08 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800deca:	4b21      	ldr	r3, [pc, #132]	; (800df50 <vQueueDelete+0x88>)
 800decc:	685a      	ldr	r2, [r3, #4]
 800dece:	4290      	cmp	r0, r2
 800ded0:	d025      	beq.n	800df1e <vQueueDelete+0x56>
 800ded2:	68da      	ldr	r2, [r3, #12]
 800ded4:	4290      	cmp	r0, r2
 800ded6:	d02c      	beq.n	800df32 <vQueueDelete+0x6a>
 800ded8:	695a      	ldr	r2, [r3, #20]
 800deda:	4290      	cmp	r0, r2
 800dedc:	d02b      	beq.n	800df36 <vQueueDelete+0x6e>
 800dede:	69da      	ldr	r2, [r3, #28]
 800dee0:	4290      	cmp	r0, r2
 800dee2:	d02a      	beq.n	800df3a <vQueueDelete+0x72>
 800dee4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800dee6:	4290      	cmp	r0, r2
 800dee8:	d029      	beq.n	800df3e <vQueueDelete+0x76>
 800deea:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800deec:	4290      	cmp	r0, r2
 800deee:	d01e      	beq.n	800df2e <vQueueDelete+0x66>
 800def0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800def2:	4290      	cmp	r0, r2
 800def4:	d025      	beq.n	800df42 <vQueueDelete+0x7a>
 800def6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800def8:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800defa:	bf08      	it	eq
 800defc:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800defe:	d00f      	beq.n	800df20 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800df00:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800df04:	b14b      	cbz	r3, 800df1a <vQueueDelete+0x52>
}
 800df06:	4770      	bx	lr
 800df08:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df0c:	f383 8811 	msr	BASEPRI, r3
 800df10:	f3bf 8f6f 	isb	sy
 800df14:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800df18:	e7fe      	b.n	800df18 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800df1a:	f7fe be07 	b.w	800cb2c <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800df1e:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800df20:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800df48 <vQueueDelete+0x80>
 800df24:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800df28:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800df2c:	e7e8      	b.n	800df00 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800df2e:	2205      	movs	r2, #5
 800df30:	e7f6      	b.n	800df20 <vQueueDelete+0x58>
 800df32:	2201      	movs	r2, #1
 800df34:	e7f4      	b.n	800df20 <vQueueDelete+0x58>
 800df36:	2202      	movs	r2, #2
 800df38:	e7f2      	b.n	800df20 <vQueueDelete+0x58>
 800df3a:	2203      	movs	r2, #3
 800df3c:	e7f0      	b.n	800df20 <vQueueDelete+0x58>
 800df3e:	2204      	movs	r2, #4
 800df40:	e7ee      	b.n	800df20 <vQueueDelete+0x58>
 800df42:	2206      	movs	r2, #6
 800df44:	e7ec      	b.n	800df20 <vQueueDelete+0x58>
 800df46:	bf00      	nop
	...
 800df50:	20013148 	.word	0x20013148

0800df54 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800df54:	4b12      	ldr	r3, [pc, #72]	; (800dfa0 <vQueueAddToRegistry+0x4c>)
 800df56:	681a      	ldr	r2, [r3, #0]
 800df58:	b17a      	cbz	r2, 800df7a <vQueueAddToRegistry+0x26>
 800df5a:	689a      	ldr	r2, [r3, #8]
 800df5c:	b162      	cbz	r2, 800df78 <vQueueAddToRegistry+0x24>
 800df5e:	691a      	ldr	r2, [r3, #16]
 800df60:	b192      	cbz	r2, 800df88 <vQueueAddToRegistry+0x34>
 800df62:	699a      	ldr	r2, [r3, #24]
 800df64:	b192      	cbz	r2, 800df8c <vQueueAddToRegistry+0x38>
 800df66:	6a1a      	ldr	r2, [r3, #32]
 800df68:	b192      	cbz	r2, 800df90 <vQueueAddToRegistry+0x3c>
 800df6a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800df6c:	b192      	cbz	r2, 800df94 <vQueueAddToRegistry+0x40>
 800df6e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800df70:	b192      	cbz	r2, 800df98 <vQueueAddToRegistry+0x44>
 800df72:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800df74:	b192      	cbz	r2, 800df9c <vQueueAddToRegistry+0x48>
	}
 800df76:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800df78:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800df7a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800df7e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800df82:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800df86:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800df88:	2202      	movs	r2, #2
 800df8a:	e7f6      	b.n	800df7a <vQueueAddToRegistry+0x26>
 800df8c:	2203      	movs	r2, #3
 800df8e:	e7f4      	b.n	800df7a <vQueueAddToRegistry+0x26>
 800df90:	2204      	movs	r2, #4
 800df92:	e7f2      	b.n	800df7a <vQueueAddToRegistry+0x26>
 800df94:	2205      	movs	r2, #5
 800df96:	e7f0      	b.n	800df7a <vQueueAddToRegistry+0x26>
 800df98:	2206      	movs	r2, #6
 800df9a:	e7ee      	b.n	800df7a <vQueueAddToRegistry+0x26>
 800df9c:	2207      	movs	r2, #7
 800df9e:	e7ec      	b.n	800df7a <vQueueAddToRegistry+0x26>
 800dfa0:	20013148 	.word	0x20013148

0800dfa4 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800dfa4:	b570      	push	{r4, r5, r6, lr}
 800dfa6:	4605      	mov	r5, r0
 800dfa8:	460e      	mov	r6, r1
 800dfaa:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800dfac:	f7fe fed2 	bl	800cd54 <vPortEnterCritical>
 800dfb0:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800dfb4:	2bff      	cmp	r3, #255	; 0xff
 800dfb6:	bf04      	itt	eq
 800dfb8:	2300      	moveq	r3, #0
 800dfba:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800dfbe:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800dfc2:	2bff      	cmp	r3, #255	; 0xff
 800dfc4:	bf04      	itt	eq
 800dfc6:	2300      	moveq	r3, #0
 800dfc8:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800dfcc:	f7fe fee4 	bl	800cd98 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800dfd0:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800dfd2:	2b00      	cmp	r3, #0
 800dfd4:	d043      	beq.n	800e05e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800dfd6:	f7fe febd 	bl	800cd54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dfda:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800dfde:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dfe0:	2c00      	cmp	r4, #0
 800dfe2:	dd14      	ble.n	800e00e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dfe4:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800dfe8:	e003      	b.n	800dff2 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800dfea:	1e63      	subs	r3, r4, #1
 800dfec:	b2da      	uxtb	r2, r3
 800dfee:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dff0:	b16a      	cbz	r2, 800e00e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dff2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dff4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dff6:	b153      	cbz	r3, 800e00e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dff8:	f000 fd2a 	bl	800ea50 <xTaskRemoveFromEventList>
 800dffc:	2800      	cmp	r0, #0
 800dffe:	d0f4      	beq.n	800dfea <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800e000:	f000 fdc2 	bl	800eb88 <vTaskMissedYield>
			--cTxLock;
 800e004:	1e63      	subs	r3, r4, #1
 800e006:	b2da      	uxtb	r2, r3
 800e008:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e00a:	2a00      	cmp	r2, #0
 800e00c:	d1f1      	bne.n	800dff2 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e00e:	23ff      	movs	r3, #255	; 0xff
 800e010:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e014:	f7fe fec0 	bl	800cd98 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e018:	f7fe fe9c 	bl	800cd54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e01c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e020:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e022:	2c00      	cmp	r4, #0
 800e024:	dd14      	ble.n	800e050 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e026:	f105 0610 	add.w	r6, r5, #16
 800e02a:	e003      	b.n	800e034 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800e02c:	1e63      	subs	r3, r4, #1
 800e02e:	b2da      	uxtb	r2, r3
 800e030:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e032:	b16a      	cbz	r2, 800e050 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e034:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e036:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e038:	b153      	cbz	r3, 800e050 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e03a:	f000 fd09 	bl	800ea50 <xTaskRemoveFromEventList>
 800e03e:	2800      	cmp	r0, #0
 800e040:	d0f4      	beq.n	800e02c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800e042:	f000 fda1 	bl	800eb88 <vTaskMissedYield>
				--cRxLock;
 800e046:	1e63      	subs	r3, r4, #1
 800e048:	b2da      	uxtb	r2, r3
 800e04a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e04c:	2a00      	cmp	r2, #0
 800e04e:	d1f1      	bne.n	800e034 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800e050:	23ff      	movs	r3, #255	; 0xff
 800e052:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800e056:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800e05a:	f7fe be9d 	b.w	800cd98 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800e05e:	4622      	mov	r2, r4
 800e060:	4631      	mov	r1, r6
 800e062:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e066:	f000 fca9 	bl	800e9bc <vTaskPlaceOnEventListRestricted>
 800e06a:	e7b4      	b.n	800dfd6 <vQueueWaitForMessageRestricted+0x32>

0800e06c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800e06c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e070:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800e072:	f7fe fe6f 	bl	800cd54 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800e076:	4a34      	ldr	r2, [pc, #208]	; (800e148 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800e078:	4e34      	ldr	r6, [pc, #208]	; (800e14c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800e07a:	6813      	ldr	r3, [r2, #0]
 800e07c:	3301      	adds	r3, #1
 800e07e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800e080:	6833      	ldr	r3, [r6, #0]
 800e082:	2b00      	cmp	r3, #0
 800e084:	d032      	beq.n	800e0ec <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800e086:	4c32      	ldr	r4, [pc, #200]	; (800e150 <prvAddNewTaskToReadyList+0xe4>)
 800e088:	6823      	ldr	r3, [r4, #0]
 800e08a:	b33b      	cbz	r3, 800e0dc <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e08c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e08e:	4f31      	ldr	r7, [pc, #196]	; (800e154 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800e090:	4a31      	ldr	r2, [pc, #196]	; (800e158 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800e092:	4932      	ldr	r1, [pc, #200]	; (800e15c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800e094:	6813      	ldr	r3, [r2, #0]
 800e096:	3301      	adds	r3, #1
 800e098:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800e09a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800e09c:	680b      	ldr	r3, [r1, #0]
 800e09e:	4283      	cmp	r3, r0
 800e0a0:	bf38      	it	cc
 800e0a2:	6008      	strcc	r0, [r1, #0]
 800e0a4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800e0a8:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800e0ac:	1d29      	adds	r1, r5, #4
 800e0ae:	f7fe fdb1 	bl	800cc14 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800e0b2:	f7fe fe71 	bl	800cd98 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800e0b6:	6823      	ldr	r3, [r4, #0]
 800e0b8:	b173      	cbz	r3, 800e0d8 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800e0ba:	6832      	ldr	r2, [r6, #0]
 800e0bc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800e0be:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800e0c0:	429a      	cmp	r2, r3
 800e0c2:	d209      	bcs.n	800e0d8 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800e0c4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e0c8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e0cc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e0d0:	f3bf 8f4f 	dsb	sy
 800e0d4:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800e0d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e0dc:	6833      	ldr	r3, [r6, #0]
 800e0de:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e0e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e0e2:	4f1c      	ldr	r7, [pc, #112]	; (800e154 <prvAddNewTaskToReadyList+0xe8>)
 800e0e4:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800e0e6:	bf98      	it	ls
 800e0e8:	6035      	strls	r5, [r6, #0]
 800e0ea:	e7d1      	b.n	800e090 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800e0ec:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800e0ee:	6813      	ldr	r3, [r2, #0]
 800e0f0:	2b01      	cmp	r3, #1
 800e0f2:	d003      	beq.n	800e0fc <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e0f4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e0f6:	4f17      	ldr	r7, [pc, #92]	; (800e154 <prvAddNewTaskToReadyList+0xe8>)
 800e0f8:	4c15      	ldr	r4, [pc, #84]	; (800e150 <prvAddNewTaskToReadyList+0xe4>)
 800e0fa:	e7c9      	b.n	800e090 <prvAddNewTaskToReadyList+0x24>
 800e0fc:	4f15      	ldr	r7, [pc, #84]	; (800e154 <prvAddNewTaskToReadyList+0xe8>)
 800e0fe:	463c      	mov	r4, r7
 800e100:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e104:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e106:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e108:	f7fe fd74 	bl	800cbf4 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e10c:	45a0      	cmp	r8, r4
 800e10e:	d1f9      	bne.n	800e104 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800e110:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800e174 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800e114:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800e178 <prvAddNewTaskToReadyList+0x10c>
 800e118:	4c0d      	ldr	r4, [pc, #52]	; (800e150 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800e11a:	4648      	mov	r0, r9
 800e11c:	f7fe fd6a 	bl	800cbf4 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800e120:	4640      	mov	r0, r8
 800e122:	f7fe fd67 	bl	800cbf4 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800e126:	480e      	ldr	r0, [pc, #56]	; (800e160 <prvAddNewTaskToReadyList+0xf4>)
 800e128:	f7fe fd64 	bl	800cbf4 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800e12c:	480d      	ldr	r0, [pc, #52]	; (800e164 <prvAddNewTaskToReadyList+0xf8>)
 800e12e:	f7fe fd61 	bl	800cbf4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800e132:	480d      	ldr	r0, [pc, #52]	; (800e168 <prvAddNewTaskToReadyList+0xfc>)
 800e134:	f7fe fd5e 	bl	800cbf4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800e138:	4b0c      	ldr	r3, [pc, #48]	; (800e16c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800e13a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800e13c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800e140:	4b0b      	ldr	r3, [pc, #44]	; (800e170 <prvAddNewTaskToReadyList+0x104>)
 800e142:	f8c3 8000 	str.w	r8, [r3]
}
 800e146:	e7a3      	b.n	800e090 <prvAddNewTaskToReadyList+0x24>
 800e148:	200135f4 	.word	0x200135f4
 800e14c:	20013188 	.word	0x20013188
 800e150:	20013650 	.word	0x20013650
 800e154:	20013194 	.word	0x20013194
 800e158:	20013600 	.word	0x20013600
 800e15c:	20013604 	.word	0x20013604
 800e160:	2001363c 	.word	0x2001363c
 800e164:	20013668 	.word	0x20013668
 800e168:	20013654 	.word	0x20013654
 800e16c:	2001318c 	.word	0x2001318c
 800e170:	20013190 	.word	0x20013190
 800e174:	20013608 	.word	0x20013608
 800e178:	2001361c 	.word	0x2001361c

0800e17c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e17c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e180:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800e182:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e186:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800e18a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e18c:	4606      	mov	r6, r0
 800e18e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e190:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e192:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e194:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e196:	f01a f9d8 	bl	802854a <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800e19a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e19c:	f1a9 0904 	sub.w	r9, r9, #4
 800e1a0:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800e1a2:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800e1a6:	2d00      	cmp	r5, #0
 800e1a8:	d079      	beq.n	800e29e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e1aa:	782b      	ldrb	r3, [r5, #0]
 800e1ac:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800e1b0:	2b00      	cmp	r3, #0
 800e1b2:	d03b      	beq.n	800e22c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e1b4:	786b      	ldrb	r3, [r5, #1]
 800e1b6:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800e1ba:	2b00      	cmp	r3, #0
 800e1bc:	d036      	beq.n	800e22c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e1be:	78ab      	ldrb	r3, [r5, #2]
 800e1c0:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800e1c4:	b393      	cbz	r3, 800e22c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e1c6:	78eb      	ldrb	r3, [r5, #3]
 800e1c8:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800e1cc:	b373      	cbz	r3, 800e22c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e1ce:	792b      	ldrb	r3, [r5, #4]
 800e1d0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800e1d4:	b353      	cbz	r3, 800e22c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e1d6:	796b      	ldrb	r3, [r5, #5]
 800e1d8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800e1dc:	b333      	cbz	r3, 800e22c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e1de:	79ab      	ldrb	r3, [r5, #6]
 800e1e0:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800e1e4:	b313      	cbz	r3, 800e22c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e1e6:	79eb      	ldrb	r3, [r5, #7]
 800e1e8:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800e1ec:	b1f3      	cbz	r3, 800e22c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e1ee:	7a2b      	ldrb	r3, [r5, #8]
 800e1f0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800e1f4:	b1d3      	cbz	r3, 800e22c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e1f6:	7a6b      	ldrb	r3, [r5, #9]
 800e1f8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800e1fc:	b1b3      	cbz	r3, 800e22c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e1fe:	7aab      	ldrb	r3, [r5, #10]
 800e200:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800e204:	b193      	cbz	r3, 800e22c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e206:	7aeb      	ldrb	r3, [r5, #11]
 800e208:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800e20c:	b173      	cbz	r3, 800e22c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e20e:	7b2b      	ldrb	r3, [r5, #12]
 800e210:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800e214:	b153      	cbz	r3, 800e22c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e216:	7b6b      	ldrb	r3, [r5, #13]
 800e218:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800e21c:	b133      	cbz	r3, 800e22c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e21e:	7bab      	ldrb	r3, [r5, #14]
 800e220:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800e224:	b113      	cbz	r3, 800e22c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e226:	7beb      	ldrb	r3, [r5, #15]
 800e228:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800e22c:	2300      	movs	r3, #0
 800e22e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800e232:	9d08      	ldr	r5, [sp, #32]
 800e234:	2d37      	cmp	r5, #55	; 0x37
 800e236:	bf28      	it	cs
 800e238:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800e23a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800e23e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800e240:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e242:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800e244:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e248:	f7fe fce0 	bl	800cc0c <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e24c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800e250:	f104 0018 	add.w	r0, r4, #24
 800e254:	f7fe fcda 	bl	800cc0c <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e258:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800e25a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e25e:	4651      	mov	r1, sl
 800e260:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800e262:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800e264:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800e266:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800e26a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e26e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e272:	f01a f96a 	bl	802854a <memset>
 800e276:	4b0b      	ldr	r3, [pc, #44]	; (800e2a4 <prvInitialiseNewTask.constprop.0+0x128>)
 800e278:	65e3      	str	r3, [r4, #92]	; 0x5c
 800e27a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800e27e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e280:	463a      	mov	r2, r7
 800e282:	4631      	mov	r1, r6
 800e284:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e286:	6625      	str	r5, [r4, #96]	; 0x60
 800e288:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e28a:	f7fe fd3d 	bl	800cd08 <pxPortInitialiseStack>
 800e28e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800e290:	f1b8 0f00 	cmp.w	r8, #0
 800e294:	d001      	beq.n	800e29a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800e296:	f8c8 4000 	str.w	r4, [r8]
}
 800e29a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800e29e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800e2a2:	e7c6      	b.n	800e232 <prvInitialiseNewTask.constprop.0+0xb6>
 800e2a4:	20014118 	.word	0x20014118

0800e2a8 <prvIdleTask>:
{
 800e2a8:	b580      	push	{r7, lr}
 800e2aa:	4d23      	ldr	r5, [pc, #140]	; (800e338 <prvIdleTask+0x90>)
 800e2ac:	4f23      	ldr	r7, [pc, #140]	; (800e33c <prvIdleTask+0x94>)
 800e2ae:	4e24      	ldr	r6, [pc, #144]	; (800e340 <prvIdleTask+0x98>)
 800e2b0:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800e344 <prvIdleTask+0x9c>
				taskYIELD();
 800e2b4:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800e2b8:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e2bc:	682b      	ldr	r3, [r5, #0]
 800e2be:	b35b      	cbz	r3, 800e318 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800e2c0:	f7fe fd48 	bl	800cd54 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e2c4:	68fb      	ldr	r3, [r7, #12]
 800e2c6:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e2c8:	1d20      	adds	r0, r4, #4
 800e2ca:	f7fe fccb 	bl	800cc64 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800e2ce:	6833      	ldr	r3, [r6, #0]
 800e2d0:	3b01      	subs	r3, #1
 800e2d2:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800e2d4:	682b      	ldr	r3, [r5, #0]
 800e2d6:	3b01      	subs	r3, #1
 800e2d8:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800e2da:	f7fe fd5d 	bl	800cd98 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800e2de:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e2e2:	f01a f97b 	bl	80285dc <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800e2e6:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800e2ea:	b163      	cbz	r3, 800e306 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800e2ec:	2b01      	cmp	r3, #1
 800e2ee:	d01e      	beq.n	800e32e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800e2f0:	2b02      	cmp	r3, #2
 800e2f2:	d0e3      	beq.n	800e2bc <prvIdleTask+0x14>
 800e2f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2f8:	f383 8811 	msr	BASEPRI, r3
 800e2fc:	f3bf 8f6f 	isb	sy
 800e300:	f3bf 8f4f 	dsb	sy
 800e304:	e7fe      	b.n	800e304 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800e306:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e308:	f7fe fc10 	bl	800cb2c <vPortFree>
				vPortFree( pxTCB );
 800e30c:	4620      	mov	r0, r4
 800e30e:	f7fe fc0d 	bl	800cb2c <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e312:	682b      	ldr	r3, [r5, #0]
 800e314:	2b00      	cmp	r3, #0
 800e316:	d1d3      	bne.n	800e2c0 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800e318:	f8d8 3000 	ldr.w	r3, [r8]
 800e31c:	2b01      	cmp	r3, #1
 800e31e:	d9cd      	bls.n	800e2bc <prvIdleTask+0x14>
				taskYIELD();
 800e320:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800e324:	f3bf 8f4f 	dsb	sy
 800e328:	f3bf 8f6f 	isb	sy
 800e32c:	e7c6      	b.n	800e2bc <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800e32e:	4620      	mov	r0, r4
 800e330:	f7fe fbfc 	bl	800cb2c <vPortFree>
 800e334:	e7c2      	b.n	800e2bc <prvIdleTask+0x14>
 800e336:	bf00      	nop
 800e338:	200135f8 	.word	0x200135f8
 800e33c:	20013668 	.word	0x20013668
 800e340:	200135f4 	.word	0x200135f4
 800e344:	20013194 	.word	0x20013194

0800e348 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800e348:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800e34c:	4b47      	ldr	r3, [pc, #284]	; (800e46c <xTaskIncrementTick.part.0+0x124>)
 800e34e:	681e      	ldr	r6, [r3, #0]
 800e350:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800e352:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800e354:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800e356:	2e00      	cmp	r6, #0
 800e358:	d040      	beq.n	800e3dc <xTaskIncrementTick.part.0+0x94>
 800e35a:	f8df b124 	ldr.w	fp, [pc, #292]	; 800e480 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800e35e:	f8db 3000 	ldr.w	r3, [fp]
 800e362:	429e      	cmp	r6, r3
 800e364:	d347      	bcc.n	800e3f6 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e366:	4f42      	ldr	r7, [pc, #264]	; (800e470 <xTaskIncrementTick.part.0+0x128>)
 800e368:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800e484 <xTaskIncrementTick.part.0+0x13c>
 800e36c:	683b      	ldr	r3, [r7, #0]
 800e36e:	f8df a118 	ldr.w	sl, [pc, #280]	; 800e488 <xTaskIncrementTick.part.0+0x140>
 800e372:	681d      	ldr	r5, [r3, #0]
 800e374:	2d00      	cmp	r5, #0
 800e376:	d073      	beq.n	800e460 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800e378:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800e48c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800e37c:	2500      	movs	r5, #0
 800e37e:	e022      	b.n	800e3c6 <xTaskIncrementTick.part.0+0x7e>
 800e380:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e382:	f7fe fc6f 	bl	800cc64 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e386:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800e388:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e38a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e38e:	b113      	cbz	r3, 800e396 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e390:	f7fe fc68 	bl	800cc64 <uxListRemove>
 800e394:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800e396:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e398:	f8d8 2000 	ldr.w	r2, [r8]
 800e39c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800e3a0:	4293      	cmp	r3, r2
 800e3a2:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800e3a6:	bf88      	it	hi
 800e3a8:	f8c8 3000 	strhi.w	r3, [r8]
 800e3ac:	f7fe fc32 	bl	800cc14 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e3b0:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e3b4:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e3b6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e3b8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e3ba:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800e3bc:	4291      	cmp	r1, r2
 800e3be:	bf28      	it	cs
 800e3c0:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e3c2:	2b00      	cmp	r3, #0
 800e3c4:	d04c      	beq.n	800e460 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e3c6:	683b      	ldr	r3, [r7, #0]
 800e3c8:	68db      	ldr	r3, [r3, #12]
 800e3ca:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800e3cc:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e3ce:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800e3d0:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e3d2:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800e3d4:	d2d4      	bcs.n	800e380 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800e3d6:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800e3da:	e011      	b.n	800e400 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800e3dc:	4b24      	ldr	r3, [pc, #144]	; (800e470 <xTaskIncrementTick.part.0+0x128>)
 800e3de:	681a      	ldr	r2, [r3, #0]
 800e3e0:	6812      	ldr	r2, [r2, #0]
 800e3e2:	b30a      	cbz	r2, 800e428 <xTaskIncrementTick.part.0+0xe0>
 800e3e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3e8:	f383 8811 	msr	BASEPRI, r3
 800e3ec:	f3bf 8f6f 	isb	sy
 800e3f0:	f3bf 8f4f 	dsb	sy
 800e3f4:	e7fe      	b.n	800e3f4 <xTaskIncrementTick.part.0+0xac>
 800e3f6:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800e484 <xTaskIncrementTick.part.0+0x13c>
 800e3fa:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800e488 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800e3fe:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e400:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800e404:	491b      	ldr	r1, [pc, #108]	; (800e474 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e406:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e408:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800e40c:	009b      	lsls	r3, r3, #2
 800e40e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800e412:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800e414:	2a02      	cmp	r2, #2
 800e416:	bf28      	it	cs
 800e418:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800e41a:	2b00      	cmp	r3, #0
}
 800e41c:	bf0c      	ite	eq
 800e41e:	4628      	moveq	r0, r5
 800e420:	2001      	movne	r0, #1
 800e422:	b003      	add	sp, #12
 800e424:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800e428:	4a13      	ldr	r2, [pc, #76]	; (800e478 <xTaskIncrementTick.part.0+0x130>)
 800e42a:	6818      	ldr	r0, [r3, #0]
 800e42c:	6811      	ldr	r1, [r2, #0]
 800e42e:	6019      	str	r1, [r3, #0]
 800e430:	4912      	ldr	r1, [pc, #72]	; (800e47c <xTaskIncrementTick.part.0+0x134>)
 800e432:	6010      	str	r0, [r2, #0]
 800e434:	680a      	ldr	r2, [r1, #0]
 800e436:	3201      	adds	r2, #1
 800e438:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e43a:	681a      	ldr	r2, [r3, #0]
 800e43c:	6812      	ldr	r2, [r2, #0]
 800e43e:	b932      	cbnz	r2, 800e44e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800e440:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800e480 <xTaskIncrementTick.part.0+0x138>
 800e444:	f04f 33ff 	mov.w	r3, #4294967295
 800e448:	f8cb 3000 	str.w	r3, [fp]
 800e44c:	e787      	b.n	800e35e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e44e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e450:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800e480 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e454:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e456:	68db      	ldr	r3, [r3, #12]
 800e458:	685b      	ldr	r3, [r3, #4]
 800e45a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800e45e:	e77e      	b.n	800e35e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e460:	f04f 33ff 	mov.w	r3, #4294967295
 800e464:	f8cb 3000 	str.w	r3, [fp]
					break;
 800e468:	e7ca      	b.n	800e400 <xTaskIncrementTick.part.0+0xb8>
 800e46a:	bf00      	nop
 800e46c:	2001367c 	.word	0x2001367c
 800e470:	2001318c 	.word	0x2001318c
 800e474:	20013680 	.word	0x20013680
 800e478:	20013190 	.word	0x20013190
 800e47c:	20013634 	.word	0x20013634
 800e480:	20013630 	.word	0x20013630
 800e484:	20013194 	.word	0x20013194
 800e488:	20013188 	.word	0x20013188
 800e48c:	20013604 	.word	0x20013604

0800e490 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800e490:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800e494:	4d41      	ldr	r5, [pc, #260]	; (800e59c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800e496:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800e498:	f7fe fc5c 	bl	800cd54 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800e49c:	682b      	ldr	r3, [r5, #0]
 800e49e:	3b01      	subs	r3, #1
 800e4a0:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e4a2:	682b      	ldr	r3, [r5, #0]
 800e4a4:	2b00      	cmp	r3, #0
 800e4a6:	d161      	bne.n	800e56c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800e4a8:	4b3d      	ldr	r3, [pc, #244]	; (800e5a0 <xTaskResumeAll.part.0+0x110>)
 800e4aa:	681b      	ldr	r3, [r3, #0]
 800e4ac:	2b00      	cmp	r3, #0
 800e4ae:	d05d      	beq.n	800e56c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e4b0:	4e3c      	ldr	r6, [pc, #240]	; (800e5a4 <xTaskResumeAll.part.0+0x114>)
 800e4b2:	6833      	ldr	r3, [r6, #0]
 800e4b4:	2b00      	cmp	r3, #0
 800e4b6:	d06e      	beq.n	800e596 <xTaskResumeAll.part.0+0x106>
 800e4b8:	4f3b      	ldr	r7, [pc, #236]	; (800e5a8 <xTaskResumeAll.part.0+0x118>)
 800e4ba:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800e5b8 <xTaskResumeAll.part.0+0x128>
 800e4be:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800e5bc <xTaskResumeAll.part.0+0x12c>
 800e4c2:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800e5c0 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e4c6:	68f3      	ldr	r3, [r6, #12]
 800e4c8:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e4ca:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e4ce:	f104 0018 	add.w	r0, r4, #24
 800e4d2:	f7fe fbc7 	bl	800cc64 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e4d6:	4658      	mov	r0, fp
 800e4d8:	f7fe fbc4 	bl	800cc64 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800e4dc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e4de:	683a      	ldr	r2, [r7, #0]
 800e4e0:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800e4e4:	4293      	cmp	r3, r2
 800e4e6:	4659      	mov	r1, fp
 800e4e8:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800e4ec:	bf88      	it	hi
 800e4ee:	603b      	strhi	r3, [r7, #0]
 800e4f0:	f7fe fb90 	bl	800cc14 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e4f4:	f8d8 3000 	ldr.w	r3, [r8]
 800e4f8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e4fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e4fc:	429a      	cmp	r2, r3
 800e4fe:	d33d      	bcc.n	800e57c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800e500:	2301      	movs	r3, #1
 800e502:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e506:	6833      	ldr	r3, [r6, #0]
 800e508:	2b00      	cmp	r3, #0
 800e50a:	d1dc      	bne.n	800e4c6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e50c:	4b27      	ldr	r3, [pc, #156]	; (800e5ac <xTaskResumeAll.part.0+0x11c>)
 800e50e:	681a      	ldr	r2, [r3, #0]
 800e510:	6812      	ldr	r2, [r2, #0]
 800e512:	2a00      	cmp	r2, #0
 800e514:	d03a      	beq.n	800e58c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e516:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e518:	4b25      	ldr	r3, [pc, #148]	; (800e5b0 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e51a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e51c:	68d2      	ldr	r2, [r2, #12]
 800e51e:	6852      	ldr	r2, [r2, #4]
 800e520:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800e522:	4e24      	ldr	r6, [pc, #144]	; (800e5b4 <xTaskResumeAll.part.0+0x124>)
 800e524:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800e526:	b194      	cbz	r4, 800e54e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800e528:	2701      	movs	r7, #1
 800e52a:	e006      	b.n	800e53a <xTaskResumeAll.part.0+0xaa>
 800e52c:	f7ff ff0c 	bl	800e348 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800e530:	b108      	cbz	r0, 800e536 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800e532:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e536:	3c01      	subs	r4, #1
 800e538:	d008      	beq.n	800e54c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e53a:	682b      	ldr	r3, [r5, #0]
 800e53c:	2b00      	cmp	r3, #0
 800e53e:	d0f5      	beq.n	800e52c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800e540:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e542:	3c01      	subs	r4, #1
		++xPendedTicks;
 800e544:	f103 0301 	add.w	r3, r3, #1
 800e548:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e54a:	d1f6      	bne.n	800e53a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800e54c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800e54e:	f8da 3000 	ldr.w	r3, [sl]
 800e552:	b15b      	cbz	r3, 800e56c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800e554:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e558:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e55c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e560:	f3bf 8f4f 	dsb	sy
 800e564:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800e568:	2001      	movs	r0, #1
 800e56a:	e000      	b.n	800e56e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800e56c:	2000      	movs	r0, #0
 800e56e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800e570:	f7fe fc12 	bl	800cd98 <vPortExitCritical>
}
 800e574:	9801      	ldr	r0, [sp, #4]
 800e576:	b003      	add	sp, #12
 800e578:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e57c:	6833      	ldr	r3, [r6, #0]
 800e57e:	2b00      	cmp	r3, #0
 800e580:	d1a1      	bne.n	800e4c6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e582:	4b0a      	ldr	r3, [pc, #40]	; (800e5ac <xTaskResumeAll.part.0+0x11c>)
 800e584:	681a      	ldr	r2, [r3, #0]
 800e586:	6812      	ldr	r2, [r2, #0]
 800e588:	2a00      	cmp	r2, #0
 800e58a:	d1c4      	bne.n	800e516 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800e58c:	4b08      	ldr	r3, [pc, #32]	; (800e5b0 <xTaskResumeAll.part.0+0x120>)
 800e58e:	f04f 32ff 	mov.w	r2, #4294967295
 800e592:	601a      	str	r2, [r3, #0]
 800e594:	e7c5      	b.n	800e522 <xTaskResumeAll.part.0+0x92>
 800e596:	f8df a028 	ldr.w	sl, [pc, #40]	; 800e5c0 <xTaskResumeAll.part.0+0x130>
 800e59a:	e7c2      	b.n	800e522 <xTaskResumeAll.part.0+0x92>
 800e59c:	200135fc 	.word	0x200135fc
 800e5a0:	200135f4 	.word	0x200135f4
 800e5a4:	2001363c 	.word	0x2001363c
 800e5a8:	20013604 	.word	0x20013604
 800e5ac:	2001318c 	.word	0x2001318c
 800e5b0:	20013630 	.word	0x20013630
 800e5b4:	20013638 	.word	0x20013638
 800e5b8:	20013194 	.word	0x20013194
 800e5bc:	20013188 	.word	0x20013188
 800e5c0:	20013680 	.word	0x20013680

0800e5c4 <xTaskCreateStatic>:
	{
 800e5c4:	b530      	push	{r4, r5, lr}
 800e5c6:	b087      	sub	sp, #28
 800e5c8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800e5ca:	b1c4      	cbz	r4, 800e5fe <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800e5cc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800e5ce:	b16d      	cbz	r5, 800e5ec <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800e5d0:	25ac      	movs	r5, #172	; 0xac
 800e5d2:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800e5d4:	9d05      	ldr	r5, [sp, #20]
 800e5d6:	2dac      	cmp	r5, #172	; 0xac
 800e5d8:	d01a      	beq.n	800e610 <xTaskCreateStatic+0x4c>
 800e5da:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5de:	f383 8811 	msr	BASEPRI, r3
 800e5e2:	f3bf 8f6f 	isb	sy
 800e5e6:	f3bf 8f4f 	dsb	sy
 800e5ea:	e7fe      	b.n	800e5ea <xTaskCreateStatic+0x26>
 800e5ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5f0:	f383 8811 	msr	BASEPRI, r3
 800e5f4:	f3bf 8f6f 	isb	sy
 800e5f8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800e5fc:	e7fe      	b.n	800e5fc <xTaskCreateStatic+0x38>
 800e5fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e602:	f383 8811 	msr	BASEPRI, r3
 800e606:	f3bf 8f6f 	isb	sy
 800e60a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800e60e:	e7fe      	b.n	800e60e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800e610:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800e612:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800e614:	2402      	movs	r4, #2
 800e616:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e61a:	ac04      	add	r4, sp, #16
 800e61c:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800e620:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800e622:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800e624:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e626:	f7ff fda9 	bl	800e17c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e62a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800e62c:	f7ff fd1e 	bl	800e06c <prvAddNewTaskToReadyList>
	}
 800e630:	9804      	ldr	r0, [sp, #16]
 800e632:	b007      	add	sp, #28
 800e634:	bd30      	pop	{r4, r5, pc}
 800e636:	bf00      	nop

0800e638 <xTaskCreate>:
	{
 800e638:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e63c:	4607      	mov	r7, r0
 800e63e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800e640:	0090      	lsls	r0, r2, #2
	{
 800e642:	4615      	mov	r5, r2
 800e644:	4688      	mov	r8, r1
 800e646:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800e648:	f7fe f9b4 	bl	800c9b4 <pvPortMalloc>
			if( pxStack != NULL )
 800e64c:	b1d8      	cbz	r0, 800e686 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800e64e:	4604      	mov	r4, r0
 800e650:	20ac      	movs	r0, #172	; 0xac
 800e652:	f7fe f9af 	bl	800c9b4 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800e656:	4606      	mov	r6, r0
 800e658:	b1d0      	cbz	r0, 800e690 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800e65a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800e65c:	2400      	movs	r4, #0
 800e65e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800e662:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800e664:	9401      	str	r4, [sp, #4]
 800e666:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800e668:	9602      	str	r6, [sp, #8]
 800e66a:	464b      	mov	r3, r9
 800e66c:	462a      	mov	r2, r5
 800e66e:	4641      	mov	r1, r8
 800e670:	4638      	mov	r0, r7
 800e672:	9400      	str	r4, [sp, #0]
 800e674:	f7ff fd82 	bl	800e17c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e678:	4630      	mov	r0, r6
 800e67a:	f7ff fcf7 	bl	800e06c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800e67e:	2001      	movs	r0, #1
	}
 800e680:	b005      	add	sp, #20
 800e682:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800e686:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800e68a:	b005      	add	sp, #20
 800e68c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800e690:	4620      	mov	r0, r4
 800e692:	f7fe fa4b 	bl	800cb2c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800e696:	f04f 30ff 	mov.w	r0, #4294967295
 800e69a:	e7f1      	b.n	800e680 <xTaskCreate+0x48>

0800e69c <vTaskDelay>:
	{
 800e69c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800e69e:	b950      	cbnz	r0, 800e6b6 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800e6a0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e6a4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e6a8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e6ac:	f3bf 8f4f 	dsb	sy
 800e6b0:	f3bf 8f6f 	isb	sy
	}
 800e6b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800e6b6:	4d1e      	ldr	r5, [pc, #120]	; (800e730 <vTaskDelay+0x94>)
 800e6b8:	682b      	ldr	r3, [r5, #0]
 800e6ba:	b143      	cbz	r3, 800e6ce <vTaskDelay+0x32>
 800e6bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e6c0:	f383 8811 	msr	BASEPRI, r3
 800e6c4:	f3bf 8f6f 	isb	sy
 800e6c8:	f3bf 8f4f 	dsb	sy
 800e6cc:	e7fe      	b.n	800e6cc <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800e6ce:	682b      	ldr	r3, [r5, #0]
 800e6d0:	3301      	adds	r3, #1
 800e6d2:	4604      	mov	r4, r0
 800e6d4:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800e6d6:	4b17      	ldr	r3, [pc, #92]	; (800e734 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e6d8:	4e17      	ldr	r6, [pc, #92]	; (800e738 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800e6da:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e6dc:	6830      	ldr	r0, [r6, #0]
 800e6de:	3004      	adds	r0, #4
 800e6e0:	f7fe fac0 	bl	800cc64 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800e6e4:	6833      	ldr	r3, [r6, #0]
 800e6e6:	19e4      	adds	r4, r4, r7
 800e6e8:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800e6ea:	d310      	bcc.n	800e70e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e6ec:	4b13      	ldr	r3, [pc, #76]	; (800e73c <vTaskDelay+0xa0>)
 800e6ee:	6818      	ldr	r0, [r3, #0]
 800e6f0:	6831      	ldr	r1, [r6, #0]
 800e6f2:	3104      	adds	r1, #4
 800e6f4:	f7fe fa9e 	bl	800cc34 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800e6f8:	682b      	ldr	r3, [r5, #0]
 800e6fa:	b9a3      	cbnz	r3, 800e726 <vTaskDelay+0x8a>
 800e6fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e700:	f383 8811 	msr	BASEPRI, r3
 800e704:	f3bf 8f6f 	isb	sy
 800e708:	f3bf 8f4f 	dsb	sy
 800e70c:	e7fe      	b.n	800e70c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e70e:	4b0c      	ldr	r3, [pc, #48]	; (800e740 <vTaskDelay+0xa4>)
 800e710:	6818      	ldr	r0, [r3, #0]
 800e712:	6831      	ldr	r1, [r6, #0]
 800e714:	3104      	adds	r1, #4
 800e716:	f7fe fa8d 	bl	800cc34 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800e71a:	4b0a      	ldr	r3, [pc, #40]	; (800e744 <vTaskDelay+0xa8>)
 800e71c:	681a      	ldr	r2, [r3, #0]
 800e71e:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800e720:	bf38      	it	cc
 800e722:	601c      	strcc	r4, [r3, #0]
 800e724:	e7e8      	b.n	800e6f8 <vTaskDelay+0x5c>
 800e726:	f7ff feb3 	bl	800e490 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800e72a:	2800      	cmp	r0, #0
 800e72c:	d0b8      	beq.n	800e6a0 <vTaskDelay+0x4>
	}
 800e72e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e730:	200135fc 	.word	0x200135fc
 800e734:	2001367c 	.word	0x2001367c
 800e738:	20013188 	.word	0x20013188
 800e73c:	20013190 	.word	0x20013190
 800e740:	2001318c 	.word	0x2001318c
 800e744:	20013630 	.word	0x20013630

0800e748 <vTaskStartScheduler>:
{
 800e748:	b530      	push	{r4, r5, lr}
 800e74a:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e74c:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800e74e:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e750:	a906      	add	r1, sp, #24
 800e752:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800e754:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e758:	f7fe f90e 	bl	800c978 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800e75c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800e760:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800e762:	b1bb      	cbz	r3, 800e794 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800e764:	b16d      	cbz	r5, 800e782 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800e766:	21ac      	movs	r1, #172	; 0xac
 800e768:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800e76a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800e76c:	29ac      	cmp	r1, #172	; 0xac
 800e76e:	d01a      	beq.n	800e7a6 <vTaskStartScheduler+0x5e>
 800e770:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e774:	f383 8811 	msr	BASEPRI, r3
 800e778:	f3bf 8f6f 	isb	sy
 800e77c:	f3bf 8f4f 	dsb	sy
 800e780:	e7fe      	b.n	800e780 <vTaskStartScheduler+0x38>
 800e782:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e786:	f383 8811 	msr	BASEPRI, r3
 800e78a:	f3bf 8f6f 	isb	sy
 800e78e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800e792:	e7fe      	b.n	800e792 <vTaskStartScheduler+0x4a>
 800e794:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e798:	f383 8811 	msr	BASEPRI, r3
 800e79c:	f3bf 8f6f 	isb	sy
 800e7a0:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800e7a4:	e7fe      	b.n	800e7a4 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800e7a6:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e7a8:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800e7aa:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800e7ac:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e7b0:	4623      	mov	r3, r4
 800e7b2:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800e7b6:	491b      	ldr	r1, [pc, #108]	; (800e824 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800e7b8:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e7ba:	9400      	str	r4, [sp, #0]
 800e7bc:	481a      	ldr	r0, [pc, #104]	; (800e828 <vTaskStartScheduler+0xe0>)
 800e7be:	f7ff fcdd 	bl	800e17c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e7c2:	4628      	mov	r0, r5
 800e7c4:	f7ff fc52 	bl	800e06c <prvAddNewTaskToReadyList>
		return xReturn;
 800e7c8:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800e7ca:	b1eb      	cbz	r3, 800e808 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800e7cc:	f000 fc6e 	bl	800f0ac <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800e7d0:	2801      	cmp	r0, #1
 800e7d2:	d11b      	bne.n	800e80c <vTaskStartScheduler+0xc4>
 800e7d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7d8:	f383 8811 	msr	BASEPRI, r3
 800e7dc:	f3bf 8f6f 	isb	sy
 800e7e0:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800e7e4:	4b11      	ldr	r3, [pc, #68]	; (800e82c <vTaskStartScheduler+0xe4>)
 800e7e6:	4a12      	ldr	r2, [pc, #72]	; (800e830 <vTaskStartScheduler+0xe8>)
 800e7e8:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800e7ea:	4912      	ldr	r1, [pc, #72]	; (800e834 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800e7ec:	3358      	adds	r3, #88	; 0x58
 800e7ee:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800e7f0:	4a11      	ldr	r2, [pc, #68]	; (800e838 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800e7f2:	4b12      	ldr	r3, [pc, #72]	; (800e83c <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800e7f4:	f04f 35ff 	mov.w	r5, #4294967295
 800e7f8:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800e7fa:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800e7fc:	601c      	str	r4, [r3, #0]
}
 800e7fe:	b00b      	add	sp, #44	; 0x2c
 800e800:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800e804:	f7fe bb38 	b.w	800ce78 <xPortStartScheduler>
}
 800e808:	b00b      	add	sp, #44	; 0x2c
 800e80a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800e80c:	3001      	adds	r0, #1
 800e80e:	d1fb      	bne.n	800e808 <vTaskStartScheduler+0xc0>
 800e810:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e814:	f383 8811 	msr	BASEPRI, r3
 800e818:	f3bf 8f6f 	isb	sy
 800e81c:	f3bf 8f4f 	dsb	sy
 800e820:	e7fe      	b.n	800e820 <vTaskStartScheduler+0xd8>
 800e822:	bf00      	nop
 800e824:	0802c1d8 	.word	0x0802c1d8
 800e828:	0800e2a9 	.word	0x0800e2a9
 800e82c:	20013188 	.word	0x20013188
 800e830:	20000160 	.word	0x20000160
 800e834:	20013630 	.word	0x20013630
 800e838:	20013650 	.word	0x20013650
 800e83c:	2001367c 	.word	0x2001367c

0800e840 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800e840:	4a02      	ldr	r2, [pc, #8]	; (800e84c <vTaskSuspendAll+0xc>)
 800e842:	6813      	ldr	r3, [r2, #0]
 800e844:	3301      	adds	r3, #1
 800e846:	6013      	str	r3, [r2, #0]
}
 800e848:	4770      	bx	lr
 800e84a:	bf00      	nop
 800e84c:	200135fc 	.word	0x200135fc

0800e850 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800e850:	4b06      	ldr	r3, [pc, #24]	; (800e86c <xTaskResumeAll+0x1c>)
 800e852:	681b      	ldr	r3, [r3, #0]
 800e854:	b943      	cbnz	r3, 800e868 <xTaskResumeAll+0x18>
 800e856:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e85a:	f383 8811 	msr	BASEPRI, r3
 800e85e:	f3bf 8f6f 	isb	sy
 800e862:	f3bf 8f4f 	dsb	sy
 800e866:	e7fe      	b.n	800e866 <xTaskResumeAll+0x16>
 800e868:	f7ff be12 	b.w	800e490 <xTaskResumeAll.part.0>
 800e86c:	200135fc 	.word	0x200135fc

0800e870 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800e870:	4b01      	ldr	r3, [pc, #4]	; (800e878 <xTaskGetTickCount+0x8>)
 800e872:	6818      	ldr	r0, [r3, #0]
}
 800e874:	4770      	bx	lr
 800e876:	bf00      	nop
 800e878:	2001367c 	.word	0x2001367c

0800e87c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e87c:	4b05      	ldr	r3, [pc, #20]	; (800e894 <xTaskIncrementTick+0x18>)
 800e87e:	681b      	ldr	r3, [r3, #0]
 800e880:	b90b      	cbnz	r3, 800e886 <xTaskIncrementTick+0xa>
 800e882:	f7ff bd61 	b.w	800e348 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800e886:	4a04      	ldr	r2, [pc, #16]	; (800e898 <xTaskIncrementTick+0x1c>)
 800e888:	6813      	ldr	r3, [r2, #0]
 800e88a:	3301      	adds	r3, #1
}
 800e88c:	2000      	movs	r0, #0
		++xPendedTicks;
 800e88e:	6013      	str	r3, [r2, #0]
}
 800e890:	4770      	bx	lr
 800e892:	bf00      	nop
 800e894:	200135fc 	.word	0x200135fc
 800e898:	20013638 	.word	0x20013638

0800e89c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800e89c:	4b1f      	ldr	r3, [pc, #124]	; (800e91c <vTaskSwitchContext+0x80>)
 800e89e:	681b      	ldr	r3, [r3, #0]
 800e8a0:	b11b      	cbz	r3, 800e8aa <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800e8a2:	4b1f      	ldr	r3, [pc, #124]	; (800e920 <vTaskSwitchContext+0x84>)
 800e8a4:	2201      	movs	r2, #1
 800e8a6:	601a      	str	r2, [r3, #0]
 800e8a8:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800e8aa:	4a1d      	ldr	r2, [pc, #116]	; (800e920 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e8ac:	491d      	ldr	r1, [pc, #116]	; (800e924 <vTaskSwitchContext+0x88>)
{
 800e8ae:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e8b0:	4c1d      	ldr	r4, [pc, #116]	; (800e928 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800e8b2:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e8b4:	6823      	ldr	r3, [r4, #0]
 800e8b6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800e8ba:	0092      	lsls	r2, r2, #2
 800e8bc:	0098      	lsls	r0, r3, #2
 800e8be:	588a      	ldr	r2, [r1, r2]
 800e8c0:	b942      	cbnz	r2, 800e8d4 <vTaskSwitchContext+0x38>
 800e8c2:	b313      	cbz	r3, 800e90a <vTaskSwitchContext+0x6e>
 800e8c4:	3b01      	subs	r3, #1
 800e8c6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800e8ca:	0098      	lsls	r0, r3, #2
 800e8cc:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800e8d0:	2a00      	cmp	r2, #0
 800e8d2:	d0f6      	beq.n	800e8c2 <vTaskSwitchContext+0x26>
 800e8d4:	4418      	add	r0, r3
 800e8d6:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800e8da:	4662      	mov	r2, ip
 800e8dc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800e8e0:	6849      	ldr	r1, [r1, #4]
 800e8e2:	f8cc 1004 	str.w	r1, [ip, #4]
 800e8e6:	3208      	adds	r2, #8
 800e8e8:	4291      	cmp	r1, r2
 800e8ea:	bf08      	it	eq
 800e8ec:	6849      	ldreq	r1, [r1, #4]
 800e8ee:	4a0f      	ldr	r2, [pc, #60]	; (800e92c <vTaskSwitchContext+0x90>)
 800e8f0:	bf08      	it	eq
 800e8f2:	f8cc 1004 	streq.w	r1, [ip, #4]
 800e8f6:	68c9      	ldr	r1, [r1, #12]
 800e8f8:	6011      	str	r1, [r2, #0]
 800e8fa:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800e8fc:	6813      	ldr	r3, [r2, #0]
 800e8fe:	4a0c      	ldr	r2, [pc, #48]	; (800e930 <vTaskSwitchContext+0x94>)
}
 800e900:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800e904:	3358      	adds	r3, #88	; 0x58
 800e906:	6013      	str	r3, [r2, #0]
}
 800e908:	4770      	bx	lr
 800e90a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e90e:	f383 8811 	msr	BASEPRI, r3
 800e912:	f3bf 8f6f 	isb	sy
 800e916:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e91a:	e7fe      	b.n	800e91a <vTaskSwitchContext+0x7e>
 800e91c:	200135fc 	.word	0x200135fc
 800e920:	20013680 	.word	0x20013680
 800e924:	20013194 	.word	0x20013194
 800e928:	20013604 	.word	0x20013604
 800e92c:	20013188 	.word	0x20013188
 800e930:	20000160 	.word	0x20000160

0800e934 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800e934:	b1d0      	cbz	r0, 800e96c <vTaskPlaceOnEventList+0x38>
{
 800e936:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800e938:	4d1a      	ldr	r5, [pc, #104]	; (800e9a4 <vTaskPlaceOnEventList+0x70>)
 800e93a:	460c      	mov	r4, r1
 800e93c:	6829      	ldr	r1, [r5, #0]
 800e93e:	3118      	adds	r1, #24
 800e940:	f7fe f978 	bl	800cc34 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800e944:	4b18      	ldr	r3, [pc, #96]	; (800e9a8 <vTaskPlaceOnEventList+0x74>)
 800e946:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e948:	6828      	ldr	r0, [r5, #0]
 800e94a:	3004      	adds	r0, #4
 800e94c:	f7fe f98a 	bl	800cc64 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800e950:	1c63      	adds	r3, r4, #1
 800e952:	d014      	beq.n	800e97e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800e954:	682b      	ldr	r3, [r5, #0]
 800e956:	19a4      	adds	r4, r4, r6
 800e958:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800e95a:	d317      	bcc.n	800e98c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e95c:	4b13      	ldr	r3, [pc, #76]	; (800e9ac <vTaskPlaceOnEventList+0x78>)
 800e95e:	6818      	ldr	r0, [r3, #0]
 800e960:	6829      	ldr	r1, [r5, #0]
}
 800e962:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e966:	3104      	adds	r1, #4
 800e968:	f7fe b964 	b.w	800cc34 <vListInsert>
 800e96c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e970:	f383 8811 	msr	BASEPRI, r3
 800e974:	f3bf 8f6f 	isb	sy
 800e978:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800e97c:	e7fe      	b.n	800e97c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e97e:	6829      	ldr	r1, [r5, #0]
 800e980:	480b      	ldr	r0, [pc, #44]	; (800e9b0 <vTaskPlaceOnEventList+0x7c>)
}
 800e982:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e986:	3104      	adds	r1, #4
 800e988:	f7fe b944 	b.w	800cc14 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e98c:	4b09      	ldr	r3, [pc, #36]	; (800e9b4 <vTaskPlaceOnEventList+0x80>)
 800e98e:	6818      	ldr	r0, [r3, #0]
 800e990:	6829      	ldr	r1, [r5, #0]
 800e992:	3104      	adds	r1, #4
 800e994:	f7fe f94e 	bl	800cc34 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800e998:	4b07      	ldr	r3, [pc, #28]	; (800e9b8 <vTaskPlaceOnEventList+0x84>)
 800e99a:	681a      	ldr	r2, [r3, #0]
 800e99c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800e99e:	bf38      	it	cc
 800e9a0:	601c      	strcc	r4, [r3, #0]
}
 800e9a2:	bd70      	pop	{r4, r5, r6, pc}
 800e9a4:	20013188 	.word	0x20013188
 800e9a8:	2001367c 	.word	0x2001367c
 800e9ac:	20013190 	.word	0x20013190
 800e9b0:	20013654 	.word	0x20013654
 800e9b4:	2001318c 	.word	0x2001318c
 800e9b8:	20013630 	.word	0x20013630

0800e9bc <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800e9bc:	b330      	cbz	r0, 800ea0c <vTaskPlaceOnEventListRestricted+0x50>
	{
 800e9be:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800e9c0:	4e1d      	ldr	r6, [pc, #116]	; (800ea38 <vTaskPlaceOnEventListRestricted+0x7c>)
 800e9c2:	460c      	mov	r4, r1
 800e9c4:	6831      	ldr	r1, [r6, #0]
 800e9c6:	4615      	mov	r5, r2
 800e9c8:	3118      	adds	r1, #24
 800e9ca:	f7fe f923 	bl	800cc14 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800e9ce:	4b1b      	ldr	r3, [pc, #108]	; (800ea3c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800e9d0:	b985      	cbnz	r5, 800e9f4 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800e9d2:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e9d4:	6830      	ldr	r0, [r6, #0]
 800e9d6:	3004      	adds	r0, #4
 800e9d8:	f7fe f944 	bl	800cc64 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800e9dc:	6833      	ldr	r3, [r6, #0]
 800e9de:	1964      	adds	r4, r4, r5
 800e9e0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800e9e2:	d31c      	bcc.n	800ea1e <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e9e4:	4b16      	ldr	r3, [pc, #88]	; (800ea40 <vTaskPlaceOnEventListRestricted+0x84>)
 800e9e6:	6818      	ldr	r0, [r3, #0]
 800e9e8:	6831      	ldr	r1, [r6, #0]
	}
 800e9ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e9ee:	3104      	adds	r1, #4
 800e9f0:	f7fe b920 	b.w	800cc34 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800e9f4:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e9f6:	6830      	ldr	r0, [r6, #0]
 800e9f8:	3004      	adds	r0, #4
 800e9fa:	f7fe f933 	bl	800cc64 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e9fe:	6831      	ldr	r1, [r6, #0]
 800ea00:	4810      	ldr	r0, [pc, #64]	; (800ea44 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800ea02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ea06:	3104      	adds	r1, #4
 800ea08:	f7fe b904 	b.w	800cc14 <vListInsertEnd>
 800ea0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea10:	f383 8811 	msr	BASEPRI, r3
 800ea14:	f3bf 8f6f 	isb	sy
 800ea18:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800ea1c:	e7fe      	b.n	800ea1c <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ea1e:	4b0a      	ldr	r3, [pc, #40]	; (800ea48 <vTaskPlaceOnEventListRestricted+0x8c>)
 800ea20:	6818      	ldr	r0, [r3, #0]
 800ea22:	6831      	ldr	r1, [r6, #0]
 800ea24:	3104      	adds	r1, #4
 800ea26:	f7fe f905 	bl	800cc34 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800ea2a:	4b08      	ldr	r3, [pc, #32]	; (800ea4c <vTaskPlaceOnEventListRestricted+0x90>)
 800ea2c:	681a      	ldr	r2, [r3, #0]
 800ea2e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800ea30:	bf38      	it	cc
 800ea32:	601c      	strcc	r4, [r3, #0]
	}
 800ea34:	bd70      	pop	{r4, r5, r6, pc}
 800ea36:	bf00      	nop
 800ea38:	20013188 	.word	0x20013188
 800ea3c:	2001367c 	.word	0x2001367c
 800ea40:	20013190 	.word	0x20013190
 800ea44:	20013654 	.word	0x20013654
 800ea48:	2001318c 	.word	0x2001318c
 800ea4c:	20013630 	.word	0x20013630

0800ea50 <xTaskRemoveFromEventList>:
{
 800ea50:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ea52:	68c3      	ldr	r3, [r0, #12]
 800ea54:	68dc      	ldr	r4, [r3, #12]
{
 800ea56:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800ea58:	2c00      	cmp	r4, #0
 800ea5a:	d02b      	beq.n	800eab4 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800ea5c:	f104 0518 	add.w	r5, r4, #24
 800ea60:	4628      	mov	r0, r5
 800ea62:	f7fe f8ff 	bl	800cc64 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ea66:	4b18      	ldr	r3, [pc, #96]	; (800eac8 <xTaskRemoveFromEventList+0x78>)
 800ea68:	681b      	ldr	r3, [r3, #0]
 800ea6a:	b17b      	cbz	r3, 800ea8c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800ea6c:	4817      	ldr	r0, [pc, #92]	; (800eacc <xTaskRemoveFromEventList+0x7c>)
 800ea6e:	4629      	mov	r1, r5
 800ea70:	f7fe f8d0 	bl	800cc14 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800ea74:	4b16      	ldr	r3, [pc, #88]	; (800ead0 <xTaskRemoveFromEventList+0x80>)
 800ea76:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ea78:	681b      	ldr	r3, [r3, #0]
 800ea7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ea7c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800ea7e:	bf85      	ittet	hi
 800ea80:	4b14      	ldrhi	r3, [pc, #80]	; (800ead4 <xTaskRemoveFromEventList+0x84>)
 800ea82:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800ea84:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800ea86:	6018      	strhi	r0, [r3, #0]
}
 800ea88:	b003      	add	sp, #12
 800ea8a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800ea8c:	1d21      	adds	r1, r4, #4
 800ea8e:	4608      	mov	r0, r1
 800ea90:	9101      	str	r1, [sp, #4]
 800ea92:	f7fe f8e7 	bl	800cc64 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800ea96:	4a10      	ldr	r2, [pc, #64]	; (800ead8 <xTaskRemoveFromEventList+0x88>)
 800ea98:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ea9a:	6810      	ldr	r0, [r2, #0]
 800ea9c:	9901      	ldr	r1, [sp, #4]
 800ea9e:	4283      	cmp	r3, r0
 800eaa0:	480e      	ldr	r0, [pc, #56]	; (800eadc <xTaskRemoveFromEventList+0x8c>)
 800eaa2:	bf88      	it	hi
 800eaa4:	6013      	strhi	r3, [r2, #0]
 800eaa6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800eaaa:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800eaae:	f7fe f8b1 	bl	800cc14 <vListInsertEnd>
 800eab2:	e7df      	b.n	800ea74 <xTaskRemoveFromEventList+0x24>
 800eab4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eab8:	f383 8811 	msr	BASEPRI, r3
 800eabc:	f3bf 8f6f 	isb	sy
 800eac0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800eac4:	e7fe      	b.n	800eac4 <xTaskRemoveFromEventList+0x74>
 800eac6:	bf00      	nop
 800eac8:	200135fc 	.word	0x200135fc
 800eacc:	2001363c 	.word	0x2001363c
 800ead0:	20013188 	.word	0x20013188
 800ead4:	20013680 	.word	0x20013680
 800ead8:	20013604 	.word	0x20013604
 800eadc:	20013194 	.word	0x20013194

0800eae0 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800eae0:	4a03      	ldr	r2, [pc, #12]	; (800eaf0 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800eae2:	4b04      	ldr	r3, [pc, #16]	; (800eaf4 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800eae4:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800eae6:	681b      	ldr	r3, [r3, #0]
 800eae8:	e9c0 2300 	strd	r2, r3, [r0]
}
 800eaec:	4770      	bx	lr
 800eaee:	bf00      	nop
 800eaf0:	20013634 	.word	0x20013634
 800eaf4:	2001367c 	.word	0x2001367c

0800eaf8 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800eaf8:	b328      	cbz	r0, 800eb46 <xTaskCheckForTimeOut+0x4e>
{
 800eafa:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eafc:	460d      	mov	r5, r1
 800eafe:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800eb00:	b1c1      	cbz	r1, 800eb34 <xTaskCheckForTimeOut+0x3c>
 800eb02:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800eb04:	f7fe f926 	bl	800cd54 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800eb08:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800eb0a:	4a1d      	ldr	r2, [pc, #116]	; (800eb80 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800eb0c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800eb0e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800eb10:	d030      	beq.n	800eb74 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800eb12:	f8df c070 	ldr.w	ip, [pc, #112]	; 800eb84 <xTaskCheckForTimeOut+0x8c>
 800eb16:	e9d4 6000 	ldrd	r6, r0, [r4]
 800eb1a:	f8dc 7000 	ldr.w	r7, [ip]
 800eb1e:	42be      	cmp	r6, r7
 800eb20:	d01a      	beq.n	800eb58 <xTaskCheckForTimeOut+0x60>
 800eb22:	4288      	cmp	r0, r1
 800eb24:	d818      	bhi.n	800eb58 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800eb26:	2001      	movs	r0, #1
 800eb28:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800eb2a:	f7fe f935 	bl	800cd98 <vPortExitCritical>
}
 800eb2e:	9801      	ldr	r0, [sp, #4]
 800eb30:	b003      	add	sp, #12
 800eb32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eb34:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb38:	f383 8811 	msr	BASEPRI, r3
 800eb3c:	f3bf 8f6f 	isb	sy
 800eb40:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800eb44:	e7fe      	b.n	800eb44 <xTaskCheckForTimeOut+0x4c>
 800eb46:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb4a:	f383 8811 	msr	BASEPRI, r3
 800eb4e:	f3bf 8f6f 	isb	sy
 800eb52:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800eb56:	e7fe      	b.n	800eb56 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800eb58:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800eb5c:	4573      	cmp	r3, lr
 800eb5e:	d90b      	bls.n	800eb78 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800eb60:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800eb62:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800eb66:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800eb68:	4403      	add	r3, r0
 800eb6a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800eb6c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800eb6e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800eb72:	e7d9      	b.n	800eb28 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800eb74:	2000      	movs	r0, #0
 800eb76:	e7d7      	b.n	800eb28 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800eb78:	2300      	movs	r3, #0
 800eb7a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800eb7c:	2001      	movs	r0, #1
 800eb7e:	e7d3      	b.n	800eb28 <xTaskCheckForTimeOut+0x30>
 800eb80:	2001367c 	.word	0x2001367c
 800eb84:	20013634 	.word	0x20013634

0800eb88 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800eb88:	4b01      	ldr	r3, [pc, #4]	; (800eb90 <vTaskMissedYield+0x8>)
 800eb8a:	2201      	movs	r2, #1
 800eb8c:	601a      	str	r2, [r3, #0]
}
 800eb8e:	4770      	bx	lr
 800eb90:	20013680 	.word	0x20013680

0800eb94 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800eb94:	4b05      	ldr	r3, [pc, #20]	; (800ebac <xTaskGetSchedulerState+0x18>)
 800eb96:	681b      	ldr	r3, [r3, #0]
 800eb98:	b133      	cbz	r3, 800eba8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800eb9a:	4b05      	ldr	r3, [pc, #20]	; (800ebb0 <xTaskGetSchedulerState+0x1c>)
 800eb9c:	6818      	ldr	r0, [r3, #0]
 800eb9e:	fab0 f080 	clz	r0, r0
 800eba2:	0940      	lsrs	r0, r0, #5
 800eba4:	0040      	lsls	r0, r0, #1
 800eba6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800eba8:	2001      	movs	r0, #1
	}
 800ebaa:	4770      	bx	lr
 800ebac:	20013650 	.word	0x20013650
 800ebb0:	200135fc 	.word	0x200135fc

0800ebb4 <xTaskPriorityInherit>:
	{
 800ebb4:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800ebb6:	4604      	mov	r4, r0
	{
 800ebb8:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800ebba:	b1c8      	cbz	r0, 800ebf0 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800ebbc:	4d1d      	ldr	r5, [pc, #116]	; (800ec34 <xTaskPriorityInherit+0x80>)
 800ebbe:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ebc0:	682a      	ldr	r2, [r5, #0]
 800ebc2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800ebc4:	4293      	cmp	r3, r2
 800ebc6:	d215      	bcs.n	800ebf4 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ebc8:	6982      	ldr	r2, [r0, #24]
 800ebca:	2a00      	cmp	r2, #0
 800ebcc:	db04      	blt.n	800ebd8 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ebce:	682a      	ldr	r2, [r5, #0]
 800ebd0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800ebd2:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800ebd6:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800ebd8:	4e17      	ldr	r6, [pc, #92]	; (800ec38 <xTaskPriorityInherit+0x84>)
 800ebda:	6962      	ldr	r2, [r4, #20]
 800ebdc:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800ebe0:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800ebe4:	429a      	cmp	r2, r3
 800ebe6:	d00e      	beq.n	800ec06 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ebe8:	682b      	ldr	r3, [r5, #0]
 800ebea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ebec:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800ebee:	2001      	movs	r0, #1
	}
 800ebf0:	b002      	add	sp, #8
 800ebf2:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800ebf4:	682b      	ldr	r3, [r5, #0]
 800ebf6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800ebf8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ebfa:	4298      	cmp	r0, r3
 800ebfc:	bf2c      	ite	cs
 800ebfe:	2000      	movcs	r0, #0
 800ec00:	2001      	movcc	r0, #1
	}
 800ec02:	b002      	add	sp, #8
 800ec04:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ec06:	1d21      	adds	r1, r4, #4
 800ec08:	4608      	mov	r0, r1
 800ec0a:	9101      	str	r1, [sp, #4]
 800ec0c:	f7fe f82a 	bl	800cc64 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ec10:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800ec12:	4b0a      	ldr	r3, [pc, #40]	; (800ec3c <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ec14:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800ec16:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ec18:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800ec1a:	4290      	cmp	r0, r2
 800ec1c:	bf88      	it	hi
 800ec1e:	6018      	strhi	r0, [r3, #0]
 800ec20:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800ec24:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800ec28:	9901      	ldr	r1, [sp, #4]
 800ec2a:	f7fd fff3 	bl	800cc14 <vListInsertEnd>
				xReturn = pdTRUE;
 800ec2e:	2001      	movs	r0, #1
 800ec30:	e7de      	b.n	800ebf0 <xTaskPriorityInherit+0x3c>
 800ec32:	bf00      	nop
 800ec34:	20013188 	.word	0x20013188
 800ec38:	20013194 	.word	0x20013194
 800ec3c:	20013604 	.word	0x20013604

0800ec40 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800ec40:	b318      	cbz	r0, 800ec8a <xTaskPriorityDisinherit+0x4a>
	{
 800ec42:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800ec44:	4b1e      	ldr	r3, [pc, #120]	; (800ecc0 <xTaskPriorityDisinherit+0x80>)
 800ec46:	681c      	ldr	r4, [r3, #0]
 800ec48:	4284      	cmp	r4, r0
	{
 800ec4a:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800ec4c:	d008      	beq.n	800ec60 <xTaskPriorityDisinherit+0x20>
 800ec4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec52:	f383 8811 	msr	BASEPRI, r3
 800ec56:	f3bf 8f6f 	isb	sy
 800ec5a:	f3bf 8f4f 	dsb	sy
 800ec5e:	e7fe      	b.n	800ec5e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800ec60:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800ec62:	b14b      	cbz	r3, 800ec78 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ec64:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ec66:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800ec68:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ec6a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800ec6c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ec6e:	d000      	beq.n	800ec72 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800ec70:	b16b      	cbz	r3, 800ec8e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800ec72:	2000      	movs	r0, #0
	}
 800ec74:	b002      	add	sp, #8
 800ec76:	bd10      	pop	{r4, pc}
 800ec78:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec7c:	f383 8811 	msr	BASEPRI, r3
 800ec80:	f3bf 8f6f 	isb	sy
 800ec84:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800ec88:	e7fe      	b.n	800ec88 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800ec8a:	2000      	movs	r0, #0
	}
 800ec8c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ec8e:	1d21      	adds	r1, r4, #4
 800ec90:	4608      	mov	r0, r1
 800ec92:	9101      	str	r1, [sp, #4]
 800ec94:	f7fd ffe6 	bl	800cc64 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800ec98:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800ec9a:	4a0a      	ldr	r2, [pc, #40]	; (800ecc4 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800ec9c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ec9e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800eca2:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800eca4:	6810      	ldr	r0, [r2, #0]
 800eca6:	9901      	ldr	r1, [sp, #4]
 800eca8:	4283      	cmp	r3, r0
 800ecaa:	4807      	ldr	r0, [pc, #28]	; (800ecc8 <xTaskPriorityDisinherit+0x88>)
 800ecac:	bf88      	it	hi
 800ecae:	6013      	strhi	r3, [r2, #0]
 800ecb0:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800ecb4:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800ecb8:	f7fd ffac 	bl	800cc14 <vListInsertEnd>
					xReturn = pdTRUE;
 800ecbc:	2001      	movs	r0, #1
		return xReturn;
 800ecbe:	e7d9      	b.n	800ec74 <xTaskPriorityDisinherit+0x34>
 800ecc0:	20013188 	.word	0x20013188
 800ecc4:	20013604 	.word	0x20013604
 800ecc8:	20013194 	.word	0x20013194

0800eccc <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800eccc:	2800      	cmp	r0, #0
 800ecce:	d041      	beq.n	800ed54 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800ecd0:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800ecd2:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800ecd4:	b083      	sub	sp, #12
 800ecd6:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800ecd8:	b153      	cbz	r3, 800ecf0 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800ecda:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800ecdc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ecde:	4281      	cmp	r1, r0
 800ece0:	bf38      	it	cc
 800ece2:	4601      	movcc	r1, r0
 800ece4:	428a      	cmp	r2, r1
 800ece6:	d001      	beq.n	800ecec <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800ece8:	2b01      	cmp	r3, #1
 800ecea:	d00a      	beq.n	800ed02 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800ecec:	b003      	add	sp, #12
 800ecee:	bd30      	pop	{r4, r5, pc}
 800ecf0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecf4:	f383 8811 	msr	BASEPRI, r3
 800ecf8:	f3bf 8f6f 	isb	sy
 800ecfc:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800ed00:	e7fe      	b.n	800ed00 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800ed02:	4b19      	ldr	r3, [pc, #100]	; (800ed68 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800ed04:	681b      	ldr	r3, [r3, #0]
 800ed06:	42a3      	cmp	r3, r4
 800ed08:	d025      	beq.n	800ed56 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ed0a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800ed0c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ed0e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ed10:	bfa8      	it	ge
 800ed12:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800ed16:	4d15      	ldr	r5, [pc, #84]	; (800ed6c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ed18:	bfa8      	it	ge
 800ed1a:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800ed1c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800ed20:	6961      	ldr	r1, [r4, #20]
 800ed22:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800ed26:	4299      	cmp	r1, r3
 800ed28:	d1e0      	bne.n	800ecec <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ed2a:	1d21      	adds	r1, r4, #4
 800ed2c:	4608      	mov	r0, r1
 800ed2e:	9101      	str	r1, [sp, #4]
 800ed30:	f7fd ff98 	bl	800cc64 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800ed34:	4b0e      	ldr	r3, [pc, #56]	; (800ed70 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800ed36:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800ed38:	681a      	ldr	r2, [r3, #0]
 800ed3a:	9901      	ldr	r1, [sp, #4]
 800ed3c:	4290      	cmp	r0, r2
 800ed3e:	bf88      	it	hi
 800ed40:	6018      	strhi	r0, [r3, #0]
 800ed42:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800ed46:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800ed4a:	b003      	add	sp, #12
 800ed4c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800ed50:	f7fd bf60 	b.w	800cc14 <vListInsertEnd>
 800ed54:	4770      	bx	lr
 800ed56:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed5a:	f383 8811 	msr	BASEPRI, r3
 800ed5e:	f3bf 8f6f 	isb	sy
 800ed62:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800ed66:	e7fe      	b.n	800ed66 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800ed68:	20013188 	.word	0x20013188
 800ed6c:	20013194 	.word	0x20013194
 800ed70:	20013604 	.word	0x20013604

0800ed74 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800ed74:	4b04      	ldr	r3, [pc, #16]	; (800ed88 <pvTaskIncrementMutexHeldCount+0x14>)
 800ed76:	681a      	ldr	r2, [r3, #0]
 800ed78:	b11a      	cbz	r2, 800ed82 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800ed7a:	6819      	ldr	r1, [r3, #0]
 800ed7c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800ed7e:	3201      	adds	r2, #1
 800ed80:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800ed82:	6818      	ldr	r0, [r3, #0]
	}
 800ed84:	4770      	bx	lr
 800ed86:	bf00      	nop
 800ed88:	20013188 	.word	0x20013188

0800ed8c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800ed8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ed90:	4e22      	ldr	r6, [pc, #136]	; (800ee1c <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800ed92:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800ee24 <prvSwitchTimerLists+0x98>
{
 800ed96:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800ed98:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800ed9c:	e00d      	b.n	800edba <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ed9e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eda0:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800eda2:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800eda4:	1d25      	adds	r5, r4, #4
 800eda6:	4628      	mov	r0, r5
 800eda8:	f7fd ff5c 	bl	800cc64 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800edac:	6a23      	ldr	r3, [r4, #32]
 800edae:	4620      	mov	r0, r4
 800edb0:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800edb2:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800edb6:	075b      	lsls	r3, r3, #29
 800edb8:	d40a      	bmi.n	800edd0 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800edba:	6833      	ldr	r3, [r6, #0]
 800edbc:	681a      	ldr	r2, [r3, #0]
 800edbe:	2a00      	cmp	r2, #0
 800edc0:	d1ed      	bne.n	800ed9e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800edc2:	4a17      	ldr	r2, [pc, #92]	; (800ee20 <prvSwitchTimerLists+0x94>)
 800edc4:	6811      	ldr	r1, [r2, #0]
 800edc6:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800edc8:	6013      	str	r3, [r2, #0]
}
 800edca:	b005      	add	sp, #20
 800edcc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800edd0:	69a3      	ldr	r3, [r4, #24]
 800edd2:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800edd4:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800edd6:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800edd8:	d205      	bcs.n	800ede6 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800edda:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800eddc:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800edde:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ede0:	f7fd ff28 	bl	800cc34 <vListInsert>
 800ede4:	e7e9      	b.n	800edba <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800ede6:	f8d9 3000 	ldr.w	r3, [r9]
 800edea:	b16b      	cbz	r3, 800ee08 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800edec:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800edf0:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800edf2:	f7ff fecf 	bl	800eb94 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800edf6:	2300      	movs	r3, #0
 800edf8:	f8d9 0000 	ldr.w	r0, [r9]
 800edfc:	461a      	mov	r2, r3
 800edfe:	4669      	mov	r1, sp
 800ee00:	f7fe fa9c 	bl	800d33c <xQueueGenericSend>
				configASSERT( xResult );
 800ee04:	2800      	cmp	r0, #0
 800ee06:	d1d8      	bne.n	800edba <prvSwitchTimerLists+0x2e>
 800ee08:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee0c:	f383 8811 	msr	BASEPRI, r3
 800ee10:	f3bf 8f6f 	isb	sy
 800ee14:	f3bf 8f4f 	dsb	sy
 800ee18:	e7fe      	b.n	800ee18 <prvSwitchTimerLists+0x8c>
 800ee1a:	bf00      	nop
 800ee1c:	20013684 	.word	0x20013684
 800ee20:	20013688 	.word	0x20013688
 800ee24:	200137a8 	.word	0x200137a8

0800ee28 <prvTimerTask>:
{
 800ee28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ee2c:	4e9b      	ldr	r6, [pc, #620]	; (800f09c <prvTimerTask+0x274>)
 800ee2e:	4d9c      	ldr	r5, [pc, #624]	; (800f0a0 <prvTimerTask+0x278>)
 800ee30:	4c9c      	ldr	r4, [pc, #624]	; (800f0a4 <prvTimerTask+0x27c>)
 800ee32:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800ee34:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800ee38:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ee3c:	6833      	ldr	r3, [r6, #0]
 800ee3e:	681f      	ldr	r7, [r3, #0]
 800ee40:	2f00      	cmp	r7, #0
 800ee42:	f000 80a8 	beq.w	800ef96 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ee46:	68db      	ldr	r3, [r3, #12]
 800ee48:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800ee4a:	f7ff fcf9 	bl	800e840 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800ee4e:	f7ff fd0f 	bl	800e870 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800ee52:	682a      	ldr	r2, [r5, #0]
 800ee54:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800ee56:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800ee58:	f0c0 80ae 	bcc.w	800efb8 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800ee5c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800ee5e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800ee60:	f240 80b4 	bls.w	800efcc <prvTimerTask+0x1a4>
 800ee64:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800ee66:	6820      	ldr	r0, [r4, #0]
 800ee68:	eba7 010a 	sub.w	r1, r7, sl
 800ee6c:	f7ff f89a 	bl	800dfa4 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800ee70:	f7ff fcee 	bl	800e850 <xTaskResumeAll>
 800ee74:	b928      	cbnz	r0, 800ee82 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800ee76:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800ee7a:	f3bf 8f4f 	dsb	sy
 800ee7e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800ee82:	6820      	ldr	r0, [r4, #0]
 800ee84:	2200      	movs	r2, #0
 800ee86:	a902      	add	r1, sp, #8
 800ee88:	f7fe fc94 	bl	800d7b4 <xQueueReceive>
 800ee8c:	2800      	cmp	r0, #0
 800ee8e:	d0d5      	beq.n	800ee3c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800ee90:	9b02      	ldr	r3, [sp, #8]
 800ee92:	2b00      	cmp	r3, #0
 800ee94:	db76      	blt.n	800ef84 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800ee96:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800ee98:	697b      	ldr	r3, [r7, #20]
 800ee9a:	b113      	cbz	r3, 800eea2 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ee9c:	1d38      	adds	r0, r7, #4
 800ee9e:	f7fd fee1 	bl	800cc64 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800eea2:	f7ff fce5 	bl	800e870 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800eea6:	682b      	ldr	r3, [r5, #0]
 800eea8:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800eeaa:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800eeac:	f0c0 808b 	bcc.w	800efc6 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800eeb0:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800eeb2:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800eeb6:	2b09      	cmp	r3, #9
 800eeb8:	d8e3      	bhi.n	800ee82 <prvTimerTask+0x5a>
 800eeba:	e8df f003 	tbb	[pc, r3]
 800eebe:	0505      	.short	0x0505
 800eec0:	5a3d5305 	.word	0x5a3d5305
 800eec4:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800eec8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800eecc:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800eece:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800eed0:	f043 0301 	orr.w	r3, r3, #1
 800eed4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800eed8:	9b03      	ldr	r3, [sp, #12]
 800eeda:	1899      	adds	r1, r3, r2
 800eedc:	bf2c      	ite	cs
 800eede:	2001      	movcs	r0, #1
 800eee0:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800eee2:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800eee4:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800eee6:	f200 808c 	bhi.w	800f002 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800eeea:	ebaa 0303 	sub.w	r3, sl, r3
 800eeee:	429a      	cmp	r2, r3
 800eef0:	d832      	bhi.n	800ef58 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800eef2:	6a3b      	ldr	r3, [r7, #32]
 800eef4:	4638      	mov	r0, r7
 800eef6:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800eef8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800eefc:	075b      	lsls	r3, r3, #29
 800eefe:	d5c0      	bpl.n	800ee82 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800ef00:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800ef02:	9903      	ldr	r1, [sp, #12]
 800ef04:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800ef06:	b172      	cbz	r2, 800ef26 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800ef08:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800ef0a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800ef0e:	2300      	movs	r3, #0
 800ef10:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800ef12:	f7ff fe3f 	bl	800eb94 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800ef16:	2300      	movs	r3, #0
 800ef18:	6820      	ldr	r0, [r4, #0]
 800ef1a:	461a      	mov	r2, r3
 800ef1c:	a906      	add	r1, sp, #24
 800ef1e:	f7fe fa0d 	bl	800d33c <xQueueGenericSend>
							configASSERT( xResult );
 800ef22:	2800      	cmp	r0, #0
 800ef24:	d1ad      	bne.n	800ee82 <prvTimerTask+0x5a>
 800ef26:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef2a:	f383 8811 	msr	BASEPRI, r3
 800ef2e:	f3bf 8f6f 	isb	sy
 800ef32:	f3bf 8f4f 	dsb	sy
 800ef36:	e7fe      	b.n	800ef36 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ef38:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800ef3c:	f043 0301 	orr.w	r3, r3, #1
 800ef40:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800ef44:	9b03      	ldr	r3, [sp, #12]
 800ef46:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800ef48:	2b00      	cmp	r3, #0
 800ef4a:	f000 809d 	beq.w	800f088 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800ef4e:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 800ef50:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800ef52:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800ef54:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 800ef56:	d85e      	bhi.n	800f016 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800ef58:	4b53      	ldr	r3, [pc, #332]	; (800f0a8 <prvTimerTask+0x280>)
 800ef5a:	1d39      	adds	r1, r7, #4
 800ef5c:	6818      	ldr	r0, [r3, #0]
 800ef5e:	f7fd fe69 	bl	800cc34 <vListInsert>
	return xProcessTimerNow;
 800ef62:	e78e      	b.n	800ee82 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ef64:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800ef68:	f023 0301 	bic.w	r3, r3, #1
 800ef6c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 800ef70:	e787      	b.n	800ee82 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800ef72:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800ef76:	079a      	lsls	r2, r3, #30
 800ef78:	d552      	bpl.n	800f020 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ef7a:	f023 0301 	bic.w	r3, r3, #1
 800ef7e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800ef82:	e77e      	b.n	800ee82 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800ef84:	9b03      	ldr	r3, [sp, #12]
 800ef86:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800ef8a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800ef8c:	9b02      	ldr	r3, [sp, #8]
 800ef8e:	2b00      	cmp	r3, #0
 800ef90:	f6ff af77 	blt.w	800ee82 <prvTimerTask+0x5a>
 800ef94:	e77f      	b.n	800ee96 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 800ef96:	f7ff fc53 	bl	800e840 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800ef9a:	f7ff fc69 	bl	800e870 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800ef9e:	682a      	ldr	r2, [r5, #0]
 800efa0:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 800efa2:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800efa4:	d808      	bhi.n	800efb8 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800efa6:	4b40      	ldr	r3, [pc, #256]	; (800f0a8 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 800efa8:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800efac:	681a      	ldr	r2, [r3, #0]
 800efae:	6812      	ldr	r2, [r2, #0]
 800efb0:	fab2 f282 	clz	r2, r2
 800efb4:	0952      	lsrs	r2, r2, #5
 800efb6:	e756      	b.n	800ee66 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 800efb8:	f7ff fee8 	bl	800ed8c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800efbc:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 800efc0:	f7ff fc46 	bl	800e850 <xTaskResumeAll>
 800efc4:	e75d      	b.n	800ee82 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 800efc6:	f7ff fee1 	bl	800ed8c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 800efca:	e771      	b.n	800eeb0 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 800efcc:	f7ff fc40 	bl	800e850 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800efd0:	6832      	ldr	r2, [r6, #0]
 800efd2:	68d2      	ldr	r2, [r2, #12]
 800efd4:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800efd8:	f10b 0104 	add.w	r1, fp, #4
 800efdc:	4608      	mov	r0, r1
 800efde:	9101      	str	r1, [sp, #4]
 800efe0:	f7fd fe40 	bl	800cc64 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800efe4:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 800efe8:	9901      	ldr	r1, [sp, #4]
 800efea:	f010 0f04 	tst.w	r0, #4
 800efee:	d11b      	bne.n	800f028 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800eff0:	f020 0001 	bic.w	r0, r0, #1
 800eff4:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800eff8:	f8db 3020 	ldr.w	r3, [fp, #32]
 800effc:	4658      	mov	r0, fp
 800effe:	4798      	blx	r3
}
 800f000:	e73f      	b.n	800ee82 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800f002:	4553      	cmp	r3, sl
 800f004:	d902      	bls.n	800f00c <prvTimerTask+0x1e4>
 800f006:	2800      	cmp	r0, #0
 800f008:	f43f af73 	beq.w	800eef2 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f00c:	6830      	ldr	r0, [r6, #0]
 800f00e:	1d39      	adds	r1, r7, #4
 800f010:	f7fd fe10 	bl	800cc34 <vListInsert>
	return xProcessTimerNow;
 800f014:	e735      	b.n	800ee82 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f016:	6830      	ldr	r0, [r6, #0]
 800f018:	1d39      	adds	r1, r7, #4
 800f01a:	f7fd fe0b 	bl	800cc34 <vListInsert>
 800f01e:	e730      	b.n	800ee82 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 800f020:	4638      	mov	r0, r7
 800f022:	f7fd fd83 	bl	800cb2c <vPortFree>
 800f026:	e72c      	b.n	800ee82 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f028:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f02c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f030:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 800f032:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f034:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f038:	d903      	bls.n	800f042 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f03a:	6830      	ldr	r0, [r6, #0]
 800f03c:	f7fd fdfa 	bl	800cc34 <vListInsert>
	return xProcessTimerNow;
 800f040:	e7da      	b.n	800eff8 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f042:	ebaa 0307 	sub.w	r3, sl, r7
 800f046:	429a      	cmp	r2, r3
 800f048:	d819      	bhi.n	800f07e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 800f04a:	6823      	ldr	r3, [r4, #0]
 800f04c:	b173      	cbz	r3, 800f06c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 800f04e:	2300      	movs	r3, #0
 800f050:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f052:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f054:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f058:	f7ff fd9c 	bl	800eb94 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f05c:	2300      	movs	r3, #0
 800f05e:	6820      	ldr	r0, [r4, #0]
 800f060:	461a      	mov	r2, r3
 800f062:	a906      	add	r1, sp, #24
 800f064:	f7fe f96a 	bl	800d33c <xQueueGenericSend>
			configASSERT( xResult );
 800f068:	2800      	cmp	r0, #0
 800f06a:	d1c5      	bne.n	800eff8 <prvTimerTask+0x1d0>
 800f06c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f070:	f383 8811 	msr	BASEPRI, r3
 800f074:	f3bf 8f6f 	isb	sy
 800f078:	f3bf 8f4f 	dsb	sy
 800f07c:	e7fe      	b.n	800f07c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f07e:	4b0a      	ldr	r3, [pc, #40]	; (800f0a8 <prvTimerTask+0x280>)
 800f080:	6818      	ldr	r0, [r3, #0]
 800f082:	f7fd fdd7 	bl	800cc34 <vListInsert>
	return xProcessTimerNow;
 800f086:	e7b7      	b.n	800eff8 <prvTimerTask+0x1d0>
 800f088:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f08c:	f383 8811 	msr	BASEPRI, r3
 800f090:	f3bf 8f6f 	isb	sy
 800f094:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f098:	e7fe      	b.n	800f098 <prvTimerTask+0x270>
 800f09a:	bf00      	nop
 800f09c:	20013684 	.word	0x20013684
 800f0a0:	20013754 	.word	0x20013754
 800f0a4:	200137a8 	.word	0x200137a8
 800f0a8:	20013688 	.word	0x20013688

0800f0ac <xTimerCreateTimerTask>:
{
 800f0ac:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800f0ae:	4c23      	ldr	r4, [pc, #140]	; (800f13c <xTimerCreateTimerTask+0x90>)
{
 800f0b0:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 800f0b2:	f7fd fe4f 	bl	800cd54 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800f0b6:	6825      	ldr	r5, [r4, #0]
 800f0b8:	b335      	cbz	r5, 800f108 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800f0ba:	f7fd fe6d 	bl	800cd98 <vPortExitCritical>
	if( xTimerQueue != NULL )
 800f0be:	6823      	ldr	r3, [r4, #0]
 800f0c0:	b1cb      	cbz	r3, 800f0f6 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800f0c2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f0c4:	aa07      	add	r2, sp, #28
 800f0c6:	a906      	add	r1, sp, #24
 800f0c8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800f0ca:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f0ce:	f7fd fc61 	bl	800c994 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800f0d2:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 800f0d6:	2302      	movs	r3, #2
 800f0d8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800f0dc:	9300      	str	r3, [sp, #0]
 800f0de:	9a07      	ldr	r2, [sp, #28]
 800f0e0:	4917      	ldr	r1, [pc, #92]	; (800f140 <xTimerCreateTimerTask+0x94>)
 800f0e2:	4818      	ldr	r0, [pc, #96]	; (800f144 <xTimerCreateTimerTask+0x98>)
 800f0e4:	4623      	mov	r3, r4
 800f0e6:	f7ff fa6d 	bl	800e5c4 <xTaskCreateStatic>
 800f0ea:	4b17      	ldr	r3, [pc, #92]	; (800f148 <xTimerCreateTimerTask+0x9c>)
 800f0ec:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800f0ee:	b110      	cbz	r0, 800f0f6 <xTimerCreateTimerTask+0x4a>
}
 800f0f0:	2001      	movs	r0, #1
 800f0f2:	b009      	add	sp, #36	; 0x24
 800f0f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f0f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0fa:	f383 8811 	msr	BASEPRI, r3
 800f0fe:	f3bf 8f6f 	isb	sy
 800f102:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800f106:	e7fe      	b.n	800f106 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 800f108:	4f10      	ldr	r7, [pc, #64]	; (800f14c <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 800f10a:	4e11      	ldr	r6, [pc, #68]	; (800f150 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 800f10c:	4638      	mov	r0, r7
 800f10e:	f7fd fd71 	bl	800cbf4 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800f112:	4630      	mov	r0, r6
 800f114:	f7fd fd6e 	bl	800cbf4 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800f118:	4a0e      	ldr	r2, [pc, #56]	; (800f154 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f11a:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 800f11c:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800f11e:	4a0e      	ldr	r2, [pc, #56]	; (800f158 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f120:	4b0e      	ldr	r3, [pc, #56]	; (800f15c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 800f122:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f124:	2110      	movs	r1, #16
 800f126:	4a0e      	ldr	r2, [pc, #56]	; (800f160 <xTimerCreateTimerTask+0xb4>)
 800f128:	200a      	movs	r0, #10
 800f12a:	f7fd ffb1 	bl	800d090 <xQueueGenericCreateStatic>
 800f12e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 800f130:	2800      	cmp	r0, #0
 800f132:	d0c2      	beq.n	800f0ba <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800f134:	490b      	ldr	r1, [pc, #44]	; (800f164 <xTimerCreateTimerTask+0xb8>)
 800f136:	f7fe ff0d 	bl	800df54 <vQueueAddToRegistry>
 800f13a:	e7be      	b.n	800f0ba <xTimerCreateTimerTask+0xe>
 800f13c:	200137a8 	.word	0x200137a8
 800f140:	0802c1e8 	.word	0x0802c1e8
 800f144:	0800ee29 	.word	0x0800ee29
 800f148:	200137ac 	.word	0x200137ac
 800f14c:	2001372c 	.word	0x2001372c
 800f150:	20013740 	.word	0x20013740
 800f154:	20013684 	.word	0x20013684
 800f158:	20013688 	.word	0x20013688
 800f15c:	20013758 	.word	0x20013758
 800f160:	2001368c 	.word	0x2001368c
 800f164:	0802c1e0 	.word	0x0802c1e0

0800f168 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800f168:	8880      	ldrh	r0, [r0, #4]
 800f16a:	4770      	bx	lr

0800f16c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800f16c:	b570      	push	{r4, r5, r6, lr}
 800f16e:	6803      	ldr	r3, [r0, #0]
 800f170:	4605      	mov	r5, r0
 800f172:	460c      	mov	r4, r1
 800f174:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f176:	2100      	movs	r1, #0
 800f178:	4798      	blx	r3
 800f17a:	682b      	ldr	r3, [r5, #0]
 800f17c:	4606      	mov	r6, r0
 800f17e:	6a1b      	ldr	r3, [r3, #32]
 800f180:	4628      	mov	r0, r5
 800f182:	4798      	blx	r3
 800f184:	1ba4      	subs	r4, r4, r6
 800f186:	b2a4      	uxth	r4, r4
 800f188:	fbb4 f0f0 	udiv	r0, r4, r0
 800f18c:	bd70      	pop	{r4, r5, r6, pc}

0800f18e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800f18e:	2300      	movs	r3, #0
 800f190:	8083      	strh	r3, [r0, #4]
 800f192:	4770      	bx	lr

0800f194 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800f194:	b510      	push	{r4, lr}
 800f196:	6803      	ldr	r3, [r0, #0]
 800f198:	8881      	ldrh	r1, [r0, #4]
 800f19a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f19c:	4604      	mov	r4, r0
 800f19e:	4798      	blx	r3
 800f1a0:	88a3      	ldrh	r3, [r4, #4]
 800f1a2:	3301      	adds	r3, #1
 800f1a4:	80a3      	strh	r3, [r4, #4]
 800f1a6:	bd10      	pop	{r4, pc}

0800f1a8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800f1a8:	6803      	ldr	r3, [r0, #0]
 800f1aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f1ac:	4718      	bx	r3

0800f1ae <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800f1ae:	4770      	bx	lr

0800f1b0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800f1b0:	4a02      	ldr	r2, [pc, #8]	; (800f1bc <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800f1b2:	6002      	str	r2, [r0, #0]
 800f1b4:	2200      	movs	r2, #0
 800f1b6:	8082      	strh	r2, [r0, #4]
 800f1b8:	4770      	bx	lr
 800f1ba:	bf00      	nop
 800f1bc:	0802c1f8 	.word	0x0802c1f8

0800f1c0 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800f1c0:	b510      	push	{r4, lr}
 800f1c2:	6803      	ldr	r3, [r0, #0]
 800f1c4:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800f1c8:	4604      	mov	r4, r0
 800f1ca:	4798      	blx	r3
 800f1cc:	b110      	cbz	r0, 800f1d4 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800f1ce:	4620      	mov	r0, r4
 800f1d0:	f7f2 f850 	bl	8001274 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800f1d4:	bd10      	pop	{r4, pc}

0800f1d6 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800f1d6:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800f1da:	4770      	bx	lr

0800f1dc <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800f1dc:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800f1e0:	4770      	bx	lr

0800f1e2 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800f1e2:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800f1e6:	4770      	bx	lr

0800f1e8 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800f1e8:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800f1ec:	4770      	bx	lr

0800f1ee <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800f1ee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f1f0:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800f1f4:	461e      	mov	r6, r3
 800f1f6:	6803      	ldr	r3, [r0, #0]
 800f1f8:	460f      	mov	r7, r1
 800f1fa:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f1fe:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800f202:	4604      	mov	r4, r0
 800f204:	4615      	mov	r5, r2
 800f206:	4798      	blx	r3
 800f208:	b93e      	cbnz	r6, 800f21a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800f20a:	1bed      	subs	r5, r5, r7
 800f20c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800f210:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800f214:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800f218:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f21a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800f21e:	e7f7      	b.n	800f210 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800f220 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800f220:	b510      	push	{r4, lr}
 800f222:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f226:	600c      	str	r4, [r1, #0]
 800f228:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f22c:	6011      	str	r1, [r2, #0]
 800f22e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f232:	801a      	strh	r2, [r3, #0]
 800f234:	9b02      	ldr	r3, [sp, #8]
 800f236:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800f23a:	801a      	strh	r2, [r3, #0]
 800f23c:	bd10      	pop	{r4, pc}

0800f23e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800f23e:	b510      	push	{r4, lr}
 800f240:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f244:	600c      	str	r4, [r1, #0]
 800f246:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f24a:	6011      	str	r1, [r2, #0]
 800f24c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f250:	801a      	strh	r2, [r3, #0]
 800f252:	bd10      	pop	{r4, pc}

0800f254 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800f254:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f258:	600b      	str	r3, [r1, #0]
 800f25a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f25e:	6013      	str	r3, [r2, #0]
 800f260:	4770      	bx	lr

0800f262 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800f262:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800f266:	4770      	bx	lr

0800f268 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800f268:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800f26c:	4770      	bx	lr

0800f26e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800f26e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800f272:	4770      	bx	lr

0800f274 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800f274:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800f278:	4770      	bx	lr

0800f27a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800f27a:	4770      	bx	lr

0800f27c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800f27c:	b510      	push	{r4, lr}
 800f27e:	21b4      	movs	r1, #180	; 0xb4
 800f280:	4604      	mov	r4, r0
 800f282:	f018 f96c 	bl	802755e <_ZdlPvj>
 800f286:	4620      	mov	r0, r4
 800f288:	bd10      	pop	{r4, pc}

0800f28a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800f28a:	b570      	push	{r4, r5, r6, lr}
 800f28c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800f290:	428d      	cmp	r5, r1
 800f292:	bfb8      	it	lt
 800f294:	460d      	movlt	r5, r1
 800f296:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f29a:	428d      	cmp	r5, r1
 800f29c:	4604      	mov	r4, r0
 800f29e:	bfa8      	it	ge
 800f2a0:	460d      	movge	r5, r1
 800f2a2:	4616      	mov	r6, r2
 800f2a4:	b99a      	cbnz	r2, 800f2ce <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800f2a6:	6803      	ldr	r3, [r0, #0]
 800f2a8:	4629      	mov	r1, r5
 800f2aa:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f2ae:	4798      	blx	r3
 800f2b0:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f2b4:	b368      	cbz	r0, 800f312 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f2b6:	6803      	ldr	r3, [r0, #0]
 800f2b8:	68db      	ldr	r3, [r3, #12]
 800f2ba:	4798      	blx	r3
 800f2bc:	b348      	cbz	r0, 800f312 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f2be:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f2c2:	6803      	ldr	r3, [r0, #0]
 800f2c4:	4621      	mov	r1, r4
 800f2c6:	689b      	ldr	r3, [r3, #8]
 800f2c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f2cc:	4718      	bx	r3
 800f2ce:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800f2d2:	2b00      	cmp	r3, #0
 800f2d4:	dd08      	ble.n	800f2e8 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800f2d6:	f005 fbe3 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
 800f2da:	4621      	mov	r1, r4
 800f2dc:	3004      	adds	r0, #4
 800f2de:	f005 fc2c 	bl	8014b3a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f2e2:	2300      	movs	r3, #0
 800f2e4:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f2e8:	6823      	ldr	r3, [r4, #0]
 800f2ea:	4620      	mov	r0, r4
 800f2ec:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800f2f0:	4798      	blx	r3
 800f2f2:	2300      	movs	r3, #0
 800f2f4:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800f2f8:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800f2fc:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800f300:	f005 fbce 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
 800f304:	4621      	mov	r1, r4
 800f306:	3004      	adds	r0, #4
 800f308:	f005 fcc0 	bl	8014c8c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800f30c:	2301      	movs	r3, #1
 800f30e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f312:	bd70      	pop	{r4, r5, r6, pc}

0800f314 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800f314:	b510      	push	{r4, lr}
 800f316:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f31a:	4299      	cmp	r1, r3
 800f31c:	bfb8      	it	lt
 800f31e:	4619      	movlt	r1, r3
 800f320:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f324:	4299      	cmp	r1, r3
 800f326:	bfa8      	it	ge
 800f328:	4619      	movge	r1, r3
 800f32a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800f32e:	428b      	cmp	r3, r1
 800f330:	4604      	mov	r4, r0
 800f332:	d010      	beq.n	800f356 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f334:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800f338:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800f33c:	b158      	cbz	r0, 800f356 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f33e:	6803      	ldr	r3, [r0, #0]
 800f340:	68db      	ldr	r3, [r3, #12]
 800f342:	4798      	blx	r3
 800f344:	b138      	cbz	r0, 800f356 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f346:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800f34a:	6803      	ldr	r3, [r0, #0]
 800f34c:	4621      	mov	r1, r4
 800f34e:	689b      	ldr	r3, [r3, #8]
 800f350:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f354:	4718      	bx	r3
 800f356:	bd10      	pop	{r4, pc}

0800f358 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800f358:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f35a:	4604      	mov	r4, r0
 800f35c:	460d      	mov	r5, r1
 800f35e:	b1a9      	cbz	r1, 800f38c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800f360:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800f364:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800f368:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800f36c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800f370:	ab01      	add	r3, sp, #4
 800f372:	1a12      	subs	r2, r2, r0
 800f374:	1b89      	subs	r1, r1, r6
 800f376:	1a38      	subs	r0, r7, r0
 800f378:	f006 fe48 	bl	801600c <_ZN8touchgfx6muldivElllRl>
 800f37c:	4629      	mov	r1, r5
 800f37e:	ab01      	add	r3, sp, #4
 800f380:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800f384:	4430      	add	r0, r6
 800f386:	f006 fe41 	bl	801600c <_ZN8touchgfx6muldivElllRl>
 800f38a:	b285      	uxth	r5, r0
 800f38c:	4628      	mov	r0, r5
 800f38e:	b003      	add	sp, #12
 800f390:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f392 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800f392:	b570      	push	{r4, r5, r6, lr}
 800f394:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800f398:	4604      	mov	r4, r0
 800f39a:	2b00      	cmp	r3, #0
 800f39c:	d035      	beq.n	800f40a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f39e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800f3a2:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800f3a6:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800f3aa:	3001      	adds	r0, #1
 800f3ac:	1ad2      	subs	r2, r2, r3
 800f3ae:	b212      	sxth	r2, r2
 800f3b0:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800f3b4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800f3b8:	2100      	movs	r1, #0
 800f3ba:	b280      	uxth	r0, r0
 800f3bc:	47a8      	blx	r5
 800f3be:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800f3c2:	6823      	ldr	r3, [r4, #0]
 800f3c4:	4401      	add	r1, r0
 800f3c6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f3ca:	4620      	mov	r0, r4
 800f3cc:	4798      	blx	r3
 800f3ce:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800f3d2:	429a      	cmp	r2, r3
 800f3d4:	db19      	blt.n	800f40a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f3d6:	2500      	movs	r5, #0
 800f3d8:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800f3dc:	f005 fb60 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
 800f3e0:	4621      	mov	r1, r4
 800f3e2:	3004      	adds	r0, #4
 800f3e4:	f005 fba9 	bl	8014b3a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f3e8:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f3ec:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800f3f0:	b158      	cbz	r0, 800f40a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f3f2:	6803      	ldr	r3, [r0, #0]
 800f3f4:	68db      	ldr	r3, [r3, #12]
 800f3f6:	4798      	blx	r3
 800f3f8:	b138      	cbz	r0, 800f40a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f3fa:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f3fe:	6803      	ldr	r3, [r0, #0]
 800f400:	4621      	mov	r1, r4
 800f402:	689b      	ldr	r3, [r3, #8]
 800f404:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f408:	4718      	bx	r3
 800f40a:	bd70      	pop	{r4, r5, r6, pc}

0800f40c <_ZN8touchgfx8DrawableC1Ev>:
 800f40c:	4a0a      	ldr	r2, [pc, #40]	; (800f438 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800f40e:	6002      	str	r2, [r0, #0]
 800f410:	2200      	movs	r2, #0
 800f412:	8082      	strh	r2, [r0, #4]
 800f414:	80c2      	strh	r2, [r0, #6]
 800f416:	8102      	strh	r2, [r0, #8]
 800f418:	8142      	strh	r2, [r0, #10]
 800f41a:	8182      	strh	r2, [r0, #12]
 800f41c:	81c2      	strh	r2, [r0, #14]
 800f41e:	8202      	strh	r2, [r0, #16]
 800f420:	8242      	strh	r2, [r0, #18]
 800f422:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800f426:	61c2      	str	r2, [r0, #28]
 800f428:	8402      	strh	r2, [r0, #32]
 800f42a:	8442      	strh	r2, [r0, #34]	; 0x22
 800f42c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800f430:	2201      	movs	r2, #1
 800f432:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800f436:	4770      	bx	lr
 800f438:	0802c998 	.word	0x0802c998

0800f43c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800f43c:	b570      	push	{r4, r5, r6, lr}
 800f43e:	6803      	ldr	r3, [r0, #0]
 800f440:	4604      	mov	r4, r0
 800f442:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f444:	4615      	mov	r5, r2
 800f446:	4798      	blx	r3
 800f448:	6823      	ldr	r3, [r4, #0]
 800f44a:	4629      	mov	r1, r5
 800f44c:	4620      	mov	r0, r4
 800f44e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f450:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f454:	4718      	bx	r3

0800f456 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800f456:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f45a:	4604      	mov	r4, r0
 800f45c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800f460:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800f464:	460e      	mov	r6, r1
 800f466:	4615      	mov	r5, r2
 800f468:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800f46c:	4619      	mov	r1, r3
 800f46e:	463a      	mov	r2, r7
 800f470:	3058      	adds	r0, #88	; 0x58
 800f472:	4698      	mov	r8, r3
 800f474:	f7ff ffe2 	bl	800f43c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f478:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800f47c:	4446      	add	r6, r8
 800f47e:	42b3      	cmp	r3, r6
 800f480:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800f484:	bfb8      	it	lt
 800f486:	8126      	strhlt	r6, [r4, #8]
 800f488:	443d      	add	r5, r7
 800f48a:	42ab      	cmp	r3, r5
 800f48c:	bfb8      	it	lt
 800f48e:	8165      	strhlt	r5, [r4, #10]
 800f490:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f494 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800f494:	b510      	push	{r4, lr}
 800f496:	4604      	mov	r4, r0
 800f498:	302c      	adds	r0, #44	; 0x2c
 800f49a:	f002 fdf8 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800f49e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800f4a2:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800f4a6:	4620      	mov	r0, r4
 800f4a8:	f7ff ffc8 	bl	800f43c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f4ac:	bd10      	pop	{r4, pc}
	...

0800f4b0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800f4b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f4b2:	4604      	mov	r4, r0
 800f4b4:	4626      	mov	r6, r4
 800f4b6:	2500      	movs	r5, #0
 800f4b8:	f7ff ffa8 	bl	800f40c <_ZN8touchgfx8DrawableC1Ev>
 800f4bc:	4b23      	ldr	r3, [pc, #140]	; (800f54c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800f4be:	62a5      	str	r5, [r4, #40]	; 0x28
 800f4c0:	f846 3b2c 	str.w	r3, [r6], #44
 800f4c4:	2226      	movs	r2, #38	; 0x26
 800f4c6:	4629      	mov	r1, r5
 800f4c8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800f4cc:	4630      	mov	r0, r6
 800f4ce:	f8ad 7004 	strh.w	r7, [sp, #4]
 800f4d2:	f019 f83a 	bl	802854a <memset>
 800f4d6:	4630      	mov	r0, r6
 800f4d8:	f7ff ff98 	bl	800f40c <_ZN8touchgfx8DrawableC1Ev>
 800f4dc:	a902      	add	r1, sp, #8
 800f4de:	4b1c      	ldr	r3, [pc, #112]	; (800f550 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800f4e0:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f4e2:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800f4e6:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800f4ea:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800f4ee:	4630      	mov	r0, r6
 800f4f0:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800f4f4:	f002 fdcb 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800f4f8:	4638      	mov	r0, r7
 800f4fa:	f7ff ff87 	bl	800f40c <_ZN8touchgfx8DrawableC1Ev>
 800f4fe:	4b15      	ldr	r3, [pc, #84]	; (800f554 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800f500:	65a3      	str	r3, [r4, #88]	; 0x58
 800f502:	2364      	movs	r3, #100	; 0x64
 800f504:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800f508:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800f50c:	4b12      	ldr	r3, [pc, #72]	; (800f558 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800f50e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800f512:	4629      	mov	r1, r5
 800f514:	4630      	mov	r0, r6
 800f516:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800f51a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800f51e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800f522:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800f526:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800f52a:	f7f1 fe05 	bl	8001138 <_ZN8touchgfx8Drawable4setXEs>
 800f52e:	4629      	mov	r1, r5
 800f530:	4630      	mov	r0, r6
 800f532:	f7f1 fe03 	bl	800113c <_ZN8touchgfx8Drawable4setYEs>
 800f536:	4631      	mov	r1, r6
 800f538:	4620      	mov	r0, r4
 800f53a:	f000 f819 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f53e:	4620      	mov	r0, r4
 800f540:	4639      	mov	r1, r7
 800f542:	f000 f815 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f546:	4620      	mov	r0, r4
 800f548:	b003      	add	sp, #12
 800f54a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f54c:	0802c22c 	.word	0x0802c22c
 800f550:	0802c854 	.word	0x0802c854
 800f554:	0802c300 	.word	0x0802c300
 800f558:	0801676b 	.word	0x0801676b

0800f55c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800f55c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f55e:	2000      	movs	r0, #0
 800f560:	b12b      	cbz	r3, 800f56e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f562:	b920      	cbnz	r0, 800f56e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f564:	1a5a      	subs	r2, r3, r1
 800f566:	4250      	negs	r0, r2
 800f568:	4150      	adcs	r0, r2
 800f56a:	699b      	ldr	r3, [r3, #24]
 800f56c:	e7f8      	b.n	800f560 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800f56e:	4770      	bx	lr

0800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800f570:	2300      	movs	r3, #0
 800f572:	6148      	str	r0, [r1, #20]
 800f574:	618b      	str	r3, [r1, #24]
 800f576:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f578:	b913      	cbnz	r3, 800f580 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800f57a:	6281      	str	r1, [r0, #40]	; 0x28
 800f57c:	4770      	bx	lr
 800f57e:	4613      	mov	r3, r2
 800f580:	699a      	ldr	r2, [r3, #24]
 800f582:	2a00      	cmp	r2, #0
 800f584:	d1fb      	bne.n	800f57e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800f586:	6199      	str	r1, [r3, #24]
 800f588:	4770      	bx	lr

0800f58a <_ZN8touchgfx9Container9removeAllEv>:
 800f58a:	2200      	movs	r2, #0
 800f58c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f58e:	b123      	cbz	r3, 800f59a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800f590:	6999      	ldr	r1, [r3, #24]
 800f592:	6281      	str	r1, [r0, #40]	; 0x28
 800f594:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800f598:	e7f8      	b.n	800f58c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800f59a:	4770      	bx	lr

0800f59c <_ZN8touchgfx9Container6unlinkEv>:
 800f59c:	2300      	movs	r3, #0
 800f59e:	6283      	str	r3, [r0, #40]	; 0x28
 800f5a0:	4770      	bx	lr

0800f5a2 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800f5a2:	2200      	movs	r2, #0
 800f5a4:	8002      	strh	r2, [r0, #0]
 800f5a6:	8042      	strh	r2, [r0, #2]
 800f5a8:	8082      	strh	r2, [r0, #4]
 800f5aa:	80c2      	strh	r2, [r0, #6]
 800f5ac:	4770      	bx	lr

0800f5ae <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800f5ae:	b570      	push	{r4, r5, r6, lr}
 800f5b0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f5b2:	460d      	mov	r5, r1
 800f5b4:	4616      	mov	r6, r2
 800f5b6:	b13c      	cbz	r4, 800f5c8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800f5b8:	6823      	ldr	r3, [r4, #0]
 800f5ba:	4620      	mov	r0, r4
 800f5bc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800f5be:	4632      	mov	r2, r6
 800f5c0:	4629      	mov	r1, r5
 800f5c2:	4798      	blx	r3
 800f5c4:	69a4      	ldr	r4, [r4, #24]
 800f5c6:	e7f6      	b.n	800f5b6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800f5c8:	bd70      	pop	{r4, r5, r6, pc}

0800f5ca <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800f5ca:	b538      	push	{r3, r4, r5, lr}
 800f5cc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f5ce:	460d      	mov	r5, r1
 800f5d0:	b134      	cbz	r4, 800f5e0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800f5d2:	682b      	ldr	r3, [r5, #0]
 800f5d4:	4621      	mov	r1, r4
 800f5d6:	689b      	ldr	r3, [r3, #8]
 800f5d8:	4628      	mov	r0, r5
 800f5da:	4798      	blx	r3
 800f5dc:	69a4      	ldr	r4, [r4, #24]
 800f5de:	e7f7      	b.n	800f5d0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800f5e0:	bd38      	pop	{r3, r4, r5, pc}

0800f5e2 <_ZN8touchgfx9ContainerD1Ev>:
 800f5e2:	4770      	bx	lr

0800f5e4 <_ZN8touchgfx9ContainerD0Ev>:
 800f5e4:	b510      	push	{r4, lr}
 800f5e6:	212c      	movs	r1, #44	; 0x2c
 800f5e8:	4604      	mov	r4, r0
 800f5ea:	f017 ffb8 	bl	802755e <_ZdlPvj>
 800f5ee:	4620      	mov	r0, r4
 800f5f0:	bd10      	pop	{r4, pc}

0800f5f2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800f5f2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f5f4:	b19b      	cbz	r3, 800f61e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f5f6:	428b      	cmp	r3, r1
 800f5f8:	d109      	bne.n	800f60e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800f5fa:	699a      	ldr	r2, [r3, #24]
 800f5fc:	2100      	movs	r1, #0
 800f5fe:	6159      	str	r1, [r3, #20]
 800f600:	6282      	str	r2, [r0, #40]	; 0x28
 800f602:	b902      	cbnz	r2, 800f606 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800f604:	4770      	bx	lr
 800f606:	6199      	str	r1, [r3, #24]
 800f608:	4770      	bx	lr
 800f60a:	4613      	mov	r3, r2
 800f60c:	b13a      	cbz	r2, 800f61e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f60e:	699a      	ldr	r2, [r3, #24]
 800f610:	428a      	cmp	r2, r1
 800f612:	d1fa      	bne.n	800f60a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800f614:	698a      	ldr	r2, [r1, #24]
 800f616:	619a      	str	r2, [r3, #24]
 800f618:	2300      	movs	r3, #0
 800f61a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800f61e:	4770      	bx	lr

0800f620 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800f620:	b410      	push	{r4}
 800f622:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f624:	4604      	mov	r4, r0
 800f626:	b92b      	cbnz	r3, 800f634 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800f628:	6803      	ldr	r3, [r0, #0]
 800f62a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f62e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800f630:	4611      	mov	r1, r2
 800f632:	4718      	bx	r3
 800f634:	b941      	cbnz	r1, 800f648 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800f636:	6193      	str	r3, [r2, #24]
 800f638:	6282      	str	r2, [r0, #40]	; 0x28
 800f63a:	6154      	str	r4, [r2, #20]
 800f63c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f640:	4770      	bx	lr
 800f642:	4603      	mov	r3, r0
 800f644:	2800      	cmp	r0, #0
 800f646:	d0f9      	beq.n	800f63c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800f648:	4299      	cmp	r1, r3
 800f64a:	6998      	ldr	r0, [r3, #24]
 800f64c:	d1f9      	bne.n	800f642 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800f64e:	6190      	str	r0, [r2, #24]
 800f650:	618a      	str	r2, [r1, #24]
 800f652:	e7f2      	b.n	800f63a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800f654 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800f654:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f658:	461f      	mov	r7, r3
 800f65a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800f65e:	460d      	mov	r5, r1
 800f660:	4616      	mov	r6, r2
 800f662:	b103      	cbz	r3, 800f666 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800f664:	6038      	str	r0, [r7, #0]
 800f666:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f668:	b314      	cbz	r4, 800f6b0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800f66a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800f66e:	b1eb      	cbz	r3, 800f6ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f670:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f674:	428d      	cmp	r5, r1
 800f676:	db19      	blt.n	800f6ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f678:	8923      	ldrh	r3, [r4, #8]
 800f67a:	b289      	uxth	r1, r1
 800f67c:	440b      	add	r3, r1
 800f67e:	b21b      	sxth	r3, r3
 800f680:	429d      	cmp	r5, r3
 800f682:	da13      	bge.n	800f6ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f684:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f688:	4296      	cmp	r6, r2
 800f68a:	db0f      	blt.n	800f6ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f68c:	8963      	ldrh	r3, [r4, #10]
 800f68e:	b292      	uxth	r2, r2
 800f690:	4413      	add	r3, r2
 800f692:	b21b      	sxth	r3, r3
 800f694:	429e      	cmp	r6, r3
 800f696:	da09      	bge.n	800f6ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f698:	6823      	ldr	r3, [r4, #0]
 800f69a:	1ab2      	subs	r2, r6, r2
 800f69c:	1a69      	subs	r1, r5, r1
 800f69e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800f6a2:	b212      	sxth	r2, r2
 800f6a4:	463b      	mov	r3, r7
 800f6a6:	b209      	sxth	r1, r1
 800f6a8:	4620      	mov	r0, r4
 800f6aa:	47c0      	blx	r8
 800f6ac:	69a4      	ldr	r4, [r4, #24]
 800f6ae:	e7db      	b.n	800f668 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800f6b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f6b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800f6b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f6b8:	4c6e      	ldr	r4, [pc, #440]	; (800f874 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800f6ba:	b0a1      	sub	sp, #132	; 0x84
 800f6bc:	6824      	ldr	r4, [r4, #0]
 800f6be:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800f6c0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800f6c4:	9303      	str	r3, [sp, #12]
 800f6c6:	2400      	movs	r4, #0
 800f6c8:	802c      	strh	r4, [r5, #0]
 800f6ca:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800f6cc:	802c      	strh	r4, [r5, #0]
 800f6ce:	601c      	str	r4, [r3, #0]
 800f6d0:	4606      	mov	r6, r0
 800f6d2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800f6d6:	f7ff ffbd 	bl	800f654 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f6da:	f1b9 0f03 	cmp.w	r9, #3
 800f6de:	f340 80c2 	ble.w	800f866 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800f6e2:	4631      	mov	r1, r6
 800f6e4:	a80c      	add	r0, sp, #48	; 0x30
 800f6e6:	f006 fb5f 	bl	8015da8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f6ea:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800f6ee:	9306      	str	r3, [sp, #24]
 800f6f0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800f6f4:	9307      	str	r3, [sp, #28]
 800f6f6:	9b03      	ldr	r3, [sp, #12]
 800f6f8:	f8d3 a000 	ldr.w	sl, [r3]
 800f6fc:	f1ba 0f00 	cmp.w	sl, #0
 800f700:	f000 80b4 	beq.w	800f86c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800f704:	4651      	mov	r1, sl
 800f706:	a810      	add	r0, sp, #64	; 0x40
 800f708:	f006 fb4e 	bl	8015da8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f70c:	9b01      	ldr	r3, [sp, #4]
 800f70e:	9a06      	ldr	r2, [sp, #24]
 800f710:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800f714:	189d      	adds	r5, r3, r2
 800f716:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800f71a:	9a07      	ldr	r2, [sp, #28]
 800f71c:	2002      	movs	r0, #2
 800f71e:	fb91 f1f0 	sdiv	r1, r1, r0
 800f722:	4419      	add	r1, r3
 800f724:	1a6d      	subs	r5, r5, r1
 800f726:	9b02      	ldr	r3, [sp, #8]
 800f728:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800f72c:	4413      	add	r3, r2
 800f72e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800f732:	fb92 f2f0 	sdiv	r2, r2, r0
 800f736:	440a      	add	r2, r1
 800f738:	1a9b      	subs	r3, r3, r2
 800f73a:	435b      	muls	r3, r3
 800f73c:	fb05 3505 	mla	r5, r5, r5, r3
 800f740:	4f4d      	ldr	r7, [pc, #308]	; (800f878 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800f742:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f744:	ac10      	add	r4, sp, #64	; 0x40
 800f746:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f748:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f74a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f74c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f74e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f750:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800f754:	f1b9 0f0c 	cmp.w	r9, #12
 800f758:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800f75c:	f04f 0303 	mov.w	r3, #3
 800f760:	bfc8      	it	gt
 800f762:	4698      	movgt	r8, r3
 800f764:	f8cd 9000 	str.w	r9, [sp]
 800f768:	f04f 0400 	mov.w	r4, #0
 800f76c:	bfdc      	itt	le
 800f76e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800f772:	fb92 f8f3 	sdivle	r8, r2, r3
 800f776:	1c63      	adds	r3, r4, #1
 800f778:	aa10      	add	r2, sp, #64	; 0x40
 800f77a:	f004 0401 	and.w	r4, r4, #1
 800f77e:	9308      	str	r3, [sp, #32]
 800f780:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800f784:	9b00      	ldr	r3, [sp, #0]
 800f786:	fb93 f3f8 	sdiv	r3, r3, r8
 800f78a:	b29b      	uxth	r3, r3
 800f78c:	3404      	adds	r4, #4
 800f78e:	f04f 0b00 	mov.w	fp, #0
 800f792:	9304      	str	r3, [sp, #16]
 800f794:	9a04      	ldr	r2, [sp, #16]
 800f796:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800f79a:	fb13 f302 	smulbb	r3, r3, r2
 800f79e:	9a01      	ldr	r2, [sp, #4]
 800f7a0:	b29b      	uxth	r3, r3
 800f7a2:	1899      	adds	r1, r3, r2
 800f7a4:	9305      	str	r3, [sp, #20]
 800f7a6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800f7aa:	b209      	sxth	r1, r1
 800f7ac:	4299      	cmp	r1, r3
 800f7ae:	db4d      	blt.n	800f84c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f7b0:	8932      	ldrh	r2, [r6, #8]
 800f7b2:	4413      	add	r3, r2
 800f7b4:	b21b      	sxth	r3, r3
 800f7b6:	4299      	cmp	r1, r3
 800f7b8:	da48      	bge.n	800f84c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f7ba:	9b04      	ldr	r3, [sp, #16]
 800f7bc:	6827      	ldr	r7, [r4, #0]
 800f7be:	fb17 f703 	smulbb	r7, r7, r3
 800f7c2:	9b02      	ldr	r3, [sp, #8]
 800f7c4:	b2bf      	uxth	r7, r7
 800f7c6:	18fa      	adds	r2, r7, r3
 800f7c8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800f7cc:	b212      	sxth	r2, r2
 800f7ce:	429a      	cmp	r2, r3
 800f7d0:	db3c      	blt.n	800f84c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f7d2:	8970      	ldrh	r0, [r6, #10]
 800f7d4:	4403      	add	r3, r0
 800f7d6:	b21b      	sxth	r3, r3
 800f7d8:	429a      	cmp	r2, r3
 800f7da:	da37      	bge.n	800f84c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f7dc:	2300      	movs	r3, #0
 800f7de:	930b      	str	r3, [sp, #44]	; 0x2c
 800f7e0:	4630      	mov	r0, r6
 800f7e2:	ab0b      	add	r3, sp, #44	; 0x2c
 800f7e4:	f7ff ff36 	bl	800f654 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f7e8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f7ea:	b37a      	cbz	r2, 800f84c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f7ec:	4552      	cmp	r2, sl
 800f7ee:	d02d      	beq.n	800f84c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f7f0:	4611      	mov	r1, r2
 800f7f2:	a80e      	add	r0, sp, #56	; 0x38
 800f7f4:	9209      	str	r2, [sp, #36]	; 0x24
 800f7f6:	f006 fad7 	bl	8015da8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f7fa:	9a06      	ldr	r2, [sp, #24]
 800f7fc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800f800:	9b01      	ldr	r3, [sp, #4]
 800f802:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800f806:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800f80a:	4413      	add	r3, r2
 800f80c:	f04f 0e02 	mov.w	lr, #2
 800f810:	fb91 f1fe 	sdiv	r1, r1, lr
 800f814:	4401      	add	r1, r0
 800f816:	1a58      	subs	r0, r3, r1
 800f818:	9a07      	ldr	r2, [sp, #28]
 800f81a:	9b02      	ldr	r3, [sp, #8]
 800f81c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800f820:	fb9c fcfe 	sdiv	ip, ip, lr
 800f824:	4413      	add	r3, r2
 800f826:	448c      	add	ip, r1
 800f828:	eba3 030c 	sub.w	r3, r3, ip
 800f82c:	435b      	muls	r3, r3
 800f82e:	fb00 3300 	mla	r3, r0, r0, r3
 800f832:	42ab      	cmp	r3, r5
 800f834:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f836:	d208      	bcs.n	800f84a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800f838:	9803      	ldr	r0, [sp, #12]
 800f83a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800f83c:	6001      	str	r1, [r0, #0]
 800f83e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800f840:	9805      	ldr	r0, [sp, #20]
 800f842:	8008      	strh	r0, [r1, #0]
 800f844:	992b      	ldr	r1, [sp, #172]	; 0xac
 800f846:	461d      	mov	r5, r3
 800f848:	800f      	strh	r7, [r1, #0]
 800f84a:	4692      	mov	sl, r2
 800f84c:	f10b 0b01 	add.w	fp, fp, #1
 800f850:	f1bb 0f04 	cmp.w	fp, #4
 800f854:	f104 0408 	add.w	r4, r4, #8
 800f858:	d19c      	bne.n	800f794 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800f85a:	9b00      	ldr	r3, [sp, #0]
 800f85c:	9c08      	ldr	r4, [sp, #32]
 800f85e:	444b      	add	r3, r9
 800f860:	4544      	cmp	r4, r8
 800f862:	9300      	str	r3, [sp, #0]
 800f864:	d187      	bne.n	800f776 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800f866:	b021      	add	sp, #132	; 0x84
 800f868:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f86c:	f04f 35ff 	mov.w	r5, #4294967295
 800f870:	e766      	b.n	800f740 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800f872:	bf00      	nop
 800f874:	200137bc 	.word	0x200137bc
 800f878:	08029258 	.word	0x08029258

0800f87c <_ZN8touchgfx4RectaNERKS0_>:
 800f87c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f880:	f9b1 7000 	ldrsh.w	r7, [r1]
 800f884:	888c      	ldrh	r4, [r1, #4]
 800f886:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f88a:	443c      	add	r4, r7
 800f88c:	b2a4      	uxth	r4, r4
 800f88e:	fa0f f884 	sxth.w	r8, r4
 800f892:	45c1      	cmp	r9, r8
 800f894:	da2f      	bge.n	800f8f6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f896:	8882      	ldrh	r2, [r0, #4]
 800f898:	444a      	add	r2, r9
 800f89a:	b292      	uxth	r2, r2
 800f89c:	fa0f fe82 	sxth.w	lr, r2
 800f8a0:	4577      	cmp	r7, lr
 800f8a2:	da28      	bge.n	800f8f6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f8a4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800f8a8:	88cb      	ldrh	r3, [r1, #6]
 800f8aa:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800f8ae:	442b      	add	r3, r5
 800f8b0:	b21b      	sxth	r3, r3
 800f8b2:	429e      	cmp	r6, r3
 800f8b4:	da1f      	bge.n	800f8f6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f8b6:	88c3      	ldrh	r3, [r0, #6]
 800f8b8:	4433      	add	r3, r6
 800f8ba:	b29b      	uxth	r3, r3
 800f8bc:	fa0f fc83 	sxth.w	ip, r3
 800f8c0:	4565      	cmp	r5, ip
 800f8c2:	da18      	bge.n	800f8f6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f8c4:	454f      	cmp	r7, r9
 800f8c6:	bfb8      	it	lt
 800f8c8:	464f      	movlt	r7, r9
 800f8ca:	42b5      	cmp	r5, r6
 800f8cc:	bfb8      	it	lt
 800f8ce:	4635      	movlt	r5, r6
 800f8d0:	45f0      	cmp	r8, lr
 800f8d2:	bfd8      	it	le
 800f8d4:	4622      	movle	r2, r4
 800f8d6:	1bd2      	subs	r2, r2, r7
 800f8d8:	8082      	strh	r2, [r0, #4]
 800f8da:	884a      	ldrh	r2, [r1, #2]
 800f8dc:	88c9      	ldrh	r1, [r1, #6]
 800f8de:	8007      	strh	r7, [r0, #0]
 800f8e0:	440a      	add	r2, r1
 800f8e2:	b292      	uxth	r2, r2
 800f8e4:	b211      	sxth	r1, r2
 800f8e6:	458c      	cmp	ip, r1
 800f8e8:	bfa8      	it	ge
 800f8ea:	4613      	movge	r3, r2
 800f8ec:	1b5b      	subs	r3, r3, r5
 800f8ee:	80c3      	strh	r3, [r0, #6]
 800f8f0:	8045      	strh	r5, [r0, #2]
 800f8f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f8f6:	2300      	movs	r3, #0
 800f8f8:	8003      	strh	r3, [r0, #0]
 800f8fa:	8043      	strh	r3, [r0, #2]
 800f8fc:	8083      	strh	r3, [r0, #4]
 800f8fe:	80c3      	strh	r3, [r0, #6]
 800f900:	e7f7      	b.n	800f8f2 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800f902 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800f902:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f906:	2b00      	cmp	r3, #0
 800f908:	dd06      	ble.n	800f918 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800f90a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800f90e:	2800      	cmp	r0, #0
 800f910:	bfcc      	ite	gt
 800f912:	2000      	movgt	r0, #0
 800f914:	2001      	movle	r0, #1
 800f916:	4770      	bx	lr
 800f918:	2001      	movs	r0, #1
 800f91a:	4770      	bx	lr

0800f91c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800f91c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f920:	2300      	movs	r3, #0
 800f922:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800f924:	8003      	strh	r3, [r0, #0]
 800f926:	4604      	mov	r4, r0
 800f928:	8043      	strh	r3, [r0, #2]
 800f92a:	8083      	strh	r3, [r0, #4]
 800f92c:	80c3      	strh	r3, [r0, #6]
 800f92e:	2d00      	cmp	r5, #0
 800f930:	d040      	beq.n	800f9b4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800f932:	1d28      	adds	r0, r5, #4
 800f934:	f7ff ffe5 	bl	800f902 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f938:	b988      	cbnz	r0, 800f95e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800f93a:	4620      	mov	r0, r4
 800f93c:	f7ff ffe1 	bl	800f902 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f940:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800f944:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f948:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800f94c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800f950:	b138      	cbz	r0, 800f962 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800f952:	8022      	strh	r2, [r4, #0]
 800f954:	8063      	strh	r3, [r4, #2]
 800f956:	f8a4 e004 	strh.w	lr, [r4, #4]
 800f95a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800f95e:	69ad      	ldr	r5, [r5, #24]
 800f960:	e7e5      	b.n	800f92e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800f962:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f966:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f96a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800f96e:	4290      	cmp	r0, r2
 800f970:	4607      	mov	r7, r0
 800f972:	bfa8      	it	ge
 800f974:	4617      	movge	r7, r2
 800f976:	4472      	add	r2, lr
 800f978:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800f97c:	8027      	strh	r7, [r4, #0]
 800f97e:	4299      	cmp	r1, r3
 800f980:	460e      	mov	r6, r1
 800f982:	4440      	add	r0, r8
 800f984:	bfa8      	it	ge
 800f986:	461e      	movge	r6, r3
 800f988:	4471      	add	r1, lr
 800f98a:	4463      	add	r3, ip
 800f98c:	b200      	sxth	r0, r0
 800f98e:	b212      	sxth	r2, r2
 800f990:	b209      	sxth	r1, r1
 800f992:	b21b      	sxth	r3, r3
 800f994:	4290      	cmp	r0, r2
 800f996:	bfac      	ite	ge
 800f998:	ebc7 0200 	rsbge	r2, r7, r0
 800f99c:	ebc7 0202 	rsblt	r2, r7, r2
 800f9a0:	4299      	cmp	r1, r3
 800f9a2:	bfac      	ite	ge
 800f9a4:	ebc6 0301 	rsbge	r3, r6, r1
 800f9a8:	ebc6 0303 	rsblt	r3, r6, r3
 800f9ac:	8066      	strh	r6, [r4, #2]
 800f9ae:	80a2      	strh	r2, [r4, #4]
 800f9b0:	80e3      	strh	r3, [r4, #6]
 800f9b2:	e7d4      	b.n	800f95e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800f9b4:	4620      	mov	r0, r4
 800f9b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f9ba <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800f9ba:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800f9be:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800f9c2:	b383      	cbz	r3, 800fa26 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800f9c4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f9c6:	b374      	cbz	r4, 800fa26 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800f9c8:	f9b1 5000 	ldrsh.w	r5, [r1]
 800f9cc:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800f9d0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800f9d4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800f9d8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800f9dc:	b303      	cbz	r3, 800fa20 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800f9de:	4668      	mov	r0, sp
 800f9e0:	1d21      	adds	r1, r4, #4
 800f9e2:	f8ad 5000 	strh.w	r5, [sp]
 800f9e6:	f8ad 6002 	strh.w	r6, [sp, #2]
 800f9ea:	f8ad 7004 	strh.w	r7, [sp, #4]
 800f9ee:	f8ad 8006 	strh.w	r8, [sp, #6]
 800f9f2:	f7ff ff43 	bl	800f87c <_ZN8touchgfx4RectaNERKS0_>
 800f9f6:	4668      	mov	r0, sp
 800f9f8:	f7ff ff83 	bl	800f902 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f9fc:	b980      	cbnz	r0, 800fa20 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800f9fe:	f8bd 3000 	ldrh.w	r3, [sp]
 800fa02:	88a2      	ldrh	r2, [r4, #4]
 800fa04:	1a9b      	subs	r3, r3, r2
 800fa06:	f8ad 3000 	strh.w	r3, [sp]
 800fa0a:	88e2      	ldrh	r2, [r4, #6]
 800fa0c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800fa10:	1a9b      	subs	r3, r3, r2
 800fa12:	f8ad 3002 	strh.w	r3, [sp, #2]
 800fa16:	6823      	ldr	r3, [r4, #0]
 800fa18:	4669      	mov	r1, sp
 800fa1a:	689b      	ldr	r3, [r3, #8]
 800fa1c:	4620      	mov	r0, r4
 800fa1e:	4798      	blx	r3
 800fa20:	69a4      	ldr	r4, [r4, #24]
 800fa22:	2c00      	cmp	r4, #0
 800fa24:	d1d8      	bne.n	800f9d8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800fa26:	b002      	add	sp, #8
 800fa28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fa2c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800fa2c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fa2e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800fa32:	460d      	mov	r5, r1
 800fa34:	4616      	mov	r6, r2
 800fa36:	b323      	cbz	r3, 800fa82 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800fa38:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fa3a:	b314      	cbz	r4, 800fa82 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800fa3c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fa40:	b1eb      	cbz	r3, 800fa7e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800fa42:	6828      	ldr	r0, [r5, #0]
 800fa44:	6869      	ldr	r1, [r5, #4]
 800fa46:	466b      	mov	r3, sp
 800fa48:	c303      	stmia	r3!, {r0, r1}
 800fa4a:	4668      	mov	r0, sp
 800fa4c:	1d21      	adds	r1, r4, #4
 800fa4e:	f7ff ff15 	bl	800f87c <_ZN8touchgfx4RectaNERKS0_>
 800fa52:	4668      	mov	r0, sp
 800fa54:	f7ff ff55 	bl	800f902 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fa58:	b988      	cbnz	r0, 800fa7e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800fa5a:	f8bd 3000 	ldrh.w	r3, [sp]
 800fa5e:	88a2      	ldrh	r2, [r4, #4]
 800fa60:	1a9b      	subs	r3, r3, r2
 800fa62:	f8ad 3000 	strh.w	r3, [sp]
 800fa66:	88e2      	ldrh	r2, [r4, #6]
 800fa68:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800fa6c:	1a9b      	subs	r3, r3, r2
 800fa6e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800fa72:	6823      	ldr	r3, [r4, #0]
 800fa74:	4632      	mov	r2, r6
 800fa76:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800fa78:	4669      	mov	r1, sp
 800fa7a:	4620      	mov	r0, r4
 800fa7c:	4798      	blx	r3
 800fa7e:	69a4      	ldr	r4, [r4, #24]
 800fa80:	e7db      	b.n	800fa3a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800fa82:	b002      	add	sp, #8
 800fa84:	bd70      	pop	{r4, r5, r6, pc}

0800fa86 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800fa86:	b513      	push	{r0, r1, r4, lr}
 800fa88:	6803      	ldr	r3, [r0, #0]
 800fa8a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800fa8e:	2300      	movs	r3, #0
 800fa90:	e9cd 3300 	strd	r3, r3, [sp]
 800fa94:	466b      	mov	r3, sp
 800fa96:	47a0      	blx	r4
 800fa98:	b002      	add	sp, #8
 800fa9a:	bd10      	pop	{r4, pc}

0800fa9c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800fa9c:	2301      	movs	r3, #1
 800fa9e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800faa2:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800faa6:	4770      	bx	lr

0800faa8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800faa8:	2301      	movs	r3, #1
 800faaa:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800faae:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800fab2:	4770      	bx	lr

0800fab4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800fab4:	6843      	ldr	r3, [r0, #4]
 800fab6:	2201      	movs	r2, #1
 800fab8:	725a      	strb	r2, [r3, #9]
 800faba:	6840      	ldr	r0, [r0, #4]
 800fabc:	6803      	ldr	r3, [r0, #0]
 800fabe:	691b      	ldr	r3, [r3, #16]
 800fac0:	4718      	bx	r3

0800fac2 <_ZN8touchgfx3HAL8flushDMAEv>:
 800fac2:	6840      	ldr	r0, [r0, #4]
 800fac4:	6803      	ldr	r3, [r0, #0]
 800fac6:	689b      	ldr	r3, [r3, #8]
 800fac8:	4718      	bx	r3

0800faca <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800faca:	b530      	push	{r4, r5, lr}
 800facc:	b08b      	sub	sp, #44	; 0x2c
 800face:	6804      	ldr	r4, [r0, #0]
 800fad0:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800fad4:	9509      	str	r5, [sp, #36]	; 0x24
 800fad6:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800fada:	9508      	str	r5, [sp, #32]
 800fadc:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800fae0:	9507      	str	r5, [sp, #28]
 800fae2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800fae6:	9506      	str	r5, [sp, #24]
 800fae8:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800faec:	9505      	str	r5, [sp, #20]
 800faee:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800faf2:	9504      	str	r5, [sp, #16]
 800faf4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800faf8:	9503      	str	r5, [sp, #12]
 800fafa:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800fafe:	9502      	str	r5, [sp, #8]
 800fb00:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800fb04:	e9cd 3500 	strd	r3, r5, [sp]
 800fb08:	4613      	mov	r3, r2
 800fb0a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800fb0c:	2200      	movs	r2, #0
 800fb0e:	47a0      	blx	r4
 800fb10:	b00b      	add	sp, #44	; 0x2c
 800fb12:	bd30      	pop	{r4, r5, pc}

0800fb14 <_ZN8touchgfx3HAL10beginFrameEv>:
 800fb14:	4b04      	ldr	r3, [pc, #16]	; (800fb28 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800fb16:	781b      	ldrb	r3, [r3, #0]
 800fb18:	b123      	cbz	r3, 800fb24 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800fb1a:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 800fb1e:	f080 0001 	eor.w	r0, r0, #1
 800fb22:	4770      	bx	lr
 800fb24:	2001      	movs	r0, #1
 800fb26:	4770      	bx	lr
 800fb28:	200137ba 	.word	0x200137ba

0800fb2c <_ZN8touchgfx3HAL8endFrameEv>:
 800fb2c:	b510      	push	{r4, lr}
 800fb2e:	4604      	mov	r4, r0
 800fb30:	6840      	ldr	r0, [r0, #4]
 800fb32:	6803      	ldr	r3, [r0, #0]
 800fb34:	689b      	ldr	r3, [r3, #8]
 800fb36:	4798      	blx	r3
 800fb38:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 800fb3c:	b113      	cbz	r3, 800fb44 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800fb3e:	2301      	movs	r3, #1
 800fb40:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800fb44:	bd10      	pop	{r4, pc}

0800fb46 <_ZN8touchgfx3HAL10initializeEv>:
 800fb46:	b510      	push	{r4, lr}
 800fb48:	4604      	mov	r4, r0
 800fb4a:	f7f0 ff4f 	bl	80009ec <_ZN8touchgfx10OSWrappers10initializeEv>
 800fb4e:	f7f0 fe5b 	bl	8000808 <_ZN8touchgfx4GPIO4initEv>
 800fb52:	6860      	ldr	r0, [r4, #4]
 800fb54:	6803      	ldr	r3, [r0, #0]
 800fb56:	68db      	ldr	r3, [r3, #12]
 800fb58:	4798      	blx	r3
 800fb5a:	68e0      	ldr	r0, [r4, #12]
 800fb5c:	6803      	ldr	r3, [r0, #0]
 800fb5e:	689b      	ldr	r3, [r3, #8]
 800fb60:	4798      	blx	r3
 800fb62:	6823      	ldr	r3, [r4, #0]
 800fb64:	4620      	mov	r0, r4
 800fb66:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800fb68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fb6c:	4718      	bx	r3
	...

0800fb70 <_ZN8touchgfx3HAL4tickEv>:
 800fb70:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fb72:	6803      	ldr	r3, [r0, #0]
 800fb74:	4d5b      	ldr	r5, [pc, #364]	; (800fce4 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800fb76:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800fb7a:	4604      	mov	r4, r0
 800fb7c:	4798      	blx	r3
 800fb7e:	2800      	cmp	r0, #0
 800fb80:	f000 8095 	beq.w	800fcae <_ZN8touchgfx3HAL4tickEv+0x13e>
 800fb84:	2001      	movs	r0, #1
 800fb86:	f7f0 fdf1 	bl	800076c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800fb8a:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 800fb8e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800fb92:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 800fb96:	2600      	movs	r6, #0
 800fb98:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 800fb9c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800fba0:	b133      	cbz	r3, 800fbb0 <_ZN8touchgfx3HAL4tickEv+0x40>
 800fba2:	6823      	ldr	r3, [r4, #0]
 800fba4:	4620      	mov	r0, r4
 800fba6:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800fbaa:	4798      	blx	r3
 800fbac:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 800fbb0:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800fbb4:	6862      	ldr	r2, [r4, #4]
 800fbb6:	f083 0301 	eor.w	r3, r3, #1
 800fbba:	7253      	strb	r3, [r2, #9]
 800fbbc:	2601      	movs	r6, #1
 800fbbe:	702e      	strb	r6, [r5, #0]
 800fbc0:	f004 ff6e 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
 800fbc4:	6803      	ldr	r3, [r0, #0]
 800fbc6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800fbc8:	4798      	blx	r3
 800fbca:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800fbce:	b90b      	cbnz	r3, 800fbd4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800fbd0:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 800fbd4:	f004 ff64 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
 800fbd8:	6803      	ldr	r3, [r0, #0]
 800fbda:	695b      	ldr	r3, [r3, #20]
 800fbdc:	4798      	blx	r3
 800fbde:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800fbe0:	6803      	ldr	r3, [r0, #0]
 800fbe2:	691b      	ldr	r3, [r3, #16]
 800fbe4:	4798      	blx	r3
 800fbe6:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800fbea:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 800fbee:	3b01      	subs	r3, #1
 800fbf0:	b2db      	uxtb	r3, r3
 800fbf2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800fbf6:	b10a      	cbz	r2, 800fbfc <_ZN8touchgfx3HAL4tickEv+0x8c>
 800fbf8:	2b00      	cmp	r3, #0
 800fbfa:	d1eb      	bne.n	800fbd4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800fbfc:	4a3a      	ldr	r2, [pc, #232]	; (800fce8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800fbfe:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 800fc02:	7813      	ldrb	r3, [r2, #0]
 800fc04:	3301      	adds	r3, #1
 800fc06:	b25b      	sxtb	r3, r3
 800fc08:	4299      	cmp	r1, r3
 800fc0a:	7013      	strb	r3, [r2, #0]
 800fc0c:	dc10      	bgt.n	800fc30 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800fc0e:	68e0      	ldr	r0, [r4, #12]
 800fc10:	2300      	movs	r3, #0
 800fc12:	7013      	strb	r3, [r2, #0]
 800fc14:	6803      	ldr	r3, [r0, #0]
 800fc16:	aa03      	add	r2, sp, #12
 800fc18:	68db      	ldr	r3, [r3, #12]
 800fc1a:	a902      	add	r1, sp, #8
 800fc1c:	4798      	blx	r3
 800fc1e:	6823      	ldr	r3, [r4, #0]
 800fc20:	2800      	cmp	r0, #0
 800fc22:	d050      	beq.n	800fcc6 <_ZN8touchgfx3HAL4tickEv+0x156>
 800fc24:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800fc28:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800fc2c:	4620      	mov	r0, r4
 800fc2e:	4798      	blx	r3
 800fc30:	6960      	ldr	r0, [r4, #20]
 800fc32:	2300      	movs	r3, #0
 800fc34:	f88d 3007 	strb.w	r3, [sp, #7]
 800fc38:	b158      	cbz	r0, 800fc52 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800fc3a:	6803      	ldr	r3, [r0, #0]
 800fc3c:	f10d 0107 	add.w	r1, sp, #7
 800fc40:	68db      	ldr	r3, [r3, #12]
 800fc42:	4798      	blx	r3
 800fc44:	b128      	cbz	r0, 800fc52 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800fc46:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800fc48:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800fc4c:	6803      	ldr	r3, [r0, #0]
 800fc4e:	68db      	ldr	r3, [r3, #12]
 800fc50:	4798      	blx	r3
 800fc52:	f104 001c 	add.w	r0, r4, #28
 800fc56:	f015 fcc5 	bl	80255e4 <_ZN8touchgfx8Gestures4tickEv>
 800fc5a:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 800fc5e:	b30b      	cbz	r3, 800fca4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800fc60:	6920      	ldr	r0, [r4, #16]
 800fc62:	6803      	ldr	r3, [r0, #0]
 800fc64:	691b      	ldr	r3, [r3, #16]
 800fc66:	4798      	blx	r3
 800fc68:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800fc6a:	4606      	mov	r6, r0
 800fc6c:	b903      	cbnz	r3, 800fc70 <_ZN8touchgfx3HAL4tickEv+0x100>
 800fc6e:	6760      	str	r0, [r4, #116]	; 0x74
 800fc70:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800fc72:	4a1e      	ldr	r2, [pc, #120]	; (800fcec <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800fc74:	1af3      	subs	r3, r6, r3
 800fc76:	4293      	cmp	r3, r2
 800fc78:	d914      	bls.n	800fca4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800fc7a:	6920      	ldr	r0, [r4, #16]
 800fc7c:	6803      	ldr	r3, [r0, #0]
 800fc7e:	699b      	ldr	r3, [r3, #24]
 800fc80:	4798      	blx	r3
 800fc82:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800fc84:	2264      	movs	r2, #100	; 0x64
 800fc86:	1af3      	subs	r3, r6, r3
 800fc88:	fbb3 f3f2 	udiv	r3, r3, r2
 800fc8c:	fbb0 f0f3 	udiv	r0, r0, r3
 800fc90:	2800      	cmp	r0, #0
 800fc92:	dc1d      	bgt.n	800fcd0 <_ZN8touchgfx3HAL4tickEv+0x160>
 800fc94:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 800fc98:	6920      	ldr	r0, [r4, #16]
 800fc9a:	6803      	ldr	r3, [r0, #0]
 800fc9c:	2100      	movs	r1, #0
 800fc9e:	69db      	ldr	r3, [r3, #28]
 800fca0:	4798      	blx	r3
 800fca2:	6766      	str	r6, [r4, #116]	; 0x74
 800fca4:	f004 fefc 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
 800fca8:	6803      	ldr	r3, [r0, #0]
 800fcaa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fcac:	4798      	blx	r3
 800fcae:	6823      	ldr	r3, [r4, #0]
 800fcb0:	4620      	mov	r0, r4
 800fcb2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800fcb6:	4798      	blx	r3
 800fcb8:	2001      	movs	r0, #1
 800fcba:	f7f0 fd6f 	bl	800079c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800fcbe:	2300      	movs	r3, #0
 800fcc0:	702b      	strb	r3, [r5, #0]
 800fcc2:	b004      	add	sp, #16
 800fcc4:	bd70      	pop	{r4, r5, r6, pc}
 800fcc6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800fcca:	4620      	mov	r0, r4
 800fccc:	4798      	blx	r3
 800fcce:	e7af      	b.n	800fc30 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800fcd0:	2863      	cmp	r0, #99	; 0x63
 800fcd2:	bfcb      	itete	gt
 800fcd4:	2300      	movgt	r3, #0
 800fcd6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800fcda:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 800fcde:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 800fce2:	e7d9      	b.n	800fc98 <_ZN8touchgfx3HAL4tickEv+0x128>
 800fce4:	200137c0 	.word	0x200137c0
 800fce8:	200137c1 	.word	0x200137c1
 800fcec:	05f5e100 	.word	0x05f5e100

0800fcf0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800fcf0:	b510      	push	{r4, lr}
 800fcf2:	4604      	mov	r4, r0
 800fcf4:	f7f0 feaa 	bl	8000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800fcf8:	6863      	ldr	r3, [r4, #4]
 800fcfa:	2200      	movs	r2, #0
 800fcfc:	729a      	strb	r2, [r3, #10]
 800fcfe:	bd10      	pop	{r4, pc}

0800fd00 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800fd00:	65c1      	str	r1, [r0, #92]	; 0x5c
 800fd02:	301c      	adds	r0, #28
 800fd04:	f015 bc6c 	b.w	80255e0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800fd08 <_ZN8touchgfx3HAL5touchEll>:
 800fd08:	b530      	push	{r4, r5, lr}
 800fd0a:	b087      	sub	sp, #28
 800fd0c:	4604      	mov	r4, r0
 800fd0e:	a804      	add	r0, sp, #16
 800fd10:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800fd14:	f004 fc90 	bl	8014638 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800fd18:	9b04      	ldr	r3, [sp, #16]
 800fd1a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800fd1e:	a906      	add	r1, sp, #24
 800fd20:	9b05      	ldr	r3, [sp, #20]
 800fd22:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800fd26:	a803      	add	r0, sp, #12
 800fd28:	f004 fcd8 	bl	80146dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800fd2c:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 800fd30:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800fd34:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800fd38:	f104 001c 	add.w	r0, r4, #28
 800fd3c:	b189      	cbz	r1, 800fd62 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800fd3e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 800fd42:	9300      	str	r3, [sp, #0]
 800fd44:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 800fd48:	4613      	mov	r3, r2
 800fd4a:	462a      	mov	r2, r5
 800fd4c:	f015 fc58 	bl	8025600 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800fd50:	b128      	cbz	r0, 800fd5e <_ZN8touchgfx3HAL5touchEll+0x56>
 800fd52:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800fd56:	6623      	str	r3, [r4, #96]	; 0x60
 800fd58:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800fd5c:	6663      	str	r3, [r4, #100]	; 0x64
 800fd5e:	b007      	add	sp, #28
 800fd60:	bd30      	pop	{r4, r5, pc}
 800fd62:	f015 fc8d 	bl	8025680 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800fd66:	2301      	movs	r3, #1
 800fd68:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800fd6c:	e7f1      	b.n	800fd52 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800fd6e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800fd6e:	b510      	push	{r4, lr}
 800fd70:	2b00      	cmp	r3, #0
 800fd72:	d046      	beq.n	800fe02 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800fd74:	ea81 0002 	eor.w	r0, r1, r2
 800fd78:	07c4      	lsls	r4, r0, #31
 800fd7a:	d508      	bpl.n	800fd8e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800fd7c:	440b      	add	r3, r1
 800fd7e:	3a01      	subs	r2, #1
 800fd80:	428b      	cmp	r3, r1
 800fd82:	d93e      	bls.n	800fe02 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800fd84:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800fd88:	f801 0b01 	strb.w	r0, [r1], #1
 800fd8c:	e7f8      	b.n	800fd80 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800fd8e:	07d0      	lsls	r0, r2, #31
 800fd90:	bf42      	ittt	mi
 800fd92:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800fd96:	f801 0b01 	strbmi.w	r0, [r1], #1
 800fd9a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800fd9e:	2b01      	cmp	r3, #1
 800fda0:	d911      	bls.n	800fdc6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800fda2:	ea81 0402 	eor.w	r4, r1, r2
 800fda6:	07a4      	lsls	r4, r4, #30
 800fda8:	4610      	mov	r0, r2
 800fdaa:	d022      	beq.n	800fdf2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800fdac:	f023 0401 	bic.w	r4, r3, #1
 800fdb0:	440c      	add	r4, r1
 800fdb2:	428c      	cmp	r4, r1
 800fdb4:	4602      	mov	r2, r0
 800fdb6:	d904      	bls.n	800fdc2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800fdb8:	8812      	ldrh	r2, [r2, #0]
 800fdba:	f821 2b02 	strh.w	r2, [r1], #2
 800fdbe:	3002      	adds	r0, #2
 800fdc0:	e7f7      	b.n	800fdb2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800fdc2:	f003 0301 	and.w	r3, r3, #1
 800fdc6:	f023 0003 	bic.w	r0, r3, #3
 800fdca:	4408      	add	r0, r1
 800fdcc:	4288      	cmp	r0, r1
 800fdce:	4614      	mov	r4, r2
 800fdd0:	d904      	bls.n	800fddc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800fdd2:	6824      	ldr	r4, [r4, #0]
 800fdd4:	f841 4b04 	str.w	r4, [r1], #4
 800fdd8:	3204      	adds	r2, #4
 800fdda:	e7f7      	b.n	800fdcc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800fddc:	f003 0303 	and.w	r3, r3, #3
 800fde0:	440b      	add	r3, r1
 800fde2:	3a01      	subs	r2, #1
 800fde4:	428b      	cmp	r3, r1
 800fde6:	d90c      	bls.n	800fe02 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800fde8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800fdec:	f801 0b01 	strb.w	r0, [r1], #1
 800fdf0:	e7f8      	b.n	800fde4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800fdf2:	0790      	lsls	r0, r2, #30
 800fdf4:	d0e7      	beq.n	800fdc6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800fdf6:	f832 0b02 	ldrh.w	r0, [r2], #2
 800fdfa:	f821 0b02 	strh.w	r0, [r1], #2
 800fdfe:	3b02      	subs	r3, #2
 800fe00:	e7e1      	b.n	800fdc6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800fe02:	2001      	movs	r0, #1
 800fe04:	bd10      	pop	{r4, pc}

0800fe06 <_ZN8touchgfx3HAL7noTouchEv>:
 800fe06:	b510      	push	{r4, lr}
 800fe08:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 800fe0c:	4604      	mov	r4, r0
 800fe0e:	b153      	cbz	r3, 800fe26 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800fe10:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 800fe14:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 800fe18:	2101      	movs	r1, #1
 800fe1a:	301c      	adds	r0, #28
 800fe1c:	f015 fc30 	bl	8025680 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800fe20:	2300      	movs	r3, #0
 800fe22:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800fe26:	bd10      	pop	{r4, pc}

0800fe28 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800fe28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fe2c:	b085      	sub	sp, #20
 800fe2e:	ad04      	add	r5, sp, #16
 800fe30:	4604      	mov	r4, r0
 800fe32:	2000      	movs	r0, #0
 800fe34:	f845 0d04 	str.w	r0, [r5, #-4]!
 800fe38:	69a0      	ldr	r0, [r4, #24]
 800fe3a:	6806      	ldr	r6, [r0, #0]
 800fe3c:	9501      	str	r5, [sp, #4]
 800fe3e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800fe42:	9500      	str	r5, [sp, #0]
 800fe44:	6835      	ldr	r5, [r6, #0]
 800fe46:	4699      	mov	r9, r3
 800fe48:	460f      	mov	r7, r1
 800fe4a:	4690      	mov	r8, r2
 800fe4c:	47a8      	blx	r5
 800fe4e:	4d10      	ldr	r5, [pc, #64]	; (800fe90 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800fe50:	4606      	mov	r6, r0
 800fe52:	f8a5 9000 	strh.w	r9, [r5]
 800fe56:	f7f3 fbdd 	bl	8003614 <_ZN8touchgfx3HAL3lcdEv>
 800fe5a:	6803      	ldr	r3, [r0, #0]
 800fe5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fe5e:	4798      	blx	r3
 800fe60:	b128      	cbz	r0, 800fe6e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800fe62:	2801      	cmp	r0, #1
 800fe64:	d00b      	beq.n	800fe7e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800fe66:	4630      	mov	r0, r6
 800fe68:	b005      	add	sp, #20
 800fe6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fe6e:	882b      	ldrh	r3, [r5, #0]
 800fe70:	fb08 7203 	mla	r2, r8, r3, r7
 800fe74:	9b03      	ldr	r3, [sp, #12]
 800fe76:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800fe7a:	63e3      	str	r3, [r4, #60]	; 0x3c
 800fe7c:	e7f3      	b.n	800fe66 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800fe7e:	882a      	ldrh	r2, [r5, #0]
 800fe80:	9b03      	ldr	r3, [sp, #12]
 800fe82:	fb08 7202 	mla	r2, r8, r2, r7
 800fe86:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800fe8a:	1a9a      	subs	r2, r3, r2
 800fe8c:	63e2      	str	r2, [r4, #60]	; 0x3c
 800fe8e:	e7ea      	b.n	800fe66 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800fe90:	200137b6 	.word	0x200137b6

0800fe94 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800fe94:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fe96:	b08b      	sub	sp, #44	; 0x2c
 800fe98:	4617      	mov	r7, r2
 800fe9a:	4604      	mov	r4, r0
 800fe9c:	460e      	mov	r6, r1
 800fe9e:	461d      	mov	r5, r3
 800fea0:	f7f3 fbb8 	bl	8003614 <_ZN8touchgfx3HAL3lcdEv>
 800fea4:	6803      	ldr	r3, [r0, #0]
 800fea6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fea8:	4798      	blx	r3
 800feaa:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800feae:	9007      	str	r0, [sp, #28]
 800feb0:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800feb4:	4b0d      	ldr	r3, [pc, #52]	; (800feec <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800feb6:	6822      	ldr	r2, [r4, #0]
 800feb8:	881b      	ldrh	r3, [r3, #0]
 800feba:	9306      	str	r3, [sp, #24]
 800febc:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800fec0:	9305      	str	r3, [sp, #20]
 800fec2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800fec6:	9304      	str	r3, [sp, #16]
 800fec8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800fecc:	9303      	str	r3, [sp, #12]
 800fece:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800fed2:	9302      	str	r3, [sp, #8]
 800fed4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800fed8:	e9cd 5300 	strd	r5, r3, [sp]
 800fedc:	4631      	mov	r1, r6
 800fede:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800fee0:	463b      	mov	r3, r7
 800fee2:	2200      	movs	r2, #0
 800fee4:	4620      	mov	r0, r4
 800fee6:	47a8      	blx	r5
 800fee8:	b00b      	add	sp, #44	; 0x2c
 800feea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800feec:	200137b6 	.word	0x200137b6

0800fef0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800fef0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fef4:	4698      	mov	r8, r3
 800fef6:	6803      	ldr	r3, [r0, #0]
 800fef8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800fefa:	4b15      	ldr	r3, [pc, #84]	; (800ff50 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800fefc:	b08b      	sub	sp, #44	; 0x2c
 800fefe:	4617      	mov	r7, r2
 800ff00:	f8b3 9000 	ldrh.w	r9, [r3]
 800ff04:	460e      	mov	r6, r1
 800ff06:	4604      	mov	r4, r0
 800ff08:	f7f3 fb84 	bl	8003614 <_ZN8touchgfx3HAL3lcdEv>
 800ff0c:	6803      	ldr	r3, [r0, #0]
 800ff0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ff10:	4798      	blx	r3
 800ff12:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800ff16:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800ff1a:	2302      	movs	r3, #2
 800ff1c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800ff20:	2301      	movs	r3, #1
 800ff22:	9305      	str	r3, [sp, #20]
 800ff24:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800ff28:	9304      	str	r3, [sp, #16]
 800ff2a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800ff2e:	9303      	str	r3, [sp, #12]
 800ff30:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800ff34:	9302      	str	r3, [sp, #8]
 800ff36:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ff3a:	2200      	movs	r2, #0
 800ff3c:	e9cd 8300 	strd	r8, r3, [sp]
 800ff40:	4631      	mov	r1, r6
 800ff42:	463b      	mov	r3, r7
 800ff44:	4620      	mov	r0, r4
 800ff46:	47a8      	blx	r5
 800ff48:	b00b      	add	sp, #44	; 0x2c
 800ff4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ff4e:	bf00      	nop
 800ff50:	200137b6 	.word	0x200137b6

0800ff54 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800ff54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ff58:	4698      	mov	r8, r3
 800ff5a:	6803      	ldr	r3, [r0, #0]
 800ff5c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800ff5e:	4b11      	ldr	r3, [pc, #68]	; (800ffa4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800ff60:	b087      	sub	sp, #28
 800ff62:	f8b3 9000 	ldrh.w	r9, [r3]
 800ff66:	460e      	mov	r6, r1
 800ff68:	4617      	mov	r7, r2
 800ff6a:	4604      	mov	r4, r0
 800ff6c:	f7f3 fb52 	bl	8003614 <_ZN8touchgfx3HAL3lcdEv>
 800ff70:	6803      	ldr	r3, [r0, #0]
 800ff72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ff74:	4798      	blx	r3
 800ff76:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800ff7a:	f8cd 900c 	str.w	r9, [sp, #12]
 800ff7e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800ff82:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800ff86:	9302      	str	r3, [sp, #8]
 800ff88:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800ff8c:	9301      	str	r3, [sp, #4]
 800ff8e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800ff92:	9300      	str	r3, [sp, #0]
 800ff94:	463a      	mov	r2, r7
 800ff96:	4643      	mov	r3, r8
 800ff98:	4631      	mov	r1, r6
 800ff9a:	4620      	mov	r0, r4
 800ff9c:	47a8      	blx	r5
 800ff9e:	b007      	add	sp, #28
 800ffa0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ffa4:	200137b6 	.word	0x200137b6

0800ffa8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800ffa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ffac:	4604      	mov	r4, r0
 800ffae:	b08f      	sub	sp, #60	; 0x3c
 800ffb0:	4610      	mov	r0, r2
 800ffb2:	460d      	mov	r5, r1
 800ffb4:	4691      	mov	r9, r2
 800ffb6:	461e      	mov	r6, r3
 800ffb8:	f007 fefc 	bl	8017db4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ffbc:	2800      	cmp	r0, #0
 800ffbe:	f000 809d 	beq.w	80100fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800ffc2:	6823      	ldr	r3, [r4, #0]
 800ffc4:	f8df b198 	ldr.w	fp, [pc, #408]	; 8010160 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800ffc8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ffca:	f8df a198 	ldr.w	sl, [pc, #408]	; 8010164 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800ffce:	4f61      	ldr	r7, [pc, #388]	; (8010154 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ffd0:	4620      	mov	r0, r4
 800ffd2:	4798      	blx	r3
 800ffd4:	6823      	ldr	r3, [r4, #0]
 800ffd6:	4620      	mov	r0, r4
 800ffd8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ffda:	4798      	blx	r3
 800ffdc:	f8bb 3000 	ldrh.w	r3, [fp]
 800ffe0:	9301      	str	r3, [sp, #4]
 800ffe2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800ffe6:	f8ba 3000 	ldrh.w	r3, [sl]
 800ffea:	9302      	str	r3, [sp, #8]
 800ffec:	883b      	ldrh	r3, [r7, #0]
 800ffee:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800fff2:	9303      	str	r3, [sp, #12]
 800fff4:	4b58      	ldr	r3, [pc, #352]	; (8010158 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800fff6:	9305      	str	r3, [sp, #20]
 800fff8:	881a      	ldrh	r2, [r3, #0]
 800fffa:	9204      	str	r2, [sp, #16]
 800fffc:	4640      	mov	r0, r8
 800fffe:	f007 ff6d 	bl	8017edc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010002:	8038      	strh	r0, [r7, #0]
 8010004:	4640      	mov	r0, r8
 8010006:	f007 ff9d 	bl	8017f44 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801000a:	9b05      	ldr	r3, [sp, #20]
 801000c:	b280      	uxth	r0, r0
 801000e:	8018      	strh	r0, [r3, #0]
 8010010:	4b52      	ldr	r3, [pc, #328]	; (801015c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8010012:	781b      	ldrb	r3, [r3, #0]
 8010014:	2b00      	cmp	r3, #0
 8010016:	d174      	bne.n	8010102 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8010018:	883b      	ldrh	r3, [r7, #0]
 801001a:	f8ab 3000 	strh.w	r3, [fp]
 801001e:	f8aa 0000 	strh.w	r0, [sl]
 8010022:	4648      	mov	r0, r9
 8010024:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8010028:	f007 fec4 	bl	8017db4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801002c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8010030:	2200      	movs	r2, #0
 8010032:	4611      	mov	r1, r2
 8010034:	4628      	mov	r0, r5
 8010036:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 801003a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 801003e:	f7f2 fa2e 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8010042:	2301      	movs	r3, #1
 8010044:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8010048:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 801004c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010050:	2b00      	cmp	r3, #0
 8010052:	dd5c      	ble.n	801010e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010054:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010058:	2b00      	cmp	r3, #0
 801005a:	dd58      	ble.n	801010e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 801005c:	462a      	mov	r2, r5
 801005e:	ab0a      	add	r3, sp, #40	; 0x28
 8010060:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010064:	6851      	ldr	r1, [r2, #4]
 8010066:	c303      	stmia	r3!, {r0, r1}
 8010068:	4631      	mov	r1, r6
 801006a:	a80a      	add	r0, sp, #40	; 0x28
 801006c:	f7ff fc06 	bl	800f87c <_ZN8touchgfx4RectaNERKS0_>
 8010070:	4b38      	ldr	r3, [pc, #224]	; (8010154 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010072:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010076:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801007a:	2100      	movs	r1, #0
 801007c:	aa0a      	add	r2, sp, #40	; 0x28
 801007e:	4b36      	ldr	r3, [pc, #216]	; (8010158 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010080:	910c      	str	r1, [sp, #48]	; 0x30
 8010082:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010086:	f9b3 3000 	ldrsh.w	r3, [r3]
 801008a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801008e:	ab08      	add	r3, sp, #32
 8010090:	e883 0003 	stmia.w	r3, {r0, r1}
 8010094:	4618      	mov	r0, r3
 8010096:	a90c      	add	r1, sp, #48	; 0x30
 8010098:	f7ff fbf0 	bl	800f87c <_ZN8touchgfx4RectaNERKS0_>
 801009c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 801009e:	2b00      	cmp	r3, #0
 80100a0:	d13c      	bne.n	801011c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 80100a2:	2000      	movs	r0, #0
 80100a4:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 80100a8:	2600      	movs	r6, #0
 80100aa:	682a      	ldr	r2, [r5, #0]
 80100ac:	696b      	ldr	r3, [r5, #20]
 80100ae:	616e      	str	r6, [r5, #20]
 80100b0:	9305      	str	r3, [sp, #20]
 80100b2:	6892      	ldr	r2, [r2, #8]
 80100b4:	a908      	add	r1, sp, #32
 80100b6:	4628      	mov	r0, r5
 80100b8:	4790      	blx	r2
 80100ba:	9b05      	ldr	r3, [sp, #20]
 80100bc:	616b      	str	r3, [r5, #20]
 80100be:	4652      	mov	r2, sl
 80100c0:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 80100c4:	4649      	mov	r1, r9
 80100c6:	4628      	mov	r0, r5
 80100c8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 80100cc:	f7f2 f9e7 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 80100d0:	4b23      	ldr	r3, [pc, #140]	; (8010160 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80100d2:	9a01      	ldr	r2, [sp, #4]
 80100d4:	801a      	strh	r2, [r3, #0]
 80100d6:	4b23      	ldr	r3, [pc, #140]	; (8010164 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 80100d8:	9a02      	ldr	r2, [sp, #8]
 80100da:	801a      	strh	r2, [r3, #0]
 80100dc:	4b1d      	ldr	r3, [pc, #116]	; (8010154 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80100de:	9a03      	ldr	r2, [sp, #12]
 80100e0:	801a      	strh	r2, [r3, #0]
 80100e2:	4b1d      	ldr	r3, [pc, #116]	; (8010158 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80100e4:	9a04      	ldr	r2, [sp, #16]
 80100e6:	801a      	strh	r2, [r3, #0]
 80100e8:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 80100ec:	6823      	ldr	r3, [r4, #0]
 80100ee:	4620      	mov	r0, r4
 80100f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80100f2:	4798      	blx	r3
 80100f4:	6823      	ldr	r3, [r4, #0]
 80100f6:	4620      	mov	r0, r4
 80100f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80100fa:	4798      	blx	r3
 80100fc:	b00f      	add	sp, #60	; 0x3c
 80100fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010102:	883b      	ldrh	r3, [r7, #0]
 8010104:	f8ab 0000 	strh.w	r0, [fp]
 8010108:	f8aa 3000 	strh.w	r3, [sl]
 801010c:	e789      	b.n	8010022 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 801010e:	462a      	mov	r2, r5
 8010110:	ab0a      	add	r3, sp, #40	; 0x28
 8010112:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010116:	6851      	ldr	r1, [r2, #4]
 8010118:	c303      	stmia	r3!, {r0, r1}
 801011a:	e7a9      	b.n	8010070 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 801011c:	a807      	add	r0, sp, #28
 801011e:	f008 f84d 	bl	80181bc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010122:	4606      	mov	r6, r0
 8010124:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8010126:	6803      	ldr	r3, [r0, #0]
 8010128:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801012a:	4798      	blx	r3
 801012c:	4286      	cmp	r6, r0
 801012e:	d1b8      	bne.n	80100a2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8010130:	f7f3 fa70 	bl	8003614 <_ZN8touchgfx3HAL3lcdEv>
 8010134:	6803      	ldr	r3, [r0, #0]
 8010136:	4606      	mov	r6, r0
 8010138:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801013a:	9305      	str	r3, [sp, #20]
 801013c:	a807      	add	r0, sp, #28
 801013e:	f008 f83d 	bl	80181bc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010142:	9b05      	ldr	r3, [sp, #20]
 8010144:	4601      	mov	r1, r0
 8010146:	4630      	mov	r0, r6
 8010148:	4798      	blx	r3
 801014a:	f080 0001 	eor.w	r0, r0, #1
 801014e:	b2c0      	uxtb	r0, r0
 8010150:	e7a8      	b.n	80100a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8010152:	bf00      	nop
 8010154:	200137b0 	.word	0x200137b0
 8010158:	200137b2 	.word	0x200137b2
 801015c:	200137b4 	.word	0x200137b4
 8010160:	200137b6 	.word	0x200137b6
 8010164:	200137b8 	.word	0x200137b8

08010168 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8010168:	b510      	push	{r4, lr}
 801016a:	4b07      	ldr	r3, [pc, #28]	; (8010188 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 801016c:	781b      	ldrb	r3, [r3, #0]
 801016e:	4604      	mov	r4, r0
 8010170:	b13b      	cbz	r3, 8010182 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010172:	6803      	ldr	r3, [r0, #0]
 8010174:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010176:	4798      	blx	r3
 8010178:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801017a:	4283      	cmp	r3, r0
 801017c:	d101      	bne.n	8010182 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801017e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8010180:	bd10      	pop	{r4, pc}
 8010182:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010184:	e7fc      	b.n	8010180 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8010186:	bf00      	nop
 8010188:	200137ba 	.word	0x200137ba

0801018c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 801018c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010190:	b08a      	sub	sp, #40	; 0x28
 8010192:	461d      	mov	r5, r3
 8010194:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010198:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801019c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80101a0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80101a4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80101a8:	f8ad 301a 	strh.w	r3, [sp, #26]
 80101ac:	2400      	movs	r4, #0
 80101ae:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80101b2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 80101b6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80101ba:	4690      	mov	r8, r2
 80101bc:	4607      	mov	r7, r0
 80101be:	9404      	str	r4, [sp, #16]
 80101c0:	f88d 4020 	strb.w	r4, [sp, #32]
 80101c4:	f7ff ffd0 	bl	8010168 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80101c8:	fb06 8505 	mla	r5, r6, r5, r8
 80101cc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80101d0:	6878      	ldr	r0, [r7, #4]
 80101d2:	9505      	str	r5, [sp, #20]
 80101d4:	f8ad 601e 	strh.w	r6, [sp, #30]
 80101d8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80101dc:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 80101e0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80101e4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80101e8:	6803      	ldr	r3, [r0, #0]
 80101ea:	a901      	add	r1, sp, #4
 80101ec:	685b      	ldr	r3, [r3, #4]
 80101ee:	4798      	blx	r3
 80101f0:	b00a      	add	sp, #40	; 0x28
 80101f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080101f6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 80101f6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80101fa:	b08b      	sub	sp, #44	; 0x2c
 80101fc:	2400      	movs	r4, #0
 80101fe:	461d      	mov	r5, r3
 8010200:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8010204:	4688      	mov	r8, r1
 8010206:	4691      	mov	r9, r2
 8010208:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 801020c:	9404      	str	r4, [sp, #16]
 801020e:	4607      	mov	r7, r0
 8010210:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010214:	f7ff ffa8 	bl	8010168 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010218:	fb06 9505 	mla	r5, r6, r5, r9
 801021c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010220:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010224:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010228:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801022c:	6878      	ldr	r0, [r7, #4]
 801022e:	9505      	str	r5, [sp, #20]
 8010230:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010234:	f8ad 401c 	strh.w	r4, [sp, #28]
 8010238:	f8ad 601e 	strh.w	r6, [sp, #30]
 801023c:	f8cd 8010 	str.w	r8, [sp, #16]
 8010240:	f8ad 4020 	strh.w	r4, [sp, #32]
 8010244:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010248:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 801024c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010250:	6803      	ldr	r3, [r0, #0]
 8010252:	a901      	add	r1, sp, #4
 8010254:	685b      	ldr	r3, [r3, #4]
 8010256:	4798      	blx	r3
 8010258:	b00b      	add	sp, #44	; 0x2c
 801025a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08010260 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8010260:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010264:	b08a      	sub	sp, #40	; 0x28
 8010266:	4698      	mov	r8, r3
 8010268:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 801026c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8010270:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8010274:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8010278:	2300      	movs	r3, #0
 801027a:	2d0b      	cmp	r5, #11
 801027c:	4606      	mov	r6, r0
 801027e:	9304      	str	r3, [sp, #16]
 8010280:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8010284:	d138      	bne.n	80102f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8010286:	2380      	movs	r3, #128	; 0x80
 8010288:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801028c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010290:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010294:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010298:	f8ad 301a 	strh.w	r3, [sp, #26]
 801029c:	f88d 0020 	strb.w	r0, [sp, #32]
 80102a0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80102a4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80102a8:	4630      	mov	r0, r6
 80102aa:	9203      	str	r2, [sp, #12]
 80102ac:	f7ff ff5c 	bl	8010168 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80102b0:	2c0b      	cmp	r4, #11
 80102b2:	bf98      	it	ls
 80102b4:	4b1b      	ldrls	r3, [pc, #108]	; (8010324 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 80102b6:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 80102ba:	bf98      	it	ls
 80102bc:	5d19      	ldrbls	r1, [r3, r4]
 80102be:	f8ad 701e 	strh.w	r7, [sp, #30]
 80102c2:	bf88      	it	hi
 80102c4:	2100      	movhi	r1, #0
 80102c6:	fb02 8307 	mla	r3, r2, r7, r8
 80102ca:	10c9      	asrs	r1, r1, #3
 80102cc:	fb01 0003 	mla	r0, r1, r3, r0
 80102d0:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 80102d4:	9005      	str	r0, [sp, #20]
 80102d6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80102da:	6870      	ldr	r0, [r6, #4]
 80102dc:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 80102e0:	2300      	movs	r3, #0
 80102e2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80102e6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80102ea:	6803      	ldr	r3, [r0, #0]
 80102ec:	a901      	add	r1, sp, #4
 80102ee:	685b      	ldr	r3, [r3, #4]
 80102f0:	4798      	blx	r3
 80102f2:	b00a      	add	sp, #40	; 0x28
 80102f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80102f8:	2d02      	cmp	r5, #2
 80102fa:	d109      	bne.n	8010310 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 80102fc:	28ff      	cmp	r0, #255	; 0xff
 80102fe:	d105      	bne.n	801030c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8010300:	f1bc 0f00 	cmp.w	ip, #0
 8010304:	bf14      	ite	ne
 8010306:	2340      	movne	r3, #64	; 0x40
 8010308:	2320      	moveq	r3, #32
 801030a:	e7bd      	b.n	8010288 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801030c:	2340      	movs	r3, #64	; 0x40
 801030e:	e7bb      	b.n	8010288 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010310:	28ff      	cmp	r0, #255	; 0xff
 8010312:	d105      	bne.n	8010320 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8010314:	f1bc 0f00 	cmp.w	ip, #0
 8010318:	bf14      	ite	ne
 801031a:	2304      	movne	r3, #4
 801031c:	2301      	moveq	r3, #1
 801031e:	e7b3      	b.n	8010288 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010320:	2304      	movs	r3, #4
 8010322:	e7b1      	b.n	8010288 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010324:	0802c388 	.word	0x0802c388

08010328 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8010328:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801032c:	b08b      	sub	sp, #44	; 0x2c
 801032e:	461d      	mov	r5, r3
 8010330:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8010334:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8010338:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 801033c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8010340:	bf14      	ite	ne
 8010342:	2308      	movne	r3, #8
 8010344:	2302      	moveq	r3, #2
 8010346:	2400      	movs	r4, #0
 8010348:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801034c:	4688      	mov	r8, r1
 801034e:	4693      	mov	fp, r2
 8010350:	9404      	str	r4, [sp, #16]
 8010352:	4607      	mov	r7, r0
 8010354:	f7ff ff08 	bl	8010168 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010358:	2e0b      	cmp	r6, #11
 801035a:	bf98      	it	ls
 801035c:	4b15      	ldrls	r3, [pc, #84]	; (80103b4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 801035e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010362:	bf98      	it	ls
 8010364:	5d9c      	ldrbls	r4, [r3, r6]
 8010366:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801036a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801036e:	fb05 b50a 	mla	r5, r5, sl, fp
 8010372:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8010376:	f8ad 301a 	strh.w	r3, [sp, #26]
 801037a:	10e4      	asrs	r4, r4, #3
 801037c:	fb04 0405 	mla	r4, r4, r5, r0
 8010380:	2300      	movs	r3, #0
 8010382:	6878      	ldr	r0, [r7, #4]
 8010384:	9405      	str	r4, [sp, #20]
 8010386:	f8ad 301c 	strh.w	r3, [sp, #28]
 801038a:	f8ad a01e 	strh.w	sl, [sp, #30]
 801038e:	f8cd 8010 	str.w	r8, [sp, #16]
 8010392:	f88d 9020 	strb.w	r9, [sp, #32]
 8010396:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 801039a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801039e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 80103a2:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 80103a6:	6803      	ldr	r3, [r0, #0]
 80103a8:	a901      	add	r1, sp, #4
 80103aa:	685b      	ldr	r3, [r3, #4]
 80103ac:	4798      	blx	r3
 80103ae:	b00b      	add	sp, #44	; 0x2c
 80103b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80103b4:	0802c388 	.word	0x0802c388

080103b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 80103b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80103bc:	461e      	mov	r6, r3
 80103be:	4b0a      	ldr	r3, [pc, #40]	; (80103e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 80103c0:	460f      	mov	r7, r1
 80103c2:	881d      	ldrh	r5, [r3, #0]
 80103c4:	4690      	mov	r8, r2
 80103c6:	f7f3 f925 	bl	8003614 <_ZN8touchgfx3HAL3lcdEv>
 80103ca:	6803      	ldr	r3, [r0, #0]
 80103cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80103ce:	4798      	blx	r3
 80103d0:	280b      	cmp	r0, #11
 80103d2:	bf9a      	itte	ls
 80103d4:	4b05      	ldrls	r3, [pc, #20]	; (80103ec <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 80103d6:	5c1c      	ldrbls	r4, [r3, r0]
 80103d8:	2400      	movhi	r4, #0
 80103da:	fb08 7005 	mla	r0, r8, r5, r7
 80103de:	10e4      	asrs	r4, r4, #3
 80103e0:	fb04 6000 	mla	r0, r4, r0, r6
 80103e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80103e8:	200137b6 	.word	0x200137b6
 80103ec:	0802c388 	.word	0x0802c388

080103f0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 80103f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80103f2:	b08b      	sub	sp, #44	; 0x2c
 80103f4:	461f      	mov	r7, r3
 80103f6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80103fa:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80103fe:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010402:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010406:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801040a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801040e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010412:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010416:	2500      	movs	r5, #0
 8010418:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 801041c:	f88d 3020 	strb.w	r3, [sp, #32]
 8010420:	4604      	mov	r4, r0
 8010422:	4616      	mov	r6, r2
 8010424:	9504      	str	r5, [sp, #16]
 8010426:	f7ff fe9f 	bl	8010168 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801042a:	463a      	mov	r2, r7
 801042c:	4631      	mov	r1, r6
 801042e:	4603      	mov	r3, r0
 8010430:	4620      	mov	r0, r4
 8010432:	f7ff ffc1 	bl	80103b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010436:	4b0e      	ldr	r3, [pc, #56]	; (8010470 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8010438:	9005      	str	r0, [sp, #20]
 801043a:	881b      	ldrh	r3, [r3, #0]
 801043c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010440:	f7f3 f8e8 	bl	8003614 <_ZN8touchgfx3HAL3lcdEv>
 8010444:	6803      	ldr	r3, [r0, #0]
 8010446:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010448:	4798      	blx	r3
 801044a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801044c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8010450:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8010454:	9304      	str	r3, [sp, #16]
 8010456:	6860      	ldr	r0, [r4, #4]
 8010458:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 801045c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8010460:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8010464:	6803      	ldr	r3, [r0, #0]
 8010466:	a901      	add	r1, sp, #4
 8010468:	685b      	ldr	r3, [r3, #4]
 801046a:	4798      	blx	r3
 801046c:	b00b      	add	sp, #44	; 0x2c
 801046e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010470:	200137b6 	.word	0x200137b6

08010474 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8010474:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010476:	b08d      	sub	sp, #52	; 0x34
 8010478:	466b      	mov	r3, sp
 801047a:	e883 0006 	stmia.w	r3, {r1, r2}
 801047e:	2300      	movs	r3, #0
 8010480:	9306      	str	r3, [sp, #24]
 8010482:	6803      	ldr	r3, [r0, #0]
 8010484:	f8bd 6000 	ldrh.w	r6, [sp]
 8010488:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801048a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 801048e:	2501      	movs	r5, #1
 8010490:	9503      	str	r5, [sp, #12]
 8010492:	4604      	mov	r4, r0
 8010494:	4798      	blx	r3
 8010496:	463a      	mov	r2, r7
 8010498:	4631      	mov	r1, r6
 801049a:	4603      	mov	r3, r0
 801049c:	4620      	mov	r0, r4
 801049e:	f7ff ff8b 	bl	80103b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80104a2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80104a4:	9307      	str	r3, [sp, #28]
 80104a6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80104aa:	f8ad 3020 	strh.w	r3, [sp, #32]
 80104ae:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80104b2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80104b6:	4b0f      	ldr	r3, [pc, #60]	; (80104f4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 80104b8:	9004      	str	r0, [sp, #16]
 80104ba:	881b      	ldrh	r3, [r3, #0]
 80104bc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80104c0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80104c4:	f7f3 f8a6 	bl	8003614 <_ZN8touchgfx3HAL3lcdEv>
 80104c8:	6803      	ldr	r3, [r0, #0]
 80104ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80104cc:	4798      	blx	r3
 80104ce:	23ff      	movs	r3, #255	; 0xff
 80104d0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80104d4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80104d8:	6860      	ldr	r0, [r4, #4]
 80104da:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80104de:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80104e2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80104e6:	6803      	ldr	r3, [r0, #0]
 80104e8:	a903      	add	r1, sp, #12
 80104ea:	685b      	ldr	r3, [r3, #4]
 80104ec:	4798      	blx	r3
 80104ee:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80104f0:	b00d      	add	sp, #52	; 0x34
 80104f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80104f4:	200137b6 	.word	0x200137b6

080104f8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 80104f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80104fc:	b08c      	sub	sp, #48	; 0x30
 80104fe:	461e      	mov	r6, r3
 8010500:	466d      	mov	r5, sp
 8010502:	2300      	movs	r3, #0
 8010504:	e885 0006 	stmia.w	r5, {r1, r2}
 8010508:	9306      	str	r3, [sp, #24]
 801050a:	6803      	ldr	r3, [r0, #0]
 801050c:	f8bd 7000 	ldrh.w	r7, [sp]
 8010510:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010512:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8010516:	2501      	movs	r5, #1
 8010518:	9503      	str	r5, [sp, #12]
 801051a:	4604      	mov	r4, r0
 801051c:	4798      	blx	r3
 801051e:	4642      	mov	r2, r8
 8010520:	4639      	mov	r1, r7
 8010522:	4603      	mov	r3, r0
 8010524:	4620      	mov	r0, r4
 8010526:	f7ff ff47 	bl	80103b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801052a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801052e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010532:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010536:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801053a:	4b11      	ldr	r3, [pc, #68]	; (8010580 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 801053c:	9004      	str	r0, [sp, #16]
 801053e:	881b      	ldrh	r3, [r3, #0]
 8010540:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010544:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010546:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801054a:	9607      	str	r6, [sp, #28]
 801054c:	f7f3 f862 	bl	8003614 <_ZN8touchgfx3HAL3lcdEv>
 8010550:	6803      	ldr	r3, [r0, #0]
 8010552:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010554:	4798      	blx	r3
 8010556:	23ff      	movs	r3, #255	; 0xff
 8010558:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 801055c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010560:	6860      	ldr	r0, [r4, #4]
 8010562:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8010566:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801056a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801056e:	6803      	ldr	r3, [r0, #0]
 8010570:	a903      	add	r1, sp, #12
 8010572:	685b      	ldr	r3, [r3, #4]
 8010574:	4798      	blx	r3
 8010576:	4630      	mov	r0, r6
 8010578:	b00c      	add	sp, #48	; 0x30
 801057a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801057e:	bf00      	nop
 8010580:	200137b6 	.word	0x200137b6

08010584 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8010584:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010586:	b085      	sub	sp, #20
 8010588:	ac02      	add	r4, sp, #8
 801058a:	e884 0006 	stmia.w	r4, {r1, r2}
 801058e:	4605      	mov	r5, r0
 8010590:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8010594:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8010598:	f7ff fde6 	bl	8010168 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801059c:	463a      	mov	r2, r7
 801059e:	4603      	mov	r3, r0
 80105a0:	4631      	mov	r1, r6
 80105a2:	4628      	mov	r0, r5
 80105a4:	f7ff ff08 	bl	80103b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80105a8:	4a05      	ldr	r2, [pc, #20]	; (80105c0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80105aa:	682b      	ldr	r3, [r5, #0]
 80105ac:	8812      	ldrh	r2, [r2, #0]
 80105ae:	9200      	str	r2, [sp, #0]
 80105b0:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80105b2:	e894 0006 	ldmia.w	r4, {r1, r2}
 80105b6:	4603      	mov	r3, r0
 80105b8:	4628      	mov	r0, r5
 80105ba:	47b0      	blx	r6
 80105bc:	b005      	add	sp, #20
 80105be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80105c0:	200137b6 	.word	0x200137b6

080105c4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80105c4:	b570      	push	{r4, r5, r6, lr}
 80105c6:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 80105ca:	4604      	mov	r4, r0
 80105cc:	b19b      	cbz	r3, 80105f6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 80105ce:	2002      	movs	r0, #2
 80105d0:	f7f0 f8fc 	bl	80007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80105d4:	2300      	movs	r3, #0
 80105d6:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80105da:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 80105de:	6823      	ldr	r3, [r4, #0]
 80105e0:	4620      	mov	r0, r4
 80105e2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 80105e6:	f7ff fdbf 	bl	8010168 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80105ea:	462b      	mov	r3, r5
 80105ec:	4601      	mov	r1, r0
 80105ee:	4620      	mov	r0, r4
 80105f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80105f4:	4718      	bx	r3
 80105f6:	bd70      	pop	{r4, r5, r6, pc}

080105f8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 80105f8:	b538      	push	{r3, r4, r5, lr}
 80105fa:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 80105fe:	428b      	cmp	r3, r1
 8010600:	4604      	mov	r4, r0
 8010602:	460d      	mov	r5, r1
 8010604:	d006      	beq.n	8010614 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8010606:	6803      	ldr	r3, [r0, #0]
 8010608:	b929      	cbnz	r1, 8010616 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 801060a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801060e:	4798      	blx	r3
 8010610:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8010614:	bd38      	pop	{r3, r4, r5, pc}
 8010616:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 801061a:	e7f8      	b.n	801060e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0801061c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 801061c:	b510      	push	{r4, lr}
 801061e:	4b0d      	ldr	r3, [pc, #52]	; (8010654 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8010620:	781b      	ldrb	r3, [r3, #0]
 8010622:	4604      	mov	r4, r0
 8010624:	b95b      	cbnz	r3, 801063e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010626:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 801062a:	2b02      	cmp	r3, #2
 801062c:	d007      	beq.n	801063e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801062e:	6840      	ldr	r0, [r0, #4]
 8010630:	f000 f92c 	bl	801088c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8010634:	b118      	cbz	r0, 801063e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010636:	6862      	ldr	r2, [r4, #4]
 8010638:	7a53      	ldrb	r3, [r2, #9]
 801063a:	2b00      	cmp	r3, #0
 801063c:	d0fc      	beq.n	8010638 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 801063e:	f7f0 f9fd 	bl	8000a3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8010642:	4620      	mov	r0, r4
 8010644:	2100      	movs	r1, #0
 8010646:	f7ff ffd7 	bl	80105f8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801064a:	4620      	mov	r0, r4
 801064c:	f7ff fd8c 	bl	8010168 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010650:	bd10      	pop	{r4, pc}
 8010652:	bf00      	nop
 8010654:	200137ba 	.word	0x200137ba

08010658 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8010658:	b570      	push	{r4, r5, r6, lr}
 801065a:	4604      	mov	r4, r0
 801065c:	6803      	ldr	r3, [r0, #0]
 801065e:	b919      	cbnz	r1, 8010668 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8010660:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010662:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010666:	4718      	bx	r3
 8010668:	2200      	movs	r2, #0
 801066a:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 801066e:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 8010672:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010674:	4798      	blx	r3
 8010676:	6863      	ldr	r3, [r4, #4]
 8010678:	2101      	movs	r1, #1
 801067a:	4605      	mov	r5, r0
 801067c:	7299      	strb	r1, [r3, #10]
 801067e:	4620      	mov	r0, r4
 8010680:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 8010684:	f7ff ffb8 	bl	80105f8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010688:	4628      	mov	r0, r5
 801068a:	bd70      	pop	{r4, r5, r6, pc}

0801068c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 801068c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8010690:	1a13      	subs	r3, r2, r0
 8010692:	4258      	negs	r0, r3
 8010694:	4158      	adcs	r0, r3
 8010696:	4770      	bx	lr

08010698 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8010698:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 801069c:	1a9b      	subs	r3, r3, r2
 801069e:	2b00      	cmp	r3, #0
 80106a0:	bfdc      	itt	le
 80106a2:	6882      	ldrle	r2, [r0, #8]
 80106a4:	189b      	addle	r3, r3, r2
 80106a6:	2b01      	cmp	r3, #1
 80106a8:	bfcc      	ite	gt
 80106aa:	2000      	movgt	r0, #0
 80106ac:	2001      	movle	r0, #1
 80106ae:	4770      	bx	lr

080106b0 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80106b0:	6902      	ldr	r2, [r0, #16]
 80106b2:	6843      	ldr	r3, [r0, #4]
 80106b4:	2024      	movs	r0, #36	; 0x24
 80106b6:	fb00 3002 	mla	r0, r0, r2, r3
 80106ba:	4770      	bx	lr

080106bc <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 80106bc:	6803      	ldr	r3, [r0, #0]
 80106be:	691b      	ldr	r3, [r3, #16]
 80106c0:	4718      	bx	r3

080106c2 <_ZN8touchgfx13DMA_Interface7executeEv>:
 80106c2:	b570      	push	{r4, r5, r6, lr}
 80106c4:	2301      	movs	r3, #1
 80106c6:	7203      	strb	r3, [r0, #8]
 80106c8:	4604      	mov	r4, r0
 80106ca:	6840      	ldr	r0, [r0, #4]
 80106cc:	6803      	ldr	r3, [r0, #0]
 80106ce:	699b      	ldr	r3, [r3, #24]
 80106d0:	4798      	blx	r3
 80106d2:	6803      	ldr	r3, [r0, #0]
 80106d4:	2b40      	cmp	r3, #64	; 0x40
 80106d6:	4605      	mov	r5, r0
 80106d8:	d00c      	beq.n	80106f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80106da:	d810      	bhi.n	80106fe <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 80106dc:	2b04      	cmp	r3, #4
 80106de:	d01d      	beq.n	801071c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 80106e0:	d804      	bhi.n	80106ec <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 80106e2:	2b01      	cmp	r3, #1
 80106e4:	d006      	beq.n	80106f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80106e6:	2b02      	cmp	r3, #2
 80106e8:	d02c      	beq.n	8010744 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 80106ea:	bd70      	pop	{r4, r5, r6, pc}
 80106ec:	2b08      	cmp	r3, #8
 80106ee:	d01d      	beq.n	801072c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 80106f0:	2b20      	cmp	r3, #32
 80106f2:	d1fa      	bne.n	80106ea <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 80106f4:	6823      	ldr	r3, [r4, #0]
 80106f6:	4620      	mov	r0, r4
 80106f8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80106fa:	4798      	blx	r3
 80106fc:	e013      	b.n	8010726 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 80106fe:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8010702:	d0f7      	beq.n	80106f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010704:	d804      	bhi.n	8010710 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8010706:	2b80      	cmp	r3, #128	; 0x80
 8010708:	d0f4      	beq.n	80106f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801070a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 801070e:	e7f0      	b.n	80106f2 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8010710:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8010714:	d0ee      	beq.n	80106f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010716:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 801071a:	e7e5      	b.n	80106e8 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 801071c:	6823      	ldr	r3, [r4, #0]
 801071e:	7f01      	ldrb	r1, [r0, #28]
 8010720:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010722:	4620      	mov	r0, r4
 8010724:	4798      	blx	r3
 8010726:	6823      	ldr	r3, [r4, #0]
 8010728:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801072a:	e006      	b.n	801073a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 801072c:	6823      	ldr	r3, [r4, #0]
 801072e:	7f01      	ldrb	r1, [r0, #28]
 8010730:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010732:	4620      	mov	r0, r4
 8010734:	4798      	blx	r3
 8010736:	6823      	ldr	r3, [r4, #0]
 8010738:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801073a:	4629      	mov	r1, r5
 801073c:	4620      	mov	r0, r4
 801073e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010742:	4718      	bx	r3
 8010744:	6823      	ldr	r3, [r4, #0]
 8010746:	4620      	mov	r0, r4
 8010748:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801074a:	4798      	blx	r3
 801074c:	e7f3      	b.n	8010736 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0801074e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 801074e:	4770      	bx	lr

08010750 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8010750:	4770      	bx	lr

08010752 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8010752:	4770      	bx	lr

08010754 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8010754:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8010758:	1ad2      	subs	r2, r2, r3
 801075a:	2a00      	cmp	r2, #0
 801075c:	b510      	push	{r4, lr}
 801075e:	bfdc      	itt	le
 8010760:	6884      	ldrle	r4, [r0, #8]
 8010762:	1912      	addle	r2, r2, r4
 8010764:	2a01      	cmp	r2, #1
 8010766:	dd16      	ble.n	8010796 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8010768:	6842      	ldr	r2, [r0, #4]
 801076a:	2424      	movs	r4, #36	; 0x24
 801076c:	fb04 2303 	mla	r3, r4, r3, r2
 8010770:	f101 0220 	add.w	r2, r1, #32
 8010774:	f851 4b04 	ldr.w	r4, [r1], #4
 8010778:	f843 4b04 	str.w	r4, [r3], #4
 801077c:	4291      	cmp	r1, r2
 801077e:	d1f9      	bne.n	8010774 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8010780:	780a      	ldrb	r2, [r1, #0]
 8010782:	701a      	strb	r2, [r3, #0]
 8010784:	68c3      	ldr	r3, [r0, #12]
 8010786:	6882      	ldr	r2, [r0, #8]
 8010788:	f3bf 8f5b 	dmb	ish
 801078c:	3301      	adds	r3, #1
 801078e:	429a      	cmp	r2, r3
 8010790:	bfd8      	it	le
 8010792:	1a9b      	suble	r3, r3, r2
 8010794:	60c3      	str	r3, [r0, #12]
 8010796:	bd10      	pop	{r4, pc}

08010798 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8010798:	6903      	ldr	r3, [r0, #16]
 801079a:	6882      	ldr	r2, [r0, #8]
 801079c:	f3bf 8f5b 	dmb	ish
 80107a0:	3301      	adds	r3, #1
 80107a2:	429a      	cmp	r2, r3
 80107a4:	bfd8      	it	le
 80107a6:	1a9b      	suble	r3, r3, r2
 80107a8:	6103      	str	r3, [r0, #16]
 80107aa:	4770      	bx	lr

080107ac <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 80107ac:	b570      	push	{r4, r5, r6, lr}
 80107ae:	4604      	mov	r4, r0
 80107b0:	460e      	mov	r6, r1
 80107b2:	6860      	ldr	r0, [r4, #4]
 80107b4:	6803      	ldr	r3, [r0, #0]
 80107b6:	685b      	ldr	r3, [r3, #4]
 80107b8:	4798      	blx	r3
 80107ba:	2800      	cmp	r0, #0
 80107bc:	d1f9      	bne.n	80107b2 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 80107be:	4d0d      	ldr	r5, [pc, #52]	; (80107f4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 80107c0:	6828      	ldr	r0, [r5, #0]
 80107c2:	6803      	ldr	r3, [r0, #0]
 80107c4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80107c6:	4798      	blx	r3
 80107c8:	f7f0 f946 	bl	8000a58 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 80107cc:	6828      	ldr	r0, [r5, #0]
 80107ce:	2101      	movs	r1, #1
 80107d0:	f7ff ff12 	bl	80105f8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80107d4:	6860      	ldr	r0, [r4, #4]
 80107d6:	6803      	ldr	r3, [r0, #0]
 80107d8:	4631      	mov	r1, r6
 80107da:	689b      	ldr	r3, [r3, #8]
 80107dc:	4798      	blx	r3
 80107de:	6823      	ldr	r3, [r4, #0]
 80107e0:	4620      	mov	r0, r4
 80107e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80107e4:	4798      	blx	r3
 80107e6:	6828      	ldr	r0, [r5, #0]
 80107e8:	6803      	ldr	r3, [r0, #0]
 80107ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80107ee:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80107f0:	4718      	bx	r3
 80107f2:	bf00      	nop
 80107f4:	200137bc 	.word	0x200137bc

080107f8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 80107f8:	b508      	push	{r3, lr}
 80107fa:	f7f0 f91f 	bl	8000a3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80107fe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010802:	f7f0 b923 	b.w	8000a4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08010806 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8010806:	b510      	push	{r4, lr}
 8010808:	2114      	movs	r1, #20
 801080a:	4604      	mov	r4, r0
 801080c:	f016 fea7 	bl	802755e <_ZdlPvj>
 8010810:	4620      	mov	r0, r4
 8010812:	bd10      	pop	{r4, pc}

08010814 <_ZN8touchgfx13DMA_Interface5startEv>:
 8010814:	b510      	push	{r4, lr}
 8010816:	4604      	mov	r4, r0
 8010818:	6840      	ldr	r0, [r0, #4]
 801081a:	6803      	ldr	r3, [r0, #0]
 801081c:	681b      	ldr	r3, [r3, #0]
 801081e:	4798      	blx	r3
 8010820:	b948      	cbnz	r0, 8010836 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010822:	7a63      	ldrb	r3, [r4, #9]
 8010824:	b13b      	cbz	r3, 8010836 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010826:	7a23      	ldrb	r3, [r4, #8]
 8010828:	b92b      	cbnz	r3, 8010836 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801082a:	6823      	ldr	r3, [r4, #0]
 801082c:	4620      	mov	r0, r4
 801082e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010830:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010834:	4718      	bx	r3
 8010836:	bd10      	pop	{r4, pc}

08010838 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8010838:	b570      	push	{r4, r5, r6, lr}
 801083a:	4604      	mov	r4, r0
 801083c:	6840      	ldr	r0, [r0, #4]
 801083e:	6803      	ldr	r3, [r0, #0]
 8010840:	681b      	ldr	r3, [r3, #0]
 8010842:	4798      	blx	r3
 8010844:	4605      	mov	r5, r0
 8010846:	b930      	cbnz	r0, 8010856 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8010848:	7a23      	ldrb	r3, [r4, #8]
 801084a:	b123      	cbz	r3, 8010856 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 801084c:	6860      	ldr	r0, [r4, #4]
 801084e:	6803      	ldr	r3, [r0, #0]
 8010850:	695b      	ldr	r3, [r3, #20]
 8010852:	4798      	blx	r3
 8010854:	7225      	strb	r5, [r4, #8]
 8010856:	6860      	ldr	r0, [r4, #4]
 8010858:	6803      	ldr	r3, [r0, #0]
 801085a:	681b      	ldr	r3, [r3, #0]
 801085c:	4798      	blx	r3
 801085e:	b928      	cbnz	r0, 801086c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8010860:	6823      	ldr	r3, [r4, #0]
 8010862:	4620      	mov	r0, r4
 8010864:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010866:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801086a:	4718      	bx	r3
 801086c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010870:	f7f0 b8fa 	b.w	8000a68 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08010874 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8010874:	b510      	push	{r4, lr}
 8010876:	4c04      	ldr	r4, [pc, #16]	; (8010888 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8010878:	6082      	str	r2, [r0, #8]
 801087a:	2200      	movs	r2, #0
 801087c:	e9c0 4100 	strd	r4, r1, [r0]
 8010880:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8010884:	bd10      	pop	{r4, pc}
 8010886:	bf00      	nop
 8010888:	0802c39c 	.word	0x0802c39c

0801088c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 801088c:	6840      	ldr	r0, [r0, #4]
 801088e:	6803      	ldr	r3, [r0, #0]
 8010890:	681b      	ldr	r3, [r3, #0]
 8010892:	4718      	bx	r3

08010894 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8010894:	4b06      	ldr	r3, [pc, #24]	; (80108b0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 8010896:	60c1      	str	r1, [r0, #12]
 8010898:	094a      	lsrs	r2, r1, #5
 801089a:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 801089e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80108a2:	4313      	orrs	r3, r2
 80108a4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80108a8:	4319      	orrs	r1, r3
 80108aa:	8201      	strh	r1, [r0, #16]
 80108ac:	4770      	bx	lr
 80108ae:	bf00      	nop
 80108b0:	fffff800 	.word	0xfffff800

080108b4 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 80108b4:	f1a0 0008 	sub.w	r0, r0, #8
 80108b8:	e7ec      	b.n	8010894 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 80108ba:	bf00      	nop

080108bc <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 80108bc:	b508      	push	{r3, lr}
 80108be:	4b05      	ldr	r3, [pc, #20]	; (80108d4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 80108c0:	6818      	ldr	r0, [r3, #0]
 80108c2:	6803      	ldr	r3, [r0, #0]
 80108c4:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 80108c8:	4798      	blx	r3
 80108ca:	1e43      	subs	r3, r0, #1
 80108cc:	4258      	negs	r0, r3
 80108ce:	4158      	adcs	r0, r3
 80108d0:	bd08      	pop	{r3, pc}
 80108d2:	bf00      	nop
 80108d4:	200137bc 	.word	0x200137bc

080108d8 <_ZN8touchgfx13PainterRGB565D1Ev>:
 80108d8:	4770      	bx	lr

080108da <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 80108da:	3808      	subs	r0, #8
 80108dc:	4770      	bx	lr

080108de <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 80108de:	b430      	push	{r4, r5}
 80108e0:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 80108e4:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 80108e8:	8a02      	ldrh	r2, [r0, #16]
 80108ea:	9202      	str	r2, [sp, #8]
 80108ec:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80108f0:	68c2      	ldr	r2, [r0, #12]
 80108f2:	4629      	mov	r1, r5
 80108f4:	4620      	mov	r0, r4
 80108f6:	bc30      	pop	{r4, r5}
 80108f8:	f7f0 ba7a 	b.w	8000df0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

080108fc <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 80108fc:	f7f0 ba6e 	b.w	8000ddc <_ZN8touchgfx5paint8tearDownEv>

08010900 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8010900:	b510      	push	{r4, lr}
 8010902:	2114      	movs	r1, #20
 8010904:	4604      	mov	r4, r0
 8010906:	f016 fe2a 	bl	802755e <_ZdlPvj>
 801090a:	4620      	mov	r0, r4
 801090c:	bd10      	pop	{r4, pc}

0801090e <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 801090e:	f1a0 0008 	sub.w	r0, r0, #8
 8010912:	e7f5      	b.n	8010900 <_ZN8touchgfx13PainterRGB565D0Ev>

08010914 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8010914:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010916:	6803      	ldr	r3, [r0, #0]
 8010918:	460d      	mov	r5, r1
 801091a:	4604      	mov	r4, r0
 801091c:	4601      	mov	r1, r0
 801091e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010920:	a802      	add	r0, sp, #8
 8010922:	4798      	blx	r3
 8010924:	6828      	ldr	r0, [r5, #0]
 8010926:	6869      	ldr	r1, [r5, #4]
 8010928:	466b      	mov	r3, sp
 801092a:	c303      	stmia	r3!, {r0, r1}
 801092c:	4668      	mov	r0, sp
 801092e:	4619      	mov	r1, r3
 8010930:	f7fe ffa4 	bl	800f87c <_ZN8touchgfx4RectaNERKS0_>
 8010934:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8010936:	b188      	cbz	r0, 801095c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010938:	6803      	ldr	r3, [r0, #0]
 801093a:	1d21      	adds	r1, r4, #4
 801093c:	68db      	ldr	r3, [r3, #12]
 801093e:	4798      	blx	r3
 8010940:	b160      	cbz	r0, 801095c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010942:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8010946:	2b00      	cmp	r3, #0
 8010948:	dd08      	ble.n	801095c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801094a:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 801094e:	2d00      	cmp	r5, #0
 8010950:	dd04      	ble.n	801095c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010952:	4a2b      	ldr	r2, [pc, #172]	; (8010a00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8010954:	7812      	ldrb	r2, [r2, #0]
 8010956:	b11a      	cbz	r2, 8010960 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8010958:	2a01      	cmp	r2, #1
 801095a:	d029      	beq.n	80109b0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 801095c:	b004      	add	sp, #16
 801095e:	bd70      	pop	{r4, r5, r6, pc}
 8010960:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010964:	441d      	add	r5, r3
 8010966:	b2ad      	uxth	r5, r5
 8010968:	b22e      	sxth	r6, r5
 801096a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 801096e:	42b3      	cmp	r3, r6
 8010970:	daf4      	bge.n	801095c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010972:	6823      	ldr	r3, [r4, #0]
 8010974:	4669      	mov	r1, sp
 8010976:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8010978:	4620      	mov	r0, r4
 801097a:	4798      	blx	r3
 801097c:	b940      	cbnz	r0, 8010990 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 801097e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8010982:	2b01      	cmp	r3, #1
 8010984:	d004      	beq.n	8010990 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8010986:	3301      	adds	r3, #1
 8010988:	105b      	asrs	r3, r3, #1
 801098a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801098e:	e7f0      	b.n	8010972 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8010990:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8010994:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010998:	4413      	add	r3, r2
 801099a:	b29b      	uxth	r3, r3
 801099c:	441a      	add	r2, r3
 801099e:	b212      	sxth	r2, r2
 80109a0:	4296      	cmp	r6, r2
 80109a2:	f8ad 3002 	strh.w	r3, [sp, #2]
 80109a6:	dae0      	bge.n	801096a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 80109a8:	1aeb      	subs	r3, r5, r3
 80109aa:	f8ad 3006 	strh.w	r3, [sp, #6]
 80109ae:	e7dc      	b.n	801096a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 80109b0:	f8bd 5000 	ldrh.w	r5, [sp]
 80109b4:	441d      	add	r5, r3
 80109b6:	b2ad      	uxth	r5, r5
 80109b8:	b22e      	sxth	r6, r5
 80109ba:	f9bd 3000 	ldrsh.w	r3, [sp]
 80109be:	42b3      	cmp	r3, r6
 80109c0:	dacc      	bge.n	801095c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80109c2:	6823      	ldr	r3, [r4, #0]
 80109c4:	4669      	mov	r1, sp
 80109c6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80109c8:	4620      	mov	r0, r4
 80109ca:	4798      	blx	r3
 80109cc:	b940      	cbnz	r0, 80109e0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80109ce:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80109d2:	2b01      	cmp	r3, #1
 80109d4:	d004      	beq.n	80109e0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80109d6:	3301      	adds	r3, #1
 80109d8:	105b      	asrs	r3, r3, #1
 80109da:	f8ad 3004 	strh.w	r3, [sp, #4]
 80109de:	e7f0      	b.n	80109c2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 80109e0:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 80109e4:	f8bd 3000 	ldrh.w	r3, [sp]
 80109e8:	4413      	add	r3, r2
 80109ea:	b29b      	uxth	r3, r3
 80109ec:	441a      	add	r2, r3
 80109ee:	b212      	sxth	r2, r2
 80109f0:	4296      	cmp	r6, r2
 80109f2:	f8ad 3000 	strh.w	r3, [sp]
 80109f6:	dae0      	bge.n	80109ba <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 80109f8:	1aeb      	subs	r3, r5, r3
 80109fa:	f8ad 3004 	strh.w	r3, [sp, #4]
 80109fe:	e7dc      	b.n	80109ba <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8010a00:	200137b4 	.word	0x200137b4

08010a04 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8010a04:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010a06:	6803      	ldr	r3, [r0, #0]
 8010a08:	4604      	mov	r4, r0
 8010a0a:	4601      	mov	r1, r0
 8010a0c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010a0e:	4668      	mov	r0, sp
 8010a10:	4798      	blx	r3
 8010a12:	2100      	movs	r1, #0
 8010a14:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8010a18:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010a1c:	9102      	str	r1, [sp, #8]
 8010a1e:	4668      	mov	r0, sp
 8010a20:	a902      	add	r1, sp, #8
 8010a22:	f8ad 200c 	strh.w	r2, [sp, #12]
 8010a26:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010a2a:	f7fe ff27 	bl	800f87c <_ZN8touchgfx4RectaNERKS0_>
 8010a2e:	6823      	ldr	r3, [r4, #0]
 8010a30:	4669      	mov	r1, sp
 8010a32:	691b      	ldr	r3, [r3, #16]
 8010a34:	4620      	mov	r0, r4
 8010a36:	4798      	blx	r3
 8010a38:	b004      	add	sp, #16
 8010a3a:	bd10      	pop	{r4, pc}

08010a3c <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8010a3c:	2101      	movs	r1, #1
 8010a3e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8010a42:	490b      	ldr	r1, [pc, #44]	; (8010a70 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8010a44:	6001      	str	r1, [r0, #0]
 8010a46:	2200      	movs	r2, #0
 8010a48:	21ff      	movs	r1, #255	; 0xff
 8010a4a:	8082      	strh	r2, [r0, #4]
 8010a4c:	80c2      	strh	r2, [r0, #6]
 8010a4e:	8102      	strh	r2, [r0, #8]
 8010a50:	8142      	strh	r2, [r0, #10]
 8010a52:	8182      	strh	r2, [r0, #12]
 8010a54:	81c2      	strh	r2, [r0, #14]
 8010a56:	8202      	strh	r2, [r0, #16]
 8010a58:	8242      	strh	r2, [r0, #18]
 8010a5a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8010a5e:	61c2      	str	r2, [r0, #28]
 8010a60:	8402      	strh	r2, [r0, #32]
 8010a62:	8442      	strh	r2, [r0, #34]	; 0x22
 8010a64:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8010a68:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8010a6c:	6282      	str	r2, [r0, #40]	; 0x28
 8010a6e:	4770      	bx	lr
 8010a70:	0802c3f8 	.word	0x0802c3f8

08010a74 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8010a74:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8010a78:	4602      	mov	r2, r0
 8010a7a:	cb03      	ldmia	r3!, {r0, r1}
 8010a7c:	6010      	str	r0, [r2, #0]
 8010a7e:	6051      	str	r1, [r2, #4]
 8010a80:	4610      	mov	r0, r2
 8010a82:	4770      	bx	lr

08010a84 <_ZN8touchgfx4LineD1Ev>:
 8010a84:	4770      	bx	lr

08010a86 <_ZN8touchgfx4LineD0Ev>:
 8010a86:	b510      	push	{r4, lr}
 8010a88:	2170      	movs	r1, #112	; 0x70
 8010a8a:	4604      	mov	r4, r0
 8010a8c:	f016 fd67 	bl	802755e <_ZdlPvj>
 8010a90:	4620      	mov	r0, r4
 8010a92:	bd10      	pop	{r4, pc}

08010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8010a94:	b507      	push	{r0, r1, r2, lr}
 8010a96:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8010a9a:	ab01      	add	r3, sp, #4
 8010a9c:	6809      	ldr	r1, [r1, #0]
 8010a9e:	6800      	ldr	r0, [r0, #0]
 8010aa0:	f005 fab4 	bl	801600c <_ZN8touchgfx6muldivElllRl>
 8010aa4:	b003      	add	sp, #12
 8010aa6:	f85d fb04 	ldr.w	pc, [sp], #4

08010aaa <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8010aaa:	6800      	ldr	r0, [r0, #0]
 8010aac:	2800      	cmp	r0, #0
 8010aae:	bfb9      	ittee	lt
 8010ab0:	2320      	movlt	r3, #32
 8010ab2:	fb90 f0f3 	sdivlt	r0, r0, r3
 8010ab6:	301f      	addge	r0, #31
 8010ab8:	1140      	asrge	r0, r0, #5
 8010aba:	4770      	bx	lr

08010abc <_ZNK8touchgfx4Line17invalidateContentEv>:
 8010abc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ac0:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8010ac4:	b089      	sub	sp, #36	; 0x24
 8010ac6:	4604      	mov	r4, r0
 8010ac8:	b353      	cbz	r3, 8010b20 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8010aca:	6803      	ldr	r3, [r0, #0]
 8010acc:	4601      	mov	r1, r0
 8010ace:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010ad0:	a802      	add	r0, sp, #8
 8010ad2:	4798      	blx	r3
 8010ad4:	2220      	movs	r2, #32
 8010ad6:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8010ada:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8010adc:	fb9a f0f2 	sdiv	r0, sl, r2
 8010ae0:	fb91 f5f2 	sdiv	r5, r1, r2
 8010ae4:	1b40      	subs	r0, r0, r5
 8010ae6:	2800      	cmp	r0, #0
 8010ae8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010aea:	fb93 f6f2 	sdiv	r6, r3, r2
 8010aee:	bfb8      	it	lt
 8010af0:	4240      	neglt	r0, r0
 8010af2:	0076      	lsls	r6, r6, #1
 8010af4:	4286      	cmp	r6, r0
 8010af6:	f8d4 b000 	ldr.w	fp, [r4]
 8010afa:	dc0c      	bgt.n	8010b16 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8010afc:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8010afe:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 8010b02:	fb95 f0f2 	sdiv	r0, r5, r2
 8010b06:	fb98 f7f2 	sdiv	r7, r8, r2
 8010b0a:	1bc0      	subs	r0, r0, r7
 8010b0c:	2800      	cmp	r0, #0
 8010b0e:	bfb8      	it	lt
 8010b10:	4240      	neglt	r0, r0
 8010b12:	4286      	cmp	r6, r0
 8010b14:	dd07      	ble.n	8010b26 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8010b16:	f8db 3010 	ldr.w	r3, [fp, #16]
 8010b1a:	a902      	add	r1, sp, #8
 8010b1c:	4620      	mov	r0, r4
 8010b1e:	4798      	blx	r3
 8010b20:	b009      	add	sp, #36	; 0x24
 8010b22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b26:	3301      	adds	r3, #1
 8010b28:	2002      	movs	r0, #2
 8010b2a:	f10d 0920 	add.w	r9, sp, #32
 8010b2e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8010b32:	4103      	asrs	r3, r0
 8010b34:	f849 3d08 	str.w	r3, [r9, #-8]!
 8010b38:	eb01 060a 	add.w	r6, r1, sl
 8010b3c:	eb08 0705 	add.w	r7, r8, r5
 8010b40:	fb96 f6f0 	sdiv	r6, r6, r0
 8010b44:	fb97 f7f0 	sdiv	r7, r7, r0
 8010b48:	4648      	mov	r0, r9
 8010b4a:	9101      	str	r1, [sp, #4]
 8010b4c:	b236      	sxth	r6, r6
 8010b4e:	b23f      	sxth	r7, r7
 8010b50:	fb96 f6f2 	sdiv	r6, r6, r2
 8010b54:	fb97 f7f2 	sdiv	r7, r7, r2
 8010b58:	f7ff ffa7 	bl	8010aaa <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8010b5c:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010b60:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8010b64:	9901      	ldr	r1, [sp, #4]
 8010b66:	4293      	cmp	r3, r2
 8010b68:	fa1f fe87 	uxth.w	lr, r7
 8010b6c:	fa1f fc86 	uxth.w	ip, r6
 8010b70:	eba1 0a0a 	sub.w	sl, r1, sl
 8010b74:	b280      	uxth	r0, r0
 8010b76:	da54      	bge.n	8010c22 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8010b78:	ebac 0100 	sub.w	r1, ip, r0
 8010b7c:	b289      	uxth	r1, r1
 8010b7e:	4460      	add	r0, ip
 8010b80:	f1ba 0f00 	cmp.w	sl, #0
 8010b84:	b20e      	sxth	r6, r1
 8010b86:	b280      	uxth	r0, r0
 8010b88:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8010b8c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8010b90:	da29      	bge.n	8010be6 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8010b92:	eba8 0505 	sub.w	r5, r8, r5
 8010b96:	2d00      	cmp	r5, #0
 8010b98:	da2a      	bge.n	8010bf0 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8010b9a:	fa1f f88a 	uxth.w	r8, sl
 8010b9e:	eba0 0008 	sub.w	r0, r0, r8
 8010ba2:	fa1f f58c 	uxth.w	r5, ip
 8010ba6:	4443      	add	r3, r8
 8010ba8:	f8ad 0014 	strh.w	r0, [sp, #20]
 8010bac:	1a59      	subs	r1, r3, r1
 8010bae:	ebae 0005 	sub.w	r0, lr, r5
 8010bb2:	f8ad a010 	strh.w	sl, [sp, #16]
 8010bb6:	f8ad c012 	strh.w	ip, [sp, #18]
 8010bba:	f8ad 0016 	strh.w	r0, [sp, #22]
 8010bbe:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010bc2:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010bc6:	f8ad 101c 	strh.w	r1, [sp, #28]
 8010bca:	442a      	add	r2, r5
 8010bcc:	eba2 0e0e 	sub.w	lr, r2, lr
 8010bd0:	f8ad e01e 	strh.w	lr, [sp, #30]
 8010bd4:	f8db 3010 	ldr.w	r3, [fp, #16]
 8010bd8:	a904      	add	r1, sp, #16
 8010bda:	4620      	mov	r0, r4
 8010bdc:	4798      	blx	r3
 8010bde:	6823      	ldr	r3, [r4, #0]
 8010be0:	4649      	mov	r1, r9
 8010be2:	691b      	ldr	r3, [r3, #16]
 8010be4:	e79a      	b.n	8010b1c <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8010be6:	d003      	beq.n	8010bf0 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8010be8:	eba8 0505 	sub.w	r5, r8, r5
 8010bec:	2d00      	cmp	r5, #0
 8010bee:	dcd4      	bgt.n	8010b9a <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8010bf0:	fa1f f88a 	uxth.w	r8, sl
 8010bf4:	4443      	add	r3, r8
 8010bf6:	fa1f f58c 	uxth.w	r5, ip
 8010bfa:	1a59      	subs	r1, r3, r1
 8010bfc:	eba0 0008 	sub.w	r0, r0, r8
 8010c00:	ebae 0305 	sub.w	r3, lr, r5
 8010c04:	f8ad 6010 	strh.w	r6, [sp, #16]
 8010c08:	f8ad c012 	strh.w	ip, [sp, #18]
 8010c0c:	f8ad 1014 	strh.w	r1, [sp, #20]
 8010c10:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010c14:	f8ad a018 	strh.w	sl, [sp, #24]
 8010c18:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010c1c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8010c20:	e7d3      	b.n	8010bca <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8010c22:	ebae 0100 	sub.w	r1, lr, r0
 8010c26:	b289      	uxth	r1, r1
 8010c28:	4470      	add	r0, lr
 8010c2a:	f1ba 0f00 	cmp.w	sl, #0
 8010c2e:	b20f      	sxth	r7, r1
 8010c30:	b280      	uxth	r0, r0
 8010c32:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8010c36:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8010c3a:	da20      	bge.n	8010c7e <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8010c3c:	eba8 0505 	sub.w	r5, r8, r5
 8010c40:	2d00      	cmp	r5, #0
 8010c42:	da21      	bge.n	8010c88 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8010c44:	fa1f f88e 	uxth.w	r8, lr
 8010c48:	fa1f f58a 	uxth.w	r5, sl
 8010c4c:	4443      	add	r3, r8
 8010c4e:	442a      	add	r2, r5
 8010c50:	f8ad e010 	strh.w	lr, [sp, #16]
 8010c54:	1b40      	subs	r0, r0, r5
 8010c56:	ebac 0e08 	sub.w	lr, ip, r8
 8010c5a:	1a51      	subs	r1, r2, r1
 8010c5c:	eba3 0c0c 	sub.w	ip, r3, ip
 8010c60:	f8ad a012 	strh.w	sl, [sp, #18]
 8010c64:	f8ad e014 	strh.w	lr, [sp, #20]
 8010c68:	f8ad 0016 	strh.w	r0, [sp, #22]
 8010c6c:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010c70:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010c74:	f8ad c01c 	strh.w	ip, [sp, #28]
 8010c78:	f8ad 101e 	strh.w	r1, [sp, #30]
 8010c7c:	e7aa      	b.n	8010bd4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8010c7e:	d003      	beq.n	8010c88 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8010c80:	eba8 0505 	sub.w	r5, r8, r5
 8010c84:	2d00      	cmp	r5, #0
 8010c86:	dcdd      	bgt.n	8010c44 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8010c88:	fa1f f58e 	uxth.w	r5, lr
 8010c8c:	fa1f f88a 	uxth.w	r8, sl
 8010c90:	4442      	add	r2, r8
 8010c92:	442b      	add	r3, r5
 8010c94:	f8ad 7012 	strh.w	r7, [sp, #18]
 8010c98:	1a51      	subs	r1, r2, r1
 8010c9a:	ebac 0705 	sub.w	r7, ip, r5
 8010c9e:	eba0 0008 	sub.w	r0, r0, r8
 8010ca2:	eba3 0c0c 	sub.w	ip, r3, ip
 8010ca6:	f8ad e010 	strh.w	lr, [sp, #16]
 8010caa:	f8ad 7014 	strh.w	r7, [sp, #20]
 8010cae:	f8ad 1016 	strh.w	r1, [sp, #22]
 8010cb2:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010cb6:	f8ad a01a 	strh.w	sl, [sp, #26]
 8010cba:	f8ad c01c 	strh.w	ip, [sp, #28]
 8010cbe:	f8ad 001e 	strh.w	r0, [sp, #30]
 8010cc2:	e787      	b.n	8010bd4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08010cc4 <_ZN8touchgfx7CWRUtil4sineEi>:
 8010cc4:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8010cc8:	fb90 f2f3 	sdiv	r2, r0, r3
 8010ccc:	fb02 0013 	mls	r0, r2, r3, r0
 8010cd0:	2800      	cmp	r0, #0
 8010cd2:	bfb8      	it	lt
 8010cd4:	18c0      	addlt	r0, r0, r3
 8010cd6:	285a      	cmp	r0, #90	; 0x5a
 8010cd8:	4b09      	ldr	r3, [pc, #36]	; (8010d00 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8010cda:	dc02      	bgt.n	8010ce2 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8010cdc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8010ce0:	4770      	bx	lr
 8010ce2:	28b4      	cmp	r0, #180	; 0xb4
 8010ce4:	dc02      	bgt.n	8010cec <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8010ce6:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8010cea:	e7f7      	b.n	8010cdc <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8010cec:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8010cf0:	bfd4      	ite	le
 8010cf2:	38b4      	suble	r0, #180	; 0xb4
 8010cf4:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8010cf8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8010cfc:	4240      	negs	r0, r0
 8010cfe:	4770      	bx	lr
 8010d00:	0802c4c4 	.word	0x0802c4c4

08010d04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8010d04:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8010d08:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010d0a:	fb90 f2f3 	sdiv	r2, r0, r3
 8010d0e:	fb02 0013 	mls	r0, r2, r3, r0
 8010d12:	2800      	cmp	r0, #0
 8010d14:	bfb8      	it	lt
 8010d16:	18c0      	addlt	r0, r0, r3
 8010d18:	1144      	asrs	r4, r0, #5
 8010d1a:	f000 061f 	and.w	r6, r0, #31
 8010d1e:	4620      	mov	r0, r4
 8010d20:	f7ff ffd0 	bl	8010cc4 <_ZN8touchgfx7CWRUtil4sineEi>
 8010d24:	4605      	mov	r5, r0
 8010d26:	b90e      	cbnz	r6, 8010d2c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8010d28:	b002      	add	sp, #8
 8010d2a:	bd70      	pop	{r4, r5, r6, pc}
 8010d2c:	1c60      	adds	r0, r4, #1
 8010d2e:	f7ff ffc9 	bl	8010cc4 <_ZN8touchgfx7CWRUtil4sineEi>
 8010d32:	ab01      	add	r3, sp, #4
 8010d34:	2220      	movs	r2, #32
 8010d36:	4631      	mov	r1, r6
 8010d38:	1b40      	subs	r0, r0, r5
 8010d3a:	f005 f967 	bl	801600c <_ZN8touchgfx6muldivElllRl>
 8010d3e:	4428      	add	r0, r5
 8010d40:	e7f2      	b.n	8010d28 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08010d42 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8010d42:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8010d46:	bf2c      	ite	cs
 8010d48:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8010d4c:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8010d50:	2300      	movs	r3, #0
 8010d52:	1899      	adds	r1, r3, r2
 8010d54:	4288      	cmp	r0, r1
 8010d56:	bf24      	itt	cs
 8010d58:	1853      	addcs	r3, r2, r1
 8010d5a:	1a40      	subcs	r0, r0, r1
 8010d5c:	0892      	lsrs	r2, r2, #2
 8010d5e:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8010d62:	d1f6      	bne.n	8010d52 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8010d64:	4618      	mov	r0, r3
 8010d66:	4770      	bx	lr

08010d68 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8010d68:	b510      	push	{r4, lr}
 8010d6a:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8010d6e:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8010d72:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8010d76:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8010d7a:	13a4      	asrs	r4, r4, #14
 8010d7c:	139b      	asrs	r3, r3, #14
 8010d7e:	429c      	cmp	r4, r3
 8010d80:	bfb8      	it	lt
 8010d82:	461c      	movlt	r4, r3
 8010d84:	2c01      	cmp	r4, #1
 8010d86:	dd07      	ble.n	8010d98 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8010d88:	fb91 f1f4 	sdiv	r1, r1, r4
 8010d8c:	fb90 f0f4 	sdiv	r0, r0, r4
 8010d90:	f7ff ffea 	bl	8010d68 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8010d94:	4360      	muls	r0, r4
 8010d96:	bd10      	pop	{r4, pc}
 8010d98:	4340      	muls	r0, r0
 8010d9a:	fb01 0001 	mla	r0, r1, r1, r0
 8010d9e:	f7ff ffd0 	bl	8010d42 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8010da2:	e7f8      	b.n	8010d96 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08010da4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8010da4:	2800      	cmp	r0, #0
 8010da6:	b508      	push	{r3, lr}
 8010da8:	da05      	bge.n	8010db6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8010daa:	4240      	negs	r0, r0
 8010dac:	f7ff fffa 	bl	8010da4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8010db0:	4240      	negs	r0, r0
 8010db2:	b240      	sxtb	r0, r0
 8010db4:	bd08      	pop	{r3, pc}
 8010db6:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8010dba:	dc11      	bgt.n	8010de0 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8010dbc:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8010dc0:	dd09      	ble.n	8010dd6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8010dc2:	4340      	muls	r0, r0
 8010dc4:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8010dc8:	f7ff ffbb 	bl	8010d42 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8010dcc:	f7ff ffea 	bl	8010da4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8010dd0:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8010dd4:	e7ed      	b.n	8010db2 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8010dd6:	3003      	adds	r0, #3
 8010dd8:	10c0      	asrs	r0, r0, #3
 8010dda:	4b02      	ldr	r3, [pc, #8]	; (8010de4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8010ddc:	5618      	ldrsb	r0, [r3, r0]
 8010dde:	e7e9      	b.n	8010db4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8010de0:	2000      	movs	r0, #0
 8010de2:	e7e7      	b.n	8010db4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8010de4:	0802c468 	.word	0x0802c468

08010de8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8010de8:	4281      	cmp	r1, r0
 8010dea:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010dec:	460c      	mov	r4, r1
 8010dee:	4615      	mov	r5, r2
 8010df0:	dd07      	ble.n	8010e02 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8010df2:	4601      	mov	r1, r0
 8010df4:	4620      	mov	r0, r4
 8010df6:	f7ff fff7 	bl	8010de8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8010dfa:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8010dfe:	b003      	add	sp, #12
 8010e00:	bd30      	pop	{r4, r5, pc}
 8010e02:	f7ff ffb1 	bl	8010d68 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8010e06:	6028      	str	r0, [r5, #0]
 8010e08:	2800      	cmp	r0, #0
 8010e0a:	d0f8      	beq.n	8010dfe <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8010e0c:	4602      	mov	r2, r0
 8010e0e:	ab01      	add	r3, sp, #4
 8010e10:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8010e14:	4620      	mov	r0, r4
 8010e16:	f005 f8f9 	bl	801600c <_ZN8touchgfx6muldivElllRl>
 8010e1a:	f7ff ffc3 	bl	8010da4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8010e1e:	e7ee      	b.n	8010dfe <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08010e20 <_ZN8touchgfx4LineC1Ev>:
 8010e20:	b510      	push	{r4, lr}
 8010e22:	4604      	mov	r4, r0
 8010e24:	f7ff fe0a 	bl	8010a3c <_ZN8touchgfx12CanvasWidgetC1Ev>
 8010e28:	4b0c      	ldr	r3, [pc, #48]	; (8010e5c <_ZN8touchgfx4LineC1Ev+0x3c>)
 8010e2a:	6023      	str	r3, [r4, #0]
 8010e2c:	2220      	movs	r2, #32
 8010e2e:	2300      	movs	r3, #0
 8010e30:	63e2      	str	r2, [r4, #60]	; 0x3c
 8010e32:	2212      	movs	r2, #18
 8010e34:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8010e38:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8010e3c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8010e40:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8010e44:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8010e48:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8010e4c:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8010e50:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8010e54:	66e2      	str	r2, [r4, #108]	; 0x6c
 8010e56:	60a3      	str	r3, [r4, #8]
 8010e58:	4620      	mov	r0, r4
 8010e5a:	bd10      	pop	{r4, pc}
 8010e5c:	0802c584 	.word	0x0802c584

08010e60 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8010e60:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8010e64:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8010e66:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8010e68:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8010e6a:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8010e6c:	1aff      	subs	r7, r7, r3
 8010e6e:	4604      	mov	r4, r0
 8010e70:	eba5 0502 	sub.w	r5, r5, r2
 8010e74:	d142      	bne.n	8010efc <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8010e76:	b955      	cbnz	r5, 8010e8e <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8010e78:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8010e7c:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8010e80:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8010e84:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8010e88:	b002      	add	sp, #8
 8010e8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010e8e:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8010e92:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8010e96:	4629      	mov	r1, r5
 8010e98:	4642      	mov	r2, r8
 8010e9a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010e9c:	f005 f8d5 	bl	801604a <_ZN8touchgfx6muldivElll>
 8010ea0:	2502      	movs	r5, #2
 8010ea2:	4642      	mov	r2, r8
 8010ea4:	fb90 f6f5 	sdiv	r6, r0, r5
 8010ea8:	4639      	mov	r1, r7
 8010eaa:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010eac:	f005 f8cd 	bl	801604a <_ZN8touchgfx6muldivElll>
 8010eb0:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8010eb4:	fb90 f5f5 	sdiv	r5, r0, r5
 8010eb8:	f1b9 0f00 	cmp.w	r9, #0
 8010ebc:	d067      	beq.n	8010f8e <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8010ebe:	f1b9 0f02 	cmp.w	r9, #2
 8010ec2:	d878      	bhi.n	8010fb6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8010ec4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8010ec6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8010ec8:	1b93      	subs	r3, r2, r6
 8010eca:	1b5b      	subs	r3, r3, r5
 8010ecc:	6463      	str	r3, [r4, #68]	; 0x44
 8010ece:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010ed0:	18e9      	adds	r1, r5, r3
 8010ed2:	1b89      	subs	r1, r1, r6
 8010ed4:	6561      	str	r1, [r4, #84]	; 0x54
 8010ed6:	1b81      	subs	r1, r0, r6
 8010ed8:	4429      	add	r1, r5
 8010eda:	64a1      	str	r1, [r4, #72]	; 0x48
 8010edc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8010ede:	4430      	add	r0, r6
 8010ee0:	186f      	adds	r7, r5, r1
 8010ee2:	4432      	add	r2, r6
 8010ee4:	1b49      	subs	r1, r1, r5
 8010ee6:	4437      	add	r7, r6
 8010ee8:	4428      	add	r0, r5
 8010eea:	4431      	add	r1, r6
 8010eec:	1b52      	subs	r2, r2, r5
 8010eee:	1b5b      	subs	r3, r3, r5
 8010ef0:	65a7      	str	r7, [r4, #88]	; 0x58
 8010ef2:	64e0      	str	r0, [r4, #76]	; 0x4c
 8010ef4:	65e1      	str	r1, [r4, #92]	; 0x5c
 8010ef6:	6522      	str	r2, [r4, #80]	; 0x50
 8010ef8:	1b9b      	subs	r3, r3, r6
 8010efa:	e05b      	b.n	8010fb4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8010efc:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8010f00:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8010f04:	2d00      	cmp	r5, #0
 8010f06:	d0c6      	beq.n	8010e96 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8010f08:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8010f0c:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8010f10:	fb93 f2f8 	sdiv	r2, r3, r8
 8010f14:	fb08 3312 	mls	r3, r8, r2, r3
 8010f18:	b353      	cbz	r3, 8010f70 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8010f1a:	fb98 f2f3 	sdiv	r2, r8, r3
 8010f1e:	fb03 8812 	mls	r8, r3, r2, r8
 8010f22:	f1b8 0f00 	cmp.w	r8, #0
 8010f26:	d1f3      	bne.n	8010f10 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8010f28:	2b01      	cmp	r3, #1
 8010f2a:	bf1c      	itt	ne
 8010f2c:	fb95 f5f3 	sdivne	r5, r5, r3
 8010f30:	fb97 f7f3 	sdivne	r7, r7, r3
 8010f34:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8010f38:	f24b 5104 	movw	r1, #46340	; 0xb504
 8010f3c:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8010f40:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8010f44:	428b      	cmp	r3, r1
 8010f46:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8010f4a:	4608      	mov	r0, r1
 8010f4c:	dd01      	ble.n	8010f52 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8010f4e:	428a      	cmp	r2, r1
 8010f50:	dc10      	bgt.n	8010f74 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8010f52:	fb90 f3f3 	sdiv	r3, r0, r3
 8010f56:	fb90 f2f2 	sdiv	r2, r0, r2
 8010f5a:	4293      	cmp	r3, r2
 8010f5c:	bfa8      	it	ge
 8010f5e:	4613      	movge	r3, r2
 8010f60:	435f      	muls	r7, r3
 8010f62:	435d      	muls	r5, r3
 8010f64:	4629      	mov	r1, r5
 8010f66:	4638      	mov	r0, r7
 8010f68:	f7ff fefe 	bl	8010d68 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8010f6c:	4680      	mov	r8, r0
 8010f6e:	e792      	b.n	8010e96 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8010f70:	4643      	mov	r3, r8
 8010f72:	e7d9      	b.n	8010f28 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8010f74:	fb93 f3f1 	sdiv	r3, r3, r1
 8010f78:	fb92 f2f1 	sdiv	r2, r2, r1
 8010f7c:	4293      	cmp	r3, r2
 8010f7e:	bfcc      	ite	gt
 8010f80:	3301      	addgt	r3, #1
 8010f82:	1c53      	addle	r3, r2, #1
 8010f84:	fb97 f7f3 	sdiv	r7, r7, r3
 8010f88:	fb95 f5f3 	sdiv	r5, r5, r3
 8010f8c:	e7ea      	b.n	8010f64 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8010f8e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8010f90:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8010f92:	1b93      	subs	r3, r2, r6
 8010f94:	6463      	str	r3, [r4, #68]	; 0x44
 8010f96:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010f98:	18e9      	adds	r1, r5, r3
 8010f9a:	6561      	str	r1, [r4, #84]	; 0x54
 8010f9c:	1b81      	subs	r1, r0, r6
 8010f9e:	64a1      	str	r1, [r4, #72]	; 0x48
 8010fa0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8010fa2:	4430      	add	r0, r6
 8010fa4:	186f      	adds	r7, r5, r1
 8010fa6:	4432      	add	r2, r6
 8010fa8:	1b49      	subs	r1, r1, r5
 8010faa:	65a7      	str	r7, [r4, #88]	; 0x58
 8010fac:	64e0      	str	r0, [r4, #76]	; 0x4c
 8010fae:	65e1      	str	r1, [r4, #92]	; 0x5c
 8010fb0:	6522      	str	r2, [r4, #80]	; 0x50
 8010fb2:	1b5b      	subs	r3, r3, r5
 8010fb4:	6623      	str	r3, [r4, #96]	; 0x60
 8010fb6:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8010fb8:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8010fba:	9200      	str	r2, [sp, #0]
 8010fbc:	9301      	str	r3, [sp, #4]
 8010fbe:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8010fc2:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8010fc6:	680f      	ldr	r7, [r1, #0]
 8010fc8:	9800      	ldr	r0, [sp, #0]
 8010fca:	42ba      	cmp	r2, r7
 8010fcc:	bfa8      	it	ge
 8010fce:	463a      	movge	r2, r7
 8010fd0:	4287      	cmp	r7, r0
 8010fd2:	bfc8      	it	gt
 8010fd4:	9700      	strgt	r7, [sp, #0]
 8010fd6:	690f      	ldr	r7, [r1, #16]
 8010fd8:	9801      	ldr	r0, [sp, #4]
 8010fda:	42bb      	cmp	r3, r7
 8010fdc:	bfa8      	it	ge
 8010fde:	463b      	movge	r3, r7
 8010fe0:	3104      	adds	r1, #4
 8010fe2:	4287      	cmp	r7, r0
 8010fe4:	bfc8      	it	gt
 8010fe6:	9701      	strgt	r7, [sp, #4]
 8010fe8:	458c      	cmp	ip, r1
 8010fea:	d1ec      	bne.n	8010fc6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8010fec:	4668      	mov	r0, sp
 8010fee:	2720      	movs	r7, #32
 8010ff0:	fb92 f8f7 	sdiv	r8, r2, r7
 8010ff4:	fb93 f7f7 	sdiv	r7, r3, r7
 8010ff8:	f7ff fd57 	bl	8010aaa <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8010ffc:	4682      	mov	sl, r0
 8010ffe:	a801      	add	r0, sp, #4
 8011000:	f7ff fd53 	bl	8010aaa <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8011004:	ebaa 0208 	sub.w	r2, sl, r8
 8011008:	1bc0      	subs	r0, r0, r7
 801100a:	f1b9 0f01 	cmp.w	r9, #1
 801100e:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8011012:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8011016:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 801101a:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 801101e:	f47f af33 	bne.w	8010e88 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8011022:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8011024:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011026:	1b83      	subs	r3, r0, r6
 8011028:	6463      	str	r3, [r4, #68]	; 0x44
 801102a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801102c:	18ea      	adds	r2, r5, r3
 801102e:	6562      	str	r2, [r4, #84]	; 0x54
 8011030:	1b8a      	subs	r2, r1, r6
 8011032:	64a2      	str	r2, [r4, #72]	; 0x48
 8011034:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8011036:	4431      	add	r1, r6
 8011038:	18af      	adds	r7, r5, r2
 801103a:	4406      	add	r6, r0
 801103c:	1b52      	subs	r2, r2, r5
 801103e:	1b5d      	subs	r5, r3, r5
 8011040:	65a7      	str	r7, [r4, #88]	; 0x58
 8011042:	64e1      	str	r1, [r4, #76]	; 0x4c
 8011044:	65e2      	str	r2, [r4, #92]	; 0x5c
 8011046:	6526      	str	r6, [r4, #80]	; 0x50
 8011048:	6625      	str	r5, [r4, #96]	; 0x60
 801104a:	e71d      	b.n	8010e88 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

0801104c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 801104c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801104e:	428b      	cmp	r3, r1
 8011050:	d102      	bne.n	8011058 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8011052:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8011054:	4293      	cmp	r3, r2
 8011056:	d003      	beq.n	8011060 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8011058:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 801105c:	f7ff bf00 	b.w	8010e60 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011060:	4770      	bx	lr

08011062 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8011062:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8011064:	428b      	cmp	r3, r1
 8011066:	d102      	bne.n	801106e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8011068:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801106a:	4293      	cmp	r3, r2
 801106c:	d003      	beq.n	8011076 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 801106e:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8011072:	f7ff bef5 	b.w	8010e60 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011076:	4770      	bx	lr

08011078 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8011078:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 801107c:	f7ff bef0 	b.w	8010e60 <_ZN8touchgfx4Line17updateCachedShapeEv>

08011080 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8011080:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011084:	b0a0      	sub	sp, #128	; 0x80
 8011086:	4604      	mov	r4, r0
 8011088:	460a      	mov	r2, r1
 801108a:	4601      	mov	r1, r0
 801108c:	a804      	add	r0, sp, #16
 801108e:	f014 fc47 	bl	8025920 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8011092:	2300      	movs	r3, #0
 8011094:	9301      	str	r3, [sp, #4]
 8011096:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 801109a:	2b01      	cmp	r3, #1
 801109c:	d17c      	bne.n	8011198 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 801109e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80110a0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80110a2:	6d61      	ldr	r1, [r4, #84]	; 0x54
 80110a4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80110a6:	1ac0      	subs	r0, r0, r3
 80110a8:	eba1 0102 	sub.w	r1, r1, r2
 80110ac:	d437      	bmi.n	801111e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 80110ae:	2900      	cmp	r1, #0
 80110b0:	aa01      	add	r2, sp, #4
 80110b2:	db2e      	blt.n	8011112 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 80110b4:	f7ff fe98 	bl	8010de8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80110b8:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 80110bc:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80110be:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80110c0:	a804      	add	r0, sp, #16
 80110c2:	f014 fdad 	bl	8025c20 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80110c6:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80110c8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80110ca:	a804      	add	r0, sp, #16
 80110cc:	f014 fdf5 	bl	8025cba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80110d0:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80110d2:	2db3      	cmp	r5, #179	; 0xb3
 80110d4:	dc33      	bgt.n	801113e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 80110d6:	eba6 0805 	sub.w	r8, r6, r5
 80110da:	4640      	mov	r0, r8
 80110dc:	f7ff fdf2 	bl	8010cc4 <_ZN8touchgfx7CWRUtil4sineEi>
 80110e0:	a902      	add	r1, sp, #8
 80110e2:	9002      	str	r0, [sp, #8]
 80110e4:	a801      	add	r0, sp, #4
 80110e6:	f7ff fcd5 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80110ea:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80110ec:	1847      	adds	r7, r0, r1
 80110ee:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 80110f2:	f7ff fde7 	bl	8010cc4 <_ZN8touchgfx7CWRUtil4sineEi>
 80110f6:	a903      	add	r1, sp, #12
 80110f8:	9003      	str	r0, [sp, #12]
 80110fa:	a801      	add	r0, sp, #4
 80110fc:	f7ff fcca 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011100:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8011102:	4639      	mov	r1, r7
 8011104:	1a12      	subs	r2, r2, r0
 8011106:	a804      	add	r0, sp, #16
 8011108:	f014 fdd7 	bl	8025cba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801110c:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 801110e:	441d      	add	r5, r3
 8011110:	e7df      	b.n	80110d2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8011112:	4249      	negs	r1, r1
 8011114:	f7ff fe68 	bl	8010de8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011118:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 801111c:	e7ce      	b.n	80110bc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801111e:	2900      	cmp	r1, #0
 8011120:	f1c0 0000 	rsb	r0, r0, #0
 8011124:	aa01      	add	r2, sp, #4
 8011126:	db04      	blt.n	8011132 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8011128:	f7ff fe5e 	bl	8010de8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801112c:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8011130:	e7c4      	b.n	80110bc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8011132:	4249      	negs	r1, r1
 8011134:	f7ff fe58 	bl	8010de8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011138:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 801113c:	e7be      	b.n	80110bc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801113e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8011140:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8011142:	a804      	add	r0, sp, #16
 8011144:	f014 fdb9 	bl	8025cba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011148:	6e22      	ldr	r2, [r4, #96]	; 0x60
 801114a:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801114c:	a804      	add	r0, sp, #16
 801114e:	f014 fdb4 	bl	8025cba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011152:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8011154:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8011158:	2d00      	cmp	r5, #0
 801115a:	dd31      	ble.n	80111c0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 801115c:	eb05 0806 	add.w	r8, r5, r6
 8011160:	4640      	mov	r0, r8
 8011162:	f7ff fdaf 	bl	8010cc4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011166:	a902      	add	r1, sp, #8
 8011168:	9002      	str	r0, [sp, #8]
 801116a:	a801      	add	r0, sp, #4
 801116c:	f7ff fc92 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011170:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011172:	1847      	adds	r7, r0, r1
 8011174:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8011178:	f7ff fda4 	bl	8010cc4 <_ZN8touchgfx7CWRUtil4sineEi>
 801117c:	a903      	add	r1, sp, #12
 801117e:	9003      	str	r0, [sp, #12]
 8011180:	a801      	add	r0, sp, #4
 8011182:	f7ff fc87 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011186:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8011188:	4639      	mov	r1, r7
 801118a:	1a12      	subs	r2, r2, r0
 801118c:	a804      	add	r0, sp, #16
 801118e:	f014 fd94 	bl	8025cba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011192:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8011194:	1aed      	subs	r5, r5, r3
 8011196:	e7df      	b.n	8011158 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8011198:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801119a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 801119c:	a804      	add	r0, sp, #16
 801119e:	f014 fd3f 	bl	8025c20 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80111a2:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80111a4:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80111a6:	a804      	add	r0, sp, #16
 80111a8:	f014 fd87 	bl	8025cba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80111ac:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80111ae:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80111b0:	a804      	add	r0, sp, #16
 80111b2:	f014 fd82 	bl	8025cba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80111b6:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80111b8:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80111ba:	a804      	add	r0, sp, #16
 80111bc:	f014 fd7d 	bl	8025cba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80111c0:	21ff      	movs	r1, #255	; 0xff
 80111c2:	a804      	add	r0, sp, #16
 80111c4:	f014 fc68 	bl	8025a98 <_ZN8touchgfx6Canvas6renderEh>
 80111c8:	4b04      	ldr	r3, [pc, #16]	; (80111dc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 80111ca:	9304      	str	r3, [sp, #16]
 80111cc:	4604      	mov	r4, r0
 80111ce:	a80c      	add	r0, sp, #48	; 0x30
 80111d0:	f001 f8cc 	bl	801236c <_ZN8touchgfx7OutlineD1Ev>
 80111d4:	4620      	mov	r0, r4
 80111d6:	b020      	add	sp, #128	; 0x80
 80111d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80111dc:	0802cdac 	.word	0x0802cdac

080111e0 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 80111e0:	2000      	movs	r0, #0
 80111e2:	4770      	bx	lr

080111e4 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 80111e4:	4b07      	ldr	r3, [pc, #28]	; (8011204 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 80111e6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80111e8:	881b      	ldrh	r3, [r3, #0]
 80111ea:	4293      	cmp	r3, r2
 80111ec:	bf81      	itttt	hi
 80111ee:	4b06      	ldrhi	r3, [pc, #24]	; (8011208 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 80111f0:	681b      	ldrhi	r3, [r3, #0]
 80111f2:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 80111f6:	7858      	ldrbhi	r0, [r3, #1]
 80111f8:	bf8c      	ite	hi
 80111fa:	f000 0003 	andhi.w	r0, r0, #3
 80111fe:	2000      	movls	r0, #0
 8011200:	4770      	bx	lr
 8011202:	bf00      	nop
 8011204:	20013818 	.word	0x20013818
 8011208:	20013814 	.word	0x20013814

0801120c <_ZN8touchgfx8TextAreaD1Ev>:
 801120c:	4770      	bx	lr
	...

08011210 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8011210:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011214:	4b10      	ldr	r3, [pc, #64]	; (8011258 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8011216:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011218:	881b      	ldrh	r3, [r3, #0]
 801121a:	428b      	cmp	r3, r1
 801121c:	4604      	mov	r4, r0
 801121e:	d918      	bls.n	8011252 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8011220:	6803      	ldr	r3, [r0, #0]
 8011222:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8011224:	4b0d      	ldr	r3, [pc, #52]	; (801125c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8011226:	6818      	ldr	r0, [r3, #0]
 8011228:	f7f6 fc7a 	bl	8007b20 <_ZNK8touchgfx5Texts7getTextEt>
 801122c:	6823      	ldr	r3, [r4, #0]
 801122e:	4606      	mov	r6, r0
 8011230:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011232:	4620      	mov	r0, r4
 8011234:	4798      	blx	r3
 8011236:	6823      	ldr	r3, [r4, #0]
 8011238:	4607      	mov	r7, r0
 801123a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801123e:	4620      	mov	r0, r4
 8011240:	4798      	blx	r3
 8011242:	463a      	mov	r2, r7
 8011244:	4603      	mov	r3, r0
 8011246:	4631      	mov	r1, r6
 8011248:	4620      	mov	r0, r4
 801124a:	46ac      	mov	ip, r5
 801124c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011250:	4760      	bx	ip
 8011252:	2000      	movs	r0, #0
 8011254:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011258:	20013818 	.word	0x20013818
 801125c:	20013820 	.word	0x20013820

08011260 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8011260:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011264:	4b17      	ldr	r3, [pc, #92]	; (80112c4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8011266:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011268:	881b      	ldrh	r3, [r3, #0]
 801126a:	428b      	cmp	r3, r1
 801126c:	4604      	mov	r4, r0
 801126e:	d926      	bls.n	80112be <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8011270:	4b15      	ldr	r3, [pc, #84]	; (80112c8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8011272:	681b      	ldr	r3, [r3, #0]
 8011274:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8011278:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 801127c:	4b13      	ldr	r3, [pc, #76]	; (80112cc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 801127e:	7855      	ldrb	r5, [r2, #1]
 8011280:	681b      	ldr	r3, [r3, #0]
 8011282:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8011286:	6833      	ldr	r3, [r6, #0]
 8011288:	69df      	ldr	r7, [r3, #28]
 801128a:	4b11      	ldr	r3, [pc, #68]	; (80112d0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 801128c:	6818      	ldr	r0, [r3, #0]
 801128e:	f7f6 fc47 	bl	8007b20 <_ZNK8touchgfx5Texts7getTextEt>
 8011292:	6823      	ldr	r3, [r4, #0]
 8011294:	4680      	mov	r8, r0
 8011296:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011298:	4620      	mov	r0, r4
 801129a:	4798      	blx	r3
 801129c:	6823      	ldr	r3, [r4, #0]
 801129e:	4681      	mov	r9, r0
 80112a0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80112a4:	4620      	mov	r0, r4
 80112a6:	4798      	blx	r3
 80112a8:	f3c5 0581 	ubfx	r5, r5, #2, #2
 80112ac:	9000      	str	r0, [sp, #0]
 80112ae:	464b      	mov	r3, r9
 80112b0:	4642      	mov	r2, r8
 80112b2:	4629      	mov	r1, r5
 80112b4:	4630      	mov	r0, r6
 80112b6:	47b8      	blx	r7
 80112b8:	b003      	add	sp, #12
 80112ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80112be:	2000      	movs	r0, #0
 80112c0:	e7fa      	b.n	80112b8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 80112c2:	bf00      	nop
 80112c4:	20013818 	.word	0x20013818
 80112c8:	20013814 	.word	0x20013814
 80112cc:	2001381c 	.word	0x2001381c
 80112d0:	20013820 	.word	0x20013820

080112d4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 80112d4:	b40e      	push	{r1, r2, r3}
 80112d6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80112da:	4b2f      	ldr	r3, [pc, #188]	; (8011398 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 80112dc:	881a      	ldrh	r2, [r3, #0]
 80112de:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 80112e0:	429a      	cmp	r2, r3
 80112e2:	b09d      	sub	sp, #116	; 0x74
 80112e4:	4604      	mov	r4, r0
 80112e6:	d954      	bls.n	8011392 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 80112e8:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 801139c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 80112ec:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80113a0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 80112f0:	aa26      	add	r2, sp, #152	; 0x98
 80112f2:	9202      	str	r2, [sp, #8]
 80112f4:	f8d9 2000 	ldr.w	r2, [r9]
 80112f8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80112fc:	f8d8 3000 	ldr.w	r3, [r8]
 8011300:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011304:	682b      	ldr	r3, [r5, #0]
 8011306:	4628      	mov	r0, r5
 8011308:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801130a:	4798      	blx	r3
 801130c:	b207      	sxth	r7, r0
 801130e:	4606      	mov	r6, r0
 8011310:	a803      	add	r0, sp, #12
 8011312:	f005 fa57 	bl	80167c4 <_ZN8touchgfx12TextProviderC1Ev>
 8011316:	682b      	ldr	r3, [r5, #0]
 8011318:	4628      	mov	r0, r5
 801131a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801131c:	4798      	blx	r3
 801131e:	682b      	ldr	r3, [r5, #0]
 8011320:	4682      	mov	sl, r0
 8011322:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011324:	4628      	mov	r0, r5
 8011326:	4798      	blx	r3
 8011328:	4653      	mov	r3, sl
 801132a:	9000      	str	r0, [sp, #0]
 801132c:	9a02      	ldr	r2, [sp, #8]
 801132e:	9925      	ldr	r1, [sp, #148]	; 0x94
 8011330:	a803      	add	r0, sp, #12
 8011332:	f005 faa2 	bl	801687a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011336:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011338:	f8d9 3000 	ldr.w	r3, [r9]
 801133c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8011340:	8925      	ldrh	r5, [r4, #8]
 8011342:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8011346:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 801134a:	eba5 050c 	sub.w	r5, r5, ip
 801134e:	784a      	ldrb	r2, [r1, #1]
 8011350:	f8d8 3000 	ldr.w	r3, [r8]
 8011354:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8011358:	b22d      	sxth	r5, r5
 801135a:	9500      	str	r5, [sp, #0]
 801135c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8011360:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8011364:	a803      	add	r0, sp, #12
 8011366:	f002 feed 	bl	8014144 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 801136a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 801136e:	18b9      	adds	r1, r7, r2
 8011370:	2900      	cmp	r1, #0
 8011372:	b203      	sxth	r3, r0
 8011374:	dd0b      	ble.n	801138e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8011376:	3b01      	subs	r3, #1
 8011378:	fb13 f302 	smulbb	r3, r3, r2
 801137c:	fb16 3300 	smlabb	r3, r6, r0, r3
 8011380:	b21f      	sxth	r7, r3
 8011382:	4638      	mov	r0, r7
 8011384:	b01d      	add	sp, #116	; 0x74
 8011386:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801138a:	b003      	add	sp, #12
 801138c:	4770      	bx	lr
 801138e:	2b00      	cmp	r3, #0
 8011390:	dcf7      	bgt.n	8011382 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011392:	2700      	movs	r7, #0
 8011394:	e7f5      	b.n	8011382 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011396:	bf00      	nop
 8011398:	20013818 	.word	0x20013818
 801139c:	20013814 	.word	0x20013814
 80113a0:	2001381c 	.word	0x2001381c

080113a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 80113a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80113a8:	4bbc      	ldr	r3, [pc, #752]	; (801169c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 80113aa:	460c      	mov	r4, r1
 80113ac:	881b      	ldrh	r3, [r3, #0]
 80113ae:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 80113b0:	428b      	cmp	r3, r1
 80113b2:	b0a9      	sub	sp, #164	; 0xa4
 80113b4:	4680      	mov	r8, r0
 80113b6:	d809      	bhi.n	80113cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 80113b8:	2300      	movs	r3, #0
 80113ba:	f04f 32ff 	mov.w	r2, #4294967295
 80113be:	e9c0 3200 	strd	r3, r2, [r0]
 80113c2:	6083      	str	r3, [r0, #8]
 80113c4:	4640      	mov	r0, r8
 80113c6:	b029      	add	sp, #164	; 0xa4
 80113c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80113cc:	4eb4      	ldr	r6, [pc, #720]	; (80116a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 80113ce:	6833      	ldr	r3, [r6, #0]
 80113d0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80113d4:	4bb3      	ldr	r3, [pc, #716]	; (80116a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 80113d6:	681b      	ldr	r3, [r3, #0]
 80113d8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80113dc:	4bb2      	ldr	r3, [pc, #712]	; (80116a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80113de:	6818      	ldr	r0, [r3, #0]
 80113e0:	f7f6 fb9e 	bl	8007b20 <_ZNK8touchgfx5Texts7getTextEt>
 80113e4:	682b      	ldr	r3, [r5, #0]
 80113e6:	4681      	mov	r9, r0
 80113e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80113ea:	4628      	mov	r0, r5
 80113ec:	4798      	blx	r3
 80113ee:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 80113f0:	b203      	sxth	r3, r0
 80113f2:	4407      	add	r7, r0
 80113f4:	9304      	str	r3, [sp, #16]
 80113f6:	b2bb      	uxth	r3, r7
 80113f8:	9303      	str	r3, [sp, #12]
 80113fa:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80113fe:	4682      	mov	sl, r0
 8011400:	a80f      	add	r0, sp, #60	; 0x3c
 8011402:	2b00      	cmp	r3, #0
 8011404:	f040 80a6 	bne.w	8011554 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8011408:	f005 f9dc 	bl	80167c4 <_ZN8touchgfx12TextProviderC1Ev>
 801140c:	682b      	ldr	r3, [r5, #0]
 801140e:	4628      	mov	r0, r5
 8011410:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011412:	4798      	blx	r3
 8011414:	682b      	ldr	r3, [r5, #0]
 8011416:	4606      	mov	r6, r0
 8011418:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801141a:	4628      	mov	r0, r5
 801141c:	4798      	blx	r3
 801141e:	6823      	ldr	r3, [r4, #0]
 8011420:	4607      	mov	r7, r0
 8011422:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011424:	4620      	mov	r0, r4
 8011426:	4798      	blx	r3
 8011428:	6823      	ldr	r3, [r4, #0]
 801142a:	4683      	mov	fp, r0
 801142c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011430:	4620      	mov	r0, r4
 8011432:	4798      	blx	r3
 8011434:	463b      	mov	r3, r7
 8011436:	e9cd b000 	strd	fp, r0, [sp]
 801143a:	4649      	mov	r1, r9
 801143c:	4632      	mov	r2, r6
 801143e:	a80f      	add	r0, sp, #60	; 0x3c
 8011440:	f005 fa30 	bl	80168a4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011444:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011448:	f8df b254 	ldr.w	fp, [pc, #596]	; 80116a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 801144c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011450:	f04f 0600 	mov.w	r6, #0
 8011454:	bf0c      	ite	eq
 8011456:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 801145a:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 801145e:	4637      	mov	r7, r6
 8011460:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011462:	f8db 3000 	ldr.w	r3, [fp]
 8011466:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801146a:	4629      	mov	r1, r5
 801146c:	785b      	ldrb	r3, [r3, #1]
 801146e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8011472:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011476:	a80f      	add	r0, sp, #60	; 0x3c
 8011478:	f002 fb7f 	bl	8013b7a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801147c:	9b03      	ldr	r3, [sp, #12]
 801147e:	4286      	cmp	r6, r0
 8011480:	bfb8      	it	lt
 8011482:	4606      	movlt	r6, r0
 8011484:	3701      	adds	r7, #1
 8011486:	eba9 0903 	sub.w	r9, r9, r3
 801148a:	a80f      	add	r0, sp, #60	; 0x3c
 801148c:	b236      	sxth	r6, r6
 801148e:	b2bf      	uxth	r7, r7
 8011490:	fa0f f989 	sxth.w	r9, r9
 8011494:	f005 f9bd 	bl	8016812 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8011498:	b918      	cbnz	r0, 80114a2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801149a:	7a2b      	ldrb	r3, [r5, #8]
 801149c:	444b      	add	r3, r9
 801149e:	2b00      	cmp	r3, #0
 80114a0:	dcde      	bgt.n	8011460 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 80114a2:	9b03      	ldr	r3, [sp, #12]
 80114a4:	9a04      	ldr	r2, [sp, #16]
 80114a6:	f895 9009 	ldrb.w	r9, [r5, #9]
 80114aa:	fb13 f707 	smulbb	r7, r3, r7
 80114ae:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80114b0:	1aff      	subs	r7, r7, r3
 80114b2:	b2bf      	uxth	r7, r7
 80114b4:	b23b      	sxth	r3, r7
 80114b6:	429a      	cmp	r2, r3
 80114b8:	bfa8      	it	ge
 80114ba:	4657      	movge	r7, sl
 80114bc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80114c0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80114c4:	6823      	ldr	r3, [r4, #0]
 80114c6:	bf08      	it	eq
 80114c8:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 80114cc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80114ce:	bf18      	it	ne
 80114d0:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 80114d4:	4620      	mov	r0, r4
 80114d6:	4798      	blx	r3
 80114d8:	444f      	add	r7, r9
 80114da:	fa1f f987 	uxth.w	r9, r7
 80114de:	2801      	cmp	r0, #1
 80114e0:	fa0f f789 	sxth.w	r7, r9
 80114e4:	b2b3      	uxth	r3, r6
 80114e6:	f000 80e1 	beq.w	80116ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 80114ea:	2802      	cmp	r0, #2
 80114ec:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 80114f0:	f000 80e2 	beq.w	80116b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 80114f4:	7aea      	ldrb	r2, [r5, #11]
 80114f6:	7b2d      	ldrb	r5, [r5, #12]
 80114f8:	b236      	sxth	r6, r6
 80114fa:	1ab6      	subs	r6, r6, r2
 80114fc:	442a      	add	r2, r5
 80114fe:	4413      	add	r3, r2
 8011500:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8011504:	fa1f fa86 	uxth.w	sl, r6
 8011508:	b29b      	uxth	r3, r3
 801150a:	2a02      	cmp	r2, #2
 801150c:	fa0f fb8a 	sxth.w	fp, sl
 8011510:	b21e      	sxth	r6, r3
 8011512:	f000 80d5 	beq.w	80116c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8011516:	2a03      	cmp	r2, #3
 8011518:	f000 80dd 	beq.w	80116d6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 801151c:	2a01      	cmp	r2, #1
 801151e:	f040 80e5 	bne.w	80116ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8011522:	8925      	ldrh	r5, [r4, #8]
 8011524:	4633      	mov	r3, r6
 8011526:	eba5 0909 	sub.w	r9, r5, r9
 801152a:	463e      	mov	r6, r7
 801152c:	465d      	mov	r5, fp
 801152e:	461f      	mov	r7, r3
 8011530:	fa0f fb89 	sxth.w	fp, r9
 8011534:	4b5c      	ldr	r3, [pc, #368]	; (80116a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011536:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011538:	6818      	ldr	r0, [r3, #0]
 801153a:	f7f6 faf1 	bl	8007b20 <_ZNK8touchgfx5Texts7getTextEt>
 801153e:	f8a8 b000 	strh.w	fp, [r8]
 8011542:	f8a8 5002 	strh.w	r5, [r8, #2]
 8011546:	f8a8 6004 	strh.w	r6, [r8, #4]
 801154a:	f8a8 7006 	strh.w	r7, [r8, #6]
 801154e:	f8c8 0008 	str.w	r0, [r8, #8]
 8011552:	e737      	b.n	80113c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8011554:	f005 f936 	bl	80167c4 <_ZN8touchgfx12TextProviderC1Ev>
 8011558:	682b      	ldr	r3, [r5, #0]
 801155a:	4628      	mov	r0, r5
 801155c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801155e:	4798      	blx	r3
 8011560:	682b      	ldr	r3, [r5, #0]
 8011562:	4607      	mov	r7, r0
 8011564:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011566:	4628      	mov	r0, r5
 8011568:	4798      	blx	r3
 801156a:	6823      	ldr	r3, [r4, #0]
 801156c:	4683      	mov	fp, r0
 801156e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011570:	4620      	mov	r0, r4
 8011572:	4798      	blx	r3
 8011574:	6822      	ldr	r2, [r4, #0]
 8011576:	9005      	str	r0, [sp, #20]
 8011578:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 801157c:	4620      	mov	r0, r4
 801157e:	4790      	blx	r2
 8011580:	9b05      	ldr	r3, [sp, #20]
 8011582:	9001      	str	r0, [sp, #4]
 8011584:	463a      	mov	r2, r7
 8011586:	4649      	mov	r1, r9
 8011588:	9300      	str	r3, [sp, #0]
 801158a:	a80f      	add	r0, sp, #60	; 0x3c
 801158c:	465b      	mov	r3, fp
 801158e:	f005 f989 	bl	80168a4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011592:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011596:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 801159a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801159c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 80115a0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80115a4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80115a8:	bf0a      	itet	eq
 80115aa:	464a      	moveq	r2, r9
 80115ac:	461a      	movne	r2, r3
 80115ae:	4699      	moveq	r9, r3
 80115b0:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 80115b4:	1ad2      	subs	r2, r2, r3
 80115b6:	6833      	ldr	r3, [r6, #0]
 80115b8:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 80115bc:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80115c0:	af0f      	add	r7, sp, #60	; 0x3c
 80115c2:	7859      	ldrb	r1, [r3, #1]
 80115c4:	9707      	str	r7, [sp, #28]
 80115c6:	2300      	movs	r3, #0
 80115c8:	f3c1 0181 	ubfx	r1, r1, #2, #2
 80115cc:	f8ad 3018 	strh.w	r3, [sp, #24]
 80115d0:	f88d 1020 	strb.w	r1, [sp, #32]
 80115d4:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80115d8:	9509      	str	r5, [sp, #36]	; 0x24
 80115da:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80115de:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 80115e2:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 80115e6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80115ea:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80115ee:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80115f2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80115f6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80115fa:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80115fe:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8011602:	b350      	cbz	r0, 801165a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011604:	682b      	ldr	r3, [r5, #0]
 8011606:	4628      	mov	r0, r5
 8011608:	695b      	ldr	r3, [r3, #20]
 801160a:	4798      	blx	r3
 801160c:	4607      	mov	r7, r0
 801160e:	b320      	cbz	r0, 801165a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011610:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011612:	6803      	ldr	r3, [r0, #0]
 8011614:	4639      	mov	r1, r7
 8011616:	68db      	ldr	r3, [r3, #12]
 8011618:	4798      	blx	r3
 801161a:	4606      	mov	r6, r0
 801161c:	b1e8      	cbz	r0, 801165a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801161e:	7b43      	ldrb	r3, [r0, #13]
 8011620:	7a82      	ldrb	r2, [r0, #10]
 8011622:	005b      	lsls	r3, r3, #1
 8011624:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011628:	4313      	orrs	r3, r2
 801162a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801162e:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8011632:	2b06      	cmp	r3, #6
 8011634:	d111      	bne.n	801165a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011636:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011638:	6803      	ldr	r3, [r0, #0]
 801163a:	4632      	mov	r2, r6
 801163c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801163e:	4639      	mov	r1, r7
 8011640:	4798      	blx	r3
 8011642:	7b73      	ldrb	r3, [r6, #13]
 8011644:	005b      	lsls	r3, r3, #1
 8011646:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801164a:	7ab3      	ldrb	r3, [r6, #10]
 801164c:	4313      	orrs	r3, r2
 801164e:	4418      	add	r0, r3
 8011650:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011654:	4418      	add	r0, r3
 8011656:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 801165a:	2600      	movs	r6, #0
 801165c:	4637      	mov	r7, r6
 801165e:	a806      	add	r0, sp, #24
 8011660:	f002 fc6c 	bl	8013f3c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011664:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8011668:	9b03      	ldr	r3, [sp, #12]
 801166a:	4286      	cmp	r6, r0
 801166c:	eba9 0903 	sub.w	r9, r9, r3
 8011670:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8011674:	bfb8      	it	lt
 8011676:	4606      	movlt	r6, r0
 8011678:	3701      	adds	r7, #1
 801167a:	b236      	sxth	r6, r6
 801167c:	b2bf      	uxth	r7, r7
 801167e:	fa0f f989 	sxth.w	r9, r9
 8011682:	2b00      	cmp	r3, #0
 8011684:	f43f af0d 	beq.w	80114a2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011688:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 801168c:	2b00      	cmp	r3, #0
 801168e:	f47f af08 	bne.w	80114a2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011692:	7a2b      	ldrb	r3, [r5, #8]
 8011694:	444b      	add	r3, r9
 8011696:	2b00      	cmp	r3, #0
 8011698:	dce1      	bgt.n	801165e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 801169a:	e702      	b.n	80114a2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801169c:	20013818 	.word	0x20013818
 80116a0:	20013814 	.word	0x20013814
 80116a4:	2001381c 	.word	0x2001381c
 80116a8:	20013820 	.word	0x20013820
 80116ac:	ebaa 0606 	sub.w	r6, sl, r6
 80116b0:	2002      	movs	r0, #2
 80116b2:	fb96 f6f0 	sdiv	r6, r6, r0
 80116b6:	e71d      	b.n	80114f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80116b8:	441e      	add	r6, r3
 80116ba:	ebaa 0606 	sub.w	r6, sl, r6
 80116be:	e719      	b.n	80114f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80116c0:	8925      	ldrh	r5, [r4, #8]
 80116c2:	1aed      	subs	r5, r5, r3
 80116c4:	eba5 050a 	sub.w	r5, r5, sl
 80116c8:	fa0f fb85 	sxth.w	fp, r5
 80116cc:	8965      	ldrh	r5, [r4, #10]
 80116ce:	eba5 0509 	sub.w	r5, r5, r9
 80116d2:	b22d      	sxth	r5, r5
 80116d4:	e72e      	b.n	8011534 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80116d6:	8965      	ldrh	r5, [r4, #10]
 80116d8:	1aed      	subs	r5, r5, r3
 80116da:	eba5 050a 	sub.w	r5, r5, sl
 80116de:	4633      	mov	r3, r6
 80116e0:	b22d      	sxth	r5, r5
 80116e2:	463e      	mov	r6, r7
 80116e4:	f04f 0b00 	mov.w	fp, #0
 80116e8:	461f      	mov	r7, r3
 80116ea:	e723      	b.n	8011534 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80116ec:	2500      	movs	r5, #0
 80116ee:	e721      	b.n	8011534 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

080116f0 <_ZN8touchgfx8TextAreaD0Ev>:
 80116f0:	b510      	push	{r4, lr}
 80116f2:	2148      	movs	r1, #72	; 0x48
 80116f4:	4604      	mov	r4, r0
 80116f6:	f015 ff32 	bl	802755e <_ZdlPvj>
 80116fa:	4620      	mov	r0, r4
 80116fc:	bd10      	pop	{r4, pc}
	...

08011700 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8011700:	b513      	push	{r0, r1, r4, lr}
 8011702:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8011706:	4604      	mov	r4, r0
 8011708:	b1fb      	cbz	r3, 801174a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801170a:	4b16      	ldr	r3, [pc, #88]	; (8011764 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 801170c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 801170e:	881b      	ldrh	r3, [r3, #0]
 8011710:	428b      	cmp	r3, r1
 8011712:	d91a      	bls.n	801174a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011714:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011718:	2b00      	cmp	r3, #0
 801171a:	dd16      	ble.n	801174a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801171c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011720:	2b00      	cmp	r3, #0
 8011722:	dd12      	ble.n	801174a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011724:	4b10      	ldr	r3, [pc, #64]	; (8011768 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8011726:	6818      	ldr	r0, [r3, #0]
 8011728:	f7f6 f9fa 	bl	8007b20 <_ZNK8touchgfx5Texts7getTextEt>
 801172c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011730:	6822      	ldr	r2, [r4, #0]
 8011732:	2b00      	cmp	r3, #0
 8011734:	db06      	blt.n	8011744 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011736:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801173a:	2b00      	cmp	r3, #0
 801173c:	db02      	blt.n	8011744 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801173e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011740:	4298      	cmp	r0, r3
 8011742:	d004      	beq.n	801174e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8011744:	6953      	ldr	r3, [r2, #20]
 8011746:	4620      	mov	r0, r4
 8011748:	4798      	blx	r3
 801174a:	b002      	add	sp, #8
 801174c:	bd10      	pop	{r4, pc}
 801174e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8011752:	c903      	ldmia	r1, {r0, r1}
 8011754:	466b      	mov	r3, sp
 8011756:	e883 0003 	stmia.w	r3, {r0, r1}
 801175a:	6912      	ldr	r2, [r2, #16]
 801175c:	4619      	mov	r1, r3
 801175e:	4620      	mov	r0, r4
 8011760:	4790      	blx	r2
 8011762:	e7f2      	b.n	801174a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011764:	20013818 	.word	0x20013818
 8011768:	20013820 	.word	0x20013820

0801176c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 801176c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011770:	4b44      	ldr	r3, [pc, #272]	; (8011884 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8011772:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011774:	881b      	ldrh	r3, [r3, #0]
 8011776:	4293      	cmp	r3, r2
 8011778:	b08e      	sub	sp, #56	; 0x38
 801177a:	4604      	mov	r4, r0
 801177c:	d97e      	bls.n	801187c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801177e:	6808      	ldr	r0, [r1, #0]
 8011780:	4d41      	ldr	r5, [pc, #260]	; (8011888 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8011782:	6849      	ldr	r1, [r1, #4]
 8011784:	ab05      	add	r3, sp, #20
 8011786:	c303      	stmia	r3!, {r0, r1}
 8011788:	4611      	mov	r1, r2
 801178a:	6828      	ldr	r0, [r5, #0]
 801178c:	f7f6 f9c8 	bl	8007b20 <_ZNK8touchgfx5Texts7getTextEt>
 8011790:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011794:	2b00      	cmp	r3, #0
 8011796:	db11      	blt.n	80117bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011798:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801179c:	2b00      	cmp	r3, #0
 801179e:	db0d      	blt.n	80117bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80117a0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80117a2:	4298      	cmp	r0, r3
 80117a4:	d10a      	bne.n	80117bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80117a6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 80117aa:	e892 0003 	ldmia.w	r2, {r0, r1}
 80117ae:	ab09      	add	r3, sp, #36	; 0x24
 80117b0:	e883 0003 	stmia.w	r3, {r0, r1}
 80117b4:	4619      	mov	r1, r3
 80117b6:	a805      	add	r0, sp, #20
 80117b8:	f7fe f860 	bl	800f87c <_ZN8touchgfx4RectaNERKS0_>
 80117bc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80117c0:	2b00      	cmp	r3, #0
 80117c2:	dd5b      	ble.n	801187c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80117c4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80117c8:	2b00      	cmp	r3, #0
 80117ca:	dd57      	ble.n	801187c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80117cc:	4f2f      	ldr	r7, [pc, #188]	; (801188c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 80117ce:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80117d0:	683b      	ldr	r3, [r7, #0]
 80117d2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80117d6:	4b2e      	ldr	r3, [pc, #184]	; (8011890 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 80117d8:	681b      	ldr	r3, [r3, #0]
 80117da:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80117de:	2e00      	cmp	r6, #0
 80117e0:	d04c      	beq.n	801187c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80117e2:	6823      	ldr	r3, [r4, #0]
 80117e4:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 80117e8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80117ea:	4620      	mov	r0, r4
 80117ec:	4798      	blx	r3
 80117ee:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80117f0:	683b      	ldr	r3, [r7, #0]
 80117f2:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 80117f6:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 80117fa:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 80117fe:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8011800:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011804:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8011808:	785b      	ldrb	r3, [r3, #1]
 801180a:	9609      	str	r6, [sp, #36]	; 0x24
 801180c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011810:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8011814:	4b1f      	ldr	r3, [pc, #124]	; (8011894 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8011816:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 801181a:	681b      	ldr	r3, [r3, #0]
 801181c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8011820:	910b      	str	r1, [sp, #44]	; 0x2c
 8011822:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8011826:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 801182a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 801182e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8011832:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011836:	b10a      	cbz	r2, 801183c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8011838:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 801183a:	b906      	cbnz	r6, 801183e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 801183c:	689e      	ldr	r6, [r3, #8]
 801183e:	af07      	add	r7, sp, #28
 8011840:	4621      	mov	r1, r4
 8011842:	4638      	mov	r0, r7
 8011844:	f004 fab0 	bl	8015da8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011848:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801184a:	6828      	ldr	r0, [r5, #0]
 801184c:	f7f6 f968 	bl	8007b20 <_ZNK8touchgfx5Texts7getTextEt>
 8011850:	6823      	ldr	r3, [r4, #0]
 8011852:	4605      	mov	r5, r0
 8011854:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011856:	4620      	mov	r0, r4
 8011858:	4798      	blx	r3
 801185a:	6823      	ldr	r3, [r4, #0]
 801185c:	4680      	mov	r8, r0
 801185e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011862:	4620      	mov	r0, r4
 8011864:	4798      	blx	r3
 8011866:	e9cd 8002 	strd	r8, r0, [sp, #8]
 801186a:	ab09      	add	r3, sp, #36	; 0x24
 801186c:	9300      	str	r3, [sp, #0]
 801186e:	9501      	str	r5, [sp, #4]
 8011870:	ab05      	add	r3, sp, #20
 8011872:	e897 0006 	ldmia.w	r7, {r1, r2}
 8011876:	4630      	mov	r0, r6
 8011878:	f7f6 f904 	bl	8007a84 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801187c:	b00e      	add	sp, #56	; 0x38
 801187e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011882:	bf00      	nop
 8011884:	20013818 	.word	0x20013818
 8011888:	20013820 	.word	0x20013820
 801188c:	20013814 	.word	0x20013814
 8011890:	2001381c 	.word	0x2001381c
 8011894:	200137bc 	.word	0x200137bc

08011898 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8011898:	b538      	push	{r3, r4, r5, lr}
 801189a:	4b0e      	ldr	r3, [pc, #56]	; (80118d4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 801189c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801189e:	881b      	ldrh	r3, [r3, #0]
 80118a0:	429a      	cmp	r2, r3
 80118a2:	4604      	mov	r4, r0
 80118a4:	d214      	bcs.n	80118d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 80118a6:	6803      	ldr	r3, [r0, #0]
 80118a8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80118aa:	4798      	blx	r3
 80118ac:	6823      	ldr	r3, [r4, #0]
 80118ae:	4605      	mov	r5, r0
 80118b0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80118b2:	4620      	mov	r0, r4
 80118b4:	4798      	blx	r3
 80118b6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80118ba:	b22d      	sxth	r5, r5
 80118bc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80118c0:	4601      	mov	r1, r0
 80118c2:	bf06      	itte	eq
 80118c4:	4602      	moveq	r2, r0
 80118c6:	4629      	moveq	r1, r5
 80118c8:	462a      	movne	r2, r5
 80118ca:	4620      	mov	r0, r4
 80118cc:	f7fd fdb6 	bl	800f43c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80118d0:	bd38      	pop	{r3, r4, r5, pc}
 80118d2:	bf00      	nop
 80118d4:	20013818 	.word	0x20013818

080118d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 80118d8:	b530      	push	{r4, r5, lr}
 80118da:	888b      	ldrh	r3, [r1, #4]
 80118dc:	8583      	strh	r3, [r0, #44]	; 0x2c
 80118de:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80118e2:	b085      	sub	sp, #20
 80118e4:	4604      	mov	r4, r0
 80118e6:	b923      	cbnz	r3, 80118f2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80118e8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80118ec:	b90b      	cbnz	r3, 80118f2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80118ee:	f7ff ffd3 	bl	8011898 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80118f2:	6823      	ldr	r3, [r4, #0]
 80118f4:	466d      	mov	r5, sp
 80118f6:	4621      	mov	r1, r4
 80118f8:	4628      	mov	r0, r5
 80118fa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80118fe:	4798      	blx	r3
 8011900:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8011904:	343c      	adds	r4, #60	; 0x3c
 8011906:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 801190a:	b005      	add	sp, #20
 801190c:	bd30      	pop	{r4, r5, pc}

0801190e <_ZNK8touchgfx3Box12getSolidRectEv>:
 801190e:	2300      	movs	r3, #0
 8011910:	8083      	strh	r3, [r0, #4]
 8011912:	80c3      	strh	r3, [r0, #6]
 8011914:	8003      	strh	r3, [r0, #0]
 8011916:	8043      	strh	r3, [r0, #2]
 8011918:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 801191c:	2bff      	cmp	r3, #255	; 0xff
 801191e:	bf01      	itttt	eq
 8011920:	890b      	ldrheq	r3, [r1, #8]
 8011922:	8083      	strheq	r3, [r0, #4]
 8011924:	894b      	ldrheq	r3, [r1, #10]
 8011926:	80c3      	strheq	r3, [r0, #6]
 8011928:	4770      	bx	lr
	...

0801192c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 801192c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801192e:	4604      	mov	r4, r0
 8011930:	6808      	ldr	r0, [r1, #0]
 8011932:	6849      	ldr	r1, [r1, #4]
 8011934:	466b      	mov	r3, sp
 8011936:	c303      	stmia	r3!, {r0, r1}
 8011938:	6823      	ldr	r3, [r4, #0]
 801193a:	4669      	mov	r1, sp
 801193c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801193e:	4620      	mov	r0, r4
 8011940:	4798      	blx	r3
 8011942:	4b08      	ldr	r3, [pc, #32]	; (8011964 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8011944:	681b      	ldr	r3, [r3, #0]
 8011946:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801194a:	b10a      	cbz	r2, 8011950 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 801194c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801194e:	b900      	cbnz	r0, 8011952 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8011950:	6898      	ldr	r0, [r3, #8]
 8011952:	6803      	ldr	r3, [r0, #0]
 8011954:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8011956:	6a1d      	ldr	r5, [r3, #32]
 8011958:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 801195c:	4669      	mov	r1, sp
 801195e:	47a8      	blx	r5
 8011960:	b003      	add	sp, #12
 8011962:	bd30      	pop	{r4, r5, pc}
 8011964:	200137bc 	.word	0x200137bc

08011968 <_ZN8touchgfx3BoxD1Ev>:
 8011968:	4770      	bx	lr

0801196a <_ZN8touchgfx3BoxD0Ev>:
 801196a:	b510      	push	{r4, lr}
 801196c:	212c      	movs	r1, #44	; 0x2c
 801196e:	4604      	mov	r4, r0
 8011970:	f015 fdf5 	bl	802755e <_ZdlPvj>
 8011974:	4620      	mov	r0, r4
 8011976:	bd10      	pop	{r4, pc}

08011978 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8011978:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 801197c:	b12a      	cbz	r2, 801198a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801197e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8011982:	b112      	cbz	r2, 801198a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8011984:	6803      	ldr	r3, [r0, #0]
 8011986:	695b      	ldr	r3, [r3, #20]
 8011988:	4718      	bx	r3
 801198a:	4770      	bx	lr

0801198c <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 801198c:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8011990:	600b      	str	r3, [r1, #0]
 8011992:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8011996:	6013      	str	r3, [r2, #0]
 8011998:	4770      	bx	lr

0801199a <_ZN8touchgfx5Gauge8setWidthEs>:
 801199a:	8101      	strh	r1, [r0, #8]
 801199c:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 80119a0:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 80119a4:	4770      	bx	lr

080119a6 <_ZN8touchgfx5Gauge9setHeightEs>:
 80119a6:	8141      	strh	r1, [r0, #10]
 80119a8:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 80119ac:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 80119b0:	4770      	bx	lr

080119b2 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 80119b2:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 80119b6:	4770      	bx	lr

080119b8 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 80119b8:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 80119bc:	4770      	bx	lr

080119be <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 80119be:	4770      	bx	lr

080119c0 <_ZN8touchgfx5GaugeD1Ev>:
 80119c0:	4770      	bx	lr

080119c2 <_ZN8touchgfx5Gauge8setAlphaEh>:
 80119c2:	b538      	push	{r3, r4, r5, lr}
 80119c4:	4604      	mov	r4, r0
 80119c6:	460d      	mov	r5, r1
 80119c8:	f7fd fc51 	bl	800f26e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 80119cc:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 80119d0:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 80119d4:	bd38      	pop	{r3, r4, r5, pc}

080119d6 <_ZN8touchgfx5GaugeD0Ev>:
 80119d6:	b510      	push	{r4, lr}
 80119d8:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 80119dc:	4604      	mov	r4, r0
 80119de:	f015 fdbe 	bl	802755e <_ZdlPvj>
 80119e2:	4620      	mov	r0, r4
 80119e4:	bd10      	pop	{r4, pc}

080119e6 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 80119e6:	b510      	push	{r4, lr}
 80119e8:	6803      	ldr	r3, [r0, #0]
 80119ea:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80119ee:	4604      	mov	r4, r0
 80119f0:	4798      	blx	r3
 80119f2:	b170      	cbz	r0, 8011a12 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80119f4:	6823      	ldr	r3, [r4, #0]
 80119f6:	4620      	mov	r0, r4
 80119f8:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80119fc:	4798      	blx	r3
 80119fe:	b140      	cbz	r0, 8011a12 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8011a00:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8011a04:	b12b      	cbz	r3, 8011a12 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8011a06:	6823      	ldr	r3, [r4, #0]
 8011a08:	4620      	mov	r0, r4
 8011a0a:	695b      	ldr	r3, [r3, #20]
 8011a0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011a10:	4718      	bx	r3
 8011a12:	bd10      	pop	{r4, pc}

08011a14 <_ZN8touchgfx5GaugeC1Ev>:
 8011a14:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011a16:	4604      	mov	r4, r0
 8011a18:	4626      	mov	r6, r4
 8011a1a:	f7fd fd49 	bl	800f4b0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8011a1e:	4b18      	ldr	r3, [pc, #96]	; (8011a80 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8011a20:	f846 3bb4 	str.w	r3, [r6], #180
 8011a24:	a902      	add	r1, sp, #8
 8011a26:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011a2a:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8011a2e:	4630      	mov	r0, r6
 8011a30:	f014 ff7c 	bl	802692c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8011a34:	2500      	movs	r5, #0
 8011a36:	2301      	movs	r3, #1
 8011a38:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8011a3c:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8011a40:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8011a44:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8011a48:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8011a4c:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8011a50:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8011a54:	4638      	mov	r0, r7
 8011a56:	f014 f9ad 	bl	8025db4 <_ZN8touchgfx6CircleC1Ev>
 8011a5a:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8011a5e:	4620      	mov	r0, r4
 8011a60:	f7fd fdc7 	bl	800f5f2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8011a64:	4639      	mov	r1, r7
 8011a66:	4620      	mov	r0, r4
 8011a68:	f7fd fd82 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011a6c:	4620      	mov	r0, r4
 8011a6e:	4631      	mov	r1, r6
 8011a70:	f7fd fd7e 	bl	800f570 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011a74:	4620      	mov	r0, r4
 8011a76:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8011a7a:	b003      	add	sp, #12
 8011a7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011a7e:	bf00      	nop
 8011a80:	0802c6f4 	.word	0x0802c6f4

08011a84 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8011a84:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8011a88:	4770      	bx	lr

08011a8a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8011a8a:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8011a8e:	4770      	bx	lr

08011a90 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8011a90:	b538      	push	{r3, r4, r5, lr}
 8011a92:	8902      	ldrh	r2, [r0, #8]
 8011a94:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011a98:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8011a9c:	4604      	mov	r4, r0
 8011a9e:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8011aa2:	2200      	movs	r2, #0
 8011aa4:	4611      	mov	r1, r2
 8011aa6:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8011aaa:	4628      	mov	r0, r5
 8011aac:	f7f0 fcf7 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8011ab0:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8011ab4:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8011ab8:	1a9b      	subs	r3, r3, r2
 8011aba:	ee07 3a90 	vmov	s15, r3
 8011abe:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8011ac2:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8011ac6:	1a9b      	subs	r3, r3, r2
 8011ac8:	ee07 3a10 	vmov	s14, r3
 8011acc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011ad0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011ad4:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8011ad8:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8011adc:	4628      	mov	r0, r5
 8011ade:	f014 ff71 	bl	80269c4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011ae2:	4b16      	ldr	r3, [pc, #88]	; (8011b3c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8011ae4:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8011ae8:	4628      	mov	r0, r5
 8011aea:	f014 ff6b 	bl	80269c4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011aee:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8011af2:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8011af6:	ee07 3a90 	vmov	s15, r3
 8011afa:	ee07 2a10 	vmov	s14, r2
 8011afe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011b02:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011b06:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8011b0a:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8011b0e:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8011b12:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8011b16:	4628      	mov	r0, r5
 8011b18:	f014 ff54 	bl	80269c4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011b1c:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8011b20:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8011b24:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8011b28:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8011b2c:	4628      	mov	r0, r5
 8011b2e:	f014 ff49 	bl	80269c4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011b32:	2301      	movs	r3, #1
 8011b34:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8011b38:	bd38      	pop	{r3, r4, r5, pc}
 8011b3a:	bf00      	nop
 8011b3c:	43960000 	.word	0x43960000

08011b40 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8011b40:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011b42:	4604      	mov	r4, r0
 8011b44:	a802      	add	r0, sp, #8
 8011b46:	4616      	mov	r6, r2
 8011b48:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8011b4c:	461d      	mov	r5, r3
 8011b4e:	4601      	mov	r1, r0
 8011b50:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8011b54:	f015 f88c 	bl	8026c70 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8011b58:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8011b5c:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8011b60:	4620      	mov	r0, r4
 8011b62:	f7ff ff95 	bl	8011a90 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8011b66:	b002      	add	sp, #8
 8011b68:	bd70      	pop	{r4, r5, r6, pc}

08011b6a <_ZN8touchgfx5Gauge9setCenterEii>:
 8011b6a:	b570      	push	{r4, r5, r6, lr}
 8011b6c:	4606      	mov	r6, r0
 8011b6e:	460d      	mov	r5, r1
 8011b70:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8011b74:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8011b78:	4614      	mov	r4, r2
 8011b7a:	f7ff ff89 	bl	8011a90 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8011b7e:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8011b82:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8011b86:	1aa4      	subs	r4, r4, r2
 8011b88:	1a6d      	subs	r5, r5, r1
 8011b8a:	0164      	lsls	r4, r4, #5
 8011b8c:	016d      	lsls	r5, r5, #5
 8011b8e:	3410      	adds	r4, #16
 8011b90:	3510      	adds	r5, #16
 8011b92:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8011b96:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8011b9a:	bd70      	pop	{r4, r5, r6, pc}

08011b9c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8011b9c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011b9e:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8011ba0:	0149      	lsls	r1, r1, #5
 8011ba2:	4299      	cmp	r1, r3
 8011ba4:	4604      	mov	r4, r0
 8011ba6:	9101      	str	r1, [sp, #4]
 8011ba8:	d00b      	beq.n	8011bc2 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8011baa:	4601      	mov	r1, r0
 8011bac:	aa01      	add	r2, sp, #4
 8011bae:	a802      	add	r0, sp, #8
 8011bb0:	f014 fafe 	bl	80261b0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8011bb4:	9b01      	ldr	r3, [sp, #4]
 8011bb6:	63e3      	str	r3, [r4, #60]	; 0x3c
 8011bb8:	6823      	ldr	r3, [r4, #0]
 8011bba:	a902      	add	r1, sp, #8
 8011bbc:	691b      	ldr	r3, [r3, #16]
 8011bbe:	4620      	mov	r0, r4
 8011bc0:	4798      	blx	r3
 8011bc2:	b004      	add	sp, #16
 8011bc4:	bd10      	pop	{r4, pc}
	...

08011bc8 <_ZN8touchgfx5Gauge8setValueEi>:
 8011bc8:	b570      	push	{r4, r5, r6, lr}
 8011bca:	4604      	mov	r4, r0
 8011bcc:	f7fd fba2 	bl	800f314 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8011bd0:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8011bd4:	429a      	cmp	r2, r3
 8011bd6:	bfac      	ite	ge
 8011bd8:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8011bdc:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8011be0:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8011be4:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8011be8:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8011bec:	1ac9      	subs	r1, r1, r3
 8011bee:	2900      	cmp	r1, #0
 8011bf0:	bfb8      	it	lt
 8011bf2:	4249      	neglt	r1, r1
 8011bf4:	b289      	uxth	r1, r1
 8011bf6:	4620      	mov	r0, r4
 8011bf8:	f7fd fbae 	bl	800f358 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8011bfc:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8011c00:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8011c04:	eddf 6a19 	vldr	s13, [pc, #100]	; 8011c6c <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8011c08:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8011c70 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8011c0c:	429a      	cmp	r2, r3
 8011c0e:	4605      	mov	r5, r0
 8011c10:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8011c14:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8011c18:	da15      	bge.n	8011c46 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8011c1a:	1b5b      	subs	r3, r3, r5
 8011c1c:	ee07 3a90 	vmov	s15, r3
 8011c20:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011c24:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8011c28:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8011c2c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8011c30:	ee21 1a07 	vmul.f32	s2, s2, s14
 8011c34:	f014 fe35 	bl	80268a2 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8011c38:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8011c3c:	1b49      	subs	r1, r1, r5
 8011c3e:	4630      	mov	r0, r6
 8011c40:	f7ff ffac 	bl	8011b9c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8011c44:	bd70      	pop	{r4, r5, r6, pc}
 8011c46:	442b      	add	r3, r5
 8011c48:	ee07 3a90 	vmov	s15, r3
 8011c4c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011c50:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8011c54:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8011c58:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8011c5c:	ee21 1a07 	vmul.f32	s2, s2, s14
 8011c60:	f014 fe1f 	bl	80268a2 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8011c64:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8011c68:	4429      	add	r1, r5
 8011c6a:	e7e8      	b.n	8011c3e <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8011c6c:	43340000 	.word	0x43340000
 8011c70:	40490fdb 	.word	0x40490fdb

08011c74 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8011c74:	b510      	push	{r4, lr}
 8011c76:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8011c7a:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8011c7e:	0149      	lsls	r1, r1, #5
 8011c80:	0152      	lsls	r2, r2, #5
 8011c82:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8011c86:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8011c8a:	4604      	mov	r4, r0
 8011c8c:	f7fd faec 	bl	800f268 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8011c90:	4601      	mov	r1, r0
 8011c92:	4620      	mov	r0, r4
 8011c94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011c98:	f7ff bf96 	b.w	8011bc8 <_ZN8touchgfx5Gauge8setValueEi>

08011c9c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8011c9c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8011ca0:	4770      	bx	lr

08011ca2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8011ca2:	b570      	push	{r4, r5, r6, lr}
 8011ca4:	880b      	ldrh	r3, [r1, #0]
 8011ca6:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8011ca8:	4605      	mov	r5, r0
 8011caa:	8813      	ldrh	r3, [r2, #0]
 8011cac:	f825 3f30 	strh.w	r3, [r5, #48]!
 8011cb0:	4604      	mov	r4, r0
 8011cb2:	4628      	mov	r0, r5
 8011cb4:	f006 f912 	bl	8017edc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011cb8:	4606      	mov	r6, r0
 8011cba:	4628      	mov	r0, r5
 8011cbc:	f006 f942 	bl	8017f44 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011cc0:	6823      	ldr	r3, [r4, #0]
 8011cc2:	4605      	mov	r5, r0
 8011cc4:	4631      	mov	r1, r6
 8011cc6:	4620      	mov	r0, r4
 8011cc8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011cca:	4798      	blx	r3
 8011ccc:	6823      	ldr	r3, [r4, #0]
 8011cce:	4629      	mov	r1, r5
 8011cd0:	4620      	mov	r0, r4
 8011cd2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011cd4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011cd8:	4718      	bx	r3

08011cda <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8011cda:	b510      	push	{r4, lr}
 8011cdc:	4604      	mov	r4, r0
 8011cde:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8011ce0:	b150      	cbz	r0, 8011cf8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8011ce2:	6803      	ldr	r3, [r0, #0]
 8011ce4:	68db      	ldr	r3, [r3, #12]
 8011ce6:	4798      	blx	r3
 8011ce8:	b130      	cbz	r0, 8011cf8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8011cea:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8011cec:	6803      	ldr	r3, [r0, #0]
 8011cee:	4621      	mov	r1, r4
 8011cf0:	689b      	ldr	r3, [r3, #8]
 8011cf2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011cf6:	4718      	bx	r3
 8011cf8:	bd10      	pop	{r4, pc}

08011cfa <_ZNK8touchgfx6Button12getSolidRectEv>:
 8011cfa:	b510      	push	{r4, lr}
 8011cfc:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8011d00:	2bff      	cmp	r3, #255	; 0xff
 8011d02:	4604      	mov	r4, r0
 8011d04:	d006      	beq.n	8011d14 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8011d06:	2300      	movs	r3, #0
 8011d08:	8003      	strh	r3, [r0, #0]
 8011d0a:	8043      	strh	r3, [r0, #2]
 8011d0c:	8083      	strh	r3, [r0, #4]
 8011d0e:	80c3      	strh	r3, [r0, #6]
 8011d10:	4620      	mov	r0, r4
 8011d12:	bd10      	pop	{r4, pc}
 8011d14:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8011d18:	b11b      	cbz	r3, 8011d22 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8011d1a:	3130      	adds	r1, #48	; 0x30
 8011d1c:	f006 f946 	bl	8017fac <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8011d20:	e7f6      	b.n	8011d10 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8011d22:	312e      	adds	r1, #46	; 0x2e
 8011d24:	e7fa      	b.n	8011d1c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08011d28 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8011d28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011d2c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011d30:	b08a      	sub	sp, #40	; 0x28
 8011d32:	4604      	mov	r4, r0
 8011d34:	4688      	mov	r8, r1
 8011d36:	2b00      	cmp	r3, #0
 8011d38:	d066      	beq.n	8011e08 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8011d3a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8011d3c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011d40:	a805      	add	r0, sp, #20
 8011d42:	f006 f8cb 	bl	8017edc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011d46:	4607      	mov	r7, r0
 8011d48:	a805      	add	r0, sp, #20
 8011d4a:	f006 f8fb 	bl	8017f44 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011d4e:	f9b8 6000 	ldrsh.w	r6, [r8]
 8011d52:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8011d56:	4432      	add	r2, r6
 8011d58:	b292      	uxth	r2, r2
 8011d5a:	2300      	movs	r3, #0
 8011d5c:	fa0f fc82 	sxth.w	ip, r2
 8011d60:	459c      	cmp	ip, r3
 8011d62:	9306      	str	r3, [sp, #24]
 8011d64:	dd52      	ble.n	8011e0c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011d66:	42b7      	cmp	r7, r6
 8011d68:	dd50      	ble.n	8011e0c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011d6a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8011d6e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8011d72:	442b      	add	r3, r5
 8011d74:	b29b      	uxth	r3, r3
 8011d76:	b219      	sxth	r1, r3
 8011d78:	2900      	cmp	r1, #0
 8011d7a:	dd47      	ble.n	8011e0c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011d7c:	42a8      	cmp	r0, r5
 8011d7e:	dd45      	ble.n	8011e0c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011d80:	4567      	cmp	r7, ip
 8011d82:	bfb8      	it	lt
 8011d84:	b2ba      	uxthlt	r2, r7
 8011d86:	4288      	cmp	r0, r1
 8011d88:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8011d8c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8011d90:	bfb8      	it	lt
 8011d92:	b283      	uxthlt	r3, r0
 8011d94:	1b92      	subs	r2, r2, r6
 8011d96:	1b5b      	subs	r3, r3, r5
 8011d98:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011d9c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011da0:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011da4:	f8ad 501a 	strh.w	r5, [sp, #26]
 8011da8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8011dac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011db0:	429a      	cmp	r2, r3
 8011db2:	d026      	beq.n	8011e02 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011db4:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8011db8:	2b00      	cmp	r3, #0
 8011dba:	dd22      	ble.n	8011e02 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011dbc:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8011dc0:	2b00      	cmp	r3, #0
 8011dc2:	dd1e      	ble.n	8011e02 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011dc4:	2300      	movs	r3, #0
 8011dc6:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8011dca:	6823      	ldr	r3, [r4, #0]
 8011dcc:	a908      	add	r1, sp, #32
 8011dce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011dd0:	4620      	mov	r0, r4
 8011dd2:	4798      	blx	r3
 8011dd4:	4b0f      	ldr	r3, [pc, #60]	; (8011e14 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8011dd6:	681b      	ldr	r3, [r3, #0]
 8011dd8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011ddc:	b10a      	cbz	r2, 8011de2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8011dde:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8011de0:	b900      	cbnz	r0, 8011de4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8011de2:	6898      	ldr	r0, [r3, #8]
 8011de4:	6801      	ldr	r1, [r0, #0]
 8011de6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8011dea:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8011dee:	2501      	movs	r5, #1
 8011df0:	9502      	str	r5, [sp, #8]
 8011df2:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8011df6:	9401      	str	r4, [sp, #4]
 8011df8:	ac06      	add	r4, sp, #24
 8011dfa:	9400      	str	r4, [sp, #0]
 8011dfc:	688c      	ldr	r4, [r1, #8]
 8011dfe:	a905      	add	r1, sp, #20
 8011e00:	47a0      	blx	r4
 8011e02:	b00a      	add	sp, #40	; 0x28
 8011e04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011e08:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8011e0a:	e797      	b.n	8011d3c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8011e0c:	2300      	movs	r3, #0
 8011e0e:	9307      	str	r3, [sp, #28]
 8011e10:	e7ca      	b.n	8011da8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8011e12:	bf00      	nop
 8011e14:	200137bc 	.word	0x200137bc

08011e18 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8011e18:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8011e1c:	b12a      	cbz	r2, 8011e2a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8011e1e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8011e22:	b112      	cbz	r2, 8011e2a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8011e24:	6803      	ldr	r3, [r0, #0]
 8011e26:	695b      	ldr	r3, [r3, #20]
 8011e28:	4718      	bx	r3
 8011e2a:	4770      	bx	lr

08011e2c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8011e2c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011e30:	4b2f      	ldr	r3, [pc, #188]	; (8011ef0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8011e32:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011e34:	881b      	ldrh	r3, [r3, #0]
 8011e36:	4293      	cmp	r3, r2
 8011e38:	b08d      	sub	sp, #52	; 0x34
 8011e3a:	4604      	mov	r4, r0
 8011e3c:	460f      	mov	r7, r1
 8011e3e:	d954      	bls.n	8011eea <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8011e40:	4b2c      	ldr	r3, [pc, #176]	; (8011ef4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8011e42:	6819      	ldr	r1, [r3, #0]
 8011e44:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8011e48:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8011e4c:	4a2a      	ldr	r2, [pc, #168]	; (8011ef8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8011e4e:	6812      	ldr	r2, [r2, #0]
 8011e50:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8011e54:	2900      	cmp	r1, #0
 8011e56:	d048      	beq.n	8011eea <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8011e58:	785a      	ldrb	r2, [r3, #1]
 8011e5a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8011e5e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8011e62:	4b26      	ldr	r3, [pc, #152]	; (8011efc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8011e64:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8011e68:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8011e6c:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8011e70:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8011e72:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8011e76:	9107      	str	r1, [sp, #28]
 8011e78:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8011e7c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8011e80:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8011e84:	681a      	ldr	r2, [r3, #0]
 8011e86:	f88d 8020 	strb.w	r8, [sp, #32]
 8011e8a:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8011e8e:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8011e92:	9609      	str	r6, [sp, #36]	; 0x24
 8011e94:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8011e98:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8011e9c:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8011ea0:	b10b      	cbz	r3, 8011ea6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8011ea2:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8011ea4:	b905      	cbnz	r5, 8011ea8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8011ea6:	6895      	ldr	r5, [r2, #8]
 8011ea8:	ae05      	add	r6, sp, #20
 8011eaa:	4621      	mov	r1, r4
 8011eac:	4630      	mov	r0, r6
 8011eae:	f003 ff7b 	bl	8015da8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011eb2:	4b13      	ldr	r3, [pc, #76]	; (8011f00 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8011eb4:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011eb6:	6818      	ldr	r0, [r3, #0]
 8011eb8:	f7f5 fe32 	bl	8007b20 <_ZNK8touchgfx5Texts7getTextEt>
 8011ebc:	6823      	ldr	r3, [r4, #0]
 8011ebe:	4680      	mov	r8, r0
 8011ec0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011ec2:	4620      	mov	r0, r4
 8011ec4:	4798      	blx	r3
 8011ec6:	6823      	ldr	r3, [r4, #0]
 8011ec8:	4681      	mov	r9, r0
 8011eca:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011ece:	4620      	mov	r0, r4
 8011ed0:	4798      	blx	r3
 8011ed2:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8011ed6:	ab07      	add	r3, sp, #28
 8011ed8:	9300      	str	r3, [sp, #0]
 8011eda:	f8cd 8004 	str.w	r8, [sp, #4]
 8011ede:	463b      	mov	r3, r7
 8011ee0:	e896 0006 	ldmia.w	r6, {r1, r2}
 8011ee4:	4628      	mov	r0, r5
 8011ee6:	f7f5 fdcd 	bl	8007a84 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8011eea:	b00d      	add	sp, #52	; 0x34
 8011eec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011ef0:	20013818 	.word	0x20013818
 8011ef4:	20013814 	.word	0x20013814
 8011ef8:	2001381c 	.word	0x2001381c
 8011efc:	200137bc 	.word	0x200137bc
 8011f00:	20013820 	.word	0x20013820

08011f04 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8011f04:	4770      	bx	lr

08011f06 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8011f06:	4770      	bx	lr

08011f08 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8011f08:	b510      	push	{r4, lr}
 8011f0a:	213c      	movs	r1, #60	; 0x3c
 8011f0c:	4604      	mov	r4, r0
 8011f0e:	f015 fb26 	bl	802755e <_ZdlPvj>
 8011f12:	4620      	mov	r0, r4
 8011f14:	bd10      	pop	{r4, pc}

08011f16 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8011f16:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011f1a:	461c      	mov	r4, r3
 8011f1c:	4606      	mov	r6, r0
 8011f1e:	9f06      	ldr	r7, [sp, #24]
 8011f20:	f7ff febf 	bl	8011ca2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8011f24:	8823      	ldrh	r3, [r4, #0]
 8011f26:	86b3      	strh	r3, [r6, #52]	; 0x34
 8011f28:	883b      	ldrh	r3, [r7, #0]
 8011f2a:	86f3      	strh	r3, [r6, #54]	; 0x36
 8011f2c:	4638      	mov	r0, r7
 8011f2e:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8011f32:	f005 ffd3 	bl	8017edc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011f36:	f04f 0802 	mov.w	r8, #2
 8011f3a:	fb95 f5f8 	sdiv	r5, r5, r8
 8011f3e:	b2ad      	uxth	r5, r5
 8011f40:	fb90 f0f8 	sdiv	r0, r0, r8
 8011f44:	1a2d      	subs	r5, r5, r0
 8011f46:	8735      	strh	r5, [r6, #56]	; 0x38
 8011f48:	4638      	mov	r0, r7
 8011f4a:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8011f4e:	fb94 f4f8 	sdiv	r4, r4, r8
 8011f52:	f005 fff7 	bl	8017f44 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011f56:	b2a4      	uxth	r4, r4
 8011f58:	fb90 f0f8 	sdiv	r0, r0, r8
 8011f5c:	1a24      	subs	r4, r4, r0
 8011f5e:	8774      	strh	r4, [r6, #58]	; 0x3a
 8011f60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011f64 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8011f64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011f68:	4604      	mov	r4, r0
 8011f6a:	b08c      	sub	sp, #48	; 0x30
 8011f6c:	460d      	mov	r5, r1
 8011f6e:	f7ff fedb 	bl	8011d28 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8011f72:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8011f76:	2b00      	cmp	r3, #0
 8011f78:	d05d      	beq.n	8012036 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 8011f7a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8011f7c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011f80:	a805      	add	r0, sp, #20
 8011f82:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8011f86:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 8011f8a:	f005 ffa7 	bl	8017edc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011f8e:	4606      	mov	r6, r0
 8011f90:	a805      	add	r0, sp, #20
 8011f92:	f005 ffd7 	bl	8017f44 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011f96:	6869      	ldr	r1, [r5, #4]
 8011f98:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011f9c:	6828      	ldr	r0, [r5, #0]
 8011f9e:	f8ad 8018 	strh.w	r8, [sp, #24]
 8011fa2:	ab08      	add	r3, sp, #32
 8011fa4:	ad08      	add	r5, sp, #32
 8011fa6:	c303      	stmia	r3!, {r0, r1}
 8011fa8:	a906      	add	r1, sp, #24
 8011faa:	4628      	mov	r0, r5
 8011fac:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011fb0:	f8ad 601c 	strh.w	r6, [sp, #28]
 8011fb4:	f7fd fc62 	bl	800f87c <_ZN8touchgfx4RectaNERKS0_>
 8011fb8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8011fbc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011fc0:	429a      	cmp	r2, r3
 8011fc2:	d035      	beq.n	8012030 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8011fc4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8011fc8:	2b00      	cmp	r3, #0
 8011fca:	dd31      	ble.n	8012030 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8011fcc:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8011fd0:	2b00      	cmp	r3, #0
 8011fd2:	dd2d      	ble.n	8012030 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8011fd4:	2300      	movs	r3, #0
 8011fd6:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 8011fda:	6823      	ldr	r3, [r4, #0]
 8011fdc:	a90a      	add	r1, sp, #40	; 0x28
 8011fde:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011fe0:	4620      	mov	r0, r4
 8011fe2:	4798      	blx	r3
 8011fe4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011fe8:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8011fea:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8011fee:	1a9b      	subs	r3, r3, r2
 8011ff0:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011ff4:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8011ff6:	1ac9      	subs	r1, r1, r3
 8011ff8:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8011ffc:	490f      	ldr	r1, [pc, #60]	; (801203c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 8011ffe:	6809      	ldr	r1, [r1, #0]
 8012000:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8012004:	b108      	cbz	r0, 801200a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8012006:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8012008:	b900      	cbnz	r0, 801200c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 801200a:	6888      	ldr	r0, [r1, #8]
 801200c:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8012010:	440b      	add	r3, r1
 8012012:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8012016:	2601      	movs	r6, #1
 8012018:	440a      	add	r2, r1
 801201a:	6801      	ldr	r1, [r0, #0]
 801201c:	9602      	str	r6, [sp, #8]
 801201e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8012022:	e9cd 5400 	strd	r5, r4, [sp]
 8012026:	b21b      	sxth	r3, r3
 8012028:	688c      	ldr	r4, [r1, #8]
 801202a:	b212      	sxth	r2, r2
 801202c:	a905      	add	r1, sp, #20
 801202e:	47a0      	blx	r4
 8012030:	b00c      	add	sp, #48	; 0x30
 8012032:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012036:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012038:	e7a0      	b.n	8011f7c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 801203a:	bf00      	nop
 801203c:	200137bc 	.word	0x200137bc

08012040 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8012040:	b510      	push	{r4, lr}
 8012042:	2101      	movs	r1, #1
 8012044:	2200      	movs	r2, #0
 8012046:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801204a:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 801204e:	4c0e      	ldr	r4, [pc, #56]	; (8012088 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8012050:	8082      	strh	r2, [r0, #4]
 8012052:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012056:	80c2      	strh	r2, [r0, #6]
 8012058:	8102      	strh	r2, [r0, #8]
 801205a:	8142      	strh	r2, [r0, #10]
 801205c:	8182      	strh	r2, [r0, #12]
 801205e:	81c2      	strh	r2, [r0, #14]
 8012060:	8202      	strh	r2, [r0, #16]
 8012062:	8242      	strh	r2, [r0, #18]
 8012064:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012068:	61c2      	str	r2, [r0, #28]
 801206a:	8402      	strh	r2, [r0, #32]
 801206c:	8442      	strh	r2, [r0, #34]	; 0x22
 801206e:	6282      	str	r2, [r0, #40]	; 0x28
 8012070:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8012074:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012076:	8601      	strh	r1, [r0, #48]	; 0x30
 8012078:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 801207c:	6004      	str	r4, [r0, #0]
 801207e:	8681      	strh	r1, [r0, #52]	; 0x34
 8012080:	86c1      	strh	r1, [r0, #54]	; 0x36
 8012082:	8702      	strh	r2, [r0, #56]	; 0x38
 8012084:	8742      	strh	r2, [r0, #58]	; 0x3a
 8012086:	bd10      	pop	{r4, pc}
 8012088:	0802c7dc 	.word	0x0802c7dc

0801208c <_ZN8touchgfx5ImageD1Ev>:
 801208c:	4770      	bx	lr

0801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 801208e:	b570      	push	{r4, r5, r6, lr}
 8012090:	880b      	ldrh	r3, [r1, #0]
 8012092:	84c3      	strh	r3, [r0, #38]	; 0x26
 8012094:	4604      	mov	r4, r0
 8012096:	4608      	mov	r0, r1
 8012098:	460d      	mov	r5, r1
 801209a:	f005 ff1f 	bl	8017edc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801209e:	4606      	mov	r6, r0
 80120a0:	4628      	mov	r0, r5
 80120a2:	f005 ff4f 	bl	8017f44 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80120a6:	6823      	ldr	r3, [r4, #0]
 80120a8:	4605      	mov	r5, r0
 80120aa:	4631      	mov	r1, r6
 80120ac:	4620      	mov	r0, r4
 80120ae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80120b0:	4798      	blx	r3
 80120b2:	6823      	ldr	r3, [r4, #0]
 80120b4:	4629      	mov	r1, r5
 80120b6:	4620      	mov	r0, r4
 80120b8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80120ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80120be:	4718      	bx	r3

080120c0 <_ZN8touchgfx5ImageD0Ev>:
 80120c0:	b510      	push	{r4, lr}
 80120c2:	212c      	movs	r1, #44	; 0x2c
 80120c4:	4604      	mov	r4, r0
 80120c6:	f015 fa4a 	bl	802755e <_ZdlPvj>
 80120ca:	4620      	mov	r0, r4
 80120cc:	bd10      	pop	{r4, pc}

080120ce <_ZNK8touchgfx5Image12getSolidRectEv>:
 80120ce:	b510      	push	{r4, lr}
 80120d0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80120d4:	2bff      	cmp	r3, #255	; 0xff
 80120d6:	4604      	mov	r4, r0
 80120d8:	d006      	beq.n	80120e8 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80120da:	2300      	movs	r3, #0
 80120dc:	8003      	strh	r3, [r0, #0]
 80120de:	8043      	strh	r3, [r0, #2]
 80120e0:	8083      	strh	r3, [r0, #4]
 80120e2:	80c3      	strh	r3, [r0, #6]
 80120e4:	4620      	mov	r0, r4
 80120e6:	bd10      	pop	{r4, pc}
 80120e8:	3126      	adds	r1, #38	; 0x26
 80120ea:	f005 ff5f 	bl	8017fac <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80120ee:	e7f9      	b.n	80120e4 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

080120f0 <_ZNK8touchgfx5Image17invalidateContentEv>:
 80120f0:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 80120f4:	b12a      	cbz	r2, 8012102 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80120f6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80120fa:	b112      	cbz	r2, 8012102 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80120fc:	6803      	ldr	r3, [r0, #0]
 80120fe:	695b      	ldr	r3, [r3, #20]
 8012100:	4718      	bx	r3
 8012102:	4770      	bx	lr

08012104 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8012104:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012108:	4604      	mov	r4, r0
 801210a:	b088      	sub	sp, #32
 801210c:	f854 3b26 	ldr.w	r3, [r4], #38
 8012110:	2500      	movs	r5, #0
 8012112:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012114:	460f      	mov	r7, r1
 8012116:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801211a:	a904      	add	r1, sp, #16
 801211c:	4606      	mov	r6, r0
 801211e:	4798      	blx	r3
 8012120:	4620      	mov	r0, r4
 8012122:	f005 fedb 	bl	8017edc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012126:	4680      	mov	r8, r0
 8012128:	4620      	mov	r0, r4
 801212a:	f005 ff0b 	bl	8017f44 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801212e:	9506      	str	r5, [sp, #24]
 8012130:	ad06      	add	r5, sp, #24
 8012132:	f8ad 001e 	strh.w	r0, [sp, #30]
 8012136:	4639      	mov	r1, r7
 8012138:	4628      	mov	r0, r5
 801213a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801213e:	f7fd fb9d 	bl	800f87c <_ZN8touchgfx4RectaNERKS0_>
 8012142:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012146:	2b00      	cmp	r3, #0
 8012148:	dd19      	ble.n	801217e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801214a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801214e:	2b00      	cmp	r3, #0
 8012150:	dd15      	ble.n	801217e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8012152:	4b0c      	ldr	r3, [pc, #48]	; (8012184 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8012154:	681b      	ldr	r3, [r3, #0]
 8012156:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801215a:	b10a      	cbz	r2, 8012160 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801215c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801215e:	b900      	cbnz	r0, 8012162 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8012160:	6898      	ldr	r0, [r3, #8]
 8012162:	6801      	ldr	r1, [r0, #0]
 8012164:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8012168:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801216c:	2701      	movs	r7, #1
 801216e:	9702      	str	r7, [sp, #8]
 8012170:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8012174:	e9cd 5600 	strd	r5, r6, [sp]
 8012178:	688d      	ldr	r5, [r1, #8]
 801217a:	4621      	mov	r1, r4
 801217c:	47a8      	blx	r5
 801217e:	b008      	add	sp, #32
 8012180:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012184:	200137bc 	.word	0x200137bc

08012188 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8012188:	4770      	bx	lr

0801218a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801218a:	b510      	push	{r4, lr}
 801218c:	2148      	movs	r1, #72	; 0x48
 801218e:	4604      	mov	r4, r0
 8012190:	f015 f9e5 	bl	802755e <_ZdlPvj>
 8012194:	4620      	mov	r0, r4
 8012196:	bd10      	pop	{r4, pc}

08012198 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8012198:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801219c:	b08d      	sub	sp, #52	; 0x34
 801219e:	4604      	mov	r4, r0
 80121a0:	460f      	mov	r7, r1
 80121a2:	f7ff fdc1 	bl	8011d28 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80121a6:	4a55      	ldr	r2, [pc, #340]	; (80122fc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 80121a8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80121aa:	8812      	ldrh	r2, [r2, #0]
 80121ac:	429a      	cmp	r2, r3
 80121ae:	f240 8082 	bls.w	80122b6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80121b2:	4d53      	ldr	r5, [pc, #332]	; (8012300 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 80121b4:	682a      	ldr	r2, [r5, #0]
 80121b6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80121ba:	4b52      	ldr	r3, [pc, #328]	; (8012304 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 80121bc:	681b      	ldr	r3, [r3, #0]
 80121be:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80121c2:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 80121c6:	2200      	movs	r2, #0
 80121c8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80121cc:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80121d0:	2a03      	cmp	r2, #3
 80121d2:	d811      	bhi.n	80121f8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80121d4:	e8df f002 	tbb	[pc, r2]
 80121d8:	89727902 	.word	0x89727902
 80121dc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80121e0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80121e4:	1ad2      	subs	r2, r2, r3
 80121e6:	2002      	movs	r0, #2
 80121e8:	f8ad 1010 	strh.w	r1, [sp, #16]
 80121ec:	fb92 f2f0 	sdiv	r2, r2, r0
 80121f0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80121f4:	f8ad 200e 	strh.w	r2, [sp, #14]
 80121f8:	f10d 080c 	add.w	r8, sp, #12
 80121fc:	e898 0003 	ldmia.w	r8, {r0, r1}
 8012200:	f10d 0914 	add.w	r9, sp, #20
 8012204:	e889 0003 	stmia.w	r9, {r0, r1}
 8012208:	4639      	mov	r1, r7
 801220a:	4648      	mov	r0, r9
 801220c:	f7fd fb36 	bl	800f87c <_ZN8touchgfx4RectaNERKS0_>
 8012210:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012214:	2b00      	cmp	r3, #0
 8012216:	dd4e      	ble.n	80122b6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012218:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801221c:	2b00      	cmp	r3, #0
 801221e:	dd4a      	ble.n	80122b6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012220:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8012224:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8012228:	1a9b      	subs	r3, r3, r2
 801222a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801222e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8012232:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8012236:	1a9b      	subs	r3, r3, r2
 8012238:	f8ad 3016 	strh.w	r3, [sp, #22]
 801223c:	6823      	ldr	r3, [r4, #0]
 801223e:	4641      	mov	r1, r8
 8012240:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012242:	4620      	mov	r0, r4
 8012244:	4798      	blx	r3
 8012246:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801224a:	2b00      	cmp	r3, #0
 801224c:	d053      	beq.n	80122f6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 801224e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8012250:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8012252:	682b      	ldr	r3, [r5, #0]
 8012254:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8012258:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 801225c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012260:	785b      	ldrb	r3, [r3, #1]
 8012262:	9209      	str	r2, [sp, #36]	; 0x24
 8012264:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8012268:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801226c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8012270:	2300      	movs	r3, #0
 8012272:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8012276:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801227a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801227e:	4b22      	ldr	r3, [pc, #136]	; (8012308 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8012280:	9607      	str	r6, [sp, #28]
 8012282:	681b      	ldr	r3, [r3, #0]
 8012284:	f88d 5020 	strb.w	r5, [sp, #32]
 8012288:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801228c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012290:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8012294:	b10a      	cbz	r2, 801229a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8012296:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8012298:	b904      	cbnz	r4, 801229c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 801229a:	689c      	ldr	r4, [r3, #8]
 801229c:	4b1b      	ldr	r3, [pc, #108]	; (801230c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 801229e:	6818      	ldr	r0, [r3, #0]
 80122a0:	f7f5 fc3e 	bl	8007b20 <_ZNK8touchgfx5Texts7getTextEt>
 80122a4:	ab07      	add	r3, sp, #28
 80122a6:	9001      	str	r0, [sp, #4]
 80122a8:	9300      	str	r3, [sp, #0]
 80122aa:	e898 0006 	ldmia.w	r8, {r1, r2}
 80122ae:	464b      	mov	r3, r9
 80122b0:	4620      	mov	r0, r4
 80122b2:	f7f5 fbe7 	bl	8007a84 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80122b6:	b00d      	add	sp, #52	; 0x34
 80122b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80122bc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80122c0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80122c4:	1ad2      	subs	r2, r2, r3
 80122c6:	3201      	adds	r2, #1
 80122c8:	e78d      	b.n	80121e6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 80122ca:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80122ce:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80122d2:	1ad2      	subs	r2, r2, r3
 80122d4:	3201      	adds	r2, #1
 80122d6:	2002      	movs	r0, #2
 80122d8:	f8ad 3010 	strh.w	r3, [sp, #16]
 80122dc:	fb92 f2f0 	sdiv	r2, r2, r0
 80122e0:	f8ad 1012 	strh.w	r1, [sp, #18]
 80122e4:	f8ad 200c 	strh.w	r2, [sp, #12]
 80122e8:	e786      	b.n	80121f8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80122ea:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80122ee:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80122f2:	1ad2      	subs	r2, r2, r3
 80122f4:	e7ef      	b.n	80122d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 80122f6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80122f8:	e7aa      	b.n	8012250 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 80122fa:	bf00      	nop
 80122fc:	20013818 	.word	0x20013818
 8012300:	20013814 	.word	0x20013814
 8012304:	2001381c 	.word	0x2001381c
 8012308:	200137bc 	.word	0x200137bc
 801230c:	20013820 	.word	0x20013820

08012310 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8012310:	b510      	push	{r4, lr}
 8012312:	2101      	movs	r1, #1
 8012314:	4c13      	ldr	r4, [pc, #76]	; (8012364 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8012316:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801231a:	2200      	movs	r2, #0
 801231c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8012320:	6004      	str	r4, [r0, #0]
 8012322:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012326:	4c10      	ldr	r4, [pc, #64]	; (8012368 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8012328:	8082      	strh	r2, [r0, #4]
 801232a:	80c2      	strh	r2, [r0, #6]
 801232c:	8102      	strh	r2, [r0, #8]
 801232e:	8142      	strh	r2, [r0, #10]
 8012330:	8182      	strh	r2, [r0, #12]
 8012332:	81c2      	strh	r2, [r0, #14]
 8012334:	8202      	strh	r2, [r0, #16]
 8012336:	8242      	strh	r2, [r0, #18]
 8012338:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801233c:	61c2      	str	r2, [r0, #28]
 801233e:	8402      	strh	r2, [r0, #32]
 8012340:	8442      	strh	r2, [r0, #34]	; 0x22
 8012342:	6282      	str	r2, [r0, #40]	; 0x28
 8012344:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8012348:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801234a:	8601      	strh	r1, [r0, #48]	; 0x30
 801234c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8012350:	6344      	str	r4, [r0, #52]	; 0x34
 8012352:	8701      	strh	r1, [r0, #56]	; 0x38
 8012354:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8012358:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 801235c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8012360:	bd10      	pop	{r4, pc}
 8012362:	bf00      	nop
 8012364:	0802c8c0 	.word	0x0802c8c0
 8012368:	08029d4c 	.word	0x08029d4c

0801236c <_ZN8touchgfx7OutlineD1Ev>:
 801236c:	4770      	bx	lr

0801236e <_ZN8touchgfx7OutlineD0Ev>:
 801236e:	b510      	push	{r4, lr}
 8012370:	2130      	movs	r1, #48	; 0x30
 8012372:	4604      	mov	r4, r0
 8012374:	f015 f8f3 	bl	802755e <_ZdlPvj>
 8012378:	4620      	mov	r0, r4
 801237a:	bd10      	pop	{r4, pc}

0801237c <_ZN8touchgfx7Outline5resetEv>:
 801237c:	b510      	push	{r4, lr}
 801237e:	4604      	mov	r4, r0
 8012380:	f000 fe96 	bl	80130b0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8012384:	60e0      	str	r0, [r4, #12]
 8012386:	f000 fe99 	bl	80130bc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801238a:	68e3      	ldr	r3, [r4, #12]
 801238c:	6123      	str	r3, [r4, #16]
 801238e:	08c0      	lsrs	r0, r0, #3
 8012390:	2200      	movs	r2, #0
 8012392:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8012396:	3801      	subs	r0, #1
 8012398:	6060      	str	r0, [r4, #4]
 801239a:	60a2      	str	r2, [r4, #8]
 801239c:	8019      	strh	r1, [r3, #0]
 801239e:	8059      	strh	r1, [r3, #2]
 80123a0:	809a      	strh	r2, [r3, #4]
 80123a2:	80da      	strh	r2, [r3, #6]
 80123a4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80123a6:	f023 0301 	bic.w	r3, r3, #1
 80123aa:	f043 0302 	orr.w	r3, r3, #2
 80123ae:	6263      	str	r3, [r4, #36]	; 0x24
 80123b0:	bd10      	pop	{r4, pc}
	...

080123b4 <_ZN8touchgfx7OutlineC1Ev>:
 80123b4:	b510      	push	{r4, lr}
 80123b6:	4b0a      	ldr	r3, [pc, #40]	; (80123e0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 80123b8:	6003      	str	r3, [r0, #0]
 80123ba:	2300      	movs	r3, #0
 80123bc:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80123c0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80123c4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80123c8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80123cc:	6243      	str	r3, [r0, #36]	; 0x24
 80123ce:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80123d2:	4604      	mov	r4, r0
 80123d4:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80123d8:	f7ff ffd0 	bl	801237c <_ZN8touchgfx7Outline5resetEv>
 80123dc:	4620      	mov	r0, r4
 80123de:	bd10      	pop	{r4, pc}
 80123e0:	0802c934 	.word	0x0802c934

080123e4 <_ZN8touchgfx7Outline10renderLineEiiii>:
 80123e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80123e8:	b093      	sub	sp, #76	; 0x4c
 80123ea:	1156      	asrs	r6, r2, #5
 80123ec:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80123ee:	9305      	str	r3, [sp, #20]
 80123f0:	f004 051f 	and.w	r5, r4, #31
 80123f4:	1153      	asrs	r3, r2, #5
 80123f6:	9504      	str	r5, [sp, #16]
 80123f8:	1165      	asrs	r5, r4, #5
 80123fa:	9303      	str	r3, [sp, #12]
 80123fc:	42ae      	cmp	r6, r5
 80123fe:	ea4f 1364 	mov.w	r3, r4, asr #5
 8012402:	9306      	str	r3, [sp, #24]
 8012404:	f002 031f 	and.w	r3, r2, #31
 8012408:	f040 80f8 	bne.w	80125fc <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 801240c:	9c04      	ldr	r4, [sp, #16]
 801240e:	9a05      	ldr	r2, [sp, #20]
 8012410:	42a3      	cmp	r3, r4
 8012412:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8012416:	6902      	ldr	r2, [r0, #16]
 8012418:	d125      	bne.n	8012466 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801241a:	f9b2 3000 	ldrsh.w	r3, [r2]
 801241e:	459e      	cmp	lr, r3
 8012420:	d103      	bne.n	801242a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8012422:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8012426:	429e      	cmp	r6, r3
 8012428:	d035      	beq.n	8012496 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801242a:	88d1      	ldrh	r1, [r2, #6]
 801242c:	8893      	ldrh	r3, [r2, #4]
 801242e:	430b      	orrs	r3, r1
 8012430:	d010      	beq.n	8012454 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012432:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8012436:	2b00      	cmp	r3, #0
 8012438:	db0c      	blt.n	8012454 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801243a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801243c:	428b      	cmp	r3, r1
 801243e:	da09      	bge.n	8012454 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012440:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8012444:	428b      	cmp	r3, r1
 8012446:	bf38      	it	cc
 8012448:	3208      	addcc	r2, #8
 801244a:	f103 0301 	add.w	r3, r3, #1
 801244e:	bf38      	it	cc
 8012450:	6102      	strcc	r2, [r0, #16]
 8012452:	6083      	str	r3, [r0, #8]
 8012454:	6903      	ldr	r3, [r0, #16]
 8012456:	9a03      	ldr	r2, [sp, #12]
 8012458:	f8a3 e000 	strh.w	lr, [r3]
 801245c:	805a      	strh	r2, [r3, #2]
 801245e:	2200      	movs	r2, #0
 8012460:	809a      	strh	r2, [r3, #4]
 8012462:	80da      	strh	r2, [r3, #6]
 8012464:	e017      	b.n	8012496 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012466:	9c05      	ldr	r4, [sp, #20]
 8012468:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801246c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8012470:	f004 041f 	and.w	r4, r4, #31
 8012474:	114e      	asrs	r6, r1, #5
 8012476:	9402      	str	r4, [sp, #8]
 8012478:	9c04      	ldr	r4, [sp, #16]
 801247a:	4576      	cmp	r6, lr
 801247c:	f001 0c1f 	and.w	ip, r1, #31
 8012480:	eba4 0403 	sub.w	r4, r4, r3
 8012484:	d10a      	bne.n	801249c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8012486:	9b02      	ldr	r3, [sp, #8]
 8012488:	449c      	add	ip, r3
 801248a:	44a0      	add	r8, r4
 801248c:	fb04 a40c 	mla	r4, r4, ip, sl
 8012490:	f8a2 8004 	strh.w	r8, [r2, #4]
 8012494:	80d4      	strh	r4, [r2, #6]
 8012496:	b013      	add	sp, #76	; 0x4c
 8012498:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801249c:	9d05      	ldr	r5, [sp, #20]
 801249e:	1a69      	subs	r1, r5, r1
 80124a0:	bf5b      	ittet	pl
 80124a2:	f1cc 0520 	rsbpl	r5, ip, #32
 80124a6:	436c      	mulpl	r4, r5
 80124a8:	2500      	movmi	r5, #0
 80124aa:	2520      	movpl	r5, #32
 80124ac:	bf44      	itt	mi
 80124ae:	fb04 f40c 	mulmi.w	r4, r4, ip
 80124b2:	4249      	negmi	r1, r1
 80124b4:	9501      	str	r5, [sp, #4]
 80124b6:	9f01      	ldr	r7, [sp, #4]
 80124b8:	fb94 f5f1 	sdiv	r5, r4, r1
 80124bc:	fb01 4415 	mls	r4, r1, r5, r4
 80124c0:	bf54      	ite	pl
 80124c2:	f04f 0901 	movpl.w	r9, #1
 80124c6:	f04f 39ff 	movmi.w	r9, #4294967295
 80124ca:	2c00      	cmp	r4, #0
 80124cc:	bfb8      	it	lt
 80124ce:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80124d2:	44bc      	add	ip, r7
 80124d4:	44a8      	add	r8, r5
 80124d6:	fb05 ac0c 	mla	ip, r5, ip, sl
 80124da:	f8a2 8004 	strh.w	r8, [r2, #4]
 80124de:	f8a2 c006 	strh.w	ip, [r2, #6]
 80124e2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80124e6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80124ea:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 80124ee:	bfb8      	it	lt
 80124f0:	1864      	addlt	r4, r4, r1
 80124f2:	ea58 0202 	orrs.w	r2, r8, r2
 80124f6:	444e      	add	r6, r9
 80124f8:	d011      	beq.n	801251e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80124fa:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80124fe:	f1b8 0f00 	cmp.w	r8, #0
 8012502:	db0c      	blt.n	801251e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012504:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8012506:	4590      	cmp	r8, r2
 8012508:	da09      	bge.n	801251e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801250a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801250e:	4590      	cmp	r8, r2
 8012510:	bf3c      	itt	cc
 8012512:	f10c 0208 	addcc.w	r2, ip, #8
 8012516:	6102      	strcc	r2, [r0, #16]
 8012518:	f108 0201 	add.w	r2, r8, #1
 801251c:	6082      	str	r2, [r0, #8]
 801251e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012522:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8012526:	f8ac 6000 	strh.w	r6, [ip]
 801252a:	2700      	movs	r7, #0
 801252c:	45b6      	cmp	lr, r6
 801252e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8012532:	f8ac 7004 	strh.w	r7, [ip, #4]
 8012536:	f8ac 7006 	strh.w	r7, [ip, #6]
 801253a:	442b      	add	r3, r5
 801253c:	d04d      	beq.n	80125da <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801253e:	9f04      	ldr	r7, [sp, #16]
 8012540:	1aff      	subs	r7, r7, r3
 8012542:	443d      	add	r5, r7
 8012544:	016d      	lsls	r5, r5, #5
 8012546:	fb95 f8f1 	sdiv	r8, r5, r1
 801254a:	fb01 5518 	mls	r5, r1, r8, r5
 801254e:	2d00      	cmp	r5, #0
 8012550:	bfb8      	it	lt
 8012552:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012556:	f108 0701 	add.w	r7, r8, #1
 801255a:	bfb8      	it	lt
 801255c:	186d      	addlt	r5, r5, r1
 801255e:	1a64      	subs	r4, r4, r1
 8012560:	9703      	str	r7, [sp, #12]
 8012562:	f04f 0a00 	mov.w	sl, #0
 8012566:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801256a:	1964      	adds	r4, r4, r5
 801256c:	bf58      	it	pl
 801256e:	9f03      	ldrpl	r7, [sp, #12]
 8012570:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8012574:	bf48      	it	mi
 8012576:	4647      	movmi	r7, r8
 8012578:	44bb      	add	fp, r7
 801257a:	f8ac b004 	strh.w	fp, [ip, #4]
 801257e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012582:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012586:	f8ac b006 	strh.w	fp, [ip, #6]
 801258a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801258e:	443b      	add	r3, r7
 8012590:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012594:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012598:	bf58      	it	pl
 801259a:	1a64      	subpl	r4, r4, r1
 801259c:	ea5b 0707 	orrs.w	r7, fp, r7
 80125a0:	444e      	add	r6, r9
 80125a2:	d011      	beq.n	80125c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80125a4:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80125a8:	f1bb 0f00 	cmp.w	fp, #0
 80125ac:	db0c      	blt.n	80125c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80125ae:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80125b0:	45bb      	cmp	fp, r7
 80125b2:	da09      	bge.n	80125c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80125b4:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80125b8:	45bb      	cmp	fp, r7
 80125ba:	bf3c      	itt	cc
 80125bc:	f10c 0708 	addcc.w	r7, ip, #8
 80125c0:	6107      	strcc	r7, [r0, #16]
 80125c2:	f10b 0701 	add.w	r7, fp, #1
 80125c6:	6087      	str	r7, [r0, #8]
 80125c8:	6907      	ldr	r7, [r0, #16]
 80125ca:	45b6      	cmp	lr, r6
 80125cc:	803e      	strh	r6, [r7, #0]
 80125ce:	807a      	strh	r2, [r7, #2]
 80125d0:	f8a7 a004 	strh.w	sl, [r7, #4]
 80125d4:	f8a7 a006 	strh.w	sl, [r7, #6]
 80125d8:	d1c5      	bne.n	8012566 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 80125da:	9a04      	ldr	r2, [sp, #16]
 80125dc:	1ad3      	subs	r3, r2, r3
 80125de:	6902      	ldr	r2, [r0, #16]
 80125e0:	8891      	ldrh	r1, [r2, #4]
 80125e2:	88d6      	ldrh	r6, [r2, #6]
 80125e4:	4419      	add	r1, r3
 80125e6:	8091      	strh	r1, [r2, #4]
 80125e8:	9902      	ldr	r1, [sp, #8]
 80125ea:	f101 0c20 	add.w	ip, r1, #32
 80125ee:	9901      	ldr	r1, [sp, #4]
 80125f0:	ebac 0c01 	sub.w	ip, ip, r1
 80125f4:	fb03 630c 	mla	r3, r3, ip, r6
 80125f8:	80d3      	strh	r3, [r2, #6]
 80125fa:	e74c      	b.n	8012496 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80125fc:	9d05      	ldr	r5, [sp, #20]
 80125fe:	1aa2      	subs	r2, r4, r2
 8012600:	eba5 0501 	sub.w	r5, r5, r1
 8012604:	9508      	str	r5, [sp, #32]
 8012606:	9202      	str	r2, [sp, #8]
 8012608:	f140 8128 	bpl.w	801285c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 801260c:	9a03      	ldr	r2, [sp, #12]
 801260e:	2a00      	cmp	r2, #0
 8012610:	f6ff af41 	blt.w	8012496 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012614:	9a02      	ldr	r2, [sp, #8]
 8012616:	4252      	negs	r2, r2
 8012618:	9202      	str	r2, [sp, #8]
 801261a:	9a06      	ldr	r2, [sp, #24]
 801261c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8012620:	f04f 34ff 	mov.w	r4, #4294967295
 8012624:	9206      	str	r2, [sp, #24]
 8012626:	462a      	mov	r2, r5
 8012628:	940b      	str	r4, [sp, #44]	; 0x2c
 801262a:	435a      	muls	r2, r3
 801262c:	2400      	movs	r4, #0
 801262e:	9d02      	ldr	r5, [sp, #8]
 8012630:	9401      	str	r4, [sp, #4]
 8012632:	9c02      	ldr	r4, [sp, #8]
 8012634:	fb92 f4f4 	sdiv	r4, r2, r4
 8012638:	fb05 2214 	mls	r2, r5, r4, r2
 801263c:	2a00      	cmp	r2, #0
 801263e:	9207      	str	r2, [sp, #28]
 8012640:	bfbc      	itt	lt
 8012642:	1952      	addlt	r2, r2, r5
 8012644:	9207      	strlt	r2, [sp, #28]
 8012646:	9a01      	ldr	r2, [sp, #4]
 8012648:	6905      	ldr	r5, [r0, #16]
 801264a:	bfb8      	it	lt
 801264c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012650:	eb04 0901 	add.w	r9, r4, r1
 8012654:	429a      	cmp	r2, r3
 8012656:	ea4f 1669 	mov.w	r6, r9, asr #5
 801265a:	f040 8112 	bne.w	8012882 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801265e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8012662:	429e      	cmp	r6, r3
 8012664:	d104      	bne.n	8012670 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8012666:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801266a:	9a03      	ldr	r2, [sp, #12]
 801266c:	429a      	cmp	r2, r3
 801266e:	d01b      	beq.n	80126a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012670:	88ea      	ldrh	r2, [r5, #6]
 8012672:	88ab      	ldrh	r3, [r5, #4]
 8012674:	4313      	orrs	r3, r2
 8012676:	d010      	beq.n	801269a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012678:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801267c:	2a00      	cmp	r2, #0
 801267e:	db0c      	blt.n	801269a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012680:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012682:	429a      	cmp	r2, r3
 8012684:	da09      	bge.n	801269a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012686:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801268a:	429a      	cmp	r2, r3
 801268c:	bf38      	it	cc
 801268e:	3508      	addcc	r5, #8
 8012690:	f102 0201 	add.w	r2, r2, #1
 8012694:	bf38      	it	cc
 8012696:	6105      	strcc	r5, [r0, #16]
 8012698:	6082      	str	r2, [r0, #8]
 801269a:	6903      	ldr	r3, [r0, #16]
 801269c:	9a03      	ldr	r2, [sp, #12]
 801269e:	805a      	strh	r2, [r3, #2]
 80126a0:	2200      	movs	r2, #0
 80126a2:	801e      	strh	r6, [r3, #0]
 80126a4:	809a      	strh	r2, [r3, #4]
 80126a6:	80da      	strh	r2, [r3, #6]
 80126a8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80126aa:	9a03      	ldr	r2, [sp, #12]
 80126ac:	6901      	ldr	r1, [r0, #16]
 80126ae:	441a      	add	r2, r3
 80126b0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80126b4:	42b3      	cmp	r3, r6
 80126b6:	d103      	bne.n	80126c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 80126b8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80126bc:	429a      	cmp	r2, r3
 80126be:	d01a      	beq.n	80126f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80126c0:	88cc      	ldrh	r4, [r1, #6]
 80126c2:	888b      	ldrh	r3, [r1, #4]
 80126c4:	4323      	orrs	r3, r4
 80126c6:	d010      	beq.n	80126ea <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80126c8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80126cc:	2c00      	cmp	r4, #0
 80126ce:	db0c      	blt.n	80126ea <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80126d0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80126d2:	429c      	cmp	r4, r3
 80126d4:	da09      	bge.n	80126ea <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80126d6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80126da:	429c      	cmp	r4, r3
 80126dc:	bf38      	it	cc
 80126de:	3108      	addcc	r1, #8
 80126e0:	f104 0401 	add.w	r4, r4, #1
 80126e4:	bf38      	it	cc
 80126e6:	6101      	strcc	r1, [r0, #16]
 80126e8:	6084      	str	r4, [r0, #8]
 80126ea:	6903      	ldr	r3, [r0, #16]
 80126ec:	2100      	movs	r1, #0
 80126ee:	801e      	strh	r6, [r3, #0]
 80126f0:	805a      	strh	r2, [r3, #2]
 80126f2:	8099      	strh	r1, [r3, #4]
 80126f4:	80d9      	strh	r1, [r3, #6]
 80126f6:	9b06      	ldr	r3, [sp, #24]
 80126f8:	4293      	cmp	r3, r2
 80126fa:	f000 8082 	beq.w	8012802 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 80126fe:	9b08      	ldr	r3, [sp, #32]
 8012700:	9c02      	ldr	r4, [sp, #8]
 8012702:	9902      	ldr	r1, [sp, #8]
 8012704:	015b      	lsls	r3, r3, #5
 8012706:	fb93 f1f1 	sdiv	r1, r3, r1
 801270a:	fb04 3311 	mls	r3, r4, r1, r3
 801270e:	2b00      	cmp	r3, #0
 8012710:	9103      	str	r1, [sp, #12]
 8012712:	9308      	str	r3, [sp, #32]
 8012714:	da04      	bge.n	8012720 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8012716:	1e4b      	subs	r3, r1, #1
 8012718:	9303      	str	r3, [sp, #12]
 801271a:	9b08      	ldr	r3, [sp, #32]
 801271c:	4423      	add	r3, r4
 801271e:	9308      	str	r3, [sp, #32]
 8012720:	9b07      	ldr	r3, [sp, #28]
 8012722:	9902      	ldr	r1, [sp, #8]
 8012724:	1a5b      	subs	r3, r3, r1
 8012726:	9307      	str	r3, [sp, #28]
 8012728:	9b01      	ldr	r3, [sp, #4]
 801272a:	f1c3 0320 	rsb	r3, r3, #32
 801272e:	930e      	str	r3, [sp, #56]	; 0x38
 8012730:	990e      	ldr	r1, [sp, #56]	; 0x38
 8012732:	9b01      	ldr	r3, [sp, #4]
 8012734:	1a5b      	subs	r3, r3, r1
 8012736:	464f      	mov	r7, r9
 8012738:	930a      	str	r3, [sp, #40]	; 0x28
 801273a:	2600      	movs	r6, #0
 801273c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8012740:	185b      	adds	r3, r3, r1
 8012742:	bf58      	it	pl
 8012744:	9902      	ldrpl	r1, [sp, #8]
 8012746:	9307      	str	r3, [sp, #28]
 8012748:	bf5d      	ittte	pl
 801274a:	1a5b      	subpl	r3, r3, r1
 801274c:	9307      	strpl	r3, [sp, #28]
 801274e:	9b03      	ldrpl	r3, [sp, #12]
 8012750:	9903      	ldrmi	r1, [sp, #12]
 8012752:	bf58      	it	pl
 8012754:	1c59      	addpl	r1, r3, #1
 8012756:	4489      	add	r9, r1
 8012758:	2a00      	cmp	r2, #0
 801275a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801275e:	db2e      	blt.n	80127be <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012760:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012762:	4293      	cmp	r3, r2
 8012764:	dd2b      	ble.n	80127be <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012766:	9c01      	ldr	r4, [sp, #4]
 8012768:	6905      	ldr	r5, [r0, #16]
 801276a:	46a0      	mov	r8, r4
 801276c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801276e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8012772:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8012776:	45a0      	cmp	r8, r4
 8012778:	f040 814f 	bne.w	8012a1a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 801277c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8012780:	4551      	cmp	r1, sl
 8012782:	d103      	bne.n	801278c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8012784:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8012788:	4291      	cmp	r1, r2
 801278a:	d018      	beq.n	80127be <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801278c:	ea5c 010e 	orrs.w	r1, ip, lr
 8012790:	d00f      	beq.n	80127b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012792:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8012796:	2900      	cmp	r1, #0
 8012798:	db0b      	blt.n	80127b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801279a:	428b      	cmp	r3, r1
 801279c:	dd09      	ble.n	80127b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801279e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 80127a2:	4299      	cmp	r1, r3
 80127a4:	bf38      	it	cc
 80127a6:	3508      	addcc	r5, #8
 80127a8:	f101 0101 	add.w	r1, r1, #1
 80127ac:	bf38      	it	cc
 80127ae:	6105      	strcc	r5, [r0, #16]
 80127b0:	6081      	str	r1, [r0, #8]
 80127b2:	6903      	ldr	r3, [r0, #16]
 80127b4:	f8a3 a000 	strh.w	sl, [r3]
 80127b8:	805a      	strh	r2, [r3, #2]
 80127ba:	809e      	strh	r6, [r3, #4]
 80127bc:	80de      	strh	r6, [r3, #6]
 80127be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80127c0:	6901      	ldr	r1, [r0, #16]
 80127c2:	441a      	add	r2, r3
 80127c4:	88cc      	ldrh	r4, [r1, #6]
 80127c6:	888b      	ldrh	r3, [r1, #4]
 80127c8:	4323      	orrs	r3, r4
 80127ca:	d010      	beq.n	80127ee <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80127cc:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80127d0:	2c00      	cmp	r4, #0
 80127d2:	db0c      	blt.n	80127ee <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80127d4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80127d6:	429c      	cmp	r4, r3
 80127d8:	da09      	bge.n	80127ee <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80127da:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80127de:	429c      	cmp	r4, r3
 80127e0:	bf38      	it	cc
 80127e2:	3108      	addcc	r1, #8
 80127e4:	f104 0401 	add.w	r4, r4, #1
 80127e8:	bf38      	it	cc
 80127ea:	6101      	strcc	r1, [r0, #16]
 80127ec:	6084      	str	r4, [r0, #8]
 80127ee:	6903      	ldr	r3, [r0, #16]
 80127f0:	f8a3 a000 	strh.w	sl, [r3]
 80127f4:	805a      	strh	r2, [r3, #2]
 80127f6:	809e      	strh	r6, [r3, #4]
 80127f8:	80de      	strh	r6, [r3, #6]
 80127fa:	9b06      	ldr	r3, [sp, #24]
 80127fc:	4293      	cmp	r3, r2
 80127fe:	464f      	mov	r7, r9
 8012800:	d19c      	bne.n	801273c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8012802:	9b01      	ldr	r3, [sp, #4]
 8012804:	6907      	ldr	r7, [r0, #16]
 8012806:	f1c3 0620 	rsb	r6, r3, #32
 801280a:	9b05      	ldr	r3, [sp, #20]
 801280c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8012810:	9b04      	ldr	r3, [sp, #16]
 8012812:	429e      	cmp	r6, r3
 8012814:	f040 81cc 	bne.w	8012bb0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8012818:	f9b7 3000 	ldrsh.w	r3, [r7]
 801281c:	459e      	cmp	lr, r3
 801281e:	d104      	bne.n	801282a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8012820:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8012824:	429a      	cmp	r2, r3
 8012826:	f43f ae36 	beq.w	8012496 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801282a:	88f9      	ldrh	r1, [r7, #6]
 801282c:	88bb      	ldrh	r3, [r7, #4]
 801282e:	430b      	orrs	r3, r1
 8012830:	d010      	beq.n	8012854 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012832:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8012836:	2b00      	cmp	r3, #0
 8012838:	db0c      	blt.n	8012854 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801283a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801283c:	428b      	cmp	r3, r1
 801283e:	da09      	bge.n	8012854 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012840:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8012844:	428b      	cmp	r3, r1
 8012846:	bf38      	it	cc
 8012848:	3708      	addcc	r7, #8
 801284a:	f103 0301 	add.w	r3, r3, #1
 801284e:	bf38      	it	cc
 8012850:	6107      	strcc	r7, [r0, #16]
 8012852:	6083      	str	r3, [r0, #8]
 8012854:	6903      	ldr	r3, [r0, #16]
 8012856:	f8a3 e000 	strh.w	lr, [r3]
 801285a:	e5ff      	b.n	801245c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 801285c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801285e:	9c03      	ldr	r4, [sp, #12]
 8012860:	42a2      	cmp	r2, r4
 8012862:	f6ff ae18 	blt.w	8012496 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012866:	9c06      	ldr	r4, [sp, #24]
 8012868:	42a2      	cmp	r2, r4
 801286a:	bfb8      	it	lt
 801286c:	3201      	addlt	r2, #1
 801286e:	9c08      	ldr	r4, [sp, #32]
 8012870:	bfb8      	it	lt
 8012872:	9206      	strlt	r2, [sp, #24]
 8012874:	f1c3 0220 	rsb	r2, r3, #32
 8012878:	4362      	muls	r2, r4
 801287a:	2401      	movs	r4, #1
 801287c:	940b      	str	r4, [sp, #44]	; 0x2c
 801287e:	2420      	movs	r4, #32
 8012880:	e6d5      	b.n	801262e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8012882:	f009 021f 	and.w	r2, r9, #31
 8012886:	ea4f 1861 	mov.w	r8, r1, asr #5
 801288a:	920c      	str	r2, [sp, #48]	; 0x30
 801288c:	9a01      	ldr	r2, [sp, #4]
 801288e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8012892:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8012896:	45b0      	cmp	r8, r6
 8012898:	f001 011f 	and.w	r1, r1, #31
 801289c:	eba2 0203 	sub.w	r2, r2, r3
 80128a0:	d108      	bne.n	80128b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 80128a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80128a4:	4419      	add	r1, r3
 80128a6:	4496      	add	lr, r2
 80128a8:	fb02 a101 	mla	r1, r2, r1, sl
 80128ac:	f8a5 e004 	strh.w	lr, [r5, #4]
 80128b0:	80e9      	strh	r1, [r5, #6]
 80128b2:	e6f9      	b.n	80126a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80128b4:	2c00      	cmp	r4, #0
 80128b6:	f2c0 80a9 	blt.w	8012a0c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 80128ba:	2701      	movs	r7, #1
 80128bc:	f1c1 0c20 	rsb	ip, r1, #32
 80128c0:	970a      	str	r7, [sp, #40]	; 0x28
 80128c2:	fb02 f20c 	mul.w	r2, r2, ip
 80128c6:	2720      	movs	r7, #32
 80128c8:	9709      	str	r7, [sp, #36]	; 0x24
 80128ca:	fb92 fcf4 	sdiv	ip, r2, r4
 80128ce:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80128d0:	fb04 221c 	mls	r2, r4, ip, r2
 80128d4:	2a00      	cmp	r2, #0
 80128d6:	bfb8      	it	lt
 80128d8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 80128dc:	4439      	add	r1, r7
 80128de:	fb0c a101 	mla	r1, ip, r1, sl
 80128e2:	80e9      	strh	r1, [r5, #6]
 80128e4:	44e6      	add	lr, ip
 80128e6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80128e8:	f8a5 e004 	strh.w	lr, [r5, #4]
 80128ec:	eb08 0501 	add.w	r5, r8, r1
 80128f0:	6901      	ldr	r1, [r0, #16]
 80128f2:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 80128f6:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 80128fa:	bfb8      	it	lt
 80128fc:	1912      	addlt	r2, r2, r4
 80128fe:	ea58 070e 	orrs.w	r7, r8, lr
 8012902:	d010      	beq.n	8012926 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012904:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8012908:	f1be 0f00 	cmp.w	lr, #0
 801290c:	db0b      	blt.n	8012926 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801290e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012910:	45be      	cmp	lr, r7
 8012912:	da08      	bge.n	8012926 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012914:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012918:	45be      	cmp	lr, r7
 801291a:	bf3c      	itt	cc
 801291c:	3108      	addcc	r1, #8
 801291e:	6101      	strcc	r1, [r0, #16]
 8012920:	f10e 0101 	add.w	r1, lr, #1
 8012924:	6081      	str	r1, [r0, #8]
 8012926:	6901      	ldr	r1, [r0, #16]
 8012928:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801292c:	800d      	strh	r5, [r1, #0]
 801292e:	f04f 0e00 	mov.w	lr, #0
 8012932:	42ae      	cmp	r6, r5
 8012934:	f8a1 8002 	strh.w	r8, [r1, #2]
 8012938:	f8a1 e004 	strh.w	lr, [r1, #4]
 801293c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8012940:	4463      	add	r3, ip
 8012942:	d054      	beq.n	80129ee <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8012944:	9901      	ldr	r1, [sp, #4]
 8012946:	1ac9      	subs	r1, r1, r3
 8012948:	4461      	add	r1, ip
 801294a:	0149      	lsls	r1, r1, #5
 801294c:	fb91 fef4 	sdiv	lr, r1, r4
 8012950:	fb04 111e 	mls	r1, r4, lr, r1
 8012954:	2900      	cmp	r1, #0
 8012956:	bfb8      	it	lt
 8012958:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801295c:	f10e 0701 	add.w	r7, lr, #1
 8012960:	bfb8      	it	lt
 8012962:	1909      	addlt	r1, r1, r4
 8012964:	1b12      	subs	r2, r2, r4
 8012966:	970d      	str	r7, [sp, #52]	; 0x34
 8012968:	f8d0 a010 	ldr.w	sl, [r0, #16]
 801296c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801296e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8012972:	1852      	adds	r2, r2, r1
 8012974:	bf54      	ite	pl
 8012976:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 801297a:	46f4      	movmi	ip, lr
 801297c:	44e3      	add	fp, ip
 801297e:	f8aa b004 	strh.w	fp, [sl, #4]
 8012982:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8012986:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 801298a:	f8aa b006 	strh.w	fp, [sl, #6]
 801298e:	4463      	add	r3, ip
 8012990:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012994:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012998:	f8bc a004 	ldrh.w	sl, [ip, #4]
 801299c:	bf58      	it	pl
 801299e:	1b12      	subpl	r2, r2, r4
 80129a0:	443d      	add	r5, r7
 80129a2:	ea5b 070a 	orrs.w	r7, fp, sl
 80129a6:	d014      	beq.n	80129d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80129a8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 80129ac:	f1ba 0f00 	cmp.w	sl, #0
 80129b0:	db0f      	blt.n	80129d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80129b2:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80129b4:	45ba      	cmp	sl, r7
 80129b6:	da0c      	bge.n	80129d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80129b8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 80129bc:	45ba      	cmp	sl, r7
 80129be:	bf38      	it	cc
 80129c0:	f10c 0c08 	addcc.w	ip, ip, #8
 80129c4:	f10a 0a01 	add.w	sl, sl, #1
 80129c8:	bf38      	it	cc
 80129ca:	f8c0 c010 	strcc.w	ip, [r0, #16]
 80129ce:	f8c0 a008 	str.w	sl, [r0, #8]
 80129d2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80129d6:	f04f 0700 	mov.w	r7, #0
 80129da:	42ae      	cmp	r6, r5
 80129dc:	f8ac 5000 	strh.w	r5, [ip]
 80129e0:	f8ac 8002 	strh.w	r8, [ip, #2]
 80129e4:	f8ac 7004 	strh.w	r7, [ip, #4]
 80129e8:	f8ac 7006 	strh.w	r7, [ip, #6]
 80129ec:	d1bc      	bne.n	8012968 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 80129ee:	6904      	ldr	r4, [r0, #16]
 80129f0:	9a01      	ldr	r2, [sp, #4]
 80129f2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80129f4:	1ad3      	subs	r3, r2, r3
 80129f6:	88a2      	ldrh	r2, [r4, #4]
 80129f8:	441a      	add	r2, r3
 80129fa:	80a2      	strh	r2, [r4, #4]
 80129fc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80129fe:	3120      	adds	r1, #32
 8012a00:	1a89      	subs	r1, r1, r2
 8012a02:	88e2      	ldrh	r2, [r4, #6]
 8012a04:	fb03 2301 	mla	r3, r3, r1, r2
 8012a08:	80e3      	strh	r3, [r4, #6]
 8012a0a:	e64d      	b.n	80126a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012a0c:	f04f 37ff 	mov.w	r7, #4294967295
 8012a10:	970a      	str	r7, [sp, #40]	; 0x28
 8012a12:	434a      	muls	r2, r1
 8012a14:	4264      	negs	r4, r4
 8012a16:	2700      	movs	r7, #0
 8012a18:	e756      	b.n	80128c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8012a1a:	ea4f 1867 	mov.w	r8, r7, asr #5
 8012a1e:	f009 031f 	and.w	r3, r9, #31
 8012a22:	45d0      	cmp	r8, sl
 8012a24:	f007 071f 	and.w	r7, r7, #31
 8012a28:	930f      	str	r3, [sp, #60]	; 0x3c
 8012a2a:	fa1f fc8c 	uxth.w	ip, ip
 8012a2e:	fa1f fe8e 	uxth.w	lr, lr
 8012a32:	d10a      	bne.n	8012a4a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8012a34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012a36:	449c      	add	ip, r3
 8012a38:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012a3a:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012a3e:	441f      	add	r7, r3
 8012a40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012a42:	fb03 e707 	mla	r7, r3, r7, lr
 8012a46:	80ef      	strh	r7, [r5, #6]
 8012a48:	e6b9      	b.n	80127be <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012a4a:	2900      	cmp	r1, #0
 8012a4c:	f2c0 80a8 	blt.w	8012ba0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8012a50:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8012a52:	f1c7 0320 	rsb	r3, r7, #32
 8012a56:	4363      	muls	r3, r4
 8012a58:	2401      	movs	r4, #1
 8012a5a:	940d      	str	r4, [sp, #52]	; 0x34
 8012a5c:	2420      	movs	r4, #32
 8012a5e:	940c      	str	r4, [sp, #48]	; 0x30
 8012a60:	fb93 f4f1 	sdiv	r4, r3, r1
 8012a64:	fb01 3b14 	mls	fp, r1, r4, r3
 8012a68:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012a6a:	f1bb 0f00 	cmp.w	fp, #0
 8012a6e:	bfb8      	it	lt
 8012a70:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012a74:	441f      	add	r7, r3
 8012a76:	fb04 e707 	mla	r7, r4, r7, lr
 8012a7a:	44a4      	add	ip, r4
 8012a7c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012a80:	80ef      	strh	r7, [r5, #6]
 8012a82:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012a86:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012a88:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8012a8c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012a90:	bfb8      	it	lt
 8012a92:	448b      	addlt	fp, r1
 8012a94:	eb08 0503 	add.w	r5, r8, r3
 8012a98:	ea5e 0307 	orrs.w	r3, lr, r7
 8012a9c:	d011      	beq.n	8012ac2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012a9e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8012aa2:	f1be 0f00 	cmp.w	lr, #0
 8012aa6:	db0c      	blt.n	8012ac2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012aa8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012aaa:	45be      	cmp	lr, r7
 8012aac:	da09      	bge.n	8012ac2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012aae:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012ab2:	45be      	cmp	lr, r7
 8012ab4:	bf3c      	itt	cc
 8012ab6:	f10c 0708 	addcc.w	r7, ip, #8
 8012aba:	6107      	strcc	r7, [r0, #16]
 8012abc:	f10e 0701 	add.w	r7, lr, #1
 8012ac0:	6087      	str	r7, [r0, #8]
 8012ac2:	6907      	ldr	r7, [r0, #16]
 8012ac4:	b213      	sxth	r3, r2
 8012ac6:	9310      	str	r3, [sp, #64]	; 0x40
 8012ac8:	807b      	strh	r3, [r7, #2]
 8012aca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012acc:	803d      	strh	r5, [r7, #0]
 8012ace:	4555      	cmp	r5, sl
 8012ad0:	80be      	strh	r6, [r7, #4]
 8012ad2:	80fe      	strh	r6, [r7, #6]
 8012ad4:	eb04 0c03 	add.w	ip, r4, r3
 8012ad8:	d051      	beq.n	8012b7e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8012ada:	9b01      	ldr	r3, [sp, #4]
 8012adc:	eba3 070c 	sub.w	r7, r3, ip
 8012ae0:	443c      	add	r4, r7
 8012ae2:	0164      	lsls	r4, r4, #5
 8012ae4:	fb94 f8f1 	sdiv	r8, r4, r1
 8012ae8:	fb01 4418 	mls	r4, r1, r8, r4
 8012aec:	2c00      	cmp	r4, #0
 8012aee:	bfb8      	it	lt
 8012af0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012af4:	ebab 0301 	sub.w	r3, fp, r1
 8012af8:	f108 0701 	add.w	r7, r8, #1
 8012afc:	bfb8      	it	lt
 8012afe:	1864      	addlt	r4, r4, r1
 8012b00:	9309      	str	r3, [sp, #36]	; 0x24
 8012b02:	9711      	str	r7, [sp, #68]	; 0x44
 8012b04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012b06:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8012b0a:	191b      	adds	r3, r3, r4
 8012b0c:	bf58      	it	pl
 8012b0e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8012b10:	f8be b004 	ldrh.w	fp, [lr, #4]
 8012b14:	9309      	str	r3, [sp, #36]	; 0x24
 8012b16:	bf48      	it	mi
 8012b18:	4647      	movmi	r7, r8
 8012b1a:	44bb      	add	fp, r7
 8012b1c:	f8ae b004 	strh.w	fp, [lr, #4]
 8012b20:	f8be b006 	ldrh.w	fp, [lr, #6]
 8012b24:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012b28:	f8ae b006 	strh.w	fp, [lr, #6]
 8012b2c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8012b30:	44bc      	add	ip, r7
 8012b32:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8012b34:	f8be b006 	ldrh.w	fp, [lr, #6]
 8012b38:	443d      	add	r5, r7
 8012b3a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8012b3e:	bf5c      	itt	pl
 8012b40:	1a5b      	subpl	r3, r3, r1
 8012b42:	9309      	strpl	r3, [sp, #36]	; 0x24
 8012b44:	ea5b 0307 	orrs.w	r3, fp, r7
 8012b48:	d011      	beq.n	8012b6e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012b4a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8012b4e:	f1bb 0f00 	cmp.w	fp, #0
 8012b52:	db0c      	blt.n	8012b6e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012b54:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012b56:	45bb      	cmp	fp, r7
 8012b58:	da09      	bge.n	8012b6e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012b5a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012b5e:	45bb      	cmp	fp, r7
 8012b60:	bf3c      	itt	cc
 8012b62:	f10e 0708 	addcc.w	r7, lr, #8
 8012b66:	6107      	strcc	r7, [r0, #16]
 8012b68:	f10b 0701 	add.w	r7, fp, #1
 8012b6c:	6087      	str	r7, [r0, #8]
 8012b6e:	6907      	ldr	r7, [r0, #16]
 8012b70:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012b72:	803d      	strh	r5, [r7, #0]
 8012b74:	4555      	cmp	r5, sl
 8012b76:	807b      	strh	r3, [r7, #2]
 8012b78:	80be      	strh	r6, [r7, #4]
 8012b7a:	80fe      	strh	r6, [r7, #6]
 8012b7c:	d1c2      	bne.n	8012b04 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8012b7e:	9b01      	ldr	r3, [sp, #4]
 8012b80:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8012b82:	eba3 0c0c 	sub.w	ip, r3, ip
 8012b86:	6903      	ldr	r3, [r0, #16]
 8012b88:	8899      	ldrh	r1, [r3, #4]
 8012b8a:	4461      	add	r1, ip
 8012b8c:	8099      	strh	r1, [r3, #4]
 8012b8e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012b90:	3720      	adds	r7, #32
 8012b92:	1a7f      	subs	r7, r7, r1
 8012b94:	88d9      	ldrh	r1, [r3, #6]
 8012b96:	fb0c 1c07 	mla	ip, ip, r7, r1
 8012b9a:	f8a3 c006 	strh.w	ip, [r3, #6]
 8012b9e:	e60e      	b.n	80127be <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012ba0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012ba2:	f04f 34ff 	mov.w	r4, #4294967295
 8012ba6:	940d      	str	r4, [sp, #52]	; 0x34
 8012ba8:	437b      	muls	r3, r7
 8012baa:	4249      	negs	r1, r1
 8012bac:	2400      	movs	r4, #0
 8012bae:	e756      	b.n	8012a5e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8012bb0:	9905      	ldr	r1, [sp, #20]
 8012bb2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8012bb6:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8012bba:	f001 011f 	and.w	r1, r1, #31
 8012bbe:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8012bc2:	9102      	str	r1, [sp, #8]
 8012bc4:	9904      	ldr	r1, [sp, #16]
 8012bc6:	45f3      	cmp	fp, lr
 8012bc8:	f009 0c1f 	and.w	ip, r9, #31
 8012bcc:	eba1 0406 	sub.w	r4, r1, r6
 8012bd0:	d108      	bne.n	8012be4 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8012bd2:	9b02      	ldr	r3, [sp, #8]
 8012bd4:	449c      	add	ip, r3
 8012bd6:	44a0      	add	r8, r4
 8012bd8:	fb04 a40c 	mla	r4, r4, ip, sl
 8012bdc:	f8a7 8004 	strh.w	r8, [r7, #4]
 8012be0:	80fc      	strh	r4, [r7, #6]
 8012be2:	e458      	b.n	8012496 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012be4:	9905      	ldr	r1, [sp, #20]
 8012be6:	ebb1 0109 	subs.w	r1, r1, r9
 8012bea:	bf5b      	ittet	pl
 8012bec:	f1cc 0520 	rsbpl	r5, ip, #32
 8012bf0:	436c      	mulpl	r4, r5
 8012bf2:	2500      	movmi	r5, #0
 8012bf4:	2520      	movpl	r5, #32
 8012bf6:	bf44      	itt	mi
 8012bf8:	fb04 f40c 	mulmi.w	r4, r4, ip
 8012bfc:	4249      	negmi	r1, r1
 8012bfe:	9501      	str	r5, [sp, #4]
 8012c00:	9b01      	ldr	r3, [sp, #4]
 8012c02:	fb94 f5f1 	sdiv	r5, r4, r1
 8012c06:	fb01 4415 	mls	r4, r1, r5, r4
 8012c0a:	bf54      	ite	pl
 8012c0c:	f04f 0901 	movpl.w	r9, #1
 8012c10:	f04f 39ff 	movmi.w	r9, #4294967295
 8012c14:	2c00      	cmp	r4, #0
 8012c16:	bfb8      	it	lt
 8012c18:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8012c1c:	449c      	add	ip, r3
 8012c1e:	44a8      	add	r8, r5
 8012c20:	fb05 ac0c 	mla	ip, r5, ip, sl
 8012c24:	f8a7 8004 	strh.w	r8, [r7, #4]
 8012c28:	f8a7 c006 	strh.w	ip, [r7, #6]
 8012c2c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012c30:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8012c34:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012c38:	bfb8      	it	lt
 8012c3a:	1864      	addlt	r4, r4, r1
 8012c3c:	ea58 0707 	orrs.w	r7, r8, r7
 8012c40:	eb0b 0309 	add.w	r3, fp, r9
 8012c44:	d011      	beq.n	8012c6a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8012c46:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8012c4a:	f1b8 0f00 	cmp.w	r8, #0
 8012c4e:	db0c      	blt.n	8012c6a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8012c50:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012c52:	45b8      	cmp	r8, r7
 8012c54:	da09      	bge.n	8012c6a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8012c56:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8012c5a:	45b8      	cmp	r8, r7
 8012c5c:	bf3c      	itt	cc
 8012c5e:	f10c 0708 	addcc.w	r7, ip, #8
 8012c62:	6107      	strcc	r7, [r0, #16]
 8012c64:	f108 0701 	add.w	r7, r8, #1
 8012c68:	6087      	str	r7, [r0, #8]
 8012c6a:	6907      	ldr	r7, [r0, #16]
 8012c6c:	f04f 0c00 	mov.w	ip, #0
 8012c70:	b212      	sxth	r2, r2
 8012c72:	459e      	cmp	lr, r3
 8012c74:	803b      	strh	r3, [r7, #0]
 8012c76:	807a      	strh	r2, [r7, #2]
 8012c78:	f8a7 c004 	strh.w	ip, [r7, #4]
 8012c7c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8012c80:	442e      	add	r6, r5
 8012c82:	d04d      	beq.n	8012d20 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8012c84:	9f04      	ldr	r7, [sp, #16]
 8012c86:	1bbf      	subs	r7, r7, r6
 8012c88:	443d      	add	r5, r7
 8012c8a:	016d      	lsls	r5, r5, #5
 8012c8c:	fb95 f8f1 	sdiv	r8, r5, r1
 8012c90:	fb01 5518 	mls	r5, r1, r8, r5
 8012c94:	4565      	cmp	r5, ip
 8012c96:	bfb8      	it	lt
 8012c98:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012c9c:	f108 0701 	add.w	r7, r8, #1
 8012ca0:	bfb8      	it	lt
 8012ca2:	186d      	addlt	r5, r5, r1
 8012ca4:	1a64      	subs	r4, r4, r1
 8012ca6:	9703      	str	r7, [sp, #12]
 8012ca8:	f04f 0a00 	mov.w	sl, #0
 8012cac:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012cb0:	1964      	adds	r4, r4, r5
 8012cb2:	bf58      	it	pl
 8012cb4:	9f03      	ldrpl	r7, [sp, #12]
 8012cb6:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8012cba:	bf48      	it	mi
 8012cbc:	4647      	movmi	r7, r8
 8012cbe:	44bb      	add	fp, r7
 8012cc0:	f8ac b004 	strh.w	fp, [ip, #4]
 8012cc4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012cc8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012ccc:	f8ac b006 	strh.w	fp, [ip, #6]
 8012cd0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012cd4:	443e      	add	r6, r7
 8012cd6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012cda:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012cde:	bf58      	it	pl
 8012ce0:	1a64      	subpl	r4, r4, r1
 8012ce2:	ea5b 0707 	orrs.w	r7, fp, r7
 8012ce6:	444b      	add	r3, r9
 8012ce8:	d011      	beq.n	8012d0e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8012cea:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8012cee:	f1bb 0f00 	cmp.w	fp, #0
 8012cf2:	db0c      	blt.n	8012d0e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8012cf4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012cf6:	45bb      	cmp	fp, r7
 8012cf8:	da09      	bge.n	8012d0e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8012cfa:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012cfe:	45bb      	cmp	fp, r7
 8012d00:	bf3c      	itt	cc
 8012d02:	f10c 0708 	addcc.w	r7, ip, #8
 8012d06:	6107      	strcc	r7, [r0, #16]
 8012d08:	f10b 0701 	add.w	r7, fp, #1
 8012d0c:	6087      	str	r7, [r0, #8]
 8012d0e:	6907      	ldr	r7, [r0, #16]
 8012d10:	459e      	cmp	lr, r3
 8012d12:	803b      	strh	r3, [r7, #0]
 8012d14:	807a      	strh	r2, [r7, #2]
 8012d16:	f8a7 a004 	strh.w	sl, [r7, #4]
 8012d1a:	f8a7 a006 	strh.w	sl, [r7, #6]
 8012d1e:	d1c5      	bne.n	8012cac <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8012d20:	9b04      	ldr	r3, [sp, #16]
 8012d22:	1b9e      	subs	r6, r3, r6
 8012d24:	6903      	ldr	r3, [r0, #16]
 8012d26:	889a      	ldrh	r2, [r3, #4]
 8012d28:	4432      	add	r2, r6
 8012d2a:	809a      	strh	r2, [r3, #4]
 8012d2c:	9a02      	ldr	r2, [sp, #8]
 8012d2e:	f102 0c20 	add.w	ip, r2, #32
 8012d32:	9a01      	ldr	r2, [sp, #4]
 8012d34:	ebac 0c02 	sub.w	ip, ip, r2
 8012d38:	88da      	ldrh	r2, [r3, #6]
 8012d3a:	fb06 260c 	mla	r6, r6, ip, r2
 8012d3e:	80de      	strh	r6, [r3, #6]
 8012d40:	f7ff bba9 	b.w	8012496 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08012d44 <_ZN8touchgfx7Outline6lineToEii>:
 8012d44:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8012d46:	079b      	lsls	r3, r3, #30
 8012d48:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012d4a:	460e      	mov	r6, r1
 8012d4c:	4615      	mov	r5, r2
 8012d4e:	d511      	bpl.n	8012d74 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8012d50:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8012d54:	ea86 0701 	eor.w	r7, r6, r1
 8012d58:	ea85 0302 	eor.w	r3, r5, r2
 8012d5c:	433b      	orrs	r3, r7
 8012d5e:	d009      	beq.n	8012d74 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8012d60:	4633      	mov	r3, r6
 8012d62:	9500      	str	r5, [sp, #0]
 8012d64:	f7ff fb3e 	bl	80123e4 <_ZN8touchgfx7Outline10renderLineEiiii>
 8012d68:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8012d6a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8012d6e:	f043 0301 	orr.w	r3, r3, #1
 8012d72:	6243      	str	r3, [r0, #36]	; 0x24
 8012d74:	b003      	add	sp, #12
 8012d76:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012d78 <_ZN8touchgfx7Outline6moveToEii>:
 8012d78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012d7a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8012d7c:	4615      	mov	r5, r2
 8012d7e:	079a      	lsls	r2, r3, #30
 8012d80:	4604      	mov	r4, r0
 8012d82:	460e      	mov	r6, r1
 8012d84:	d401      	bmi.n	8012d8a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8012d86:	f7ff faf9 	bl	801237c <_ZN8touchgfx7Outline5resetEv>
 8012d8a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8012d8c:	07db      	lsls	r3, r3, #31
 8012d8e:	d504      	bpl.n	8012d9a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8012d90:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8012d94:	4620      	mov	r0, r4
 8012d96:	f7ff ffd5 	bl	8012d44 <_ZN8touchgfx7Outline6lineToEii>
 8012d9a:	6923      	ldr	r3, [r4, #16]
 8012d9c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012da0:	1170      	asrs	r0, r6, #5
 8012da2:	4290      	cmp	r0, r2
 8012da4:	ea4f 1165 	mov.w	r1, r5, asr #5
 8012da8:	d103      	bne.n	8012db2 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8012daa:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8012dae:	4291      	cmp	r1, r2
 8012db0:	d01a      	beq.n	8012de8 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8012db2:	88df      	ldrh	r7, [r3, #6]
 8012db4:	889a      	ldrh	r2, [r3, #4]
 8012db6:	433a      	orrs	r2, r7
 8012db8:	d010      	beq.n	8012ddc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8012dba:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8012dbe:	2a00      	cmp	r2, #0
 8012dc0:	db0c      	blt.n	8012ddc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8012dc2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8012dc4:	42ba      	cmp	r2, r7
 8012dc6:	da09      	bge.n	8012ddc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8012dc8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8012dcc:	42ba      	cmp	r2, r7
 8012dce:	bf38      	it	cc
 8012dd0:	3308      	addcc	r3, #8
 8012dd2:	f102 0201 	add.w	r2, r2, #1
 8012dd6:	bf38      	it	cc
 8012dd8:	6123      	strcc	r3, [r4, #16]
 8012dda:	60a2      	str	r2, [r4, #8]
 8012ddc:	6923      	ldr	r3, [r4, #16]
 8012dde:	2200      	movs	r2, #0
 8012de0:	8018      	strh	r0, [r3, #0]
 8012de2:	8059      	strh	r1, [r3, #2]
 8012de4:	809a      	strh	r2, [r3, #4]
 8012de6:	80da      	strh	r2, [r3, #6]
 8012de8:	6166      	str	r6, [r4, #20]
 8012dea:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8012dee:	6225      	str	r5, [r4, #32]
 8012df0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08012df2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8012df2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012df6:	b0d0      	sub	sp, #320	; 0x140
 8012df8:	466c      	mov	r4, sp
 8012dfa:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8012dfe:	4627      	mov	r7, r4
 8012e00:	1a0d      	subs	r5, r1, r0
 8012e02:	2d48      	cmp	r5, #72	; 0x48
 8012e04:	f100 0308 	add.w	r3, r0, #8
 8012e08:	f340 80d5 	ble.w	8012fb6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8012e0c:	112d      	asrs	r5, r5, #4
 8012e0e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8012e12:	f9b0 9000 	ldrsh.w	r9, [r0]
 8012e16:	6816      	ldr	r6, [r2, #0]
 8012e18:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8012e1c:	6006      	str	r6, [r0, #0]
 8012e1e:	6856      	ldr	r6, [r2, #4]
 8012e20:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8012e24:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8012e28:	6046      	str	r6, [r0, #4]
 8012e2a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8012e2e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8012e32:	f8a2 e004 	strh.w	lr, [r2, #4]
 8012e36:	f8a2 c006 	strh.w	ip, [r2, #6]
 8012e3a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8012e3e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8012e42:	4565      	cmp	r5, ip
 8012e44:	f1a1 0208 	sub.w	r2, r1, #8
 8012e48:	db06      	blt.n	8012e58 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8012e4a:	d119      	bne.n	8012e80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8012e4c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8012e50:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8012e54:	42ae      	cmp	r6, r5
 8012e56:	dd13      	ble.n	8012e80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8012e58:	460e      	mov	r6, r1
 8012e5a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8012e5e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8012e62:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8012e66:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8012e6a:	601d      	str	r5, [r3, #0]
 8012e6c:	6875      	ldr	r5, [r6, #4]
 8012e6e:	605d      	str	r5, [r3, #4]
 8012e70:	f821 9c08 	strh.w	r9, [r1, #-8]
 8012e74:	f821 cc06 	strh.w	ip, [r1, #-6]
 8012e78:	f821 8c04 	strh.w	r8, [r1, #-4]
 8012e7c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8012e80:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8012e84:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8012e88:	42ae      	cmp	r6, r5
 8012e8a:	db06      	blt.n	8012e9a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8012e8c:	d116      	bne.n	8012ebc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8012e8e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8012e92:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8012e96:	45ac      	cmp	ip, r5
 8012e98:	da10      	bge.n	8012ebc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8012e9a:	681d      	ldr	r5, [r3, #0]
 8012e9c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8012ea0:	6005      	str	r5, [r0, #0]
 8012ea2:	685d      	ldr	r5, [r3, #4]
 8012ea4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8012ea8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8012eac:	f8a0 8008 	strh.w	r8, [r0, #8]
 8012eb0:	6045      	str	r5, [r0, #4]
 8012eb2:	8146      	strh	r6, [r0, #10]
 8012eb4:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8012eb8:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8012ebc:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8012ec0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8012ec4:	4565      	cmp	r5, ip
 8012ec6:	db06      	blt.n	8012ed6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8012ec8:	d119      	bne.n	8012efe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8012eca:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8012ece:	f9b0 5000 	ldrsh.w	r5, [r0]
 8012ed2:	42ae      	cmp	r6, r5
 8012ed4:	da13      	bge.n	8012efe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8012ed6:	460e      	mov	r6, r1
 8012ed8:	f9b0 9000 	ldrsh.w	r9, [r0]
 8012edc:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8012ee0:	6005      	str	r5, [r0, #0]
 8012ee2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8012ee6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8012eea:	6875      	ldr	r5, [r6, #4]
 8012eec:	6045      	str	r5, [r0, #4]
 8012eee:	f821 9c08 	strh.w	r9, [r1, #-8]
 8012ef2:	f821 cc06 	strh.w	ip, [r1, #-6]
 8012ef6:	f821 8c04 	strh.w	r8, [r1, #-4]
 8012efa:	f821 ec02 	strh.w	lr, [r1, #-2]
 8012efe:	3308      	adds	r3, #8
 8012f00:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8012f04:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8012f08:	45e6      	cmp	lr, ip
 8012f0a:	dbf8      	blt.n	8012efe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8012f0c:	d105      	bne.n	8012f1a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8012f0e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8012f12:	f9b0 5000 	ldrsh.w	r5, [r0]
 8012f16:	42ae      	cmp	r6, r5
 8012f18:	dbf1      	blt.n	8012efe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8012f1a:	4615      	mov	r5, r2
 8012f1c:	3a08      	subs	r2, #8
 8012f1e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8012f22:	45b4      	cmp	ip, r6
 8012f24:	dbf9      	blt.n	8012f1a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8012f26:	d105      	bne.n	8012f34 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8012f28:	f9b0 8000 	ldrsh.w	r8, [r0]
 8012f2c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8012f30:	45b0      	cmp	r8, r6
 8012f32:	dbf2      	blt.n	8012f1a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8012f34:	4293      	cmp	r3, r2
 8012f36:	f1a5 0608 	sub.w	r6, r5, #8
 8012f3a:	d816      	bhi.n	8012f6a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8012f3c:	f8d6 c000 	ldr.w	ip, [r6]
 8012f40:	f9b3 a000 	ldrsh.w	sl, [r3]
 8012f44:	f8c3 c000 	str.w	ip, [r3]
 8012f48:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8012f4c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8012f50:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8012f54:	f8c3 c004 	str.w	ip, [r3, #4]
 8012f58:	f825 ac08 	strh.w	sl, [r5, #-8]
 8012f5c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8012f60:	f825 9c04 	strh.w	r9, [r5, #-4]
 8012f64:	f825 8c02 	strh.w	r8, [r5, #-2]
 8012f68:	e7c9      	b.n	8012efe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8012f6a:	f8d6 e000 	ldr.w	lr, [r6]
 8012f6e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8012f72:	f8c0 e000 	str.w	lr, [r0]
 8012f76:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8012f7a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8012f7e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8012f82:	f8c0 e004 	str.w	lr, [r0, #4]
 8012f86:	f825 ac08 	strh.w	sl, [r5, #-8]
 8012f8a:	f825 cc06 	strh.w	ip, [r5, #-6]
 8012f8e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8012f92:	f825 8c02 	strh.w	r8, [r5, #-2]
 8012f96:	1acd      	subs	r5, r1, r3
 8012f98:	1a16      	subs	r6, r2, r0
 8012f9a:	10ed      	asrs	r5, r5, #3
 8012f9c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8012fa0:	bfb5      	itete	lt
 8012fa2:	e9c4 0200 	strdlt	r0, r2, [r4]
 8012fa6:	e9c4 3100 	strdge	r3, r1, [r4]
 8012faa:	460a      	movlt	r2, r1
 8012fac:	4603      	movge	r3, r0
 8012fae:	3408      	adds	r4, #8
 8012fb0:	4618      	mov	r0, r3
 8012fb2:	4611      	mov	r1, r2
 8012fb4:	e724      	b.n	8012e00 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8012fb6:	4299      	cmp	r1, r3
 8012fb8:	d928      	bls.n	801300c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 8012fba:	f1a3 0210 	sub.w	r2, r3, #16
 8012fbe:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8012fc2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8012fc6:	45ac      	cmp	ip, r5
 8012fc8:	db06      	blt.n	8012fd8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 8012fca:	d11d      	bne.n	8013008 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8012fcc:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8012fd0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8012fd4:	42ae      	cmp	r6, r5
 8012fd6:	da17      	bge.n	8013008 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8012fd8:	4615      	mov	r5, r2
 8012fda:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8012fde:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8012fe2:	6116      	str	r6, [r2, #16]
 8012fe4:	686e      	ldr	r6, [r5, #4]
 8012fe6:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8012fea:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8012fee:	f8a2 9008 	strh.w	r9, [r2, #8]
 8012ff2:	42a8      	cmp	r0, r5
 8012ff4:	6156      	str	r6, [r2, #20]
 8012ff6:	f8a2 c00a 	strh.w	ip, [r2, #10]
 8012ffa:	f8a2 800c 	strh.w	r8, [r2, #12]
 8012ffe:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8013002:	f1a2 0208 	sub.w	r2, r2, #8
 8013006:	d1da      	bne.n	8012fbe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8013008:	3308      	adds	r3, #8
 801300a:	e7d4      	b.n	8012fb6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801300c:	42bc      	cmp	r4, r7
 801300e:	d903      	bls.n	8013018 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8013010:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8013014:	3c08      	subs	r4, #8
 8013016:	e6f3      	b.n	8012e00 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8013018:	b050      	add	sp, #320	; 0x140
 801301a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801301e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 801301e:	b510      	push	{r4, lr}
 8013020:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013022:	07da      	lsls	r2, r3, #31
 8013024:	4604      	mov	r4, r0
 8013026:	d507      	bpl.n	8013038 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8013028:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801302c:	f7ff fe8a 	bl	8012d44 <_ZN8touchgfx7Outline6lineToEii>
 8013030:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013032:	f023 0301 	bic.w	r3, r3, #1
 8013036:	6243      	str	r3, [r0, #36]	; 0x24
 8013038:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801303a:	079b      	lsls	r3, r3, #30
 801303c:	d521      	bpl.n	8013082 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 801303e:	6923      	ldr	r3, [r4, #16]
 8013040:	88d9      	ldrh	r1, [r3, #6]
 8013042:	889a      	ldrh	r2, [r3, #4]
 8013044:	430a      	orrs	r2, r1
 8013046:	d010      	beq.n	801306a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013048:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801304c:	2a00      	cmp	r2, #0
 801304e:	db0c      	blt.n	801306a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013050:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8013052:	428a      	cmp	r2, r1
 8013054:	da09      	bge.n	801306a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013056:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801305a:	4291      	cmp	r1, r2
 801305c:	bf88      	it	hi
 801305e:	3308      	addhi	r3, #8
 8013060:	f102 0201 	add.w	r2, r2, #1
 8013064:	bf88      	it	hi
 8013066:	6123      	strhi	r3, [r4, #16]
 8013068:	60a2      	str	r2, [r4, #8]
 801306a:	68a1      	ldr	r1, [r4, #8]
 801306c:	b129      	cbz	r1, 801307a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801306e:	6863      	ldr	r3, [r4, #4]
 8013070:	4299      	cmp	r1, r3
 8013072:	d802      	bhi.n	801307a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8013074:	68e0      	ldr	r0, [r4, #12]
 8013076:	f7ff febc 	bl	8012df2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801307a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801307c:	f023 0302 	bic.w	r3, r3, #2
 8013080:	6263      	str	r3, [r4, #36]	; 0x24
 8013082:	68e0      	ldr	r0, [r4, #12]
 8013084:	bd10      	pop	{r4, pc}
	...

08013088 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8013088:	4b02      	ldr	r3, [pc, #8]	; (8013094 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 801308a:	6018      	str	r0, [r3, #0]
 801308c:	4b02      	ldr	r3, [pc, #8]	; (8013098 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 801308e:	6019      	str	r1, [r3, #0]
 8013090:	4770      	bx	lr
 8013092:	bf00      	nop
 8013094:	200137c4 	.word	0x200137c4
 8013098:	200137c8 	.word	0x200137c8

0801309c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 801309c:	4a02      	ldr	r2, [pc, #8]	; (80130a8 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 801309e:	2300      	movs	r3, #0
 80130a0:	6013      	str	r3, [r2, #0]
 80130a2:	4a02      	ldr	r2, [pc, #8]	; (80130ac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 80130a4:	6013      	str	r3, [r2, #0]
 80130a6:	4770      	bx	lr
 80130a8:	200137c4 	.word	0x200137c4
 80130ac:	200137c8 	.word	0x200137c8

080130b0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 80130b0:	4b01      	ldr	r3, [pc, #4]	; (80130b8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 80130b2:	6818      	ldr	r0, [r3, #0]
 80130b4:	4770      	bx	lr
 80130b6:	bf00      	nop
 80130b8:	200137c4 	.word	0x200137c4

080130bc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 80130bc:	4b01      	ldr	r3, [pc, #4]	; (80130c4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 80130be:	6818      	ldr	r0, [r3, #0]
 80130c0:	4770      	bx	lr
 80130c2:	bf00      	nop
 80130c4:	200137c8 	.word	0x200137c8

080130c8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80130c8:	b510      	push	{r4, lr}
 80130ca:	6803      	ldr	r3, [r0, #0]
 80130cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80130ce:	460c      	mov	r4, r1
 80130d0:	4798      	blx	r3
 80130d2:	1b03      	subs	r3, r0, r4
 80130d4:	4258      	negs	r0, r3
 80130d6:	4158      	adcs	r0, r3
 80130d8:	bd10      	pop	{r4, pc}
	...

080130dc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80130dc:	4b01      	ldr	r3, [pc, #4]	; (80130e4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80130de:	6019      	str	r1, [r3, #0]
 80130e0:	4770      	bx	lr
 80130e2:	bf00      	nop
 80130e4:	200137cc 	.word	0x200137cc

080130e8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80130e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80130ec:	4696      	mov	lr, r2
 80130ee:	4605      	mov	r5, r0
 80130f0:	4614      	mov	r4, r2
 80130f2:	460e      	mov	r6, r1
 80130f4:	461f      	mov	r7, r3
 80130f6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80130fa:	b097      	sub	sp, #92	; 0x5c
 80130fc:	f10d 0c1c 	add.w	ip, sp, #28
 8013100:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013104:	f8de 3000 	ldr.w	r3, [lr]
 8013108:	f8cc 3000 	str.w	r3, [ip]
 801310c:	f104 0e14 	add.w	lr, r4, #20
 8013110:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013114:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8013118:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801311c:	f8de 3000 	ldr.w	r3, [lr]
 8013120:	f8cc 3000 	str.w	r3, [ip]
 8013124:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013128:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801312c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8013130:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013134:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8013138:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801313c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8013140:	f8de 3000 	ldr.w	r3, [lr]
 8013144:	f8cc 3000 	str.w	r3, [ip]
 8013148:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801314a:	682b      	ldr	r3, [r5, #0]
 801314c:	9201      	str	r2, [sp, #4]
 801314e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8013152:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8013154:	9200      	str	r2, [sp, #0]
 8013156:	f8cd 8008 	str.w	r8, [sp, #8]
 801315a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801315e:	aa07      	add	r2, sp, #28
 8013160:	463b      	mov	r3, r7
 8013162:	4631      	mov	r1, r6
 8013164:	4628      	mov	r0, r5
 8013166:	47d8      	blx	fp
 8013168:	46a6      	mov	lr, r4
 801316a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801316e:	f10d 0c1c 	add.w	ip, sp, #28
 8013172:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013176:	f8de 3000 	ldr.w	r3, [lr]
 801317a:	f8cc 3000 	str.w	r3, [ip]
 801317e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013182:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013186:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801318a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801318e:	343c      	adds	r4, #60	; 0x3c
 8013190:	f8de 3000 	ldr.w	r3, [lr]
 8013194:	f8cc 3000 	str.w	r3, [ip]
 8013198:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801319a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801319e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80131a2:	6823      	ldr	r3, [r4, #0]
 80131a4:	f8cc 3000 	str.w	r3, [ip]
 80131a8:	682b      	ldr	r3, [r5, #0]
 80131aa:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80131ae:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80131b0:	9201      	str	r2, [sp, #4]
 80131b2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80131b4:	9200      	str	r2, [sp, #0]
 80131b6:	f8cd 8008 	str.w	r8, [sp, #8]
 80131ba:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80131bc:	aa07      	add	r2, sp, #28
 80131be:	463b      	mov	r3, r7
 80131c0:	4631      	mov	r1, r6
 80131c2:	4628      	mov	r0, r5
 80131c4:	47a0      	blx	r4
 80131c6:	b017      	add	sp, #92	; 0x5c
 80131c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080131cc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80131cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80131d0:	b08d      	sub	sp, #52	; 0x34
 80131d2:	4688      	mov	r8, r1
 80131d4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80131d6:	f8d3 c000 	ldr.w	ip, [r3]
 80131da:	680f      	ldr	r7, [r1, #0]
 80131dc:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 80131e0:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 80131e4:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 80131e8:	edd3 6a07 	vldr	s13, [r3, #28]
 80131ec:	9918      	ldr	r1, [sp, #96]	; 0x60
 80131ee:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 80131f2:	f9b1 9000 	ldrsh.w	r9, [r1]
 80131f6:	f9ba 1000 	ldrsh.w	r1, [sl]
 80131fa:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 80131fe:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8013202:	eba7 070c 	sub.w	r7, r7, ip
 8013206:	42bc      	cmp	r4, r7
 8013208:	bfa8      	it	ge
 801320a:	463c      	movge	r4, r7
 801320c:	ee07 4a90 	vmov	s15, r4
 8013210:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8013214:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8013218:	ee25 4a04 	vmul.f32	s8, s10, s8
 801321c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8013220:	ee25 5a27 	vmul.f32	s10, s10, s15
 8013224:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8013228:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801322c:	eb09 0e0c 	add.w	lr, r9, ip
 8013230:	4571      	cmp	r1, lr
 8013232:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8013236:	ee32 1a05 	vadd.f32	s2, s4, s10
 801323a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801323e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013242:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013246:	f340 808d 	ble.w	8013364 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801324a:	eba1 060e 	sub.w	r6, r1, lr
 801324e:	fb96 f5f4 	sdiv	r5, r6, r4
 8013252:	ee07 5a10 	vmov	s14, r5
 8013256:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801325a:	2d00      	cmp	r5, #0
 801325c:	fb04 6615 	mls	r6, r4, r5, r6
 8013260:	eea7 0a04 	vfma.f32	s0, s14, s8
 8013264:	eee7 0a24 	vfma.f32	s1, s14, s9
 8013268:	eea7 1a05 	vfma.f32	s2, s14, s10
 801326c:	dd13      	ble.n	8013296 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801326e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8013272:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8013276:	eef5 6a40 	vcmp.f32	s13, #0.0
 801327a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801327e:	bf18      	it	ne
 8013280:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8013284:	ee31 2a45 	vsub.f32	s4, s2, s10
 8013288:	bf08      	it	eq
 801328a:	eeb0 7a67 	vmoveq.f32	s14, s15
 801328e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013292:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013296:	fb05 f204 	mul.w	r2, r5, r4
 801329a:	1abf      	subs	r7, r7, r2
 801329c:	4494      	add	ip, r2
 801329e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80132a2:	4411      	add	r1, r2
 80132a4:	eb09 020c 	add.w	r2, r9, ip
 80132a8:	443a      	add	r2, r7
 80132aa:	b209      	sxth	r1, r1
 80132ac:	428a      	cmp	r2, r1
 80132ae:	bfc4      	itt	gt
 80132b0:	eba1 0209 	subgt.w	r2, r1, r9
 80132b4:	eba2 070c 	subgt.w	r7, r2, ip
 80132b8:	2f00      	cmp	r7, #0
 80132ba:	dd50      	ble.n	801335e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80132bc:	fb97 f1f4 	sdiv	r1, r7, r4
 80132c0:	fb04 7211 	mls	r2, r4, r1, r7
 80132c4:	b90a      	cbnz	r2, 80132ca <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80132c6:	3901      	subs	r1, #1
 80132c8:	4622      	mov	r2, r4
 80132ca:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80132ce:	6840      	ldr	r0, [r0, #4]
 80132d0:	900b      	str	r0, [sp, #44]	; 0x2c
 80132d2:	f8d0 a000 	ldr.w	sl, [r0]
 80132d6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80132d8:	9008      	str	r0, [sp, #32]
 80132da:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80132de:	9818      	ldr	r0, [sp, #96]	; 0x60
 80132e0:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 80132e4:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80132e8:	695b      	ldr	r3, [r3, #20]
 80132ea:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80132ec:	445b      	add	r3, fp
 80132ee:	eef0 6a42 	vmov.f32	s13, s4
 80132f2:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80132f6:	ee21 3a23 	vmul.f32	s6, s2, s7
 80132fa:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80132fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013302:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013306:	9307      	str	r3, [sp, #28]
 8013308:	ee17 7a90 	vmov	r7, s15
 801330c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8013310:	eeb0 7a61 	vmov.f32	s14, s3
 8013314:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013318:	ee16 3a90 	vmov	r3, s13
 801331c:	fb97 f7f4 	sdiv	r7, r7, r4
 8013320:	ee17 ca90 	vmov	ip, s15
 8013324:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8013328:	fb9c fcf4 	sdiv	ip, ip, r4
 801332c:	fb0c 3306 	mla	r3, ip, r6, r3
 8013330:	9302      	str	r3, [sp, #8]
 8013332:	ee17 3a10 	vmov	r3, s14
 8013336:	44b6      	add	lr, r6
 8013338:	fb04 e505 	mla	r5, r4, r5, lr
 801333c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8013340:	fb07 3706 	mla	r7, r7, r6, r3
 8013344:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8013348:	e9cd 4700 	strd	r4, r7, [sp]
 801334c:	2900      	cmp	r1, #0
 801334e:	bfcc      	ite	gt
 8013350:	46a1      	movgt	r9, r4
 8013352:	4691      	movle	r9, r2
 8013354:	eba9 0306 	sub.w	r3, r9, r6
 8013358:	f8da 4008 	ldr.w	r4, [sl, #8]
 801335c:	47a0      	blx	r4
 801335e:	b00d      	add	sp, #52	; 0x34
 8013360:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013364:	2500      	movs	r5, #0
 8013366:	462e      	mov	r6, r5
 8013368:	e799      	b.n	801329e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801336c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801336c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013370:	b0db      	sub	sp, #364	; 0x16c
 8013372:	461d      	mov	r5, r3
 8013374:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8013378:	930a      	str	r3, [sp, #40]	; 0x28
 801337a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801337e:	930b      	str	r3, [sp, #44]	; 0x2c
 8013380:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8013384:	9310      	str	r3, [sp, #64]	; 0x40
 8013386:	6803      	ldr	r3, [r0, #0]
 8013388:	910f      	str	r1, [sp, #60]	; 0x3c
 801338a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801338c:	9009      	str	r0, [sp, #36]	; 0x24
 801338e:	4614      	mov	r4, r2
 8013390:	4629      	mov	r1, r5
 8013392:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8013396:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 801339a:	47b8      	blx	r7
 801339c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801339e:	6058      	str	r0, [r3, #4]
 80133a0:	2800      	cmp	r0, #0
 80133a2:	f000 83a1 	beq.w	8013ae8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80133a6:	682b      	ldr	r3, [r5, #0]
 80133a8:	9314      	str	r3, [sp, #80]	; 0x50
 80133aa:	686b      	ldr	r3, [r5, #4]
 80133ac:	9315      	str	r3, [sp, #84]	; 0x54
 80133ae:	4bc4      	ldr	r3, [pc, #784]	; (80136c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80133b0:	ed94 7a02 	vldr	s14, [r4, #8]
 80133b4:	7819      	ldrb	r1, [r3, #0]
 80133b6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80133ba:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80133be:	2900      	cmp	r1, #0
 80133c0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80133c4:	bf16      	itet	ne
 80133c6:	4619      	movne	r1, r3
 80133c8:	4611      	moveq	r1, r2
 80133ca:	4613      	movne	r3, r2
 80133cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80133d0:	9116      	str	r1, [sp, #88]	; 0x58
 80133d2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 80133d6:	f240 8387 	bls.w	8013ae8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80133da:	ed94 7a07 	vldr	s14, [r4, #28]
 80133de:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80133e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80133e6:	f240 837f 	bls.w	8013ae8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80133ea:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 80133ee:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80133f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80133f6:	f240 8377 	bls.w	8013ae8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80133fa:	6822      	ldr	r2, [r4, #0]
 80133fc:	4bb1      	ldr	r3, [pc, #708]	; (80136c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80133fe:	429a      	cmp	r2, r3
 8013400:	f2c0 8372 	blt.w	8013ae8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013404:	49b0      	ldr	r1, [pc, #704]	; (80136c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8013406:	6963      	ldr	r3, [r4, #20]
 8013408:	428a      	cmp	r2, r1
 801340a:	f300 836d 	bgt.w	8013ae8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801340e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013412:	48ae      	ldr	r0, [pc, #696]	; (80136cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8013414:	33ff      	adds	r3, #255	; 0xff
 8013416:	4283      	cmp	r3, r0
 8013418:	f200 8366 	bhi.w	8013ae8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801341c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801341e:	4dac      	ldr	r5, [pc, #688]	; (80136d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8013420:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013424:	33ff      	adds	r3, #255	; 0xff
 8013426:	42ab      	cmp	r3, r5
 8013428:	f200 835e 	bhi.w	8013ae8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801342c:	6862      	ldr	r2, [r4, #4]
 801342e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8013432:	33ff      	adds	r3, #255	; 0xff
 8013434:	4283      	cmp	r3, r0
 8013436:	f200 8357 	bhi.w	8013ae8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801343a:	69a1      	ldr	r1, [r4, #24]
 801343c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8013440:	33ff      	adds	r3, #255	; 0xff
 8013442:	4283      	cmp	r3, r0
 8013444:	f200 8350 	bhi.w	8013ae8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013448:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801344a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 801344e:	30ff      	adds	r0, #255	; 0xff
 8013450:	42a8      	cmp	r0, r5
 8013452:	f200 8349 	bhi.w	8013ae8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013456:	428a      	cmp	r2, r1
 8013458:	f280 8110 	bge.w	801367c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 801345c:	429a      	cmp	r2, r3
 801345e:	f300 8119 	bgt.w	8013694 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8013462:	4299      	cmp	r1, r3
 8013464:	f280 811d 	bge.w	80136a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8013468:	2502      	movs	r5, #2
 801346a:	2701      	movs	r7, #1
 801346c:	46a9      	mov	r9, r5
 801346e:	46b8      	mov	r8, r7
 8013470:	f04f 0a00 	mov.w	sl, #0
 8013474:	4621      	mov	r1, r4
 8013476:	a849      	add	r0, sp, #292	; 0x124
 8013478:	f003 feec 	bl	8017254 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 801347c:	4622      	mov	r2, r4
 801347e:	4653      	mov	r3, sl
 8013480:	a949      	add	r1, sp, #292	; 0x124
 8013482:	f8cd 9000 	str.w	r9, [sp]
 8013486:	a819      	add	r0, sp, #100	; 0x64
 8013488:	f004 f814 	bl	80174b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801348c:	4622      	mov	r2, r4
 801348e:	4653      	mov	r3, sl
 8013490:	a949      	add	r1, sp, #292	; 0x124
 8013492:	f8cd 8000 	str.w	r8, [sp]
 8013496:	a829      	add	r0, sp, #164	; 0xa4
 8013498:	f004 f80c 	bl	80174b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801349c:	4643      	mov	r3, r8
 801349e:	4622      	mov	r2, r4
 80134a0:	a949      	add	r1, sp, #292	; 0x124
 80134a2:	f8cd 9000 	str.w	r9, [sp]
 80134a6:	a839      	add	r0, sp, #228	; 0xe4
 80134a8:	f004 f804 	bl	80174b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80134ac:	42af      	cmp	r7, r5
 80134ae:	bfb5      	itete	lt
 80134b0:	2300      	movlt	r3, #0
 80134b2:	2301      	movge	r3, #1
 80134b4:	930e      	strlt	r3, [sp, #56]	; 0x38
 80134b6:	930e      	strge	r3, [sp, #56]	; 0x38
 80134b8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80134ba:	e893 0003 	ldmia.w	r3, {r0, r1}
 80134be:	af12      	add	r7, sp, #72	; 0x48
 80134c0:	bfb9      	ittee	lt
 80134c2:	ad29      	addlt	r5, sp, #164	; 0xa4
 80134c4:	ac19      	addlt	r4, sp, #100	; 0x64
 80134c6:	ad19      	addge	r5, sp, #100	; 0x64
 80134c8:	ac29      	addge	r4, sp, #164	; 0xa4
 80134ca:	e887 0003 	stmia.w	r7, {r0, r1}
 80134ce:	b928      	cbnz	r0, 80134dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80134d0:	4b80      	ldr	r3, [pc, #512]	; (80136d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80134d2:	6818      	ldr	r0, [r3, #0]
 80134d4:	6803      	ldr	r3, [r0, #0]
 80134d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80134d8:	4798      	blx	r3
 80134da:	6038      	str	r0, [r7, #0]
 80134dc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80134de:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80134e2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80134e6:	930c      	str	r3, [sp, #48]	; 0x30
 80134e8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80134ea:	6963      	ldr	r3, [r4, #20]
 80134ec:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80134ee:	440b      	add	r3, r1
 80134f0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80134f4:	4408      	add	r0, r1
 80134f6:	b200      	sxth	r0, r0
 80134f8:	4283      	cmp	r3, r0
 80134fa:	900d      	str	r0, [sp, #52]	; 0x34
 80134fc:	f280 80dd 	bge.w	80136ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8013500:	428b      	cmp	r3, r1
 8013502:	da08      	bge.n	8013516 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013504:	2a00      	cmp	r2, #0
 8013506:	dd06      	ble.n	8013516 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013508:	1acb      	subs	r3, r1, r3
 801350a:	429a      	cmp	r2, r3
 801350c:	f2c0 80e4 	blt.w	80136d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8013510:	2b00      	cmp	r3, #0
 8013512:	f300 80e2 	bgt.w	80136da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8013516:	6967      	ldr	r7, [r4, #20]
 8013518:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801351a:	443b      	add	r3, r7
 801351c:	461f      	mov	r7, r3
 801351e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013520:	1bdf      	subs	r7, r3, r7
 8013522:	4297      	cmp	r7, r2
 8013524:	bfa8      	it	ge
 8013526:	4617      	movge	r7, r2
 8013528:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801352c:	2f00      	cmp	r7, #0
 801352e:	f340 8166 	ble.w	80137fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8013532:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013534:	6829      	ldr	r1, [r5, #0]
 8013536:	f9b3 2000 	ldrsh.w	r2, [r3]
 801353a:	f9bb 3000 	ldrsh.w	r3, [fp]
 801353e:	6820      	ldr	r0, [r4, #0]
 8013540:	4411      	add	r1, r2
 8013542:	4299      	cmp	r1, r3
 8013544:	dd1a      	ble.n	801357c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013546:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801354a:	440b      	add	r3, r1
 801354c:	4402      	add	r2, r0
 801354e:	b21b      	sxth	r3, r3
 8013550:	429a      	cmp	r2, r3
 8013552:	dc13      	bgt.n	801357c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013554:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013556:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013558:	681b      	ldr	r3, [r3, #0]
 801355a:	9206      	str	r2, [sp, #24]
 801355c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801355e:	9205      	str	r2, [sp, #20]
 8013560:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013562:	9500      	str	r5, [sp, #0]
 8013564:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013568:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801356a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801356c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013570:	a912      	add	r1, sp, #72	; 0x48
 8013572:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8013576:	aa49      	add	r2, sp, #292	; 0x124
 8013578:	4623      	mov	r3, r4
 801357a:	47c8      	blx	r9
 801357c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013580:	441a      	add	r2, r3
 8013582:	6963      	ldr	r3, [r4, #20]
 8013584:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013588:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801358c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013590:	68a1      	ldr	r1, [r4, #8]
 8013592:	ed94 6a08 	vldr	s12, [r4, #32]
 8013596:	6022      	str	r2, [r4, #0]
 8013598:	3301      	adds	r3, #1
 801359a:	6163      	str	r3, [r4, #20]
 801359c:	69a3      	ldr	r3, [r4, #24]
 801359e:	ee37 7a27 	vadd.f32	s14, s14, s15
 80135a2:	3b01      	subs	r3, #1
 80135a4:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80135a8:	61a3      	str	r3, [r4, #24]
 80135aa:	6923      	ldr	r3, [r4, #16]
 80135ac:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80135b0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80135b4:	edd4 6a07 	vldr	s13, [r4, #28]
 80135b8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80135bc:	440b      	add	r3, r1
 80135be:	68e1      	ldr	r1, [r4, #12]
 80135c0:	6123      	str	r3, [r4, #16]
 80135c2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80135c6:	428b      	cmp	r3, r1
 80135c8:	edc4 6a07 	vstr	s13, [r4, #28]
 80135cc:	db15      	blt.n	80135fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80135ce:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80135d2:	ee76 6a26 	vadd.f32	s13, s12, s13
 80135d6:	3201      	adds	r2, #1
 80135d8:	edc4 6a07 	vstr	s13, [r4, #28]
 80135dc:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80135e0:	6022      	str	r2, [r4, #0]
 80135e2:	ee36 7a87 	vadd.f32	s14, s13, s14
 80135e6:	1a5b      	subs	r3, r3, r1
 80135e8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80135ec:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80135f0:	6123      	str	r3, [r4, #16]
 80135f2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80135f6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80135fa:	e9d5 2300 	ldrd	r2, r3, [r5]
 80135fe:	441a      	add	r2, r3
 8013600:	696b      	ldr	r3, [r5, #20]
 8013602:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8013606:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801360a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801360e:	68a9      	ldr	r1, [r5, #8]
 8013610:	ed95 6a08 	vldr	s12, [r5, #32]
 8013614:	602a      	str	r2, [r5, #0]
 8013616:	3301      	adds	r3, #1
 8013618:	616b      	str	r3, [r5, #20]
 801361a:	69ab      	ldr	r3, [r5, #24]
 801361c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013620:	3b01      	subs	r3, #1
 8013622:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8013626:	61ab      	str	r3, [r5, #24]
 8013628:	692b      	ldr	r3, [r5, #16]
 801362a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801362e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013632:	edd5 6a07 	vldr	s13, [r5, #28]
 8013636:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801363a:	440b      	add	r3, r1
 801363c:	68e9      	ldr	r1, [r5, #12]
 801363e:	612b      	str	r3, [r5, #16]
 8013640:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013644:	428b      	cmp	r3, r1
 8013646:	edc5 6a07 	vstr	s13, [r5, #28]
 801364a:	db15      	blt.n	8013678 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801364c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8013650:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013654:	3201      	adds	r2, #1
 8013656:	edc5 6a07 	vstr	s13, [r5, #28]
 801365a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801365e:	602a      	str	r2, [r5, #0]
 8013660:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013664:	1a5b      	subs	r3, r3, r1
 8013666:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801366a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801366e:	612b      	str	r3, [r5, #16]
 8013670:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013674:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013678:	3f01      	subs	r7, #1
 801367a:	e757      	b.n	801352c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801367c:	4299      	cmp	r1, r3
 801367e:	dc13      	bgt.n	80136a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8013680:	429a      	cmp	r2, r3
 8013682:	da14      	bge.n	80136ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8013684:	2502      	movs	r5, #2
 8013686:	2703      	movs	r7, #3
 8013688:	46a9      	mov	r9, r5
 801368a:	f04f 0800 	mov.w	r8, #0
 801368e:	f04f 0a01 	mov.w	sl, #1
 8013692:	e6ef      	b.n	8013474 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013694:	2501      	movs	r5, #1
 8013696:	2700      	movs	r7, #0
 8013698:	46a9      	mov	r9, r5
 801369a:	46b8      	mov	r8, r7
 801369c:	f04f 0a02 	mov.w	sl, #2
 80136a0:	e6e8      	b.n	8013474 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80136a2:	2501      	movs	r5, #1
 80136a4:	2702      	movs	r7, #2
 80136a6:	e6e1      	b.n	801346c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80136a8:	2500      	movs	r5, #0
 80136aa:	2701      	movs	r7, #1
 80136ac:	e7f4      	b.n	8013698 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80136ae:	2702      	movs	r7, #2
 80136b0:	2503      	movs	r5, #3
 80136b2:	f04f 0900 	mov.w	r9, #0
 80136b6:	46b8      	mov	r8, r7
 80136b8:	e7e9      	b.n	801368e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80136ba:	4613      	mov	r3, r2
 80136bc:	e728      	b.n	8013510 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80136be:	bf00      	nop
 80136c0:	200137b4 	.word	0x200137b4
 80136c4:	fffd8f01 	.word	0xfffd8f01
 80136c8:	00027100 	.word	0x00027100
 80136cc:	0004e1ff 	.word	0x0004e1ff
 80136d0:	0004e1fe 	.word	0x0004e1fe
 80136d4:	200137bc 	.word	0x200137bc
 80136d8:	4613      	mov	r3, r2
 80136da:	992b      	ldr	r1, [sp, #172]	; 0xac
 80136dc:	9111      	str	r1, [sp, #68]	; 0x44
 80136de:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 80136e2:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 80136e6:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 80136e8:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 80136ec:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 80136f0:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 80136f4:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80136f8:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80136fc:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8013700:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8013704:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8013708:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801370c:	469e      	mov	lr, r3
 801370e:	469c      	mov	ip, r3
 8013710:	f04f 0900 	mov.w	r9, #0
 8013714:	f1bc 0f00 	cmp.w	ip, #0
 8013718:	d147      	bne.n	80137aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801371a:	eb03 0c07 	add.w	ip, r3, r7
 801371e:	1ad7      	subs	r7, r2, r3
 8013720:	f1b9 0f00 	cmp.w	r9, #0
 8013724:	d009      	beq.n	801373a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8013726:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801372a:	9029      	str	r0, [sp, #164]	; 0xa4
 801372c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8013730:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8013734:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8013738:	912d      	str	r1, [sp, #180]	; 0xb4
 801373a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801373c:	9111      	str	r1, [sp, #68]	; 0x44
 801373e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8013742:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8013746:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801374a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801374e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8013752:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8013756:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801375a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801375e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013762:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8013766:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801376a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801376e:	f04f 0800 	mov.w	r8, #0
 8013772:	f1be 0f00 	cmp.w	lr, #0
 8013776:	d031      	beq.n	80137dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8013778:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801377a:	4431      	add	r1, r6
 801377c:	4549      	cmp	r1, r9
 801377e:	4450      	add	r0, sl
 8013780:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013784:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013788:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801378c:	db08      	blt.n	80137a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801378e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013792:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013796:	ee37 7a06 	vadd.f32	s14, s14, s12
 801379a:	3001      	adds	r0, #1
 801379c:	eba1 0109 	sub.w	r1, r1, r9
 80137a0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80137a4:	f04f 0801 	mov.w	r8, #1
 80137a8:	e7e3      	b.n	8013772 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80137aa:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80137ac:	4431      	add	r1, r6
 80137ae:	4541      	cmp	r1, r8
 80137b0:	4450      	add	r0, sl
 80137b2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80137b6:	ee77 7a84 	vadd.f32	s15, s15, s8
 80137ba:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80137be:	db08      	blt.n	80137d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80137c0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80137c4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80137c8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80137cc:	3001      	adds	r0, #1
 80137ce:	eba1 0108 	sub.w	r1, r1, r8
 80137d2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80137d6:	f04f 0901 	mov.w	r9, #1
 80137da:	e79b      	b.n	8013714 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80137dc:	449c      	add	ip, r3
 80137de:	1aff      	subs	r7, r7, r3
 80137e0:	f1b8 0f00 	cmp.w	r8, #0
 80137e4:	d009      	beq.n	80137fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 80137e6:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80137ea:	9019      	str	r0, [sp, #100]	; 0x64
 80137ec:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80137f0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80137f4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80137f8:	911d      	str	r1, [sp, #116]	; 0x74
 80137fa:	1ad2      	subs	r2, r2, r3
 80137fc:	e68b      	b.n	8013516 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80137fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013800:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8013802:	2b00      	cmp	r3, #0
 8013804:	f000 80d1 	beq.w	80139aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8013808:	ad19      	add	r5, sp, #100	; 0x64
 801380a:	ac39      	add	r4, sp, #228	; 0xe4
 801380c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801380e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8013812:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013816:	930c      	str	r3, [sp, #48]	; 0x30
 8013818:	990c      	ldr	r1, [sp, #48]	; 0x30
 801381a:	6963      	ldr	r3, [r4, #20]
 801381c:	440b      	add	r3, r1
 801381e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8013822:	4408      	add	r0, r1
 8013824:	b200      	sxth	r0, r0
 8013826:	4283      	cmp	r3, r0
 8013828:	900d      	str	r0, [sp, #52]	; 0x34
 801382a:	f280 80c1 	bge.w	80139b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801382e:	428b      	cmp	r3, r1
 8013830:	da08      	bge.n	8013844 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013832:	2a00      	cmp	r2, #0
 8013834:	dd06      	ble.n	8013844 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013836:	1acb      	subs	r3, r1, r3
 8013838:	429a      	cmp	r2, r3
 801383a:	f2c0 80bb 	blt.w	80139b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801383e:	2b00      	cmp	r3, #0
 8013840:	f300 80b9 	bgt.w	80139b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8013844:	6967      	ldr	r7, [r4, #20]
 8013846:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013848:	443b      	add	r3, r7
 801384a:	461f      	mov	r7, r3
 801384c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801384e:	1bdf      	subs	r7, r3, r7
 8013850:	4297      	cmp	r7, r2
 8013852:	bfa8      	it	ge
 8013854:	4617      	movge	r7, r2
 8013856:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801385a:	2f00      	cmp	r7, #0
 801385c:	f340 813c 	ble.w	8013ad8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8013860:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013862:	6829      	ldr	r1, [r5, #0]
 8013864:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013868:	f9bb 3000 	ldrsh.w	r3, [fp]
 801386c:	6820      	ldr	r0, [r4, #0]
 801386e:	4411      	add	r1, r2
 8013870:	4299      	cmp	r1, r3
 8013872:	dd1a      	ble.n	80138aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013874:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013878:	440b      	add	r3, r1
 801387a:	4402      	add	r2, r0
 801387c:	b21b      	sxth	r3, r3
 801387e:	429a      	cmp	r2, r3
 8013880:	dc13      	bgt.n	80138aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013882:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013884:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013886:	681b      	ldr	r3, [r3, #0]
 8013888:	9206      	str	r2, [sp, #24]
 801388a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801388c:	9205      	str	r2, [sp, #20]
 801388e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013890:	9500      	str	r5, [sp, #0]
 8013892:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013896:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8013898:	9809      	ldr	r0, [sp, #36]	; 0x24
 801389a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801389e:	a912      	add	r1, sp, #72	; 0x48
 80138a0:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80138a4:	aa49      	add	r2, sp, #292	; 0x124
 80138a6:	4623      	mov	r3, r4
 80138a8:	47c8      	blx	r9
 80138aa:	e9d4 2300 	ldrd	r2, r3, [r4]
 80138ae:	441a      	add	r2, r3
 80138b0:	6963      	ldr	r3, [r4, #20]
 80138b2:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80138b6:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80138ba:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80138be:	68a1      	ldr	r1, [r4, #8]
 80138c0:	ed94 6a08 	vldr	s12, [r4, #32]
 80138c4:	6022      	str	r2, [r4, #0]
 80138c6:	3301      	adds	r3, #1
 80138c8:	6163      	str	r3, [r4, #20]
 80138ca:	69a3      	ldr	r3, [r4, #24]
 80138cc:	ee37 7a27 	vadd.f32	s14, s14, s15
 80138d0:	3b01      	subs	r3, #1
 80138d2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80138d6:	61a3      	str	r3, [r4, #24]
 80138d8:	6923      	ldr	r3, [r4, #16]
 80138da:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80138de:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80138e2:	edd4 6a07 	vldr	s13, [r4, #28]
 80138e6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80138ea:	440b      	add	r3, r1
 80138ec:	68e1      	ldr	r1, [r4, #12]
 80138ee:	6123      	str	r3, [r4, #16]
 80138f0:	ee76 6a86 	vadd.f32	s13, s13, s12
 80138f4:	428b      	cmp	r3, r1
 80138f6:	edc4 6a07 	vstr	s13, [r4, #28]
 80138fa:	db15      	blt.n	8013928 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 80138fc:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8013900:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013904:	3201      	adds	r2, #1
 8013906:	edc4 6a07 	vstr	s13, [r4, #28]
 801390a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801390e:	6022      	str	r2, [r4, #0]
 8013910:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013914:	1a5b      	subs	r3, r3, r1
 8013916:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801391a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801391e:	6123      	str	r3, [r4, #16]
 8013920:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013924:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013928:	e9d5 2300 	ldrd	r2, r3, [r5]
 801392c:	441a      	add	r2, r3
 801392e:	696b      	ldr	r3, [r5, #20]
 8013930:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8013934:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8013938:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801393c:	68a9      	ldr	r1, [r5, #8]
 801393e:	ed95 6a08 	vldr	s12, [r5, #32]
 8013942:	602a      	str	r2, [r5, #0]
 8013944:	3301      	adds	r3, #1
 8013946:	616b      	str	r3, [r5, #20]
 8013948:	69ab      	ldr	r3, [r5, #24]
 801394a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801394e:	3b01      	subs	r3, #1
 8013950:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8013954:	61ab      	str	r3, [r5, #24]
 8013956:	692b      	ldr	r3, [r5, #16]
 8013958:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801395c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013960:	edd5 6a07 	vldr	s13, [r5, #28]
 8013964:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013968:	440b      	add	r3, r1
 801396a:	68e9      	ldr	r1, [r5, #12]
 801396c:	612b      	str	r3, [r5, #16]
 801396e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013972:	428b      	cmp	r3, r1
 8013974:	edc5 6a07 	vstr	s13, [r5, #28]
 8013978:	db15      	blt.n	80139a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801397a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801397e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013982:	3201      	adds	r2, #1
 8013984:	edc5 6a07 	vstr	s13, [r5, #28]
 8013988:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801398c:	602a      	str	r2, [r5, #0]
 801398e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013992:	1a5b      	subs	r3, r3, r1
 8013994:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013998:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801399c:	612b      	str	r3, [r5, #16]
 801399e:	ee77 7a27 	vadd.f32	s15, s14, s15
 80139a2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80139a6:	3f01      	subs	r7, #1
 80139a8:	e757      	b.n	801385a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80139aa:	ad39      	add	r5, sp, #228	; 0xe4
 80139ac:	ac19      	add	r4, sp, #100	; 0x64
 80139ae:	e72d      	b.n	801380c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80139b0:	4613      	mov	r3, r2
 80139b2:	e744      	b.n	801383e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80139b4:	4613      	mov	r3, r2
 80139b6:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 80139ba:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 80139bc:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 80139c0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 80139c4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 80139c8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 80139cc:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 80139d0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 80139d4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 80139d8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 80139da:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 80139de:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 80139e2:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 80139e6:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 80139ea:	960e      	str	r6, [sp, #56]	; 0x38
 80139ec:	469e      	mov	lr, r3
 80139ee:	461f      	mov	r7, r3
 80139f0:	f04f 0900 	mov.w	r9, #0
 80139f4:	2f00      	cmp	r7, #0
 80139f6:	d146      	bne.n	8013a86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 80139f8:	449c      	add	ip, r3
 80139fa:	1ad7      	subs	r7, r2, r3
 80139fc:	f1b9 0f00 	cmp.w	r9, #0
 8013a00:	d009      	beq.n	8013a16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8013a02:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8013a06:	9039      	str	r0, [sp, #228]	; 0xe4
 8013a08:	913d      	str	r1, [sp, #244]	; 0xf4
 8013a0a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8013a0e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8013a12:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8013a16:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8013a18:	910e      	str	r1, [sp, #56]	; 0x38
 8013a1a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8013a1e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8013a22:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8013a26:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8013a2a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8013a2e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8013a32:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8013a36:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8013a3a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013a3e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8013a42:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8013a46:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8013a4a:	f04f 0800 	mov.w	r8, #0
 8013a4e:	f1be 0f00 	cmp.w	lr, #0
 8013a52:	d030      	beq.n	8013ab6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8013a54:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013a56:	4431      	add	r1, r6
 8013a58:	4549      	cmp	r1, r9
 8013a5a:	4450      	add	r0, sl
 8013a5c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013a60:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013a64:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8013a68:	db08      	blt.n	8013a7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8013a6a:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013a6e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013a72:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013a76:	3001      	adds	r0, #1
 8013a78:	eba1 0109 	sub.w	r1, r1, r9
 8013a7c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013a80:	f04f 0801 	mov.w	r8, #1
 8013a84:	e7e3      	b.n	8013a4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8013a86:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013a88:	4431      	add	r1, r6
 8013a8a:	4541      	cmp	r1, r8
 8013a8c:	4450      	add	r0, sl
 8013a8e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013a92:	ee77 7a84 	vadd.f32	s15, s15, s8
 8013a96:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013a9a:	db08      	blt.n	8013aae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8013a9c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013aa0:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013aa4:	ee77 7a86 	vadd.f32	s15, s15, s12
 8013aa8:	3001      	adds	r0, #1
 8013aaa:	eba1 0108 	sub.w	r1, r1, r8
 8013aae:	3f01      	subs	r7, #1
 8013ab0:	f04f 0901 	mov.w	r9, #1
 8013ab4:	e79e      	b.n	80139f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8013ab6:	449c      	add	ip, r3
 8013ab8:	1aff      	subs	r7, r7, r3
 8013aba:	f1b8 0f00 	cmp.w	r8, #0
 8013abe:	d009      	beq.n	8013ad4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8013ac0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8013ac4:	9019      	str	r0, [sp, #100]	; 0x64
 8013ac6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8013aca:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8013ace:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8013ad2:	911d      	str	r1, [sp, #116]	; 0x74
 8013ad4:	1ad2      	subs	r2, r2, r3
 8013ad6:	e6b5      	b.n	8013844 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013ad8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013ada:	681b      	ldr	r3, [r3, #0]
 8013adc:	b923      	cbnz	r3, 8013ae8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013ade:	4b04      	ldr	r3, [pc, #16]	; (8013af0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8013ae0:	6818      	ldr	r0, [r3, #0]
 8013ae2:	6803      	ldr	r3, [r0, #0]
 8013ae4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013ae6:	4798      	blx	r3
 8013ae8:	b05b      	add	sp, #364	; 0x16c
 8013aea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013aee:	bf00      	nop
 8013af0:	200137bc 	.word	0x200137bc

08013af4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8013af4:	b570      	push	{r4, r5, r6, lr}
 8013af6:	4604      	mov	r4, r0
 8013af8:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8013afc:	9805      	ldr	r0, [sp, #20]
 8013afe:	6061      	str	r1, [r4, #4]
 8013b00:	2500      	movs	r5, #0
 8013b02:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8013b06:	8263      	strh	r3, [r4, #18]
 8013b08:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013b0c:	8025      	strh	r5, [r4, #0]
 8013b0e:	7221      	strb	r1, [r4, #8]
 8013b10:	7266      	strb	r6, [r4, #9]
 8013b12:	60e0      	str	r0, [r4, #12]
 8013b14:	8222      	strh	r2, [r4, #16]
 8013b16:	82a3      	strh	r3, [r4, #20]
 8013b18:	82e5      	strh	r5, [r4, #22]
 8013b1a:	8325      	strh	r5, [r4, #24]
 8013b1c:	8365      	strh	r5, [r4, #26]
 8013b1e:	83a5      	strh	r5, [r4, #28]
 8013b20:	83e5      	strh	r5, [r4, #30]
 8013b22:	8425      	strh	r5, [r4, #32]
 8013b24:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8013b28:	b32e      	cbz	r6, 8013b76 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013b2a:	6803      	ldr	r3, [r0, #0]
 8013b2c:	695b      	ldr	r3, [r3, #20]
 8013b2e:	4798      	blx	r3
 8013b30:	4606      	mov	r6, r0
 8013b32:	b300      	cbz	r0, 8013b76 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013b34:	68e0      	ldr	r0, [r4, #12]
 8013b36:	6803      	ldr	r3, [r0, #0]
 8013b38:	4631      	mov	r1, r6
 8013b3a:	68db      	ldr	r3, [r3, #12]
 8013b3c:	4798      	blx	r3
 8013b3e:	4605      	mov	r5, r0
 8013b40:	b1c8      	cbz	r0, 8013b76 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013b42:	7b43      	ldrb	r3, [r0, #13]
 8013b44:	7a82      	ldrb	r2, [r0, #10]
 8013b46:	005b      	lsls	r3, r3, #1
 8013b48:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013b4c:	4313      	orrs	r3, r2
 8013b4e:	8423      	strh	r3, [r4, #32]
 8013b50:	7a63      	ldrb	r3, [r4, #9]
 8013b52:	2b06      	cmp	r3, #6
 8013b54:	d10f      	bne.n	8013b76 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013b56:	68e0      	ldr	r0, [r4, #12]
 8013b58:	6803      	ldr	r3, [r0, #0]
 8013b5a:	462a      	mov	r2, r5
 8013b5c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013b5e:	4631      	mov	r1, r6
 8013b60:	4798      	blx	r3
 8013b62:	7b6b      	ldrb	r3, [r5, #13]
 8013b64:	005b      	lsls	r3, r3, #1
 8013b66:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013b6a:	7aab      	ldrb	r3, [r5, #10]
 8013b6c:	4313      	orrs	r3, r2
 8013b6e:	4418      	add	r0, r3
 8013b70:	8c23      	ldrh	r3, [r4, #32]
 8013b72:	4418      	add	r0, r3
 8013b74:	8420      	strh	r0, [r4, #32]
 8013b76:	4620      	mov	r0, r4
 8013b78:	bd70      	pop	{r4, r5, r6, pc}

08013b7a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8013b7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b7e:	2400      	movs	r4, #0
 8013b80:	b085      	sub	sp, #20
 8013b82:	4681      	mov	r9, r0
 8013b84:	4688      	mov	r8, r1
 8013b86:	4692      	mov	sl, r2
 8013b88:	469b      	mov	fp, r3
 8013b8a:	4627      	mov	r7, r4
 8013b8c:	4625      	mov	r5, r4
 8013b8e:	4626      	mov	r6, r4
 8013b90:	4554      	cmp	r4, sl
 8013b92:	da2a      	bge.n	8013bea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013b94:	2300      	movs	r3, #0
 8013b96:	9303      	str	r3, [sp, #12]
 8013b98:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013b9c:	429d      	cmp	r5, r3
 8013b9e:	d004      	beq.n	8013baa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8013ba0:	f242 030b 	movw	r3, #8203	; 0x200b
 8013ba4:	429d      	cmp	r5, r3
 8013ba6:	bf18      	it	ne
 8013ba8:	462f      	movne	r7, r5
 8013baa:	ab03      	add	r3, sp, #12
 8013bac:	4642      	mov	r2, r8
 8013bae:	4659      	mov	r1, fp
 8013bb0:	4648      	mov	r0, r9
 8013bb2:	f003 f965 	bl	8016e80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8013bb6:	4605      	mov	r5, r0
 8013bb8:	b1b8      	cbz	r0, 8013bea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013bba:	280a      	cmp	r0, #10
 8013bbc:	d015      	beq.n	8013bea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013bbe:	9a03      	ldr	r2, [sp, #12]
 8013bc0:	b18a      	cbz	r2, 8013be6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8013bc2:	7b50      	ldrb	r0, [r2, #13]
 8013bc4:	7a93      	ldrb	r3, [r2, #10]
 8013bc6:	8895      	ldrh	r5, [r2, #4]
 8013bc8:	0040      	lsls	r0, r0, #1
 8013bca:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8013bce:	4303      	orrs	r3, r0
 8013bd0:	9301      	str	r3, [sp, #4]
 8013bd2:	f8d8 3000 	ldr.w	r3, [r8]
 8013bd6:	4639      	mov	r1, r7
 8013bd8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013bda:	4640      	mov	r0, r8
 8013bdc:	4798      	blx	r3
 8013bde:	9b01      	ldr	r3, [sp, #4]
 8013be0:	4418      	add	r0, r3
 8013be2:	4406      	add	r6, r0
 8013be4:	b2b6      	uxth	r6, r6
 8013be6:	3401      	adds	r4, #1
 8013be8:	e7d2      	b.n	8013b90 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8013bea:	4630      	mov	r0, r6
 8013bec:	b005      	add	sp, #20
 8013bee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013bf2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8013bf2:	2a02      	cmp	r2, #2
 8013bf4:	b530      	push	{r4, r5, lr}
 8013bf6:	d011      	beq.n	8013c1c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8013bf8:	2a03      	cmp	r2, #3
 8013bfa:	d01c      	beq.n	8013c36 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8013bfc:	2a01      	cmp	r2, #1
 8013bfe:	d10c      	bne.n	8013c1a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8013c00:	888b      	ldrh	r3, [r1, #4]
 8013c02:	8801      	ldrh	r1, [r0, #0]
 8013c04:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8013c08:	8844      	ldrh	r4, [r0, #2]
 8013c0a:	8004      	strh	r4, [r0, #0]
 8013c0c:	1a5b      	subs	r3, r3, r1
 8013c0e:	1a9b      	subs	r3, r3, r2
 8013c10:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8013c14:	8043      	strh	r3, [r0, #2]
 8013c16:	8081      	strh	r1, [r0, #4]
 8013c18:	80c2      	strh	r2, [r0, #6]
 8013c1a:	bd30      	pop	{r4, r5, pc}
 8013c1c:	88cb      	ldrh	r3, [r1, #6]
 8013c1e:	8842      	ldrh	r2, [r0, #2]
 8013c20:	1a9b      	subs	r3, r3, r2
 8013c22:	88c2      	ldrh	r2, [r0, #6]
 8013c24:	1a9b      	subs	r3, r3, r2
 8013c26:	888a      	ldrh	r2, [r1, #4]
 8013c28:	8801      	ldrh	r1, [r0, #0]
 8013c2a:	8043      	strh	r3, [r0, #2]
 8013c2c:	1a52      	subs	r2, r2, r1
 8013c2e:	8881      	ldrh	r1, [r0, #4]
 8013c30:	1a52      	subs	r2, r2, r1
 8013c32:	8002      	strh	r2, [r0, #0]
 8013c34:	e7f1      	b.n	8013c1a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8013c36:	88cb      	ldrh	r3, [r1, #6]
 8013c38:	8841      	ldrh	r1, [r0, #2]
 8013c3a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8013c3e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8013c42:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8013c46:	8045      	strh	r5, [r0, #2]
 8013c48:	1a5b      	subs	r3, r3, r1
 8013c4a:	1a9b      	subs	r3, r3, r2
 8013c4c:	8003      	strh	r3, [r0, #0]
 8013c4e:	8082      	strh	r2, [r0, #4]
 8013c50:	80c4      	strh	r4, [r0, #6]
 8013c52:	e7e2      	b.n	8013c1a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08013c54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8013c54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c58:	b09f      	sub	sp, #124	; 0x7c
 8013c5a:	9116      	str	r1, [sp, #88]	; 0x58
 8013c5c:	9317      	str	r3, [sp, #92]	; 0x5c
 8013c5e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8013c60:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013c62:	8809      	ldrh	r1, [r1, #0]
 8013c64:	889b      	ldrh	r3, [r3, #4]
 8013c66:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8013c6a:	9212      	str	r2, [sp, #72]	; 0x48
 8013c6c:	440b      	add	r3, r1
 8013c6e:	b21b      	sxth	r3, r3
 8013c70:	9310      	str	r3, [sp, #64]	; 0x40
 8013c72:	f8d8 3000 	ldr.w	r3, [r8]
 8013c76:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8013c7a:	7b19      	ldrb	r1, [r3, #12]
 8013c7c:	7adb      	ldrb	r3, [r3, #11]
 8013c7e:	9011      	str	r0, [sp, #68]	; 0x44
 8013c80:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8013c84:	9114      	str	r1, [sp, #80]	; 0x50
 8013c86:	9315      	str	r3, [sp, #84]	; 0x54
 8013c88:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8013c8c:	2a00      	cmp	r2, #0
 8013c8e:	d06a      	beq.n	8013d66 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8013c90:	f898 3010 	ldrb.w	r3, [r8, #16]
 8013c94:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8013c96:	2b06      	cmp	r3, #6
 8013c98:	bf14      	ite	ne
 8013c9a:	2301      	movne	r3, #1
 8013c9c:	2302      	moveq	r3, #2
 8013c9e:	4413      	add	r3, r2
 8013ca0:	f04f 0900 	mov.w	r9, #0
 8013ca4:	930f      	str	r3, [sp, #60]	; 0x3c
 8013ca6:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8013caa:	464c      	mov	r4, r9
 8013cac:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8013cb0:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8013cb4:	4293      	cmp	r3, r2
 8013cb6:	f280 808f 	bge.w	8013dd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8013cba:	2300      	movs	r3, #0
 8013cbc:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8013cc0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8013cc4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013cc8:	429c      	cmp	r4, r3
 8013cca:	d006      	beq.n	8013cda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8013ccc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013cce:	f242 020b 	movw	r2, #8203	; 0x200b
 8013cd2:	4294      	cmp	r4, r2
 8013cd4:	bf18      	it	ne
 8013cd6:	4623      	movne	r3, r4
 8013cd8:	930d      	str	r3, [sp, #52]	; 0x34
 8013cda:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013cdc:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8013cde:	f8d8 2000 	ldr.w	r2, [r8]
 8013ce2:	428b      	cmp	r3, r1
 8013ce4:	db41      	blt.n	8013d6a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8013ce6:	6813      	ldr	r3, [r2, #0]
 8013ce8:	4610      	mov	r0, r2
 8013cea:	695b      	ldr	r3, [r3, #20]
 8013cec:	4798      	blx	r3
 8013cee:	4604      	mov	r4, r0
 8013cf0:	f8d8 0000 	ldr.w	r0, [r8]
 8013cf4:	6803      	ldr	r3, [r0, #0]
 8013cf6:	aa1d      	add	r2, sp, #116	; 0x74
 8013cf8:	689d      	ldr	r5, [r3, #8]
 8013cfa:	4621      	mov	r1, r4
 8013cfc:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8013d00:	47a8      	blx	r5
 8013d02:	901c      	str	r0, [sp, #112]	; 0x70
 8013d04:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013d08:	429c      	cmp	r4, r3
 8013d0a:	f000 80eb 	beq.w	8013ee4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013d0e:	f242 030b 	movw	r3, #8203	; 0x200b
 8013d12:	429c      	cmp	r4, r3
 8013d14:	f000 80e6 	beq.w	8013ee4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013d18:	2c00      	cmp	r4, #0
 8013d1a:	f000 80f8 	beq.w	8013f0e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8013d1e:	2c0a      	cmp	r4, #10
 8013d20:	d060      	beq.n	8013de4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8013d22:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8013d24:	b36a      	cbz	r2, 8013d82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8013d26:	8894      	ldrh	r4, [r2, #4]
 8013d28:	f1bb 0f00 	cmp.w	fp, #0
 8013d2c:	d03b      	beq.n	8013da6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8013d2e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8013d32:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8013d36:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8013d3a:	f892 900a 	ldrb.w	r9, [r2, #10]
 8013d3e:	f1bb 0f01 	cmp.w	fp, #1
 8013d42:	ea49 0903 	orr.w	r9, r9, r3
 8013d46:	d134      	bne.n	8013db2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8013d48:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013d4a:	eba6 0609 	sub.w	r6, r6, r9
 8013d4e:	2b00      	cmp	r3, #0
 8013d50:	d14f      	bne.n	8013df2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8013d52:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013d54:	eb09 0306 	add.w	r3, r9, r6
 8013d58:	4413      	add	r3, r2
 8013d5a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8013d5c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8013d60:	4293      	cmp	r3, r2
 8013d62:	da51      	bge.n	8013e08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8013d64:	e038      	b.n	8013dd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8013d66:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8013d68:	e79a      	b.n	8013ca0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8013d6a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8013d6e:	9301      	str	r3, [sp, #4]
 8013d70:	ab1d      	add	r3, sp, #116	; 0x74
 8013d72:	9300      	str	r3, [sp, #0]
 8013d74:	4659      	mov	r1, fp
 8013d76:	ab1c      	add	r3, sp, #112	; 0x70
 8013d78:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8013d7a:	f003 f8ca 	bl	8016f12 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8013d7e:	4604      	mov	r4, r0
 8013d80:	e7c0      	b.n	8013d04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8013d82:	f8d8 0000 	ldr.w	r0, [r8]
 8013d86:	6803      	ldr	r3, [r0, #0]
 8013d88:	691b      	ldr	r3, [r3, #16]
 8013d8a:	4798      	blx	r3
 8013d8c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013d90:	4298      	cmp	r0, r3
 8013d92:	f000 80a7 	beq.w	8013ee4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013d96:	f242 030b 	movw	r3, #8203	; 0x200b
 8013d9a:	4298      	cmp	r0, r3
 8013d9c:	f000 80a2 	beq.w	8013ee4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013da0:	f1bb 0f00 	cmp.w	fp, #0
 8013da4:	d100      	bne.n	8013da8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8013da6:	444e      	add	r6, r9
 8013da8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8013daa:	2a00      	cmp	r2, #0
 8013dac:	d1bf      	bne.n	8013d2e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8013dae:	4691      	mov	r9, r2
 8013db0:	e098      	b.n	8013ee4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013db2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013db4:	2b00      	cmp	r3, #0
 8013db6:	f000 80ac 	beq.w	8013f12 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8013dba:	f1bb 0f00 	cmp.w	fp, #0
 8013dbe:	d118      	bne.n	8013df2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8013dc0:	f8d8 0000 	ldr.w	r0, [r8]
 8013dc4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8013dc6:	6803      	ldr	r3, [r0, #0]
 8013dc8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013dca:	4798      	blx	r3
 8013dcc:	4406      	add	r6, r0
 8013dce:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8013dd0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013dd2:	1af3      	subs	r3, r6, r3
 8013dd4:	4293      	cmp	r3, r2
 8013dd6:	dd17      	ble.n	8013e08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8013dd8:	2c00      	cmp	r4, #0
 8013dda:	f000 8098 	beq.w	8013f0e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8013dde:	2c0a      	cmp	r4, #10
 8013de0:	f040 8086 	bne.w	8013ef0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8013de4:	240a      	movs	r4, #10
 8013de6:	fab4 f084 	clz	r0, r4
 8013dea:	0940      	lsrs	r0, r0, #5
 8013dec:	b01f      	add	sp, #124	; 0x7c
 8013dee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013df2:	f8d8 0000 	ldr.w	r0, [r8]
 8013df6:	990d      	ldr	r1, [sp, #52]	; 0x34
 8013df8:	6803      	ldr	r3, [r0, #0]
 8013dfa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013dfc:	4798      	blx	r3
 8013dfe:	f1bb 0f01 	cmp.w	fp, #1
 8013e02:	eba6 0600 	sub.w	r6, r6, r0
 8013e06:	d0a4      	beq.n	8013d52 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8013e08:	981c      	ldr	r0, [sp, #112]	; 0x70
 8013e0a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013e0c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8013e10:	f9b3 7000 	ldrsh.w	r7, [r3]
 8013e14:	7b43      	ldrb	r3, [r0, #13]
 8013e16:	015b      	lsls	r3, r3, #5
 8013e18:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013e1c:	7983      	ldrb	r3, [r0, #6]
 8013e1e:	4431      	add	r1, r6
 8013e20:	4313      	orrs	r3, r2
 8013e22:	440b      	add	r3, r1
 8013e24:	42bb      	cmp	r3, r7
 8013e26:	db5d      	blt.n	8013ee4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013e28:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013e2a:	4299      	cmp	r1, r3
 8013e2c:	da5a      	bge.n	8013ee4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013e2e:	f8d8 0000 	ldr.w	r0, [r8]
 8013e32:	6803      	ldr	r3, [r0, #0]
 8013e34:	42b7      	cmp	r7, r6
 8013e36:	bfc8      	it	gt
 8013e38:	1bbf      	subgt	r7, r7, r6
 8013e3a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013e3c:	bfcc      	ite	gt
 8013e3e:	b2bf      	uxthgt	r7, r7
 8013e40:	2700      	movle	r7, #0
 8013e42:	4798      	blx	r3
 8013e44:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8013e46:	7b5a      	ldrb	r2, [r3, #13]
 8013e48:	00d1      	lsls	r1, r2, #3
 8013e4a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8013e4e:	7a19      	ldrb	r1, [r3, #8]
 8013e50:	4329      	orrs	r1, r5
 8013e52:	0655      	lsls	r5, r2, #25
 8013e54:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8013e56:	bf44      	itt	mi
 8013e58:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8013e5c:	b209      	sxthmi	r1, r1
 8013e5e:	1945      	adds	r5, r0, r5
 8013e60:	1a6d      	subs	r5, r5, r1
 8013e62:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8013e64:	b2ad      	uxth	r5, r5
 8013e66:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8013e6a:	fa0f fa85 	sxth.w	sl, r5
 8013e6e:	4551      	cmp	r1, sl
 8013e70:	dd3c      	ble.n	8013eec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8013e72:	0112      	lsls	r2, r2, #4
 8013e74:	79d8      	ldrb	r0, [r3, #7]
 8013e76:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8013e7a:	4302      	orrs	r2, r0
 8013e7c:	4492      	add	sl, r2
 8013e7e:	4551      	cmp	r1, sl
 8013e80:	dc30      	bgt.n	8013ee4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013e82:	1b4d      	subs	r5, r1, r5
 8013e84:	b22d      	sxth	r5, r5
 8013e86:	468a      	mov	sl, r1
 8013e88:	9319      	str	r3, [sp, #100]	; 0x64
 8013e8a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013e8c:	f8d8 0000 	ldr.w	r0, [r8]
 8013e90:	681a      	ldr	r2, [r3, #0]
 8013e92:	6801      	ldr	r1, [r0, #0]
 8013e94:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8013e96:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8013e98:	9313      	str	r3, [sp, #76]	; 0x4c
 8013e9a:	9218      	str	r2, [sp, #96]	; 0x60
 8013e9c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8013e9e:	4788      	blx	r1
 8013ea0:	f898 1006 	ldrb.w	r1, [r8, #6]
 8013ea4:	910b      	str	r1, [sp, #44]	; 0x2c
 8013ea6:	f898 100e 	ldrb.w	r1, [r8, #14]
 8013eaa:	910a      	str	r1, [sp, #40]	; 0x28
 8013eac:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8013eb0:	9109      	str	r1, [sp, #36]	; 0x24
 8013eb2:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8013eb6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8013eb8:	9305      	str	r3, [sp, #20]
 8013eba:	b2ad      	uxth	r5, r5
 8013ebc:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8013ec0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8013ec4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013ec6:	9304      	str	r3, [sp, #16]
 8013ec8:	4437      	add	r7, r6
 8013eca:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8013ecc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013ece:	9206      	str	r2, [sp, #24]
 8013ed0:	b23f      	sxth	r7, r7
 8013ed2:	f8cd a004 	str.w	sl, [sp, #4]
 8013ed6:	9700      	str	r7, [sp, #0]
 8013ed8:	681a      	ldr	r2, [r3, #0]
 8013eda:	9916      	ldr	r1, [sp, #88]	; 0x58
 8013edc:	685b      	ldr	r3, [r3, #4]
 8013ede:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013ee0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013ee2:	47a8      	blx	r5
 8013ee4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013ee6:	3301      	adds	r3, #1
 8013ee8:	930e      	str	r3, [sp, #56]	; 0x38
 8013eea:	e6e1      	b.n	8013cb0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8013eec:	2500      	movs	r5, #0
 8013eee:	e7cb      	b.n	8013e88 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8013ef0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8013ef2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8013ef4:	3501      	adds	r5, #1
 8013ef6:	429d      	cmp	r5, r3
 8013ef8:	f6bf af75 	bge.w	8013de6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8013efc:	4659      	mov	r1, fp
 8013efe:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8013f00:	f7f3 fd7c 	bl	80079fc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013f04:	4604      	mov	r4, r0
 8013f06:	b110      	cbz	r0, 8013f0e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8013f08:	280a      	cmp	r0, #10
 8013f0a:	d1f2      	bne.n	8013ef2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8013f0c:	e76a      	b.n	8013de4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8013f0e:	2400      	movs	r4, #0
 8013f10:	e769      	b.n	8013de6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8013f12:	f1bb 0f00 	cmp.w	fp, #0
 8013f16:	f43f af5a 	beq.w	8013dce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8013f1a:	e775      	b.n	8013e08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08013f1c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8013f1c:	b530      	push	{r4, r5, lr}
 8013f1e:	8ac4      	ldrh	r4, [r0, #22]
 8013f20:	8b45      	ldrh	r5, [r0, #26]
 8013f22:	8343      	strh	r3, [r0, #26]
 8013f24:	442c      	add	r4, r5
 8013f26:	1ae4      	subs	r4, r4, r3
 8013f28:	82c4      	strh	r4, [r0, #22]
 8013f2a:	8b83      	ldrh	r3, [r0, #28]
 8013f2c:	8b04      	ldrh	r4, [r0, #24]
 8013f2e:	4422      	add	r2, r4
 8013f30:	440c      	add	r4, r1
 8013f32:	1a59      	subs	r1, r3, r1
 8013f34:	83c2      	strh	r2, [r0, #30]
 8013f36:	8304      	strh	r4, [r0, #24]
 8013f38:	8381      	strh	r1, [r0, #28]
 8013f3a:	bd30      	pop	{r4, r5, pc}

08013f3c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8013f3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f40:	4604      	mov	r4, r0
 8013f42:	8a47      	ldrh	r7, [r0, #18]
 8013f44:	68c0      	ldr	r0, [r0, #12]
 8013f46:	6803      	ldr	r3, [r0, #0]
 8013f48:	b085      	sub	sp, #20
 8013f4a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013f4c:	4798      	blx	r3
 8013f4e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8013f52:	7a63      	ldrb	r3, [r4, #9]
 8013f54:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8013f58:	42b7      	cmp	r7, r6
 8013f5a:	f103 33ff 	add.w	r3, r3, #4294967295
 8013f5e:	bfac      	ite	ge
 8013f60:	f04f 0900 	movge.w	r9, #0
 8013f64:	f04f 0901 	movlt.w	r9, #1
 8013f68:	2b05      	cmp	r3, #5
 8013f6a:	d804      	bhi.n	8013f76 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8013f6c:	e8df f003 	tbb	[pc, r3]
 8013f70:	470e0854 	.word	0x470e0854
 8013f74:	4c4c      	.short	0x4c4c
 8013f76:	2500      	movs	r5, #0
 8013f78:	46a9      	mov	r9, r5
 8013f7a:	462e      	mov	r6, r5
 8013f7c:	462f      	mov	r7, r5
 8013f7e:	e00d      	b.n	8013f9c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8013f80:	42b7      	cmp	r7, r6
 8013f82:	bfb4      	ite	lt
 8013f84:	2600      	movlt	r6, #0
 8013f86:	2601      	movge	r6, #1
 8013f88:	2500      	movs	r5, #0
 8013f8a:	e7f7      	b.n	8013f7c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8013f8c:	42b7      	cmp	r7, r6
 8013f8e:	464d      	mov	r5, r9
 8013f90:	f04f 0900 	mov.w	r9, #0
 8013f94:	bfb4      	ite	lt
 8013f96:	2600      	movlt	r6, #0
 8013f98:	2601      	movge	r6, #1
 8013f9a:	464f      	mov	r7, r9
 8013f9c:	f04f 0800 	mov.w	r8, #0
 8013fa0:	f8a4 8016 	strh.w	r8, [r4, #22]
 8013fa4:	f8a4 8018 	strh.w	r8, [r4, #24]
 8013fa8:	f8cd 8004 	str.w	r8, [sp, #4]
 8013fac:	2300      	movs	r3, #0
 8013fae:	9303      	str	r3, [sp, #12]
 8013fb0:	8823      	ldrh	r3, [r4, #0]
 8013fb2:	2b20      	cmp	r3, #32
 8013fb4:	d034      	beq.n	8014020 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8013fb6:	f242 010b 	movw	r1, #8203	; 0x200b
 8013fba:	1a5a      	subs	r2, r3, r1
 8013fbc:	f1d2 0a00 	rsbs	sl, r2, #0
 8013fc0:	eb4a 0a02 	adc.w	sl, sl, r2
 8013fc4:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8013fc8:	4293      	cmp	r3, r2
 8013fca:	d009      	beq.n	8013fe0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8013fcc:	428b      	cmp	r3, r1
 8013fce:	9a01      	ldr	r2, [sp, #4]
 8013fd0:	bf18      	it	ne
 8013fd2:	461a      	movne	r2, r3
 8013fd4:	9201      	str	r2, [sp, #4]
 8013fd6:	bf0c      	ite	eq
 8013fd8:	f04f 0a01 	moveq.w	sl, #1
 8013fdc:	f04f 0a00 	movne.w	sl, #0
 8013fe0:	ab03      	add	r3, sp, #12
 8013fe2:	68e2      	ldr	r2, [r4, #12]
 8013fe4:	7a21      	ldrb	r1, [r4, #8]
 8013fe6:	6860      	ldr	r0, [r4, #4]
 8013fe8:	f002 ff4a 	bl	8016e80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8013fec:	8020      	strh	r0, [r4, #0]
 8013fee:	b9d8      	cbnz	r0, 8014028 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8013ff0:	8ba2      	ldrh	r2, [r4, #28]
 8013ff2:	2300      	movs	r3, #0
 8013ff4:	4611      	mov	r1, r2
 8013ff6:	4620      	mov	r0, r4
 8013ff8:	f7ff ff90 	bl	8013f1c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8013ffc:	e06e      	b.n	80140dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8013ffe:	2500      	movs	r5, #0
 8014000:	46a9      	mov	r9, r5
 8014002:	462e      	mov	r6, r5
 8014004:	2701      	movs	r7, #1
 8014006:	e7c9      	b.n	8013f9c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014008:	42b7      	cmp	r7, r6
 801400a:	f04f 0500 	mov.w	r5, #0
 801400e:	bfb4      	ite	lt
 8014010:	2700      	movlt	r7, #0
 8014012:	2701      	movge	r7, #1
 8014014:	462e      	mov	r6, r5
 8014016:	e7c1      	b.n	8013f9c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014018:	2500      	movs	r5, #0
 801401a:	46a9      	mov	r9, r5
 801401c:	2601      	movs	r6, #1
 801401e:	e7ad      	b.n	8013f7c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8014020:	9301      	str	r3, [sp, #4]
 8014022:	f04f 0a01 	mov.w	sl, #1
 8014026:	e7db      	b.n	8013fe0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8014028:	8b63      	ldrh	r3, [r4, #26]
 801402a:	280a      	cmp	r0, #10
 801402c:	f103 0301 	add.w	r3, r3, #1
 8014030:	8363      	strh	r3, [r4, #26]
 8014032:	d0dd      	beq.n	8013ff0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8014034:	9a03      	ldr	r2, [sp, #12]
 8014036:	bb62      	cbnz	r2, 8014092 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8014038:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801403c:	4298      	cmp	r0, r3
 801403e:	d003      	beq.n	8014048 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8014040:	f242 030b 	movw	r3, #8203	; 0x200b
 8014044:	4298      	cmp	r0, r3
 8014046:	d1b1      	bne.n	8013fac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014048:	8823      	ldrh	r3, [r4, #0]
 801404a:	8ba1      	ldrh	r1, [r4, #28]
 801404c:	2b20      	cmp	r3, #32
 801404e:	d003      	beq.n	8014058 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8014050:	f242 000b 	movw	r0, #8203	; 0x200b
 8014054:	4283      	cmp	r3, r0
 8014056:	d131      	bne.n	80140bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8014058:	f1ba 0f00 	cmp.w	sl, #0
 801405c:	bf0a      	itet	eq
 801405e:	4688      	moveq	r8, r1
 8014060:	4650      	movne	r0, sl
 8014062:	2001      	moveq	r0, #1
 8014064:	440a      	add	r2, r1
 8014066:	8b23      	ldrh	r3, [r4, #24]
 8014068:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801406c:	b292      	uxth	r2, r2
 801406e:	83a2      	strh	r2, [r4, #28]
 8014070:	4413      	add	r3, r2
 8014072:	f1b9 0f00 	cmp.w	r9, #0
 8014076:	d102      	bne.n	801407e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8014078:	2d00      	cmp	r5, #0
 801407a:	d042      	beq.n	8014102 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801407c:	b300      	cbz	r0, 80140c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801407e:	8c21      	ldrh	r1, [r4, #32]
 8014080:	4419      	add	r1, r3
 8014082:	458c      	cmp	ip, r1
 8014084:	da37      	bge.n	80140f6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8014086:	8ae1      	ldrh	r1, [r4, #22]
 8014088:	2900      	cmp	r1, #0
 801408a:	d034      	beq.n	80140f6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801408c:	4563      	cmp	r3, ip
 801408e:	dd8d      	ble.n	8013fac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014090:	e01d      	b.n	80140ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8014092:	8893      	ldrh	r3, [r2, #4]
 8014094:	8023      	strh	r3, [r4, #0]
 8014096:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801409a:	9901      	ldr	r1, [sp, #4]
 801409c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 80140a0:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 80140a4:	f892 b00a 	ldrb.w	fp, [r2, #10]
 80140a8:	ea4b 0b00 	orr.w	fp, fp, r0
 80140ac:	68e0      	ldr	r0, [r4, #12]
 80140ae:	6803      	ldr	r3, [r0, #0]
 80140b0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80140b2:	4798      	blx	r3
 80140b4:	eb0b 0200 	add.w	r2, fp, r0
 80140b8:	b292      	uxth	r2, r2
 80140ba:	e7c5      	b.n	8014048 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80140bc:	2000      	movs	r0, #0
 80140be:	e7d1      	b.n	8014064 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 80140c0:	4563      	cmp	r3, ip
 80140c2:	f77f af73 	ble.w	8013fac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80140c6:	8ae3      	ldrh	r3, [r4, #22]
 80140c8:	2b00      	cmp	r3, #0
 80140ca:	f43f af6f 	beq.w	8013fac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80140ce:	2301      	movs	r3, #1
 80140d0:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 80140d4:	8c22      	ldrh	r2, [r4, #32]
 80140d6:	8be3      	ldrh	r3, [r4, #30]
 80140d8:	4413      	add	r3, r2
 80140da:	83e3      	strh	r3, [r4, #30]
 80140dc:	68e0      	ldr	r0, [r4, #12]
 80140de:	6803      	ldr	r3, [r0, #0]
 80140e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80140e2:	4798      	blx	r3
 80140e4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 80140e8:	4418      	add	r0, r3
 80140ea:	8a63      	ldrh	r3, [r4, #18]
 80140ec:	1a18      	subs	r0, r3, r0
 80140ee:	8260      	strh	r0, [r4, #18]
 80140f0:	b005      	add	sp, #20
 80140f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80140f6:	2300      	movs	r3, #0
 80140f8:	4611      	mov	r1, r2
 80140fa:	4620      	mov	r0, r4
 80140fc:	f7ff ff0e 	bl	8013f1c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8014100:	e754      	b.n	8013fac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014102:	4563      	cmp	r3, ip
 8014104:	dd14      	ble.n	8014130 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8014106:	b117      	cbz	r7, 801410e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8014108:	2301      	movs	r3, #1
 801410a:	460a      	mov	r2, r1
 801410c:	e772      	b.n	8013ff4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801410e:	2e00      	cmp	r6, #0
 8014110:	f43f af4c 	beq.w	8013fac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014114:	2800      	cmp	r0, #0
 8014116:	f47f af49 	bne.w	8013fac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801411a:	f1ba 0f00 	cmp.w	sl, #0
 801411e:	d002      	beq.n	8014126 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8014120:	2301      	movs	r3, #1
 8014122:	4642      	mov	r2, r8
 8014124:	e767      	b.n	8013ff6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8014126:	8ae3      	ldrh	r3, [r4, #22]
 8014128:	2b00      	cmp	r3, #0
 801412a:	f43f af3f 	beq.w	8013fac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801412e:	e7d5      	b.n	80140dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8014130:	2800      	cmp	r0, #0
 8014132:	f47f af3b 	bne.w	8013fac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014136:	f1ba 0f00 	cmp.w	sl, #0
 801413a:	f43f af37 	beq.w	8013fac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801413e:	2301      	movs	r3, #1
 8014140:	4642      	mov	r2, r8
 8014142:	e7da      	b.n	80140fa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08014144 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8014144:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014146:	4605      	mov	r5, r0
 8014148:	b08f      	sub	sp, #60	; 0x3c
 801414a:	4617      	mov	r7, r2
 801414c:	461c      	mov	r4, r3
 801414e:	460e      	mov	r6, r1
 8014150:	b1d1      	cbz	r1, 8014188 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8014152:	681b      	ldr	r3, [r3, #0]
 8014154:	4620      	mov	r0, r4
 8014156:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014158:	4798      	blx	r3
 801415a:	4240      	negs	r0, r0
 801415c:	b200      	sxth	r0, r0
 801415e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8014162:	9603      	str	r6, [sp, #12]
 8014164:	9700      	str	r7, [sp, #0]
 8014166:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801416a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801416e:	4629      	mov	r1, r5
 8014170:	a805      	add	r0, sp, #20
 8014172:	f7ff fcbf 	bl	8013af4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8014176:	2401      	movs	r4, #1
 8014178:	a805      	add	r0, sp, #20
 801417a:	f7ff fedf 	bl	8013f3c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801417e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8014182:	b163      	cbz	r3, 801419e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8014184:	3401      	adds	r4, #1
 8014186:	e7f7      	b.n	8014178 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8014188:	f002 ff48 	bl	801701c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801418c:	2401      	movs	r4, #1
 801418e:	280a      	cmp	r0, #10
 8014190:	4628      	mov	r0, r5
 8014192:	bf08      	it	eq
 8014194:	3401      	addeq	r4, #1
 8014196:	f002 ff41 	bl	801701c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801419a:	2800      	cmp	r0, #0
 801419c:	d1f7      	bne.n	801418e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801419e:	b2a0      	uxth	r0, r4
 80141a0:	b00f      	add	sp, #60	; 0x3c
 80141a2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080141a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80141a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80141a8:	b0e3      	sub	sp, #396	; 0x18c
 80141aa:	461c      	mov	r4, r3
 80141ac:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 80141ae:	4683      	mov	fp, r0
 80141b0:	4688      	mov	r8, r1
 80141b2:	2b00      	cmp	r3, #0
 80141b4:	f000 8112 	beq.w	80143dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80141b8:	6823      	ldr	r3, [r4, #0]
 80141ba:	2b00      	cmp	r3, #0
 80141bc:	f000 810e 	beq.w	80143dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80141c0:	7ba3      	ldrb	r3, [r4, #14]
 80141c2:	2b00      	cmp	r3, #0
 80141c4:	f000 810a 	beq.w	80143dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80141c8:	6810      	ldr	r0, [r2, #0]
 80141ca:	6851      	ldr	r1, [r2, #4]
 80141cc:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80141d0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80141d4:	ad0a      	add	r5, sp, #40	; 0x28
 80141d6:	462b      	mov	r3, r5
 80141d8:	c303      	stmia	r3!, {r0, r1}
 80141da:	2100      	movs	r1, #0
 80141dc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80141e0:	910c      	str	r1, [sp, #48]	; 0x30
 80141e2:	79a2      	ldrb	r2, [r4, #6]
 80141e4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80141e8:	a90c      	add	r1, sp, #48	; 0x30
 80141ea:	4628      	mov	r0, r5
 80141ec:	f7ff fd01 	bl	8013bf2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80141f0:	a90c      	add	r1, sp, #48	; 0x30
 80141f2:	4608      	mov	r0, r1
 80141f4:	79a2      	ldrb	r2, [r4, #6]
 80141f6:	f7ff fcfc 	bl	8013bf2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80141fa:	a817      	add	r0, sp, #92	; 0x5c
 80141fc:	f002 fae2 	bl	80167c4 <_ZN8touchgfx12TextProviderC1Ev>
 8014200:	6820      	ldr	r0, [r4, #0]
 8014202:	6803      	ldr	r3, [r0, #0]
 8014204:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014206:	4798      	blx	r3
 8014208:	4606      	mov	r6, r0
 801420a:	6820      	ldr	r0, [r4, #0]
 801420c:	6803      	ldr	r3, [r0, #0]
 801420e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014210:	4798      	blx	r3
 8014212:	4633      	mov	r3, r6
 8014214:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8014216:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8014218:	9000      	str	r0, [sp, #0]
 801421a:	a817      	add	r0, sp, #92	; 0x5c
 801421c:	f002 fb2d 	bl	801687a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014220:	6820      	ldr	r0, [r4, #0]
 8014222:	f894 a004 	ldrb.w	sl, [r4, #4]
 8014226:	6803      	ldr	r3, [r0, #0]
 8014228:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801422a:	4798      	blx	r3
 801422c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8014230:	6823      	ldr	r3, [r4, #0]
 8014232:	4607      	mov	r7, r0
 8014234:	4406      	add	r6, r0
 8014236:	a830      	add	r0, sp, #192	; 0xc0
 8014238:	f893 9009 	ldrb.w	r9, [r3, #9]
 801423c:	f002 fac2 	bl	80167c4 <_ZN8touchgfx12TextProviderC1Ev>
 8014240:	7c23      	ldrb	r3, [r4, #16]
 8014242:	b17b      	cbz	r3, 8014264 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8014244:	6820      	ldr	r0, [r4, #0]
 8014246:	6803      	ldr	r3, [r0, #0]
 8014248:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801424a:	4798      	blx	r3
 801424c:	9009      	str	r0, [sp, #36]	; 0x24
 801424e:	6820      	ldr	r0, [r4, #0]
 8014250:	6802      	ldr	r2, [r0, #0]
 8014252:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8014254:	4790      	blx	r2
 8014256:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014258:	9000      	str	r0, [sp, #0]
 801425a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801425c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801425e:	a830      	add	r0, sp, #192	; 0xc0
 8014260:	f002 fb0b 	bl	801687a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014264:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8014268:	7be2      	ldrb	r2, [r4, #15]
 801426a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801426e:	1a8a      	subs	r2, r1, r2
 8014270:	7c21      	ldrb	r1, [r4, #16]
 8014272:	9103      	str	r1, [sp, #12]
 8014274:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8014278:	9102      	str	r1, [sp, #8]
 801427a:	6821      	ldr	r1, [r4, #0]
 801427c:	9101      	str	r1, [sp, #4]
 801427e:	7961      	ldrb	r1, [r4, #5]
 8014280:	9100      	str	r1, [sp, #0]
 8014282:	b292      	uxth	r2, r2
 8014284:	a930      	add	r1, sp, #192	; 0xc0
 8014286:	a80e      	add	r0, sp, #56	; 0x38
 8014288:	f7ff fc34 	bl	8013af4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801428c:	2e00      	cmp	r6, #0
 801428e:	dc5b      	bgt.n	8014348 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8014290:	af17      	add	r7, sp, #92	; 0x5c
 8014292:	f04f 0900 	mov.w	r9, #0
 8014296:	7c23      	ldrb	r3, [r4, #16]
 8014298:	2b00      	cmp	r3, #0
 801429a:	f000 80b1 	beq.w	8014400 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801429e:	a80e      	add	r0, sp, #56	; 0x38
 80142a0:	f7ff fe4c 	bl	8013f3c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80142a4:	f1ba 0f00 	cmp.w	sl, #0
 80142a8:	f000 80a5 	beq.w	80143f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80142ac:	7c23      	ldrb	r3, [r4, #16]
 80142ae:	9309      	str	r3, [sp, #36]	; 0x24
 80142b0:	2264      	movs	r2, #100	; 0x64
 80142b2:	4639      	mov	r1, r7
 80142b4:	a849      	add	r0, sp, #292	; 0x124
 80142b6:	f014 fa6e 	bl	8028796 <memcpy>
 80142ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80142bc:	2b00      	cmp	r3, #0
 80142be:	f000 80a7 	beq.w	8014410 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80142c2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80142c6:	7922      	ldrb	r2, [r4, #4]
 80142c8:	2a01      	cmp	r2, #1
 80142ca:	f040 808a 	bne.w	80143e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80142ce:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 80142d2:	1ac0      	subs	r0, r0, r3
 80142d4:	2302      	movs	r3, #2
 80142d6:	fb90 f0f3 	sdiv	r0, r0, r3
 80142da:	b200      	sxth	r0, r0
 80142dc:	7c23      	ldrb	r3, [r4, #16]
 80142de:	2b00      	cmp	r3, #0
 80142e0:	f000 808b 	beq.w	80143fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80142e4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 80142e8:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 80142ec:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80142f0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80142f4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80142f8:	4410      	add	r0, r2
 80142fa:	b200      	sxth	r0, r0
 80142fc:	9000      	str	r0, [sp, #0]
 80142fe:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8014302:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8014306:	4642      	mov	r2, r8
 8014308:	2100      	movs	r1, #0
 801430a:	4658      	mov	r0, fp
 801430c:	f7ff fca2 	bl	8013c54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8014310:	2800      	cmp	r0, #0
 8014312:	d163      	bne.n	80143dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014314:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014318:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801431c:	b2b2      	uxth	r2, r6
 801431e:	4413      	add	r3, r2
 8014320:	1a8a      	subs	r2, r1, r2
 8014322:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8014326:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801432a:	b21b      	sxth	r3, r3
 801432c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014330:	2a00      	cmp	r2, #0
 8014332:	d153      	bne.n	80143dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014334:	6822      	ldr	r2, [r4, #0]
 8014336:	8869      	ldrh	r1, [r5, #2]
 8014338:	7a12      	ldrb	r2, [r2, #8]
 801433a:	1a9b      	subs	r3, r3, r2
 801433c:	88ea      	ldrh	r2, [r5, #6]
 801433e:	440a      	add	r2, r1
 8014340:	b212      	sxth	r2, r2
 8014342:	4293      	cmp	r3, r2
 8014344:	dda7      	ble.n	8014296 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8014346:	e049      	b.n	80143dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014348:	7c23      	ldrb	r3, [r4, #16]
 801434a:	444f      	add	r7, r9
 801434c:	b1c3      	cbz	r3, 8014380 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801434e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8014352:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014356:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801435a:	443b      	add	r3, r7
 801435c:	4293      	cmp	r3, r2
 801435e:	da97      	bge.n	8014290 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014360:	a80e      	add	r0, sp, #56	; 0x38
 8014362:	f7ff fdeb 	bl	8013f3c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014366:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801436a:	3b01      	subs	r3, #1
 801436c:	b29b      	uxth	r3, r3
 801436e:	454b      	cmp	r3, r9
 8014370:	9309      	str	r3, [sp, #36]	; 0x24
 8014372:	d021      	beq.n	80143b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8014374:	7961      	ldrb	r1, [r4, #5]
 8014376:	a817      	add	r0, sp, #92	; 0x5c
 8014378:	f7f3 fb40 	bl	80079fc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801437c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801437e:	e7f4      	b.n	801436a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8014380:	fa1f f986 	uxth.w	r9, r6
 8014384:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014388:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801438c:	443b      	add	r3, r7
 801438e:	4293      	cmp	r3, r2
 8014390:	f6bf af7e 	bge.w	8014290 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014394:	a817      	add	r0, sp, #92	; 0x5c
 8014396:	f002 fe41 	bl	801701c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801439a:	b1f8      	cbz	r0, 80143dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801439c:	280a      	cmp	r0, #10
 801439e:	d1f1      	bne.n	8014384 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80143a0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80143a4:	444b      	add	r3, r9
 80143a6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80143aa:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80143ae:	eba3 0309 	sub.w	r3, r3, r9
 80143b2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80143b6:	e7e5      	b.n	8014384 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80143b8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80143bc:	b2b3      	uxth	r3, r6
 80143be:	441a      	add	r2, r3
 80143c0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80143c4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 80143c8:	1ad3      	subs	r3, r2, r3
 80143ca:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80143ce:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80143d2:	b11b      	cbz	r3, 80143dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80143d4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 80143d8:	2b00      	cmp	r3, #0
 80143da:	d0ba      	beq.n	8014352 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80143dc:	b063      	add	sp, #396	; 0x18c
 80143de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80143e2:	2a02      	cmp	r2, #2
 80143e4:	d105      	bne.n	80143f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 80143e6:	7be2      	ldrb	r2, [r4, #15]
 80143e8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80143ec:	1a80      	subs	r0, r0, r2
 80143ee:	1ac0      	subs	r0, r0, r3
 80143f0:	e773      	b.n	80142da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 80143f2:	2000      	movs	r0, #0
 80143f4:	e772      	b.n	80142dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80143f6:	7be0      	ldrb	r0, [r4, #15]
 80143f8:	e770      	b.n	80142dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80143fa:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80143fe:	e773      	b.n	80142e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8014400:	f1ba 0f00 	cmp.w	sl, #0
 8014404:	d0f7      	beq.n	80143f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8014406:	2264      	movs	r2, #100	; 0x64
 8014408:	4639      	mov	r1, r7
 801440a:	a849      	add	r0, sp, #292	; 0x124
 801440c:	f014 f9c3 	bl	8028796 <memcpy>
 8014410:	2300      	movs	r3, #0
 8014412:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014416:	6821      	ldr	r1, [r4, #0]
 8014418:	a849      	add	r0, sp, #292	; 0x124
 801441a:	f7ff fbae 	bl	8013b7a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801441e:	b203      	sxth	r3, r0
 8014420:	e751      	b.n	80142c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08014422 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8014422:	2b03      	cmp	r3, #3
 8014424:	d818      	bhi.n	8014458 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8014426:	e8df f003 	tbb	[pc, r3]
 801442a:	0602      	.short	0x0602
 801442c:	130d      	.short	0x130d
 801442e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014432:	1850      	adds	r0, r2, r1
 8014434:	4770      	bx	lr
 8014436:	8803      	ldrh	r3, [r0, #0]
 8014438:	8880      	ldrh	r0, [r0, #4]
 801443a:	4418      	add	r0, r3
 801443c:	b200      	sxth	r0, r0
 801443e:	1a80      	subs	r0, r0, r2
 8014440:	3801      	subs	r0, #1
 8014442:	4770      	bx	lr
 8014444:	8803      	ldrh	r3, [r0, #0]
 8014446:	8880      	ldrh	r0, [r0, #4]
 8014448:	4418      	add	r0, r3
 801444a:	b200      	sxth	r0, r0
 801444c:	1a40      	subs	r0, r0, r1
 801444e:	e7f7      	b.n	8014440 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8014450:	f9b0 0000 	ldrsh.w	r0, [r0]
 8014454:	4410      	add	r0, r2
 8014456:	4770      	bx	lr
 8014458:	2000      	movs	r0, #0
 801445a:	4770      	bx	lr

0801445c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801445c:	2b03      	cmp	r3, #3
 801445e:	d817      	bhi.n	8014490 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8014460:	e8df f003 	tbb	[pc, r3]
 8014464:	10090602 	.word	0x10090602
 8014468:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801446c:	1850      	adds	r0, r2, r1
 801446e:	4770      	bx	lr
 8014470:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014474:	e7fa      	b.n	801446c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8014476:	8843      	ldrh	r3, [r0, #2]
 8014478:	88c0      	ldrh	r0, [r0, #6]
 801447a:	4418      	add	r0, r3
 801447c:	b200      	sxth	r0, r0
 801447e:	1a80      	subs	r0, r0, r2
 8014480:	3801      	subs	r0, #1
 8014482:	4770      	bx	lr
 8014484:	8843      	ldrh	r3, [r0, #2]
 8014486:	88c0      	ldrh	r0, [r0, #6]
 8014488:	4418      	add	r0, r3
 801448a:	b200      	sxth	r0, r0
 801448c:	1a40      	subs	r0, r0, r1
 801448e:	e7f7      	b.n	8014480 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8014490:	2000      	movs	r0, #0
 8014492:	4770      	bx	lr

08014494 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8014494:	4b01      	ldr	r3, [pc, #4]	; (801449c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8014496:	2200      	movs	r2, #0
 8014498:	601a      	str	r2, [r3, #0]
 801449a:	4770      	bx	lr
 801449c:	200137cc 	.word	0x200137cc

080144a0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80144a0:	4603      	mov	r3, r0
 80144a2:	b1c8      	cbz	r0, 80144d8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80144a4:	0c02      	lsrs	r2, r0, #16
 80144a6:	0412      	lsls	r2, r2, #16
 80144a8:	b9a2      	cbnz	r2, 80144d4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80144aa:	0403      	lsls	r3, r0, #16
 80144ac:	2010      	movs	r0, #16
 80144ae:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80144b2:	bf04      	itt	eq
 80144b4:	021b      	lsleq	r3, r3, #8
 80144b6:	3008      	addeq	r0, #8
 80144b8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80144bc:	bf04      	itt	eq
 80144be:	011b      	lsleq	r3, r3, #4
 80144c0:	3004      	addeq	r0, #4
 80144c2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80144c6:	bf04      	itt	eq
 80144c8:	009b      	lsleq	r3, r3, #2
 80144ca:	3002      	addeq	r0, #2
 80144cc:	2b00      	cmp	r3, #0
 80144ce:	db04      	blt.n	80144da <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80144d0:	3001      	adds	r0, #1
 80144d2:	4770      	bx	lr
 80144d4:	2000      	movs	r0, #0
 80144d6:	e7ea      	b.n	80144ae <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80144d8:	2020      	movs	r0, #32
 80144da:	4770      	bx	lr

080144dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80144dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80144e0:	b087      	sub	sp, #28
 80144e2:	460d      	mov	r5, r1
 80144e4:	4616      	mov	r6, r2
 80144e6:	4698      	mov	r8, r3
 80144e8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80144ec:	4601      	mov	r1, r0
 80144ee:	b120      	cbz	r0, 80144fa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80144f0:	b11a      	cbz	r2, 80144fa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80144f2:	2d1f      	cmp	r5, #31
 80144f4:	d801      	bhi.n	80144fa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80144f6:	2b1f      	cmp	r3, #31
 80144f8:	d904      	bls.n	8014504 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 80144fa:	2000      	movs	r0, #0
 80144fc:	6038      	str	r0, [r7, #0]
 80144fe:	b007      	add	sp, #28
 8014500:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014504:	b97d      	cbnz	r5, 8014526 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8014506:	b143      	cbz	r3, 801451a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8014508:	4602      	mov	r2, r0
 801450a:	e9cd 4700 	strd	r4, r7, [sp]
 801450e:	462b      	mov	r3, r5
 8014510:	4641      	mov	r1, r8
 8014512:	4630      	mov	r0, r6
 8014514:	f7ff ffe2 	bl	80144dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014518:	e7f1      	b.n	80144fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801451a:	f04f 33ff 	mov.w	r3, #4294967295
 801451e:	603b      	str	r3, [r7, #0]
 8014520:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8014524:	e7eb      	b.n	80144fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014526:	fa32 fa05 	lsrs.w	sl, r2, r5
 801452a:	d106      	bne.n	801453a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801452c:	4346      	muls	r6, r0
 801452e:	fbb6 f0f4 	udiv	r0, r6, r4
 8014532:	fb04 6610 	mls	r6, r4, r0, r6
 8014536:	603e      	str	r6, [r7, #0]
 8014538:	e7e1      	b.n	80144fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801453a:	2201      	movs	r2, #1
 801453c:	40aa      	lsls	r2, r5
 801453e:	3a01      	subs	r2, #1
 8014540:	4016      	ands	r6, r2
 8014542:	fa00 fb05 	lsl.w	fp, r0, r5
 8014546:	4630      	mov	r0, r6
 8014548:	fbbb f9f4 	udiv	r9, fp, r4
 801454c:	fb0a f309 	mul.w	r3, sl, r9
 8014550:	9303      	str	r3, [sp, #12]
 8014552:	f7ff ffa5 	bl	80144a0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014556:	462b      	mov	r3, r5
 8014558:	460a      	mov	r2, r1
 801455a:	e9cd 4700 	strd	r4, r7, [sp]
 801455e:	4601      	mov	r1, r0
 8014560:	4630      	mov	r0, r6
 8014562:	f7ff ffbb 	bl	80144dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014566:	fb04 b919 	mls	r9, r4, r9, fp
 801456a:	4606      	mov	r6, r0
 801456c:	4648      	mov	r0, r9
 801456e:	eb05 0108 	add.w	r1, r5, r8
 8014572:	f7ff ff95 	bl	80144a0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014576:	ab05      	add	r3, sp, #20
 8014578:	e9cd 4300 	strd	r4, r3, [sp]
 801457c:	464a      	mov	r2, r9
 801457e:	4603      	mov	r3, r0
 8014580:	4650      	mov	r0, sl
 8014582:	f7ff ffab 	bl	80144dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014586:	6839      	ldr	r1, [r7, #0]
 8014588:	9a05      	ldr	r2, [sp, #20]
 801458a:	9b03      	ldr	r3, [sp, #12]
 801458c:	4411      	add	r1, r2
 801458e:	fbb1 f2f4 	udiv	r2, r1, r4
 8014592:	18d3      	adds	r3, r2, r3
 8014594:	441e      	add	r6, r3
 8014596:	fb04 1412 	mls	r4, r4, r2, r1
 801459a:	4430      	add	r0, r6
 801459c:	603c      	str	r4, [r7, #0]
 801459e:	e7ae      	b.n	80144fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

080145a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80145a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80145a4:	b085      	sub	sp, #20
 80145a6:	f1b0 0900 	subs.w	r9, r0, #0
 80145aa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80145ac:	461d      	mov	r5, r3
 80145ae:	bfbf      	itttt	lt
 80145b0:	6823      	ldrlt	r3, [r4, #0]
 80145b2:	425b      	neglt	r3, r3
 80145b4:	f1c9 0900 	rsblt	r9, r9, #0
 80145b8:	6023      	strlt	r3, [r4, #0]
 80145ba:	bfb4      	ite	lt
 80145bc:	f04f 36ff 	movlt.w	r6, #4294967295
 80145c0:	2601      	movge	r6, #1
 80145c2:	2a00      	cmp	r2, #0
 80145c4:	4617      	mov	r7, r2
 80145c6:	da04      	bge.n	80145d2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80145c8:	6823      	ldr	r3, [r4, #0]
 80145ca:	425b      	negs	r3, r3
 80145cc:	4257      	negs	r7, r2
 80145ce:	4276      	negs	r6, r6
 80145d0:	6023      	str	r3, [r4, #0]
 80145d2:	2d00      	cmp	r5, #0
 80145d4:	4638      	mov	r0, r7
 80145d6:	bfba      	itte	lt
 80145d8:	426d      	neglt	r5, r5
 80145da:	f04f 38ff 	movlt.w	r8, #4294967295
 80145de:	f04f 0801 	movge.w	r8, #1
 80145e2:	f7ff ff5d 	bl	80144a0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80145e6:	ab03      	add	r3, sp, #12
 80145e8:	e9cd 5300 	strd	r5, r3, [sp]
 80145ec:	463a      	mov	r2, r7
 80145ee:	4603      	mov	r3, r0
 80145f0:	4648      	mov	r0, r9
 80145f2:	f7ff ff73 	bl	80144dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80145f6:	6823      	ldr	r3, [r4, #0]
 80145f8:	9a03      	ldr	r2, [sp, #12]
 80145fa:	4546      	cmp	r6, r8
 80145fc:	441a      	add	r2, r3
 80145fe:	fb92 f3f5 	sdiv	r3, r2, r5
 8014602:	4418      	add	r0, r3
 8014604:	bf18      	it	ne
 8014606:	4240      	negne	r0, r0
 8014608:	fb05 2313 	mls	r3, r5, r3, r2
 801460c:	1c72      	adds	r2, r6, #1
 801460e:	6023      	str	r3, [r4, #0]
 8014610:	d105      	bne.n	801461e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8014612:	2b00      	cmp	r3, #0
 8014614:	f1c3 0200 	rsb	r2, r3, #0
 8014618:	db0b      	blt.n	8014632 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801461a:	6022      	str	r2, [r4, #0]
 801461c:	e006      	b.n	801462c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801461e:	2e01      	cmp	r6, #1
 8014620:	d104      	bne.n	801462c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014622:	2b00      	cmp	r3, #0
 8014624:	da02      	bge.n	801462c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014626:	442b      	add	r3, r5
 8014628:	3801      	subs	r0, #1
 801462a:	6023      	str	r3, [r4, #0]
 801462c:	b005      	add	sp, #20
 801462e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014632:	3801      	subs	r0, #1
 8014634:	1b52      	subs	r2, r2, r5
 8014636:	e7f0      	b.n	801461a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08014638 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8014638:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801463c:	4c1c      	ldr	r4, [pc, #112]	; (80146b0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801463e:	6807      	ldr	r7, [r0, #0]
 8014640:	69a3      	ldr	r3, [r4, #24]
 8014642:	4605      	mov	r5, r0
 8014644:	b92b      	cbnz	r3, 8014652 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8014646:	6840      	ldr	r0, [r0, #4]
 8014648:	e9c5 7000 	strd	r7, r0, [r5]
 801464c:	b004      	add	sp, #16
 801464e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014652:	68a2      	ldr	r2, [r4, #8]
 8014654:	6820      	ldr	r0, [r4, #0]
 8014656:	ae04      	add	r6, sp, #16
 8014658:	f04f 0802 	mov.w	r8, #2
 801465c:	fb93 f1f8 	sdiv	r1, r3, r8
 8014660:	440a      	add	r2, r1
 8014662:	f846 2d04 	str.w	r2, [r6, #-4]!
 8014666:	69e1      	ldr	r1, [r4, #28]
 8014668:	9600      	str	r6, [sp, #0]
 801466a:	463a      	mov	r2, r7
 801466c:	f7ff ff98 	bl	80145a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014670:	69a3      	ldr	r3, [r4, #24]
 8014672:	686a      	ldr	r2, [r5, #4]
 8014674:	6a21      	ldr	r1, [r4, #32]
 8014676:	9600      	str	r6, [sp, #0]
 8014678:	4607      	mov	r7, r0
 801467a:	6860      	ldr	r0, [r4, #4]
 801467c:	f7ff ff90 	bl	80145a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014680:	6962      	ldr	r2, [r4, #20]
 8014682:	69a3      	ldr	r3, [r4, #24]
 8014684:	fb93 f8f8 	sdiv	r8, r3, r8
 8014688:	4442      	add	r2, r8
 801468a:	9203      	str	r2, [sp, #12]
 801468c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801468e:	682a      	ldr	r2, [r5, #0]
 8014690:	9600      	str	r6, [sp, #0]
 8014692:	4407      	add	r7, r0
 8014694:	68e0      	ldr	r0, [r4, #12]
 8014696:	f7ff ff83 	bl	80145a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801469a:	9600      	str	r6, [sp, #0]
 801469c:	4680      	mov	r8, r0
 801469e:	69a3      	ldr	r3, [r4, #24]
 80146a0:	686a      	ldr	r2, [r5, #4]
 80146a2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80146a4:	6920      	ldr	r0, [r4, #16]
 80146a6:	f7ff ff7b 	bl	80145a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80146aa:	4440      	add	r0, r8
 80146ac:	e7cc      	b.n	8014648 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80146ae:	bf00      	nop
 80146b0:	200137d0 	.word	0x200137d0

080146b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80146b4:	4b07      	ldr	r3, [pc, #28]	; (80146d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80146b6:	781b      	ldrb	r3, [r3, #0]
 80146b8:	2b01      	cmp	r3, #1
 80146ba:	d109      	bne.n	80146d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80146bc:	f9b1 3000 	ldrsh.w	r3, [r1]
 80146c0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80146c4:	8003      	strh	r3, [r0, #0]
 80146c6:	4b04      	ldr	r3, [pc, #16]	; (80146d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80146c8:	881b      	ldrh	r3, [r3, #0]
 80146ca:	3b01      	subs	r3, #1
 80146cc:	1a9b      	subs	r3, r3, r2
 80146ce:	800b      	strh	r3, [r1, #0]
 80146d0:	4770      	bx	lr
 80146d2:	bf00      	nop
 80146d4:	200137b4 	.word	0x200137b4
 80146d8:	200137b0 	.word	0x200137b0

080146dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80146dc:	b510      	push	{r4, lr}
 80146de:	4b07      	ldr	r3, [pc, #28]	; (80146fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80146e0:	781b      	ldrb	r3, [r3, #0]
 80146e2:	2b01      	cmp	r3, #1
 80146e4:	d108      	bne.n	80146f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80146e6:	4b06      	ldr	r3, [pc, #24]	; (8014700 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80146e8:	880c      	ldrh	r4, [r1, #0]
 80146ea:	881b      	ldrh	r3, [r3, #0]
 80146ec:	f9b0 2000 	ldrsh.w	r2, [r0]
 80146f0:	3b01      	subs	r3, #1
 80146f2:	1b1b      	subs	r3, r3, r4
 80146f4:	8003      	strh	r3, [r0, #0]
 80146f6:	800a      	strh	r2, [r1, #0]
 80146f8:	bd10      	pop	{r4, pc}
 80146fa:	bf00      	nop
 80146fc:	200137b4 	.word	0x200137b4
 8014700:	200137b0 	.word	0x200137b0

08014704 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8014704:	b510      	push	{r4, lr}
 8014706:	4b0a      	ldr	r3, [pc, #40]	; (8014730 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8014708:	781b      	ldrb	r3, [r3, #0]
 801470a:	2b01      	cmp	r3, #1
 801470c:	d10e      	bne.n	801472c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801470e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014712:	8843      	ldrh	r3, [r0, #2]
 8014714:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014718:	8044      	strh	r4, [r0, #2]
 801471a:	18ca      	adds	r2, r1, r3
 801471c:	4b05      	ldr	r3, [pc, #20]	; (8014734 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801471e:	881b      	ldrh	r3, [r3, #0]
 8014720:	1a9b      	subs	r3, r3, r2
 8014722:	8003      	strh	r3, [r0, #0]
 8014724:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014728:	80c3      	strh	r3, [r0, #6]
 801472a:	8081      	strh	r1, [r0, #4]
 801472c:	bd10      	pop	{r4, pc}
 801472e:	bf00      	nop
 8014730:	200137b4 	.word	0x200137b4
 8014734:	200137b0 	.word	0x200137b0

08014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8014738:	4b08      	ldr	r3, [pc, #32]	; (801475c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801473a:	781b      	ldrb	r3, [r3, #0]
 801473c:	2b01      	cmp	r3, #1
 801473e:	d10c      	bne.n	801475a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8014740:	8803      	ldrh	r3, [r0, #0]
 8014742:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8014746:	8842      	ldrh	r2, [r0, #2]
 8014748:	8002      	strh	r2, [r0, #0]
 801474a:	185a      	adds	r2, r3, r1
 801474c:	4b04      	ldr	r3, [pc, #16]	; (8014760 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801474e:	881b      	ldrh	r3, [r3, #0]
 8014750:	1a9b      	subs	r3, r3, r2
 8014752:	8043      	strh	r3, [r0, #2]
 8014754:	88c3      	ldrh	r3, [r0, #6]
 8014756:	8083      	strh	r3, [r0, #4]
 8014758:	80c1      	strh	r1, [r0, #6]
 801475a:	4770      	bx	lr
 801475c:	200137b4 	.word	0x200137b4
 8014760:	200137b0 	.word	0x200137b0

08014764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8014764:	b510      	push	{r4, lr}
 8014766:	4b07      	ldr	r3, [pc, #28]	; (8014784 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8014768:	781b      	ldrb	r3, [r3, #0]
 801476a:	2b01      	cmp	r3, #1
 801476c:	d108      	bne.n	8014780 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801476e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014772:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014776:	8003      	strh	r3, [r0, #0]
 8014778:	8893      	ldrh	r3, [r2, #4]
 801477a:	3b01      	subs	r3, #1
 801477c:	1b1b      	subs	r3, r3, r4
 801477e:	800b      	strh	r3, [r1, #0]
 8014780:	bd10      	pop	{r4, pc}
 8014782:	bf00      	nop
 8014784:	200137b4 	.word	0x200137b4

08014788 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8014788:	4b0b      	ldr	r3, [pc, #44]	; (80147b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801478a:	781b      	ldrb	r3, [r3, #0]
 801478c:	2b01      	cmp	r3, #1
 801478e:	d111      	bne.n	80147b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8014790:	680b      	ldr	r3, [r1, #0]
 8014792:	ed90 7a00 	vldr	s14, [r0]
 8014796:	6003      	str	r3, [r0, #0]
 8014798:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 801479c:	eddf 6a07 	vldr	s13, [pc, #28]	; 80147bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 80147a0:	ee07 3a90 	vmov	s15, r3
 80147a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80147a8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80147ac:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80147b0:	edc1 7a00 	vstr	s15, [r1]
 80147b4:	4770      	bx	lr
 80147b6:	bf00      	nop
 80147b8:	200137b4 	.word	0x200137b4
 80147bc:	38d1b717 	.word	0x38d1b717

080147c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80147c0:	b510      	push	{r4, lr}
 80147c2:	4b0a      	ldr	r3, [pc, #40]	; (80147ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80147c4:	781b      	ldrb	r3, [r3, #0]
 80147c6:	2b01      	cmp	r3, #1
 80147c8:	460a      	mov	r2, r1
 80147ca:	d10d      	bne.n	80147e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80147cc:	8881      	ldrh	r1, [r0, #4]
 80147ce:	8803      	ldrh	r3, [r0, #0]
 80147d0:	440b      	add	r3, r1
 80147d2:	4601      	mov	r1, r0
 80147d4:	3b01      	subs	r3, #1
 80147d6:	f821 3b02 	strh.w	r3, [r1], #2
 80147da:	f7ff ffc3 	bl	8014764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80147de:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80147e2:	88c2      	ldrh	r2, [r0, #6]
 80147e4:	8082      	strh	r2, [r0, #4]
 80147e6:	80c3      	strh	r3, [r0, #6]
 80147e8:	bd10      	pop	{r4, pc}
 80147ea:	bf00      	nop
 80147ec:	200137b4 	.word	0x200137b4

080147f0 <_ZN8touchgfx11Application13requestRedrawEv>:
 80147f0:	4b06      	ldr	r3, [pc, #24]	; (801480c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80147f2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80147f6:	4b06      	ldr	r3, [pc, #24]	; (8014810 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80147f8:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 80147fc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014800:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8014804:	2100      	movs	r1, #0
 8014806:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 801480a:	4770      	bx	lr
 801480c:	200137b0 	.word	0x200137b0
 8014810:	200137b2 	.word	0x200137b2

08014814 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8014814:	4b03      	ldr	r3, [pc, #12]	; (8014824 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8014816:	6818      	ldr	r0, [r3, #0]
 8014818:	b110      	cbz	r0, 8014820 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801481a:	6803      	ldr	r3, [r0, #0]
 801481c:	699b      	ldr	r3, [r3, #24]
 801481e:	4718      	bx	r3
 8014820:	4770      	bx	lr
 8014822:	bf00      	nop
 8014824:	20013800 	.word	0x20013800

08014828 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8014828:	4770      	bx	lr
	...

0801482c <_ZN8touchgfx11Application4drawEv>:
 801482c:	b507      	push	{r0, r1, r2, lr}
 801482e:	4b09      	ldr	r3, [pc, #36]	; (8014854 <_ZN8touchgfx11Application4drawEv+0x28>)
 8014830:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014834:	4b08      	ldr	r3, [pc, #32]	; (8014858 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8014836:	f8ad 2004 	strh.w	r2, [sp, #4]
 801483a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801483e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014842:	6803      	ldr	r3, [r0, #0]
 8014844:	2100      	movs	r1, #0
 8014846:	9100      	str	r1, [sp, #0]
 8014848:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801484a:	4669      	mov	r1, sp
 801484c:	4798      	blx	r3
 801484e:	b003      	add	sp, #12
 8014850:	f85d fb04 	ldr.w	pc, [sp], #4
 8014854:	200137b0 	.word	0x200137b0
 8014858:	200137b2 	.word	0x200137b2

0801485c <_ZN8touchgfx11Application10invalidateEv>:
 801485c:	4b09      	ldr	r3, [pc, #36]	; (8014884 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801485e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014862:	4b09      	ldr	r3, [pc, #36]	; (8014888 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8014864:	b082      	sub	sp, #8
 8014866:	f9b3 3000 	ldrsh.w	r3, [r3]
 801486a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801486e:	2100      	movs	r1, #0
 8014870:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014874:	9100      	str	r1, [sp, #0]
 8014876:	6803      	ldr	r3, [r0, #0]
 8014878:	aa02      	add	r2, sp, #8
 801487a:	e912 0006 	ldmdb	r2, {r1, r2}
 801487e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8014880:	b002      	add	sp, #8
 8014882:	4718      	bx	r3
 8014884:	200137b0 	.word	0x200137b0
 8014888:	200137b2 	.word	0x200137b2

0801488c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801488c:	4b03      	ldr	r3, [pc, #12]	; (801489c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801488e:	6818      	ldr	r0, [r3, #0]
 8014890:	b110      	cbz	r0, 8014898 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8014892:	6803      	ldr	r3, [r0, #0]
 8014894:	69db      	ldr	r3, [r3, #28]
 8014896:	4718      	bx	r3
 8014898:	4770      	bx	lr
 801489a:	bf00      	nop
 801489c:	20013800 	.word	0x20013800

080148a0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 80148a0:	4b03      	ldr	r3, [pc, #12]	; (80148b0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 80148a2:	6818      	ldr	r0, [r3, #0]
 80148a4:	b110      	cbz	r0, 80148ac <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80148a6:	6803      	ldr	r3, [r0, #0]
 80148a8:	6a1b      	ldr	r3, [r3, #32]
 80148aa:	4718      	bx	r3
 80148ac:	4770      	bx	lr
 80148ae:	bf00      	nop
 80148b0:	20013800 	.word	0x20013800

080148b4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80148b4:	2300      	movs	r3, #0
 80148b6:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 80148ba:	4770      	bx	lr

080148bc <_ZN8touchgfx11Application14handleKeyEventEh>:
 80148bc:	4b03      	ldr	r3, [pc, #12]	; (80148cc <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80148be:	6818      	ldr	r0, [r3, #0]
 80148c0:	b110      	cbz	r0, 80148c8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80148c2:	6803      	ldr	r3, [r0, #0]
 80148c4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80148c6:	4718      	bx	r3
 80148c8:	4770      	bx	lr
 80148ca:	bf00      	nop
 80148cc:	20013800 	.word	0x20013800

080148d0 <_ZN8touchgfx11ApplicationD1Ev>:
 80148d0:	4770      	bx	lr

080148d2 <_ZN8touchgfx11ApplicationD0Ev>:
 80148d2:	b510      	push	{r4, lr}
 80148d4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80148d8:	4604      	mov	r4, r0
 80148da:	f012 fe40 	bl	802755e <_ZdlPvj>
 80148de:	4620      	mov	r0, r4
 80148e0:	bd10      	pop	{r4, pc}

080148e2 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80148e2:	b510      	push	{r4, lr}
 80148e4:	f9b1 4000 	ldrsh.w	r4, [r1]
 80148e8:	888a      	ldrh	r2, [r1, #4]
 80148ea:	f9b0 3000 	ldrsh.w	r3, [r0]
 80148ee:	4422      	add	r2, r4
 80148f0:	b212      	sxth	r2, r2
 80148f2:	4293      	cmp	r3, r2
 80148f4:	da15      	bge.n	8014922 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80148f6:	8882      	ldrh	r2, [r0, #4]
 80148f8:	4413      	add	r3, r2
 80148fa:	b21b      	sxth	r3, r3
 80148fc:	429c      	cmp	r4, r3
 80148fe:	da10      	bge.n	8014922 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014900:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8014904:	88c9      	ldrh	r1, [r1, #6]
 8014906:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801490a:	4419      	add	r1, r3
 801490c:	b209      	sxth	r1, r1
 801490e:	428a      	cmp	r2, r1
 8014910:	da07      	bge.n	8014922 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014912:	88c0      	ldrh	r0, [r0, #6]
 8014914:	4410      	add	r0, r2
 8014916:	b200      	sxth	r0, r0
 8014918:	4283      	cmp	r3, r0
 801491a:	bfac      	ite	ge
 801491c:	2000      	movge	r0, #0
 801491e:	2001      	movlt	r0, #1
 8014920:	bd10      	pop	{r4, pc}
 8014922:	2000      	movs	r0, #0
 8014924:	e7fc      	b.n	8014920 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08014926 <_ZN8touchgfx4Rect10restrictToEss>:
 8014926:	f9b0 3000 	ldrsh.w	r3, [r0]
 801492a:	2b00      	cmp	r3, #0
 801492c:	b510      	push	{r4, lr}
 801492e:	da04      	bge.n	801493a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8014930:	8884      	ldrh	r4, [r0, #4]
 8014932:	4423      	add	r3, r4
 8014934:	8083      	strh	r3, [r0, #4]
 8014936:	2300      	movs	r3, #0
 8014938:	8003      	strh	r3, [r0, #0]
 801493a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801493e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014942:	1b09      	subs	r1, r1, r4
 8014944:	428b      	cmp	r3, r1
 8014946:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801494a:	bfc8      	it	gt
 801494c:	8081      	strhgt	r1, [r0, #4]
 801494e:	2b00      	cmp	r3, #0
 8014950:	da04      	bge.n	801495c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8014952:	88c1      	ldrh	r1, [r0, #6]
 8014954:	440b      	add	r3, r1
 8014956:	80c3      	strh	r3, [r0, #6]
 8014958:	2300      	movs	r3, #0
 801495a:	8043      	strh	r3, [r0, #2]
 801495c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8014960:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8014964:	1a52      	subs	r2, r2, r1
 8014966:	4293      	cmp	r3, r2
 8014968:	bfc8      	it	gt
 801496a:	80c2      	strhgt	r2, [r0, #6]
 801496c:	bd10      	pop	{r4, pc}
	...

08014970 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8014970:	b510      	push	{r4, lr}
 8014972:	4b10      	ldr	r3, [pc, #64]	; (80149b4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8014974:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014978:	4b0f      	ldr	r3, [pc, #60]	; (80149b8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801497a:	460c      	mov	r4, r1
 801497c:	4620      	mov	r0, r4
 801497e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014982:	f7ff ffd0 	bl	8014926 <_ZN8touchgfx4Rect10restrictToEss>
 8014986:	4b0d      	ldr	r3, [pc, #52]	; (80149bc <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8014988:	6818      	ldr	r0, [r3, #0]
 801498a:	b190      	cbz	r0, 80149b2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 801498c:	6803      	ldr	r3, [r0, #0]
 801498e:	4621      	mov	r1, r4
 8014990:	689b      	ldr	r3, [r3, #8]
 8014992:	4798      	blx	r3
 8014994:	4b0a      	ldr	r3, [pc, #40]	; (80149c0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8014996:	6818      	ldr	r0, [r3, #0]
 8014998:	b118      	cbz	r0, 80149a2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801499a:	6803      	ldr	r3, [r0, #0]
 801499c:	4621      	mov	r1, r4
 801499e:	689b      	ldr	r3, [r3, #8]
 80149a0:	4798      	blx	r3
 80149a2:	4b08      	ldr	r3, [pc, #32]	; (80149c4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 80149a4:	6818      	ldr	r0, [r3, #0]
 80149a6:	6803      	ldr	r3, [r0, #0]
 80149a8:	4621      	mov	r1, r4
 80149aa:	69db      	ldr	r3, [r3, #28]
 80149ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80149b0:	4718      	bx	r3
 80149b2:	bd10      	pop	{r4, pc}
 80149b4:	200137b2 	.word	0x200137b2
 80149b8:	200137b0 	.word	0x200137b0
 80149bc:	20013800 	.word	0x20013800
 80149c0:	200137fc 	.word	0x200137fc
 80149c4:	200137bc 	.word	0x200137bc

080149c8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 80149c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80149ca:	4606      	mov	r6, r0
 80149cc:	4608      	mov	r0, r1
 80149ce:	460f      	mov	r7, r1
 80149d0:	f7fa ff97 	bl	800f902 <_ZNK8touchgfx4Rect7isEmptyEv>
 80149d4:	b9e8      	cbnz	r0, 8014a12 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80149d6:	f9b7 5000 	ldrsh.w	r5, [r7]
 80149da:	f9b6 4000 	ldrsh.w	r4, [r6]
 80149de:	42a5      	cmp	r5, r4
 80149e0:	db17      	blt.n	8014a12 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80149e2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80149e6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80149ea:	429a      	cmp	r2, r3
 80149ec:	db11      	blt.n	8014a12 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80149ee:	88b9      	ldrh	r1, [r7, #4]
 80149f0:	440d      	add	r5, r1
 80149f2:	88b1      	ldrh	r1, [r6, #4]
 80149f4:	440c      	add	r4, r1
 80149f6:	b22d      	sxth	r5, r5
 80149f8:	b224      	sxth	r4, r4
 80149fa:	42a5      	cmp	r5, r4
 80149fc:	dc09      	bgt.n	8014a12 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80149fe:	88f8      	ldrh	r0, [r7, #6]
 8014a00:	4410      	add	r0, r2
 8014a02:	88f2      	ldrh	r2, [r6, #6]
 8014a04:	4413      	add	r3, r2
 8014a06:	b200      	sxth	r0, r0
 8014a08:	b21b      	sxth	r3, r3
 8014a0a:	4298      	cmp	r0, r3
 8014a0c:	bfcc      	ite	gt
 8014a0e:	2000      	movgt	r0, #0
 8014a10:	2001      	movle	r0, #1
 8014a12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014a14 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8014a14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014a16:	4604      	mov	r4, r0
 8014a18:	4608      	mov	r0, r1
 8014a1a:	460d      	mov	r5, r1
 8014a1c:	f7fa ff71 	bl	800f902 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014a20:	b978      	cbnz	r0, 8014a42 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8014a22:	4620      	mov	r0, r4
 8014a24:	f7fa ff6d 	bl	800f902 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014a28:	f9b5 6000 	ldrsh.w	r6, [r5]
 8014a2c:	b150      	cbz	r0, 8014a44 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8014a2e:	8026      	strh	r6, [r4, #0]
 8014a30:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8014a34:	8063      	strh	r3, [r4, #2]
 8014a36:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8014a3a:	80a3      	strh	r3, [r4, #4]
 8014a3c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8014a40:	80e3      	strh	r3, [r4, #6]
 8014a42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014a44:	f9b4 1000 	ldrsh.w	r1, [r4]
 8014a48:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014a4c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8014a50:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8014a54:	88ed      	ldrh	r5, [r5, #6]
 8014a56:	42b1      	cmp	r1, r6
 8014a58:	460f      	mov	r7, r1
 8014a5a:	bfa8      	it	ge
 8014a5c:	4637      	movge	r7, r6
 8014a5e:	4293      	cmp	r3, r2
 8014a60:	4618      	mov	r0, r3
 8014a62:	4466      	add	r6, ip
 8014a64:	bfa8      	it	ge
 8014a66:	4610      	movge	r0, r2
 8014a68:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8014a6c:	8027      	strh	r7, [r4, #0]
 8014a6e:	442a      	add	r2, r5
 8014a70:	88e5      	ldrh	r5, [r4, #6]
 8014a72:	8060      	strh	r0, [r4, #2]
 8014a74:	4461      	add	r1, ip
 8014a76:	442b      	add	r3, r5
 8014a78:	b236      	sxth	r6, r6
 8014a7a:	b209      	sxth	r1, r1
 8014a7c:	b212      	sxth	r2, r2
 8014a7e:	b21b      	sxth	r3, r3
 8014a80:	428e      	cmp	r6, r1
 8014a82:	bfac      	ite	ge
 8014a84:	ebc7 0106 	rsbge	r1, r7, r6
 8014a88:	ebc7 0101 	rsblt	r1, r7, r1
 8014a8c:	429a      	cmp	r2, r3
 8014a8e:	bfac      	ite	ge
 8014a90:	ebc0 0202 	rsbge	r2, r0, r2
 8014a94:	ebc0 0203 	rsblt	r2, r0, r3
 8014a98:	80a1      	strh	r1, [r4, #4]
 8014a9a:	80e2      	strh	r2, [r4, #6]
 8014a9c:	e7d1      	b.n	8014a42 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08014aa0 <_ZN8touchgfx11Application11getInstanceEv>:
 8014aa0:	4b01      	ldr	r3, [pc, #4]	; (8014aa8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8014aa2:	6818      	ldr	r0, [r3, #0]
 8014aa4:	4770      	bx	lr
 8014aa6:	bf00      	nop
 8014aa8:	20013810 	.word	0x20013810

08014aac <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8014aac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014aae:	4b10      	ldr	r3, [pc, #64]	; (8014af0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8014ab0:	781b      	ldrb	r3, [r3, #0]
 8014ab2:	4605      	mov	r5, r0
 8014ab4:	b1d3      	cbz	r3, 8014aec <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8014ab6:	4b0f      	ldr	r3, [pc, #60]	; (8014af4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8014ab8:	4f0f      	ldr	r7, [pc, #60]	; (8014af8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8014aba:	881c      	ldrh	r4, [r3, #0]
 8014abc:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8014ac0:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8014ac4:	42a3      	cmp	r3, r4
 8014ac6:	d90e      	bls.n	8014ae6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8014ac8:	683b      	ldr	r3, [r7, #0]
 8014aca:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8014ace:	b10a      	cbz	r2, 8014ad4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8014ad0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8014ad2:	b900      	cbnz	r0, 8014ad6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8014ad4:	6898      	ldr	r0, [r3, #8]
 8014ad6:	6803      	ldr	r3, [r0, #0]
 8014ad8:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8014adc:	69db      	ldr	r3, [r3, #28]
 8014ade:	3401      	adds	r4, #1
 8014ae0:	4798      	blx	r3
 8014ae2:	b2a4      	uxth	r4, r4
 8014ae4:	e7ec      	b.n	8014ac0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8014ae6:	2300      	movs	r3, #0
 8014ae8:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8014aec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014aee:	bf00      	nop
 8014af0:	200137ba 	.word	0x200137ba
 8014af4:	20000088 	.word	0x20000088
 8014af8:	200137bc 	.word	0x200137bc

08014afc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8014afc:	b510      	push	{r4, lr}
 8014afe:	2300      	movs	r3, #0
 8014b00:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8014b04:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8014b08:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8014b0c:	4604      	mov	r4, r0
 8014b0e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8014b12:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8014b16:	429a      	cmp	r2, r3
 8014b18:	d90e      	bls.n	8014b38 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8014b1a:	18e2      	adds	r2, r4, r3
 8014b1c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8014b20:	b122      	cbz	r2, 8014b2c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8014b22:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8014b26:	6803      	ldr	r3, [r0, #0]
 8014b28:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014b2a:	4798      	blx	r3
 8014b2c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8014b30:	3301      	adds	r3, #1
 8014b32:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8014b36:	e7ea      	b.n	8014b0e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8014b38:	bd10      	pop	{r4, pc}

08014b3a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8014b3a:	b530      	push	{r4, r5, lr}
 8014b3c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8014b40:	2200      	movs	r2, #0
 8014b42:	b293      	uxth	r3, r2
 8014b44:	429d      	cmp	r5, r3
 8014b46:	d90e      	bls.n	8014b66 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8014b48:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8014b4c:	428b      	cmp	r3, r1
 8014b4e:	d10b      	bne.n	8014b68 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8014b50:	1884      	adds	r4, r0, r2
 8014b52:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8014b56:	b13b      	cbz	r3, 8014b68 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8014b58:	3b01      	subs	r3, #1
 8014b5a:	b2db      	uxtb	r3, r3
 8014b5c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8014b60:	b90b      	cbnz	r3, 8014b66 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8014b62:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8014b66:	bd30      	pop	{r4, r5, pc}
 8014b68:	3201      	adds	r2, #1
 8014b6a:	e7ea      	b.n	8014b42 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08014b6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8014b6c:	2300      	movs	r3, #0
 8014b6e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8014b72:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8014b76:	30a4      	adds	r0, #164	; 0xa4
 8014b78:	f802 3b01 	strb.w	r3, [r2], #1
 8014b7c:	4282      	cmp	r2, r0
 8014b7e:	d1fb      	bne.n	8014b78 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8014b80:	4770      	bx	lr
	...

08014b84 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8014b84:	b570      	push	{r4, r5, r6, lr}
 8014b86:	4c0b      	ldr	r4, [pc, #44]	; (8014bb4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8014b88:	4605      	mov	r5, r0
 8014b8a:	6820      	ldr	r0, [r4, #0]
 8014b8c:	460e      	mov	r6, r1
 8014b8e:	b110      	cbz	r0, 8014b96 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8014b90:	6803      	ldr	r3, [r0, #0]
 8014b92:	695b      	ldr	r3, [r3, #20]
 8014b94:	4798      	blx	r3
 8014b96:	1d28      	adds	r0, r5, #4
 8014b98:	f7ff ffe8 	bl	8014b6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8014b9c:	6026      	str	r6, [r4, #0]
 8014b9e:	6833      	ldr	r3, [r6, #0]
 8014ba0:	4630      	mov	r0, r6
 8014ba2:	68db      	ldr	r3, [r3, #12]
 8014ba4:	4798      	blx	r3
 8014ba6:	682b      	ldr	r3, [r5, #0]
 8014ba8:	4628      	mov	r0, r5
 8014baa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014bac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014bb0:	4718      	bx	r3
 8014bb2:	bf00      	nop
 8014bb4:	20013800 	.word	0x20013800

08014bb8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8014bb8:	2300      	movs	r3, #0
 8014bba:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8014bbe:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8014bc2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014bc4:	461a      	mov	r2, r3
 8014bc6:	461c      	mov	r4, r3
 8014bc8:	461d      	mov	r5, r3
 8014bca:	459c      	cmp	ip, r3
 8014bcc:	dd1a      	ble.n	8014c04 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8014bce:	18c6      	adds	r6, r0, r3
 8014bd0:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8014bd4:	b16e      	cbz	r6, 8014bf2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8014bd6:	429a      	cmp	r2, r3
 8014bd8:	d008      	beq.n	8014bec <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8014bda:	fa1f fe82 	uxth.w	lr, r2
 8014bde:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8014be2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8014be6:	1887      	adds	r7, r0, r2
 8014be8:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8014bec:	3201      	adds	r2, #1
 8014bee:	3301      	adds	r3, #1
 8014bf0:	e7eb      	b.n	8014bca <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8014bf2:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8014bf6:	4299      	cmp	r1, r3
 8014bf8:	bfa8      	it	ge
 8014bfa:	3501      	addge	r5, #1
 8014bfc:	429e      	cmp	r6, r3
 8014bfe:	bfc8      	it	gt
 8014c00:	3401      	addgt	r4, #1
 8014c02:	e7f4      	b.n	8014bee <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8014c04:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8014c08:	1b49      	subs	r1, r1, r5
 8014c0a:	1b1b      	subs	r3, r3, r4
 8014c0c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8014c10:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8014c14:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8014c18:	4293      	cmp	r3, r2
 8014c1a:	dd03      	ble.n	8014c24 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8014c1c:	3b01      	subs	r3, #1
 8014c1e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8014c22:	e7f7      	b.n	8014c14 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8014c24:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08014c28 <_ZN8touchgfx11Application15handleTickEventEv>:
 8014c28:	b570      	push	{r4, r5, r6, lr}
 8014c2a:	4d16      	ldr	r5, [pc, #88]	; (8014c84 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8014c2c:	4604      	mov	r4, r0
 8014c2e:	6828      	ldr	r0, [r5, #0]
 8014c30:	b140      	cbz	r0, 8014c44 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8014c32:	7a03      	ldrb	r3, [r0, #8]
 8014c34:	b933      	cbnz	r3, 8014c44 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8014c36:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8014c3a:	6803      	ldr	r3, [r0, #0]
 8014c3c:	689b      	ldr	r3, [r3, #8]
 8014c3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014c42:	4718      	bx	r3
 8014c44:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8014c48:	4e0f      	ldr	r6, [pc, #60]	; (8014c88 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8014c4a:	b973      	cbnz	r3, 8014c6a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014c4c:	b168      	cbz	r0, 8014c6a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014c4e:	7a03      	ldrb	r3, [r0, #8]
 8014c50:	b15b      	cbz	r3, 8014c6a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014c52:	6830      	ldr	r0, [r6, #0]
 8014c54:	b110      	cbz	r0, 8014c5c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8014c56:	6803      	ldr	r3, [r0, #0]
 8014c58:	691b      	ldr	r3, [r3, #16]
 8014c5a:	4798      	blx	r3
 8014c5c:	6828      	ldr	r0, [r5, #0]
 8014c5e:	6803      	ldr	r3, [r0, #0]
 8014c60:	68db      	ldr	r3, [r3, #12]
 8014c62:	4798      	blx	r3
 8014c64:	2301      	movs	r3, #1
 8014c66:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8014c6a:	3404      	adds	r4, #4
 8014c6c:	4620      	mov	r0, r4
 8014c6e:	f7ff ff45 	bl	8014afc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8014c72:	4620      	mov	r0, r4
 8014c74:	f7ff ffa0 	bl	8014bb8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8014c78:	6830      	ldr	r0, [r6, #0]
 8014c7a:	b110      	cbz	r0, 8014c82 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8014c7c:	6803      	ldr	r3, [r0, #0]
 8014c7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014c80:	e7dd      	b.n	8014c3e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8014c82:	bd70      	pop	{r4, r5, r6, pc}
 8014c84:	20013804 	.word	0x20013804
 8014c88:	20013800 	.word	0x20013800

08014c8c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8014c8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014c8e:	2300      	movs	r3, #0
 8014c90:	4604      	mov	r4, r0
 8014c92:	460d      	mov	r5, r1
 8014c94:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8014c98:	4618      	mov	r0, r3
 8014c9a:	b29a      	uxth	r2, r3
 8014c9c:	4291      	cmp	r1, r2
 8014c9e:	d911      	bls.n	8014cc4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8014ca0:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8014ca4:	18e6      	adds	r6, r4, r3
 8014ca6:	42af      	cmp	r7, r5
 8014ca8:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8014cac:	d105      	bne.n	8014cba <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8014cae:	2aff      	cmp	r2, #255	; 0xff
 8014cb0:	d002      	beq.n	8014cb8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8014cb2:	3201      	adds	r2, #1
 8014cb4:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8014cb8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014cba:	2a00      	cmp	r2, #0
 8014cbc:	bf08      	it	eq
 8014cbe:	2001      	moveq	r0, #1
 8014cc0:	3301      	adds	r3, #1
 8014cc2:	e7ea      	b.n	8014c9a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8014cc4:	b120      	cbz	r0, 8014cd0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8014cc6:	2920      	cmp	r1, #32
 8014cc8:	d102      	bne.n	8014cd0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8014cca:	4620      	mov	r0, r4
 8014ccc:	f7ff ff74 	bl	8014bb8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8014cd0:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8014cd4:	2b1f      	cmp	r3, #31
 8014cd6:	d8ef      	bhi.n	8014cb8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8014cd8:	18e2      	adds	r2, r4, r3
 8014cda:	2101      	movs	r1, #1
 8014cdc:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8014ce0:	185a      	adds	r2, r3, r1
 8014ce2:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8014ce6:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8014cea:	e7e5      	b.n	8014cb8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08014cec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8014cec:	4603      	mov	r3, r0
 8014cee:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8014cf2:	2200      	movs	r2, #0
 8014cf4:	801a      	strh	r2, [r3, #0]
 8014cf6:	805a      	strh	r2, [r3, #2]
 8014cf8:	809a      	strh	r2, [r3, #4]
 8014cfa:	80da      	strh	r2, [r3, #6]
 8014cfc:	3308      	adds	r3, #8
 8014cfe:	428b      	cmp	r3, r1
 8014d00:	d1f8      	bne.n	8014cf4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8014d02:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8014d06:	4770      	bx	lr

08014d08 <_ZN8touchgfx11ApplicationC1Ev>:
 8014d08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014d0a:	4606      	mov	r6, r0
 8014d0c:	4b1c      	ldr	r3, [pc, #112]	; (8014d80 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8014d0e:	f846 3b04 	str.w	r3, [r6], #4
 8014d12:	4604      	mov	r4, r0
 8014d14:	2500      	movs	r5, #0
 8014d16:	22a8      	movs	r2, #168	; 0xa8
 8014d18:	2100      	movs	r1, #0
 8014d1a:	4630      	mov	r0, r6
 8014d1c:	f013 fc15 	bl	802854a <memset>
 8014d20:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8014d24:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8014d28:	f7ff ffe0 	bl	8014cec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014d2c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8014d30:	f7ff ffdc 	bl	8014cec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014d34:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8014d38:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8014d3c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8014d40:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8014d44:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8014d48:	490e      	ldr	r1, [pc, #56]	; (8014d84 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8014d4a:	480f      	ldr	r0, [pc, #60]	; (8014d88 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8014d4c:	4f0f      	ldr	r7, [pc, #60]	; (8014d8c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8014d4e:	f010 fbf5 	bl	802553c <CRC_Lock>
 8014d52:	4b0f      	ldr	r3, [pc, #60]	; (8014d90 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8014d54:	b158      	cbz	r0, 8014d6e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8014d56:	801d      	strh	r5, [r3, #0]
 8014d58:	4a0e      	ldr	r2, [pc, #56]	; (8014d94 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8014d5a:	2300      	movs	r3, #0
 8014d5c:	6013      	str	r3, [r2, #0]
 8014d5e:	4a0e      	ldr	r2, [pc, #56]	; (8014d98 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8014d60:	603b      	str	r3, [r7, #0]
 8014d62:	4630      	mov	r0, r6
 8014d64:	6013      	str	r3, [r2, #0]
 8014d66:	f7ff ff01 	bl	8014b6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8014d6a:	4620      	mov	r0, r4
 8014d6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014d6e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8014d72:	2002      	movs	r0, #2
 8014d74:	801a      	strh	r2, [r3, #0]
 8014d76:	6038      	str	r0, [r7, #0]
 8014d78:	f001 fb4a 	bl	8016410 <_ZN8touchgfx6Screen4drawEv>
 8014d7c:	e7ec      	b.n	8014d58 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8014d7e:	bf00      	nop
 8014d80:	0802c944 	.word	0x0802c944
 8014d84:	b5e8b5cd 	.word	0xb5e8b5cd
 8014d88:	f407a5c2 	.word	0xf407a5c2
 8014d8c:	20013800 	.word	0x20013800
 8014d90:	20000088 	.word	0x20000088
 8014d94:	20013810 	.word	0x20013810
 8014d98:	20013804 	.word	0x20013804

08014d9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8014d9c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8014da0:	3b01      	subs	r3, #1
 8014da2:	b29b      	uxth	r3, r3
 8014da4:	428b      	cmp	r3, r1
 8014da6:	b510      	push	{r4, lr}
 8014da8:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8014dac:	d908      	bls.n	8014dc0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8014dae:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8014db2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8014db6:	681a      	ldr	r2, [r3, #0]
 8014db8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8014dbc:	685a      	ldr	r2, [r3, #4]
 8014dbe:	6062      	str	r2, [r4, #4]
 8014dc0:	bd10      	pop	{r4, pc}
	...

08014dc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8014dc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014dc8:	4b8f      	ldr	r3, [pc, #572]	; (8015008 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8014dca:	b08f      	sub	sp, #60	; 0x3c
 8014dcc:	ac0a      	add	r4, sp, #40	; 0x28
 8014dce:	e884 0006 	stmia.w	r4, {r1, r2}
 8014dd2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014dd6:	4b8d      	ldr	r3, [pc, #564]	; (801500c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8014dd8:	4683      	mov	fp, r0
 8014dda:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014dde:	4620      	mov	r0, r4
 8014de0:	f7ff fda1 	bl	8014926 <_ZN8touchgfx4Rect10restrictToEss>
 8014de4:	4620      	mov	r0, r4
 8014de6:	f7fa fd8c 	bl	800f902 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014dea:	2800      	cmp	r0, #0
 8014dec:	d16a      	bne.n	8014ec4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8014dee:	9403      	str	r4, [sp, #12]
 8014df0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8014df4:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8014df8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8014dfc:	35a4      	adds	r5, #164	; 0xa4
 8014dfe:	9301      	str	r3, [sp, #4]
 8014e00:	b15c      	cbz	r4, 8014e1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8014e02:	4629      	mov	r1, r5
 8014e04:	9803      	ldr	r0, [sp, #12]
 8014e06:	f7ff fddf 	bl	80149c8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8014e0a:	3c01      	subs	r4, #1
 8014e0c:	b118      	cbz	r0, 8014e16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8014e0e:	b2a1      	uxth	r1, r4
 8014e10:	9801      	ldr	r0, [sp, #4]
 8014e12:	f7ff ffc3 	bl	8014d9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014e16:	3d08      	subs	r5, #8
 8014e18:	e7f2      	b.n	8014e00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8014e1a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8014e1e:	f8cd a010 	str.w	sl, [sp, #16]
 8014e22:	f10a 33ff 	add.w	r3, sl, #4294967295
 8014e26:	9302      	str	r3, [sp, #8]
 8014e28:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8014e2c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8014e30:	9306      	str	r3, [sp, #24]
 8014e32:	445c      	add	r4, fp
 8014e34:	2500      	movs	r5, #0
 8014e36:	4626      	mov	r6, r4
 8014e38:	f8cd a014 	str.w	sl, [sp, #20]
 8014e3c:	462f      	mov	r7, r5
 8014e3e:	9b05      	ldr	r3, [sp, #20]
 8014e40:	2b00      	cmp	r3, #0
 8014e42:	d073      	beq.n	8014f2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8014e44:	9903      	ldr	r1, [sp, #12]
 8014e46:	4630      	mov	r0, r6
 8014e48:	f7ff fd4b 	bl	80148e2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014e4c:	b350      	cbz	r0, 8014ea4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8014e4e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8014e52:	f9b6 c000 	ldrsh.w	ip, [r6]
 8014e56:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8014e5a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8014e5e:	45e6      	cmp	lr, ip
 8014e60:	db33      	blt.n	8014eca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8014e62:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8014e66:	88b3      	ldrh	r3, [r6, #4]
 8014e68:	4472      	add	r2, lr
 8014e6a:	4463      	add	r3, ip
 8014e6c:	b212      	sxth	r2, r2
 8014e6e:	b21b      	sxth	r3, r3
 8014e70:	429a      	cmp	r2, r3
 8014e72:	dc2a      	bgt.n	8014eca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8014e74:	88f3      	ldrh	r3, [r6, #6]
 8014e76:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8014e7a:	fa1f f289 	uxth.w	r2, r9
 8014e7e:	4413      	add	r3, r2
 8014e80:	b29b      	uxth	r3, r3
 8014e82:	45c8      	cmp	r8, r9
 8014e84:	fa1f fc88 	uxth.w	ip, r8
 8014e88:	fa0f fe83 	sxth.w	lr, r3
 8014e8c:	db0f      	blt.n	8014eae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8014e8e:	eba3 030c 	sub.w	r3, r3, ip
 8014e92:	1ac9      	subs	r1, r1, r3
 8014e94:	b209      	sxth	r1, r1
 8014e96:	2900      	cmp	r1, #0
 8014e98:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8014e9c:	dd12      	ble.n	8014ec4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8014e9e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8014ea2:	4605      	mov	r5, r0
 8014ea4:	9b05      	ldr	r3, [sp, #20]
 8014ea6:	3b01      	subs	r3, #1
 8014ea8:	9305      	str	r3, [sp, #20]
 8014eaa:	3e08      	subs	r6, #8
 8014eac:	e7c7      	b.n	8014e3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8014eae:	4461      	add	r1, ip
 8014eb0:	b209      	sxth	r1, r1
 8014eb2:	4571      	cmp	r1, lr
 8014eb4:	dc38      	bgt.n	8014f28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014eb6:	eba2 020c 	sub.w	r2, r2, ip
 8014eba:	b212      	sxth	r2, r2
 8014ebc:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8014ec0:	2a00      	cmp	r2, #0
 8014ec2:	dcee      	bgt.n	8014ea2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8014ec4:	b00f      	add	sp, #60	; 0x3c
 8014ec6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014eca:	45c8      	cmp	r8, r9
 8014ecc:	db2c      	blt.n	8014f28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014ece:	88f3      	ldrh	r3, [r6, #6]
 8014ed0:	4499      	add	r9, r3
 8014ed2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8014ed6:	4498      	add	r8, r3
 8014ed8:	fa0f f989 	sxth.w	r9, r9
 8014edc:	fa0f f888 	sxth.w	r8, r8
 8014ee0:	45c1      	cmp	r9, r8
 8014ee2:	db21      	blt.n	8014f28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014ee4:	88b3      	ldrh	r3, [r6, #4]
 8014ee6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8014eea:	fa1f f28c 	uxth.w	r2, ip
 8014eee:	4413      	add	r3, r2
 8014ef0:	b29b      	uxth	r3, r3
 8014ef2:	45e6      	cmp	lr, ip
 8014ef4:	fa1f f88e 	uxth.w	r8, lr
 8014ef8:	fa0f f983 	sxth.w	r9, r3
 8014efc:	db0a      	blt.n	8014f14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8014efe:	eba3 0308 	sub.w	r3, r3, r8
 8014f02:	1ac9      	subs	r1, r1, r3
 8014f04:	b209      	sxth	r1, r1
 8014f06:	2900      	cmp	r1, #0
 8014f08:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8014f0c:	ddda      	ble.n	8014ec4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8014f0e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8014f12:	e7c6      	b.n	8014ea2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8014f14:	4441      	add	r1, r8
 8014f16:	b209      	sxth	r1, r1
 8014f18:	4549      	cmp	r1, r9
 8014f1a:	dc05      	bgt.n	8014f28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014f1c:	eba2 0208 	sub.w	r2, r2, r8
 8014f20:	b212      	sxth	r2, r2
 8014f22:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8014f26:	e7cb      	b.n	8014ec0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8014f28:	4607      	mov	r7, r0
 8014f2a:	e7bb      	b.n	8014ea4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8014f2c:	2d00      	cmp	r5, #0
 8014f2e:	d181      	bne.n	8014e34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8014f30:	2f00      	cmp	r7, #0
 8014f32:	f000 81dd 	beq.w	80152f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8014f36:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8014f3a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8014f3e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8014f42:	b2b3      	uxth	r3, r6
 8014f44:	9305      	str	r3, [sp, #20]
 8014f46:	9a05      	ldr	r2, [sp, #20]
 8014f48:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8014f4c:	4413      	add	r3, r2
 8014f4e:	b2ba      	uxth	r2, r7
 8014f50:	4492      	add	sl, r2
 8014f52:	b29b      	uxth	r3, r3
 8014f54:	fa1f fa8a 	uxth.w	sl, sl
 8014f58:	fa0f f883 	sxth.w	r8, r3
 8014f5c:	fa0f f98a 	sxth.w	r9, sl
 8014f60:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8014f64:	9b04      	ldr	r3, [sp, #16]
 8014f66:	2b00      	cmp	r3, #0
 8014f68:	d052      	beq.n	8015010 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8014f6a:	9903      	ldr	r1, [sp, #12]
 8014f6c:	4620      	mov	r0, r4
 8014f6e:	f7ff fcb8 	bl	80148e2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014f72:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8014f76:	b1c0      	cbz	r0, 8014faa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014f78:	f9b4 e000 	ldrsh.w	lr, [r4]
 8014f7c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8014f80:	4576      	cmp	r6, lr
 8014f82:	dc22      	bgt.n	8014fca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8014f84:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8014f88:	44f4      	add	ip, lr
 8014f8a:	fa0f fc8c 	sxth.w	ip, ip
 8014f8e:	45e0      	cmp	r8, ip
 8014f90:	db1b      	blt.n	8014fca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8014f92:	428f      	cmp	r7, r1
 8014f94:	fa1f fc81 	uxth.w	ip, r1
 8014f98:	88e1      	ldrh	r1, [r4, #6]
 8014f9a:	dc0d      	bgt.n	8014fb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8014f9c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8014fa0:	eba1 010c 	sub.w	r1, r1, ip
 8014fa4:	f8a4 9002 	strh.w	r9, [r4, #2]
 8014fa8:	80e1      	strh	r1, [r4, #6]
 8014faa:	4628      	mov	r0, r5
 8014fac:	9904      	ldr	r1, [sp, #16]
 8014fae:	3901      	subs	r1, #1
 8014fb0:	9104      	str	r1, [sp, #16]
 8014fb2:	3c08      	subs	r4, #8
 8014fb4:	4605      	mov	r5, r0
 8014fb6:	e7d3      	b.n	8014f60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8014fb8:	4461      	add	r1, ip
 8014fba:	b209      	sxth	r1, r1
 8014fbc:	4549      	cmp	r1, r9
 8014fbe:	dcf5      	bgt.n	8014fac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014fc0:	eba2 0c0c 	sub.w	ip, r2, ip
 8014fc4:	f8a4 c006 	strh.w	ip, [r4, #6]
 8014fc8:	e7ef      	b.n	8014faa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014fca:	428f      	cmp	r7, r1
 8014fcc:	dcee      	bgt.n	8014fac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014fce:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8014fd2:	4461      	add	r1, ip
 8014fd4:	b209      	sxth	r1, r1
 8014fd6:	4589      	cmp	r9, r1
 8014fd8:	dbe8      	blt.n	8014fac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014fda:	4576      	cmp	r6, lr
 8014fdc:	fa1f fc8e 	uxth.w	ip, lr
 8014fe0:	88a1      	ldrh	r1, [r4, #4]
 8014fe2:	dc07      	bgt.n	8014ff4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8014fe4:	eba3 0c0c 	sub.w	ip, r3, ip
 8014fe8:	eba1 010c 	sub.w	r1, r1, ip
 8014fec:	f8a4 8000 	strh.w	r8, [r4]
 8014ff0:	80a1      	strh	r1, [r4, #4]
 8014ff2:	e7da      	b.n	8014faa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014ff4:	4461      	add	r1, ip
 8014ff6:	b209      	sxth	r1, r1
 8014ff8:	4588      	cmp	r8, r1
 8014ffa:	dbd7      	blt.n	8014fac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014ffc:	9905      	ldr	r1, [sp, #20]
 8014ffe:	eba1 0c0c 	sub.w	ip, r1, ip
 8015002:	f8a4 c004 	strh.w	ip, [r4, #4]
 8015006:	e7d0      	b.n	8014faa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015008:	200137b2 	.word	0x200137b2
 801500c:	200137b0 	.word	0x200137b0
 8015010:	2d00      	cmp	r5, #0
 8015012:	f000 816d 	beq.w	80152f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015016:	9b06      	ldr	r3, [sp, #24]
 8015018:	445b      	add	r3, fp
 801501a:	461c      	mov	r4, r3
 801501c:	9b02      	ldr	r3, [sp, #8]
 801501e:	3301      	adds	r3, #1
 8015020:	f000 8166 	beq.w	80152f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015024:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8015028:	4629      	mov	r1, r5
 801502a:	9803      	ldr	r0, [sp, #12]
 801502c:	f7ff fccc 	bl	80149c8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8015030:	b120      	cbz	r0, 801503c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8015032:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8015036:	9801      	ldr	r0, [sp, #4]
 8015038:	f7ff feb0 	bl	8014d9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801503c:	9903      	ldr	r1, [sp, #12]
 801503e:	4628      	mov	r0, r5
 8015040:	f7ff fc4f 	bl	80148e2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015044:	2800      	cmp	r0, #0
 8015046:	f000 809c 	beq.w	8015182 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801504a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 801504e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015052:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8015056:	9309      	str	r3, [sp, #36]	; 0x24
 8015058:	fa1f f189 	uxth.w	r1, r9
 801505c:	eb01 0c03 	add.w	ip, r1, r3
 8015060:	fa1f fa8c 	uxth.w	sl, ip
 8015064:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8015068:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 801506c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8015070:	b283      	uxth	r3, r0
 8015072:	eb03 050c 	add.w	r5, r3, ip
 8015076:	b2ad      	uxth	r5, r5
 8015078:	9505      	str	r5, [sp, #20]
 801507a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801507e:	9504      	str	r5, [sp, #16]
 8015080:	4548      	cmp	r0, r9
 8015082:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8015086:	f340 8099 	ble.w	80151bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801508a:	1a5b      	subs	r3, r3, r1
 801508c:	b29b      	uxth	r3, r3
 801508e:	4596      	cmp	lr, r2
 8015090:	fa0f f08a 	sxth.w	r0, sl
 8015094:	b21e      	sxth	r6, r3
 8015096:	dd2e      	ble.n	80150f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8015098:	9f02      	ldr	r7, [sp, #8]
 801509a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801509e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 80150a2:	9f04      	ldr	r7, [sp, #16]
 80150a4:	1a3f      	subs	r7, r7, r0
 80150a6:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 80150aa:	fa1f fe8e 	uxth.w	lr, lr
 80150ae:	b292      	uxth	r2, r2
 80150b0:	ebae 0102 	sub.w	r1, lr, r2
 80150b4:	44a6      	add	lr, r4
 80150b6:	4402      	add	r2, r0
 80150b8:	b289      	uxth	r1, r1
 80150ba:	fa0f fe8e 	sxth.w	lr, lr
 80150be:	b212      	sxth	r2, r2
 80150c0:	b20d      	sxth	r5, r1
 80150c2:	ebae 0202 	sub.w	r2, lr, r2
 80150c6:	436f      	muls	r7, r5
 80150c8:	4372      	muls	r2, r6
 80150ca:	4297      	cmp	r7, r2
 80150cc:	db09      	blt.n	80150e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80150ce:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 80150d2:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 80150d6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80150da:	449c      	add	ip, r3
 80150dc:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80150e0:	e686      	b.n	8014df0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80150e2:	4421      	add	r1, r4
 80150e4:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 80150e8:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 80150ec:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80150f0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80150f4:	e67c      	b.n	8014df0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80150f6:	9f04      	ldr	r7, [sp, #16]
 80150f8:	42b8      	cmp	r0, r7
 80150fa:	da27      	bge.n	801514c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80150fc:	9902      	ldr	r1, [sp, #8]
 80150fe:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8015102:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8015106:	eb05 010e 	add.w	r1, r5, lr
 801510a:	fa1f f881 	uxth.w	r8, r1
 801510e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8015112:	4411      	add	r1, r2
 8015114:	eba1 0108 	sub.w	r1, r1, r8
 8015118:	b289      	uxth	r1, r1
 801511a:	fa0f f988 	sxth.w	r9, r8
 801511e:	eba2 020e 	sub.w	r2, r2, lr
 8015122:	fa0f f881 	sxth.w	r8, r1
 8015126:	1a3f      	subs	r7, r7, r0
 8015128:	4372      	muls	r2, r6
 801512a:	fb08 f707 	mul.w	r7, r8, r7
 801512e:	42ba      	cmp	r2, r7
 8015130:	dc06      	bgt.n	8015140 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8015132:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8015136:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801513a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801513e:	e7ca      	b.n	80150d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8015140:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8015144:	4429      	add	r1, r5
 8015146:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801514a:	e651      	b.n	8014df0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801514c:	9805      	ldr	r0, [sp, #20]
 801514e:	ebaa 0000 	sub.w	r0, sl, r0
 8015152:	b280      	uxth	r0, r0
 8015154:	2d06      	cmp	r5, #6
 8015156:	fa0f fe80 	sxth.w	lr, r0
 801515a:	d817      	bhi.n	801518c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 801515c:	9b04      	ldr	r3, [sp, #16]
 801515e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015162:	1c6b      	adds	r3, r5, #1
 8015164:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8015168:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801516c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8015170:	9b01      	ldr	r3, [sp, #4]
 8015172:	9801      	ldr	r0, [sp, #4]
 8015174:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015178:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801517c:	805a      	strh	r2, [r3, #2]
 801517e:	809e      	strh	r6, [r3, #4]
 8015180:	80d9      	strh	r1, [r3, #6]
 8015182:	9b02      	ldr	r3, [sp, #8]
 8015184:	3b01      	subs	r3, #1
 8015186:	9302      	str	r3, [sp, #8]
 8015188:	3c08      	subs	r4, #8
 801518a:	e747      	b.n	801501c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801518c:	9a02      	ldr	r2, [sp, #8]
 801518e:	45b6      	cmp	lr, r6
 8015190:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8015194:	db0d      	blt.n	80151b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8015196:	449c      	add	ip, r3
 8015198:	fa1f fc8c 	uxth.w	ip, ip
 801519c:	445a      	add	r2, fp
 801519e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80151a2:	448c      	add	ip, r1
 80151a4:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80151a8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 80151ac:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 80151b0:	e61e      	b.n	8014df0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80151b2:	445a      	add	r2, fp
 80151b4:	4484      	add	ip, r0
 80151b6:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 80151ba:	e78f      	b.n	80150dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80151bc:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80151c0:	fa1f f18e 	uxth.w	r1, lr
 80151c4:	eb01 0806 	add.w	r8, r1, r6
 80151c8:	b293      	uxth	r3, r2
 80151ca:	fa1f f888 	uxth.w	r8, r8
 80151ce:	9306      	str	r3, [sp, #24]
 80151d0:	fa0f f388 	sxth.w	r3, r8
 80151d4:	9307      	str	r3, [sp, #28]
 80151d6:	9f06      	ldr	r7, [sp, #24]
 80151d8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80151dc:	443b      	add	r3, r7
 80151de:	b29b      	uxth	r3, r3
 80151e0:	4596      	cmp	lr, r2
 80151e2:	9308      	str	r3, [sp, #32]
 80151e4:	da24      	bge.n	8015230 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80151e6:	9905      	ldr	r1, [sp, #20]
 80151e8:	eba3 0308 	sub.w	r3, r3, r8
 80151ec:	ebaa 0401 	sub.w	r4, sl, r1
 80151f0:	b2a4      	uxth	r4, r4
 80151f2:	b29b      	uxth	r3, r3
 80151f4:	b225      	sxth	r5, r4
 80151f6:	b219      	sxth	r1, r3
 80151f8:	eba2 020e 	sub.w	r2, r2, lr
 80151fc:	eba9 0000 	sub.w	r0, r9, r0
 8015200:	436a      	muls	r2, r5
 8015202:	4348      	muls	r0, r1
 8015204:	4282      	cmp	r2, r0
 8015206:	9a02      	ldr	r2, [sp, #8]
 8015208:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801520c:	445a      	add	r2, fp
 801520e:	dc06      	bgt.n	801521e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8015210:	9b07      	ldr	r3, [sp, #28]
 8015212:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8015216:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 801521a:	44a4      	add	ip, r4
 801521c:	e75e      	b.n	80150dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801521e:	9904      	ldr	r1, [sp, #16]
 8015220:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8015224:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8015228:	4433      	add	r3, r6
 801522a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801522e:	e5df      	b.n	8014df0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015230:	9f06      	ldr	r7, [sp, #24]
 8015232:	9b04      	ldr	r3, [sp, #16]
 8015234:	1bc9      	subs	r1, r1, r7
 8015236:	fa0f f78a 	sxth.w	r7, sl
 801523a:	b289      	uxth	r1, r1
 801523c:	429f      	cmp	r7, r3
 801523e:	fa0f fe81 	sxth.w	lr, r1
 8015242:	dd23      	ble.n	801528c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8015244:	9a05      	ldr	r2, [sp, #20]
 8015246:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801524a:	9d07      	ldr	r5, [sp, #28]
 801524c:	ebaa 0202 	sub.w	r2, sl, r2
 8015250:	b292      	uxth	r2, r2
 8015252:	eba5 0a03 	sub.w	sl, r5, r3
 8015256:	b214      	sxth	r4, r2
 8015258:	eba9 0000 	sub.w	r0, r9, r0
 801525c:	9b02      	ldr	r3, [sp, #8]
 801525e:	fb0e f000 	mul.w	r0, lr, r0
 8015262:	fb04 fa0a 	mul.w	sl, r4, sl
 8015266:	00db      	lsls	r3, r3, #3
 8015268:	4550      	cmp	r0, sl
 801526a:	445b      	add	r3, fp
 801526c:	db03      	blt.n	8015276 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801526e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8015272:	4494      	add	ip, r2
 8015274:	e732      	b.n	80150dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015276:	9a04      	ldr	r2, [sp, #16]
 8015278:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 801527c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8015280:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8015284:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8015288:	4431      	add	r1, r6
 801528a:	e75c      	b.n	8015146 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801528c:	9b08      	ldr	r3, [sp, #32]
 801528e:	eba3 0308 	sub.w	r3, r3, r8
 8015292:	b29b      	uxth	r3, r3
 8015294:	2d06      	cmp	r5, #6
 8015296:	b218      	sxth	r0, r3
 8015298:	d813      	bhi.n	80152c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801529a:	9b07      	ldr	r3, [sp, #28]
 801529c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 80152a0:	1c6b      	adds	r3, r5, #1
 80152a2:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 80152a6:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80152aa:	9b01      	ldr	r3, [sp, #4]
 80152ac:	9901      	ldr	r1, [sp, #4]
 80152ae:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80152b2:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 80152b6:	805a      	strh	r2, [r3, #2]
 80152b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80152ba:	809a      	strh	r2, [r3, #4]
 80152bc:	f8a3 e006 	strh.w	lr, [r3, #6]
 80152c0:	e75f      	b.n	8015182 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80152c2:	9c02      	ldr	r4, [sp, #8]
 80152c4:	4570      	cmp	r0, lr
 80152c6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80152ca:	db0d      	blt.n	80152e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80152cc:	4431      	add	r1, r6
 80152ce:	9b06      	ldr	r3, [sp, #24]
 80152d0:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80152d4:	b289      	uxth	r1, r1
 80152d6:	445c      	add	r4, fp
 80152d8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80152dc:	4419      	add	r1, r3
 80152de:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 80152e2:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 80152e6:	e583      	b.n	8014df0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80152e8:	445c      	add	r4, fp
 80152ea:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 80152ee:	e79b      	b.n	8015228 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 80152f0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80152f4:	1e65      	subs	r5, r4, #1
 80152f6:	b2ad      	uxth	r5, r5
 80152f8:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 80152fc:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8015300:	42b5      	cmp	r5, r6
 8015302:	d044      	beq.n	801538e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8015304:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8015308:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 801530c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8015310:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8015314:	4282      	cmp	r2, r0
 8015316:	d11f      	bne.n	8015358 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015318:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 801531c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015320:	459c      	cmp	ip, r3
 8015322:	d119      	bne.n	8015358 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015324:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8015328:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801532c:	19d8      	adds	r0, r3, r7
 801532e:	b200      	sxth	r0, r0
 8015330:	4288      	cmp	r0, r1
 8015332:	d109      	bne.n	8015348 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8015334:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8015338:	4413      	add	r3, r2
 801533a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801533e:	4629      	mov	r1, r5
 8015340:	9801      	ldr	r0, [sp, #4]
 8015342:	f7ff fd2b 	bl	8014d9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015346:	e003      	b.n	8015350 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015348:	4411      	add	r1, r2
 801534a:	b209      	sxth	r1, r1
 801534c:	42b9      	cmp	r1, r7
 801534e:	d0f3      	beq.n	8015338 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8015350:	3d01      	subs	r5, #1
 8015352:	b2ad      	uxth	r5, r5
 8015354:	3c08      	subs	r4, #8
 8015356:	e7d3      	b.n	8015300 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8015358:	42b9      	cmp	r1, r7
 801535a:	d1f9      	bne.n	8015350 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801535c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8015360:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015364:	4299      	cmp	r1, r3
 8015366:	d1f3      	bne.n	8015350 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015368:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801536c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8015370:	181f      	adds	r7, r3, r0
 8015372:	b23f      	sxth	r7, r7
 8015374:	42ba      	cmp	r2, r7
 8015376:	d105      	bne.n	8015384 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8015378:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 801537c:	440b      	add	r3, r1
 801537e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015382:	e7dc      	b.n	801533e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8015384:	440a      	add	r2, r1
 8015386:	b212      	sxth	r2, r2
 8015388:	4290      	cmp	r0, r2
 801538a:	d1e1      	bne.n	8015350 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801538c:	e7f6      	b.n	801537c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801538e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8015392:	2e07      	cmp	r6, #7
 8015394:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8015398:	d812      	bhi.n	80153c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801539a:	1c75      	adds	r5, r6, #1
 801539c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 80153a0:	9d01      	ldr	r5, [sp, #4]
 80153a2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80153a6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80153aa:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80153ae:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80153b2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80153b6:	442c      	add	r4, r5
 80153b8:	8061      	strh	r1, [r4, #2]
 80153ba:	80a2      	strh	r2, [r4, #4]
 80153bc:	80e3      	strh	r3, [r4, #6]
 80153be:	e581      	b.n	8014ec4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80153c0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80153c4:	3e01      	subs	r6, #1
 80153c6:	445c      	add	r4, fp
 80153c8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80153cc:	f04f 37ff 	mov.w	r7, #4294967295
 80153d0:	2500      	movs	r5, #0
 80153d2:	9305      	str	r3, [sp, #20]
 80153d4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80153d8:	9302      	str	r3, [sp, #8]
 80153da:	1e72      	subs	r2, r6, #1
 80153dc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80153e0:	9304      	str	r3, [sp, #16]
 80153e2:	4691      	mov	r9, r2
 80153e4:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 80153e8:	f1b9 3fff 	cmp.w	r9, #4294967295
 80153ec:	bf14      	ite	ne
 80153ee:	9905      	ldrne	r1, [sp, #20]
 80153f0:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80153f4:	6818      	ldr	r0, [r3, #0]
 80153f6:	9207      	str	r2, [sp, #28]
 80153f8:	bf18      	it	ne
 80153fa:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80153fe:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8015402:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8015406:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801540a:	9306      	str	r3, [sp, #24]
 801540c:	fb18 f801 	smulbb	r8, r8, r1
 8015410:	6859      	ldr	r1, [r3, #4]
 8015412:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8015416:	4671      	mov	r1, lr
 8015418:	a80c      	add	r0, sp, #48	; 0x30
 801541a:	f7ff fafb 	bl	8014a14 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801541e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8015422:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8015426:	9b04      	ldr	r3, [sp, #16]
 8015428:	9a02      	ldr	r2, [sp, #8]
 801542a:	fb10 f001 	smulbb	r0, r0, r1
 801542e:	fb02 8803 	mla	r8, r2, r3, r8
 8015432:	eba0 0108 	sub.w	r1, r0, r8
 8015436:	f04f 0c08 	mov.w	ip, #8
 801543a:	fb90 f0fc 	sdiv	r0, r0, ip
 801543e:	4288      	cmp	r0, r1
 8015440:	dc20      	bgt.n	8015484 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8015442:	4551      	cmp	r1, sl
 8015444:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8015448:	da03      	bge.n	8015452 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 801544a:	b1d9      	cbz	r1, 8015484 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801544c:	468a      	mov	sl, r1
 801544e:	464f      	mov	r7, r9
 8015450:	4635      	mov	r5, r6
 8015452:	f109 39ff 	add.w	r9, r9, #4294967295
 8015456:	f119 0f02 	cmn.w	r9, #2
 801545a:	d1c5      	bne.n	80153e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 801545c:	4616      	mov	r6, r2
 801545e:	3201      	adds	r2, #1
 8015460:	f1a4 0408 	sub.w	r4, r4, #8
 8015464:	d1b6      	bne.n	80153d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8015466:	9b01      	ldr	r3, [sp, #4]
 8015468:	b2ac      	uxth	r4, r5
 801546a:	00ed      	lsls	r5, r5, #3
 801546c:	1958      	adds	r0, r3, r5
 801546e:	1c7b      	adds	r3, r7, #1
 8015470:	d10b      	bne.n	801548a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8015472:	4601      	mov	r1, r0
 8015474:	9803      	ldr	r0, [sp, #12]
 8015476:	f7ff facd 	bl	8014a14 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801547a:	4621      	mov	r1, r4
 801547c:	9801      	ldr	r0, [sp, #4]
 801547e:	f7ff fc8d 	bl	8014d9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015482:	e4b5      	b.n	8014df0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015484:	464f      	mov	r7, r9
 8015486:	4635      	mov	r5, r6
 8015488:	e7ed      	b.n	8015466 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801548a:	9b01      	ldr	r3, [sp, #4]
 801548c:	00ff      	lsls	r7, r7, #3
 801548e:	19d9      	adds	r1, r3, r7
 8015490:	f7ff fac0 	bl	8014a14 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015494:	9b03      	ldr	r3, [sp, #12]
 8015496:	cb03      	ldmia	r3!, {r0, r1}
 8015498:	445f      	add	r7, fp
 801549a:	445d      	add	r5, fp
 801549c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 80154a0:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 80154a4:	f855 0fac 	ldr.w	r0, [r5, #172]!
 80154a8:	9b03      	ldr	r3, [sp, #12]
 80154aa:	6869      	ldr	r1, [r5, #4]
 80154ac:	c303      	stmia	r3!, {r0, r1}
 80154ae:	e7e4      	b.n	801547a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

080154b0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80154b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80154b4:	f500 7698 	add.w	r6, r0, #304	; 0x130
 80154b8:	b09b      	sub	sp, #108	; 0x6c
 80154ba:	4604      	mov	r4, r0
 80154bc:	4630      	mov	r0, r6
 80154be:	f7fa fa20 	bl	800f902 <_ZNK8touchgfx4Rect7isEmptyEv>
 80154c2:	4605      	mov	r5, r0
 80154c4:	b948      	cbnz	r0, 80154da <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80154c6:	6823      	ldr	r3, [r4, #0]
 80154c8:	e896 0006 	ldmia.w	r6, {r1, r2}
 80154cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80154ce:	4620      	mov	r0, r4
 80154d0:	4798      	blx	r3
 80154d2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80154d6:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 80154da:	4bc6      	ldr	r3, [pc, #792]	; (80157f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 80154dc:	681b      	ldr	r3, [r3, #0]
 80154de:	2b00      	cmp	r3, #0
 80154e0:	d03f      	beq.n	8015562 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80154e2:	4dc5      	ldr	r5, [pc, #788]	; (80157f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 80154e4:	4628      	mov	r0, r5
 80154e6:	f7fa fa0c 	bl	800f902 <_ZNK8touchgfx4Rect7isEmptyEv>
 80154ea:	4606      	mov	r6, r0
 80154ec:	2800      	cmp	r0, #0
 80154ee:	d138      	bne.n	8015562 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80154f0:	4628      	mov	r0, r5
 80154f2:	f7ff f907 	bl	8014704 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80154f6:	6823      	ldr	r3, [r4, #0]
 80154f8:	6829      	ldr	r1, [r5, #0]
 80154fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80154fc:	686a      	ldr	r2, [r5, #4]
 80154fe:	4620      	mov	r0, r4
 8015500:	4798      	blx	r3
 8015502:	802e      	strh	r6, [r5, #0]
 8015504:	806e      	strh	r6, [r5, #2]
 8015506:	80ae      	strh	r6, [r5, #4]
 8015508:	80ee      	strh	r6, [r5, #6]
 801550a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 801550e:	4dbb      	ldr	r5, [pc, #748]	; (80157fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8015510:	4640      	mov	r0, r8
 8015512:	f7ff fbeb 	bl	8014cec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015516:	882e      	ldrh	r6, [r5, #0]
 8015518:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801551c:	4633      	mov	r3, r6
 801551e:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8015522:	42bb      	cmp	r3, r7
 8015524:	d224      	bcs.n	8015570 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015526:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801552a:	2907      	cmp	r1, #7
 801552c:	d816      	bhi.n	801555c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801552e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8015532:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8015536:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801553a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801553e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8015542:	1c4a      	adds	r2, r1, #1
 8015544:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8015548:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 801554c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8015550:	f8a2 a002 	strh.w	sl, [r2, #2]
 8015554:	f8a2 e004 	strh.w	lr, [r2, #4]
 8015558:	f8a2 c006 	strh.w	ip, [r2, #6]
 801555c:	3301      	adds	r3, #1
 801555e:	b29b      	uxth	r3, r3
 8015560:	e7df      	b.n	8015522 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8015562:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015566:	2b00      	cmp	r3, #0
 8015568:	d1cf      	bne.n	801550a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801556a:	b01b      	add	sp, #108	; 0x6c
 801556c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015570:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8015574:	42b3      	cmp	r3, r6
 8015576:	d90c      	bls.n	8015592 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8015578:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801557c:	6822      	ldr	r2, [r4, #0]
 801557e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8015582:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8015584:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8015588:	4620      	mov	r0, r4
 801558a:	3601      	adds	r6, #1
 801558c:	47b8      	blx	r7
 801558e:	b2b6      	uxth	r6, r6
 8015590:	e7ee      	b.n	8015570 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015592:	4a9b      	ldr	r2, [pc, #620]	; (8015800 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8015594:	6813      	ldr	r3, [r2, #0]
 8015596:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801559a:	2b01      	cmp	r3, #1
 801559c:	4691      	mov	r9, r2
 801559e:	f040 80e2 	bne.w	8015766 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 80155a2:	8829      	ldrh	r1, [r5, #0]
 80155a4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80155a8:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 80155ac:	33ae      	adds	r3, #174	; 0xae
 80155ae:	2600      	movs	r6, #0
 80155b0:	428f      	cmp	r7, r1
 80155b2:	f103 0308 	add.w	r3, r3, #8
 80155b6:	dd0a      	ble.n	80155ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 80155b8:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 80155bc:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80155c0:	4402      	add	r2, r0
 80155c2:	b212      	sxth	r2, r2
 80155c4:	4296      	cmp	r6, r2
 80155c6:	bfb8      	it	lt
 80155c8:	4616      	movlt	r6, r2
 80155ca:	3101      	adds	r1, #1
 80155cc:	e7f0      	b.n	80155b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80155ce:	4b8d      	ldr	r3, [pc, #564]	; (8015804 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80155d0:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8015800 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 80155d4:	881b      	ldrh	r3, [r3, #0]
 80155d6:	2b0f      	cmp	r3, #15
 80155d8:	bf88      	it	hi
 80155da:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80155de:	f04f 0300 	mov.w	r3, #0
 80155e2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80155e6:	bf98      	it	ls
 80155e8:	f04f 0b01 	movls.w	fp, #1
 80155ec:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 80155f0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 80155f4:	4b82      	ldr	r3, [pc, #520]	; (8015800 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80155f6:	4438      	add	r0, r7
 80155f8:	b207      	sxth	r7, r0
 80155fa:	6818      	ldr	r0, [r3, #0]
 80155fc:	42b7      	cmp	r7, r6
 80155fe:	6803      	ldr	r3, [r0, #0]
 8015600:	f280 8083 	bge.w	801570a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8015604:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8015608:	4798      	blx	r3
 801560a:	eb07 030b 	add.w	r3, r7, fp
 801560e:	4298      	cmp	r0, r3
 8015610:	da07      	bge.n	8015622 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015612:	42b0      	cmp	r0, r6
 8015614:	da05      	bge.n	8015622 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015616:	4287      	cmp	r7, r0
 8015618:	dd6c      	ble.n	80156f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801561a:	2f00      	cmp	r7, #0
 801561c:	dd6a      	ble.n	80156f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801561e:	4630      	mov	r0, r6
 8015620:	e004      	b.n	801562c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8015622:	4287      	cmp	r7, r0
 8015624:	dcfb      	bgt.n	801561e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8015626:	42b0      	cmp	r0, r6
 8015628:	bfa8      	it	ge
 801562a:	4630      	movge	r0, r6
 801562c:	4b76      	ldr	r3, [pc, #472]	; (8015808 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801562e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8015632:	1bc0      	subs	r0, r0, r7
 8015634:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015638:	882f      	ldrh	r7, [r5, #0]
 801563a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801563e:	2200      	movs	r2, #0
 8015640:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015644:	f8ad 001a 	strh.w	r0, [sp, #26]
 8015648:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801564c:	42bb      	cmp	r3, r7
 801564e:	d9cd      	bls.n	80155ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015650:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8015654:	ab07      	add	r3, sp, #28
 8015656:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801565a:	6851      	ldr	r1, [r2, #4]
 801565c:	c303      	stmia	r3!, {r0, r1}
 801565e:	a905      	add	r1, sp, #20
 8015660:	a807      	add	r0, sp, #28
 8015662:	f7ff f93e 	bl	80148e2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015666:	2800      	cmp	r0, #0
 8015668:	d04c      	beq.n	8015704 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801566a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801566e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8015672:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8015676:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801567a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801567e:	9302      	str	r3, [sp, #8]
 8015680:	4686      	mov	lr, r0
 8015682:	4290      	cmp	r0, r2
 8015684:	4450      	add	r0, sl
 8015686:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801568a:	bfb8      	it	lt
 801568c:	4696      	movlt	lr, r2
 801568e:	4452      	add	r2, sl
 8015690:	4299      	cmp	r1, r3
 8015692:	b280      	uxth	r0, r0
 8015694:	b292      	uxth	r2, r2
 8015696:	468c      	mov	ip, r1
 8015698:	fa0f fa82 	sxth.w	sl, r2
 801569c:	bfb8      	it	lt
 801569e:	469c      	movlt	ip, r3
 80156a0:	b203      	sxth	r3, r0
 80156a2:	4553      	cmp	r3, sl
 80156a4:	bfb8      	it	lt
 80156a6:	4602      	movlt	r2, r0
 80156a8:	eba2 020e 	sub.w	r2, r2, lr
 80156ac:	f8ad 2020 	strh.w	r2, [sp, #32]
 80156b0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80156b4:	9b02      	ldr	r3, [sp, #8]
 80156b6:	f8ad e01c 	strh.w	lr, [sp, #28]
 80156ba:	4411      	add	r1, r2
 80156bc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80156c0:	f8ad c01e 	strh.w	ip, [sp, #30]
 80156c4:	4413      	add	r3, r2
 80156c6:	b289      	uxth	r1, r1
 80156c8:	b29b      	uxth	r3, r3
 80156ca:	b208      	sxth	r0, r1
 80156cc:	b21a      	sxth	r2, r3
 80156ce:	4290      	cmp	r0, r2
 80156d0:	bfb8      	it	lt
 80156d2:	460b      	movlt	r3, r1
 80156d4:	eba3 030c 	sub.w	r3, r3, ip
 80156d8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80156dc:	a807      	add	r0, sp, #28
 80156de:	f7fa f910 	bl	800f902 <_ZNK8touchgfx4Rect7isEmptyEv>
 80156e2:	b920      	cbnz	r0, 80156ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 80156e4:	6823      	ldr	r3, [r4, #0]
 80156e6:	a907      	add	r1, sp, #28
 80156e8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80156ea:	4620      	mov	r0, r4
 80156ec:	4798      	blx	r3
 80156ee:	3701      	adds	r7, #1
 80156f0:	b2bf      	uxth	r7, r7
 80156f2:	e7a9      	b.n	8015648 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 80156f4:	f8d9 0000 	ldr.w	r0, [r9]
 80156f8:	6803      	ldr	r3, [r0, #0]
 80156fa:	2101      	movs	r1, #1
 80156fc:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8015700:	4798      	blx	r3
 8015702:	e773      	b.n	80155ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015704:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8015708:	e7e8      	b.n	80156dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801570a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801570c:	4798      	blx	r3
 801570e:	4b3f      	ldr	r3, [pc, #252]	; (801580c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8015710:	781b      	ldrb	r3, [r3, #0]
 8015712:	2b00      	cmp	r3, #0
 8015714:	f43f af29 	beq.w	801556a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015718:	2300      	movs	r3, #0
 801571a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 801571e:	882b      	ldrh	r3, [r5, #0]
 8015720:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8015724:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015728:	42ab      	cmp	r3, r5
 801572a:	f4bf af1e 	bcs.w	801556a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801572e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8015732:	2907      	cmp	r1, #7
 8015734:	d814      	bhi.n	8015760 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8015736:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801573a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801573e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8015742:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8015746:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801574a:	1c4a      	adds	r2, r1, #1
 801574c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8015750:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8015754:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8015758:	f8a2 c002 	strh.w	ip, [r2, #2]
 801575c:	8097      	strh	r7, [r2, #4]
 801575e:	80d6      	strh	r6, [r2, #6]
 8015760:	3301      	adds	r3, #1
 8015762:	b29b      	uxth	r3, r3
 8015764:	e7e0      	b.n	8015728 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8015766:	2b02      	cmp	r3, #2
 8015768:	f040 8133 	bne.w	80159d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801576c:	4b28      	ldr	r3, [pc, #160]	; (8015810 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801576e:	781b      	ldrb	r3, [r3, #0]
 8015770:	2b01      	cmp	r3, #1
 8015772:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8015776:	f000 8098 	beq.w	80158aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801577a:	882a      	ldrh	r2, [r5, #0]
 801577c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8015780:	3201      	adds	r2, #1
 8015782:	b292      	uxth	r2, r2
 8015784:	2900      	cmp	r1, #0
 8015786:	d0c2      	beq.n	801570e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015788:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 801578c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8015790:	441e      	add	r6, r3
 8015792:	b236      	sxth	r6, r6
 8015794:	4694      	mov	ip, r2
 8015796:	f04f 0900 	mov.w	r9, #0
 801579a:	fa1f f38c 	uxth.w	r3, ip
 801579e:	4299      	cmp	r1, r3
 80157a0:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 80157a4:	f240 80bf 	bls.w	8015926 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 80157a8:	4427      	add	r7, r4
 80157aa:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 80157ae:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 80157b2:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 80157b6:	4283      	cmp	r3, r0
 80157b8:	f340 80a1 	ble.w	80158fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 80157bc:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 80157c0:	4406      	add	r6, r0
 80157c2:	b236      	sxth	r6, r6
 80157c4:	429e      	cmp	r6, r3
 80157c6:	bfa8      	it	ge
 80157c8:	461e      	movge	r6, r3
 80157ca:	46e1      	mov	r9, ip
 80157cc:	f10c 0c01 	add.w	ip, ip, #1
 80157d0:	e7e3      	b.n	801579a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 80157d2:	d10a      	bne.n	80157ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 80157d4:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 80157d8:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 80157dc:	4562      	cmp	r2, ip
 80157de:	bfb8      	it	lt
 80157e0:	4662      	movlt	r2, ip
 80157e2:	4288      	cmp	r0, r1
 80157e4:	bfb8      	it	lt
 80157e6:	461f      	movlt	r7, r3
 80157e8:	e087      	b.n	80158fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80157ea:	428a      	cmp	r2, r1
 80157ec:	bfb8      	it	lt
 80157ee:	460a      	movlt	r2, r1
 80157f0:	e083      	b.n	80158fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80157f2:	bf00      	nop
 80157f4:	200137fc 	.word	0x200137fc
 80157f8:	20013808 	.word	0x20013808
 80157fc:	20000088 	.word	0x20000088
 8015800:	200137bc 	.word	0x200137bc
 8015804:	200137b2 	.word	0x200137b2
 8015808:	200137b0 	.word	0x200137b0
 801580c:	200137ba 	.word	0x200137ba
 8015810:	200137b4 	.word	0x200137b4
 8015814:	19a1      	adds	r1, r4, r6
 8015816:	ab07      	add	r3, sp, #28
 8015818:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801581c:	6849      	ldr	r1, [r1, #4]
 801581e:	c303      	stmia	r3!, {r0, r1}
 8015820:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8015824:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015828:	2b13      	cmp	r3, #19
 801582a:	bfd8      	it	le
 801582c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8015830:	f8ad 201c 	strh.w	r2, [sp, #28]
 8015834:	440b      	add	r3, r1
 8015836:	1a9b      	subs	r3, r3, r2
 8015838:	a807      	add	r0, sp, #28
 801583a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801583e:	f7fe ff7b 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015842:	a807      	add	r0, sp, #28
 8015844:	f7fa f85d 	bl	800f902 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015848:	bb78      	cbnz	r0, 80158aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801584a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801584e:	f8d9 0000 	ldr.w	r0, [r9]
 8015852:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8015856:	f8d0 e000 	ldr.w	lr, [r0]
 801585a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801585e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015862:	f1bc 0f14 	cmp.w	ip, #20
 8015866:	bfa8      	it	ge
 8015868:	f04f 0c14 	movge.w	ip, #20
 801586c:	fa1f fc8c 	uxth.w	ip, ip
 8015870:	f8cd c000 	str.w	ip, [sp]
 8015874:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8015878:	47d8      	blx	fp
 801587a:	4683      	mov	fp, r0
 801587c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015880:	a807      	add	r0, sp, #28
 8015882:	f7fe ff3f 	bl	8014704 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8015886:	6823      	ldr	r3, [r4, #0]
 8015888:	4426      	add	r6, r4
 801588a:	4620      	mov	r0, r4
 801588c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801588e:	a907      	add	r1, sp, #28
 8015890:	4798      	blx	r3
 8015892:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8015896:	eba0 000b 	sub.w	r0, r0, fp
 801589a:	b200      	sxth	r0, r0
 801589c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 80158a0:	b918      	cbnz	r0, 80158aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80158a2:	b2b9      	uxth	r1, r7
 80158a4:	4650      	mov	r0, sl
 80158a6:	f7ff fa79 	bl	8014d9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80158aa:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 80158ae:	f1bb 0f00 	cmp.w	fp, #0
 80158b2:	f43f af2c 	beq.w	801570e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80158b6:	882b      	ldrh	r3, [r5, #0]
 80158b8:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 80158bc:	3301      	adds	r3, #1
 80158be:	b29b      	uxth	r3, r3
 80158c0:	2700      	movs	r7, #0
 80158c2:	b299      	uxth	r1, r3
 80158c4:	458b      	cmp	fp, r1
 80158c6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 80158ca:	d9a3      	bls.n	8015814 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 80158cc:	4426      	add	r6, r4
 80158ce:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80158d2:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 80158d6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80158da:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 80158de:	4408      	add	r0, r1
 80158e0:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 80158e4:	4461      	add	r1, ip
 80158e6:	b200      	sxth	r0, r0
 80158e8:	b209      	sxth	r1, r1
 80158ea:	4288      	cmp	r0, r1
 80158ec:	f6bf af71 	bge.w	80157d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 80158f0:	4584      	cmp	ip, r0
 80158f2:	4662      	mov	r2, ip
 80158f4:	461f      	mov	r7, r3
 80158f6:	bfb8      	it	lt
 80158f8:	4602      	movlt	r2, r0
 80158fa:	3301      	adds	r3, #1
 80158fc:	e7e1      	b.n	80158c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 80158fe:	d10e      	bne.n	801591e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8015900:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8015904:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8015908:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 801590c:	4473      	add	r3, lr
 801590e:	b21b      	sxth	r3, r3
 8015910:	429e      	cmp	r6, r3
 8015912:	bfa8      	it	ge
 8015914:	461e      	movge	r6, r3
 8015916:	4287      	cmp	r7, r0
 8015918:	bfb8      	it	lt
 801591a:	46e1      	movlt	r9, ip
 801591c:	e756      	b.n	80157cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801591e:	4286      	cmp	r6, r0
 8015920:	bfa8      	it	ge
 8015922:	4606      	movge	r6, r0
 8015924:	e752      	b.n	80157cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8015926:	eb0a 0007 	add.w	r0, sl, r7
 801592a:	4427      	add	r7, r4
 801592c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8015930:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8015934:	f1bb 0f13 	cmp.w	fp, #19
 8015938:	bfde      	ittt	le
 801593a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 801593e:	445e      	addle	r6, fp
 8015940:	b236      	sxthle	r6, r6
 8015942:	f7f9 ffde 	bl	800f902 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015946:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801594a:	2800      	cmp	r0, #0
 801594c:	f47f af1a 	bne.w	8015784 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8015950:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8015954:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015958:	482a      	ldr	r0, [pc, #168]	; (8015a04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801595a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 801595e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8015962:	6800      	ldr	r0, [r0, #0]
 8015964:	f8ad 101c 	strh.w	r1, [sp, #28]
 8015968:	1ab6      	subs	r6, r6, r2
 801596a:	2e14      	cmp	r6, #20
 801596c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8015970:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015974:	bfa8      	it	ge
 8015976:	2614      	movge	r6, #20
 8015978:	f8d0 c000 	ldr.w	ip, [r0]
 801597c:	b2b6      	uxth	r6, r6
 801597e:	fa1f fb8b 	uxth.w	fp, fp
 8015982:	455e      	cmp	r6, fp
 8015984:	bf94      	ite	ls
 8015986:	9600      	strls	r6, [sp, #0]
 8015988:	f8cd b000 	strhi.w	fp, [sp]
 801598c:	b292      	uxth	r2, r2
 801598e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8015992:	b29b      	uxth	r3, r3
 8015994:	b289      	uxth	r1, r1
 8015996:	47b0      	blx	r6
 8015998:	6823      	ldr	r3, [r4, #0]
 801599a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801599e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80159a0:	a907      	add	r1, sp, #28
 80159a2:	4620      	mov	r0, r4
 80159a4:	4798      	blx	r3
 80159a6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80159aa:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 80159ae:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 80159b2:	1a5b      	subs	r3, r3, r1
 80159b4:	440a      	add	r2, r1
 80159b6:	b21b      	sxth	r3, r3
 80159b8:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 80159bc:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 80159c0:	2b00      	cmp	r3, #0
 80159c2:	f47f aeda 	bne.w	801577a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80159c6:	fa1f f189 	uxth.w	r1, r9
 80159ca:	4650      	mov	r0, sl
 80159cc:	f7ff f9e6 	bl	8014d9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80159d0:	e6d3      	b.n	801577a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80159d2:	882e      	ldrh	r6, [r5, #0]
 80159d4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80159d8:	42b3      	cmp	r3, r6
 80159da:	f67f ae98 	bls.w	801570e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80159de:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 80159e2:	ab07      	add	r3, sp, #28
 80159e4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80159e8:	6851      	ldr	r1, [r2, #4]
 80159ea:	c303      	stmia	r3!, {r0, r1}
 80159ec:	a807      	add	r0, sp, #28
 80159ee:	f7f9 ff88 	bl	800f902 <_ZNK8touchgfx4Rect7isEmptyEv>
 80159f2:	b920      	cbnz	r0, 80159fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 80159f4:	6823      	ldr	r3, [r4, #0]
 80159f6:	a907      	add	r1, sp, #28
 80159f8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80159fa:	4620      	mov	r0, r4
 80159fc:	4798      	blx	r3
 80159fe:	3601      	adds	r6, #1
 8015a00:	b2b6      	uxth	r6, r6
 8015a02:	e7e7      	b.n	80159d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8015a04:	200137bc 	.word	0x200137bc

08015a08 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8015a08:	4b03      	ldr	r3, [pc, #12]	; (8015a18 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8015a0a:	2200      	movs	r2, #0
 8015a0c:	801a      	strh	r2, [r3, #0]
 8015a0e:	805a      	strh	r2, [r3, #2]
 8015a10:	809a      	strh	r2, [r3, #4]
 8015a12:	80da      	strh	r2, [r3, #6]
 8015a14:	4770      	bx	lr
 8015a16:	bf00      	nop
 8015a18:	20013808 	.word	0x20013808

08015a1c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8015a1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a20:	4606      	mov	r6, r0
 8015a22:	b09d      	sub	sp, #116	; 0x74
 8015a24:	a803      	add	r0, sp, #12
 8015a26:	4614      	mov	r4, r2
 8015a28:	468a      	mov	sl, r1
 8015a2a:	461d      	mov	r5, r3
 8015a2c:	f000 feca 	bl	80167c4 <_ZN8touchgfx12TextProviderC1Ev>
 8015a30:	6833      	ldr	r3, [r6, #0]
 8015a32:	4630      	mov	r0, r6
 8015a34:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015a36:	4798      	blx	r3
 8015a38:	6833      	ldr	r3, [r6, #0]
 8015a3a:	4607      	mov	r7, r0
 8015a3c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015a3e:	4630      	mov	r0, r6
 8015a40:	4798      	blx	r3
 8015a42:	462a      	mov	r2, r5
 8015a44:	9000      	str	r0, [sp, #0]
 8015a46:	4621      	mov	r1, r4
 8015a48:	463b      	mov	r3, r7
 8015a4a:	a803      	add	r0, sp, #12
 8015a4c:	f000 ff15 	bl	801687a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015a50:	2500      	movs	r5, #0
 8015a52:	462c      	mov	r4, r5
 8015a54:	46a9      	mov	r9, r5
 8015a56:	46a8      	mov	r8, r5
 8015a58:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8015a5c:	2300      	movs	r3, #0
 8015a5e:	9302      	str	r3, [sp, #8]
 8015a60:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015a64:	429c      	cmp	r4, r3
 8015a66:	d002      	beq.n	8015a6e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8015a68:	455c      	cmp	r4, fp
 8015a6a:	bf18      	it	ne
 8015a6c:	4625      	movne	r5, r4
 8015a6e:	ab02      	add	r3, sp, #8
 8015a70:	4632      	mov	r2, r6
 8015a72:	4651      	mov	r1, sl
 8015a74:	a803      	add	r0, sp, #12
 8015a76:	f001 fa03 	bl	8016e80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015a7a:	4604      	mov	r4, r0
 8015a7c:	b108      	cbz	r0, 8015a82 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8015a7e:	280a      	cmp	r0, #10
 8015a80:	d10a      	bne.n	8015a98 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8015a82:	45c1      	cmp	r9, r8
 8015a84:	bf38      	it	cc
 8015a86:	46c1      	movcc	r9, r8
 8015a88:	f04f 0800 	mov.w	r8, #0
 8015a8c:	2c00      	cmp	r4, #0
 8015a8e:	d1e5      	bne.n	8015a5c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015a90:	4648      	mov	r0, r9
 8015a92:	b01d      	add	sp, #116	; 0x74
 8015a94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015a98:	9a02      	ldr	r2, [sp, #8]
 8015a9a:	2a00      	cmp	r2, #0
 8015a9c:	d0de      	beq.n	8015a5c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015a9e:	7b57      	ldrb	r7, [r2, #13]
 8015aa0:	6833      	ldr	r3, [r6, #0]
 8015aa2:	8894      	ldrh	r4, [r2, #4]
 8015aa4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015aa6:	007f      	lsls	r7, r7, #1
 8015aa8:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8015aac:	7a97      	ldrb	r7, [r2, #10]
 8015aae:	4629      	mov	r1, r5
 8015ab0:	4307      	orrs	r7, r0
 8015ab2:	4630      	mov	r0, r6
 8015ab4:	4798      	blx	r3
 8015ab6:	4438      	add	r0, r7
 8015ab8:	4480      	add	r8, r0
 8015aba:	fa1f f888 	uxth.w	r8, r8
 8015abe:	e7e5      	b.n	8015a8c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08015ac0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8015ac0:	b508      	push	{r3, lr}
 8015ac2:	6803      	ldr	r3, [r0, #0]
 8015ac4:	68db      	ldr	r3, [r3, #12]
 8015ac6:	4798      	blx	r3
 8015ac8:	b128      	cbz	r0, 8015ad6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8015aca:	7b43      	ldrb	r3, [r0, #13]
 8015acc:	7a80      	ldrb	r0, [r0, #10]
 8015ace:	005b      	lsls	r3, r3, #1
 8015ad0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015ad4:	4318      	orrs	r0, r3
 8015ad6:	bd08      	pop	{r3, pc}

08015ad8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8015ad8:	b40e      	push	{r1, r2, r3}
 8015ada:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015adc:	b09e      	sub	sp, #120	; 0x78
 8015ade:	ab23      	add	r3, sp, #140	; 0x8c
 8015ae0:	4605      	mov	r5, r0
 8015ae2:	f853 4b04 	ldr.w	r4, [r3], #4
 8015ae6:	9303      	str	r3, [sp, #12]
 8015ae8:	a805      	add	r0, sp, #20
 8015aea:	f000 fe6b 	bl	80167c4 <_ZN8touchgfx12TextProviderC1Ev>
 8015aee:	682b      	ldr	r3, [r5, #0]
 8015af0:	4628      	mov	r0, r5
 8015af2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015af4:	4798      	blx	r3
 8015af6:	682b      	ldr	r3, [r5, #0]
 8015af8:	4606      	mov	r6, r0
 8015afa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015afc:	4628      	mov	r0, r5
 8015afe:	4798      	blx	r3
 8015b00:	4633      	mov	r3, r6
 8015b02:	ae1e      	add	r6, sp, #120	; 0x78
 8015b04:	4621      	mov	r1, r4
 8015b06:	9000      	str	r0, [sp, #0]
 8015b08:	9a03      	ldr	r2, [sp, #12]
 8015b0a:	2400      	movs	r4, #0
 8015b0c:	a805      	add	r0, sp, #20
 8015b0e:	f000 feb4 	bl	801687a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015b12:	f846 4d68 	str.w	r4, [r6, #-104]!
 8015b16:	462a      	mov	r2, r5
 8015b18:	4633      	mov	r3, r6
 8015b1a:	4621      	mov	r1, r4
 8015b1c:	a805      	add	r0, sp, #20
 8015b1e:	f001 f9af 	bl	8016e80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015b22:	b1f0      	cbz	r0, 8015b62 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8015b24:	280a      	cmp	r0, #10
 8015b26:	d018      	beq.n	8015b5a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8015b28:	9f04      	ldr	r7, [sp, #16]
 8015b2a:	b1b7      	cbz	r7, 8015b5a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8015b2c:	7b78      	ldrb	r0, [r7, #13]
 8015b2e:	7a3b      	ldrb	r3, [r7, #8]
 8015b30:	88ea      	ldrh	r2, [r5, #6]
 8015b32:	00c1      	lsls	r1, r0, #3
 8015b34:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8015b38:	4319      	orrs	r1, r3
 8015b3a:	0643      	lsls	r3, r0, #25
 8015b3c:	bf44      	itt	mi
 8015b3e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8015b42:	b219      	sxthmi	r1, r3
 8015b44:	0100      	lsls	r0, r0, #4
 8015b46:	79fb      	ldrb	r3, [r7, #7]
 8015b48:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8015b4c:	4303      	orrs	r3, r0
 8015b4e:	4413      	add	r3, r2
 8015b50:	1a5b      	subs	r3, r3, r1
 8015b52:	b21b      	sxth	r3, r3
 8015b54:	429c      	cmp	r4, r3
 8015b56:	bfb8      	it	lt
 8015b58:	461c      	movlt	r4, r3
 8015b5a:	4633      	mov	r3, r6
 8015b5c:	462a      	mov	r2, r5
 8015b5e:	2100      	movs	r1, #0
 8015b60:	e7dc      	b.n	8015b1c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8015b62:	b2a0      	uxth	r0, r4
 8015b64:	b01e      	add	sp, #120	; 0x78
 8015b66:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8015b6a:	b003      	add	sp, #12
 8015b6c:	4770      	bx	lr

08015b6e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8015b6e:	7a43      	ldrb	r3, [r0, #9]
 8015b70:	8880      	ldrh	r0, [r0, #4]
 8015b72:	4418      	add	r0, r3
 8015b74:	b280      	uxth	r0, r0
 8015b76:	4770      	bx	lr

08015b78 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8015b78:	6803      	ldr	r3, [r0, #0]
 8015b7a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015b7c:	4718      	bx	r3

08015b7e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8015b7e:	b40e      	push	{r1, r2, r3}
 8015b80:	b570      	push	{r4, r5, r6, lr}
 8015b82:	b09d      	sub	sp, #116	; 0x74
 8015b84:	ab21      	add	r3, sp, #132	; 0x84
 8015b86:	4604      	mov	r4, r0
 8015b88:	f853 5b04 	ldr.w	r5, [r3], #4
 8015b8c:	9302      	str	r3, [sp, #8]
 8015b8e:	a803      	add	r0, sp, #12
 8015b90:	f000 fe18 	bl	80167c4 <_ZN8touchgfx12TextProviderC1Ev>
 8015b94:	6823      	ldr	r3, [r4, #0]
 8015b96:	4620      	mov	r0, r4
 8015b98:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015b9a:	4798      	blx	r3
 8015b9c:	6823      	ldr	r3, [r4, #0]
 8015b9e:	4606      	mov	r6, r0
 8015ba0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015ba2:	4620      	mov	r0, r4
 8015ba4:	4798      	blx	r3
 8015ba6:	4633      	mov	r3, r6
 8015ba8:	9000      	str	r0, [sp, #0]
 8015baa:	9a02      	ldr	r2, [sp, #8]
 8015bac:	4629      	mov	r1, r5
 8015bae:	a803      	add	r0, sp, #12
 8015bb0:	f000 fe63 	bl	801687a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015bb4:	a803      	add	r0, sp, #12
 8015bb6:	f001 fa31 	bl	801701c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015bba:	2401      	movs	r4, #1
 8015bbc:	b2a3      	uxth	r3, r4
 8015bbe:	b140      	cbz	r0, 8015bd2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8015bc0:	280a      	cmp	r0, #10
 8015bc2:	bf08      	it	eq
 8015bc4:	3301      	addeq	r3, #1
 8015bc6:	a803      	add	r0, sp, #12
 8015bc8:	bf08      	it	eq
 8015bca:	b21c      	sxtheq	r4, r3
 8015bcc:	f001 fa26 	bl	801701c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015bd0:	e7f4      	b.n	8015bbc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8015bd2:	4618      	mov	r0, r3
 8015bd4:	b01d      	add	sp, #116	; 0x74
 8015bd6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015bda:	b003      	add	sp, #12
 8015bdc:	4770      	bx	lr

08015bde <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8015bde:	b40e      	push	{r1, r2, r3}
 8015be0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015be2:	b09e      	sub	sp, #120	; 0x78
 8015be4:	ab23      	add	r3, sp, #140	; 0x8c
 8015be6:	4604      	mov	r4, r0
 8015be8:	f853 5b04 	ldr.w	r5, [r3], #4
 8015bec:	9303      	str	r3, [sp, #12]
 8015bee:	a805      	add	r0, sp, #20
 8015bf0:	f000 fde8 	bl	80167c4 <_ZN8touchgfx12TextProviderC1Ev>
 8015bf4:	6823      	ldr	r3, [r4, #0]
 8015bf6:	4620      	mov	r0, r4
 8015bf8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015bfa:	4798      	blx	r3
 8015bfc:	6823      	ldr	r3, [r4, #0]
 8015bfe:	4606      	mov	r6, r0
 8015c00:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015c02:	4620      	mov	r0, r4
 8015c04:	4798      	blx	r3
 8015c06:	4633      	mov	r3, r6
 8015c08:	4629      	mov	r1, r5
 8015c0a:	9000      	str	r0, [sp, #0]
 8015c0c:	9a03      	ldr	r2, [sp, #12]
 8015c0e:	a805      	add	r0, sp, #20
 8015c10:	ad1e      	add	r5, sp, #120	; 0x78
 8015c12:	f000 fe32 	bl	801687a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015c16:	2100      	movs	r1, #0
 8015c18:	f845 1d68 	str.w	r1, [r5, #-104]!
 8015c1c:	4622      	mov	r2, r4
 8015c1e:	462b      	mov	r3, r5
 8015c20:	a805      	add	r0, sp, #20
 8015c22:	f001 f92d 	bl	8016e80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015c26:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8015c2a:	b1d8      	cbz	r0, 8015c64 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8015c2c:	280a      	cmp	r0, #10
 8015c2e:	d012      	beq.n	8015c56 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8015c30:	9804      	ldr	r0, [sp, #16]
 8015c32:	b180      	cbz	r0, 8015c56 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8015c34:	7b47      	ldrb	r7, [r0, #13]
 8015c36:	88e2      	ldrh	r2, [r4, #6]
 8015c38:	00fb      	lsls	r3, r7, #3
 8015c3a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8015c3e:	7a03      	ldrb	r3, [r0, #8]
 8015c40:	430b      	orrs	r3, r1
 8015c42:	0679      	lsls	r1, r7, #25
 8015c44:	bf44      	itt	mi
 8015c46:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015c4a:	b21b      	sxthmi	r3, r3
 8015c4c:	1ad3      	subs	r3, r2, r3
 8015c4e:	b21b      	sxth	r3, r3
 8015c50:	429e      	cmp	r6, r3
 8015c52:	bfa8      	it	ge
 8015c54:	461e      	movge	r6, r3
 8015c56:	462b      	mov	r3, r5
 8015c58:	4622      	mov	r2, r4
 8015c5a:	2100      	movs	r1, #0
 8015c5c:	a805      	add	r0, sp, #20
 8015c5e:	f001 f90f 	bl	8016e80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015c62:	e7e2      	b.n	8015c2a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8015c64:	4630      	mov	r0, r6
 8015c66:	b01e      	add	sp, #120	; 0x78
 8015c68:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8015c6c:	b003      	add	sp, #12
 8015c6e:	4770      	bx	lr

08015c70 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8015c70:	b513      	push	{r0, r1, r4, lr}
 8015c72:	6803      	ldr	r3, [r0, #0]
 8015c74:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8015c78:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8015c7c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8015c80:	2400      	movs	r4, #0
 8015c82:	9400      	str	r4, [sp, #0]
 8015c84:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015c88:	691b      	ldr	r3, [r3, #16]
 8015c8a:	4669      	mov	r1, sp
 8015c8c:	4798      	blx	r3
 8015c8e:	b002      	add	sp, #8
 8015c90:	bd10      	pop	{r4, pc}

08015c92 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8015c92:	b538      	push	{r3, r4, r5, lr}
 8015c94:	680b      	ldr	r3, [r1, #0]
 8015c96:	460c      	mov	r4, r1
 8015c98:	68db      	ldr	r3, [r3, #12]
 8015c9a:	4605      	mov	r5, r0
 8015c9c:	4798      	blx	r3
 8015c9e:	6823      	ldr	r3, [r4, #0]
 8015ca0:	4620      	mov	r0, r4
 8015ca2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015ca4:	4629      	mov	r1, r5
 8015ca6:	4798      	blx	r3
 8015ca8:	4628      	mov	r0, r5
 8015caa:	bd38      	pop	{r3, r4, r5, pc}

08015cac <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8015cac:	b410      	push	{r4}
 8015cae:	880a      	ldrh	r2, [r1, #0]
 8015cb0:	8884      	ldrh	r4, [r0, #4]
 8015cb2:	4422      	add	r2, r4
 8015cb4:	800a      	strh	r2, [r1, #0]
 8015cb6:	88c4      	ldrh	r4, [r0, #6]
 8015cb8:	884a      	ldrh	r2, [r1, #2]
 8015cba:	4422      	add	r2, r4
 8015cbc:	804a      	strh	r2, [r1, #2]
 8015cbe:	6940      	ldr	r0, [r0, #20]
 8015cc0:	b120      	cbz	r0, 8015ccc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8015cc2:	6803      	ldr	r3, [r0, #0]
 8015cc4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8015cc8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015cca:	4718      	bx	r3
 8015ccc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8015cd0:	4770      	bx	lr

08015cd2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8015cd2:	b570      	push	{r4, r5, r6, lr}
 8015cd4:	8882      	ldrh	r2, [r0, #4]
 8015cd6:	880b      	ldrh	r3, [r1, #0]
 8015cd8:	4413      	add	r3, r2
 8015cda:	800b      	strh	r3, [r1, #0]
 8015cdc:	88c2      	ldrh	r2, [r0, #6]
 8015cde:	884b      	ldrh	r3, [r1, #2]
 8015ce0:	460c      	mov	r4, r1
 8015ce2:	4413      	add	r3, r2
 8015ce4:	804b      	strh	r3, [r1, #2]
 8015ce6:	4605      	mov	r5, r0
 8015ce8:	1d01      	adds	r1, r0, #4
 8015cea:	4620      	mov	r0, r4
 8015cec:	f7f9 fdc6 	bl	800f87c <_ZN8touchgfx4RectaNERKS0_>
 8015cf0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8015cf4:	2b00      	cmp	r3, #0
 8015cf6:	dd0b      	ble.n	8015d10 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015cf8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8015cfc:	2b00      	cmp	r3, #0
 8015cfe:	dd07      	ble.n	8015d10 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015d00:	6968      	ldr	r0, [r5, #20]
 8015d02:	b128      	cbz	r0, 8015d10 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015d04:	6803      	ldr	r3, [r0, #0]
 8015d06:	4621      	mov	r1, r4
 8015d08:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015d0a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015d0e:	4718      	bx	r3
 8015d10:	bd70      	pop	{r4, r5, r6, pc}
	...

08015d14 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8015d14:	b570      	push	{r4, r5, r6, lr}
 8015d16:	8882      	ldrh	r2, [r0, #4]
 8015d18:	880b      	ldrh	r3, [r1, #0]
 8015d1a:	4413      	add	r3, r2
 8015d1c:	800b      	strh	r3, [r1, #0]
 8015d1e:	88c2      	ldrh	r2, [r0, #6]
 8015d20:	884b      	ldrh	r3, [r1, #2]
 8015d22:	460c      	mov	r4, r1
 8015d24:	4413      	add	r3, r2
 8015d26:	804b      	strh	r3, [r1, #2]
 8015d28:	4605      	mov	r5, r0
 8015d2a:	1d01      	adds	r1, r0, #4
 8015d2c:	4620      	mov	r0, r4
 8015d2e:	f7f9 fda5 	bl	800f87c <_ZN8touchgfx4RectaNERKS0_>
 8015d32:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8015d36:	2b00      	cmp	r3, #0
 8015d38:	dd19      	ble.n	8015d6e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015d3a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8015d3e:	2b00      	cmp	r3, #0
 8015d40:	dd15      	ble.n	8015d6e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015d42:	6968      	ldr	r0, [r5, #20]
 8015d44:	b128      	cbz	r0, 8015d52 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8015d46:	6803      	ldr	r3, [r0, #0]
 8015d48:	4621      	mov	r1, r4
 8015d4a:	691b      	ldr	r3, [r3, #16]
 8015d4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015d50:	4718      	bx	r3
 8015d52:	4b07      	ldr	r3, [pc, #28]	; (8015d70 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8015d54:	681b      	ldr	r3, [r3, #0]
 8015d56:	3304      	adds	r3, #4
 8015d58:	429d      	cmp	r5, r3
 8015d5a:	d108      	bne.n	8015d6e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015d5c:	f7fe fea0 	bl	8014aa0 <_ZN8touchgfx11Application11getInstanceEv>
 8015d60:	6803      	ldr	r3, [r0, #0]
 8015d62:	6821      	ldr	r1, [r4, #0]
 8015d64:	6862      	ldr	r2, [r4, #4]
 8015d66:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015d68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015d6c:	4718      	bx	r3
 8015d6e:	bd70      	pop	{r4, r5, r6, pc}
 8015d70:	20013800 	.word	0x20013800

08015d74 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8015d74:	b570      	push	{r4, r5, r6, lr}
 8015d76:	4604      	mov	r4, r0
 8015d78:	4616      	mov	r6, r2
 8015d7a:	460d      	mov	r5, r1
 8015d7c:	b901      	cbnz	r1, 8015d80 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8015d7e:	b192      	cbz	r2, 8015da6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8015d80:	6823      	ldr	r3, [r4, #0]
 8015d82:	4620      	mov	r0, r4
 8015d84:	699b      	ldr	r3, [r3, #24]
 8015d86:	4798      	blx	r3
 8015d88:	88e2      	ldrh	r2, [r4, #6]
 8015d8a:	88a1      	ldrh	r1, [r4, #4]
 8015d8c:	4432      	add	r2, r6
 8015d8e:	4429      	add	r1, r5
 8015d90:	4620      	mov	r0, r4
 8015d92:	b212      	sxth	r2, r2
 8015d94:	b209      	sxth	r1, r1
 8015d96:	f7ec fb82 	bl	800249e <_ZN8touchgfx8Drawable5setXYEss>
 8015d9a:	6823      	ldr	r3, [r4, #0]
 8015d9c:	4620      	mov	r0, r4
 8015d9e:	699b      	ldr	r3, [r3, #24]
 8015da0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015da4:	4718      	bx	r3
 8015da6:	bd70      	pop	{r4, r5, r6, pc}

08015da8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8015da8:	b510      	push	{r4, lr}
 8015daa:	4604      	mov	r4, r0
 8015dac:	4608      	mov	r0, r1
 8015dae:	2300      	movs	r3, #0
 8015db0:	8023      	strh	r3, [r4, #0]
 8015db2:	8063      	strh	r3, [r4, #2]
 8015db4:	6803      	ldr	r3, [r0, #0]
 8015db6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8015dba:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8015dbe:	80a1      	strh	r1, [r4, #4]
 8015dc0:	80e2      	strh	r2, [r4, #6]
 8015dc2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015dc4:	4621      	mov	r1, r4
 8015dc6:	4798      	blx	r3
 8015dc8:	4620      	mov	r0, r4
 8015dca:	bd10      	pop	{r4, pc}

08015dcc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8015dcc:	b530      	push	{r4, r5, lr}
 8015dce:	8083      	strh	r3, [r0, #4]
 8015dd0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8015dd4:	80c3      	strh	r3, [r0, #6]
 8015dd6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8015dda:	7203      	strb	r3, [r0, #8]
 8015ddc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8015de0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8015de4:	7243      	strb	r3, [r0, #9]
 8015de6:	7a83      	ldrb	r3, [r0, #10]
 8015de8:	6141      	str	r1, [r0, #20]
 8015dea:	f365 0306 	bfi	r3, r5, #0, #7
 8015dee:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8015df2:	8302      	strh	r2, [r0, #24]
 8015df4:	f365 13c7 	bfi	r3, r5, #7, #1
 8015df8:	7283      	strb	r3, [r0, #10]
 8015dfa:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8015dfe:	72c3      	strb	r3, [r0, #11]
 8015e00:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8015e04:	7303      	strb	r3, [r0, #12]
 8015e06:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8015e0a:	81c3      	strh	r3, [r0, #14]
 8015e0c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8015e10:	8203      	strh	r3, [r0, #16]
 8015e12:	4b01      	ldr	r3, [pc, #4]	; (8015e18 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8015e14:	6003      	str	r3, [r0, #0]
 8015e16:	bd30      	pop	{r4, r5, pc}
 8015e18:	0802ca00 	.word	0x0802ca00

08015e1c <_ZNK8touchgfx9ConstFont4findEt>:
 8015e1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015e1e:	6944      	ldr	r4, [r0, #20]
 8015e20:	b3bc      	cbz	r4, 8015e92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015e22:	88a3      	ldrh	r3, [r4, #4]
 8015e24:	8b02      	ldrh	r2, [r0, #24]
 8015e26:	1acb      	subs	r3, r1, r3
 8015e28:	f102 32ff 	add.w	r2, r2, #4294967295
 8015e2c:	d431      	bmi.n	8015e92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015e2e:	4293      	cmp	r3, r2
 8015e30:	dd0c      	ble.n	8015e4c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8015e32:	230e      	movs	r3, #14
 8015e34:	fb03 4302 	mla	r3, r3, r2, r4
 8015e38:	889b      	ldrh	r3, [r3, #4]
 8015e3a:	1a5b      	subs	r3, r3, r1
 8015e3c:	1ad3      	subs	r3, r2, r3
 8015e3e:	429a      	cmp	r2, r3
 8015e40:	db27      	blt.n	8015e92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015e42:	2b00      	cmp	r3, #0
 8015e44:	bfbc      	itt	lt
 8015e46:	2302      	movlt	r3, #2
 8015e48:	fb92 f3f3 	sdivlt	r3, r2, r3
 8015e4c:	2500      	movs	r5, #0
 8015e4e:	260e      	movs	r6, #14
 8015e50:	4295      	cmp	r5, r2
 8015e52:	dc1e      	bgt.n	8015e92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015e54:	fb06 4003 	mla	r0, r6, r3, r4
 8015e58:	8887      	ldrh	r7, [r0, #4]
 8015e5a:	42b9      	cmp	r1, r7
 8015e5c:	d01a      	beq.n	8015e94 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8015e5e:	d20d      	bcs.n	8015e7c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8015e60:	1e5a      	subs	r2, r3, #1
 8015e62:	4295      	cmp	r5, r2
 8015e64:	dc15      	bgt.n	8015e92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015e66:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8015e6a:	1a5b      	subs	r3, r3, r1
 8015e6c:	1ad3      	subs	r3, r2, r3
 8015e6e:	429a      	cmp	r2, r3
 8015e70:	db0f      	blt.n	8015e92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015e72:	429d      	cmp	r5, r3
 8015e74:	ddec      	ble.n	8015e50 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015e76:	1953      	adds	r3, r2, r5
 8015e78:	105b      	asrs	r3, r3, #1
 8015e7a:	e7e9      	b.n	8015e50 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015e7c:	1c5d      	adds	r5, r3, #1
 8015e7e:	42aa      	cmp	r2, r5
 8015e80:	db07      	blt.n	8015e92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015e82:	8a43      	ldrh	r3, [r0, #18]
 8015e84:	1acb      	subs	r3, r1, r3
 8015e86:	442b      	add	r3, r5
 8015e88:	429d      	cmp	r5, r3
 8015e8a:	dc02      	bgt.n	8015e92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015e8c:	429a      	cmp	r2, r3
 8015e8e:	dadf      	bge.n	8015e50 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015e90:	e7f1      	b.n	8015e76 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8015e92:	2000      	movs	r0, #0
 8015e94:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015e96 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8015e96:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015e98:	4604      	mov	r4, r0
 8015e9a:	4617      	mov	r7, r2
 8015e9c:	461e      	mov	r6, r3
 8015e9e:	b911      	cbnz	r1, 8015ea6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8015ea0:	2500      	movs	r5, #0
 8015ea2:	4628      	mov	r0, r5
 8015ea4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015ea6:	290a      	cmp	r1, #10
 8015ea8:	d0fa      	beq.n	8015ea0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015eaa:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8015eae:	4291      	cmp	r1, r2
 8015eb0:	d0f6      	beq.n	8015ea0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015eb2:	f242 020b 	movw	r2, #8203	; 0x200b
 8015eb6:	4291      	cmp	r1, r2
 8015eb8:	d0f2      	beq.n	8015ea0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015eba:	f7ff ffaf 	bl	8015e1c <_ZNK8touchgfx9ConstFont4findEt>
 8015ebe:	4605      	mov	r5, r0
 8015ec0:	b950      	cbnz	r0, 8015ed8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8015ec2:	6823      	ldr	r3, [r4, #0]
 8015ec4:	4620      	mov	r0, r4
 8015ec6:	691b      	ldr	r3, [r3, #16]
 8015ec8:	4798      	blx	r3
 8015eca:	4601      	mov	r1, r0
 8015ecc:	4620      	mov	r0, r4
 8015ece:	f7ff ffa5 	bl	8015e1c <_ZNK8touchgfx9ConstFont4findEt>
 8015ed2:	4605      	mov	r5, r0
 8015ed4:	2800      	cmp	r0, #0
 8015ed6:	d0e3      	beq.n	8015ea0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015ed8:	6823      	ldr	r3, [r4, #0]
 8015eda:	4629      	mov	r1, r5
 8015edc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8015ede:	4620      	mov	r0, r4
 8015ee0:	4798      	blx	r3
 8015ee2:	6038      	str	r0, [r7, #0]
 8015ee4:	6823      	ldr	r3, [r4, #0]
 8015ee6:	4620      	mov	r0, r4
 8015ee8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015eea:	4798      	blx	r3
 8015eec:	7030      	strb	r0, [r6, #0]
 8015eee:	e7d8      	b.n	8015ea2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08015ef0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8015ef0:	b538      	push	{r3, r4, r5, lr}
 8015ef2:	4605      	mov	r5, r0
 8015ef4:	f002 f962 	bl	80181bc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8015ef8:	4604      	mov	r4, r0
 8015efa:	4628      	mov	r0, r5
 8015efc:	f002 f8a2 	bl	8018044 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8015f00:	2800      	cmp	r0, #0
 8015f02:	bf14      	ite	ne
 8015f04:	2002      	movne	r0, #2
 8015f06:	2000      	moveq	r0, #0
 8015f08:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8015f0c:	b280      	uxth	r0, r0
 8015f0e:	bd38      	pop	{r3, r4, r5, pc}

08015f10 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8015f10:	b538      	push	{r3, r4, r5, lr}
 8015f12:	4605      	mov	r5, r0
 8015f14:	f002 f952 	bl	80181bc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8015f18:	4604      	mov	r4, r0
 8015f1a:	4628      	mov	r0, r5
 8015f1c:	f002 f892 	bl	8018044 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8015f20:	2800      	cmp	r0, #0
 8015f22:	bf14      	ite	ne
 8015f24:	2002      	movne	r0, #2
 8015f26:	2000      	moveq	r0, #0
 8015f28:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8015f2c:	f040 0001 	orr.w	r0, r0, #1
 8015f30:	b280      	uxth	r0, r0
 8015f32:	bd38      	pop	{r3, r4, r5, pc}

08015f34 <_ZN8touchgfx4clzuEm>:
 8015f34:	4603      	mov	r3, r0
 8015f36:	b1c8      	cbz	r0, 8015f6c <_ZN8touchgfx4clzuEm+0x38>
 8015f38:	0c02      	lsrs	r2, r0, #16
 8015f3a:	0412      	lsls	r2, r2, #16
 8015f3c:	b9a2      	cbnz	r2, 8015f68 <_ZN8touchgfx4clzuEm+0x34>
 8015f3e:	0403      	lsls	r3, r0, #16
 8015f40:	2010      	movs	r0, #16
 8015f42:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8015f46:	bf04      	itt	eq
 8015f48:	021b      	lsleq	r3, r3, #8
 8015f4a:	3008      	addeq	r0, #8
 8015f4c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8015f50:	bf04      	itt	eq
 8015f52:	011b      	lsleq	r3, r3, #4
 8015f54:	3004      	addeq	r0, #4
 8015f56:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8015f5a:	bf04      	itt	eq
 8015f5c:	009b      	lsleq	r3, r3, #2
 8015f5e:	3002      	addeq	r0, #2
 8015f60:	2b00      	cmp	r3, #0
 8015f62:	db04      	blt.n	8015f6e <_ZN8touchgfx4clzuEm+0x3a>
 8015f64:	3001      	adds	r0, #1
 8015f66:	4770      	bx	lr
 8015f68:	2000      	movs	r0, #0
 8015f6a:	e7ea      	b.n	8015f42 <_ZN8touchgfx4clzuEm+0xe>
 8015f6c:	2020      	movs	r0, #32
 8015f6e:	4770      	bx	lr

08015f70 <_ZN8touchgfx7muldivuEmmmRm>:
 8015f70:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8015f74:	460f      	mov	r7, r1
 8015f76:	4615      	mov	r5, r2
 8015f78:	461e      	mov	r6, r3
 8015f7a:	4601      	mov	r1, r0
 8015f7c:	b100      	cbz	r0, 8015f80 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8015f7e:	b927      	cbnz	r7, 8015f8a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8015f80:	2000      	movs	r0, #0
 8015f82:	6030      	str	r0, [r6, #0]
 8015f84:	b002      	add	sp, #8
 8015f86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015f8a:	f7ff ffd3 	bl	8015f34 <_ZN8touchgfx4clzuEm>
 8015f8e:	b980      	cbnz	r0, 8015fb2 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8015f90:	4638      	mov	r0, r7
 8015f92:	f7ff ffcf 	bl	8015f34 <_ZN8touchgfx4clzuEm>
 8015f96:	2800      	cmp	r0, #0
 8015f98:	dd05      	ble.n	8015fa6 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8015f9a:	4633      	mov	r3, r6
 8015f9c:	462a      	mov	r2, r5
 8015f9e:	4638      	mov	r0, r7
 8015fa0:	f7ff ffe6 	bl	8015f70 <_ZN8touchgfx7muldivuEmmmRm>
 8015fa4:	e7ee      	b.n	8015f84 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8015fa6:	f04f 33ff 	mov.w	r3, #4294967295
 8015faa:	6033      	str	r3, [r6, #0]
 8015fac:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8015fb0:	e7e8      	b.n	8015f84 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8015fb2:	fa37 f800 	lsrs.w	r8, r7, r0
 8015fb6:	fb07 f301 	mul.w	r3, r7, r1
 8015fba:	d105      	bne.n	8015fc8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8015fbc:	fbb3 f0f5 	udiv	r0, r3, r5
 8015fc0:	fb05 3510 	mls	r5, r5, r0, r3
 8015fc4:	6035      	str	r5, [r6, #0]
 8015fc6:	e7dd      	b.n	8015f84 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8015fc8:	2301      	movs	r3, #1
 8015fca:	fa01 fa00 	lsl.w	sl, r1, r0
 8015fce:	fa03 f000 	lsl.w	r0, r3, r0
 8015fd2:	3801      	subs	r0, #1
 8015fd4:	462a      	mov	r2, r5
 8015fd6:	4633      	mov	r3, r6
 8015fd8:	4038      	ands	r0, r7
 8015fda:	f7ff ffc9 	bl	8015f70 <_ZN8touchgfx7muldivuEmmmRm>
 8015fde:	fbba f9f5 	udiv	r9, sl, r5
 8015fe2:	462a      	mov	r2, r5
 8015fe4:	4607      	mov	r7, r0
 8015fe6:	ab01      	add	r3, sp, #4
 8015fe8:	fb05 a119 	mls	r1, r5, r9, sl
 8015fec:	4640      	mov	r0, r8
 8015fee:	f7ff ffbf 	bl	8015f70 <_ZN8touchgfx7muldivuEmmmRm>
 8015ff2:	9b01      	ldr	r3, [sp, #4]
 8015ff4:	6832      	ldr	r2, [r6, #0]
 8015ff6:	fb08 f409 	mul.w	r4, r8, r9
 8015ffa:	441a      	add	r2, r3
 8015ffc:	fbb2 f3f5 	udiv	r3, r2, r5
 8016000:	441c      	add	r4, r3
 8016002:	443c      	add	r4, r7
 8016004:	4420      	add	r0, r4
 8016006:	fb05 2513 	mls	r5, r5, r3, r2
 801600a:	e7db      	b.n	8015fc4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

0801600c <_ZN8touchgfx6muldivElllRl>:
 801600c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801600e:	2800      	cmp	r0, #0
 8016010:	bfba      	itte	lt
 8016012:	4240      	neglt	r0, r0
 8016014:	f04f 34ff 	movlt.w	r4, #4294967295
 8016018:	2401      	movge	r4, #1
 801601a:	2900      	cmp	r1, #0
 801601c:	bfbc      	itt	lt
 801601e:	4249      	neglt	r1, r1
 8016020:	4264      	neglt	r4, r4
 8016022:	2a00      	cmp	r2, #0
 8016024:	bfb6      	itet	lt
 8016026:	4265      	neglt	r5, r4
 8016028:	4625      	movge	r5, r4
 801602a:	4252      	neglt	r2, r2
 801602c:	4288      	cmp	r0, r1
 801602e:	461e      	mov	r6, r3
 8016030:	bfc2      	ittt	gt
 8016032:	4603      	movgt	r3, r0
 8016034:	4608      	movgt	r0, r1
 8016036:	4619      	movgt	r1, r3
 8016038:	ab01      	add	r3, sp, #4
 801603a:	f7ff ff99 	bl	8015f70 <_ZN8touchgfx7muldivuEmmmRm>
 801603e:	9b01      	ldr	r3, [sp, #4]
 8016040:	4368      	muls	r0, r5
 8016042:	435c      	muls	r4, r3
 8016044:	6034      	str	r4, [r6, #0]
 8016046:	b002      	add	sp, #8
 8016048:	bd70      	pop	{r4, r5, r6, pc}

0801604a <_ZN8touchgfx6muldivElll>:
 801604a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801604c:	4606      	mov	r6, r0
 801604e:	ab01      	add	r3, sp, #4
 8016050:	460d      	mov	r5, r1
 8016052:	4614      	mov	r4, r2
 8016054:	f7ff ffda 	bl	801600c <_ZN8touchgfx6muldivElllRl>
 8016058:	2e00      	cmp	r6, #0
 801605a:	db20      	blt.n	801609e <_ZN8touchgfx6muldivElll+0x54>
 801605c:	bf14      	ite	ne
 801605e:	2301      	movne	r3, #1
 8016060:	2300      	moveq	r3, #0
 8016062:	2d00      	cmp	r5, #0
 8016064:	db1e      	blt.n	80160a4 <_ZN8touchgfx6muldivElll+0x5a>
 8016066:	bf14      	ite	ne
 8016068:	2201      	movne	r2, #1
 801606a:	2200      	moveq	r2, #0
 801606c:	2c00      	cmp	r4, #0
 801606e:	fb03 f202 	mul.w	r2, r3, r2
 8016072:	db1a      	blt.n	80160aa <_ZN8touchgfx6muldivElll+0x60>
 8016074:	bf14      	ite	ne
 8016076:	2301      	movne	r3, #1
 8016078:	2300      	moveq	r3, #0
 801607a:	4353      	muls	r3, r2
 801607c:	2b01      	cmp	r3, #1
 801607e:	d117      	bne.n	80160b0 <_ZN8touchgfx6muldivElll+0x66>
 8016080:	9b01      	ldr	r3, [sp, #4]
 8016082:	2c00      	cmp	r4, #0
 8016084:	bfb8      	it	lt
 8016086:	4264      	neglt	r4, r4
 8016088:	2b00      	cmp	r3, #0
 801608a:	f104 0401 	add.w	r4, r4, #1
 801608e:	bfb8      	it	lt
 8016090:	425b      	neglt	r3, r3
 8016092:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8016096:	db00      	blt.n	801609a <_ZN8touchgfx6muldivElll+0x50>
 8016098:	3001      	adds	r0, #1
 801609a:	b002      	add	sp, #8
 801609c:	bd70      	pop	{r4, r5, r6, pc}
 801609e:	f04f 33ff 	mov.w	r3, #4294967295
 80160a2:	e7de      	b.n	8016062 <_ZN8touchgfx6muldivElll+0x18>
 80160a4:	f04f 32ff 	mov.w	r2, #4294967295
 80160a8:	e7e0      	b.n	801606c <_ZN8touchgfx6muldivElll+0x22>
 80160aa:	f04f 33ff 	mov.w	r3, #4294967295
 80160ae:	e7e4      	b.n	801607a <_ZN8touchgfx6muldivElll+0x30>
 80160b0:	3301      	adds	r3, #1
 80160b2:	d1f2      	bne.n	801609a <_ZN8touchgfx6muldivElll+0x50>
 80160b4:	9b01      	ldr	r3, [sp, #4]
 80160b6:	2c00      	cmp	r4, #0
 80160b8:	bfb8      	it	lt
 80160ba:	4264      	neglt	r4, r4
 80160bc:	2b00      	cmp	r3, #0
 80160be:	bfb8      	it	lt
 80160c0:	425b      	neglt	r3, r3
 80160c2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80160c6:	bfc8      	it	gt
 80160c8:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80160cc:	e7e5      	b.n	801609a <_ZN8touchgfx6muldivElll+0x50>

080160ce <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80160ce:	2000      	movs	r0, #0
 80160d0:	4770      	bx	lr

080160d2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80160d2:	2001      	movs	r0, #1
 80160d4:	4770      	bx	lr

080160d6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80160d6:	2002      	movs	r0, #2
 80160d8:	4770      	bx	lr

080160da <_ZN8touchgfx6ScreenD1Ev>:
 80160da:	4770      	bx	lr

080160dc <_ZN8touchgfx12GestureEventD1Ev>:
 80160dc:	4770      	bx	lr

080160de <_ZN8touchgfx9DragEventD1Ev>:
 80160de:	4770      	bx	lr

080160e0 <_ZN8touchgfx10ClickEventD1Ev>:
 80160e0:	4770      	bx	lr

080160e2 <_ZN8touchgfx10ClickEventD0Ev>:
 80160e2:	b510      	push	{r4, lr}
 80160e4:	210c      	movs	r1, #12
 80160e6:	4604      	mov	r4, r0
 80160e8:	f011 fa39 	bl	802755e <_ZdlPvj>
 80160ec:	4620      	mov	r0, r4
 80160ee:	bd10      	pop	{r4, pc}

080160f0 <_ZN8touchgfx9DragEventD0Ev>:
 80160f0:	b510      	push	{r4, lr}
 80160f2:	2110      	movs	r1, #16
 80160f4:	4604      	mov	r4, r0
 80160f6:	f011 fa32 	bl	802755e <_ZdlPvj>
 80160fa:	4620      	mov	r0, r4
 80160fc:	bd10      	pop	{r4, pc}

080160fe <_ZN8touchgfx12GestureEventD0Ev>:
 80160fe:	b510      	push	{r4, lr}
 8016100:	210c      	movs	r1, #12
 8016102:	4604      	mov	r4, r0
 8016104:	f011 fa2b 	bl	802755e <_ZdlPvj>
 8016108:	4620      	mov	r0, r4
 801610a:	bd10      	pop	{r4, pc}

0801610c <_ZN8touchgfx6ScreenD0Ev>:
 801610c:	b510      	push	{r4, lr}
 801610e:	213c      	movs	r1, #60	; 0x3c
 8016110:	4604      	mov	r4, r0
 8016112:	f011 fa24 	bl	802755e <_ZdlPvj>
 8016116:	4620      	mov	r0, r4
 8016118:	bd10      	pop	{r4, pc}
	...

0801611c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801611c:	b530      	push	{r4, r5, lr}
 801611e:	460d      	mov	r5, r1
 8016120:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8016122:	b087      	sub	sp, #28
 8016124:	4604      	mov	r4, r0
 8016126:	b301      	cbz	r1, 801616a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8016128:	a801      	add	r0, sp, #4
 801612a:	f7ff fe3d 	bl	8015da8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801612e:	892a      	ldrh	r2, [r5, #8]
 8016130:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8016134:	7928      	ldrb	r0, [r5, #4]
 8016136:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801613a:	f88d 0010 	strb.w	r0, [sp, #16]
 801613e:	1ad2      	subs	r2, r2, r3
 8016140:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8016142:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8016144:	f8ad 1012 	strh.w	r1, [sp, #18]
 8016148:	441a      	add	r2, r3
 801614a:	896b      	ldrh	r3, [r5, #10]
 801614c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8016150:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016154:	1b5b      	subs	r3, r3, r5
 8016156:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8016158:	442b      	add	r3, r5
 801615a:	4d05      	ldr	r5, [pc, #20]	; (8016170 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801615c:	9503      	str	r5, [sp, #12]
 801615e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016162:	6803      	ldr	r3, [r0, #0]
 8016164:	a903      	add	r1, sp, #12
 8016166:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016168:	4798      	blx	r3
 801616a:	b007      	add	sp, #28
 801616c:	bd30      	pop	{r4, r5, pc}
 801616e:	bf00      	nop
 8016170:	0802ca88 	.word	0x0802ca88

08016174 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8016174:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016178:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801617a:	b08a      	sub	sp, #40	; 0x28
 801617c:	4604      	mov	r4, r0
 801617e:	460d      	mov	r5, r1
 8016180:	b113      	cbz	r3, 8016188 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8016182:	790b      	ldrb	r3, [r1, #4]
 8016184:	2b00      	cmp	r3, #0
 8016186:	d044      	beq.n	8016212 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016188:	f104 0804 	add.w	r8, r4, #4
 801618c:	4641      	mov	r1, r8
 801618e:	a803      	add	r0, sp, #12
 8016190:	f7ff fe0a 	bl	8015da8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016194:	792b      	ldrb	r3, [r5, #4]
 8016196:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801619a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801619e:	b983      	cbnz	r3, 80161c2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80161a0:	892a      	ldrh	r2, [r5, #8]
 80161a2:	88e9      	ldrh	r1, [r5, #6]
 80161a4:	f104 0336 	add.w	r3, r4, #54	; 0x36
 80161a8:	1b92      	subs	r2, r2, r6
 80161aa:	1bc9      	subs	r1, r1, r7
 80161ac:	9301      	str	r3, [sp, #4]
 80161ae:	f104 0334 	add.w	r3, r4, #52	; 0x34
 80161b2:	9300      	str	r3, [sp, #0]
 80161b4:	b212      	sxth	r2, r2
 80161b6:	f104 0330 	add.w	r3, r4, #48	; 0x30
 80161ba:	b209      	sxth	r1, r1
 80161bc:	4640      	mov	r0, r8
 80161be:	f7f9 fa79 	bl	800f6b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80161c2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80161c4:	b329      	cbz	r1, 8016212 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80161c6:	a805      	add	r0, sp, #20
 80161c8:	f7ff fdee 	bl	8015da8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80161cc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80161d0:	792b      	ldrb	r3, [r5, #4]
 80161d2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80161d4:	f88d 3020 	strb.w	r3, [sp, #32]
 80161d8:	1abf      	subs	r7, r7, r2
 80161da:	88ea      	ldrh	r2, [r5, #6]
 80161dc:	4417      	add	r7, r2
 80161de:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80161e0:	4417      	add	r7, r2
 80161e2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80161e6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80161ea:	1ab6      	subs	r6, r6, r2
 80161ec:	892a      	ldrh	r2, [r5, #8]
 80161ee:	4416      	add	r6, r2
 80161f0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80161f2:	4416      	add	r6, r2
 80161f4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80161f8:	4a07      	ldr	r2, [pc, #28]	; (8016218 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80161fa:	9207      	str	r2, [sp, #28]
 80161fc:	2600      	movs	r6, #0
 80161fe:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8016202:	6803      	ldr	r3, [r0, #0]
 8016204:	a907      	add	r1, sp, #28
 8016206:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016208:	4798      	blx	r3
 801620a:	792b      	ldrb	r3, [r5, #4]
 801620c:	b10b      	cbz	r3, 8016212 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801620e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8016212:	b00a      	add	sp, #40	; 0x28
 8016214:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016218:	0802ca60 	.word	0x0802ca60

0801621c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801621c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016220:	460c      	mov	r4, r1
 8016222:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8016224:	b088      	sub	sp, #32
 8016226:	4605      	mov	r5, r0
 8016228:	2900      	cmp	r1, #0
 801622a:	d06d      	beq.n	8016308 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801622c:	4668      	mov	r0, sp
 801622e:	f7ff fdbb 	bl	8015da8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016232:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8016234:	88e3      	ldrh	r3, [r4, #6]
 8016236:	f9bd 8000 	ldrsh.w	r8, [sp]
 801623a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801623e:	440b      	add	r3, r1
 8016240:	b21b      	sxth	r3, r3
 8016242:	4543      	cmp	r3, r8
 8016244:	db31      	blt.n	80162aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016246:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801624a:	44c4      	add	ip, r8
 801624c:	fa0f fc8c 	sxth.w	ip, ip
 8016250:	4563      	cmp	r3, ip
 8016252:	da2a      	bge.n	80162aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016254:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8016256:	8926      	ldrh	r6, [r4, #8]
 8016258:	4416      	add	r6, r2
 801625a:	b236      	sxth	r6, r6
 801625c:	42be      	cmp	r6, r7
 801625e:	db24      	blt.n	80162aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016260:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8016264:	4438      	add	r0, r7
 8016266:	b200      	sxth	r0, r0
 8016268:	4286      	cmp	r6, r0
 801626a:	da1e      	bge.n	80162aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801626c:	8963      	ldrh	r3, [r4, #10]
 801626e:	4419      	add	r1, r3
 8016270:	b209      	sxth	r1, r1
 8016272:	4541      	cmp	r1, r8
 8016274:	db08      	blt.n	8016288 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016276:	4561      	cmp	r1, ip
 8016278:	da06      	bge.n	8016288 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801627a:	89a3      	ldrh	r3, [r4, #12]
 801627c:	441a      	add	r2, r3
 801627e:	b212      	sxth	r2, r2
 8016280:	42ba      	cmp	r2, r7
 8016282:	db01      	blt.n	8016288 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016284:	4282      	cmp	r2, r0
 8016286:	db10      	blt.n	80162aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016288:	4b21      	ldr	r3, [pc, #132]	; (8016310 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801628a:	9304      	str	r3, [sp, #16]
 801628c:	2302      	movs	r3, #2
 801628e:	f88d 3014 	strb.w	r3, [sp, #20]
 8016292:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8016294:	2300      	movs	r3, #0
 8016296:	f8ad 3016 	strh.w	r3, [sp, #22]
 801629a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801629e:	f8ad 301a 	strh.w	r3, [sp, #26]
 80162a2:	6803      	ldr	r3, [r0, #0]
 80162a4:	a904      	add	r1, sp, #16
 80162a6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80162a8:	4798      	blx	r3
 80162aa:	1d29      	adds	r1, r5, #4
 80162ac:	a802      	add	r0, sp, #8
 80162ae:	f7ff fd7b 	bl	8015da8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80162b2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80162b6:	88e0      	ldrh	r0, [r4, #6]
 80162b8:	7921      	ldrb	r1, [r4, #4]
 80162ba:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 80162be:	8922      	ldrh	r2, [r4, #8]
 80162c0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80162c2:	f88d 1014 	strb.w	r1, [sp, #20]
 80162c6:	eba3 0808 	sub.w	r8, r3, r8
 80162ca:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80162ce:	1bdf      	subs	r7, r3, r7
 80162d0:	b2bb      	uxth	r3, r7
 80162d2:	fa1f f888 	uxth.w	r8, r8
 80162d6:	8967      	ldrh	r7, [r4, #10]
 80162d8:	89a4      	ldrh	r4, [r4, #12]
 80162da:	4440      	add	r0, r8
 80162dc:	4460      	add	r0, ip
 80162de:	441a      	add	r2, r3
 80162e0:	44b8      	add	r8, r7
 80162e2:	4423      	add	r3, r4
 80162e4:	f8ad 0016 	strh.w	r0, [sp, #22]
 80162e8:	4433      	add	r3, r6
 80162ea:	4432      	add	r2, r6
 80162ec:	44e0      	add	r8, ip
 80162ee:	4c09      	ldr	r4, [pc, #36]	; (8016314 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80162f0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80162f2:	9404      	str	r4, [sp, #16]
 80162f4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80162f8:	f8ad 801a 	strh.w	r8, [sp, #26]
 80162fc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8016300:	6803      	ldr	r3, [r0, #0]
 8016302:	a904      	add	r1, sp, #16
 8016304:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016306:	4798      	blx	r3
 8016308:	b008      	add	sp, #32
 801630a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801630e:	bf00      	nop
 8016310:	0802ca60 	.word	0x0802ca60
 8016314:	0802ca74 	.word	0x0802ca74

08016318 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8016318:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801631a:	4604      	mov	r4, r0
 801631c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8016320:	3201      	adds	r2, #1
 8016322:	d112      	bne.n	801634a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8016324:	6803      	ldr	r3, [r0, #0]
 8016326:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801632a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801632e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016332:	2500      	movs	r5, #0
 8016334:	9500      	str	r5, [sp, #0]
 8016336:	466d      	mov	r5, sp
 8016338:	4629      	mov	r1, r5
 801633a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801633e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016340:	4798      	blx	r3
 8016342:	e895 0003 	ldmia.w	r5, {r0, r1}
 8016346:	e884 0003 	stmia.w	r4, {r0, r1}
 801634a:	4620      	mov	r0, r4
 801634c:	b003      	add	sp, #12
 801634e:	bd30      	pop	{r4, r5, pc}

08016350 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8016350:	b513      	push	{r0, r1, r4, lr}
 8016352:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8016356:	3301      	adds	r3, #1
 8016358:	4604      	mov	r4, r0
 801635a:	d109      	bne.n	8016370 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801635c:	4601      	mov	r1, r0
 801635e:	4668      	mov	r0, sp
 8016360:	f7ff fd22 	bl	8015da8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016364:	f8bd 3000 	ldrh.w	r3, [sp]
 8016368:	8423      	strh	r3, [r4, #32]
 801636a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801636e:	8463      	strh	r3, [r4, #34]	; 0x22
 8016370:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8016374:	b002      	add	sp, #8
 8016376:	bd10      	pop	{r4, pc}

08016378 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8016378:	b513      	push	{r0, r1, r4, lr}
 801637a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801637e:	3301      	adds	r3, #1
 8016380:	4604      	mov	r4, r0
 8016382:	d109      	bne.n	8016398 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8016384:	4601      	mov	r1, r0
 8016386:	4668      	mov	r0, sp
 8016388:	f7ff fd0e 	bl	8015da8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801638c:	f8bd 3000 	ldrh.w	r3, [sp]
 8016390:	8423      	strh	r3, [r4, #32]
 8016392:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016396:	8463      	strh	r3, [r4, #34]	; 0x22
 8016398:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801639c:	b002      	add	sp, #8
 801639e:	bd10      	pop	{r4, pc}

080163a0 <_ZN8touchgfx6ScreenC1Ev>:
 80163a0:	b570      	push	{r4, r5, r6, lr}
 80163a2:	4605      	mov	r5, r0
 80163a4:	4b16      	ldr	r3, [pc, #88]	; (8016400 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80163a6:	f845 3b04 	str.w	r3, [r5], #4
 80163aa:	2300      	movs	r3, #0
 80163ac:	8103      	strh	r3, [r0, #8]
 80163ae:	8143      	strh	r3, [r0, #10]
 80163b0:	8183      	strh	r3, [r0, #12]
 80163b2:	81c3      	strh	r3, [r0, #14]
 80163b4:	8203      	strh	r3, [r0, #16]
 80163b6:	8243      	strh	r3, [r0, #18]
 80163b8:	8283      	strh	r3, [r0, #20]
 80163ba:	82c3      	strh	r3, [r0, #22]
 80163bc:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80163c0:	6203      	str	r3, [r0, #32]
 80163c2:	8483      	strh	r3, [r0, #36]	; 0x24
 80163c4:	84c3      	strh	r3, [r0, #38]	; 0x26
 80163c6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80163ca:	4a0e      	ldr	r2, [pc, #56]	; (8016404 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80163cc:	6343      	str	r3, [r0, #52]	; 0x34
 80163ce:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80163d2:	4b0d      	ldr	r3, [pc, #52]	; (8016408 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80163d4:	6042      	str	r2, [r0, #4]
 80163d6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80163da:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80163dc:	4a0b      	ldr	r2, [pc, #44]	; (801640c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80163de:	4604      	mov	r4, r0
 80163e0:	2101      	movs	r1, #1
 80163e2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80163e6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80163ea:	f9b2 1000 	ldrsh.w	r1, [r2]
 80163ee:	4628      	mov	r0, r5
 80163f0:	4798      	blx	r3
 80163f2:	6863      	ldr	r3, [r4, #4]
 80163f4:	4628      	mov	r0, r5
 80163f6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80163f8:	4631      	mov	r1, r6
 80163fa:	4798      	blx	r3
 80163fc:	4620      	mov	r0, r4
 80163fe:	bd70      	pop	{r4, r5, r6, pc}
 8016400:	0802ca9c 	.word	0x0802ca9c
 8016404:	0802c300 	.word	0x0802c300
 8016408:	200137b2 	.word	0x200137b2
 801640c:	200137b0 	.word	0x200137b0

08016410 <_ZN8touchgfx6Screen4drawEv>:
 8016410:	b507      	push	{r0, r1, r2, lr}
 8016412:	4b09      	ldr	r3, [pc, #36]	; (8016438 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8016414:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016418:	4b08      	ldr	r3, [pc, #32]	; (801643c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801641a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801641e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016422:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016426:	6803      	ldr	r3, [r0, #0]
 8016428:	2100      	movs	r1, #0
 801642a:	9100      	str	r1, [sp, #0]
 801642c:	689b      	ldr	r3, [r3, #8]
 801642e:	4669      	mov	r1, sp
 8016430:	4798      	blx	r3
 8016432:	b003      	add	sp, #12
 8016434:	f85d fb04 	ldr.w	pc, [sp], #4
 8016438:	200137b0 	.word	0x200137b0
 801643c:	200137b2 	.word	0x200137b2

08016440 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8016440:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016444:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8016448:	2b00      	cmp	r3, #0
 801644a:	b089      	sub	sp, #36	; 0x24
 801644c:	4680      	mov	r8, r0
 801644e:	460c      	mov	r4, r1
 8016450:	4615      	mov	r5, r2
 8016452:	dd0e      	ble.n	8016472 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016454:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8016458:	2b00      	cmp	r3, #0
 801645a:	dd0a      	ble.n	8016472 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801645c:	4628      	mov	r0, r5
 801645e:	f7ff ff5b 	bl	8016318 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016462:	4621      	mov	r1, r4
 8016464:	f7fe fa3d 	bl	80148e2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016468:	69eb      	ldr	r3, [r5, #28]
 801646a:	b928      	cbnz	r0, 8016478 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801646c:	461d      	mov	r5, r3
 801646e:	2b00      	cmp	r3, #0
 8016470:	d1f4      	bne.n	801645c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8016472:	b009      	add	sp, #36	; 0x24
 8016474:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016478:	ae04      	add	r6, sp, #16
 801647a:	2b00      	cmp	r3, #0
 801647c:	f000 80b5 	beq.w	80165ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016480:	682b      	ldr	r3, [r5, #0]
 8016482:	4629      	mov	r1, r5
 8016484:	68db      	ldr	r3, [r3, #12]
 8016486:	a802      	add	r0, sp, #8
 8016488:	4798      	blx	r3
 801648a:	4628      	mov	r0, r5
 801648c:	f7ff ff60 	bl	8016350 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016490:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8016494:	4407      	add	r7, r0
 8016496:	4628      	mov	r0, r5
 8016498:	f7ff ff6e 	bl	8016378 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801649c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80164a0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80164a4:	f8ad 2014 	strh.w	r2, [sp, #20]
 80164a8:	4418      	add	r0, r3
 80164aa:	4621      	mov	r1, r4
 80164ac:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80164b0:	f8ad 0012 	strh.w	r0, [sp, #18]
 80164b4:	b23f      	sxth	r7, r7
 80164b6:	4630      	mov	r0, r6
 80164b8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80164bc:	f8ad 7010 	strh.w	r7, [sp, #16]
 80164c0:	f7f9 f9dc 	bl	800f87c <_ZN8touchgfx4RectaNERKS0_>
 80164c4:	4628      	mov	r0, r5
 80164c6:	f7ff ff27 	bl	8016318 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80164ca:	4602      	mov	r2, r0
 80164cc:	e896 0003 	ldmia.w	r6, {r0, r1}
 80164d0:	ab06      	add	r3, sp, #24
 80164d2:	e883 0003 	stmia.w	r3, {r0, r1}
 80164d6:	4611      	mov	r1, r2
 80164d8:	4618      	mov	r0, r3
 80164da:	f7f9 f9cf 	bl	800f87c <_ZN8touchgfx4RectaNERKS0_>
 80164de:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80164e2:	f9b4 1000 	ldrsh.w	r1, [r4]
 80164e6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80164ea:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80164ee:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80164f2:	4299      	cmp	r1, r3
 80164f4:	d10b      	bne.n	801650e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80164f6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80164fa:	4552      	cmp	r2, sl
 80164fc:	d107      	bne.n	801650e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80164fe:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8016502:	455a      	cmp	r2, fp
 8016504:	d103      	bne.n	801650e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016506:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801650a:	454a      	cmp	r2, r9
 801650c:	d06d      	beq.n	80165ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801650e:	f1bb 0f00 	cmp.w	fp, #0
 8016512:	dd65      	ble.n	80165e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8016514:	f1b9 0f00 	cmp.w	r9, #0
 8016518:	dd62      	ble.n	80165e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801651a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801651e:	fa1f f08a 	uxth.w	r0, sl
 8016522:	4552      	cmp	r2, sl
 8016524:	9000      	str	r0, [sp, #0]
 8016526:	da12      	bge.n	801654e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8016528:	9301      	str	r3, [sp, #4]
 801652a:	9b00      	ldr	r3, [sp, #0]
 801652c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016530:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016534:	1a9a      	subs	r2, r3, r2
 8016536:	f8ad 1010 	strh.w	r1, [sp, #16]
 801653a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801653e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8016542:	69ea      	ldr	r2, [r5, #28]
 8016544:	4631      	mov	r1, r6
 8016546:	4640      	mov	r0, r8
 8016548:	f7ff ff7a 	bl	8016440 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801654c:	9b01      	ldr	r3, [sp, #4]
 801654e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8016552:	429a      	cmp	r2, r3
 8016554:	b29f      	uxth	r7, r3
 8016556:	da0d      	bge.n	8016574 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8016558:	f8ad 2010 	strh.w	r2, [sp, #16]
 801655c:	1aba      	subs	r2, r7, r2
 801655e:	f8ad a012 	strh.w	sl, [sp, #18]
 8016562:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016566:	f8ad 9016 	strh.w	r9, [sp, #22]
 801656a:	69ea      	ldr	r2, [r5, #28]
 801656c:	4631      	mov	r1, r6
 801656e:	4640      	mov	r0, r8
 8016570:	f7ff ff66 	bl	8016440 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016574:	8822      	ldrh	r2, [r4, #0]
 8016576:	88a3      	ldrh	r3, [r4, #4]
 8016578:	445f      	add	r7, fp
 801657a:	4413      	add	r3, r2
 801657c:	b29b      	uxth	r3, r3
 801657e:	b2bf      	uxth	r7, r7
 8016580:	b23a      	sxth	r2, r7
 8016582:	b219      	sxth	r1, r3
 8016584:	4291      	cmp	r1, r2
 8016586:	dd0d      	ble.n	80165a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8016588:	1bdb      	subs	r3, r3, r7
 801658a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801658e:	f8ad a012 	strh.w	sl, [sp, #18]
 8016592:	f8ad 3014 	strh.w	r3, [sp, #20]
 8016596:	f8ad 9016 	strh.w	r9, [sp, #22]
 801659a:	69ea      	ldr	r2, [r5, #28]
 801659c:	4631      	mov	r1, r6
 801659e:	4640      	mov	r0, r8
 80165a0:	f7ff ff4e 	bl	8016440 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80165a4:	88e2      	ldrh	r2, [r4, #6]
 80165a6:	8863      	ldrh	r3, [r4, #2]
 80165a8:	4413      	add	r3, r2
 80165aa:	9a00      	ldr	r2, [sp, #0]
 80165ac:	444a      	add	r2, r9
 80165ae:	b29b      	uxth	r3, r3
 80165b0:	fa1f f982 	uxth.w	r9, r2
 80165b4:	fa0f f289 	sxth.w	r2, r9
 80165b8:	b219      	sxth	r1, r3
 80165ba:	428a      	cmp	r2, r1
 80165bc:	da15      	bge.n	80165ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80165be:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80165c2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80165c6:	f8ad 1014 	strh.w	r1, [sp, #20]
 80165ca:	eba3 0309 	sub.w	r3, r3, r9
 80165ce:	f8ad 0010 	strh.w	r0, [sp, #16]
 80165d2:	f8ad 2012 	strh.w	r2, [sp, #18]
 80165d6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80165da:	69ea      	ldr	r2, [r5, #28]
 80165dc:	4631      	mov	r1, r6
 80165de:	e001      	b.n	80165e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80165e0:	69ea      	ldr	r2, [r5, #28]
 80165e2:	4621      	mov	r1, r4
 80165e4:	4640      	mov	r0, r8
 80165e6:	f7ff ff2b 	bl	8016440 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80165ea:	4628      	mov	r0, r5
 80165ec:	f7ff fe94 	bl	8016318 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80165f0:	6861      	ldr	r1, [r4, #4]
 80165f2:	4602      	mov	r2, r0
 80165f4:	6820      	ldr	r0, [r4, #0]
 80165f6:	4633      	mov	r3, r6
 80165f8:	c303      	stmia	r3!, {r0, r1}
 80165fa:	4611      	mov	r1, r2
 80165fc:	4630      	mov	r0, r6
 80165fe:	f7f9 f93d 	bl	800f87c <_ZN8touchgfx4RectaNERKS0_>
 8016602:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8016606:	2b00      	cmp	r3, #0
 8016608:	f77f af33 	ble.w	8016472 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801660c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8016610:	2b00      	cmp	r3, #0
 8016612:	f77f af2e 	ble.w	8016472 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016616:	4628      	mov	r0, r5
 8016618:	f7ff fe9a 	bl	8016350 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801661c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8016620:	1a18      	subs	r0, r3, r0
 8016622:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016626:	4628      	mov	r0, r5
 8016628:	f7ff fea6 	bl	8016378 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801662c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8016630:	1a18      	subs	r0, r3, r0
 8016632:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016636:	682b      	ldr	r3, [r5, #0]
 8016638:	4631      	mov	r1, r6
 801663a:	689b      	ldr	r3, [r3, #8]
 801663c:	4628      	mov	r0, r5
 801663e:	4798      	blx	r3
 8016640:	e717      	b.n	8016472 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08016642 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8016642:	b570      	push	{r4, r5, r6, lr}
 8016644:	460c      	mov	r4, r1
 8016646:	b086      	sub	sp, #24
 8016648:	1d06      	adds	r6, r0, #4
 801664a:	2300      	movs	r3, #0
 801664c:	4631      	mov	r1, r6
 801664e:	4605      	mov	r5, r0
 8016650:	a802      	add	r0, sp, #8
 8016652:	9301      	str	r3, [sp, #4]
 8016654:	f7ff fba8 	bl	8015da8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016658:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801665c:	8822      	ldrh	r2, [r4, #0]
 801665e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8016662:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016666:	f8ad 0014 	strh.w	r0, [sp, #20]
 801666a:	1ad2      	subs	r2, r2, r3
 801666c:	8863      	ldrh	r3, [r4, #2]
 801666e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016672:	1a5b      	subs	r3, r3, r1
 8016674:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8016678:	f8ad 1016 	strh.w	r1, [sp, #22]
 801667c:	aa01      	add	r2, sp, #4
 801667e:	a904      	add	r1, sp, #16
 8016680:	4630      	mov	r0, r6
 8016682:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016686:	f7f9 f9d1 	bl	800fa2c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801668a:	9a01      	ldr	r2, [sp, #4]
 801668c:	b11a      	cbz	r2, 8016696 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801668e:	4621      	mov	r1, r4
 8016690:	4628      	mov	r0, r5
 8016692:	f7ff fed5 	bl	8016440 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016696:	b006      	add	sp, #24
 8016698:	bd70      	pop	{r4, r5, r6, pc}

0801669a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801669a:	b530      	push	{r4, r5, lr}
 801669c:	4602      	mov	r2, r0
 801669e:	4604      	mov	r4, r0
 80166a0:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80166a4:	b085      	sub	sp, #20
 80166a6:	460d      	mov	r5, r1
 80166a8:	6851      	ldr	r1, [r2, #4]
 80166aa:	466b      	mov	r3, sp
 80166ac:	c303      	stmia	r3!, {r0, r1}
 80166ae:	4629      	mov	r1, r5
 80166b0:	4668      	mov	r0, sp
 80166b2:	f7f9 f8e3 	bl	800f87c <_ZN8touchgfx4RectaNERKS0_>
 80166b6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80166ba:	b12b      	cbz	r3, 80166c8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80166bc:	4669      	mov	r1, sp
 80166be:	4620      	mov	r0, r4
 80166c0:	f7ff ffbf 	bl	8016642 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80166c4:	b005      	add	sp, #20
 80166c6:	bd30      	pop	{r4, r5, pc}
 80166c8:	3404      	adds	r4, #4
 80166ca:	4621      	mov	r1, r4
 80166cc:	a802      	add	r0, sp, #8
 80166ce:	f7ff fb6b 	bl	8015da8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80166d2:	f8bd 3000 	ldrh.w	r3, [sp]
 80166d6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80166da:	1a9b      	subs	r3, r3, r2
 80166dc:	f8ad 3000 	strh.w	r3, [sp]
 80166e0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80166e4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80166e8:	4669      	mov	r1, sp
 80166ea:	1a9b      	subs	r3, r3, r2
 80166ec:	4620      	mov	r0, r4
 80166ee:	f8ad 3002 	strh.w	r3, [sp, #2]
 80166f2:	f7f9 f962 	bl	800f9ba <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80166f6:	e7e5      	b.n	80166c4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080166f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80166f8:	680a      	ldr	r2, [r1, #0]
 80166fa:	460b      	mov	r3, r1
 80166fc:	6992      	ldr	r2, [r2, #24]
 80166fe:	1d01      	adds	r1, r0, #4
 8016700:	4618      	mov	r0, r3
 8016702:	4710      	bx	r2

08016704 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8016704:	4298      	cmp	r0, r3
 8016706:	d200      	bcs.n	801670a <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8016708:	b913      	cbnz	r3, 8016710 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801670a:	440a      	add	r2, r1
 801670c:	b210      	sxth	r0, r2
 801670e:	4770      	bx	lr
 8016710:	ee07 0a90 	vmov	s15, r0
 8016714:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8016718:	ee07 3a90 	vmov	s15, r3
 801671c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016720:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8016724:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016728:	ee37 7a66 	vsub.f32	s14, s14, s13
 801672c:	ee07 2a90 	vmov	s15, r2
 8016730:	ee67 5a07 	vmul.f32	s11, s14, s14
 8016734:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8016738:	eee5 6a87 	vfma.f32	s13, s11, s14
 801673c:	ee07 1a90 	vmov	s15, r1
 8016740:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016744:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8016748:	eee6 7a26 	vfma.f32	s15, s12, s13
 801674c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016750:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016754:	bfcc      	ite	gt
 8016756:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801675a:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801675e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016762:	ee17 3a90 	vmov	r3, s15
 8016766:	b218      	sxth	r0, r3
 8016768:	4770      	bx	lr

0801676a <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801676a:	4298      	cmp	r0, r3
 801676c:	d200      	bcs.n	8016770 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801676e:	b913      	cbnz	r3, 8016776 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8016770:	440a      	add	r2, r1
 8016772:	b210      	sxth	r0, r2
 8016774:	4770      	bx	lr
 8016776:	ee07 2a90 	vmov	s15, r2
 801677a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801677e:	ee07 0a90 	vmov	s15, r0
 8016782:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8016786:	ee67 7a27 	vmul.f32	s15, s14, s15
 801678a:	ee07 3a10 	vmov	s14, r3
 801678e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8016792:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8016796:	ee07 1a90 	vmov	s15, r1
 801679a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801679e:	ee77 7a27 	vadd.f32	s15, s14, s15
 80167a2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80167a6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80167aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80167ae:	bfcc      	ite	gt
 80167b0:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80167b4:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80167b8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80167bc:	ee17 3a90 	vmov	r3, s15
 80167c0:	b218      	sxth	r0, r3
 80167c2:	4770      	bx	lr

080167c4 <_ZN8touchgfx12TextProviderC1Ev>:
 80167c4:	b538      	push	{r3, r4, r5, lr}
 80167c6:	2500      	movs	r5, #0
 80167c8:	2302      	movs	r3, #2
 80167ca:	4604      	mov	r4, r0
 80167cc:	e9c0 5500 	strd	r5, r5, [r0]
 80167d0:	7403      	strb	r3, [r0, #16]
 80167d2:	6145      	str	r5, [r0, #20]
 80167d4:	7605      	strb	r5, [r0, #24]
 80167d6:	83c5      	strh	r5, [r0, #30]
 80167d8:	8405      	strh	r5, [r0, #32]
 80167da:	86c5      	strh	r5, [r0, #54]	; 0x36
 80167dc:	8705      	strh	r5, [r0, #56]	; 0x38
 80167de:	87c5      	strh	r5, [r0, #62]	; 0x3e
 80167e0:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 80167e4:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 80167e8:	220e      	movs	r2, #14
 80167ea:	4629      	mov	r1, r5
 80167ec:	304c      	adds	r0, #76	; 0x4c
 80167ee:	f011 feac 	bl	802854a <memset>
 80167f2:	2301      	movs	r3, #1
 80167f4:	4620      	mov	r0, r4
 80167f6:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 80167fa:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80167fe:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8016802:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8016806:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801680a:	f7f1 f939 	bl	8007a80 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801680e:	4620      	mov	r0, r4
 8016810:	bd38      	pop	{r3, r4, r5, pc}

08016812 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8016812:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016814:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016818:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801681a:	fab0 f080 	clz	r0, r0
 801681e:	0940      	lsrs	r0, r0, #5
 8016820:	4770      	bx	lr

08016822 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8016822:	b530      	push	{r4, r5, lr}
 8016824:	2500      	movs	r5, #0
 8016826:	2401      	movs	r4, #1
 8016828:	6843      	ldr	r3, [r0, #4]
 801682a:	b913      	cbnz	r3, 8016832 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801682c:	6803      	ldr	r3, [r0, #0]
 801682e:	b313      	cbz	r3, 8016876 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016830:	6043      	str	r3, [r0, #4]
 8016832:	7e03      	ldrb	r3, [r0, #24]
 8016834:	b143      	cbz	r3, 8016848 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8016836:	6943      	ldr	r3, [r0, #20]
 8016838:	b12b      	cbz	r3, 8016846 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801683a:	881a      	ldrh	r2, [r3, #0]
 801683c:	b11a      	cbz	r2, 8016846 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801683e:	1c9a      	adds	r2, r3, #2
 8016840:	6142      	str	r2, [r0, #20]
 8016842:	8818      	ldrh	r0, [r3, #0]
 8016844:	bd30      	pop	{r4, r5, pc}
 8016846:	7605      	strb	r5, [r0, #24]
 8016848:	6843      	ldr	r3, [r0, #4]
 801684a:	8819      	ldrh	r1, [r3, #0]
 801684c:	b199      	cbz	r1, 8016876 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801684e:	1c9a      	adds	r2, r3, #2
 8016850:	2902      	cmp	r1, #2
 8016852:	6042      	str	r2, [r0, #4]
 8016854:	d1f5      	bne.n	8016842 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8016856:	7c03      	ldrb	r3, [r0, #16]
 8016858:	2b01      	cmp	r3, #1
 801685a:	d8e5      	bhi.n	8016828 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801685c:	1c5a      	adds	r2, r3, #1
 801685e:	3302      	adds	r3, #2
 8016860:	7402      	strb	r2, [r0, #16]
 8016862:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8016866:	6143      	str	r3, [r0, #20]
 8016868:	2b00      	cmp	r3, #0
 801686a:	d0dd      	beq.n	8016828 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801686c:	881b      	ldrh	r3, [r3, #0]
 801686e:	2b00      	cmp	r3, #0
 8016870:	d0da      	beq.n	8016828 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016872:	7604      	strb	r4, [r0, #24]
 8016874:	e7d8      	b.n	8016828 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016876:	2000      	movs	r0, #0
 8016878:	e7e4      	b.n	8016844 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801687a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801687a:	b430      	push	{r4, r5}
 801687c:	6001      	str	r1, [r0, #0]
 801687e:	2100      	movs	r1, #0
 8016880:	6041      	str	r1, [r0, #4]
 8016882:	6815      	ldr	r5, [r2, #0]
 8016884:	6085      	str	r5, [r0, #8]
 8016886:	6852      	ldr	r2, [r2, #4]
 8016888:	6443      	str	r3, [r0, #68]	; 0x44
 801688a:	9b02      	ldr	r3, [sp, #8]
 801688c:	60c2      	str	r2, [r0, #12]
 801688e:	7401      	strb	r1, [r0, #16]
 8016890:	6141      	str	r1, [r0, #20]
 8016892:	7601      	strb	r1, [r0, #24]
 8016894:	8701      	strh	r1, [r0, #56]	; 0x38
 8016896:	8401      	strh	r1, [r0, #32]
 8016898:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801689c:	6483      	str	r3, [r0, #72]	; 0x48
 801689e:	bc30      	pop	{r4, r5}
 80168a0:	f7f1 b8ee 	b.w	8007a80 <_ZN8touchgfx12TextProvider18initializeInternalEv>

080168a4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80168a4:	b408      	push	{r3}
 80168a6:	b510      	push	{r4, lr}
 80168a8:	b085      	sub	sp, #20
 80168aa:	ac07      	add	r4, sp, #28
 80168ac:	f854 3b04 	ldr.w	r3, [r4], #4
 80168b0:	9300      	str	r3, [sp, #0]
 80168b2:	4613      	mov	r3, r2
 80168b4:	4622      	mov	r2, r4
 80168b6:	9403      	str	r4, [sp, #12]
 80168b8:	f7ff ffdf 	bl	801687a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80168bc:	b005      	add	sp, #20
 80168be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80168c2:	b001      	add	sp, #4
 80168c4:	4770      	bx	lr

080168c6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80168c6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80168c8:	4605      	mov	r5, r0
 80168ca:	4608      	mov	r0, r1
 80168cc:	b1e9      	cbz	r1, 801690a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 80168ce:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 80168d2:	460b      	mov	r3, r1
 80168d4:	f101 0708 	add.w	r7, r1, #8
 80168d8:	4622      	mov	r2, r4
 80168da:	6818      	ldr	r0, [r3, #0]
 80168dc:	6859      	ldr	r1, [r3, #4]
 80168de:	4626      	mov	r6, r4
 80168e0:	c603      	stmia	r6!, {r0, r1}
 80168e2:	3308      	adds	r3, #8
 80168e4:	42bb      	cmp	r3, r7
 80168e6:	4634      	mov	r4, r6
 80168e8:	d1f7      	bne.n	80168da <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 80168ea:	6818      	ldr	r0, [r3, #0]
 80168ec:	6030      	str	r0, [r6, #0]
 80168ee:	889b      	ldrh	r3, [r3, #4]
 80168f0:	80b3      	strh	r3, [r6, #4]
 80168f2:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 80168f6:	015b      	lsls	r3, r3, #5
 80168f8:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80168fc:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8016900:	430b      	orrs	r3, r1
 8016902:	425b      	negs	r3, r3
 8016904:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8016908:	4610      	mov	r0, r2
 801690a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801690c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801690c:	b538      	push	{r3, r4, r5, lr}
 801690e:	460c      	mov	r4, r1
 8016910:	6811      	ldr	r1, [r2, #0]
 8016912:	4610      	mov	r0, r2
 8016914:	68cd      	ldr	r5, [r1, #12]
 8016916:	4619      	mov	r1, r3
 8016918:	47a8      	blx	r5
 801691a:	2800      	cmp	r0, #0
 801691c:	bf08      	it	eq
 801691e:	4620      	moveq	r0, r4
 8016920:	bd38      	pop	{r3, r4, r5, pc}
	...

08016924 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8016924:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016926:	4604      	mov	r4, r0
 8016928:	4615      	mov	r5, r2
 801692a:	4608      	mov	r0, r1
 801692c:	b93a      	cbnz	r2, 801693e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801692e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016932:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8016936:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801693a:	4628      	mov	r0, r5
 801693c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801693e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8016942:	8893      	ldrh	r3, [r2, #4]
 8016944:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8016948:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801694c:	79ee      	ldrb	r6, [r5, #7]
 801694e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8016952:	4316      	orrs	r6, r2
 8016954:	19da      	adds	r2, r3, r7
 8016956:	b291      	uxth	r1, r2
 8016958:	291d      	cmp	r1, #29
 801695a:	b2b7      	uxth	r7, r6
 801695c:	d87a      	bhi.n	8016a54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801695e:	2201      	movs	r2, #1
 8016960:	408a      	lsls	r2, r1
 8016962:	4975      	ldr	r1, [pc, #468]	; (8016b38 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8016964:	420a      	tst	r2, r1
 8016966:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801696a:	d12d      	bne.n	80169c8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801696c:	f412 7f60 	tst.w	r2, #896	; 0x380
 8016970:	d070      	beq.n	8016a54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8016972:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8016976:	462b      	mov	r3, r5
 8016978:	f105 0e08 	add.w	lr, r5, #8
 801697c:	4615      	mov	r5, r2
 801697e:	6818      	ldr	r0, [r3, #0]
 8016980:	6859      	ldr	r1, [r3, #4]
 8016982:	4694      	mov	ip, r2
 8016984:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8016988:	3308      	adds	r3, #8
 801698a:	4573      	cmp	r3, lr
 801698c:	4662      	mov	r2, ip
 801698e:	d1f6      	bne.n	801697e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8016990:	6818      	ldr	r0, [r3, #0]
 8016992:	f8cc 0000 	str.w	r0, [ip]
 8016996:	889b      	ldrh	r3, [r3, #4]
 8016998:	f8ac 3004 	strh.w	r3, [ip, #4]
 801699c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 80169a0:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 80169a4:	b2b3      	uxth	r3, r6
 80169a6:	1aca      	subs	r2, r1, r3
 80169a8:	b292      	uxth	r2, r2
 80169aa:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 80169ae:	10d2      	asrs	r2, r2, #3
 80169b0:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 80169b4:	f002 0260 	and.w	r2, r2, #96	; 0x60
 80169b8:	4302      	orrs	r2, r0
 80169ba:	1bcf      	subs	r7, r1, r7
 80169bc:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 80169c0:	1afb      	subs	r3, r7, r3
 80169c2:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80169c6:	e7b8      	b.n	801693a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80169c8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80169ca:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80169ce:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 80169d0:	f640 6333 	movw	r3, #3635	; 0xe33
 80169d4:	4299      	cmp	r1, r3
 80169d6:	d110      	bne.n	80169fa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 80169d8:	6803      	ldr	r3, [r0, #0]
 80169da:	68db      	ldr	r3, [r3, #12]
 80169dc:	4798      	blx	r3
 80169de:	7b41      	ldrb	r1, [r0, #13]
 80169e0:	00cb      	lsls	r3, r1, #3
 80169e2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80169e6:	7a03      	ldrb	r3, [r0, #8]
 80169e8:	0648      	lsls	r0, r1, #25
 80169ea:	ea43 0302 	orr.w	r3, r3, r2
 80169ee:	bf44      	itt	mi
 80169f0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80169f4:	b21b      	sxthmi	r3, r3
 80169f6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80169fa:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 80169fe:	443b      	add	r3, r7
 8016a00:	4433      	add	r3, r6
 8016a02:	b29b      	uxth	r3, r3
 8016a04:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8016a08:	462a      	mov	r2, r5
 8016a0a:	f105 0c08 	add.w	ip, r5, #8
 8016a0e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016a12:	4635      	mov	r5, r6
 8016a14:	6810      	ldr	r0, [r2, #0]
 8016a16:	6851      	ldr	r1, [r2, #4]
 8016a18:	4637      	mov	r7, r6
 8016a1a:	c703      	stmia	r7!, {r0, r1}
 8016a1c:	3208      	adds	r2, #8
 8016a1e:	4562      	cmp	r2, ip
 8016a20:	463e      	mov	r6, r7
 8016a22:	d1f7      	bne.n	8016a14 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8016a24:	6810      	ldr	r0, [r2, #0]
 8016a26:	6038      	str	r0, [r7, #0]
 8016a28:	8892      	ldrh	r2, [r2, #4]
 8016a2a:	80ba      	strh	r2, [r7, #4]
 8016a2c:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016a30:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016a34:	10db      	asrs	r3, r3, #3
 8016a36:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8016a3a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016a3e:	4313      	orrs	r3, r2
 8016a40:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8016a44:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8016a48:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8016a4c:	1a9b      	subs	r3, r3, r2
 8016a4e:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8016a52:	e772      	b.n	801693a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8016a54:	f023 0204 	bic.w	r2, r3, #4
 8016a58:	f640 611b 	movw	r1, #3611	; 0xe1b
 8016a5c:	428a      	cmp	r2, r1
 8016a5e:	d003      	beq.n	8016a68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8016a60:	f640 621d 	movw	r2, #3613	; 0xe1d
 8016a64:	4293      	cmp	r3, r2
 8016a66:	d120      	bne.n	8016aaa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8016a68:	3b01      	subs	r3, #1
 8016a6a:	4602      	mov	r2, r0
 8016a6c:	b29b      	uxth	r3, r3
 8016a6e:	4629      	mov	r1, r5
 8016a70:	4620      	mov	r0, r4
 8016a72:	f7ff ff4b 	bl	801690c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016a76:	7b41      	ldrb	r1, [r0, #13]
 8016a78:	00cb      	lsls	r3, r1, #3
 8016a7a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016a7e:	7a03      	ldrb	r3, [r0, #8]
 8016a80:	0649      	lsls	r1, r1, #25
 8016a82:	ea43 0302 	orr.w	r3, r3, r2
 8016a86:	bf44      	itt	mi
 8016a88:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016a8c:	b21b      	sxthmi	r3, r3
 8016a8e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016a92:	7b6b      	ldrb	r3, [r5, #13]
 8016a94:	7aaa      	ldrb	r2, [r5, #10]
 8016a96:	005b      	lsls	r3, r3, #1
 8016a98:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016a9c:	4313      	orrs	r3, r2
 8016a9e:	115a      	asrs	r2, r3, #5
 8016aa0:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8016aa4:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8016aa8:	e036      	b.n	8016b18 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8016aaa:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8016aae:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8016ab2:	7a2a      	ldrb	r2, [r5, #8]
 8016ab4:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8016ab8:	ea42 0201 	orr.w	r2, r2, r1
 8016abc:	bf1c      	itt	ne
 8016abe:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8016ac2:	b212      	sxthne	r2, r2
 8016ac4:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016ac8:	f640 6109 	movw	r1, #3593	; 0xe09
 8016acc:	f023 0210 	bic.w	r2, r3, #16
 8016ad0:	428a      	cmp	r2, r1
 8016ad2:	d003      	beq.n	8016adc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8016ad4:	f640 6213 	movw	r2, #3603	; 0xe13
 8016ad8:	4293      	cmp	r3, r2
 8016ada:	d12a      	bne.n	8016b32 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8016adc:	7b6e      	ldrb	r6, [r5, #13]
 8016ade:	0076      	lsls	r6, r6, #1
 8016ae0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8016ae4:	7aae      	ldrb	r6, [r5, #10]
 8016ae6:	4316      	orrs	r6, r2
 8016ae8:	f640 6213 	movw	r2, #3603	; 0xe13
 8016aec:	4293      	cmp	r3, r2
 8016aee:	bf18      	it	ne
 8016af0:	f103 33ff 	addne.w	r3, r3, #4294967295
 8016af4:	4602      	mov	r2, r0
 8016af6:	bf14      	ite	ne
 8016af8:	b29b      	uxthne	r3, r3
 8016afa:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8016afe:	4629      	mov	r1, r5
 8016b00:	4620      	mov	r0, r4
 8016b02:	f7ff ff03 	bl	801690c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016b06:	7b43      	ldrb	r3, [r0, #13]
 8016b08:	7a82      	ldrb	r2, [r0, #10]
 8016b0a:	005b      	lsls	r3, r3, #1
 8016b0c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016b10:	4313      	orrs	r3, r2
 8016b12:	1af6      	subs	r6, r6, r3
 8016b14:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8016b18:	7b69      	ldrb	r1, [r5, #13]
 8016b1a:	00cb      	lsls	r3, r1, #3
 8016b1c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016b20:	7a2b      	ldrb	r3, [r5, #8]
 8016b22:	4313      	orrs	r3, r2
 8016b24:	064a      	lsls	r2, r1, #25
 8016b26:	bf44      	itt	mi
 8016b28:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016b2c:	b21b      	sxthmi	r3, r3
 8016b2e:	1bdb      	subs	r3, r3, r7
 8016b30:	e747      	b.n	80169c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8016b32:	2300      	movs	r3, #0
 8016b34:	e7b6      	b.n	8016aa4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8016b36:	bf00      	nop
 8016b38:	3fc00079 	.word	0x3fc00079

08016b3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8016b3c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016b40:	4604      	mov	r4, r0
 8016b42:	b942      	cbnz	r2, 8016b56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8016b44:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8016b48:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8016b4c:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8016b50:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8016b54:	e047      	b.n	8016be6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8016b56:	7b51      	ldrb	r1, [r2, #13]
 8016b58:	8893      	ldrh	r3, [r2, #4]
 8016b5a:	010d      	lsls	r5, r1, #4
 8016b5c:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8016b60:	79d5      	ldrb	r5, [r2, #7]
 8016b62:	4305      	orrs	r5, r0
 8016b64:	2d04      	cmp	r5, #4
 8016b66:	bfcc      	ite	gt
 8016b68:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8016b6c:	f04f 0e01 	movle.w	lr, #1
 8016b70:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8016b74:	f200 80ab 	bhi.w	8016cce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8016b78:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8016b7c:	4283      	cmp	r3, r0
 8016b7e:	d216      	bcs.n	8016bae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016b80:	f240 605b 	movw	r0, #1627	; 0x65b
 8016b84:	4283      	cmp	r3, r0
 8016b86:	d859      	bhi.n	8016c3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8016b88:	f240 6057 	movw	r0, #1623	; 0x657
 8016b8c:	4283      	cmp	r3, r0
 8016b8e:	d20e      	bcs.n	8016bae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016b90:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8016b94:	d24a      	bcs.n	8016c2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8016b96:	f240 604e 	movw	r0, #1614	; 0x64e
 8016b9a:	4283      	cmp	r3, r0
 8016b9c:	d207      	bcs.n	8016bae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016b9e:	f240 601a 	movw	r0, #1562	; 0x61a
 8016ba2:	4283      	cmp	r3, r0
 8016ba4:	d02a      	beq.n	8016bfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016ba6:	d821      	bhi.n	8016bec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8016ba8:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8016bac:	d35b      	bcc.n	8016c66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016bae:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8016bb2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016bb6:	f040 80d0 	bne.w	8016d5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8016bba:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8016bbe:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016bc2:	f040 80ca 	bne.w	8016d5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8016bc6:	00cb      	lsls	r3, r1, #3
 8016bc8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8016bcc:	7a13      	ldrb	r3, [r2, #8]
 8016bce:	0649      	lsls	r1, r1, #25
 8016bd0:	ea43 0300 	orr.w	r3, r3, r0
 8016bd4:	bf44      	itt	mi
 8016bd6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016bda:	b21b      	sxthmi	r3, r3
 8016bdc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016be0:	1b5d      	subs	r5, r3, r5
 8016be2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016be6:	4610      	mov	r0, r2
 8016be8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016bec:	f240 604b 	movw	r0, #1611	; 0x64b
 8016bf0:	4283      	cmp	r3, r0
 8016bf2:	d338      	bcc.n	8016c66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016bf4:	f240 604c 	movw	r0, #1612	; 0x64c
 8016bf8:	4283      	cmp	r3, r0
 8016bfa:	d9d8      	bls.n	8016bae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016bfc:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8016c00:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8016c04:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016c08:	f040 80f2 	bne.w	8016df0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8016c0c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016c10:	f040 80ee 	bne.w	8016df0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8016c14:	00cb      	lsls	r3, r1, #3
 8016c16:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8016c1a:	7a13      	ldrb	r3, [r2, #8]
 8016c1c:	064e      	lsls	r6, r1, #25
 8016c1e:	ea43 0300 	orr.w	r3, r3, r0
 8016c22:	bf44      	itt	mi
 8016c24:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016c28:	b21b      	sxthmi	r3, r3
 8016c2a:	e7d9      	b.n	8016be0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8016c2c:	f240 6054 	movw	r0, #1620	; 0x654
 8016c30:	4283      	cmp	r3, r0
 8016c32:	d8e3      	bhi.n	8016bfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016c34:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8016c38:	d9e0      	bls.n	8016bfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016c3a:	e7b8      	b.n	8016bae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016c3c:	f240 6074 	movw	r0, #1652	; 0x674
 8016c40:	4283      	cmp	r3, r0
 8016c42:	d0b4      	beq.n	8016bae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016c44:	d82d      	bhi.n	8016ca2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8016c46:	f240 605e 	movw	r0, #1630	; 0x65e
 8016c4a:	4283      	cmp	r3, r0
 8016c4c:	d804      	bhi.n	8016c58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8016c4e:	f240 605d 	movw	r0, #1629	; 0x65d
 8016c52:	4283      	cmp	r3, r0
 8016c54:	d3d2      	bcc.n	8016bfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016c56:	e7aa      	b.n	8016bae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016c58:	f240 605f 	movw	r0, #1631	; 0x65f
 8016c5c:	4283      	cmp	r3, r0
 8016c5e:	d0cd      	beq.n	8016bfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016c60:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8016c64:	d0a3      	beq.n	8016bae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016c66:	00cb      	lsls	r3, r1, #3
 8016c68:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8016c6c:	7a13      	ldrb	r3, [r2, #8]
 8016c6e:	0649      	lsls	r1, r1, #25
 8016c70:	ea43 0300 	orr.w	r3, r3, r0
 8016c74:	bf44      	itt	mi
 8016c76:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016c7a:	b21b      	sxthmi	r3, r3
 8016c7c:	1b5d      	subs	r5, r3, r5
 8016c7e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016c82:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016c86:	7b53      	ldrb	r3, [r2, #13]
 8016c88:	015b      	lsls	r3, r3, #5
 8016c8a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016c8e:	7993      	ldrb	r3, [r2, #6]
 8016c90:	430b      	orrs	r3, r1
 8016c92:	005b      	lsls	r3, r3, #1
 8016c94:	2105      	movs	r1, #5
 8016c96:	fb93 f3f1 	sdiv	r3, r3, r1
 8016c9a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8016c9e:	440b      	add	r3, r1
 8016ca0:	e756      	b.n	8016b50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8016ca2:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8016ca6:	4283      	cmp	r3, r0
 8016ca8:	d809      	bhi.n	8016cbe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8016caa:	f240 60df 	movw	r0, #1759	; 0x6df
 8016cae:	4283      	cmp	r3, r0
 8016cb0:	f4bf af7d 	bcs.w	8016bae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016cb4:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8016cb8:	2b05      	cmp	r3, #5
 8016cba:	d8d4      	bhi.n	8016c66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016cbc:	e777      	b.n	8016bae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016cbe:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8016cc2:	4283      	cmp	r3, r0
 8016cc4:	d09a      	beq.n	8016bfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016cc6:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8016cca:	4283      	cmp	r3, r0
 8016ccc:	e7ca      	b.n	8016c64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8016cce:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8016cd2:	d22b      	bcs.n	8016d2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8016cd4:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8016cd8:	4283      	cmp	r3, r0
 8016cda:	d28f      	bcs.n	8016bfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016cdc:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8016ce0:	4283      	cmp	r3, r0
 8016ce2:	d816      	bhi.n	8016d12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8016ce4:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8016ce8:	4283      	cmp	r3, r0
 8016cea:	f4bf af60 	bcs.w	8016bae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016cee:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8016cf2:	4283      	cmp	r3, r0
 8016cf4:	d80a      	bhi.n	8016d0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8016cf6:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8016cfa:	4283      	cmp	r3, r0
 8016cfc:	f4bf af57 	bcs.w	8016bae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016d00:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8016d04:	4283      	cmp	r3, r0
 8016d06:	f43f af79 	beq.w	8016bfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016d0a:	e7ac      	b.n	8016c66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016d0c:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8016d10:	e7f8      	b.n	8016d04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8016d12:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8016d16:	4283      	cmp	r3, r0
 8016d18:	d802      	bhi.n	8016d20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8016d1a:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8016d1e:	e798      	b.n	8016c52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8016d20:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8016d24:	4283      	cmp	r3, r0
 8016d26:	f47f af42 	bne.w	8016bae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016d2a:	e767      	b.n	8016bfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016d2c:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8016d30:	4283      	cmp	r3, r0
 8016d32:	f43f af63 	beq.w	8016bfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016d36:	d802      	bhi.n	8016d3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8016d38:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8016d3c:	e7f2      	b.n	8016d24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8016d3e:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8016d42:	4283      	cmp	r3, r0
 8016d44:	d805      	bhi.n	8016d52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8016d46:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8016d4a:	4283      	cmp	r3, r0
 8016d4c:	f4ff af2f 	bcc.w	8016bae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016d50:	e754      	b.n	8016bfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016d52:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8016d56:	4283      	cmp	r3, r0
 8016d58:	e7af      	b.n	8016cba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8016d5a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8016d5e:	4617      	mov	r7, r2
 8016d60:	f102 0808 	add.w	r8, r2, #8
 8016d64:	4666      	mov	r6, ip
 8016d66:	6838      	ldr	r0, [r7, #0]
 8016d68:	6879      	ldr	r1, [r7, #4]
 8016d6a:	46e6      	mov	lr, ip
 8016d6c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8016d70:	3708      	adds	r7, #8
 8016d72:	4547      	cmp	r7, r8
 8016d74:	46f4      	mov	ip, lr
 8016d76:	d1f6      	bne.n	8016d66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8016d78:	6838      	ldr	r0, [r7, #0]
 8016d7a:	f8ce 0000 	str.w	r0, [lr]
 8016d7e:	88b9      	ldrh	r1, [r7, #4]
 8016d80:	f8ae 1004 	strh.w	r1, [lr, #4]
 8016d84:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8016d88:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016d8c:	d009      	beq.n	8016da2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8016d8e:	7b51      	ldrb	r1, [r2, #13]
 8016d90:	7992      	ldrb	r2, [r2, #6]
 8016d92:	0149      	lsls	r1, r1, #5
 8016d94:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016d98:	4311      	orrs	r1, r2
 8016d9a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8016d9e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8016da2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016da6:	b2ad      	uxth	r5, r5
 8016da8:	d00d      	beq.n	8016dc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8016daa:	442b      	add	r3, r5
 8016dac:	b29b      	uxth	r3, r3
 8016dae:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016db2:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016db6:	10db      	asrs	r3, r3, #3
 8016db8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8016dbc:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016dc0:	4313      	orrs	r3, r2
 8016dc2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8016dc6:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8016dca:	00cb      	lsls	r3, r1, #3
 8016dcc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016dd0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8016dd4:	064f      	lsls	r7, r1, #25
 8016dd6:	ea43 0302 	orr.w	r3, r3, r2
 8016dda:	bf44      	itt	mi
 8016ddc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016de0:	b21b      	sxthmi	r3, r3
 8016de2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016de6:	1b5b      	subs	r3, r3, r5
 8016de8:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8016dec:	4632      	mov	r2, r6
 8016dee:	e6fa      	b.n	8016be6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8016df0:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8016df4:	4617      	mov	r7, r2
 8016df6:	f102 0908 	add.w	r9, r2, #8
 8016dfa:	4666      	mov	r6, ip
 8016dfc:	6838      	ldr	r0, [r7, #0]
 8016dfe:	6879      	ldr	r1, [r7, #4]
 8016e00:	46e0      	mov	r8, ip
 8016e02:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8016e06:	3708      	adds	r7, #8
 8016e08:	454f      	cmp	r7, r9
 8016e0a:	46c4      	mov	ip, r8
 8016e0c:	d1f6      	bne.n	8016dfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8016e0e:	6838      	ldr	r0, [r7, #0]
 8016e10:	f8c8 0000 	str.w	r0, [r8]
 8016e14:	88b9      	ldrh	r1, [r7, #4]
 8016e16:	f8a8 1004 	strh.w	r1, [r8, #4]
 8016e1a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8016e1e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016e22:	d009      	beq.n	8016e38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8016e24:	7b51      	ldrb	r1, [r2, #13]
 8016e26:	7992      	ldrb	r2, [r2, #6]
 8016e28:	0149      	lsls	r1, r1, #5
 8016e2a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016e2e:	4311      	orrs	r1, r2
 8016e30:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8016e34:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8016e38:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016e3c:	d00e      	beq.n	8016e5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8016e3e:	eba3 030e 	sub.w	r3, r3, lr
 8016e42:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016e46:	b29b      	uxth	r3, r3
 8016e48:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016e4c:	10db      	asrs	r3, r3, #3
 8016e4e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016e52:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8016e56:	4313      	orrs	r3, r2
 8016e58:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8016e5c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8016e60:	00cb      	lsls	r3, r1, #3
 8016e62:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016e66:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8016e6a:	0648      	lsls	r0, r1, #25
 8016e6c:	ea43 0302 	orr.w	r3, r3, r2
 8016e70:	bf44      	itt	mi
 8016e72:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016e76:	b21b      	sxthmi	r3, r3
 8016e78:	1b5d      	subs	r5, r3, r5
 8016e7a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016e7e:	e7b5      	b.n	8016dec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08016e80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8016e80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016e84:	461e      	mov	r6, r3
 8016e86:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016e88:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016e8c:	4604      	mov	r4, r0
 8016e8e:	4617      	mov	r7, r2
 8016e90:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8016e94:	f7f0 fdb2 	bl	80079fc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8016e98:	4605      	mov	r5, r0
 8016e9a:	b918      	cbnz	r0, 8016ea4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8016e9c:	6030      	str	r0, [r6, #0]
 8016e9e:	4628      	mov	r0, r5
 8016ea0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016ea4:	683b      	ldr	r3, [r7, #0]
 8016ea6:	4601      	mov	r1, r0
 8016ea8:	68db      	ldr	r3, [r3, #12]
 8016eaa:	4638      	mov	r0, r7
 8016eac:	4798      	blx	r3
 8016eae:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8016eb2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8016eb6:	4602      	mov	r2, r0
 8016eb8:	6030      	str	r0, [r6, #0]
 8016eba:	d213      	bcs.n	8016ee4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8016ebc:	4643      	mov	r3, r8
 8016ebe:	4639      	mov	r1, r7
 8016ec0:	4620      	mov	r0, r4
 8016ec2:	f7ff fe3b 	bl	8016b3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8016ec6:	6030      	str	r0, [r6, #0]
 8016ec8:	6833      	ldr	r3, [r6, #0]
 8016eca:	b143      	cbz	r3, 8016ede <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8016ecc:	7b5a      	ldrb	r2, [r3, #13]
 8016ece:	7a9b      	ldrb	r3, [r3, #10]
 8016ed0:	0052      	lsls	r2, r2, #1
 8016ed2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8016ed6:	4313      	orrs	r3, r2
 8016ed8:	bf0c      	ite	eq
 8016eda:	2301      	moveq	r3, #1
 8016edc:	2300      	movne	r3, #0
 8016ede:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8016ee2:	e7dc      	b.n	8016e9e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8016ee4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8016ee8:	b29b      	uxth	r3, r3
 8016eea:	2b7f      	cmp	r3, #127	; 0x7f
 8016eec:	d804      	bhi.n	8016ef8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8016eee:	4639      	mov	r1, r7
 8016ef0:	4620      	mov	r0, r4
 8016ef2:	f7ff fd17 	bl	8016924 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8016ef6:	e7e6      	b.n	8016ec6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8016ef8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8016efc:	2b00      	cmp	r3, #0
 8016efe:	d0e3      	beq.n	8016ec8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8016f00:	f640 1302 	movw	r3, #2306	; 0x902
 8016f04:	429d      	cmp	r5, r3
 8016f06:	d1df      	bne.n	8016ec8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8016f08:	4601      	mov	r1, r0
 8016f0a:	4620      	mov	r0, r4
 8016f0c:	f7ff fcdb 	bl	80168c6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8016f10:	e7d9      	b.n	8016ec6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08016f12 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8016f12:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8016f16:	461e      	mov	r6, r3
 8016f18:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016f1a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016f1e:	4604      	mov	r4, r0
 8016f20:	4617      	mov	r7, r2
 8016f22:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8016f26:	f7f0 fd69 	bl	80079fc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8016f2a:	4605      	mov	r5, r0
 8016f2c:	b918      	cbnz	r0, 8016f36 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8016f2e:	6030      	str	r0, [r6, #0]
 8016f30:	4628      	mov	r0, r5
 8016f32:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8016f36:	683b      	ldr	r3, [r7, #0]
 8016f38:	4601      	mov	r1, r0
 8016f3a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8016f3e:	4638      	mov	r0, r7
 8016f40:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8016f44:	47c8      	blx	r9
 8016f46:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8016f4a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8016f4e:	4602      	mov	r2, r0
 8016f50:	6030      	str	r0, [r6, #0]
 8016f52:	d213      	bcs.n	8016f7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8016f54:	4643      	mov	r3, r8
 8016f56:	4639      	mov	r1, r7
 8016f58:	4620      	mov	r0, r4
 8016f5a:	f7ff fdef 	bl	8016b3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8016f5e:	6030      	str	r0, [r6, #0]
 8016f60:	6833      	ldr	r3, [r6, #0]
 8016f62:	b143      	cbz	r3, 8016f76 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8016f64:	7b5a      	ldrb	r2, [r3, #13]
 8016f66:	7a9b      	ldrb	r3, [r3, #10]
 8016f68:	0052      	lsls	r2, r2, #1
 8016f6a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8016f6e:	4313      	orrs	r3, r2
 8016f70:	bf0c      	ite	eq
 8016f72:	2301      	moveq	r3, #1
 8016f74:	2300      	movne	r3, #0
 8016f76:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8016f7a:	e7d9      	b.n	8016f30 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8016f7c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8016f80:	b29b      	uxth	r3, r3
 8016f82:	2b7f      	cmp	r3, #127	; 0x7f
 8016f84:	d804      	bhi.n	8016f90 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8016f86:	4639      	mov	r1, r7
 8016f88:	4620      	mov	r0, r4
 8016f8a:	f7ff fccb 	bl	8016924 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8016f8e:	e7e6      	b.n	8016f5e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8016f90:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8016f94:	2b00      	cmp	r3, #0
 8016f96:	d0e3      	beq.n	8016f60 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8016f98:	f640 1302 	movw	r3, #2306	; 0x902
 8016f9c:	429d      	cmp	r5, r3
 8016f9e:	d1df      	bne.n	8016f60 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8016fa0:	4601      	mov	r1, r0
 8016fa2:	4620      	mov	r0, r4
 8016fa4:	f7ff fc8f 	bl	80168c6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8016fa8:	e7d9      	b.n	8016f5e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08016faa <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8016faa:	b510      	push	{r4, lr}
 8016fac:	4604      	mov	r4, r0
 8016fae:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8016fb2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8016fb4:	b1f1      	cbz	r1, 8016ff4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8016fb6:	2b0a      	cmp	r3, #10
 8016fb8:	d02f      	beq.n	801701a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8016fba:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8016fbc:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8016fc0:	3901      	subs	r1, #1
 8016fc2:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8016fc4:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8016fc8:	1c51      	adds	r1, r2, #1
 8016fca:	b289      	uxth	r1, r1
 8016fcc:	2901      	cmp	r1, #1
 8016fce:	bf84      	itt	hi
 8016fd0:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8016fd4:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8016fd6:	f103 0201 	add.w	r2, r3, #1
 8016fda:	8722      	strh	r2, [r4, #56]	; 0x38
 8016fdc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8016fde:	bf98      	it	ls
 8016fe0:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8016fe2:	4413      	add	r3, r2
 8016fe4:	b29b      	uxth	r3, r3
 8016fe6:	2b09      	cmp	r3, #9
 8016fe8:	bf88      	it	hi
 8016fea:	3b0a      	subhi	r3, #10
 8016fec:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016ff0:	8458      	strh	r0, [r3, #34]	; 0x22
 8016ff2:	e7dc      	b.n	8016fae <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8016ff4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8016ff6:	2b0a      	cmp	r3, #10
 8016ff8:	d00f      	beq.n	801701a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8016ffa:	4620      	mov	r0, r4
 8016ffc:	f7ff fc11 	bl	8016822 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8017000:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017002:	1c5a      	adds	r2, r3, #1
 8017004:	8722      	strh	r2, [r4, #56]	; 0x38
 8017006:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8017008:	4413      	add	r3, r2
 801700a:	b29b      	uxth	r3, r3
 801700c:	2b09      	cmp	r3, #9
 801700e:	bf88      	it	hi
 8017010:	3b0a      	subhi	r3, #10
 8017012:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017016:	8458      	strh	r0, [r3, #34]	; 0x22
 8017018:	e7ec      	b.n	8016ff4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801701a:	bd10      	pop	{r4, pc}

0801701c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801701c:	b538      	push	{r3, r4, r5, lr}
 801701e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017020:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8017024:	4604      	mov	r4, r0
 8017026:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8017028:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801702a:	3a01      	subs	r2, #1
 801702c:	8702      	strh	r2, [r0, #56]	; 0x38
 801702e:	1c5a      	adds	r2, r3, #1
 8017030:	b292      	uxth	r2, r2
 8017032:	2a09      	cmp	r2, #9
 8017034:	bf86      	itte	hi
 8017036:	3b09      	subhi	r3, #9
 8017038:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801703a:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801703c:	f7ff ffb5 	bl	8016faa <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8017040:	8c23      	ldrh	r3, [r4, #32]
 8017042:	2b01      	cmp	r3, #1
 8017044:	bf9c      	itt	ls
 8017046:	3301      	addls	r3, #1
 8017048:	8423      	strhls	r3, [r4, #32]
 801704a:	8be3      	ldrh	r3, [r4, #30]
 801704c:	b90b      	cbnz	r3, 8017052 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801704e:	2302      	movs	r3, #2
 8017050:	83e3      	strh	r3, [r4, #30]
 8017052:	8be3      	ldrh	r3, [r4, #30]
 8017054:	3b01      	subs	r3, #1
 8017056:	b29b      	uxth	r3, r3
 8017058:	83e3      	strh	r3, [r4, #30]
 801705a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801705e:	4628      	mov	r0, r5
 8017060:	8365      	strh	r5, [r4, #26]
 8017062:	bd38      	pop	{r3, r4, r5, pc}

08017064 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8017064:	428a      	cmp	r2, r1
 8017066:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801706a:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801706c:	d931      	bls.n	80170d2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801706e:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8017070:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8017074:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8017078:	19ee      	adds	r6, r5, r7
 801707a:	1a54      	subs	r4, r2, r1
 801707c:	3e01      	subs	r6, #1
 801707e:	fa1f fe84 	uxth.w	lr, r4
 8017082:	b2b4      	uxth	r4, r6
 8017084:	eba4 090e 	sub.w	r9, r4, lr
 8017088:	fa1f f989 	uxth.w	r9, r9
 801708c:	2c09      	cmp	r4, #9
 801708e:	4626      	mov	r6, r4
 8017090:	bf88      	it	hi
 8017092:	f1a4 060a 	subhi.w	r6, r4, #10
 8017096:	f1bc 0f00 	cmp.w	ip, #0
 801709a:	bf08      	it	eq
 801709c:	f04f 0c02 	moveq.w	ip, #2
 80170a0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80170a4:	f10c 3cff 	add.w	ip, ip, #4294967295
 80170a8:	fa1f fc8c 	uxth.w	ip, ip
 80170ac:	3c01      	subs	r4, #1
 80170ae:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 80170b2:	b2a4      	uxth	r4, r4
 80170b4:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80170b8:	454c      	cmp	r4, r9
 80170ba:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 80170be:	d1e5      	bne.n	801708c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80170c0:	eba5 050e 	sub.w	r5, r5, lr
 80170c4:	eb0e 0408 	add.w	r4, lr, r8
 80170c8:	8705      	strh	r5, [r0, #56]	; 0x38
 80170ca:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 80170ce:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 80170d2:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 80170d4:	1a64      	subs	r4, r4, r1
 80170d6:	4439      	add	r1, r7
 80170d8:	b289      	uxth	r1, r1
 80170da:	2909      	cmp	r1, #9
 80170dc:	bf88      	it	hi
 80170de:	390a      	subhi	r1, #10
 80170e0:	8704      	strh	r4, [r0, #56]	; 0x38
 80170e2:	86c1      	strh	r1, [r0, #54]	; 0x36
 80170e4:	250a      	movs	r5, #10
 80170e6:	b18a      	cbz	r2, 801710c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 80170e8:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80170ea:	3a01      	subs	r2, #1
 80170ec:	b292      	uxth	r2, r2
 80170ee:	3101      	adds	r1, #1
 80170f0:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80170f4:	8701      	strh	r1, [r0, #56]	; 0x38
 80170f6:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80170f8:	b901      	cbnz	r1, 80170fc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80170fa:	86c5      	strh	r5, [r0, #54]	; 0x36
 80170fc:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80170fe:	3901      	subs	r1, #1
 8017100:	b289      	uxth	r1, r1
 8017102:	86c1      	strh	r1, [r0, #54]	; 0x36
 8017104:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8017108:	844c      	strh	r4, [r1, #34]	; 0x22
 801710a:	e7ec      	b.n	80170e6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801710c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017110:	f7ff bf4b 	b.w	8016faa <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08017114 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8017114:	b570      	push	{r4, r5, r6, lr}
 8017116:	2500      	movs	r5, #0
 8017118:	4295      	cmp	r5, r2
 801711a:	d011      	beq.n	8017140 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801711c:	8bc4      	ldrh	r4, [r0, #30]
 801711e:	f831 6b02 	ldrh.w	r6, [r1], #2
 8017122:	4414      	add	r4, r2
 8017124:	3c01      	subs	r4, #1
 8017126:	1b64      	subs	r4, r4, r5
 8017128:	b2a4      	uxth	r4, r4
 801712a:	2c01      	cmp	r4, #1
 801712c:	bf88      	it	hi
 801712e:	3c02      	subhi	r4, #2
 8017130:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8017134:	8b64      	ldrh	r4, [r4, #26]
 8017136:	42b4      	cmp	r4, r6
 8017138:	d117      	bne.n	801716a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801713a:	3501      	adds	r5, #1
 801713c:	b2ad      	uxth	r5, r5
 801713e:	e7eb      	b.n	8017118 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8017140:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017144:	2400      	movs	r4, #0
 8017146:	4413      	add	r3, r2
 8017148:	b2a2      	uxth	r2, r4
 801714a:	429a      	cmp	r2, r3
 801714c:	da0f      	bge.n	801716e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801714e:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8017150:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8017154:	4432      	add	r2, r6
 8017156:	b292      	uxth	r2, r2
 8017158:	2a09      	cmp	r2, #9
 801715a:	bf88      	it	hi
 801715c:	3a0a      	subhi	r2, #10
 801715e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017162:	3401      	adds	r4, #1
 8017164:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8017166:	42aa      	cmp	r2, r5
 8017168:	d0ee      	beq.n	8017148 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801716a:	2000      	movs	r0, #0
 801716c:	bd70      	pop	{r4, r5, r6, pc}
 801716e:	2001      	movs	r0, #1
 8017170:	e7fc      	b.n	801716c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08017172 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8017172:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017176:	4605      	mov	r5, r0
 8017178:	4616      	mov	r6, r2
 801717a:	1c8c      	adds	r4, r1, #2
 801717c:	8809      	ldrh	r1, [r1, #0]
 801717e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8017182:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8017186:	42b3      	cmp	r3, r6
 8017188:	d124      	bne.n	80171d4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801718a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801718e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8017192:	f001 070f 	and.w	r7, r1, #15
 8017196:	f8cd 8000 	str.w	r8, [sp]
 801719a:	464b      	mov	r3, r9
 801719c:	4652      	mov	r2, sl
 801719e:	4621      	mov	r1, r4
 80171a0:	4628      	mov	r0, r5
 80171a2:	f7ff ffb7 	bl	8017114 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80171a6:	4683      	mov	fp, r0
 80171a8:	b168      	cbz	r0, 80171c6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80171aa:	eb0a 0109 	add.w	r1, sl, r9
 80171ae:	4441      	add	r1, r8
 80171b0:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80171b4:	463a      	mov	r2, r7
 80171b6:	4649      	mov	r1, r9
 80171b8:	4628      	mov	r0, r5
 80171ba:	f7ff ff53 	bl	8017064 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80171be:	4658      	mov	r0, fp
 80171c0:	b003      	add	sp, #12
 80171c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80171c6:	eb07 010a 	add.w	r1, r7, sl
 80171ca:	4449      	add	r1, r9
 80171cc:	4441      	add	r1, r8
 80171ce:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80171d2:	e7d2      	b.n	801717a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80171d4:	f04f 0b00 	mov.w	fp, #0
 80171d8:	e7f1      	b.n	80171be <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080171da <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80171da:	b570      	push	{r4, r5, r6, lr}
 80171dc:	8810      	ldrh	r0, [r2, #0]
 80171de:	4298      	cmp	r0, r3
 80171e0:	d817      	bhi.n	8017212 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80171e2:	1e48      	subs	r0, r1, #1
 80171e4:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80171e8:	4298      	cmp	r0, r3
 80171ea:	d312      	bcc.n	8017212 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80171ec:	2400      	movs	r4, #0
 80171ee:	428c      	cmp	r4, r1
 80171f0:	d20f      	bcs.n	8017212 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80171f2:	1860      	adds	r0, r4, r1
 80171f4:	1040      	asrs	r0, r0, #1
 80171f6:	0085      	lsls	r5, r0, #2
 80171f8:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80171fc:	42b3      	cmp	r3, r6
 80171fe:	d902      	bls.n	8017206 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8017200:	3001      	adds	r0, #1
 8017202:	b284      	uxth	r4, r0
 8017204:	e7f3      	b.n	80171ee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8017206:	d201      	bcs.n	801720c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8017208:	b281      	uxth	r1, r0
 801720a:	e7f0      	b.n	80171ee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801720c:	442a      	add	r2, r5
 801720e:	8850      	ldrh	r0, [r2, #2]
 8017210:	bd70      	pop	{r4, r5, r6, pc}
 8017212:	2000      	movs	r0, #0
 8017214:	e7fc      	b.n	8017210 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08017216 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8017216:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801721a:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801721c:	886f      	ldrh	r7, [r5, #2]
 801721e:	4604      	mov	r4, r0
 8017220:	087f      	lsrs	r7, r7, #1
 8017222:	260b      	movs	r6, #11
 8017224:	3e01      	subs	r6, #1
 8017226:	d013      	beq.n	8017250 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017228:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801722a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801722e:	462a      	mov	r2, r5
 8017230:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017234:	4639      	mov	r1, r7
 8017236:	4643      	mov	r3, r8
 8017238:	4620      	mov	r0, r4
 801723a:	f7ff ffce 	bl	80171da <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801723e:	b138      	cbz	r0, 8017250 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017240:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8017244:	4642      	mov	r2, r8
 8017246:	4620      	mov	r0, r4
 8017248:	f7ff ff93 	bl	8017172 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801724c:	2800      	cmp	r0, #0
 801724e:	d1e9      	bne.n	8017224 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8017250:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08017254 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8017254:	b570      	push	{r4, r5, r6, lr}
 8017256:	694a      	ldr	r2, [r1, #20]
 8017258:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801725a:	684b      	ldr	r3, [r1, #4]
 801725c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801725e:	1b54      	subs	r4, r2, r5
 8017260:	f000 8106 	beq.w	8017470 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8017264:	1b9b      	subs	r3, r3, r6
 8017266:	d003      	beq.n	8017270 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017268:	4363      	muls	r3, r4
 801726a:	2210      	movs	r2, #16
 801726c:	fb93 f3f2 	sdiv	r3, r3, r2
 8017270:	680c      	ldr	r4, [r1, #0]
 8017272:	698a      	ldr	r2, [r1, #24]
 8017274:	1b65      	subs	r5, r4, r5
 8017276:	f000 80fd 	beq.w	8017474 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801727a:	1b92      	subs	r2, r2, r6
 801727c:	d003      	beq.n	8017286 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801727e:	436a      	muls	r2, r5
 8017280:	2410      	movs	r4, #16
 8017282:	fb92 f2f4 	sdiv	r2, r2, r4
 8017286:	1a9b      	subs	r3, r3, r2
 8017288:	ee07 3a90 	vmov	s15, r3
 801728c:	ed9f 4a88 	vldr	s8, [pc, #544]	; 80174b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8017290:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017294:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017298:	ee67 7a84 	vmul.f32	s15, s15, s8
 801729c:	460a      	mov	r2, r1
 801729e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80172a2:	4603      	mov	r3, r0
 80172a4:	f100 040c 	add.w	r4, r0, #12
 80172a8:	eeb1 6a43 	vneg.f32	s12, s6
 80172ac:	edd2 7a02 	vldr	s15, [r2, #8]
 80172b0:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80172b4:	3214      	adds	r2, #20
 80172b6:	ece3 6a01 	vstmia	r3!, {s13}
 80172ba:	ed52 7a02 	vldr	s15, [r2, #-8]
 80172be:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80172c2:	429c      	cmp	r4, r3
 80172c4:	edc3 7a02 	vstr	s15, [r3, #8]
 80172c8:	ed52 7a01 	vldr	s15, [r2, #-4]
 80172cc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80172d0:	edc3 7a05 	vstr	s15, [r3, #20]
 80172d4:	d1ea      	bne.n	80172ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80172d6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80172d8:	698b      	ldr	r3, [r1, #24]
 80172da:	edd0 4a02 	vldr	s9, [r0, #8]
 80172de:	edd0 3a00 	vldr	s7, [r0]
 80172e2:	edd0 6a01 	vldr	s13, [r0, #4]
 80172e6:	ed90 5a05 	vldr	s10, [r0, #20]
 80172ea:	ed90 2a03 	vldr	s4, [r0, #12]
 80172ee:	edd0 5a04 	vldr	s11, [r0, #16]
 80172f2:	ed90 1a07 	vldr	s2, [r0, #28]
 80172f6:	edd0 2a06 	vldr	s5, [r0, #24]
 80172fa:	1a9b      	subs	r3, r3, r2
 80172fc:	ee07 3a90 	vmov	s15, r3
 8017300:	684b      	ldr	r3, [r1, #4]
 8017302:	1a9b      	subs	r3, r3, r2
 8017304:	ee07 3a10 	vmov	s14, r3
 8017308:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801730c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8017310:	ee67 7a84 	vmul.f32	s15, s15, s8
 8017314:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8017318:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801731c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8017320:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017324:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8017328:	eee6 7a87 	vfma.f32	s15, s13, s14
 801732c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8017330:	ee67 7a83 	vmul.f32	s15, s15, s6
 8017334:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8017338:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801733a:	694a      	ldr	r2, [r1, #20]
 801733c:	1b13      	subs	r3, r2, r4
 801733e:	ee07 3a10 	vmov	s14, r3
 8017342:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017346:	680b      	ldr	r3, [r1, #0]
 8017348:	ee27 7a04 	vmul.f32	s14, s14, s8
 801734c:	1b1b      	subs	r3, r3, r4
 801734e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8017352:	ee07 3a10 	vmov	s14, r3
 8017356:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801735a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801735e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8017362:	ee64 4a86 	vmul.f32	s9, s9, s12
 8017366:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801736a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801736c:	698b      	ldr	r3, [r1, #24]
 801736e:	1a9b      	subs	r3, r3, r2
 8017370:	ee06 3a90 	vmov	s13, r3
 8017374:	684b      	ldr	r3, [r1, #4]
 8017376:	1a9b      	subs	r3, r3, r2
 8017378:	ee07 3a10 	vmov	s14, r3
 801737c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017380:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017384:	ee66 6a84 	vmul.f32	s13, s13, s8
 8017388:	ee27 7a04 	vmul.f32	s14, s14, s8
 801738c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8017390:	eee5 6a87 	vfma.f32	s13, s11, s14
 8017394:	ee66 6a83 	vmul.f32	s13, s13, s6
 8017398:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801739c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801739e:	694a      	ldr	r2, [r1, #20]
 80173a0:	1b13      	subs	r3, r2, r4
 80173a2:	ee07 3a10 	vmov	s14, r3
 80173a6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80173aa:	680b      	ldr	r3, [r1, #0]
 80173ac:	ee27 7a04 	vmul.f32	s14, s14, s8
 80173b0:	1b1b      	subs	r3, r3, r4
 80173b2:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80173b6:	ee07 3a10 	vmov	s14, r3
 80173ba:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80173be:	ee27 7a04 	vmul.f32	s14, s14, s8
 80173c2:	eea5 5a87 	vfma.f32	s10, s11, s14
 80173c6:	edd0 5a08 	vldr	s11, [r0, #32]
 80173ca:	ee25 5a06 	vmul.f32	s10, s10, s12
 80173ce:	ee31 1a65 	vsub.f32	s2, s2, s11
 80173d2:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 80173d6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80173d8:	698b      	ldr	r3, [r1, #24]
 80173da:	1a9b      	subs	r3, r3, r2
 80173dc:	ee07 3a10 	vmov	s14, r3
 80173e0:	684b      	ldr	r3, [r1, #4]
 80173e2:	1a9b      	subs	r3, r3, r2
 80173e4:	ee01 3a90 	vmov	s3, r3
 80173e8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80173ec:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80173f0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80173f4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80173f8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80173fc:	ee61 1a84 	vmul.f32	s3, s3, s8
 8017400:	eea1 7a21 	vfma.f32	s14, s2, s3
 8017404:	ee27 7a03 	vmul.f32	s14, s14, s6
 8017408:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801740c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801740e:	694a      	ldr	r2, [r1, #20]
 8017410:	1b13      	subs	r3, r2, r4
 8017412:	ee03 3a10 	vmov	s6, r3
 8017416:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801741a:	680b      	ldr	r3, [r1, #0]
 801741c:	ee23 3a04 	vmul.f32	s6, s6, s8
 8017420:	1b1b      	subs	r3, r3, r4
 8017422:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8017426:	ee03 3a10 	vmov	s6, r3
 801742a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801742e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8017432:	eee1 5a04 	vfma.f32	s11, s2, s8
 8017436:	ee25 6a86 	vmul.f32	s12, s11, s12
 801743a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801743e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8017442:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8017446:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801744a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801744e:	dd13      	ble.n	8017478 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8017450:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017454:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8017458:	63c3      	str	r3, [r0, #60]	; 0x3c
 801745a:	eee3 7a87 	vfma.f32	s15, s7, s14
 801745e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017462:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017466:	dd15      	ble.n	8017494 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8017468:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801746c:	6403      	str	r3, [r0, #64]	; 0x40
 801746e:	bd70      	pop	{r4, r5, r6, pc}
 8017470:	4623      	mov	r3, r4
 8017472:	e6fd      	b.n	8017270 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017474:	462a      	mov	r2, r5
 8017476:	e706      	b.n	8017286 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017478:	d502      	bpl.n	8017480 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801747a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801747e:	e7e9      	b.n	8017454 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8017480:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8017484:	eea3 2a85 	vfma.f32	s4, s7, s10
 8017488:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801748c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017490:	dade      	bge.n	8017450 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8017492:	e7f2      	b.n	801747a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8017494:	d502      	bpl.n	801749c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8017496:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801749a:	e7e7      	b.n	801746c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801749c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80174a0:	eee3 4a86 	vfma.f32	s9, s7, s12
 80174a4:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80174a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80174ac:	dadc      	bge.n	8017468 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 80174ae:	e7f2      	b.n	8017496 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80174b0:	3d800000 	.word	0x3d800000

080174b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80174b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80174b8:	2714      	movs	r7, #20
 80174ba:	435f      	muls	r7, r3
 80174bc:	eb02 0c07 	add.w	ip, r2, r7
 80174c0:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80174c4:	f115 0e0f 	adds.w	lr, r5, #15
 80174c8:	f100 80a2 	bmi.w	8017610 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80174cc:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 80174d0:	9c08      	ldr	r4, [sp, #32]
 80174d2:	f8c0 e014 	str.w	lr, [r0, #20]
 80174d6:	2614      	movs	r6, #20
 80174d8:	4366      	muls	r6, r4
 80174da:	eb02 0806 	add.w	r8, r2, r6
 80174de:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80174e2:	f115 040f 	adds.w	r4, r5, #15
 80174e6:	f100 809f 	bmi.w	8017628 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 80174ea:	1124      	asrs	r4, r4, #4
 80174ec:	eba4 040e 	sub.w	r4, r4, lr
 80174f0:	6184      	str	r4, [r0, #24]
 80174f2:	2c00      	cmp	r4, #0
 80174f4:	f000 808a 	beq.w	801760c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80174f8:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80174fc:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8017500:	5995      	ldr	r5, [r2, r6]
 8017502:	eba4 0809 	sub.w	r8, r4, r9
 8017506:	59d4      	ldr	r4, [r2, r7]
 8017508:	eba5 0a04 	sub.w	sl, r5, r4
 801750c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8017510:	fb0e fe05 	mul.w	lr, lr, r5
 8017514:	fb0a ee19 	mls	lr, sl, r9, lr
 8017518:	fb08 e404 	mla	r4, r8, r4, lr
 801751c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8017520:	3c01      	subs	r4, #1
 8017522:	19a4      	adds	r4, r4, r6
 8017524:	f100 808c 	bmi.w	8017640 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8017528:	fb94 fef6 	sdiv	lr, r4, r6
 801752c:	f8c0 e000 	str.w	lr, [r0]
 8017530:	fb06 441e 	mls	r4, r6, lr, r4
 8017534:	6104      	str	r4, [r0, #16]
 8017536:	2d00      	cmp	r5, #0
 8017538:	f2c0 8095 	blt.w	8017666 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801753c:	fb95 f4f6 	sdiv	r4, r5, r6
 8017540:	6044      	str	r4, [r0, #4]
 8017542:	fb06 5514 	mls	r5, r6, r4, r5
 8017546:	6085      	str	r5, [r0, #8]
 8017548:	60c6      	str	r6, [r0, #12]
 801754a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801754e:	6945      	ldr	r5, [r0, #20]
 8017550:	59d2      	ldr	r2, [r2, r7]
 8017552:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8017688 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8017556:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801755a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801755e:	ee07 4a10 	vmov	s14, r4
 8017562:	6804      	ldr	r4, [r0, #0]
 8017564:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8017568:	ee07 2a90 	vmov	s15, r2
 801756c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017570:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017574:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017578:	ee27 7a26 	vmul.f32	s14, s14, s13
 801757c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017580:	edd3 6a00 	vldr	s13, [r3]
 8017584:	eee6 6a07 	vfma.f32	s13, s12, s14
 8017588:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801758c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8017590:	edc0 6a07 	vstr	s13, [r0, #28]
 8017594:	edd0 6a01 	vldr	s13, [r0, #4]
 8017598:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801759c:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80175a0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80175a4:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80175a8:	ed80 6a08 	vstr	s12, [r0, #32]
 80175ac:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 80175ae:	6242      	str	r2, [r0, #36]	; 0x24
 80175b0:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 80175b4:	ed93 6a03 	vldr	s12, [r3, #12]
 80175b8:	eea5 6a87 	vfma.f32	s12, s11, s14
 80175bc:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80175c0:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80175c4:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 80175c8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80175cc:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 80175d0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80175d4:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 80175d8:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80175da:	6302      	str	r2, [r0, #48]	; 0x30
 80175dc:	ed93 6a06 	vldr	s12, [r3, #24]
 80175e0:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 80175e4:	eea5 6a87 	vfma.f32	s12, s11, s14
 80175e8:	eeb0 7a46 	vmov.f32	s14, s12
 80175ec:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 80175f0:	eea6 7a27 	vfma.f32	s14, s12, s15
 80175f4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80175f8:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80175fc:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8017600:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017604:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8017608:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801760a:	63c3      	str	r3, [r0, #60]	; 0x3c
 801760c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017610:	f1c5 0501 	rsb	r5, r5, #1
 8017614:	f015 050f 	ands.w	r5, r5, #15
 8017618:	bf18      	it	ne
 801761a:	2501      	movne	r5, #1
 801761c:	2410      	movs	r4, #16
 801761e:	fb9e fef4 	sdiv	lr, lr, r4
 8017622:	ebae 0e05 	sub.w	lr, lr, r5
 8017626:	e753      	b.n	80174d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8017628:	f1c5 0501 	rsb	r5, r5, #1
 801762c:	f015 050f 	ands.w	r5, r5, #15
 8017630:	bf18      	it	ne
 8017632:	2501      	movne	r5, #1
 8017634:	f04f 0910 	mov.w	r9, #16
 8017638:	fb94 f4f9 	sdiv	r4, r4, r9
 801763c:	1b64      	subs	r4, r4, r5
 801763e:	e755      	b.n	80174ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8017640:	4264      	negs	r4, r4
 8017642:	fb94 fef6 	sdiv	lr, r4, r6
 8017646:	f1ce 0800 	rsb	r8, lr, #0
 801764a:	fb06 441e 	mls	r4, r6, lr, r4
 801764e:	f8c0 8000 	str.w	r8, [r0]
 8017652:	6104      	str	r4, [r0, #16]
 8017654:	2c00      	cmp	r4, #0
 8017656:	f43f af6e 	beq.w	8017536 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801765a:	ea6f 0e0e 	mvn.w	lr, lr
 801765e:	f8c0 e000 	str.w	lr, [r0]
 8017662:	1b34      	subs	r4, r6, r4
 8017664:	e766      	b.n	8017534 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8017666:	426d      	negs	r5, r5
 8017668:	fb95 f4f6 	sdiv	r4, r5, r6
 801766c:	f1c4 0e00 	rsb	lr, r4, #0
 8017670:	fb06 5514 	mls	r5, r6, r4, r5
 8017674:	f8c0 e004 	str.w	lr, [r0, #4]
 8017678:	6085      	str	r5, [r0, #8]
 801767a:	2d00      	cmp	r5, #0
 801767c:	f43f af64 	beq.w	8017548 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8017680:	43e4      	mvns	r4, r4
 8017682:	6044      	str	r4, [r0, #4]
 8017684:	1b75      	subs	r5, r6, r5
 8017686:	e75e      	b.n	8017546 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8017688:	3d800000 	.word	0x3d800000

0801768c <_ZN8touchgfx7Unicode6strlenEPKt>:
 801768c:	4602      	mov	r2, r0
 801768e:	b148      	cbz	r0, 80176a4 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8017690:	2300      	movs	r3, #0
 8017692:	b298      	uxth	r0, r3
 8017694:	3301      	adds	r3, #1
 8017696:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801769a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801769e:	2900      	cmp	r1, #0
 80176a0:	d1f7      	bne.n	8017692 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 80176a2:	4770      	bx	lr
 80176a4:	4770      	bx	lr

080176a6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 80176a6:	b530      	push	{r4, r5, lr}
 80176a8:	4604      	mov	r4, r0
 80176aa:	b159      	cbz	r1, 80176c4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 80176ac:	b148      	cbz	r0, 80176c2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80176ae:	2300      	movs	r3, #0
 80176b0:	b298      	uxth	r0, r3
 80176b2:	4282      	cmp	r2, r0
 80176b4:	d905      	bls.n	80176c2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80176b6:	5ccd      	ldrb	r5, [r1, r3]
 80176b8:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 80176bc:	3301      	adds	r3, #1
 80176be:	2d00      	cmp	r5, #0
 80176c0:	d1f6      	bne.n	80176b0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 80176c2:	bd30      	pop	{r4, r5, pc}
 80176c4:	4608      	mov	r0, r1
 80176c6:	e7fc      	b.n	80176c2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

080176c8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 80176c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80176ca:	b08b      	sub	sp, #44	; 0x2c
 80176cc:	468c      	mov	ip, r1
 80176ce:	2100      	movs	r1, #0
 80176d0:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80176d4:	4604      	mov	r4, r0
 80176d6:	261f      	movs	r6, #31
 80176d8:	af01      	add	r7, sp, #4
 80176da:	fb94 fef3 	sdiv	lr, r4, r3
 80176de:	fb03 441e 	mls	r4, r3, lr, r4
 80176e2:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 80176e6:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 80176ea:	b2ec      	uxtb	r4, r5
 80176ec:	2d09      	cmp	r5, #9
 80176ee:	bfd4      	ite	le
 80176f0:	3430      	addle	r4, #48	; 0x30
 80176f2:	3457      	addgt	r4, #87	; 0x57
 80176f4:	b2e4      	uxtb	r4, r4
 80176f6:	55bc      	strb	r4, [r7, r6]
 80176f8:	4674      	mov	r4, lr
 80176fa:	1e71      	subs	r1, r6, #1
 80176fc:	b974      	cbnz	r4, 801771c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 80176fe:	2800      	cmp	r0, #0
 8017700:	da05      	bge.n	801770e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8017702:	ab0a      	add	r3, sp, #40	; 0x28
 8017704:	4419      	add	r1, r3
 8017706:	232d      	movs	r3, #45	; 0x2d
 8017708:	f801 3c24 	strb.w	r3, [r1, #-36]
 801770c:	1eb1      	subs	r1, r6, #2
 801770e:	3101      	adds	r1, #1
 8017710:	4439      	add	r1, r7
 8017712:	4660      	mov	r0, ip
 8017714:	f7ff ffc7 	bl	80176a6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017718:	b00b      	add	sp, #44	; 0x2c
 801771a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801771c:	460e      	mov	r6, r1
 801771e:	e7dc      	b.n	80176da <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08017720 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8017720:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017722:	b08b      	sub	sp, #44	; 0x2c
 8017724:	468c      	mov	ip, r1
 8017726:	2100      	movs	r1, #0
 8017728:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801772c:	ae01      	add	r6, sp, #4
 801772e:	211f      	movs	r1, #31
 8017730:	fbb0 f7f3 	udiv	r7, r0, r3
 8017734:	fb03 0517 	mls	r5, r3, r7, r0
 8017738:	b2ec      	uxtb	r4, r5
 801773a:	2d09      	cmp	r5, #9
 801773c:	bfd4      	ite	le
 801773e:	3430      	addle	r4, #48	; 0x30
 8017740:	3457      	addgt	r4, #87	; 0x57
 8017742:	b2e4      	uxtb	r4, r4
 8017744:	558c      	strb	r4, [r1, r6]
 8017746:	4638      	mov	r0, r7
 8017748:	1e4c      	subs	r4, r1, #1
 801774a:	b92f      	cbnz	r7, 8017758 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801774c:	4431      	add	r1, r6
 801774e:	4660      	mov	r0, ip
 8017750:	f7ff ffa9 	bl	80176a6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017754:	b00b      	add	sp, #44	; 0x2c
 8017756:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017758:	4621      	mov	r1, r4
 801775a:	e7e9      	b.n	8017730 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801775c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801775c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017760:	4691      	mov	r9, r2
 8017762:	b085      	sub	sp, #20
 8017764:	6802      	ldr	r2, [r0, #0]
 8017766:	9201      	str	r2, [sp, #4]
 8017768:	4688      	mov	r8, r1
 801776a:	4683      	mov	fp, r0
 801776c:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8017770:	9103      	str	r1, [sp, #12]
 8017772:	4610      	mov	r0, r2
 8017774:	461c      	mov	r4, r3
 8017776:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801777a:	9302      	str	r3, [sp, #8]
 801777c:	f7ff ff86 	bl	801768c <_ZN8touchgfx7Unicode6strlenEPKt>
 8017780:	f1b8 0f00 	cmp.w	r8, #0
 8017784:	bf0c      	ite	eq
 8017786:	4684      	moveq	ip, r0
 8017788:	f100 0c01 	addne.w	ip, r0, #1
 801778c:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8017790:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8017794:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8017796:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017798:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 801779c:	9903      	ldr	r1, [sp, #12]
 801779e:	fa1f fc8c 	uxth.w	ip, ip
 80177a2:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 80177a6:	d041      	beq.n	801782c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80177a8:	d834      	bhi.n	8017814 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 80177aa:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 80177ae:	d059      	beq.n	8017864 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 80177b0:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 80177b4:	d03a      	beq.n	801782c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80177b6:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 80177ba:	d034      	beq.n	8017826 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80177bc:	2400      	movs	r4, #0
 80177be:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80177c2:	3a01      	subs	r2, #1
 80177c4:	b169      	cbz	r1, 80177e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80177c6:	9911      	ldr	r1, [sp, #68]	; 0x44
 80177c8:	458c      	cmp	ip, r1
 80177ca:	da09      	bge.n	80177e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80177cc:	eba1 010c 	sub.w	r1, r1, ip
 80177d0:	b289      	uxth	r1, r1
 80177d2:	b933      	cbnz	r3, 80177e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80177d4:	2e00      	cmp	r6, #0
 80177d6:	d051      	beq.n	801787c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80177d8:	2800      	cmp	r0, #0
 80177da:	d04f      	beq.n	801787c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80177dc:	440c      	add	r4, r1
 80177de:	b2a4      	uxth	r4, r4
 80177e0:	2100      	movs	r1, #0
 80177e2:	682b      	ldr	r3, [r5, #0]
 80177e4:	4293      	cmp	r3, r2
 80177e6:	da07      	bge.n	80177f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80177e8:	f1b8 0f00 	cmp.w	r8, #0
 80177ec:	d004      	beq.n	80177f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80177ee:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 80177f2:	682b      	ldr	r3, [r5, #0]
 80177f4:	3301      	adds	r3, #1
 80177f6:	602b      	str	r3, [r5, #0]
 80177f8:	2730      	movs	r7, #48	; 0x30
 80177fa:	2c00      	cmp	r4, #0
 80177fc:	d04e      	beq.n	801789c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80177fe:	682e      	ldr	r6, [r5, #0]
 8017800:	3c01      	subs	r4, #1
 8017802:	42b2      	cmp	r2, r6
 8017804:	b2a4      	uxth	r4, r4
 8017806:	dd49      	ble.n	801789c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017808:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801780c:	682b      	ldr	r3, [r5, #0]
 801780e:	3301      	adds	r3, #1
 8017810:	602b      	str	r3, [r5, #0]
 8017812:	e7f2      	b.n	80177fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8017814:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8017818:	d01d      	beq.n	8017856 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801781a:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801781e:	d002      	beq.n	8017826 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017820:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8017824:	e7c9      	b.n	80177ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8017826:	4684      	mov	ip, r0
 8017828:	f04f 0800 	mov.w	r8, #0
 801782c:	2c00      	cmp	r4, #0
 801782e:	d0c6      	beq.n	80177be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017830:	b947      	cbnz	r7, 8017844 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8017832:	2801      	cmp	r0, #1
 8017834:	d106      	bne.n	8017844 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8017836:	8814      	ldrh	r4, [r2, #0]
 8017838:	2c30      	cmp	r4, #48	; 0x30
 801783a:	bf02      	ittt	eq
 801783c:	3202      	addeq	r2, #2
 801783e:	f8cb 2000 	streq.w	r2, [fp]
 8017842:	4638      	moveq	r0, r7
 8017844:	45bc      	cmp	ip, r7
 8017846:	da14      	bge.n	8017872 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8017848:	b2bf      	uxth	r7, r7
 801784a:	eba7 040c 	sub.w	r4, r7, ip
 801784e:	b2a4      	uxth	r4, r4
 8017850:	46bc      	mov	ip, r7
 8017852:	2600      	movs	r6, #0
 8017854:	e7b3      	b.n	80177be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017856:	4684      	mov	ip, r0
 8017858:	b16c      	cbz	r4, 8017876 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801785a:	42b8      	cmp	r0, r7
 801785c:	dd00      	ble.n	8017860 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801785e:	b2b8      	uxth	r0, r7
 8017860:	2400      	movs	r4, #0
 8017862:	e003      	b.n	801786c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8017864:	f04f 0c01 	mov.w	ip, #1
 8017868:	2400      	movs	r4, #0
 801786a:	4660      	mov	r0, ip
 801786c:	4626      	mov	r6, r4
 801786e:	46a0      	mov	r8, r4
 8017870:	e7a5      	b.n	80177be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017872:	2400      	movs	r4, #0
 8017874:	e7ed      	b.n	8017852 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8017876:	4626      	mov	r6, r4
 8017878:	46a0      	mov	r8, r4
 801787a:	e7a0      	b.n	80177be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801787c:	2900      	cmp	r1, #0
 801787e:	d0b0      	beq.n	80177e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017880:	2720      	movs	r7, #32
 8017882:	682e      	ldr	r6, [r5, #0]
 8017884:	2900      	cmp	r1, #0
 8017886:	d0ac      	beq.n	80177e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017888:	3901      	subs	r1, #1
 801788a:	4296      	cmp	r6, r2
 801788c:	b289      	uxth	r1, r1
 801788e:	daa7      	bge.n	80177e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017890:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8017894:	682b      	ldr	r3, [r5, #0]
 8017896:	3301      	adds	r3, #1
 8017898:	602b      	str	r3, [r5, #0]
 801789a:	e7f2      	b.n	8017882 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801789c:	b188      	cbz	r0, 80178c2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801789e:	682b      	ldr	r3, [r5, #0]
 80178a0:	3801      	subs	r0, #1
 80178a2:	429a      	cmp	r2, r3
 80178a4:	b280      	uxth	r0, r0
 80178a6:	dd0c      	ble.n	80178c2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80178a8:	f8db 3000 	ldr.w	r3, [fp]
 80178ac:	1c9c      	adds	r4, r3, #2
 80178ae:	f8cb 4000 	str.w	r4, [fp]
 80178b2:	881c      	ldrh	r4, [r3, #0]
 80178b4:	682b      	ldr	r3, [r5, #0]
 80178b6:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 80178ba:	682b      	ldr	r3, [r5, #0]
 80178bc:	3301      	adds	r3, #1
 80178be:	602b      	str	r3, [r5, #0]
 80178c0:	e7ec      	b.n	801789c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80178c2:	2620      	movs	r6, #32
 80178c4:	b151      	cbz	r1, 80178dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80178c6:	6828      	ldr	r0, [r5, #0]
 80178c8:	3901      	subs	r1, #1
 80178ca:	4282      	cmp	r2, r0
 80178cc:	b289      	uxth	r1, r1
 80178ce:	dd05      	ble.n	80178dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80178d0:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 80178d4:	682b      	ldr	r3, [r5, #0]
 80178d6:	3301      	adds	r3, #1
 80178d8:	602b      	str	r3, [r5, #0]
 80178da:	e7f3      	b.n	80178c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 80178dc:	b005      	add	sp, #20
 80178de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080178e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 80178e2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80178e6:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 80178ea:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 80178ee:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 80178f2:	2400      	movs	r4, #0
 80178f4:	8014      	strh	r4, [r2, #0]
 80178f6:	701c      	strb	r4, [r3, #0]
 80178f8:	f888 4000 	strb.w	r4, [r8]
 80178fc:	f88c 4000 	strb.w	r4, [ip]
 8017900:	f88e 4000 	strb.w	r4, [lr]
 8017904:	703c      	strb	r4, [r7, #0]
 8017906:	6804      	ldr	r4, [r0, #0]
 8017908:	b1a4      	cbz	r4, 8017934 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801790a:	8824      	ldrh	r4, [r4, #0]
 801790c:	f04f 0901 	mov.w	r9, #1
 8017910:	b314      	cbz	r4, 8017958 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017912:	2c2b      	cmp	r4, #43	; 0x2b
 8017914:	d001      	beq.n	801791a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8017916:	2c20      	cmp	r4, #32
 8017918:	d110      	bne.n	801793c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801791a:	8014      	strh	r4, [r2, #0]
 801791c:	6804      	ldr	r4, [r0, #0]
 801791e:	b10c      	cbz	r4, 8017924 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8017920:	3402      	adds	r4, #2
 8017922:	6004      	str	r4, [r0, #0]
 8017924:	680c      	ldr	r4, [r1, #0]
 8017926:	b10c      	cbz	r4, 801792c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8017928:	3401      	adds	r4, #1
 801792a:	600c      	str	r4, [r1, #0]
 801792c:	6804      	ldr	r4, [r0, #0]
 801792e:	b17c      	cbz	r4, 8017950 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8017930:	8824      	ldrh	r4, [r4, #0]
 8017932:	e7ed      	b.n	8017910 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017934:	680c      	ldr	r4, [r1, #0]
 8017936:	b17c      	cbz	r4, 8017958 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017938:	7824      	ldrb	r4, [r4, #0]
 801793a:	e7e7      	b.n	801790c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801793c:	2c2d      	cmp	r4, #45	; 0x2d
 801793e:	d102      	bne.n	8017946 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8017940:	f883 9000 	strb.w	r9, [r3]
 8017944:	e7ea      	b.n	801791c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017946:	2c23      	cmp	r4, #35	; 0x23
 8017948:	d107      	bne.n	801795a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801794a:	f888 9000 	strb.w	r9, [r8]
 801794e:	e7e5      	b.n	801791c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017950:	680c      	ldr	r4, [r1, #0]
 8017952:	b10c      	cbz	r4, 8017958 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017954:	7824      	ldrb	r4, [r4, #0]
 8017956:	e7db      	b.n	8017910 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017958:	2400      	movs	r4, #0
 801795a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801795e:	2b09      	cmp	r3, #9
 8017960:	d901      	bls.n	8017966 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8017962:	2c2a      	cmp	r4, #42	; 0x2a
 8017964:	d122      	bne.n	80179ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017966:	2301      	movs	r3, #1
 8017968:	2c30      	cmp	r4, #48	; 0x30
 801796a:	f88e 3000 	strb.w	r3, [lr]
 801796e:	d10d      	bne.n	801798c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8017970:	f88c 3000 	strb.w	r3, [ip]
 8017974:	6803      	ldr	r3, [r0, #0]
 8017976:	b10b      	cbz	r3, 801797c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8017978:	3302      	adds	r3, #2
 801797a:	6003      	str	r3, [r0, #0]
 801797c:	680b      	ldr	r3, [r1, #0]
 801797e:	b10b      	cbz	r3, 8017984 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8017980:	3301      	adds	r3, #1
 8017982:	600b      	str	r3, [r1, #0]
 8017984:	6803      	ldr	r3, [r0, #0]
 8017986:	2b00      	cmp	r3, #0
 8017988:	d02f      	beq.n	80179ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801798a:	881c      	ldrh	r4, [r3, #0]
 801798c:	2c2a      	cmp	r4, #42	; 0x2a
 801798e:	d135      	bne.n	80179fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8017990:	f04f 33ff 	mov.w	r3, #4294967295
 8017994:	6033      	str	r3, [r6, #0]
 8017996:	6803      	ldr	r3, [r0, #0]
 8017998:	b10b      	cbz	r3, 801799e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801799a:	3302      	adds	r3, #2
 801799c:	6003      	str	r3, [r0, #0]
 801799e:	680b      	ldr	r3, [r1, #0]
 80179a0:	b10b      	cbz	r3, 80179a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 80179a2:	3301      	adds	r3, #1
 80179a4:	600b      	str	r3, [r1, #0]
 80179a6:	6803      	ldr	r3, [r0, #0]
 80179a8:	b31b      	cbz	r3, 80179f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 80179aa:	881c      	ldrh	r4, [r3, #0]
 80179ac:	2c2e      	cmp	r4, #46	; 0x2e
 80179ae:	d11a      	bne.n	80179e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80179b0:	2301      	movs	r3, #1
 80179b2:	703b      	strb	r3, [r7, #0]
 80179b4:	6803      	ldr	r3, [r0, #0]
 80179b6:	b10b      	cbz	r3, 80179bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 80179b8:	3302      	adds	r3, #2
 80179ba:	6003      	str	r3, [r0, #0]
 80179bc:	680b      	ldr	r3, [r1, #0]
 80179be:	b10b      	cbz	r3, 80179c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 80179c0:	3301      	adds	r3, #1
 80179c2:	600b      	str	r3, [r1, #0]
 80179c4:	6803      	ldr	r3, [r0, #0]
 80179c6:	2b00      	cmp	r3, #0
 80179c8:	d036      	beq.n	8017a38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 80179ca:	881b      	ldrh	r3, [r3, #0]
 80179cc:	2b2a      	cmp	r3, #42	; 0x2a
 80179ce:	d137      	bne.n	8017a40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80179d0:	f04f 33ff 	mov.w	r3, #4294967295
 80179d4:	602b      	str	r3, [r5, #0]
 80179d6:	6803      	ldr	r3, [r0, #0]
 80179d8:	b10b      	cbz	r3, 80179de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 80179da:	3302      	adds	r3, #2
 80179dc:	6003      	str	r3, [r0, #0]
 80179de:	680b      	ldr	r3, [r1, #0]
 80179e0:	b10b      	cbz	r3, 80179e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80179e2:	3301      	adds	r3, #1
 80179e4:	600b      	str	r3, [r1, #0]
 80179e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80179ea:	680c      	ldr	r4, [r1, #0]
 80179ec:	b134      	cbz	r4, 80179fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80179ee:	7824      	ldrb	r4, [r4, #0]
 80179f0:	e7cc      	b.n	801798c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80179f2:	680b      	ldr	r3, [r1, #0]
 80179f4:	2b00      	cmp	r3, #0
 80179f6:	d0f6      	beq.n	80179e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80179f8:	781c      	ldrb	r4, [r3, #0]
 80179fa:	e7d7      	b.n	80179ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80179fc:	2300      	movs	r3, #0
 80179fe:	6033      	str	r3, [r6, #0]
 8017a00:	220a      	movs	r2, #10
 8017a02:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8017a06:	fa1f f38c 	uxth.w	r3, ip
 8017a0a:	2b09      	cmp	r3, #9
 8017a0c:	d8ce      	bhi.n	80179ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017a0e:	6833      	ldr	r3, [r6, #0]
 8017a10:	fb02 c303 	mla	r3, r2, r3, ip
 8017a14:	6033      	str	r3, [r6, #0]
 8017a16:	6803      	ldr	r3, [r0, #0]
 8017a18:	b10b      	cbz	r3, 8017a1e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8017a1a:	3302      	adds	r3, #2
 8017a1c:	6003      	str	r3, [r0, #0]
 8017a1e:	680b      	ldr	r3, [r1, #0]
 8017a20:	b10b      	cbz	r3, 8017a26 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8017a22:	3301      	adds	r3, #1
 8017a24:	600b      	str	r3, [r1, #0]
 8017a26:	6803      	ldr	r3, [r0, #0]
 8017a28:	b10b      	cbz	r3, 8017a2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8017a2a:	881c      	ldrh	r4, [r3, #0]
 8017a2c:	e7e9      	b.n	8017a02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017a2e:	680c      	ldr	r4, [r1, #0]
 8017a30:	2c00      	cmp	r4, #0
 8017a32:	d0e6      	beq.n	8017a02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017a34:	7824      	ldrb	r4, [r4, #0]
 8017a36:	e7e4      	b.n	8017a02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017a38:	680b      	ldr	r3, [r1, #0]
 8017a3a:	b10b      	cbz	r3, 8017a40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8017a3c:	781b      	ldrb	r3, [r3, #0]
 8017a3e:	e7c5      	b.n	80179cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8017a40:	2200      	movs	r2, #0
 8017a42:	602a      	str	r2, [r5, #0]
 8017a44:	240a      	movs	r4, #10
 8017a46:	3b30      	subs	r3, #48	; 0x30
 8017a48:	b29e      	uxth	r6, r3
 8017a4a:	2e09      	cmp	r6, #9
 8017a4c:	682a      	ldr	r2, [r5, #0]
 8017a4e:	d813      	bhi.n	8017a78 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8017a50:	fb04 3302 	mla	r3, r4, r2, r3
 8017a54:	602b      	str	r3, [r5, #0]
 8017a56:	6803      	ldr	r3, [r0, #0]
 8017a58:	b10b      	cbz	r3, 8017a5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8017a5a:	3302      	adds	r3, #2
 8017a5c:	6003      	str	r3, [r0, #0]
 8017a5e:	680b      	ldr	r3, [r1, #0]
 8017a60:	b10b      	cbz	r3, 8017a66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8017a62:	3301      	adds	r3, #1
 8017a64:	600b      	str	r3, [r1, #0]
 8017a66:	6803      	ldr	r3, [r0, #0]
 8017a68:	b10b      	cbz	r3, 8017a6e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8017a6a:	881b      	ldrh	r3, [r3, #0]
 8017a6c:	e7eb      	b.n	8017a46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017a6e:	680b      	ldr	r3, [r1, #0]
 8017a70:	2b00      	cmp	r3, #0
 8017a72:	d0e8      	beq.n	8017a46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017a74:	781b      	ldrb	r3, [r3, #0]
 8017a76:	e7e6      	b.n	8017a46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017a78:	2a06      	cmp	r2, #6
 8017a7a:	bfa8      	it	ge
 8017a7c:	2206      	movge	r2, #6
 8017a7e:	602a      	str	r2, [r5, #0]
 8017a80:	e7b1      	b.n	80179e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08017a82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8017a82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a86:	b0a3      	sub	sp, #140	; 0x8c
 8017a88:	2600      	movs	r6, #0
 8017a8a:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8017a8e:	4607      	mov	r7, r0
 8017a90:	4688      	mov	r8, r1
 8017a92:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8017a96:	4631      	mov	r1, r6
 8017a98:	2242      	movs	r2, #66	; 0x42
 8017a9a:	4648      	mov	r0, r9
 8017a9c:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8017a9e:	960d      	str	r6, [sp, #52]	; 0x34
 8017aa0:	f010 fd53 	bl	802854a <memset>
 8017aa4:	b15f      	cbz	r7, 8017abe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8017aa6:	f108 3aff 	add.w	sl, r8, #4294967295
 8017aaa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017aac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017aae:	b152      	cbz	r2, 8017ac6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8017ab0:	8812      	ldrh	r2, [r2, #0]
 8017ab2:	b10a      	cbz	r2, 8017ab8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017ab4:	459a      	cmp	sl, r3
 8017ab6:	dc2e      	bgt.n	8017b16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8017ab8:	2200      	movs	r2, #0
 8017aba:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017abe:	4638      	mov	r0, r7
 8017ac0:	b023      	add	sp, #140	; 0x8c
 8017ac2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017ac6:	9a08      	ldr	r2, [sp, #32]
 8017ac8:	2a00      	cmp	r2, #0
 8017aca:	d0f5      	beq.n	8017ab8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017acc:	7812      	ldrb	r2, [r2, #0]
 8017ace:	e7f0      	b.n	8017ab2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8017ad0:	2d00      	cmp	r5, #0
 8017ad2:	d0ea      	beq.n	8017aaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017ad4:	782a      	ldrb	r2, [r5, #0]
 8017ad6:	b142      	cbz	r2, 8017aea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8017ad8:	2a25      	cmp	r2, #37	; 0x25
 8017ada:	d001      	beq.n	8017ae0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8017adc:	459a      	cmp	sl, r3
 8017ade:	dc08      	bgt.n	8017af2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8017ae0:	f1bb 0f00 	cmp.w	fp, #0
 8017ae4:	d121      	bne.n	8017b2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8017ae6:	2d00      	cmp	r5, #0
 8017ae8:	d0df      	beq.n	8017aaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017aea:	782a      	ldrb	r2, [r5, #0]
 8017aec:	f04f 0b00 	mov.w	fp, #0
 8017af0:	e01d      	b.n	8017b2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8017af2:	f1bb 0f00 	cmp.w	fp, #0
 8017af6:	d078      	beq.n	8017bea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8017af8:	f8bb 2000 	ldrh.w	r2, [fp]
 8017afc:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017b00:	f1bb 0f00 	cmp.w	fp, #0
 8017b04:	d002      	beq.n	8017b0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8017b06:	f10b 0202 	add.w	r2, fp, #2
 8017b0a:	9209      	str	r2, [sp, #36]	; 0x24
 8017b0c:	b10d      	cbz	r5, 8017b12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8017b0e:	3501      	adds	r5, #1
 8017b10:	9508      	str	r5, [sp, #32]
 8017b12:	3301      	adds	r3, #1
 8017b14:	930d      	str	r3, [sp, #52]	; 0x34
 8017b16:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8017b1a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017b1c:	f1bb 0f00 	cmp.w	fp, #0
 8017b20:	d0d6      	beq.n	8017ad0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8017b22:	f8bb 2000 	ldrh.w	r2, [fp]
 8017b26:	2a00      	cmp	r2, #0
 8017b28:	d1d6      	bne.n	8017ad8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8017b2a:	f8bb 2000 	ldrh.w	r2, [fp]
 8017b2e:	2a00      	cmp	r2, #0
 8017b30:	d0bb      	beq.n	8017aaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017b32:	459a      	cmp	sl, r3
 8017b34:	ddb9      	ble.n	8017aaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017b36:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8017b3a:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8017b3e:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8017b42:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8017b46:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8017b4a:	960e      	str	r6, [sp, #56]	; 0x38
 8017b4c:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8017b50:	960f      	str	r6, [sp, #60]	; 0x3c
 8017b52:	f1bb 0f00 	cmp.w	fp, #0
 8017b56:	d002      	beq.n	8017b5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8017b58:	f10b 0302 	add.w	r3, fp, #2
 8017b5c:	9309      	str	r3, [sp, #36]	; 0x24
 8017b5e:	b10d      	cbz	r5, 8017b64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8017b60:	1c6b      	adds	r3, r5, #1
 8017b62:	9308      	str	r3, [sp, #32]
 8017b64:	ab0f      	add	r3, sp, #60	; 0x3c
 8017b66:	9305      	str	r3, [sp, #20]
 8017b68:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8017b6c:	9304      	str	r3, [sp, #16]
 8017b6e:	ab0e      	add	r3, sp, #56	; 0x38
 8017b70:	9303      	str	r3, [sp, #12]
 8017b72:	ab0c      	add	r3, sp, #48	; 0x30
 8017b74:	9302      	str	r3, [sp, #8]
 8017b76:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8017b7a:	9301      	str	r3, [sp, #4]
 8017b7c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8017b80:	9300      	str	r3, [sp, #0]
 8017b82:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8017b86:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8017b8a:	a908      	add	r1, sp, #32
 8017b8c:	a809      	add	r0, sp, #36	; 0x24
 8017b8e:	f7ff fea8 	bl	80178e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8017b92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017b94:	2b00      	cmp	r3, #0
 8017b96:	bfbe      	ittt	lt
 8017b98:	6823      	ldrlt	r3, [r4, #0]
 8017b9a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8017b9e:	930e      	strlt	r3, [sp, #56]	; 0x38
 8017ba0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017ba2:	bfb8      	it	lt
 8017ba4:	3404      	addlt	r4, #4
 8017ba6:	2b00      	cmp	r3, #0
 8017ba8:	bfb8      	it	lt
 8017baa:	6823      	ldrlt	r3, [r4, #0]
 8017bac:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017bb0:	bfbe      	ittt	lt
 8017bb2:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8017bb6:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8017bb8:	3404      	addlt	r4, #4
 8017bba:	b1d9      	cbz	r1, 8017bf4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8017bbc:	880b      	ldrh	r3, [r1, #0]
 8017bbe:	2b69      	cmp	r3, #105	; 0x69
 8017bc0:	d01f      	beq.n	8017c02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017bc2:	d82f      	bhi.n	8017c24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8017bc4:	2b58      	cmp	r3, #88	; 0x58
 8017bc6:	d01c      	beq.n	8017c02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017bc8:	d818      	bhi.n	8017bfc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8017bca:	2b25      	cmp	r3, #37	; 0x25
 8017bcc:	d034      	beq.n	8017c38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8017bce:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8017bd2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017bd4:	f1bb 0f00 	cmp.w	fp, #0
 8017bd8:	f000 80b8 	beq.w	8017d4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8017bdc:	f8bb 5000 	ldrh.w	r5, [fp]
 8017be0:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8017be4:	3301      	adds	r3, #1
 8017be6:	930d      	str	r3, [sp, #52]	; 0x34
 8017be8:	e029      	b.n	8017c3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8017bea:	b10d      	cbz	r5, 8017bf0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8017bec:	782a      	ldrb	r2, [r5, #0]
 8017bee:	e785      	b.n	8017afc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8017bf0:	462a      	mov	r2, r5
 8017bf2:	e783      	b.n	8017afc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8017bf4:	2a00      	cmp	r2, #0
 8017bf6:	d0ea      	beq.n	8017bce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8017bf8:	7813      	ldrb	r3, [r2, #0]
 8017bfa:	e7e0      	b.n	8017bbe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8017bfc:	3b63      	subs	r3, #99	; 0x63
 8017bfe:	2b01      	cmp	r3, #1
 8017c00:	d8e5      	bhi.n	8017bce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8017c02:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8017c06:	b329      	cbz	r1, 8017c54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8017c08:	880b      	ldrh	r3, [r1, #0]
 8017c0a:	2b69      	cmp	r3, #105	; 0x69
 8017c0c:	d063      	beq.n	8017cd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8017c0e:	d825      	bhi.n	8017c5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8017c10:	2b63      	cmp	r3, #99	; 0x63
 8017c12:	d038      	beq.n	8017c86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8017c14:	2b64      	cmp	r3, #100	; 0x64
 8017c16:	d05e      	beq.n	8017cd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8017c18:	2b58      	cmp	r3, #88	; 0x58
 8017c1a:	d07b      	beq.n	8017d14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8017c1c:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8017c20:	4625      	mov	r5, r4
 8017c22:	e036      	b.n	8017c92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017c24:	2b73      	cmp	r3, #115	; 0x73
 8017c26:	d0ec      	beq.n	8017c02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017c28:	d802      	bhi.n	8017c30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8017c2a:	2b6f      	cmp	r3, #111	; 0x6f
 8017c2c:	d1cf      	bne.n	8017bce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8017c2e:	e7e8      	b.n	8017c02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017c30:	2b75      	cmp	r3, #117	; 0x75
 8017c32:	d0e6      	beq.n	8017c02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017c34:	2b78      	cmp	r3, #120	; 0x78
 8017c36:	e7f9      	b.n	8017c2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8017c38:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017c3a:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8017c3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017c40:	b10b      	cbz	r3, 8017c46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8017c42:	3302      	adds	r3, #2
 8017c44:	9309      	str	r3, [sp, #36]	; 0x24
 8017c46:	9b08      	ldr	r3, [sp, #32]
 8017c48:	2b00      	cmp	r3, #0
 8017c4a:	f43f af2e 	beq.w	8017aaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017c4e:	3301      	adds	r3, #1
 8017c50:	9308      	str	r3, [sp, #32]
 8017c52:	e72a      	b.n	8017aaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017c54:	2a00      	cmp	r2, #0
 8017c56:	d0e1      	beq.n	8017c1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8017c58:	7813      	ldrb	r3, [r2, #0]
 8017c5a:	e7d6      	b.n	8017c0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8017c5c:	2b73      	cmp	r3, #115	; 0x73
 8017c5e:	d036      	beq.n	8017cce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8017c60:	d807      	bhi.n	8017c72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8017c62:	2b6f      	cmp	r3, #111	; 0x6f
 8017c64:	d1da      	bne.n	8017c1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8017c66:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017c68:	1d25      	adds	r5, r4, #4
 8017c6a:	eba8 0202 	sub.w	r2, r8, r2
 8017c6e:	2308      	movs	r3, #8
 8017c70:	e04a      	b.n	8017d08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8017c72:	2b75      	cmp	r3, #117	; 0x75
 8017c74:	d043      	beq.n	8017cfe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8017c76:	2b78      	cmp	r3, #120	; 0x78
 8017c78:	d1d0      	bne.n	8017c1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8017c7a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017c7c:	1d25      	adds	r5, r4, #4
 8017c7e:	eba8 0202 	sub.w	r2, r8, r2
 8017c82:	2310      	movs	r3, #16
 8017c84:	e040      	b.n	8017d08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8017c86:	6823      	ldr	r3, [r4, #0]
 8017c88:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8017c8c:	1d25      	adds	r5, r4, #4
 8017c8e:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8017c92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017c94:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8017c98:	2b00      	cmp	r3, #0
 8017c9a:	d052      	beq.n	8017d42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8017c9c:	881a      	ldrh	r2, [r3, #0]
 8017c9e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8017ca2:	a80d      	add	r0, sp, #52	; 0x34
 8017ca4:	9005      	str	r0, [sp, #20]
 8017ca6:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8017caa:	9004      	str	r0, [sp, #16]
 8017cac:	980e      	ldr	r0, [sp, #56]	; 0x38
 8017cae:	9003      	str	r0, [sp, #12]
 8017cb0:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8017cb4:	9002      	str	r0, [sp, #8]
 8017cb6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017cb8:	9001      	str	r0, [sp, #4]
 8017cba:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8017cbe:	9000      	str	r0, [sp, #0]
 8017cc0:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8017cc4:	a810      	add	r0, sp, #64	; 0x40
 8017cc6:	f7ff fd49 	bl	801775c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8017cca:	462c      	mov	r4, r5
 8017ccc:	e7b7      	b.n	8017c3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8017cce:	6823      	ldr	r3, [r4, #0]
 8017cd0:	1d25      	adds	r5, r4, #4
 8017cd2:	9310      	str	r3, [sp, #64]	; 0x40
 8017cd4:	e7dd      	b.n	8017c92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017cd6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017cd8:	6820      	ldr	r0, [r4, #0]
 8017cda:	eba8 0202 	sub.w	r2, r8, r2
 8017cde:	230a      	movs	r3, #10
 8017ce0:	b292      	uxth	r2, r2
 8017ce2:	4649      	mov	r1, r9
 8017ce4:	f7ff fcf0 	bl	80176c8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8017ce8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8017cec:	2b2d      	cmp	r3, #45	; 0x2d
 8017cee:	f104 0504 	add.w	r5, r4, #4
 8017cf2:	d1ce      	bne.n	8017c92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017cf4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017cf8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017cfa:	3302      	adds	r3, #2
 8017cfc:	e7e9      	b.n	8017cd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8017cfe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017d00:	1d25      	adds	r5, r4, #4
 8017d02:	eba8 0202 	sub.w	r2, r8, r2
 8017d06:	230a      	movs	r3, #10
 8017d08:	b292      	uxth	r2, r2
 8017d0a:	4649      	mov	r1, r9
 8017d0c:	6820      	ldr	r0, [r4, #0]
 8017d0e:	f7ff fd07 	bl	8017720 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8017d12:	e7be      	b.n	8017c92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017d14:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017d16:	6820      	ldr	r0, [r4, #0]
 8017d18:	eba8 0202 	sub.w	r2, r8, r2
 8017d1c:	b292      	uxth	r2, r2
 8017d1e:	2310      	movs	r3, #16
 8017d20:	4649      	mov	r1, r9
 8017d22:	f7ff fcfd 	bl	8017720 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8017d26:	1d25      	adds	r5, r4, #4
 8017d28:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8017d2c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8017d30:	2b00      	cmp	r3, #0
 8017d32:	d0ae      	beq.n	8017c92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017d34:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8017d38:	2919      	cmp	r1, #25
 8017d3a:	d8f7      	bhi.n	8017d2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8017d3c:	3b20      	subs	r3, #32
 8017d3e:	8013      	strh	r3, [r2, #0]
 8017d40:	e7f4      	b.n	8017d2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8017d42:	9a08      	ldr	r2, [sp, #32]
 8017d44:	2a00      	cmp	r2, #0
 8017d46:	d0aa      	beq.n	8017c9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8017d48:	7812      	ldrb	r2, [r2, #0]
 8017d4a:	e7a8      	b.n	8017c9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8017d4c:	2d00      	cmp	r5, #0
 8017d4e:	f43f af47 	beq.w	8017be0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8017d52:	782d      	ldrb	r5, [r5, #0]
 8017d54:	e744      	b.n	8017be0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08017d56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8017d56:	b507      	push	{r0, r1, r2, lr}
 8017d58:	9300      	str	r3, [sp, #0]
 8017d5a:	4613      	mov	r3, r2
 8017d5c:	2200      	movs	r2, #0
 8017d5e:	f7ff fe90 	bl	8017a82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8017d62:	b003      	add	sp, #12
 8017d64:	f85d fb04 	ldr.w	pc, [sp], #4

08017d68 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8017d68:	b40c      	push	{r2, r3}
 8017d6a:	b507      	push	{r0, r1, r2, lr}
 8017d6c:	ab04      	add	r3, sp, #16
 8017d6e:	f853 2b04 	ldr.w	r2, [r3], #4
 8017d72:	9301      	str	r3, [sp, #4]
 8017d74:	f7ff ffef 	bl	8017d56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8017d78:	b003      	add	sp, #12
 8017d7a:	f85d eb04 	ldr.w	lr, [sp], #4
 8017d7e:	b002      	add	sp, #8
 8017d80:	4770      	bx	lr
	...

08017d84 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8017d84:	4b01      	ldr	r3, [pc, #4]	; (8017d8c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8017d86:	6018      	str	r0, [r3, #0]
 8017d88:	4770      	bx	lr
 8017d8a:	bf00      	nop
 8017d8c:	20013824 	.word	0x20013824

08017d90 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8017d90:	4b06      	ldr	r3, [pc, #24]	; (8017dac <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8017d92:	881a      	ldrh	r2, [r3, #0]
 8017d94:	4282      	cmp	r2, r0
 8017d96:	d807      	bhi.n	8017da8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8017d98:	4b05      	ldr	r3, [pc, #20]	; (8017db0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8017d9a:	881b      	ldrh	r3, [r3, #0]
 8017d9c:	4413      	add	r3, r2
 8017d9e:	4298      	cmp	r0, r3
 8017da0:	bfac      	ite	ge
 8017da2:	2000      	movge	r0, #0
 8017da4:	2001      	movlt	r0, #1
 8017da6:	4770      	bx	lr
 8017da8:	2000      	movs	r0, #0
 8017daa:	4770      	bx	lr
 8017dac:	20013844 	.word	0x20013844
 8017db0:	20013848 	.word	0x20013848

08017db4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8017db4:	b508      	push	{r3, lr}
 8017db6:	4601      	mov	r1, r0
 8017db8:	f7ff ffea 	bl	8017d90 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8017dbc:	b118      	cbz	r0, 8017dc6 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8017dbe:	4b02      	ldr	r3, [pc, #8]	; (8017dc8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8017dc0:	681b      	ldr	r3, [r3, #0]
 8017dc2:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8017dc6:	bd08      	pop	{r3, pc}
 8017dc8:	20013828 	.word	0x20013828

08017dcc <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8017dcc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017dce:	4c24      	ldr	r4, [pc, #144]	; (8017e60 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8017dd0:	6823      	ldr	r3, [r4, #0]
 8017dd2:	2b00      	cmp	r3, #0
 8017dd4:	d042      	beq.n	8017e5c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8017dd6:	4a23      	ldr	r2, [pc, #140]	; (8017e64 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8017dd8:	4d23      	ldr	r5, [pc, #140]	; (8017e68 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8017dda:	8811      	ldrh	r1, [r2, #0]
 8017ddc:	f8b5 c000 	ldrh.w	ip, [r5]
 8017de0:	4822      	ldr	r0, [pc, #136]	; (8017e6c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8017de2:	4461      	add	r1, ip
 8017de4:	1c4a      	adds	r2, r1, #1
 8017de6:	f022 0201 	bic.w	r2, r2, #1
 8017dea:	008f      	lsls	r7, r1, #2
 8017dec:	0412      	lsls	r2, r2, #16
 8017dee:	19de      	adds	r6, r3, r7
 8017df0:	0c12      	lsrs	r2, r2, #16
 8017df2:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8017df6:	6006      	str	r6, [r0, #0]
 8017df8:	4e1d      	ldr	r6, [pc, #116]	; (8017e70 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8017dfa:	19da      	adds	r2, r3, r7
 8017dfc:	6032      	str	r2, [r6, #0]
 8017dfe:	220e      	movs	r2, #14
 8017e00:	fb02 f20c 	mul.w	r2, r2, ip
 8017e04:	3203      	adds	r2, #3
 8017e06:	f022 0203 	bic.w	r2, r2, #3
 8017e0a:	443a      	add	r2, r7
 8017e0c:	4f19      	ldr	r7, [pc, #100]	; (8017e74 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8017e0e:	4413      	add	r3, r2
 8017e10:	603b      	str	r3, [r7, #0]
 8017e12:	4f19      	ldr	r7, [pc, #100]	; (8017e78 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8017e14:	2300      	movs	r3, #0
 8017e16:	803b      	strh	r3, [r7, #0]
 8017e18:	4f18      	ldr	r7, [pc, #96]	; (8017e7c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8017e1a:	683f      	ldr	r7, [r7, #0]
 8017e1c:	1aba      	subs	r2, r7, r2
 8017e1e:	4f18      	ldr	r7, [pc, #96]	; (8017e80 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8017e20:	603a      	str	r2, [r7, #0]
 8017e22:	4a18      	ldr	r2, [pc, #96]	; (8017e84 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8017e24:	469c      	mov	ip, r3
 8017e26:	8013      	strh	r3, [r2, #0]
 8017e28:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8017e2c:	428b      	cmp	r3, r1
 8017e2e:	d10d      	bne.n	8017e4c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8017e30:	882d      	ldrh	r5, [r5, #0]
 8017e32:	6830      	ldr	r0, [r6, #0]
 8017e34:	2300      	movs	r3, #0
 8017e36:	240e      	movs	r4, #14
 8017e38:	429d      	cmp	r5, r3
 8017e3a:	d90f      	bls.n	8017e5c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8017e3c:	fb04 0203 	mla	r2, r4, r3, r0
 8017e40:	3301      	adds	r3, #1
 8017e42:	7b11      	ldrb	r1, [r2, #12]
 8017e44:	f36f 1145 	bfc	r1, #5, #1
 8017e48:	7311      	strb	r1, [r2, #12]
 8017e4a:	e7f5      	b.n	8017e38 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8017e4c:	6822      	ldr	r2, [r4, #0]
 8017e4e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8017e52:	6802      	ldr	r2, [r0, #0]
 8017e54:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8017e58:	3301      	adds	r3, #1
 8017e5a:	e7e7      	b.n	8017e2c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8017e5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017e5e:	bf00      	nop
 8017e60:	20013828 	.word	0x20013828
 8017e64:	20013844 	.word	0x20013844
 8017e68:	20013848 	.word	0x20013848
 8017e6c:	2001383c 	.word	0x2001383c
 8017e70:	2001382c 	.word	0x2001382c
 8017e74:	20013834 	.word	0x20013834
 8017e78:	20013846 	.word	0x20013846
 8017e7c:	20013830 	.word	0x20013830
 8017e80:	20013840 	.word	0x20013840
 8017e84:	20013838 	.word	0x20013838

08017e88 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8017e88:	4b06      	ldr	r3, [pc, #24]	; (8017ea4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8017e8a:	681b      	ldr	r3, [r3, #0]
 8017e8c:	b943      	cbnz	r3, 8017ea0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8017e8e:	b139      	cbz	r1, 8017ea0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8017e90:	4b05      	ldr	r3, [pc, #20]	; (8017ea8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8017e92:	801a      	strh	r2, [r3, #0]
 8017e94:	4b05      	ldr	r3, [pc, #20]	; (8017eac <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8017e96:	6019      	str	r1, [r3, #0]
 8017e98:	4b05      	ldr	r3, [pc, #20]	; (8017eb0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8017e9a:	6018      	str	r0, [r3, #0]
 8017e9c:	f7ff bf96 	b.w	8017dcc <_ZN8touchgfx6Bitmap10clearCacheEv>
 8017ea0:	4770      	bx	lr
 8017ea2:	bf00      	nop
 8017ea4:	20013834 	.word	0x20013834
 8017ea8:	20013848 	.word	0x20013848
 8017eac:	20013830 	.word	0x20013830
 8017eb0:	20013828 	.word	0x20013828

08017eb4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8017eb4:	b470      	push	{r4, r5, r6}
 8017eb6:	4c07      	ldr	r4, [pc, #28]	; (8017ed4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8017eb8:	6826      	ldr	r6, [r4, #0]
 8017eba:	4605      	mov	r5, r0
 8017ebc:	4610      	mov	r0, r2
 8017ebe:	9a03      	ldr	r2, [sp, #12]
 8017ec0:	b936      	cbnz	r6, 8017ed0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8017ec2:	6025      	str	r5, [r4, #0]
 8017ec4:	4c04      	ldr	r4, [pc, #16]	; (8017ed8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8017ec6:	8021      	strh	r1, [r4, #0]
 8017ec8:	bc70      	pop	{r4, r5, r6}
 8017eca:	4619      	mov	r1, r3
 8017ecc:	f7ff bfdc 	b.w	8017e88 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8017ed0:	bc70      	pop	{r4, r5, r6}
 8017ed2:	4770      	bx	lr
 8017ed4:	2001384c 	.word	0x2001384c
 8017ed8:	20013844 	.word	0x20013844

08017edc <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8017edc:	4a12      	ldr	r2, [pc, #72]	; (8017f28 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8017ede:	8803      	ldrh	r3, [r0, #0]
 8017ee0:	8812      	ldrh	r2, [r2, #0]
 8017ee2:	4293      	cmp	r3, r2
 8017ee4:	d207      	bcs.n	8017ef6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8017ee6:	4a11      	ldr	r2, [pc, #68]	; (8017f2c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8017ee8:	6812      	ldr	r2, [r2, #0]
 8017eea:	2114      	movs	r1, #20
 8017eec:	fb01 2303 	mla	r3, r1, r3, r2
 8017ef0:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8017ef4:	4770      	bx	lr
 8017ef6:	490e      	ldr	r1, [pc, #56]	; (8017f30 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8017ef8:	8809      	ldrh	r1, [r1, #0]
 8017efa:	4411      	add	r1, r2
 8017efc:	428b      	cmp	r3, r1
 8017efe:	da04      	bge.n	8017f0a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8017f00:	1a9b      	subs	r3, r3, r2
 8017f02:	4a0c      	ldr	r2, [pc, #48]	; (8017f34 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8017f04:	210e      	movs	r1, #14
 8017f06:	6812      	ldr	r2, [r2, #0]
 8017f08:	e7f0      	b.n	8017eec <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8017f0a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8017f0e:	4293      	cmp	r3, r2
 8017f10:	d108      	bne.n	8017f24 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8017f12:	4b09      	ldr	r3, [pc, #36]	; (8017f38 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8017f14:	781b      	ldrb	r3, [r3, #0]
 8017f16:	b91b      	cbnz	r3, 8017f20 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8017f18:	4b08      	ldr	r3, [pc, #32]	; (8017f3c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8017f1a:	f9b3 0000 	ldrsh.w	r0, [r3]
 8017f1e:	4770      	bx	lr
 8017f20:	4b07      	ldr	r3, [pc, #28]	; (8017f40 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8017f22:	e7fa      	b.n	8017f1a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8017f24:	2000      	movs	r0, #0
 8017f26:	4770      	bx	lr
 8017f28:	20013844 	.word	0x20013844
 8017f2c:	2001384c 	.word	0x2001384c
 8017f30:	20013848 	.word	0x20013848
 8017f34:	2001382c 	.word	0x2001382c
 8017f38:	200137b4 	.word	0x200137b4
 8017f3c:	200137b6 	.word	0x200137b6
 8017f40:	200137b8 	.word	0x200137b8

08017f44 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8017f44:	4a12      	ldr	r2, [pc, #72]	; (8017f90 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8017f46:	8803      	ldrh	r3, [r0, #0]
 8017f48:	8812      	ldrh	r2, [r2, #0]
 8017f4a:	4293      	cmp	r3, r2
 8017f4c:	d207      	bcs.n	8017f5e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8017f4e:	4a11      	ldr	r2, [pc, #68]	; (8017f94 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8017f50:	6812      	ldr	r2, [r2, #0]
 8017f52:	2114      	movs	r1, #20
 8017f54:	fb01 2303 	mla	r3, r1, r3, r2
 8017f58:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8017f5c:	4770      	bx	lr
 8017f5e:	490e      	ldr	r1, [pc, #56]	; (8017f98 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8017f60:	8809      	ldrh	r1, [r1, #0]
 8017f62:	4411      	add	r1, r2
 8017f64:	428b      	cmp	r3, r1
 8017f66:	da04      	bge.n	8017f72 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8017f68:	1a9b      	subs	r3, r3, r2
 8017f6a:	4a0c      	ldr	r2, [pc, #48]	; (8017f9c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8017f6c:	210e      	movs	r1, #14
 8017f6e:	6812      	ldr	r2, [r2, #0]
 8017f70:	e7f0      	b.n	8017f54 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8017f72:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8017f76:	4293      	cmp	r3, r2
 8017f78:	d108      	bne.n	8017f8c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8017f7a:	4b09      	ldr	r3, [pc, #36]	; (8017fa0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8017f7c:	781b      	ldrb	r3, [r3, #0]
 8017f7e:	b91b      	cbnz	r3, 8017f88 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8017f80:	4b08      	ldr	r3, [pc, #32]	; (8017fa4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8017f82:	f9b3 0000 	ldrsh.w	r0, [r3]
 8017f86:	4770      	bx	lr
 8017f88:	4b07      	ldr	r3, [pc, #28]	; (8017fa8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8017f8a:	e7fa      	b.n	8017f82 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8017f8c:	2000      	movs	r0, #0
 8017f8e:	4770      	bx	lr
 8017f90:	20013844 	.word	0x20013844
 8017f94:	2001384c 	.word	0x2001384c
 8017f98:	20013848 	.word	0x20013848
 8017f9c:	2001382c 	.word	0x2001382c
 8017fa0:	200137b4 	.word	0x200137b4
 8017fa4:	200137b8 	.word	0x200137b8
 8017fa8:	200137b6 	.word	0x200137b6

08017fac <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8017fac:	b510      	push	{r4, lr}
 8017fae:	4a1f      	ldr	r2, [pc, #124]	; (801802c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8017fb0:	880b      	ldrh	r3, [r1, #0]
 8017fb2:	8812      	ldrh	r2, [r2, #0]
 8017fb4:	4293      	cmp	r3, r2
 8017fb6:	d213      	bcs.n	8017fe0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8017fb8:	4a1d      	ldr	r2, [pc, #116]	; (8018030 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8017fba:	6812      	ldr	r2, [r2, #0]
 8017fbc:	2114      	movs	r1, #20
 8017fbe:	fb01 2303 	mla	r3, r1, r3, r2
 8017fc2:	8a1a      	ldrh	r2, [r3, #16]
 8017fc4:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8017fc8:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8017fcc:	8a5b      	ldrh	r3, [r3, #18]
 8017fce:	8004      	strh	r4, [r0, #0]
 8017fd0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8017fd4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8017fd8:	8041      	strh	r1, [r0, #2]
 8017fda:	8082      	strh	r2, [r0, #4]
 8017fdc:	80c3      	strh	r3, [r0, #6]
 8017fde:	e00e      	b.n	8017ffe <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8017fe0:	4914      	ldr	r1, [pc, #80]	; (8018034 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8017fe2:	8809      	ldrh	r1, [r1, #0]
 8017fe4:	4411      	add	r1, r2
 8017fe6:	428b      	cmp	r3, r1
 8017fe8:	da0a      	bge.n	8018000 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8017fea:	1a9b      	subs	r3, r3, r2
 8017fec:	4a12      	ldr	r2, [pc, #72]	; (8018038 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8017fee:	6812      	ldr	r2, [r2, #0]
 8017ff0:	210e      	movs	r1, #14
 8017ff2:	fb01 2303 	mla	r3, r1, r3, r2
 8017ff6:	681a      	ldr	r2, [r3, #0]
 8017ff8:	6002      	str	r2, [r0, #0]
 8017ffa:	685a      	ldr	r2, [r3, #4]
 8017ffc:	6042      	str	r2, [r0, #4]
 8017ffe:	bd10      	pop	{r4, pc}
 8018000:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018004:	4293      	cmp	r3, r2
 8018006:	d10b      	bne.n	8018020 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8018008:	4b0c      	ldr	r3, [pc, #48]	; (801803c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801800a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801800e:	4b0c      	ldr	r3, [pc, #48]	; (8018040 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8018010:	8081      	strh	r1, [r0, #4]
 8018012:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018016:	80c2      	strh	r2, [r0, #6]
 8018018:	2300      	movs	r3, #0
 801801a:	8003      	strh	r3, [r0, #0]
 801801c:	8043      	strh	r3, [r0, #2]
 801801e:	e7ee      	b.n	8017ffe <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8018020:	2300      	movs	r3, #0
 8018022:	8003      	strh	r3, [r0, #0]
 8018024:	8043      	strh	r3, [r0, #2]
 8018026:	8083      	strh	r3, [r0, #4]
 8018028:	e7d8      	b.n	8017fdc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801802a:	bf00      	nop
 801802c:	20013844 	.word	0x20013844
 8018030:	2001384c 	.word	0x2001384c
 8018034:	20013848 	.word	0x20013848
 8018038:	2001382c 	.word	0x2001382c
 801803c:	200137b0 	.word	0x200137b0
 8018040:	200137b2 	.word	0x200137b2

08018044 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8018044:	4a17      	ldr	r2, [pc, #92]	; (80180a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8018046:	8803      	ldrh	r3, [r0, #0]
 8018048:	8812      	ldrh	r2, [r2, #0]
 801804a:	4293      	cmp	r3, r2
 801804c:	d213      	bcs.n	8018076 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801804e:	4a16      	ldr	r2, [pc, #88]	; (80180a8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8018050:	6812      	ldr	r2, [r2, #0]
 8018052:	2114      	movs	r1, #20
 8018054:	fb01 2303 	mla	r3, r1, r3, r2
 8018058:	8a1a      	ldrh	r2, [r3, #16]
 801805a:	8919      	ldrh	r1, [r3, #8]
 801805c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8018060:	428a      	cmp	r2, r1
 8018062:	db1d      	blt.n	80180a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8018064:	8a58      	ldrh	r0, [r3, #18]
 8018066:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801806a:	895b      	ldrh	r3, [r3, #10]
 801806c:	4298      	cmp	r0, r3
 801806e:	bfac      	ite	ge
 8018070:	2000      	movge	r0, #0
 8018072:	2001      	movlt	r0, #1
 8018074:	4770      	bx	lr
 8018076:	490d      	ldr	r1, [pc, #52]	; (80180ac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8018078:	8809      	ldrh	r1, [r1, #0]
 801807a:	4411      	add	r1, r2
 801807c:	428b      	cmp	r3, r1
 801807e:	da0d      	bge.n	801809c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8018080:	1a9b      	subs	r3, r3, r2
 8018082:	4a0b      	ldr	r2, [pc, #44]	; (80180b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8018084:	6812      	ldr	r2, [r2, #0]
 8018086:	210e      	movs	r1, #14
 8018088:	fb01 2303 	mla	r3, r1, r3, r2
 801808c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8018090:	891a      	ldrh	r2, [r3, #8]
 8018092:	4291      	cmp	r1, r2
 8018094:	db04      	blt.n	80180a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8018096:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801809a:	e7e6      	b.n	801806a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801809c:	2000      	movs	r0, #0
 801809e:	4770      	bx	lr
 80180a0:	2001      	movs	r0, #1
 80180a2:	4770      	bx	lr
 80180a4:	20013844 	.word	0x20013844
 80180a8:	2001384c 	.word	0x2001384c
 80180ac:	20013848 	.word	0x20013848
 80180b0:	2001382c 	.word	0x2001382c

080180b4 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80180b4:	4a12      	ldr	r2, [pc, #72]	; (8018100 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80180b6:	8803      	ldrh	r3, [r0, #0]
 80180b8:	8811      	ldrh	r1, [r2, #0]
 80180ba:	428b      	cmp	r3, r1
 80180bc:	d20b      	bcs.n	80180d6 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80180be:	4a11      	ldr	r2, [pc, #68]	; (8018104 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80180c0:	6812      	ldr	r2, [r2, #0]
 80180c2:	b112      	cbz	r2, 80180ca <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80180c4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80180c8:	b9c0      	cbnz	r0, 80180fc <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80180ca:	4a0f      	ldr	r2, [pc, #60]	; (8018108 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80180cc:	6811      	ldr	r1, [r2, #0]
 80180ce:	2214      	movs	r2, #20
 80180d0:	4353      	muls	r3, r2
 80180d2:	58c8      	ldr	r0, [r1, r3]
 80180d4:	4770      	bx	lr
 80180d6:	4a0d      	ldr	r2, [pc, #52]	; (801810c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80180d8:	8812      	ldrh	r2, [r2, #0]
 80180da:	440a      	add	r2, r1
 80180dc:	4293      	cmp	r3, r2
 80180de:	da04      	bge.n	80180ea <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80180e0:	4a08      	ldr	r2, [pc, #32]	; (8018104 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80180e2:	6812      	ldr	r2, [r2, #0]
 80180e4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80180e8:	4770      	bx	lr
 80180ea:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80180ee:	4293      	cmp	r3, r2
 80180f0:	d103      	bne.n	80180fa <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80180f2:	4b07      	ldr	r3, [pc, #28]	; (8018110 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80180f4:	681b      	ldr	r3, [r3, #0]
 80180f6:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80180f8:	4770      	bx	lr
 80180fa:	2000      	movs	r0, #0
 80180fc:	4770      	bx	lr
 80180fe:	bf00      	nop
 8018100:	20013844 	.word	0x20013844
 8018104:	20013828 	.word	0x20013828
 8018108:	2001384c 	.word	0x2001384c
 801810c:	20013848 	.word	0x20013848
 8018110:	200137bc 	.word	0x200137bc

08018114 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8018114:	4b24      	ldr	r3, [pc, #144]	; (80181a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8018116:	8802      	ldrh	r2, [r0, #0]
 8018118:	8818      	ldrh	r0, [r3, #0]
 801811a:	4282      	cmp	r2, r0
 801811c:	d221      	bcs.n	8018162 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801811e:	4b23      	ldr	r3, [pc, #140]	; (80181ac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8018120:	6819      	ldr	r1, [r3, #0]
 8018122:	2314      	movs	r3, #20
 8018124:	fb03 1302 	mla	r3, r3, r2, r1
 8018128:	6858      	ldr	r0, [r3, #4]
 801812a:	2800      	cmp	r0, #0
 801812c:	d03a      	beq.n	80181a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801812e:	4920      	ldr	r1, [pc, #128]	; (80181b0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8018130:	6809      	ldr	r1, [r1, #0]
 8018132:	2900      	cmp	r1, #0
 8018134:	d036      	beq.n	80181a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8018136:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801813a:	2900      	cmp	r1, #0
 801813c:	d032      	beq.n	80181a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801813e:	891a      	ldrh	r2, [r3, #8]
 8018140:	8958      	ldrh	r0, [r3, #10]
 8018142:	4350      	muls	r0, r2
 8018144:	7c5a      	ldrb	r2, [r3, #17]
 8018146:	7cdb      	ldrb	r3, [r3, #19]
 8018148:	0952      	lsrs	r2, r2, #5
 801814a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801814e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8018152:	2b0b      	cmp	r3, #11
 8018154:	bf18      	it	ne
 8018156:	0040      	lslne	r0, r0, #1
 8018158:	3003      	adds	r0, #3
 801815a:	f020 0003 	bic.w	r0, r0, #3
 801815e:	4408      	add	r0, r1
 8018160:	4770      	bx	lr
 8018162:	4b14      	ldr	r3, [pc, #80]	; (80181b4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8018164:	881b      	ldrh	r3, [r3, #0]
 8018166:	4403      	add	r3, r0
 8018168:	429a      	cmp	r2, r3
 801816a:	da1a      	bge.n	80181a2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801816c:	4b12      	ldr	r3, [pc, #72]	; (80181b8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801816e:	681b      	ldr	r3, [r3, #0]
 8018170:	1a10      	subs	r0, r2, r0
 8018172:	210e      	movs	r1, #14
 8018174:	fb01 3000 	mla	r0, r1, r0, r3
 8018178:	7b03      	ldrb	r3, [r0, #12]
 801817a:	f003 031f 	and.w	r3, r3, #31
 801817e:	2b0b      	cmp	r3, #11
 8018180:	d10b      	bne.n	801819a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8018182:	8903      	ldrh	r3, [r0, #8]
 8018184:	8940      	ldrh	r0, [r0, #10]
 8018186:	4358      	muls	r0, r3
 8018188:	4b09      	ldr	r3, [pc, #36]	; (80181b0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801818a:	6819      	ldr	r1, [r3, #0]
 801818c:	3003      	adds	r0, #3
 801818e:	f020 0303 	bic.w	r3, r0, #3
 8018192:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8018196:	4418      	add	r0, r3
 8018198:	4770      	bx	lr
 801819a:	2b0d      	cmp	r3, #13
 801819c:	d101      	bne.n	80181a2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801819e:	300d      	adds	r0, #13
 80181a0:	4770      	bx	lr
 80181a2:	2000      	movs	r0, #0
 80181a4:	4770      	bx	lr
 80181a6:	bf00      	nop
 80181a8:	20013844 	.word	0x20013844
 80181ac:	2001384c 	.word	0x2001384c
 80181b0:	20013828 	.word	0x20013828
 80181b4:	20013848 	.word	0x20013848
 80181b8:	2001382c 	.word	0x2001382c

080181bc <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80181bc:	b510      	push	{r4, lr}
 80181be:	4a17      	ldr	r2, [pc, #92]	; (801821c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80181c0:	8803      	ldrh	r3, [r0, #0]
 80181c2:	8812      	ldrh	r2, [r2, #0]
 80181c4:	4293      	cmp	r3, r2
 80181c6:	d20c      	bcs.n	80181e2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80181c8:	4a15      	ldr	r2, [pc, #84]	; (8018220 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80181ca:	6812      	ldr	r2, [r2, #0]
 80181cc:	2114      	movs	r1, #20
 80181ce:	fb01 2303 	mla	r3, r1, r3, r2
 80181d2:	7c58      	ldrb	r0, [r3, #17]
 80181d4:	0942      	lsrs	r2, r0, #5
 80181d6:	7cd8      	ldrb	r0, [r3, #19]
 80181d8:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80181dc:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80181e0:	bd10      	pop	{r4, pc}
 80181e2:	4910      	ldr	r1, [pc, #64]	; (8018224 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80181e4:	8809      	ldrh	r1, [r1, #0]
 80181e6:	4411      	add	r1, r2
 80181e8:	428b      	cmp	r3, r1
 80181ea:	da09      	bge.n	8018200 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80181ec:	1a9b      	subs	r3, r3, r2
 80181ee:	4a0e      	ldr	r2, [pc, #56]	; (8018228 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80181f0:	6812      	ldr	r2, [r2, #0]
 80181f2:	210e      	movs	r1, #14
 80181f4:	fb01 2303 	mla	r3, r1, r3, r2
 80181f8:	7b18      	ldrb	r0, [r3, #12]
 80181fa:	f000 001f 	and.w	r0, r0, #31
 80181fe:	e7ef      	b.n	80181e0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8018200:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018204:	4293      	cmp	r3, r2
 8018206:	d106      	bne.n	8018216 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8018208:	f7eb fa04 	bl	8003614 <_ZN8touchgfx3HAL3lcdEv>
 801820c:	6803      	ldr	r3, [r0, #0]
 801820e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018212:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018214:	4718      	bx	r3
 8018216:	2000      	movs	r0, #0
 8018218:	e7e2      	b.n	80181e0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801821a:	bf00      	nop
 801821c:	20013844 	.word	0x20013844
 8018220:	2001384c 	.word	0x2001384c
 8018224:	20013848 	.word	0x20013848
 8018228:	2001382c 	.word	0x2001382c

0801822c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801822c:	2010      	movs	r0, #16
 801822e:	4770      	bx	lr

08018230 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8018230:	2000      	movs	r0, #0
 8018232:	4770      	bx	lr

08018234 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8018234:	4b02      	ldr	r3, [pc, #8]	; (8018240 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8018236:	8818      	ldrh	r0, [r3, #0]
 8018238:	0040      	lsls	r0, r0, #1
 801823a:	b280      	uxth	r0, r0
 801823c:	4770      	bx	lr
 801823e:	bf00      	nop
 8018240:	200137b6 	.word	0x200137b6

08018244 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8018244:	2bff      	cmp	r3, #255	; 0xff
 8018246:	d050      	beq.n	80182ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8018248:	2a0b      	cmp	r2, #11
 801824a:	d04a      	beq.n	80182e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801824c:	d80e      	bhi.n	801826c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801824e:	2a03      	cmp	r2, #3
 8018250:	d03f      	beq.n	80182d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8018252:	d804      	bhi.n	801825e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8018254:	2a01      	cmp	r2, #1
 8018256:	d03e      	beq.n	80182d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8018258:	d93f      	bls.n	80182da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801825a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801825c:	4770      	bx	lr
 801825e:	2a09      	cmp	r2, #9
 8018260:	d03f      	beq.n	80182e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8018262:	d83c      	bhi.n	80182de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8018264:	2a08      	cmp	r2, #8
 8018266:	d03a      	beq.n	80182de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8018268:	2000      	movs	r0, #0
 801826a:	4770      	bx	lr
 801826c:	2a2f      	cmp	r2, #47	; 0x2f
 801826e:	d024      	beq.n	80182ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8018270:	d80d      	bhi.n	801828e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8018272:	2a2d      	cmp	r2, #45	; 0x2d
 8018274:	d014      	beq.n	80182a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8018276:	d826      	bhi.n	80182c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8018278:	2a2c      	cmp	r2, #44	; 0x2c
 801827a:	d1f5      	bne.n	8018268 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801827c:	684b      	ldr	r3, [r1, #4]
 801827e:	781b      	ldrb	r3, [r3, #0]
 8018280:	2b01      	cmp	r3, #1
 8018282:	d018      	beq.n	80182b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8018284:	d323      	bcc.n	80182ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8018286:	2b02      	cmp	r3, #2
 8018288:	d1ee      	bne.n	8018268 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801828a:	6880      	ldr	r0, [r0, #8]
 801828c:	4770      	bx	lr
 801828e:	2a31      	cmp	r2, #49	; 0x31
 8018290:	d004      	beq.n	801829c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8018292:	d328      	bcc.n	80182e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018294:	2a32      	cmp	r2, #50	; 0x32
 8018296:	d026      	beq.n	80182e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018298:	2a33      	cmp	r2, #51	; 0x33
 801829a:	d1e5      	bne.n	8018268 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801829c:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801829e:	4770      	bx	lr
 80182a0:	684b      	ldr	r3, [r1, #4]
 80182a2:	781b      	ldrb	r3, [r3, #0]
 80182a4:	2b01      	cmp	r3, #1
 80182a6:	d004      	beq.n	80182b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80182a8:	d30b      	bcc.n	80182c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80182aa:	2b02      	cmp	r3, #2
 80182ac:	d1dc      	bne.n	8018268 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80182ae:	6900      	ldr	r0, [r0, #16]
 80182b0:	4770      	bx	lr
 80182b2:	6a00      	ldr	r0, [r0, #32]
 80182b4:	4770      	bx	lr
 80182b6:	6980      	ldr	r0, [r0, #24]
 80182b8:	4770      	bx	lr
 80182ba:	684b      	ldr	r3, [r1, #4]
 80182bc:	781b      	ldrb	r3, [r3, #0]
 80182be:	2b00      	cmp	r3, #0
 80182c0:	d1d2      	bne.n	8018268 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80182c2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80182c4:	4770      	bx	lr
 80182c6:	684b      	ldr	r3, [r1, #4]
 80182c8:	781b      	ldrb	r3, [r3, #0]
 80182ca:	2b00      	cmp	r3, #0
 80182cc:	d1cc      	bne.n	8018268 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80182ce:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80182d0:	4770      	bx	lr
 80182d2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80182d4:	4770      	bx	lr
 80182d6:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80182d8:	4770      	bx	lr
 80182da:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80182dc:	4770      	bx	lr
 80182de:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80182e0:	4770      	bx	lr
 80182e2:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80182e4:	4770      	bx	lr
 80182e6:	6e80      	ldr	r0, [r0, #104]	; 0x68
 80182e8:	4770      	bx	lr
 80182ea:	2a0b      	cmp	r2, #11
 80182ec:	d049      	beq.n	8018382 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80182ee:	d80e      	bhi.n	801830e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80182f0:	2a03      	cmp	r2, #3
 80182f2:	d040      	beq.n	8018376 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80182f4:	d804      	bhi.n	8018300 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80182f6:	2a01      	cmp	r2, #1
 80182f8:	d03f      	beq.n	801837a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80182fa:	d940      	bls.n	801837e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80182fc:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80182fe:	4770      	bx	lr
 8018300:	2a09      	cmp	r2, #9
 8018302:	d03e      	beq.n	8018382 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8018304:	d801      	bhi.n	801830a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8018306:	2a08      	cmp	r2, #8
 8018308:	d1ae      	bne.n	8018268 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801830a:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801830c:	4770      	bx	lr
 801830e:	2a2f      	cmp	r2, #47	; 0x2f
 8018310:	d024      	beq.n	801835c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8018312:	d80d      	bhi.n	8018330 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8018314:	2a2d      	cmp	r2, #45	; 0x2d
 8018316:	d014      	beq.n	8018342 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8018318:	d826      	bhi.n	8018368 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801831a:	2a2c      	cmp	r2, #44	; 0x2c
 801831c:	d1a4      	bne.n	8018268 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801831e:	684b      	ldr	r3, [r1, #4]
 8018320:	781b      	ldrb	r3, [r3, #0]
 8018322:	2b01      	cmp	r3, #1
 8018324:	d018      	beq.n	8018358 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8018326:	d324      	bcc.n	8018372 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8018328:	2b02      	cmp	r3, #2
 801832a:	d19d      	bne.n	8018268 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801832c:	68c0      	ldr	r0, [r0, #12]
 801832e:	4770      	bx	lr
 8018330:	2a31      	cmp	r2, #49	; 0x31
 8018332:	d004      	beq.n	801833e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8018334:	d327      	bcc.n	8018386 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8018336:	2a32      	cmp	r2, #50	; 0x32
 8018338:	d025      	beq.n	8018386 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801833a:	2a33      	cmp	r2, #51	; 0x33
 801833c:	d194      	bne.n	8018268 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801833e:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8018340:	4770      	bx	lr
 8018342:	684b      	ldr	r3, [r1, #4]
 8018344:	781b      	ldrb	r3, [r3, #0]
 8018346:	2b01      	cmp	r3, #1
 8018348:	d004      	beq.n	8018354 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801834a:	d30b      	bcc.n	8018364 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801834c:	2b02      	cmp	r3, #2
 801834e:	d18b      	bne.n	8018268 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018350:	6940      	ldr	r0, [r0, #20]
 8018352:	4770      	bx	lr
 8018354:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8018356:	4770      	bx	lr
 8018358:	69c0      	ldr	r0, [r0, #28]
 801835a:	4770      	bx	lr
 801835c:	684b      	ldr	r3, [r1, #4]
 801835e:	781b      	ldrb	r3, [r3, #0]
 8018360:	2b00      	cmp	r3, #0
 8018362:	d181      	bne.n	8018268 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018364:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8018366:	4770      	bx	lr
 8018368:	684b      	ldr	r3, [r1, #4]
 801836a:	781b      	ldrb	r3, [r3, #0]
 801836c:	2b00      	cmp	r3, #0
 801836e:	f47f af7b 	bne.w	8018268 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018372:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8018374:	4770      	bx	lr
 8018376:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8018378:	4770      	bx	lr
 801837a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801837c:	4770      	bx	lr
 801837e:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8018380:	4770      	bx	lr
 8018382:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8018384:	4770      	bx	lr
 8018386:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8018388:	4770      	bx	lr

0801838a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801838a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801838e:	b087      	sub	sp, #28
 8018390:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018392:	9205      	str	r2, [sp, #20]
 8018394:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018398:	9202      	str	r2, [sp, #8]
 801839a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801839e:	9101      	str	r1, [sp, #4]
 80183a0:	6841      	ldr	r1, [r0, #4]
 80183a2:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80183a6:	fb01 2404 	mla	r4, r1, r4, r2
 80183aa:	6802      	ldr	r2, [r0, #0]
 80183ac:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80183b0:	f8de 2000 	ldr.w	r2, [lr]
 80183b4:	9203      	str	r2, [sp, #12]
 80183b6:	f8de 2004 	ldr.w	r2, [lr, #4]
 80183ba:	3204      	adds	r2, #4
 80183bc:	9204      	str	r2, [sp, #16]
 80183be:	9a02      	ldr	r2, [sp, #8]
 80183c0:	43d6      	mvns	r6, r2
 80183c2:	b2f6      	uxtb	r6, r6
 80183c4:	9a01      	ldr	r2, [sp, #4]
 80183c6:	2a00      	cmp	r2, #0
 80183c8:	dc03      	bgt.n	80183d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80183ca:	9a05      	ldr	r2, [sp, #20]
 80183cc:	2a00      	cmp	r2, #0
 80183ce:	f340 8129 	ble.w	8018624 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80183d2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80183d4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80183d8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80183dc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80183e0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80183e2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80183e6:	2b00      	cmp	r3, #0
 80183e8:	dd0e      	ble.n	8018408 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80183ea:	1408      	asrs	r0, r1, #16
 80183ec:	d405      	bmi.n	80183fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80183ee:	4560      	cmp	r0, ip
 80183f0:	da03      	bge.n	80183fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80183f2:	1410      	asrs	r0, r2, #16
 80183f4:	d401      	bmi.n	80183fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80183f6:	42b8      	cmp	r0, r7
 80183f8:	db07      	blt.n	801840a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80183fa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80183fc:	4401      	add	r1, r0
 80183fe:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018400:	3b01      	subs	r3, #1
 8018402:	4402      	add	r2, r0
 8018404:	3402      	adds	r4, #2
 8018406:	e7ee      	b.n	80183e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018408:	d071      	beq.n	80184ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801840a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801840c:	1e58      	subs	r0, r3, #1
 801840e:	fb05 1500 	mla	r5, r5, r0, r1
 8018412:	142d      	asrs	r5, r5, #16
 8018414:	d45f      	bmi.n	80184d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018416:	4565      	cmp	r5, ip
 8018418:	da5d      	bge.n	80184d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801841a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801841c:	fb05 2000 	mla	r0, r5, r0, r2
 8018420:	1400      	asrs	r0, r0, #16
 8018422:	d458      	bmi.n	80184d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018424:	42b8      	cmp	r0, r7
 8018426:	da56      	bge.n	80184d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018428:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801842c:	4699      	mov	r9, r3
 801842e:	46a2      	mov	sl, r4
 8018430:	f1b9 0f00 	cmp.w	r9, #0
 8018434:	dd57      	ble.n	80184e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8018436:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801843a:	9803      	ldr	r0, [sp, #12]
 801843c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8018440:	140d      	asrs	r5, r1, #16
 8018442:	fb07 000c 	mla	r0, r7, ip, r0
 8018446:	f109 39ff 	add.w	r9, r9, #4294967295
 801844a:	5d40      	ldrb	r0, [r0, r5]
 801844c:	9d04      	ldr	r5, [sp, #16]
 801844e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018452:	f8ba 5000 	ldrh.w	r5, [sl]
 8018456:	122f      	asrs	r7, r5, #8
 8018458:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801845c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018460:	fb17 f706 	smulbb	r7, r7, r6
 8018464:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8018468:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801846c:	00ed      	lsls	r5, r5, #3
 801846e:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8018472:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8018476:	10c7      	asrs	r7, r0, #3
 8018478:	b2ed      	uxtb	r5, r5
 801847a:	00c0      	lsls	r0, r0, #3
 801847c:	fb18 f806 	smulbb	r8, r8, r6
 8018480:	fb15 f506 	smulbb	r5, r5, r6
 8018484:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018488:	b2c0      	uxtb	r0, r0
 801848a:	fa1f fc8c 	uxth.w	ip, ip
 801848e:	fb07 870b 	mla	r7, r7, fp, r8
 8018492:	fb00 500b 	mla	r0, r0, fp, r5
 8018496:	b280      	uxth	r0, r0
 8018498:	b2bf      	uxth	r7, r7
 801849a:	f10c 0501 	add.w	r5, ip, #1
 801849e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80184a2:	f107 0801 	add.w	r8, r7, #1
 80184a6:	1c45      	adds	r5, r0, #1
 80184a8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80184ac:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80184b0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80184b2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80184b6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80184ba:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80184be:	ea45 0c0c 	orr.w	ip, r5, ip
 80184c2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80184c6:	4401      	add	r1, r0
 80184c8:	9814      	ldr	r0, [sp, #80]	; 0x50
 80184ca:	ea4c 0c08 	orr.w	ip, ip, r8
 80184ce:	f82a cb02 	strh.w	ip, [sl], #2
 80184d2:	4402      	add	r2, r0
 80184d4:	e7ac      	b.n	8018430 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80184d6:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80184da:	f04f 0800 	mov.w	r8, #0
 80184de:	eb03 0008 	add.w	r0, r3, r8
 80184e2:	2800      	cmp	r0, #0
 80184e4:	dc41      	bgt.n	801856a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80184e6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80184ea:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80184ee:	9b01      	ldr	r3, [sp, #4]
 80184f0:	2b00      	cmp	r3, #0
 80184f2:	f340 8097 	ble.w	8018624 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80184f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80184fa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80184fe:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018502:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018504:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018508:	ee31 1a05 	vadd.f32	s2, s2, s10
 801850c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018510:	eef0 6a62 	vmov.f32	s13, s5
 8018514:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018518:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801851c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018520:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8018524:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018528:	eef0 6a43 	vmov.f32	s13, s6
 801852c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018530:	ee12 2a90 	vmov	r2, s5
 8018534:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018538:	fb92 f3f3 	sdiv	r3, r2, r3
 801853c:	ee13 2a10 	vmov	r2, s6
 8018540:	9313      	str	r3, [sp, #76]	; 0x4c
 8018542:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018544:	fb92 f3f3 	sdiv	r3, r2, r3
 8018548:	9314      	str	r3, [sp, #80]	; 0x50
 801854a:	9b01      	ldr	r3, [sp, #4]
 801854c:	9a05      	ldr	r2, [sp, #20]
 801854e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018552:	3b01      	subs	r3, #1
 8018554:	9301      	str	r3, [sp, #4]
 8018556:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801855a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801855c:	eeb0 3a67 	vmov.f32	s6, s15
 8018560:	bf08      	it	eq
 8018562:	4613      	moveq	r3, r2
 8018564:	eef0 2a47 	vmov.f32	s5, s14
 8018568:	e72c      	b.n	80183c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801856a:	140f      	asrs	r7, r1, #16
 801856c:	d453      	bmi.n	8018616 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801856e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018572:	42bd      	cmp	r5, r7
 8018574:	dd4f      	ble.n	8018616 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018576:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801857a:	d44c      	bmi.n	8018616 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801857c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018580:	4560      	cmp	r0, ip
 8018582:	dd48      	ble.n	8018616 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018584:	9803      	ldr	r0, [sp, #12]
 8018586:	b22d      	sxth	r5, r5
 8018588:	fb0c 0505 	mla	r5, ip, r5, r0
 801858c:	5de8      	ldrb	r0, [r5, r7]
 801858e:	9d04      	ldr	r5, [sp, #16]
 8018590:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018594:	f06f 0501 	mvn.w	r5, #1
 8018598:	fb05 fb08 	mul.w	fp, r5, r8
 801859c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80185a0:	f834 500b 	ldrh.w	r5, [r4, fp]
 80185a4:	122f      	asrs	r7, r5, #8
 80185a6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80185aa:	fb17 f706 	smulbb	r7, r7, r6
 80185ae:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80185b2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80185b6:	00ed      	lsls	r5, r5, #3
 80185b8:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80185bc:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80185c0:	10c7      	asrs	r7, r0, #3
 80185c2:	b2ed      	uxtb	r5, r5
 80185c4:	00c0      	lsls	r0, r0, #3
 80185c6:	fb19 f906 	smulbb	r9, r9, r6
 80185ca:	fb15 f506 	smulbb	r5, r5, r6
 80185ce:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80185d2:	b2c0      	uxtb	r0, r0
 80185d4:	fa1f fc8c 	uxth.w	ip, ip
 80185d8:	fb07 970a 	mla	r7, r7, sl, r9
 80185dc:	fb00 500a 	mla	r0, r0, sl, r5
 80185e0:	b2bf      	uxth	r7, r7
 80185e2:	b280      	uxth	r0, r0
 80185e4:	f10c 0501 	add.w	r5, ip, #1
 80185e8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80185ec:	f107 0901 	add.w	r9, r7, #1
 80185f0:	1c45      	adds	r5, r0, #1
 80185f2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80185f6:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80185fa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80185fe:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018602:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018606:	ea45 0c0c 	orr.w	ip, r5, ip
 801860a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801860e:	ea4c 0c09 	orr.w	ip, ip, r9
 8018612:	f824 c00b 	strh.w	ip, [r4, fp]
 8018616:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018618:	4401      	add	r1, r0
 801861a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801861c:	f108 38ff 	add.w	r8, r8, #4294967295
 8018620:	4402      	add	r2, r0
 8018622:	e75c      	b.n	80184de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8018624:	b007      	add	sp, #28
 8018626:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801862a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801862a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801862e:	b085      	sub	sp, #20
 8018630:	4693      	mov	fp, r2
 8018632:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018634:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018636:	6870      	ldr	r0, [r6, #4]
 8018638:	9100      	str	r1, [sp, #0]
 801863a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801863e:	fb00 2404 	mla	r4, r0, r4, r2
 8018642:	6832      	ldr	r2, [r6, #0]
 8018644:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018648:	682a      	ldr	r2, [r5, #0]
 801864a:	9201      	str	r2, [sp, #4]
 801864c:	686a      	ldr	r2, [r5, #4]
 801864e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8018652:	3204      	adds	r2, #4
 8018654:	9202      	str	r2, [sp, #8]
 8018656:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801865a:	9a00      	ldr	r2, [sp, #0]
 801865c:	2a00      	cmp	r2, #0
 801865e:	dc03      	bgt.n	8018668 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018660:	f1bb 0f00 	cmp.w	fp, #0
 8018664:	f340 80a0 	ble.w	80187a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018668:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801866a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801866e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018672:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018676:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018678:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801867c:	2b00      	cmp	r3, #0
 801867e:	dd0c      	ble.n	801869a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018680:	1406      	asrs	r6, r0, #16
 8018682:	d405      	bmi.n	8018690 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018684:	454e      	cmp	r6, r9
 8018686:	da03      	bge.n	8018690 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018688:	1416      	asrs	r6, r2, #16
 801868a:	d401      	bmi.n	8018690 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801868c:	4546      	cmp	r6, r8
 801868e:	db05      	blt.n	801869c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018690:	4470      	add	r0, lr
 8018692:	4462      	add	r2, ip
 8018694:	3b01      	subs	r3, #1
 8018696:	3402      	adds	r4, #2
 8018698:	e7f0      	b.n	801867c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801869a:	d00f      	beq.n	80186bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801869c:	1e5e      	subs	r6, r3, #1
 801869e:	fb0e 0706 	mla	r7, lr, r6, r0
 80186a2:	143f      	asrs	r7, r7, #16
 80186a4:	d541      	bpl.n	801872a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80186a6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80186aa:	4698      	mov	r8, r3
 80186ac:	9603      	str	r6, [sp, #12]
 80186ae:	f1b8 0f00 	cmp.w	r8, #0
 80186b2:	dc59      	bgt.n	8018768 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80186b4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80186b8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80186bc:	9b00      	ldr	r3, [sp, #0]
 80186be:	2b00      	cmp	r3, #0
 80186c0:	dd72      	ble.n	80187a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80186c2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80186c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80186ca:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80186ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80186d0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80186d4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80186d8:	eeb0 6a62 	vmov.f32	s12, s5
 80186dc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80186e0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80186e4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80186e8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80186ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80186f0:	eeb0 6a43 	vmov.f32	s12, s6
 80186f4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80186f8:	ee12 2a90 	vmov	r2, s5
 80186fc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018700:	fb92 fef3 	sdiv	lr, r2, r3
 8018704:	ee13 2a10 	vmov	r2, s6
 8018708:	fb92 fcf3 	sdiv	ip, r2, r3
 801870c:	9b00      	ldr	r3, [sp, #0]
 801870e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018712:	3b01      	subs	r3, #1
 8018714:	9300      	str	r3, [sp, #0]
 8018716:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801871a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801871c:	eeb0 3a67 	vmov.f32	s6, s15
 8018720:	bf08      	it	eq
 8018722:	465b      	moveq	r3, fp
 8018724:	eef0 2a47 	vmov.f32	s5, s14
 8018728:	e797      	b.n	801865a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801872a:	454f      	cmp	r7, r9
 801872c:	dabb      	bge.n	80186a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801872e:	fb0c 2606 	mla	r6, ip, r6, r2
 8018732:	1436      	asrs	r6, r6, #16
 8018734:	d4b7      	bmi.n	80186a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018736:	4546      	cmp	r6, r8
 8018738:	dab5      	bge.n	80186a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801873a:	461e      	mov	r6, r3
 801873c:	46a0      	mov	r8, r4
 801873e:	2e00      	cmp	r6, #0
 8018740:	ddb8      	ble.n	80186b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018742:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8018746:	9901      	ldr	r1, [sp, #4]
 8018748:	1417      	asrs	r7, r2, #16
 801874a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801874e:	fb0a 1707 	mla	r7, sl, r7, r1
 8018752:	9902      	ldr	r1, [sp, #8]
 8018754:	f817 7009 	ldrb.w	r7, [r7, r9]
 8018758:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801875c:	f828 7b02 	strh.w	r7, [r8], #2
 8018760:	4470      	add	r0, lr
 8018762:	4462      	add	r2, ip
 8018764:	3e01      	subs	r6, #1
 8018766:	e7ea      	b.n	801873e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8018768:	ea5f 4920 	movs.w	r9, r0, asr #16
 801876c:	d417      	bmi.n	801879e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801876e:	68ae      	ldr	r6, [r5, #8]
 8018770:	454e      	cmp	r6, r9
 8018772:	dd14      	ble.n	801879e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018774:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8018778:	d411      	bmi.n	801879e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801877a:	68ef      	ldr	r7, [r5, #12]
 801877c:	4557      	cmp	r7, sl
 801877e:	dd0e      	ble.n	801879e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018780:	9f01      	ldr	r7, [sp, #4]
 8018782:	b236      	sxth	r6, r6
 8018784:	fb0a 7606 	mla	r6, sl, r6, r7
 8018788:	9f02      	ldr	r7, [sp, #8]
 801878a:	f816 6009 	ldrb.w	r6, [r6, r9]
 801878e:	f06f 0101 	mvn.w	r1, #1
 8018792:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8018796:	fb01 f608 	mul.w	r6, r1, r8
 801879a:	9903      	ldr	r1, [sp, #12]
 801879c:	538f      	strh	r7, [r1, r6]
 801879e:	4470      	add	r0, lr
 80187a0:	4462      	add	r2, ip
 80187a2:	f108 38ff 	add.w	r8, r8, #4294967295
 80187a6:	e782      	b.n	80186ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80187a8:	b005      	add	sp, #20
 80187aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080187ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80187ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80187b2:	b087      	sub	sp, #28
 80187b4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80187b6:	9205      	str	r2, [sp, #20]
 80187b8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80187bc:	9203      	str	r2, [sp, #12]
 80187be:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80187c2:	9102      	str	r1, [sp, #8]
 80187c4:	6861      	ldr	r1, [r4, #4]
 80187c6:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80187ca:	fb01 2000 	mla	r0, r1, r0, r2
 80187ce:	6822      	ldr	r2, [r4, #0]
 80187d0:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80187d4:	9200      	str	r2, [sp, #0]
 80187d6:	f8dc 2000 	ldr.w	r2, [ip]
 80187da:	9204      	str	r2, [sp, #16]
 80187dc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80187e0:	3204      	adds	r2, #4
 80187e2:	9201      	str	r2, [sp, #4]
 80187e4:	9a03      	ldr	r2, [sp, #12]
 80187e6:	43d5      	mvns	r5, r2
 80187e8:	b2ed      	uxtb	r5, r5
 80187ea:	9a02      	ldr	r2, [sp, #8]
 80187ec:	2a00      	cmp	r2, #0
 80187ee:	dc03      	bgt.n	80187f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80187f0:	9a05      	ldr	r2, [sp, #20]
 80187f2:	2a00      	cmp	r2, #0
 80187f4:	f340 812c 	ble.w	8018a50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80187f8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80187fa:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80187fe:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8018802:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018806:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018808:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801880c:	2b00      	cmp	r3, #0
 801880e:	dd10      	ble.n	8018832 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018810:	140c      	asrs	r4, r1, #16
 8018812:	d405      	bmi.n	8018820 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018814:	4574      	cmp	r4, lr
 8018816:	da03      	bge.n	8018820 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018818:	1414      	asrs	r4, r2, #16
 801881a:	d401      	bmi.n	8018820 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801881c:	42bc      	cmp	r4, r7
 801881e:	db09      	blt.n	8018834 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8018820:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018822:	9800      	ldr	r0, [sp, #0]
 8018824:	4421      	add	r1, r4
 8018826:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018828:	3002      	adds	r0, #2
 801882a:	4422      	add	r2, r4
 801882c:	3b01      	subs	r3, #1
 801882e:	9000      	str	r0, [sp, #0]
 8018830:	e7ec      	b.n	801880c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8018832:	d071      	beq.n	8018918 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8018834:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018836:	1e5c      	subs	r4, r3, #1
 8018838:	fb06 1604 	mla	r6, r6, r4, r1
 801883c:	1436      	asrs	r6, r6, #16
 801883e:	d45d      	bmi.n	80188fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018840:	4576      	cmp	r6, lr
 8018842:	da5b      	bge.n	80188fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018844:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8018846:	fb06 2404 	mla	r4, r6, r4, r2
 801884a:	1424      	asrs	r4, r4, #16
 801884c:	d456      	bmi.n	80188fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801884e:	42bc      	cmp	r4, r7
 8018850:	da54      	bge.n	80188fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018852:	f8dd 9000 	ldr.w	r9, [sp]
 8018856:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801885a:	4698      	mov	r8, r3
 801885c:	f1b8 0f00 	cmp.w	r8, #0
 8018860:	dd54      	ble.n	801890c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8018862:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8018866:	9804      	ldr	r0, [sp, #16]
 8018868:	1414      	asrs	r4, r2, #16
 801886a:	fb07 0404 	mla	r4, r7, r4, r0
 801886e:	140e      	asrs	r6, r1, #16
 8018870:	9801      	ldr	r0, [sp, #4]
 8018872:	f814 e006 	ldrb.w	lr, [r4, r6]
 8018876:	f8b9 4000 	ldrh.w	r4, [r9]
 801887a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801887e:	eb00 0b0e 	add.w	fp, r0, lr
 8018882:	1227      	asrs	r7, r4, #8
 8018884:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8018888:	f89b b001 	ldrb.w	fp, [fp, #1]
 801888c:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8018890:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018892:	fb16 f60a 	smulbb	r6, r6, sl
 8018896:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801889a:	fb07 6705 	mla	r7, r7, r5, r6
 801889e:	10e6      	asrs	r6, r4, #3
 80188a0:	00e4      	lsls	r4, r4, #3
 80188a2:	b2e4      	uxtb	r4, r4
 80188a4:	fb1b fb0a 	smulbb	fp, fp, sl
 80188a8:	fb14 f405 	smulbb	r4, r4, r5
 80188ac:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80188b0:	b2bf      	uxth	r7, r7
 80188b2:	fb06 b605 	mla	r6, r6, r5, fp
 80188b6:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80188ba:	b2b6      	uxth	r6, r6
 80188bc:	fa1f fe8e 	uxth.w	lr, lr
 80188c0:	1c7c      	adds	r4, r7, #1
 80188c2:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80188c6:	f106 0b01 	add.w	fp, r6, #1
 80188ca:	f10e 0401 	add.w	r4, lr, #1
 80188ce:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80188d2:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80188d6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80188da:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80188de:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80188e2:	4327      	orrs	r7, r4
 80188e4:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80188e8:	4401      	add	r1, r0
 80188ea:	9814      	ldr	r0, [sp, #80]	; 0x50
 80188ec:	ea47 070b 	orr.w	r7, r7, fp
 80188f0:	f829 7b02 	strh.w	r7, [r9], #2
 80188f4:	4402      	add	r2, r0
 80188f6:	f108 38ff 	add.w	r8, r8, #4294967295
 80188fa:	e7af      	b.n	801885c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80188fc:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8018900:	f04f 0e00 	mov.w	lr, #0
 8018904:	eb03 040e 	add.w	r4, r3, lr
 8018908:	2c00      	cmp	r4, #0
 801890a:	dc43      	bgt.n	8018994 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801890c:	9a00      	ldr	r2, [sp, #0]
 801890e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018912:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018916:	9300      	str	r3, [sp, #0]
 8018918:	9b02      	ldr	r3, [sp, #8]
 801891a:	2b00      	cmp	r3, #0
 801891c:	f340 8098 	ble.w	8018a50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8018920:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018924:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018928:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801892c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801892e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018932:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018936:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801893a:	eef0 6a62 	vmov.f32	s13, s5
 801893e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018942:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018946:	ee77 2a62 	vsub.f32	s5, s14, s5
 801894a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801894e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018952:	eef0 6a43 	vmov.f32	s13, s6
 8018956:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801895a:	ee12 2a90 	vmov	r2, s5
 801895e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018962:	fb92 f3f3 	sdiv	r3, r2, r3
 8018966:	ee13 2a10 	vmov	r2, s6
 801896a:	9313      	str	r3, [sp, #76]	; 0x4c
 801896c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801896e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018972:	9314      	str	r3, [sp, #80]	; 0x50
 8018974:	9b02      	ldr	r3, [sp, #8]
 8018976:	9a05      	ldr	r2, [sp, #20]
 8018978:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801897c:	3b01      	subs	r3, #1
 801897e:	9302      	str	r3, [sp, #8]
 8018980:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8018984:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018986:	eeb0 3a67 	vmov.f32	s6, s15
 801898a:	bf08      	it	eq
 801898c:	4613      	moveq	r3, r2
 801898e:	eef0 2a47 	vmov.f32	s5, s14
 8018992:	e72a      	b.n	80187ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018994:	140f      	asrs	r7, r1, #16
 8018996:	d454      	bmi.n	8018a42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018998:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801899c:	42be      	cmp	r6, r7
 801899e:	dd50      	ble.n	8018a42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80189a0:	ea5f 4822 	movs.w	r8, r2, asr #16
 80189a4:	d44d      	bmi.n	8018a42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80189a6:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80189aa:	4544      	cmp	r4, r8
 80189ac:	dd49      	ble.n	8018a42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80189ae:	9c04      	ldr	r4, [sp, #16]
 80189b0:	b236      	sxth	r6, r6
 80189b2:	fb08 4606 	mla	r6, r8, r6, r4
 80189b6:	f06f 0001 	mvn.w	r0, #1
 80189ba:	f816 8007 	ldrb.w	r8, [r6, r7]
 80189be:	9c01      	ldr	r4, [sp, #4]
 80189c0:	fb00 fa0e 	mul.w	sl, r0, lr
 80189c4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80189c8:	9800      	ldr	r0, [sp, #0]
 80189ca:	eb04 0b08 	add.w	fp, r4, r8
 80189ce:	f830 400a 	ldrh.w	r4, [r0, sl]
 80189d2:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80189d6:	9801      	ldr	r0, [sp, #4]
 80189d8:	f89b b001 	ldrb.w	fp, [fp, #1]
 80189dc:	f810 8008 	ldrb.w	r8, [r0, r8]
 80189e0:	9800      	ldr	r0, [sp, #0]
 80189e2:	1227      	asrs	r7, r4, #8
 80189e4:	fb16 f609 	smulbb	r6, r6, r9
 80189e8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80189ec:	fb07 6705 	mla	r7, r7, r5, r6
 80189f0:	10e6      	asrs	r6, r4, #3
 80189f2:	00e4      	lsls	r4, r4, #3
 80189f4:	b2e4      	uxtb	r4, r4
 80189f6:	fb1b fb09 	smulbb	fp, fp, r9
 80189fa:	fb14 f405 	smulbb	r4, r4, r5
 80189fe:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018a02:	b2bf      	uxth	r7, r7
 8018a04:	fb06 b605 	mla	r6, r6, r5, fp
 8018a08:	fb08 4809 	mla	r8, r8, r9, r4
 8018a0c:	b2b6      	uxth	r6, r6
 8018a0e:	fa1f f888 	uxth.w	r8, r8
 8018a12:	1c7c      	adds	r4, r7, #1
 8018a14:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8018a18:	f106 0b01 	add.w	fp, r6, #1
 8018a1c:	f108 0401 	add.w	r4, r8, #1
 8018a20:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8018a24:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8018a28:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018a2c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8018a30:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018a34:	4327      	orrs	r7, r4
 8018a36:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018a3a:	ea47 070b 	orr.w	r7, r7, fp
 8018a3e:	f820 700a 	strh.w	r7, [r0, sl]
 8018a42:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018a44:	4401      	add	r1, r0
 8018a46:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018a48:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018a4c:	4402      	add	r2, r0
 8018a4e:	e759      	b.n	8018904 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8018a50:	b007      	add	sp, #28
 8018a52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08018a58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018a58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018a5c:	b085      	sub	sp, #20
 8018a5e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018a62:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018a64:	9203      	str	r2, [sp, #12]
 8018a66:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018a6a:	6870      	ldr	r0, [r6, #4]
 8018a6c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018a6e:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8018a72:	686f      	ldr	r7, [r5, #4]
 8018a74:	9101      	str	r1, [sp, #4]
 8018a76:	fb00 2404 	mla	r4, r0, r4, r2
 8018a7a:	6832      	ldr	r2, [r6, #0]
 8018a7c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018a80:	682a      	ldr	r2, [r5, #0]
 8018a82:	9202      	str	r2, [sp, #8]
 8018a84:	3704      	adds	r7, #4
 8018a86:	9a01      	ldr	r2, [sp, #4]
 8018a88:	2a00      	cmp	r2, #0
 8018a8a:	dc03      	bgt.n	8018a94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018a8c:	9a03      	ldr	r2, [sp, #12]
 8018a8e:	2a00      	cmp	r2, #0
 8018a90:	f340 80cc 	ble.w	8018c2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8018a94:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018a96:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018a9a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018a9e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018aa2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018aa4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018aa8:	2b00      	cmp	r3, #0
 8018aaa:	dd0d      	ble.n	8018ac8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018aac:	1406      	asrs	r6, r0, #16
 8018aae:	d405      	bmi.n	8018abc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018ab0:	454e      	cmp	r6, r9
 8018ab2:	da03      	bge.n	8018abc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018ab4:	1416      	asrs	r6, r2, #16
 8018ab6:	d401      	bmi.n	8018abc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018ab8:	4546      	cmp	r6, r8
 8018aba:	db06      	blt.n	8018aca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018abc:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8018abe:	4460      	add	r0, ip
 8018ac0:	4432      	add	r2, r6
 8018ac2:	3b01      	subs	r3, #1
 8018ac4:	3402      	adds	r4, #2
 8018ac6:	e7ef      	b.n	8018aa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8018ac8:	d00f      	beq.n	8018aea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018aca:	1e5e      	subs	r6, r3, #1
 8018acc:	fb0c 0e06 	mla	lr, ip, r6, r0
 8018ad0:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8018ad4:	d543      	bpl.n	8018b5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8018ad6:	4698      	mov	r8, r3
 8018ad8:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8018adc:	f1b8 0f00 	cmp.w	r8, #0
 8018ae0:	dc71      	bgt.n	8018bc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8018ae2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018ae6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018aea:	9b01      	ldr	r3, [sp, #4]
 8018aec:	2b00      	cmp	r3, #0
 8018aee:	f340 809d 	ble.w	8018c2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8018af2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018af6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018afa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018afe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018b00:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018b04:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018b08:	eeb0 6a62 	vmov.f32	s12, s5
 8018b0c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018b10:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018b14:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018b18:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018b1c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018b20:	eeb0 6a43 	vmov.f32	s12, s6
 8018b24:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018b28:	ee12 2a90 	vmov	r2, s5
 8018b2c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018b30:	fb92 fcf3 	sdiv	ip, r2, r3
 8018b34:	ee13 2a10 	vmov	r2, s6
 8018b38:	fb92 f3f3 	sdiv	r3, r2, r3
 8018b3c:	9312      	str	r3, [sp, #72]	; 0x48
 8018b3e:	9b01      	ldr	r3, [sp, #4]
 8018b40:	9a03      	ldr	r2, [sp, #12]
 8018b42:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018b46:	3b01      	subs	r3, #1
 8018b48:	9301      	str	r3, [sp, #4]
 8018b4a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018b4e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018b50:	eeb0 3a67 	vmov.f32	s6, s15
 8018b54:	bf08      	it	eq
 8018b56:	4613      	moveq	r3, r2
 8018b58:	eef0 2a47 	vmov.f32	s5, s14
 8018b5c:	e793      	b.n	8018a86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8018b5e:	45ce      	cmp	lr, r9
 8018b60:	dab9      	bge.n	8018ad6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018b62:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018b64:	fb01 2606 	mla	r6, r1, r6, r2
 8018b68:	1436      	asrs	r6, r6, #16
 8018b6a:	d4b4      	bmi.n	8018ad6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018b6c:	4546      	cmp	r6, r8
 8018b6e:	dab2      	bge.n	8018ad6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018b70:	4698      	mov	r8, r3
 8018b72:	46a2      	mov	sl, r4
 8018b74:	f1b8 0f00 	cmp.w	r8, #0
 8018b78:	ddb3      	ble.n	8018ae2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018b7a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018b7e:	9902      	ldr	r1, [sp, #8]
 8018b80:	1416      	asrs	r6, r2, #16
 8018b82:	fb09 1606 	mla	r6, r9, r6, r1
 8018b86:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8018b8a:	492a      	ldr	r1, [pc, #168]	; (8018c34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8018b8c:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8018b90:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018b94:	eb07 0b0e 	add.w	fp, r7, lr
 8018b98:	4460      	add	r0, ip
 8018b9a:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8018b9e:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8018ba2:	00f6      	lsls	r6, r6, #3
 8018ba4:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8018ba8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8018bac:	ea49 0606 	orr.w	r6, r9, r6
 8018bb0:	f817 900e 	ldrb.w	r9, [r7, lr]
 8018bb4:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018bb6:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8018bba:	f82a 6b02 	strh.w	r6, [sl], #2
 8018bbe:	440a      	add	r2, r1
 8018bc0:	f108 38ff 	add.w	r8, r8, #4294967295
 8018bc4:	e7d6      	b.n	8018b74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8018bc6:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018bca:	d429      	bmi.n	8018c20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018bcc:	68ae      	ldr	r6, [r5, #8]
 8018bce:	454e      	cmp	r6, r9
 8018bd0:	dd26      	ble.n	8018c20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018bd2:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8018bd6:	d423      	bmi.n	8018c20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018bd8:	68e9      	ldr	r1, [r5, #12]
 8018bda:	4559      	cmp	r1, fp
 8018bdc:	dd20      	ble.n	8018c20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018bde:	9902      	ldr	r1, [sp, #8]
 8018be0:	fa0f fe86 	sxth.w	lr, r6
 8018be4:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8018be8:	f06f 0101 	mvn.w	r1, #1
 8018bec:	f81e e009 	ldrb.w	lr, [lr, r9]
 8018bf0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018bf4:	eb07 060e 	add.w	r6, r7, lr
 8018bf8:	fb01 f908 	mul.w	r9, r1, r8
 8018bfc:	f896 b002 	ldrb.w	fp, [r6, #2]
 8018c00:	7876      	ldrb	r6, [r6, #1]
 8018c02:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8018c06:	00f6      	lsls	r6, r6, #3
 8018c08:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8018c0c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8018c10:	ea4b 0606 	orr.w	r6, fp, r6
 8018c14:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8018c18:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8018c1c:	f82a 6009 	strh.w	r6, [sl, r9]
 8018c20:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018c22:	4460      	add	r0, ip
 8018c24:	440a      	add	r2, r1
 8018c26:	f108 38ff 	add.w	r8, r8, #4294967295
 8018c2a:	e757      	b.n	8018adc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018c2c:	b005      	add	sp, #20
 8018c2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c32:	bf00      	nop
 8018c34:	fffff800 	.word	0xfffff800

08018c38 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018c38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c3c:	b087      	sub	sp, #28
 8018c3e:	468b      	mov	fp, r1
 8018c40:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018c42:	9204      	str	r2, [sp, #16]
 8018c44:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018c48:	9205      	str	r2, [sp, #20]
 8018c4a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8018c4e:	6841      	ldr	r1, [r0, #4]
 8018c50:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8018c54:	fb01 2404 	mla	r4, r1, r4, r2
 8018c58:	6802      	ldr	r2, [r0, #0]
 8018c5a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018c5e:	f8dc 2000 	ldr.w	r2, [ip]
 8018c62:	9201      	str	r2, [sp, #4]
 8018c64:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8018c68:	3204      	adds	r2, #4
 8018c6a:	9202      	str	r2, [sp, #8]
 8018c6c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018c70:	f1bb 0f00 	cmp.w	fp, #0
 8018c74:	dc03      	bgt.n	8018c7e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8018c76:	9a04      	ldr	r2, [sp, #16]
 8018c78:	2a00      	cmp	r2, #0
 8018c7a:	f340 8138 	ble.w	8018eee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8018c7e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018c80:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8018c84:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8018c88:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018c8c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018c8e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018c92:	2b00      	cmp	r3, #0
 8018c94:	dd0e      	ble.n	8018cb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018c96:	1402      	asrs	r2, r0, #16
 8018c98:	d405      	bmi.n	8018ca6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018c9a:	42ba      	cmp	r2, r7
 8018c9c:	da03      	bge.n	8018ca6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018c9e:	140a      	asrs	r2, r1, #16
 8018ca0:	d401      	bmi.n	8018ca6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018ca2:	42b2      	cmp	r2, r6
 8018ca4:	db07      	blt.n	8018cb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018ca6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018ca8:	4410      	add	r0, r2
 8018caa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018cac:	3b01      	subs	r3, #1
 8018cae:	4411      	add	r1, r2
 8018cb0:	3402      	adds	r4, #2
 8018cb2:	e7ee      	b.n	8018c92 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8018cb4:	d019      	beq.n	8018cea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8018cb6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018cb8:	1e5a      	subs	r2, r3, #1
 8018cba:	fb05 0502 	mla	r5, r5, r2, r0
 8018cbe:	142d      	asrs	r5, r5, #16
 8018cc0:	d409      	bmi.n	8018cd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018cc2:	42bd      	cmp	r5, r7
 8018cc4:	da07      	bge.n	8018cd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018cc6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018cc8:	fb05 1202 	mla	r2, r5, r2, r1
 8018ccc:	1412      	asrs	r2, r2, #16
 8018cce:	d402      	bmi.n	8018cd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018cd0:	42b2      	cmp	r2, r6
 8018cd2:	f2c0 80ac 	blt.w	8018e2e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8018cd6:	f04f 0e00 	mov.w	lr, #0
 8018cda:	eb03 020e 	add.w	r2, r3, lr
 8018cde:	2a00      	cmp	r2, #0
 8018ce0:	dc3e      	bgt.n	8018d60 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8018ce2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018ce6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018cea:	f1bb 0f00 	cmp.w	fp, #0
 8018cee:	f340 80fe 	ble.w	8018eee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8018cf2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018cf6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018cfa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018cfe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018d00:	f1bb 0b01 	subs.w	fp, fp, #1
 8018d04:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018d08:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018d0c:	eeb0 6a62 	vmov.f32	s12, s5
 8018d10:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018d14:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018d18:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018d1c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8018d20:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018d24:	eeb0 6a43 	vmov.f32	s12, s6
 8018d28:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018d2c:	ee12 2a90 	vmov	r2, s5
 8018d30:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018d34:	fb92 f3f3 	sdiv	r3, r2, r3
 8018d38:	ee13 2a10 	vmov	r2, s6
 8018d3c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018d40:	9313      	str	r3, [sp, #76]	; 0x4c
 8018d42:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018d44:	fb92 f3f3 	sdiv	r3, r2, r3
 8018d48:	9a04      	ldr	r2, [sp, #16]
 8018d4a:	9314      	str	r3, [sp, #80]	; 0x50
 8018d4c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8018d50:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018d52:	eeb0 3a67 	vmov.f32	s6, s15
 8018d56:	bf08      	it	eq
 8018d58:	4613      	moveq	r3, r2
 8018d5a:	eef0 2a47 	vmov.f32	s5, s14
 8018d5e:	e787      	b.n	8018c70 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8018d60:	1406      	asrs	r6, r0, #16
 8018d62:	d45d      	bmi.n	8018e20 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018d64:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8018d68:	42b5      	cmp	r5, r6
 8018d6a:	dd59      	ble.n	8018e20 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018d6c:	140f      	asrs	r7, r1, #16
 8018d6e:	d457      	bmi.n	8018e20 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018d70:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8018d74:	42ba      	cmp	r2, r7
 8018d76:	dd53      	ble.n	8018e20 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018d78:	9a01      	ldr	r2, [sp, #4]
 8018d7a:	b22d      	sxth	r5, r5
 8018d7c:	fb07 2505 	mla	r5, r7, r5, r2
 8018d80:	5daa      	ldrb	r2, [r5, r6]
 8018d82:	9d02      	ldr	r5, [sp, #8]
 8018d84:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8018d88:	0e2e      	lsrs	r6, r5, #24
 8018d8a:	d049      	beq.n	8018e20 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018d8c:	f06f 0201 	mvn.w	r2, #1
 8018d90:	fb02 f20e 	mul.w	r2, r2, lr
 8018d94:	9203      	str	r2, [sp, #12]
 8018d96:	f834 8002 	ldrh.w	r8, [r4, r2]
 8018d9a:	9a05      	ldr	r2, [sp, #20]
 8018d9c:	4356      	muls	r6, r2
 8018d9e:	1c72      	adds	r2, r6, #1
 8018da0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8018da4:	1212      	asrs	r2, r2, #8
 8018da6:	fa1f f982 	uxth.w	r9, r2
 8018daa:	ea4f 2728 	mov.w	r7, r8, asr #8
 8018dae:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8018db2:	43d2      	mvns	r2, r2
 8018db4:	b2d2      	uxtb	r2, r2
 8018db6:	fb16 f609 	smulbb	r6, r6, r9
 8018dba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018dbe:	fb07 6702 	mla	r7, r7, r2, r6
 8018dc2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8018dc6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8018dca:	b2ed      	uxtb	r5, r5
 8018dcc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018dd0:	fa5f f888 	uxtb.w	r8, r8
 8018dd4:	fb15 f509 	smulbb	r5, r5, r9
 8018dd8:	fb08 5502 	mla	r5, r8, r2, r5
 8018ddc:	b2bf      	uxth	r7, r7
 8018dde:	fb1a fa09 	smulbb	sl, sl, r9
 8018de2:	b2ad      	uxth	r5, r5
 8018de4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018de8:	fb06 a602 	mla	r6, r6, r2, sl
 8018dec:	1c7a      	adds	r2, r7, #1
 8018dee:	f105 0a01 	add.w	sl, r5, #1
 8018df2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018df6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018dfa:	b2b6      	uxth	r6, r6
 8018dfc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018e00:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018e04:	ea4a 0707 	orr.w	r7, sl, r7
 8018e08:	f106 0a01 	add.w	sl, r6, #1
 8018e0c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018e10:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018e14:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018e18:	9a03      	ldr	r2, [sp, #12]
 8018e1a:	ea47 070a 	orr.w	r7, r7, sl
 8018e1e:	52a7      	strh	r7, [r4, r2]
 8018e20:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018e22:	4410      	add	r0, r2
 8018e24:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018e26:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018e2a:	4411      	add	r1, r2
 8018e2c:	e755      	b.n	8018cda <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8018e2e:	f04f 0800 	mov.w	r8, #0
 8018e32:	eba3 0208 	sub.w	r2, r3, r8
 8018e36:	2a00      	cmp	r2, #0
 8018e38:	f77f af53 	ble.w	8018ce2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8018e3c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8018e40:	9f01      	ldr	r7, [sp, #4]
 8018e42:	140a      	asrs	r2, r1, #16
 8018e44:	1405      	asrs	r5, r0, #16
 8018e46:	fb06 7202 	mla	r2, r6, r2, r7
 8018e4a:	5d52      	ldrb	r2, [r2, r5]
 8018e4c:	9d02      	ldr	r5, [sp, #8]
 8018e4e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8018e52:	0e2e      	lsrs	r6, r5, #24
 8018e54:	d044      	beq.n	8018ee0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8018e56:	9a05      	ldr	r2, [sp, #20]
 8018e58:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8018e5c:	4356      	muls	r6, r2
 8018e5e:	1c72      	adds	r2, r6, #1
 8018e60:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8018e64:	1212      	asrs	r2, r2, #8
 8018e66:	fa1f f982 	uxth.w	r9, r2
 8018e6a:	ea4f 272e 	mov.w	r7, lr, asr #8
 8018e6e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8018e72:	43d2      	mvns	r2, r2
 8018e74:	b2d2      	uxtb	r2, r2
 8018e76:	fb16 f609 	smulbb	r6, r6, r9
 8018e7a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018e7e:	fb07 6702 	mla	r7, r7, r2, r6
 8018e82:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8018e86:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018e8a:	b2ed      	uxtb	r5, r5
 8018e8c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018e90:	fa5f fe8e 	uxtb.w	lr, lr
 8018e94:	fb15 f509 	smulbb	r5, r5, r9
 8018e98:	fb0e 5502 	mla	r5, lr, r2, r5
 8018e9c:	b2bf      	uxth	r7, r7
 8018e9e:	fb1a fa09 	smulbb	sl, sl, r9
 8018ea2:	b2ad      	uxth	r5, r5
 8018ea4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018ea8:	fb06 a602 	mla	r6, r6, r2, sl
 8018eac:	1c7a      	adds	r2, r7, #1
 8018eae:	f105 0a01 	add.w	sl, r5, #1
 8018eb2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018eb6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018eba:	b2b6      	uxth	r6, r6
 8018ebc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018ec0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018ec4:	ea4a 0707 	orr.w	r7, sl, r7
 8018ec8:	f106 0a01 	add.w	sl, r6, #1
 8018ecc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018ed0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018ed4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018ed8:	ea47 070a 	orr.w	r7, r7, sl
 8018edc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8018ee0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018ee2:	4410      	add	r0, r2
 8018ee4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018ee6:	f108 0801 	add.w	r8, r8, #1
 8018eea:	4411      	add	r1, r2
 8018eec:	e7a1      	b.n	8018e32 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8018eee:	b007      	add	sp, #28
 8018ef0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018ef4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018ef4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ef8:	b085      	sub	sp, #20
 8018efa:	468b      	mov	fp, r1
 8018efc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018efe:	9203      	str	r2, [sp, #12]
 8018f00:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018f04:	6841      	ldr	r1, [r0, #4]
 8018f06:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8018f0a:	fb01 2404 	mla	r4, r1, r4, r2
 8018f0e:	6802      	ldr	r2, [r0, #0]
 8018f10:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018f14:	f8de 2000 	ldr.w	r2, [lr]
 8018f18:	9200      	str	r2, [sp, #0]
 8018f1a:	f8de 2004 	ldr.w	r2, [lr, #4]
 8018f1e:	3204      	adds	r2, #4
 8018f20:	9201      	str	r2, [sp, #4]
 8018f22:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018f26:	f1bb 0f00 	cmp.w	fp, #0
 8018f2a:	dc03      	bgt.n	8018f34 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8018f2c:	9a03      	ldr	r2, [sp, #12]
 8018f2e:	2a00      	cmp	r2, #0
 8018f30:	f340 8153 	ble.w	80191da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8018f34:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018f36:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8018f3a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8018f3e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018f42:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018f44:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018f48:	2b00      	cmp	r3, #0
 8018f4a:	dd0e      	ble.n	8018f6a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018f4c:	1408      	asrs	r0, r1, #16
 8018f4e:	d405      	bmi.n	8018f5c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018f50:	42b8      	cmp	r0, r7
 8018f52:	da03      	bge.n	8018f5c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018f54:	1410      	asrs	r0, r2, #16
 8018f56:	d401      	bmi.n	8018f5c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018f58:	42b0      	cmp	r0, r6
 8018f5a:	db07      	blt.n	8018f6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018f5c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018f5e:	4401      	add	r1, r0
 8018f60:	9812      	ldr	r0, [sp, #72]	; 0x48
 8018f62:	3b01      	subs	r3, #1
 8018f64:	4402      	add	r2, r0
 8018f66:	3402      	adds	r4, #2
 8018f68:	e7ee      	b.n	8018f48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8018f6a:	d017      	beq.n	8018f9c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018f6c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018f6e:	1e58      	subs	r0, r3, #1
 8018f70:	fb05 1500 	mla	r5, r5, r0, r1
 8018f74:	142d      	asrs	r5, r5, #16
 8018f76:	d409      	bmi.n	8018f8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018f78:	42bd      	cmp	r5, r7
 8018f7a:	da07      	bge.n	8018f8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018f7c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018f7e:	fb05 2000 	mla	r0, r5, r0, r2
 8018f82:	1400      	asrs	r0, r0, #16
 8018f84:	d402      	bmi.n	8018f8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018f86:	42b0      	cmp	r0, r6
 8018f88:	f2c0 80bc 	blt.w	8019104 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8018f8c:	2600      	movs	r6, #0
 8018f8e:	1998      	adds	r0, r3, r6
 8018f90:	2800      	cmp	r0, #0
 8018f92:	dc3e      	bgt.n	8019012 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8018f94:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018f98:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018f9c:	f1bb 0f00 	cmp.w	fp, #0
 8018fa0:	f340 811b 	ble.w	80191da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8018fa4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018fa8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018fac:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018fb0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018fb2:	f1bb 0b01 	subs.w	fp, fp, #1
 8018fb6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018fba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018fbe:	eeb0 6a62 	vmov.f32	s12, s5
 8018fc2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018fc6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018fca:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018fce:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018fd2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018fd6:	eeb0 6a43 	vmov.f32	s12, s6
 8018fda:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018fde:	ee12 2a90 	vmov	r2, s5
 8018fe2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018fe6:	fb92 f3f3 	sdiv	r3, r2, r3
 8018fea:	ee13 2a10 	vmov	r2, s6
 8018fee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018ff2:	9311      	str	r3, [sp, #68]	; 0x44
 8018ff4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018ff6:	fb92 f3f3 	sdiv	r3, r2, r3
 8018ffa:	9a03      	ldr	r2, [sp, #12]
 8018ffc:	9312      	str	r3, [sp, #72]	; 0x48
 8018ffe:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019002:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019004:	eeb0 3a67 	vmov.f32	s6, s15
 8019008:	bf08      	it	eq
 801900a:	4613      	moveq	r3, r2
 801900c:	eef0 2a47 	vmov.f32	s5, s14
 8019010:	e789      	b.n	8018f26 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019012:	140f      	asrs	r7, r1, #16
 8019014:	d426      	bmi.n	8019064 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019016:	f8de 5008 	ldr.w	r5, [lr, #8]
 801901a:	42bd      	cmp	r5, r7
 801901c:	dd22      	ble.n	8019064 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801901e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019022:	d41f      	bmi.n	8019064 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019024:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019028:	4560      	cmp	r0, ip
 801902a:	dd1b      	ble.n	8019064 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801902c:	9800      	ldr	r0, [sp, #0]
 801902e:	b22d      	sxth	r5, r5
 8019030:	fb0c 0505 	mla	r5, ip, r5, r0
 8019034:	5de8      	ldrb	r0, [r5, r7]
 8019036:	9d01      	ldr	r5, [sp, #4]
 8019038:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801903c:	0e07      	lsrs	r7, r0, #24
 801903e:	2fff      	cmp	r7, #255	; 0xff
 8019040:	d116      	bne.n	8019070 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019042:	f06f 0501 	mvn.w	r5, #1
 8019046:	fb05 f706 	mul.w	r7, r5, r6
 801904a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801904e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8019052:	0945      	lsrs	r5, r0, #5
 8019054:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019058:	ea4c 0505 	orr.w	r5, ip, r5
 801905c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019060:	4305      	orrs	r5, r0
 8019062:	53e5      	strh	r5, [r4, r7]
 8019064:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019066:	4401      	add	r1, r0
 8019068:	9812      	ldr	r0, [sp, #72]	; 0x48
 801906a:	3e01      	subs	r6, #1
 801906c:	4402      	add	r2, r0
 801906e:	e78e      	b.n	8018f8e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019070:	b2fd      	uxtb	r5, r7
 8019072:	2f00      	cmp	r7, #0
 8019074:	d0f6      	beq.n	8019064 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019076:	f06f 0701 	mvn.w	r7, #1
 801907a:	4377      	muls	r7, r6
 801907c:	fa1f f985 	uxth.w	r9, r5
 8019080:	f834 8007 	ldrh.w	r8, [r4, r7]
 8019084:	9702      	str	r7, [sp, #8]
 8019086:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801908a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801908e:	43ed      	mvns	r5, r5
 8019090:	b2ed      	uxtb	r5, r5
 8019092:	fb17 f709 	smulbb	r7, r7, r9
 8019096:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801909a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801909e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80190a2:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80190a6:	b2c0      	uxtb	r0, r0
 80190a8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80190ac:	fa5f f888 	uxtb.w	r8, r8
 80190b0:	fb10 f009 	smulbb	r0, r0, r9
 80190b4:	fb08 0005 	mla	r0, r8, r5, r0
 80190b8:	b280      	uxth	r0, r0
 80190ba:	fa1f fc8c 	uxth.w	ip, ip
 80190be:	fb1a fa09 	smulbb	sl, sl, r9
 80190c2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80190c6:	fb07 a705 	mla	r7, r7, r5, sl
 80190ca:	f100 0a01 	add.w	sl, r0, #1
 80190ce:	f10c 0501 	add.w	r5, ip, #1
 80190d2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80190d6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80190da:	b2bf      	uxth	r7, r7
 80190dc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80190e0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80190e4:	ea4a 0c0c 	orr.w	ip, sl, ip
 80190e8:	f107 0a01 	add.w	sl, r7, #1
 80190ec:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80190f0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80190f4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80190f8:	9802      	ldr	r0, [sp, #8]
 80190fa:	ea4c 0c0a 	orr.w	ip, ip, sl
 80190fe:	f824 c000 	strh.w	ip, [r4, r0]
 8019102:	e7af      	b.n	8019064 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019104:	f04f 0800 	mov.w	r8, #0
 8019108:	eba3 0008 	sub.w	r0, r3, r8
 801910c:	2800      	cmp	r0, #0
 801910e:	f77f af41 	ble.w	8018f94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019112:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8019116:	9f00      	ldr	r7, [sp, #0]
 8019118:	1410      	asrs	r0, r2, #16
 801911a:	140d      	asrs	r5, r1, #16
 801911c:	fb06 7000 	mla	r0, r6, r0, r7
 8019120:	5d40      	ldrb	r0, [r0, r5]
 8019122:	9d01      	ldr	r5, [sp, #4]
 8019124:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8019128:	0e2e      	lsrs	r6, r5, #24
 801912a:	2eff      	cmp	r6, #255	; 0xff
 801912c:	d112      	bne.n	8019154 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801912e:	482c      	ldr	r0, [pc, #176]	; (80191e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8019130:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8019134:	0968      	lsrs	r0, r5, #5
 8019136:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801913a:	4330      	orrs	r0, r6
 801913c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019140:	4328      	orrs	r0, r5
 8019142:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8019146:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019148:	4401      	add	r1, r0
 801914a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801914c:	f108 0801 	add.w	r8, r8, #1
 8019150:	4402      	add	r2, r0
 8019152:	e7d9      	b.n	8019108 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019154:	b2f0      	uxtb	r0, r6
 8019156:	2e00      	cmp	r6, #0
 8019158:	d0f5      	beq.n	8019146 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801915a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801915e:	fa1f f980 	uxth.w	r9, r0
 8019162:	ea4f 272c 	mov.w	r7, ip, asr #8
 8019166:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801916a:	43c0      	mvns	r0, r0
 801916c:	b2c0      	uxtb	r0, r0
 801916e:	fb16 f609 	smulbb	r6, r6, r9
 8019172:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019176:	fb07 6700 	mla	r7, r7, r0, r6
 801917a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801917e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8019182:	b2ed      	uxtb	r5, r5
 8019184:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019188:	fa5f fc8c 	uxtb.w	ip, ip
 801918c:	fb15 f509 	smulbb	r5, r5, r9
 8019190:	fb0c 5500 	mla	r5, ip, r0, r5
 8019194:	b2bf      	uxth	r7, r7
 8019196:	fb1a fa09 	smulbb	sl, sl, r9
 801919a:	b2ad      	uxth	r5, r5
 801919c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80191a0:	fb06 a600 	mla	r6, r6, r0, sl
 80191a4:	1c78      	adds	r0, r7, #1
 80191a6:	f105 0a01 	add.w	sl, r5, #1
 80191aa:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80191ae:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80191b2:	b2b6      	uxth	r6, r6
 80191b4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80191b8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80191bc:	ea4a 0707 	orr.w	r7, sl, r7
 80191c0:	f106 0a01 	add.w	sl, r6, #1
 80191c4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80191c8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80191cc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80191d0:	ea47 070a 	orr.w	r7, r7, sl
 80191d4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80191d8:	e7b5      	b.n	8019146 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80191da:	b005      	add	sp, #20
 80191dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80191e0:	fffff800 	.word	0xfffff800

080191e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80191e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80191e8:	b087      	sub	sp, #28
 80191ea:	468b      	mov	fp, r1
 80191ec:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80191ee:	9204      	str	r2, [sp, #16]
 80191f0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80191f4:	9205      	str	r2, [sp, #20]
 80191f6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80191fa:	6861      	ldr	r1, [r4, #4]
 80191fc:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8019200:	fb01 2000 	mla	r0, r1, r0, r2
 8019204:	6822      	ldr	r2, [r4, #0]
 8019206:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801920a:	f8de 2000 	ldr.w	r2, [lr]
 801920e:	9201      	str	r2, [sp, #4]
 8019210:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019214:	9202      	str	r2, [sp, #8]
 8019216:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801921a:	f1bb 0f00 	cmp.w	fp, #0
 801921e:	dc03      	bgt.n	8019228 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8019220:	9a04      	ldr	r2, [sp, #16]
 8019222:	2a00      	cmp	r2, #0
 8019224:	f340 8142 	ble.w	80194ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019228:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801922a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801922e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8019232:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019236:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019238:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801923c:	2b00      	cmp	r3, #0
 801923e:	dd0e      	ble.n	801925e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019240:	140c      	asrs	r4, r1, #16
 8019242:	d405      	bmi.n	8019250 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019244:	42bc      	cmp	r4, r7
 8019246:	da03      	bge.n	8019250 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019248:	1414      	asrs	r4, r2, #16
 801924a:	d401      	bmi.n	8019250 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801924c:	42b4      	cmp	r4, r6
 801924e:	db07      	blt.n	8019260 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019250:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019252:	4421      	add	r1, r4
 8019254:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019256:	3b01      	subs	r3, #1
 8019258:	4422      	add	r2, r4
 801925a:	3002      	adds	r0, #2
 801925c:	e7ee      	b.n	801923c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801925e:	d019      	beq.n	8019294 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019260:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019262:	1e5c      	subs	r4, r3, #1
 8019264:	fb05 1504 	mla	r5, r5, r4, r1
 8019268:	142d      	asrs	r5, r5, #16
 801926a:	d409      	bmi.n	8019280 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801926c:	42bd      	cmp	r5, r7
 801926e:	da07      	bge.n	8019280 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019270:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019272:	fb05 2404 	mla	r4, r5, r4, r2
 8019276:	1424      	asrs	r4, r4, #16
 8019278:	d402      	bmi.n	8019280 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801927a:	42b4      	cmp	r4, r6
 801927c:	f2c0 80b1 	blt.w	80193e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8019280:	f04f 0800 	mov.w	r8, #0
 8019284:	eb03 0408 	add.w	r4, r3, r8
 8019288:	2c00      	cmp	r4, #0
 801928a:	dc3e      	bgt.n	801930a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801928c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019290:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019294:	f1bb 0f00 	cmp.w	fp, #0
 8019298:	f340 8108 	ble.w	80194ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801929c:	ee30 0a04 	vadd.f32	s0, s0, s8
 80192a0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80192a4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80192a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80192aa:	f1bb 0b01 	subs.w	fp, fp, #1
 80192ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 80192b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80192b6:	eeb0 6a62 	vmov.f32	s12, s5
 80192ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 80192be:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80192c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80192c6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80192ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80192ce:	eeb0 6a43 	vmov.f32	s12, s6
 80192d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80192d6:	ee12 2a90 	vmov	r2, s5
 80192da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80192de:	fb92 f3f3 	sdiv	r3, r2, r3
 80192e2:	ee13 2a10 	vmov	r2, s6
 80192e6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80192ea:	9313      	str	r3, [sp, #76]	; 0x4c
 80192ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80192ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80192f2:	9a04      	ldr	r2, [sp, #16]
 80192f4:	9314      	str	r3, [sp, #80]	; 0x50
 80192f6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80192fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80192fc:	eeb0 3a67 	vmov.f32	s6, s15
 8019300:	bf08      	it	eq
 8019302:	4613      	moveq	r3, r2
 8019304:	eef0 2a47 	vmov.f32	s5, s14
 8019308:	e787      	b.n	801921a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801930a:	140e      	asrs	r6, r1, #16
 801930c:	d462      	bmi.n	80193d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801930e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019312:	42b5      	cmp	r5, r6
 8019314:	dd5e      	ble.n	80193d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019316:	1417      	asrs	r7, r2, #16
 8019318:	d45c      	bmi.n	80193d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801931a:	f8de 400c 	ldr.w	r4, [lr, #12]
 801931e:	42bc      	cmp	r4, r7
 8019320:	dd58      	ble.n	80193d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019322:	b22d      	sxth	r5, r5
 8019324:	fb07 6505 	mla	r5, r7, r5, r6
 8019328:	9c02      	ldr	r4, [sp, #8]
 801932a:	5d66      	ldrb	r6, [r4, r5]
 801932c:	2e00      	cmp	r6, #0
 801932e:	d051      	beq.n	80193d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019330:	9c01      	ldr	r4, [sp, #4]
 8019332:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8019336:	f06f 0401 	mvn.w	r4, #1
 801933a:	fb04 f408 	mul.w	r4, r4, r8
 801933e:	9403      	str	r4, [sp, #12]
 8019340:	5b05      	ldrh	r5, [r0, r4]
 8019342:	9c05      	ldr	r4, [sp, #20]
 8019344:	4366      	muls	r6, r4
 8019346:	1c74      	adds	r4, r6, #1
 8019348:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801934c:	1224      	asrs	r4, r4, #8
 801934e:	b2a7      	uxth	r7, r4
 8019350:	122e      	asrs	r6, r5, #8
 8019352:	43e4      	mvns	r4, r4
 8019354:	b2e4      	uxtb	r4, r4
 8019356:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801935a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801935e:	fb16 f604 	smulbb	r6, r6, r4
 8019362:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019366:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801936a:	00ed      	lsls	r5, r5, #3
 801936c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019370:	b2ed      	uxtb	r5, r5
 8019372:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8019376:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801937a:	fb15 f504 	smulbb	r5, r5, r4
 801937e:	fa5f f989 	uxtb.w	r9, r9
 8019382:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019386:	fb09 5507 	mla	r5, r9, r7, r5
 801938a:	fb1a fa04 	smulbb	sl, sl, r4
 801938e:	fa1f fc8c 	uxth.w	ip, ip
 8019392:	b2ad      	uxth	r5, r5
 8019394:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019398:	fb06 a607 	mla	r6, r6, r7, sl
 801939c:	f10c 0401 	add.w	r4, ip, #1
 80193a0:	f105 0a01 	add.w	sl, r5, #1
 80193a4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80193a8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80193ac:	b2b6      	uxth	r6, r6
 80193ae:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80193b2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80193b6:	ea4a 0c0c 	orr.w	ip, sl, ip
 80193ba:	f106 0a01 	add.w	sl, r6, #1
 80193be:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80193c2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80193c6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80193ca:	9c03      	ldr	r4, [sp, #12]
 80193cc:	ea4c 0c0a 	orr.w	ip, ip, sl
 80193d0:	f820 c004 	strh.w	ip, [r0, r4]
 80193d4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80193d6:	4421      	add	r1, r4
 80193d8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80193da:	f108 38ff 	add.w	r8, r8, #4294967295
 80193de:	4422      	add	r2, r4
 80193e0:	e750      	b.n	8019284 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80193e2:	f04f 0900 	mov.w	r9, #0
 80193e6:	eba3 0409 	sub.w	r4, r3, r9
 80193ea:	2c00      	cmp	r4, #0
 80193ec:	f77f af4e 	ble.w	801928c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80193f0:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80193f4:	140d      	asrs	r5, r1, #16
 80193f6:	1414      	asrs	r4, r2, #16
 80193f8:	fb06 5404 	mla	r4, r6, r4, r5
 80193fc:	9d02      	ldr	r5, [sp, #8]
 80193fe:	5d2e      	ldrb	r6, [r5, r4]
 8019400:	2e00      	cmp	r6, #0
 8019402:	d04c      	beq.n	801949e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8019404:	9d01      	ldr	r5, [sp, #4]
 8019406:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801940a:	9c05      	ldr	r4, [sp, #20]
 801940c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019410:	4366      	muls	r6, r4
 8019412:	1c74      	adds	r4, r6, #1
 8019414:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019418:	1224      	asrs	r4, r4, #8
 801941a:	b2a7      	uxth	r7, r4
 801941c:	122e      	asrs	r6, r5, #8
 801941e:	43e4      	mvns	r4, r4
 8019420:	b2e4      	uxtb	r4, r4
 8019422:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8019426:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801942a:	fb16 f604 	smulbb	r6, r6, r4
 801942e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019432:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019436:	00ed      	lsls	r5, r5, #3
 8019438:	fb0c 6c07 	mla	ip, ip, r7, r6
 801943c:	b2ed      	uxtb	r5, r5
 801943e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8019442:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019446:	fb15 f504 	smulbb	r5, r5, r4
 801944a:	fa5f f888 	uxtb.w	r8, r8
 801944e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019452:	fb08 5507 	mla	r5, r8, r7, r5
 8019456:	fb1a fa04 	smulbb	sl, sl, r4
 801945a:	fa1f fc8c 	uxth.w	ip, ip
 801945e:	b2ad      	uxth	r5, r5
 8019460:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019464:	fb06 a607 	mla	r6, r6, r7, sl
 8019468:	f10c 0401 	add.w	r4, ip, #1
 801946c:	f105 0a01 	add.w	sl, r5, #1
 8019470:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019474:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019478:	b2b6      	uxth	r6, r6
 801947a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801947e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019482:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019486:	f106 0a01 	add.w	sl, r6, #1
 801948a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801948e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019492:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019496:	ea4c 0c0a 	orr.w	ip, ip, sl
 801949a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801949e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80194a0:	4421      	add	r1, r4
 80194a2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80194a4:	f109 0901 	add.w	r9, r9, #1
 80194a8:	4422      	add	r2, r4
 80194aa:	e79c      	b.n	80193e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80194ac:	b007      	add	sp, #28
 80194ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080194b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80194b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80194b6:	b085      	sub	sp, #20
 80194b8:	468b      	mov	fp, r1
 80194ba:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80194bc:	9203      	str	r2, [sp, #12]
 80194be:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 80194c2:	6861      	ldr	r1, [r4, #4]
 80194c4:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80194c8:	fb01 2000 	mla	r0, r1, r0, r2
 80194cc:	6822      	ldr	r2, [r4, #0]
 80194ce:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80194d2:	f8d8 2000 	ldr.w	r2, [r8]
 80194d6:	9200      	str	r2, [sp, #0]
 80194d8:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80194dc:	9201      	str	r2, [sp, #4]
 80194de:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80194e2:	f1bb 0f00 	cmp.w	fp, #0
 80194e6:	dc03      	bgt.n	80194f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80194e8:	9a03      	ldr	r2, [sp, #12]
 80194ea:	2a00      	cmp	r2, #0
 80194ec:	f340 8146 	ble.w	801977c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80194f0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80194f2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80194f6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80194fa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80194fe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019500:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019504:	2b00      	cmp	r3, #0
 8019506:	dd0e      	ble.n	8019526 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8019508:	140c      	asrs	r4, r1, #16
 801950a:	d405      	bmi.n	8019518 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801950c:	42bc      	cmp	r4, r7
 801950e:	da03      	bge.n	8019518 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019510:	1414      	asrs	r4, r2, #16
 8019512:	d401      	bmi.n	8019518 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019514:	42b4      	cmp	r4, r6
 8019516:	db07      	blt.n	8019528 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019518:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801951a:	4421      	add	r1, r4
 801951c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801951e:	3b01      	subs	r3, #1
 8019520:	4422      	add	r2, r4
 8019522:	3002      	adds	r0, #2
 8019524:	e7ee      	b.n	8019504 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019526:	d017      	beq.n	8019558 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019528:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801952a:	1e5c      	subs	r4, r3, #1
 801952c:	fb05 1504 	mla	r5, r5, r4, r1
 8019530:	142d      	asrs	r5, r5, #16
 8019532:	d409      	bmi.n	8019548 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019534:	42bd      	cmp	r5, r7
 8019536:	da07      	bge.n	8019548 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019538:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801953a:	fb05 2404 	mla	r4, r5, r4, r2
 801953e:	1424      	asrs	r4, r4, #16
 8019540:	d402      	bmi.n	8019548 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019542:	42b4      	cmp	r4, r6
 8019544:	f2c0 80b3 	blt.w	80196ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8019548:	2600      	movs	r6, #0
 801954a:	199c      	adds	r4, r3, r6
 801954c:	2c00      	cmp	r4, #0
 801954e:	dc3e      	bgt.n	80195ce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019550:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019554:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019558:	f1bb 0f00 	cmp.w	fp, #0
 801955c:	f340 810e 	ble.w	801977c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019560:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019564:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019568:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801956c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801956e:	f1bb 0b01 	subs.w	fp, fp, #1
 8019572:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019576:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801957a:	eeb0 6a62 	vmov.f32	s12, s5
 801957e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019582:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019586:	ee77 2a62 	vsub.f32	s5, s14, s5
 801958a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801958e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019592:	eeb0 6a43 	vmov.f32	s12, s6
 8019596:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801959a:	ee12 2a90 	vmov	r2, s5
 801959e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80195a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80195a6:	ee13 2a10 	vmov	r2, s6
 80195aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80195ae:	9311      	str	r3, [sp, #68]	; 0x44
 80195b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80195b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80195b6:	9a03      	ldr	r2, [sp, #12]
 80195b8:	9312      	str	r3, [sp, #72]	; 0x48
 80195ba:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80195be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80195c0:	eeb0 3a67 	vmov.f32	s6, s15
 80195c4:	bf08      	it	eq
 80195c6:	4613      	moveq	r3, r2
 80195c8:	eef0 2a47 	vmov.f32	s5, s14
 80195cc:	e789      	b.n	80194e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80195ce:	140f      	asrs	r7, r1, #16
 80195d0:	d418      	bmi.n	8019604 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80195d2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80195d6:	42bd      	cmp	r5, r7
 80195d8:	dd14      	ble.n	8019604 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80195da:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80195de:	d411      	bmi.n	8019604 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80195e0:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80195e4:	4564      	cmp	r4, ip
 80195e6:	dd0d      	ble.n	8019604 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80195e8:	b22d      	sxth	r5, r5
 80195ea:	fb0c 7505 	mla	r5, ip, r5, r7
 80195ee:	9c01      	ldr	r4, [sp, #4]
 80195f0:	5d64      	ldrb	r4, [r4, r5]
 80195f2:	2cff      	cmp	r4, #255	; 0xff
 80195f4:	d10c      	bne.n	8019610 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80195f6:	9c00      	ldr	r4, [sp, #0]
 80195f8:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80195fc:	f06f 0401 	mvn.w	r4, #1
 8019600:	4374      	muls	r4, r6
 8019602:	5305      	strh	r5, [r0, r4]
 8019604:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019606:	4421      	add	r1, r4
 8019608:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801960a:	3e01      	subs	r6, #1
 801960c:	4422      	add	r2, r4
 801960e:	e79c      	b.n	801954a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019610:	2c00      	cmp	r4, #0
 8019612:	d0f7      	beq.n	8019604 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019614:	9f00      	ldr	r7, [sp, #0]
 8019616:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801961a:	f06f 0501 	mvn.w	r5, #1
 801961e:	4375      	muls	r5, r6
 8019620:	9502      	str	r5, [sp, #8]
 8019622:	5b45      	ldrh	r5, [r0, r5]
 8019624:	fa1f fc84 	uxth.w	ip, r4
 8019628:	122f      	asrs	r7, r5, #8
 801962a:	43e4      	mvns	r4, r4
 801962c:	b2e4      	uxtb	r4, r4
 801962e:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8019632:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019636:	fb17 f704 	smulbb	r7, r7, r4
 801963a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801963e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019642:	00ed      	lsls	r5, r5, #3
 8019644:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8019648:	b2ed      	uxtb	r5, r5
 801964a:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801964e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019652:	fb15 f504 	smulbb	r5, r5, r4
 8019656:	fa5f f989 	uxtb.w	r9, r9
 801965a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801965e:	fb09 550c 	mla	r5, r9, ip, r5
 8019662:	fb1a fa04 	smulbb	sl, sl, r4
 8019666:	fa1f fe8e 	uxth.w	lr, lr
 801966a:	b2ad      	uxth	r5, r5
 801966c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019670:	fb07 a70c 	mla	r7, r7, ip, sl
 8019674:	f10e 0401 	add.w	r4, lr, #1
 8019678:	f105 0a01 	add.w	sl, r5, #1
 801967c:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8019680:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019684:	b2bf      	uxth	r7, r7
 8019686:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801968a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801968e:	ea4a 0e0e 	orr.w	lr, sl, lr
 8019692:	f107 0a01 	add.w	sl, r7, #1
 8019696:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801969a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801969e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80196a2:	9c02      	ldr	r4, [sp, #8]
 80196a4:	ea4e 0e0a 	orr.w	lr, lr, sl
 80196a8:	f820 e004 	strh.w	lr, [r0, r4]
 80196ac:	e7aa      	b.n	8019604 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80196ae:	f04f 0900 	mov.w	r9, #0
 80196b2:	eba3 0409 	sub.w	r4, r3, r9
 80196b6:	2c00      	cmp	r4, #0
 80196b8:	f77f af4a 	ble.w	8019550 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80196bc:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80196c0:	1414      	asrs	r4, r2, #16
 80196c2:	140d      	asrs	r5, r1, #16
 80196c4:	fb06 5504 	mla	r5, r6, r4, r5
 80196c8:	9c01      	ldr	r4, [sp, #4]
 80196ca:	5d64      	ldrb	r4, [r4, r5]
 80196cc:	2cff      	cmp	r4, #255	; 0xff
 80196ce:	d10b      	bne.n	80196e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80196d0:	9c00      	ldr	r4, [sp, #0]
 80196d2:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80196d6:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 80196da:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80196dc:	4421      	add	r1, r4
 80196de:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80196e0:	f109 0901 	add.w	r9, r9, #1
 80196e4:	4422      	add	r2, r4
 80196e6:	e7e4      	b.n	80196b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80196e8:	2c00      	cmp	r4, #0
 80196ea:	d0f6      	beq.n	80196da <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80196ec:	9e00      	ldr	r6, [sp, #0]
 80196ee:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80196f2:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80196f6:	b2a7      	uxth	r7, r4
 80196f8:	122e      	asrs	r6, r5, #8
 80196fa:	43e4      	mvns	r4, r4
 80196fc:	b2e4      	uxtb	r4, r4
 80196fe:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019702:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019706:	fb16 f604 	smulbb	r6, r6, r4
 801970a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801970e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019712:	00ed      	lsls	r5, r5, #3
 8019714:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019718:	b2ed      	uxtb	r5, r5
 801971a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801971e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019722:	fb15 f504 	smulbb	r5, r5, r4
 8019726:	fa5f fe8e 	uxtb.w	lr, lr
 801972a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801972e:	fb0e 5507 	mla	r5, lr, r7, r5
 8019732:	fb1a fa04 	smulbb	sl, sl, r4
 8019736:	fa1f fc8c 	uxth.w	ip, ip
 801973a:	b2ad      	uxth	r5, r5
 801973c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019740:	fb06 a607 	mla	r6, r6, r7, sl
 8019744:	f10c 0401 	add.w	r4, ip, #1
 8019748:	f105 0a01 	add.w	sl, r5, #1
 801974c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019750:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019754:	b2b6      	uxth	r6, r6
 8019756:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801975a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801975e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019762:	f106 0a01 	add.w	sl, r6, #1
 8019766:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801976a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801976e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019772:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019776:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801977a:	e7ae      	b.n	80196da <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801977c:	b005      	add	sp, #20
 801977e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019782 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019782:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019786:	b085      	sub	sp, #20
 8019788:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801978a:	9203      	str	r2, [sp, #12]
 801978c:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8019790:	9201      	str	r2, [sp, #4]
 8019792:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019796:	9100      	str	r1, [sp, #0]
 8019798:	6841      	ldr	r1, [r0, #4]
 801979a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801979e:	fb01 2404 	mla	r4, r1, r4, r2
 80197a2:	6802      	ldr	r2, [r0, #0]
 80197a4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80197a8:	f8de 2000 	ldr.w	r2, [lr]
 80197ac:	9202      	str	r2, [sp, #8]
 80197ae:	9a01      	ldr	r2, [sp, #4]
 80197b0:	43d6      	mvns	r6, r2
 80197b2:	b2f6      	uxtb	r6, r6
 80197b4:	9a00      	ldr	r2, [sp, #0]
 80197b6:	2a00      	cmp	r2, #0
 80197b8:	dc03      	bgt.n	80197c2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80197ba:	9a03      	ldr	r2, [sp, #12]
 80197bc:	2a00      	cmp	r2, #0
 80197be:	f340 8124 	ble.w	8019a0a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80197c2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80197c4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80197c8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80197cc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80197d0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80197d2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80197d6:	2b00      	cmp	r3, #0
 80197d8:	dd0e      	ble.n	80197f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80197da:	1408      	asrs	r0, r1, #16
 80197dc:	d405      	bmi.n	80197ea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80197de:	4560      	cmp	r0, ip
 80197e0:	da03      	bge.n	80197ea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80197e2:	1410      	asrs	r0, r2, #16
 80197e4:	d401      	bmi.n	80197ea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80197e6:	42b8      	cmp	r0, r7
 80197e8:	db07      	blt.n	80197fa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80197ea:	9811      	ldr	r0, [sp, #68]	; 0x44
 80197ec:	4401      	add	r1, r0
 80197ee:	9812      	ldr	r0, [sp, #72]	; 0x48
 80197f0:	3b01      	subs	r3, #1
 80197f2:	4402      	add	r2, r0
 80197f4:	3402      	adds	r4, #2
 80197f6:	e7ee      	b.n	80197d6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80197f8:	d06e      	beq.n	80198d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80197fa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80197fc:	1e58      	subs	r0, r3, #1
 80197fe:	fb05 1500 	mla	r5, r5, r0, r1
 8019802:	142d      	asrs	r5, r5, #16
 8019804:	d45c      	bmi.n	80198c0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019806:	4565      	cmp	r5, ip
 8019808:	da5a      	bge.n	80198c0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801980a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801980c:	fb05 2000 	mla	r0, r5, r0, r2
 8019810:	1400      	asrs	r0, r0, #16
 8019812:	d455      	bmi.n	80198c0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019814:	42b8      	cmp	r0, r7
 8019816:	da53      	bge.n	80198c0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019818:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801981c:	4699      	mov	r9, r3
 801981e:	46a2      	mov	sl, r4
 8019820:	f1b9 0f00 	cmp.w	r9, #0
 8019824:	dd54      	ble.n	80198d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019826:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801982a:	140d      	asrs	r5, r1, #16
 801982c:	1410      	asrs	r0, r2, #16
 801982e:	fb07 5000 	mla	r0, r7, r0, r5
 8019832:	9d02      	ldr	r5, [sp, #8]
 8019834:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019838:	f8ba 5000 	ldrh.w	r5, [sl]
 801983c:	122f      	asrs	r7, r5, #8
 801983e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019842:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019846:	fb17 f706 	smulbb	r7, r7, r6
 801984a:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801984e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019852:	00ed      	lsls	r5, r5, #3
 8019854:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8019858:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801985c:	10c7      	asrs	r7, r0, #3
 801985e:	b2ed      	uxtb	r5, r5
 8019860:	00c0      	lsls	r0, r0, #3
 8019862:	fb18 f806 	smulbb	r8, r8, r6
 8019866:	fb15 f506 	smulbb	r5, r5, r6
 801986a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801986e:	b2c0      	uxtb	r0, r0
 8019870:	fa1f fc8c 	uxth.w	ip, ip
 8019874:	fb07 870b 	mla	r7, r7, fp, r8
 8019878:	fb00 500b 	mla	r0, r0, fp, r5
 801987c:	b280      	uxth	r0, r0
 801987e:	b2bf      	uxth	r7, r7
 8019880:	f10c 0501 	add.w	r5, ip, #1
 8019884:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019888:	f107 0801 	add.w	r8, r7, #1
 801988c:	1c45      	adds	r5, r0, #1
 801988e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019892:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019896:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019898:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801989c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80198a0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80198a4:	ea45 0c0c 	orr.w	ip, r5, ip
 80198a8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80198ac:	4401      	add	r1, r0
 80198ae:	9812      	ldr	r0, [sp, #72]	; 0x48
 80198b0:	ea4c 0c08 	orr.w	ip, ip, r8
 80198b4:	f82a cb02 	strh.w	ip, [sl], #2
 80198b8:	4402      	add	r2, r0
 80198ba:	f109 39ff 	add.w	r9, r9, #4294967295
 80198be:	e7af      	b.n	8019820 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80198c0:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80198c4:	f04f 0800 	mov.w	r8, #0
 80198c8:	eb03 0008 	add.w	r0, r3, r8
 80198cc:	2800      	cmp	r0, #0
 80198ce:	dc41      	bgt.n	8019954 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80198d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80198d4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80198d8:	9b00      	ldr	r3, [sp, #0]
 80198da:	2b00      	cmp	r3, #0
 80198dc:	f340 8095 	ble.w	8019a0a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80198e0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80198e4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80198e8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80198ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80198ee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80198f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80198f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80198fa:	eef0 6a62 	vmov.f32	s13, s5
 80198fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019902:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019906:	ee77 2a62 	vsub.f32	s5, s14, s5
 801990a:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801990e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019912:	eef0 6a43 	vmov.f32	s13, s6
 8019916:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801991a:	ee12 2a90 	vmov	r2, s5
 801991e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019922:	fb92 f3f3 	sdiv	r3, r2, r3
 8019926:	ee13 2a10 	vmov	r2, s6
 801992a:	9311      	str	r3, [sp, #68]	; 0x44
 801992c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801992e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019932:	9312      	str	r3, [sp, #72]	; 0x48
 8019934:	9b00      	ldr	r3, [sp, #0]
 8019936:	9a03      	ldr	r2, [sp, #12]
 8019938:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801993c:	3b01      	subs	r3, #1
 801993e:	9300      	str	r3, [sp, #0]
 8019940:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8019944:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019946:	eeb0 3a67 	vmov.f32	s6, s15
 801994a:	bf08      	it	eq
 801994c:	4613      	moveq	r3, r2
 801994e:	eef0 2a47 	vmov.f32	s5, s14
 8019952:	e72f      	b.n	80197b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019954:	140f      	asrs	r7, r1, #16
 8019956:	d451      	bmi.n	80199fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019958:	f8de 5008 	ldr.w	r5, [lr, #8]
 801995c:	42bd      	cmp	r5, r7
 801995e:	dd4d      	ble.n	80199fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019960:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019964:	d44a      	bmi.n	80199fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019966:	f8de 000c 	ldr.w	r0, [lr, #12]
 801996a:	4560      	cmp	r0, ip
 801996c:	dd46      	ble.n	80199fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801996e:	b22d      	sxth	r5, r5
 8019970:	fb0c 7505 	mla	r5, ip, r5, r7
 8019974:	9802      	ldr	r0, [sp, #8]
 8019976:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801997a:	f06f 0501 	mvn.w	r5, #1
 801997e:	fb05 fb08 	mul.w	fp, r5, r8
 8019982:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019986:	f834 500b 	ldrh.w	r5, [r4, fp]
 801998a:	122f      	asrs	r7, r5, #8
 801998c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019990:	fb17 f706 	smulbb	r7, r7, r6
 8019994:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019998:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801999c:	00ed      	lsls	r5, r5, #3
 801999e:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80199a2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80199a6:	10c7      	asrs	r7, r0, #3
 80199a8:	b2ed      	uxtb	r5, r5
 80199aa:	00c0      	lsls	r0, r0, #3
 80199ac:	fb19 f906 	smulbb	r9, r9, r6
 80199b0:	fb15 f506 	smulbb	r5, r5, r6
 80199b4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80199b8:	b2c0      	uxtb	r0, r0
 80199ba:	fa1f fc8c 	uxth.w	ip, ip
 80199be:	fb07 970a 	mla	r7, r7, sl, r9
 80199c2:	fb00 500a 	mla	r0, r0, sl, r5
 80199c6:	b2bf      	uxth	r7, r7
 80199c8:	b280      	uxth	r0, r0
 80199ca:	f10c 0501 	add.w	r5, ip, #1
 80199ce:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80199d2:	f107 0901 	add.w	r9, r7, #1
 80199d6:	1c45      	adds	r5, r0, #1
 80199d8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80199dc:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80199e0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80199e4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80199e8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80199ec:	ea45 0c0c 	orr.w	ip, r5, ip
 80199f0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80199f4:	ea4c 0c09 	orr.w	ip, ip, r9
 80199f8:	f824 c00b 	strh.w	ip, [r4, fp]
 80199fc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80199fe:	4401      	add	r1, r0
 8019a00:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019a02:	f108 38ff 	add.w	r8, r8, #4294967295
 8019a06:	4402      	add	r2, r0
 8019a08:	e75e      	b.n	80198c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8019a0a:	b005      	add	sp, #20
 8019a0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019a10 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019a10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a14:	b085      	sub	sp, #20
 8019a16:	4693      	mov	fp, r2
 8019a18:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019a1a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019a1c:	6870      	ldr	r0, [r6, #4]
 8019a1e:	9101      	str	r1, [sp, #4]
 8019a20:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019a24:	fb00 2404 	mla	r4, r0, r4, r2
 8019a28:	6832      	ldr	r2, [r6, #0]
 8019a2a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8019a2e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019a32:	682a      	ldr	r2, [r5, #0]
 8019a34:	9202      	str	r2, [sp, #8]
 8019a36:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019a3a:	9a01      	ldr	r2, [sp, #4]
 8019a3c:	2a00      	cmp	r2, #0
 8019a3e:	dc03      	bgt.n	8019a48 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019a40:	f1bb 0f00 	cmp.w	fp, #0
 8019a44:	f340 809a 	ble.w	8019b7c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8019a48:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019a4a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019a4e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019a52:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019a56:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019a58:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019a5c:	2b00      	cmp	r3, #0
 8019a5e:	dd0c      	ble.n	8019a7a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8019a60:	1406      	asrs	r6, r0, #16
 8019a62:	d405      	bmi.n	8019a70 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019a64:	454e      	cmp	r6, r9
 8019a66:	da03      	bge.n	8019a70 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019a68:	1416      	asrs	r6, r2, #16
 8019a6a:	d401      	bmi.n	8019a70 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019a6c:	4546      	cmp	r6, r8
 8019a6e:	db05      	blt.n	8019a7c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019a70:	4470      	add	r0, lr
 8019a72:	4462      	add	r2, ip
 8019a74:	3b01      	subs	r3, #1
 8019a76:	3402      	adds	r4, #2
 8019a78:	e7f0      	b.n	8019a5c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019a7a:	d00f      	beq.n	8019a9c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019a7c:	1e5e      	subs	r6, r3, #1
 8019a7e:	fb0e 0706 	mla	r7, lr, r6, r0
 8019a82:	143f      	asrs	r7, r7, #16
 8019a84:	d541      	bpl.n	8019b0a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8019a86:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019a8a:	4698      	mov	r8, r3
 8019a8c:	9603      	str	r6, [sp, #12]
 8019a8e:	f1b8 0f00 	cmp.w	r8, #0
 8019a92:	dc56      	bgt.n	8019b42 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8019a94:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019a98:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019a9c:	9b01      	ldr	r3, [sp, #4]
 8019a9e:	2b00      	cmp	r3, #0
 8019aa0:	dd6c      	ble.n	8019b7c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8019aa2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019aa6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019aaa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019aae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019ab0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019ab4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019ab8:	eeb0 6a62 	vmov.f32	s12, s5
 8019abc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019ac0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019ac4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019ac8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019acc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019ad0:	eeb0 6a43 	vmov.f32	s12, s6
 8019ad4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019ad8:	ee12 2a90 	vmov	r2, s5
 8019adc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019ae0:	fb92 fef3 	sdiv	lr, r2, r3
 8019ae4:	ee13 2a10 	vmov	r2, s6
 8019ae8:	fb92 fcf3 	sdiv	ip, r2, r3
 8019aec:	9b01      	ldr	r3, [sp, #4]
 8019aee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019af2:	3b01      	subs	r3, #1
 8019af4:	9301      	str	r3, [sp, #4]
 8019af6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019afa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019afc:	eeb0 3a67 	vmov.f32	s6, s15
 8019b00:	bf08      	it	eq
 8019b02:	465b      	moveq	r3, fp
 8019b04:	eef0 2a47 	vmov.f32	s5, s14
 8019b08:	e797      	b.n	8019a3a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8019b0a:	454f      	cmp	r7, r9
 8019b0c:	dabb      	bge.n	8019a86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019b0e:	fb0c 2606 	mla	r6, ip, r6, r2
 8019b12:	1436      	asrs	r6, r6, #16
 8019b14:	d4b7      	bmi.n	8019a86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019b16:	4546      	cmp	r6, r8
 8019b18:	dab5      	bge.n	8019a86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019b1a:	461e      	mov	r6, r3
 8019b1c:	46a0      	mov	r8, r4
 8019b1e:	2e00      	cmp	r6, #0
 8019b20:	ddb8      	ble.n	8019a94 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019b22:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8019b26:	9902      	ldr	r1, [sp, #8]
 8019b28:	1417      	asrs	r7, r2, #16
 8019b2a:	ea4f 4920 	mov.w	r9, r0, asr #16
 8019b2e:	fb0a 9707 	mla	r7, sl, r7, r9
 8019b32:	4470      	add	r0, lr
 8019b34:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8019b38:	f828 7b02 	strh.w	r7, [r8], #2
 8019b3c:	4462      	add	r2, ip
 8019b3e:	3e01      	subs	r6, #1
 8019b40:	e7ed      	b.n	8019b1e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8019b42:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019b46:	d414      	bmi.n	8019b72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019b48:	68ae      	ldr	r6, [r5, #8]
 8019b4a:	454e      	cmp	r6, r9
 8019b4c:	dd11      	ble.n	8019b72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019b4e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8019b52:	d40e      	bmi.n	8019b72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019b54:	68ef      	ldr	r7, [r5, #12]
 8019b56:	4557      	cmp	r7, sl
 8019b58:	dd0b      	ble.n	8019b72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019b5a:	b236      	sxth	r6, r6
 8019b5c:	fb0a 9606 	mla	r6, sl, r6, r9
 8019b60:	9f02      	ldr	r7, [sp, #8]
 8019b62:	f06f 0101 	mvn.w	r1, #1
 8019b66:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8019b6a:	fb01 f608 	mul.w	r6, r1, r8
 8019b6e:	9903      	ldr	r1, [sp, #12]
 8019b70:	538f      	strh	r7, [r1, r6]
 8019b72:	4470      	add	r0, lr
 8019b74:	4462      	add	r2, ip
 8019b76:	f108 38ff 	add.w	r8, r8, #4294967295
 8019b7a:	e788      	b.n	8019a8e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019b7c:	b005      	add	sp, #20
 8019b7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019b82 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019b82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b86:	b087      	sub	sp, #28
 8019b88:	468b      	mov	fp, r1
 8019b8a:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019b8c:	9203      	str	r2, [sp, #12]
 8019b8e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019b92:	9204      	str	r2, [sp, #16]
 8019b94:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8019b98:	6841      	ldr	r1, [r0, #4]
 8019b9a:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8019b9e:	fb01 2505 	mla	r5, r1, r5, r2
 8019ba2:	6802      	ldr	r2, [r0, #0]
 8019ba4:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8019ba8:	f8d9 2000 	ldr.w	r2, [r9]
 8019bac:	9201      	str	r2, [sp, #4]
 8019bae:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019bb2:	f1bb 0f00 	cmp.w	fp, #0
 8019bb6:	dc03      	bgt.n	8019bc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019bb8:	9a03      	ldr	r2, [sp, #12]
 8019bba:	2a00      	cmp	r2, #0
 8019bbc:	f340 8159 	ble.w	8019e72 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019bc0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019bc2:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8019bc6:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8019bca:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019bce:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019bd0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019bd4:	2b00      	cmp	r3, #0
 8019bd6:	dd0e      	ble.n	8019bf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8019bd8:	1402      	asrs	r2, r0, #16
 8019bda:	d405      	bmi.n	8019be8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019bdc:	42ba      	cmp	r2, r7
 8019bde:	da03      	bge.n	8019be8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019be0:	140a      	asrs	r2, r1, #16
 8019be2:	d401      	bmi.n	8019be8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019be4:	42b2      	cmp	r2, r6
 8019be6:	db07      	blt.n	8019bf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019be8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019bea:	4410      	add	r0, r2
 8019bec:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019bee:	3b01      	subs	r3, #1
 8019bf0:	4411      	add	r1, r2
 8019bf2:	3502      	adds	r5, #2
 8019bf4:	e7ee      	b.n	8019bd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019bf6:	d017      	beq.n	8019c28 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019bf8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019bfa:	1e5a      	subs	r2, r3, #1
 8019bfc:	fb04 0402 	mla	r4, r4, r2, r0
 8019c00:	1424      	asrs	r4, r4, #16
 8019c02:	d409      	bmi.n	8019c18 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019c04:	42bc      	cmp	r4, r7
 8019c06:	da07      	bge.n	8019c18 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019c08:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019c0a:	fb04 1202 	mla	r2, r4, r2, r1
 8019c0e:	1412      	asrs	r2, r2, #16
 8019c10:	d402      	bmi.n	8019c18 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019c12:	42b2      	cmp	r2, r6
 8019c14:	f2c0 80bf 	blt.w	8019d96 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019c18:	2700      	movs	r7, #0
 8019c1a:	19da      	adds	r2, r3, r7
 8019c1c:	2a00      	cmp	r2, #0
 8019c1e:	dc3e      	bgt.n	8019c9e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019c20:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019c24:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8019c28:	f1bb 0f00 	cmp.w	fp, #0
 8019c2c:	f340 8121 	ble.w	8019e72 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019c30:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019c34:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019c38:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019c3c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019c3e:	f1bb 0b01 	subs.w	fp, fp, #1
 8019c42:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019c46:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019c4a:	eeb0 6a62 	vmov.f32	s12, s5
 8019c4e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019c52:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019c56:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019c5a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019c5e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019c62:	eeb0 6a43 	vmov.f32	s12, s6
 8019c66:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019c6a:	ee12 2a90 	vmov	r2, s5
 8019c6e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019c72:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c76:	ee13 2a10 	vmov	r2, s6
 8019c7a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019c7e:	9313      	str	r3, [sp, #76]	; 0x4c
 8019c80:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019c82:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c86:	9a03      	ldr	r2, [sp, #12]
 8019c88:	9314      	str	r3, [sp, #80]	; 0x50
 8019c8a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019c8e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019c90:	eeb0 3a67 	vmov.f32	s6, s15
 8019c94:	bf08      	it	eq
 8019c96:	4613      	moveq	r3, r2
 8019c98:	eef0 2a47 	vmov.f32	s5, s14
 8019c9c:	e789      	b.n	8019bb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019c9e:	1406      	asrs	r6, r0, #16
 8019ca0:	d42d      	bmi.n	8019cfe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019ca2:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8019ca6:	42b4      	cmp	r4, r6
 8019ca8:	dd29      	ble.n	8019cfe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019caa:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8019cae:	d426      	bmi.n	8019cfe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019cb0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8019cb4:	4562      	cmp	r2, ip
 8019cb6:	dd22      	ble.n	8019cfe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019cb8:	b224      	sxth	r4, r4
 8019cba:	9a01      	ldr	r2, [sp, #4]
 8019cbc:	fb0c 6404 	mla	r4, ip, r4, r6
 8019cc0:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8019cc4:	0e22      	lsrs	r2, r4, #24
 8019cc6:	d01a      	beq.n	8019cfe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019cc8:	9e04      	ldr	r6, [sp, #16]
 8019cca:	4372      	muls	r2, r6
 8019ccc:	1c56      	adds	r6, r2, #1
 8019cce:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8019cd2:	1212      	asrs	r2, r2, #8
 8019cd4:	0a26      	lsrs	r6, r4, #8
 8019cd6:	2aff      	cmp	r2, #255	; 0xff
 8019cd8:	9605      	str	r6, [sp, #20]
 8019cda:	d116      	bne.n	8019d0a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8019cdc:	f06f 0201 	mvn.w	r2, #1
 8019ce0:	fb02 fc07 	mul.w	ip, r2, r7
 8019ce4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8019ce8:	0962      	lsrs	r2, r4, #5
 8019cea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019cee:	f026 0607 	bic.w	r6, r6, #7
 8019cf2:	4316      	orrs	r6, r2
 8019cf4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8019cf8:	4326      	orrs	r6, r4
 8019cfa:	f825 600c 	strh.w	r6, [r5, ip]
 8019cfe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019d00:	4410      	add	r0, r2
 8019d02:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019d04:	3f01      	subs	r7, #1
 8019d06:	4411      	add	r1, r2
 8019d08:	e787      	b.n	8019c1a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019d0a:	f06f 0601 	mvn.w	r6, #1
 8019d0e:	437e      	muls	r6, r7
 8019d10:	fa1f fa82 	uxth.w	sl, r2
 8019d14:	f835 8006 	ldrh.w	r8, [r5, r6]
 8019d18:	9602      	str	r6, [sp, #8]
 8019d1a:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8019d1e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8019d22:	43d2      	mvns	r2, r2
 8019d24:	b2d2      	uxtb	r2, r2
 8019d26:	fb1c fc0a 	smulbb	ip, ip, sl
 8019d2a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019d2e:	fb0e ce02 	mla	lr, lr, r2, ip
 8019d32:	b2e4      	uxtb	r4, r4
 8019d34:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8019d38:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019d3c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8019d40:	fa5f f888 	uxtb.w	r8, r8
 8019d44:	fb14 f40a 	smulbb	r4, r4, sl
 8019d48:	fb08 4402 	mla	r4, r8, r2, r4
 8019d4c:	fa1f fe8e 	uxth.w	lr, lr
 8019d50:	fb16 f60a 	smulbb	r6, r6, sl
 8019d54:	b2a4      	uxth	r4, r4
 8019d56:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8019d5a:	fb0c 6c02 	mla	ip, ip, r2, r6
 8019d5e:	f10e 0201 	add.w	r2, lr, #1
 8019d62:	1c66      	adds	r6, r4, #1
 8019d64:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8019d68:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8019d6c:	fa1f fc8c 	uxth.w	ip, ip
 8019d70:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019d74:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8019d78:	ea46 0e0e 	orr.w	lr, r6, lr
 8019d7c:	f10c 0601 	add.w	r6, ip, #1
 8019d80:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8019d84:	0976      	lsrs	r6, r6, #5
 8019d86:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019d8a:	9a02      	ldr	r2, [sp, #8]
 8019d8c:	ea4e 0e06 	orr.w	lr, lr, r6
 8019d90:	f825 e002 	strh.w	lr, [r5, r2]
 8019d94:	e7b3      	b.n	8019cfe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019d96:	f04f 0800 	mov.w	r8, #0
 8019d9a:	eba3 0208 	sub.w	r2, r3, r8
 8019d9e:	2a00      	cmp	r2, #0
 8019da0:	f77f af3e 	ble.w	8019c20 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019da4:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8019da8:	1404      	asrs	r4, r0, #16
 8019daa:	140a      	asrs	r2, r1, #16
 8019dac:	fb06 4202 	mla	r2, r6, r2, r4
 8019db0:	9c01      	ldr	r4, [sp, #4]
 8019db2:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8019db6:	0e22      	lsrs	r2, r4, #24
 8019db8:	d016      	beq.n	8019de8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8019dba:	9e04      	ldr	r6, [sp, #16]
 8019dbc:	4372      	muls	r2, r6
 8019dbe:	1c56      	adds	r6, r2, #1
 8019dc0:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8019dc4:	1212      	asrs	r2, r2, #8
 8019dc6:	2aff      	cmp	r2, #255	; 0xff
 8019dc8:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8019dcc:	d113      	bne.n	8019df6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8019dce:	0962      	lsrs	r2, r4, #5
 8019dd0:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8019dd4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019dd8:	f026 0607 	bic.w	r6, r6, #7
 8019ddc:	4316      	orrs	r6, r2
 8019dde:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8019de2:	4326      	orrs	r6, r4
 8019de4:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8019de8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019dea:	4410      	add	r0, r2
 8019dec:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019dee:	f108 0801 	add.w	r8, r8, #1
 8019df2:	4411      	add	r1, r2
 8019df4:	e7d1      	b.n	8019d9a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8019df6:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8019dfa:	fa1f fa82 	uxth.w	sl, r2
 8019dfe:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019e02:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8019e06:	43d2      	mvns	r2, r2
 8019e08:	b2d2      	uxtb	r2, r2
 8019e0a:	fb17 f70a 	smulbb	r7, r7, sl
 8019e0e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019e12:	fb0c 7c02 	mla	ip, ip, r2, r7
 8019e16:	b2e4      	uxtb	r4, r4
 8019e18:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8019e1c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019e20:	fa5f fe8e 	uxtb.w	lr, lr
 8019e24:	fb14 f40a 	smulbb	r4, r4, sl
 8019e28:	fb0e 4402 	mla	r4, lr, r2, r4
 8019e2c:	b2f6      	uxtb	r6, r6
 8019e2e:	fa1f fc8c 	uxth.w	ip, ip
 8019e32:	fb16 f60a 	smulbb	r6, r6, sl
 8019e36:	b2a4      	uxth	r4, r4
 8019e38:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019e3c:	fb07 6702 	mla	r7, r7, r2, r6
 8019e40:	f10c 0201 	add.w	r2, ip, #1
 8019e44:	1c66      	adds	r6, r4, #1
 8019e46:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8019e4a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8019e4e:	b2bf      	uxth	r7, r7
 8019e50:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019e54:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019e58:	ea46 0c0c 	orr.w	ip, r6, ip
 8019e5c:	1c7e      	adds	r6, r7, #1
 8019e5e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8019e62:	0976      	lsrs	r6, r6, #5
 8019e64:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019e68:	ea4c 0c06 	orr.w	ip, ip, r6
 8019e6c:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8019e70:	e7ba      	b.n	8019de8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8019e72:	b007      	add	sp, #28
 8019e74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019e78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019e78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e7c:	b085      	sub	sp, #20
 8019e7e:	468b      	mov	fp, r1
 8019e80:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019e82:	9203      	str	r2, [sp, #12]
 8019e84:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019e88:	6841      	ldr	r1, [r0, #4]
 8019e8a:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8019e8e:	fb01 2404 	mla	r4, r1, r4, r2
 8019e92:	6802      	ldr	r2, [r0, #0]
 8019e94:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019e98:	f8d8 2000 	ldr.w	r2, [r8]
 8019e9c:	9201      	str	r2, [sp, #4]
 8019e9e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019ea2:	f1bb 0f00 	cmp.w	fp, #0
 8019ea6:	dc03      	bgt.n	8019eb0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019ea8:	9a03      	ldr	r2, [sp, #12]
 8019eaa:	2a00      	cmp	r2, #0
 8019eac:	f340 814f 	ble.w	801a14e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8019eb0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019eb2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8019eb6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8019eba:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019ebe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019ec0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019ec4:	2b00      	cmp	r3, #0
 8019ec6:	dd0e      	ble.n	8019ee6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019ec8:	1408      	asrs	r0, r1, #16
 8019eca:	d405      	bmi.n	8019ed8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019ecc:	42b8      	cmp	r0, r7
 8019ece:	da03      	bge.n	8019ed8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019ed0:	1410      	asrs	r0, r2, #16
 8019ed2:	d401      	bmi.n	8019ed8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019ed4:	42b0      	cmp	r0, r6
 8019ed6:	db07      	blt.n	8019ee8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019ed8:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019eda:	4401      	add	r1, r0
 8019edc:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019ede:	3b01      	subs	r3, #1
 8019ee0:	4402      	add	r2, r0
 8019ee2:	3402      	adds	r4, #2
 8019ee4:	e7ee      	b.n	8019ec4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019ee6:	d017      	beq.n	8019f18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019ee8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019eea:	1e58      	subs	r0, r3, #1
 8019eec:	fb05 1500 	mla	r5, r5, r0, r1
 8019ef0:	142d      	asrs	r5, r5, #16
 8019ef2:	d409      	bmi.n	8019f08 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019ef4:	42bd      	cmp	r5, r7
 8019ef6:	da07      	bge.n	8019f08 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019ef8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019efa:	fb05 2000 	mla	r0, r5, r0, r2
 8019efe:	1400      	asrs	r0, r0, #16
 8019f00:	d402      	bmi.n	8019f08 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019f02:	42b0      	cmp	r0, r6
 8019f04:	f2c0 80ba 	blt.w	801a07c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019f08:	2600      	movs	r6, #0
 8019f0a:	1998      	adds	r0, r3, r6
 8019f0c:	2800      	cmp	r0, #0
 8019f0e:	dc3e      	bgt.n	8019f8e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019f10:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019f14:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019f18:	f1bb 0f00 	cmp.w	fp, #0
 8019f1c:	f340 8117 	ble.w	801a14e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8019f20:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019f24:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019f28:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019f2c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019f2e:	f1bb 0b01 	subs.w	fp, fp, #1
 8019f32:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019f36:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019f3a:	eeb0 6a62 	vmov.f32	s12, s5
 8019f3e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019f42:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019f46:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019f4a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019f4e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019f52:	eeb0 6a43 	vmov.f32	s12, s6
 8019f56:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019f5a:	ee12 2a90 	vmov	r2, s5
 8019f5e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019f62:	fb92 f3f3 	sdiv	r3, r2, r3
 8019f66:	ee13 2a10 	vmov	r2, s6
 8019f6a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019f6e:	9311      	str	r3, [sp, #68]	; 0x44
 8019f70:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019f72:	fb92 f3f3 	sdiv	r3, r2, r3
 8019f76:	9a03      	ldr	r2, [sp, #12]
 8019f78:	9312      	str	r3, [sp, #72]	; 0x48
 8019f7a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019f7e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019f80:	eeb0 3a67 	vmov.f32	s6, s15
 8019f84:	bf08      	it	eq
 8019f86:	4613      	moveq	r3, r2
 8019f88:	eef0 2a47 	vmov.f32	s5, s14
 8019f8c:	e789      	b.n	8019ea2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8019f8e:	140f      	asrs	r7, r1, #16
 8019f90:	d424      	bmi.n	8019fdc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019f92:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8019f96:	42bd      	cmp	r5, r7
 8019f98:	dd20      	ble.n	8019fdc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019f9a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019f9e:	d41d      	bmi.n	8019fdc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019fa0:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8019fa4:	4560      	cmp	r0, ip
 8019fa6:	dd19      	ble.n	8019fdc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019fa8:	b22d      	sxth	r5, r5
 8019faa:	fb0c 7505 	mla	r5, ip, r5, r7
 8019fae:	9801      	ldr	r0, [sp, #4]
 8019fb0:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8019fb4:	0e07      	lsrs	r7, r0, #24
 8019fb6:	2fff      	cmp	r7, #255	; 0xff
 8019fb8:	d116      	bne.n	8019fe8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019fba:	f06f 0501 	mvn.w	r5, #1
 8019fbe:	fb05 f706 	mul.w	r7, r5, r6
 8019fc2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8019fc6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8019fca:	0945      	lsrs	r5, r0, #5
 8019fcc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019fd0:	ea4c 0505 	orr.w	r5, ip, r5
 8019fd4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019fd8:	4305      	orrs	r5, r0
 8019fda:	53e5      	strh	r5, [r4, r7]
 8019fdc:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019fde:	4401      	add	r1, r0
 8019fe0:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019fe2:	3e01      	subs	r6, #1
 8019fe4:	4402      	add	r2, r0
 8019fe6:	e790      	b.n	8019f0a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019fe8:	b2fd      	uxtb	r5, r7
 8019fea:	2f00      	cmp	r7, #0
 8019fec:	d0f6      	beq.n	8019fdc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019fee:	f06f 0701 	mvn.w	r7, #1
 8019ff2:	4377      	muls	r7, r6
 8019ff4:	fa1f f985 	uxth.w	r9, r5
 8019ff8:	f834 e007 	ldrh.w	lr, [r4, r7]
 8019ffc:	9702      	str	r7, [sp, #8]
 8019ffe:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a002:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a006:	43ed      	mvns	r5, r5
 801a008:	b2ed      	uxtb	r5, r5
 801a00a:	fb17 f709 	smulbb	r7, r7, r9
 801a00e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a012:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a016:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a01a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a01e:	b2c0      	uxtb	r0, r0
 801a020:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a024:	fa5f fe8e 	uxtb.w	lr, lr
 801a028:	fb10 f009 	smulbb	r0, r0, r9
 801a02c:	fb0e 0005 	mla	r0, lr, r5, r0
 801a030:	b280      	uxth	r0, r0
 801a032:	fa1f fc8c 	uxth.w	ip, ip
 801a036:	fb1a fa09 	smulbb	sl, sl, r9
 801a03a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a03e:	fb07 a705 	mla	r7, r7, r5, sl
 801a042:	f100 0a01 	add.w	sl, r0, #1
 801a046:	f10c 0501 	add.w	r5, ip, #1
 801a04a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a04e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a052:	b2bf      	uxth	r7, r7
 801a054:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a058:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a05c:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a060:	f107 0a01 	add.w	sl, r7, #1
 801a064:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a068:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a06c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a070:	9802      	ldr	r0, [sp, #8]
 801a072:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a076:	f824 c000 	strh.w	ip, [r4, r0]
 801a07a:	e7af      	b.n	8019fdc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a07c:	f04f 0e00 	mov.w	lr, #0
 801a080:	eba3 000e 	sub.w	r0, r3, lr
 801a084:	2800      	cmp	r0, #0
 801a086:	f77f af43 	ble.w	8019f10 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a08a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801a08e:	140d      	asrs	r5, r1, #16
 801a090:	1410      	asrs	r0, r2, #16
 801a092:	fb06 5000 	mla	r0, r6, r0, r5
 801a096:	9d01      	ldr	r5, [sp, #4]
 801a098:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a09c:	0e2e      	lsrs	r6, r5, #24
 801a09e:	2eff      	cmp	r6, #255	; 0xff
 801a0a0:	d112      	bne.n	801a0c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801a0a2:	482c      	ldr	r0, [pc, #176]	; (801a154 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801a0a4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a0a8:	0968      	lsrs	r0, r5, #5
 801a0aa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a0ae:	4330      	orrs	r0, r6
 801a0b0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a0b4:	4328      	orrs	r0, r5
 801a0b6:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801a0ba:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a0bc:	4401      	add	r1, r0
 801a0be:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a0c0:	f10e 0e01 	add.w	lr, lr, #1
 801a0c4:	4402      	add	r2, r0
 801a0c6:	e7db      	b.n	801a080 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801a0c8:	b2f0      	uxtb	r0, r6
 801a0ca:	2e00      	cmp	r6, #0
 801a0cc:	d0f5      	beq.n	801a0ba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a0ce:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801a0d2:	fa1f f980 	uxth.w	r9, r0
 801a0d6:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a0da:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a0de:	43c0      	mvns	r0, r0
 801a0e0:	b2c0      	uxtb	r0, r0
 801a0e2:	fb16 f609 	smulbb	r6, r6, r9
 801a0e6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a0ea:	fb07 6700 	mla	r7, r7, r0, r6
 801a0ee:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a0f2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a0f6:	b2ed      	uxtb	r5, r5
 801a0f8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a0fc:	fa5f fc8c 	uxtb.w	ip, ip
 801a100:	fb15 f509 	smulbb	r5, r5, r9
 801a104:	fb0c 5500 	mla	r5, ip, r0, r5
 801a108:	b2bf      	uxth	r7, r7
 801a10a:	fb1a fa09 	smulbb	sl, sl, r9
 801a10e:	b2ad      	uxth	r5, r5
 801a110:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a114:	fb06 a600 	mla	r6, r6, r0, sl
 801a118:	1c78      	adds	r0, r7, #1
 801a11a:	f105 0a01 	add.w	sl, r5, #1
 801a11e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a122:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a126:	b2b6      	uxth	r6, r6
 801a128:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a12c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a130:	ea4a 0707 	orr.w	r7, sl, r7
 801a134:	f106 0a01 	add.w	sl, r6, #1
 801a138:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a13c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a140:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a144:	ea47 070a 	orr.w	r7, r7, sl
 801a148:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801a14c:	e7b5      	b.n	801a0ba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a14e:	b005      	add	sp, #20
 801a150:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a154:	fffff800 	.word	0xfffff800

0801a158 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a158:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a15c:	b087      	sub	sp, #28
 801a15e:	468b      	mov	fp, r1
 801a160:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a162:	9203      	str	r2, [sp, #12]
 801a164:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a168:	9204      	str	r2, [sp, #16]
 801a16a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a16e:	6841      	ldr	r1, [r0, #4]
 801a170:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a174:	fb01 2404 	mla	r4, r1, r4, r2
 801a178:	6802      	ldr	r2, [r0, #0]
 801a17a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a17e:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a182:	3201      	adds	r2, #1
 801a184:	f022 0201 	bic.w	r2, r2, #1
 801a188:	9200      	str	r2, [sp, #0]
 801a18a:	f8d9 2000 	ldr.w	r2, [r9]
 801a18e:	9201      	str	r2, [sp, #4]
 801a190:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a194:	f1bb 0f00 	cmp.w	fp, #0
 801a198:	dc03      	bgt.n	801a1a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a19a:	9a03      	ldr	r2, [sp, #12]
 801a19c:	2a00      	cmp	r2, #0
 801a19e:	f340 8169 	ble.w	801a474 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a1a2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a1a4:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a1a8:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a1ac:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a1b0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a1b2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a1b6:	2b00      	cmp	r3, #0
 801a1b8:	dd0e      	ble.n	801a1d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a1ba:	1402      	asrs	r2, r0, #16
 801a1bc:	d405      	bmi.n	801a1ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a1be:	42ba      	cmp	r2, r7
 801a1c0:	da03      	bge.n	801a1ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a1c2:	140a      	asrs	r2, r1, #16
 801a1c4:	d401      	bmi.n	801a1ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a1c6:	42b2      	cmp	r2, r6
 801a1c8:	db07      	blt.n	801a1da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801a1ca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a1cc:	4410      	add	r0, r2
 801a1ce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a1d0:	3b01      	subs	r3, #1
 801a1d2:	4411      	add	r1, r2
 801a1d4:	3402      	adds	r4, #2
 801a1d6:	e7ee      	b.n	801a1b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a1d8:	d017      	beq.n	801a20a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a1da:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a1dc:	1e5a      	subs	r2, r3, #1
 801a1de:	fb05 0502 	mla	r5, r5, r2, r0
 801a1e2:	142d      	asrs	r5, r5, #16
 801a1e4:	d409      	bmi.n	801a1fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a1e6:	42bd      	cmp	r5, r7
 801a1e8:	da07      	bge.n	801a1fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a1ea:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a1ec:	fb05 1202 	mla	r2, r5, r2, r1
 801a1f0:	1412      	asrs	r2, r2, #16
 801a1f2:	d402      	bmi.n	801a1fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a1f4:	42b2      	cmp	r2, r6
 801a1f6:	f2c0 80c7 	blt.w	801a388 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801a1fa:	2700      	movs	r7, #0
 801a1fc:	19da      	adds	r2, r3, r7
 801a1fe:	2a00      	cmp	r2, #0
 801a200:	dc3e      	bgt.n	801a280 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a202:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a206:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a20a:	f1bb 0f00 	cmp.w	fp, #0
 801a20e:	f340 8131 	ble.w	801a474 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a212:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a216:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a21a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a21e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a220:	f1bb 0b01 	subs.w	fp, fp, #1
 801a224:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a228:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a22c:	eeb0 6a62 	vmov.f32	s12, s5
 801a230:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a234:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a238:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a23c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a240:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a244:	eeb0 6a43 	vmov.f32	s12, s6
 801a248:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a24c:	ee12 2a90 	vmov	r2, s5
 801a250:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a254:	fb92 f3f3 	sdiv	r3, r2, r3
 801a258:	ee13 2a10 	vmov	r2, s6
 801a25c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a260:	9313      	str	r3, [sp, #76]	; 0x4c
 801a262:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a264:	fb92 f3f3 	sdiv	r3, r2, r3
 801a268:	9a03      	ldr	r2, [sp, #12]
 801a26a:	9314      	str	r3, [sp, #80]	; 0x50
 801a26c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a270:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a272:	eeb0 3a67 	vmov.f32	s6, s15
 801a276:	bf08      	it	eq
 801a278:	4613      	moveq	r3, r2
 801a27a:	eef0 2a47 	vmov.f32	s5, s14
 801a27e:	e789      	b.n	801a194 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a280:	1405      	asrs	r5, r0, #16
 801a282:	d435      	bmi.n	801a2f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a284:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a288:	42aa      	cmp	r2, r5
 801a28a:	dd31      	ble.n	801a2f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a28c:	140e      	asrs	r6, r1, #16
 801a28e:	d42f      	bmi.n	801a2f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a290:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a294:	42b2      	cmp	r2, r6
 801a296:	dd2b      	ble.n	801a2f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a298:	9a00      	ldr	r2, [sp, #0]
 801a29a:	fb06 5502 	mla	r5, r6, r2, r5
 801a29e:	086a      	lsrs	r2, r5, #1
 801a2a0:	9e01      	ldr	r6, [sp, #4]
 801a2a2:	5cb2      	ldrb	r2, [r6, r2]
 801a2a4:	07ee      	lsls	r6, r5, #31
 801a2a6:	bf54      	ite	pl
 801a2a8:	f002 020f 	andpl.w	r2, r2, #15
 801a2ac:	1112      	asrmi	r2, r2, #4
 801a2ae:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a2b2:	b2d2      	uxtb	r2, r2
 801a2b4:	b1e2      	cbz	r2, 801a2f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a2b6:	9d04      	ldr	r5, [sp, #16]
 801a2b8:	436a      	muls	r2, r5
 801a2ba:	1c55      	adds	r5, r2, #1
 801a2bc:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801a2c0:	4d6e      	ldr	r5, [pc, #440]	; (801a47c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801a2c2:	682d      	ldr	r5, [r5, #0]
 801a2c4:	1212      	asrs	r2, r2, #8
 801a2c6:	0a2e      	lsrs	r6, r5, #8
 801a2c8:	2aff      	cmp	r2, #255	; 0xff
 801a2ca:	9605      	str	r6, [sp, #20]
 801a2cc:	d116      	bne.n	801a2fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801a2ce:	f06f 0201 	mvn.w	r2, #1
 801a2d2:	fb02 fc07 	mul.w	ip, r2, r7
 801a2d6:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a2da:	096a      	lsrs	r2, r5, #5
 801a2dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a2e0:	f026 0607 	bic.w	r6, r6, #7
 801a2e4:	4316      	orrs	r6, r2
 801a2e6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a2ea:	432e      	orrs	r6, r5
 801a2ec:	f824 600c 	strh.w	r6, [r4, ip]
 801a2f0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a2f2:	4410      	add	r0, r2
 801a2f4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a2f6:	3f01      	subs	r7, #1
 801a2f8:	4411      	add	r1, r2
 801a2fa:	e77f      	b.n	801a1fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801a2fc:	f06f 0601 	mvn.w	r6, #1
 801a300:	437e      	muls	r6, r7
 801a302:	fa1f fa82 	uxth.w	sl, r2
 801a306:	f834 8006 	ldrh.w	r8, [r4, r6]
 801a30a:	9602      	str	r6, [sp, #8]
 801a30c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a310:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801a314:	43d2      	mvns	r2, r2
 801a316:	b2d2      	uxtb	r2, r2
 801a318:	fb1c fc0a 	smulbb	ip, ip, sl
 801a31c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a320:	fb0e ce02 	mla	lr, lr, r2, ip
 801a324:	b2ed      	uxtb	r5, r5
 801a326:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a32a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a32e:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a332:	fa5f f888 	uxtb.w	r8, r8
 801a336:	fb15 f50a 	smulbb	r5, r5, sl
 801a33a:	fb08 5502 	mla	r5, r8, r2, r5
 801a33e:	fa1f fe8e 	uxth.w	lr, lr
 801a342:	fb16 f60a 	smulbb	r6, r6, sl
 801a346:	b2ad      	uxth	r5, r5
 801a348:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a34c:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a350:	f10e 0201 	add.w	r2, lr, #1
 801a354:	1c6e      	adds	r6, r5, #1
 801a356:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a35a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801a35e:	fa1f fc8c 	uxth.w	ip, ip
 801a362:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a366:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a36a:	ea46 0e0e 	orr.w	lr, r6, lr
 801a36e:	f10c 0601 	add.w	r6, ip, #1
 801a372:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a376:	0976      	lsrs	r6, r6, #5
 801a378:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a37c:	9a02      	ldr	r2, [sp, #8]
 801a37e:	ea4e 0e06 	orr.w	lr, lr, r6
 801a382:	f824 e002 	strh.w	lr, [r4, r2]
 801a386:	e7b3      	b.n	801a2f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a388:	f04f 0800 	mov.w	r8, #0
 801a38c:	eba3 0208 	sub.w	r2, r3, r8
 801a390:	2a00      	cmp	r2, #0
 801a392:	f77f af36 	ble.w	801a202 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a396:	9e00      	ldr	r6, [sp, #0]
 801a398:	1402      	asrs	r2, r0, #16
 801a39a:	140d      	asrs	r5, r1, #16
 801a39c:	fb06 2505 	mla	r5, r6, r5, r2
 801a3a0:	086a      	lsrs	r2, r5, #1
 801a3a2:	9e01      	ldr	r6, [sp, #4]
 801a3a4:	5cb2      	ldrb	r2, [r6, r2]
 801a3a6:	07ed      	lsls	r5, r5, #31
 801a3a8:	bf54      	ite	pl
 801a3aa:	f002 020f 	andpl.w	r2, r2, #15
 801a3ae:	1112      	asrmi	r2, r2, #4
 801a3b0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a3b4:	b2d2      	uxtb	r2, r2
 801a3b6:	b1c2      	cbz	r2, 801a3ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801a3b8:	9d04      	ldr	r5, [sp, #16]
 801a3ba:	436a      	muls	r2, r5
 801a3bc:	1c55      	adds	r5, r2, #1
 801a3be:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801a3c2:	4d2e      	ldr	r5, [pc, #184]	; (801a47c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801a3c4:	1212      	asrs	r2, r2, #8
 801a3c6:	682e      	ldr	r6, [r5, #0]
 801a3c8:	2aff      	cmp	r2, #255	; 0xff
 801a3ca:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801a3ce:	d113      	bne.n	801a3f8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801a3d0:	0972      	lsrs	r2, r6, #5
 801a3d2:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801a3d6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a3da:	f025 0507 	bic.w	r5, r5, #7
 801a3de:	4315      	orrs	r5, r2
 801a3e0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801a3e4:	4335      	orrs	r5, r6
 801a3e6:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801a3ea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a3ec:	4410      	add	r0, r2
 801a3ee:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a3f0:	f108 0801 	add.w	r8, r8, #1
 801a3f4:	4411      	add	r1, r2
 801a3f6:	e7c9      	b.n	801a38c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a3f8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a3fc:	fa1f fa82 	uxth.w	sl, r2
 801a400:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a404:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801a408:	43d2      	mvns	r2, r2
 801a40a:	b2d2      	uxtb	r2, r2
 801a40c:	fb17 f70a 	smulbb	r7, r7, sl
 801a410:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a414:	fb0c 7c02 	mla	ip, ip, r2, r7
 801a418:	b2f6      	uxtb	r6, r6
 801a41a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a41e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a422:	fa5f fe8e 	uxtb.w	lr, lr
 801a426:	fb16 f60a 	smulbb	r6, r6, sl
 801a42a:	fb0e 6602 	mla	r6, lr, r2, r6
 801a42e:	b2ed      	uxtb	r5, r5
 801a430:	fa1f fc8c 	uxth.w	ip, ip
 801a434:	fb15 f50a 	smulbb	r5, r5, sl
 801a438:	b2b6      	uxth	r6, r6
 801a43a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a43e:	fb07 5702 	mla	r7, r7, r2, r5
 801a442:	f10c 0201 	add.w	r2, ip, #1
 801a446:	1c75      	adds	r5, r6, #1
 801a448:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a44c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801a450:	b2bf      	uxth	r7, r7
 801a452:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a456:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a45a:	ea45 0c0c 	orr.w	ip, r5, ip
 801a45e:	1c7d      	adds	r5, r7, #1
 801a460:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801a464:	096d      	lsrs	r5, r5, #5
 801a466:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a46a:	ea4c 0c05 	orr.w	ip, ip, r5
 801a46e:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801a472:	e7ba      	b.n	801a3ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801a474:	b007      	add	sp, #28
 801a476:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a47a:	bf00      	nop
 801a47c:	200137cc 	.word	0x200137cc

0801a480 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a484:	b087      	sub	sp, #28
 801a486:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801a794 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801a48a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a48c:	9205      	str	r2, [sp, #20]
 801a48e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a492:	9101      	str	r1, [sp, #4]
 801a494:	6841      	ldr	r1, [r0, #4]
 801a496:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801a49a:	fb01 2404 	mla	r4, r1, r4, r2
 801a49e:	6802      	ldr	r2, [r0, #0]
 801a4a0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a4a4:	f8db 2008 	ldr.w	r2, [fp, #8]
 801a4a8:	3201      	adds	r2, #1
 801a4aa:	f022 0201 	bic.w	r2, r2, #1
 801a4ae:	9202      	str	r2, [sp, #8]
 801a4b0:	f8db 2000 	ldr.w	r2, [fp]
 801a4b4:	9203      	str	r2, [sp, #12]
 801a4b6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a4ba:	9a01      	ldr	r2, [sp, #4]
 801a4bc:	2a00      	cmp	r2, #0
 801a4be:	dc03      	bgt.n	801a4c8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a4c0:	9a05      	ldr	r2, [sp, #20]
 801a4c2:	2a00      	cmp	r2, #0
 801a4c4:	f340 8162 	ble.w	801a78c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a4c8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a4ca:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801a4ce:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801a4d2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a4d6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a4d8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a4dc:	2b00      	cmp	r3, #0
 801a4de:	dd0e      	ble.n	801a4fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a4e0:	1402      	asrs	r2, r0, #16
 801a4e2:	d405      	bmi.n	801a4f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a4e4:	42ba      	cmp	r2, r7
 801a4e6:	da03      	bge.n	801a4f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a4e8:	140a      	asrs	r2, r1, #16
 801a4ea:	d401      	bmi.n	801a4f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a4ec:	42b2      	cmp	r2, r6
 801a4ee:	db07      	blt.n	801a500 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a4f0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a4f2:	4410      	add	r0, r2
 801a4f4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a4f6:	3b01      	subs	r3, #1
 801a4f8:	4411      	add	r1, r2
 801a4fa:	3402      	adds	r4, #2
 801a4fc:	e7ee      	b.n	801a4dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801a4fe:	d017      	beq.n	801a530 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801a500:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a502:	1e5a      	subs	r2, r3, #1
 801a504:	fb05 0502 	mla	r5, r5, r2, r0
 801a508:	142d      	asrs	r5, r5, #16
 801a50a:	d409      	bmi.n	801a520 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a50c:	42bd      	cmp	r5, r7
 801a50e:	da07      	bge.n	801a520 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a510:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a512:	fb05 1202 	mla	r2, r5, r2, r1
 801a516:	1412      	asrs	r2, r2, #16
 801a518:	d402      	bmi.n	801a520 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a51a:	42b2      	cmp	r2, r6
 801a51c:	f2c0 80c3 	blt.w	801a6a6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801a520:	2500      	movs	r5, #0
 801a522:	195a      	adds	r2, r3, r5
 801a524:	2a00      	cmp	r2, #0
 801a526:	dc3f      	bgt.n	801a5a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a528:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a52c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a530:	9b01      	ldr	r3, [sp, #4]
 801a532:	2b00      	cmp	r3, #0
 801a534:	f340 812a 	ble.w	801a78c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a538:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a53c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a540:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a544:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a546:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a54a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a54e:	eeb0 6a62 	vmov.f32	s12, s5
 801a552:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a556:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a55a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a55e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a562:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a566:	eeb0 6a43 	vmov.f32	s12, s6
 801a56a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a56e:	ee12 2a90 	vmov	r2, s5
 801a572:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a576:	fb92 f3f3 	sdiv	r3, r2, r3
 801a57a:	ee13 2a10 	vmov	r2, s6
 801a57e:	9313      	str	r3, [sp, #76]	; 0x4c
 801a580:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a582:	fb92 f3f3 	sdiv	r3, r2, r3
 801a586:	9314      	str	r3, [sp, #80]	; 0x50
 801a588:	9b01      	ldr	r3, [sp, #4]
 801a58a:	9a05      	ldr	r2, [sp, #20]
 801a58c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a590:	3b01      	subs	r3, #1
 801a592:	9301      	str	r3, [sp, #4]
 801a594:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a598:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a59a:	eeb0 3a67 	vmov.f32	s6, s15
 801a59e:	bf08      	it	eq
 801a5a0:	4613      	moveq	r3, r2
 801a5a2:	eef0 2a47 	vmov.f32	s5, s14
 801a5a6:	e788      	b.n	801a4ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a5a8:	1406      	asrs	r6, r0, #16
 801a5aa:	d42c      	bmi.n	801a606 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a5ac:	f8db 2008 	ldr.w	r2, [fp, #8]
 801a5b0:	42b2      	cmp	r2, r6
 801a5b2:	dd28      	ble.n	801a606 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a5b4:	140f      	asrs	r7, r1, #16
 801a5b6:	d426      	bmi.n	801a606 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a5b8:	f8db 200c 	ldr.w	r2, [fp, #12]
 801a5bc:	42ba      	cmp	r2, r7
 801a5be:	dd22      	ble.n	801a606 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a5c0:	9a02      	ldr	r2, [sp, #8]
 801a5c2:	fb07 6602 	mla	r6, r7, r2, r6
 801a5c6:	0872      	lsrs	r2, r6, #1
 801a5c8:	9f03      	ldr	r7, [sp, #12]
 801a5ca:	5cba      	ldrb	r2, [r7, r2]
 801a5cc:	07f6      	lsls	r6, r6, #31
 801a5ce:	bf54      	ite	pl
 801a5d0:	f002 020f 	andpl.w	r2, r2, #15
 801a5d4:	1112      	asrmi	r2, r2, #4
 801a5d6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a5da:	b2d2      	uxtb	r2, r2
 801a5dc:	2aff      	cmp	r2, #255	; 0xff
 801a5de:	d118      	bne.n	801a612 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801a5e0:	f8d8 2000 	ldr.w	r2, [r8]
 801a5e4:	f06f 0601 	mvn.w	r6, #1
 801a5e8:	fb06 f705 	mul.w	r7, r6, r5
 801a5ec:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801a5f0:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801a5f4:	0956      	lsrs	r6, r2, #5
 801a5f6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a5fa:	ea4c 0606 	orr.w	r6, ip, r6
 801a5fe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a602:	4316      	orrs	r6, r2
 801a604:	53e6      	strh	r6, [r4, r7]
 801a606:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a608:	4410      	add	r0, r2
 801a60a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a60c:	3d01      	subs	r5, #1
 801a60e:	4411      	add	r1, r2
 801a610:	e787      	b.n	801a522 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a612:	2a00      	cmp	r2, #0
 801a614:	d0f7      	beq.n	801a606 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a616:	f06f 0601 	mvn.w	r6, #1
 801a61a:	436e      	muls	r6, r5
 801a61c:	f8d8 c000 	ldr.w	ip, [r8]
 801a620:	f834 e006 	ldrh.w	lr, [r4, r6]
 801a624:	9604      	str	r6, [sp, #16]
 801a626:	fa1f f982 	uxth.w	r9, r2
 801a62a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801a62e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801a632:	43d2      	mvns	r2, r2
 801a634:	b2d2      	uxtb	r2, r2
 801a636:	fb16 f609 	smulbb	r6, r6, r9
 801a63a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a63e:	fb07 6702 	mla	r7, r7, r2, r6
 801a642:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801a646:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a64a:	fa5f fc8c 	uxtb.w	ip, ip
 801a64e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a652:	fa5f fe8e 	uxtb.w	lr, lr
 801a656:	fb1c fc09 	smulbb	ip, ip, r9
 801a65a:	fb0e cc02 	mla	ip, lr, r2, ip
 801a65e:	b2bf      	uxth	r7, r7
 801a660:	fb1a fa09 	smulbb	sl, sl, r9
 801a664:	fa1f fc8c 	uxth.w	ip, ip
 801a668:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a66c:	fb06 a602 	mla	r6, r6, r2, sl
 801a670:	1c7a      	adds	r2, r7, #1
 801a672:	f10c 0a01 	add.w	sl, ip, #1
 801a676:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a67a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801a67e:	b2b6      	uxth	r6, r6
 801a680:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a684:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a688:	ea4a 0707 	orr.w	r7, sl, r7
 801a68c:	f106 0a01 	add.w	sl, r6, #1
 801a690:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a694:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a698:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a69c:	9a04      	ldr	r2, [sp, #16]
 801a69e:	ea47 070a 	orr.w	r7, r7, sl
 801a6a2:	52a7      	strh	r7, [r4, r2]
 801a6a4:	e7af      	b.n	801a606 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a6a6:	f04f 0e00 	mov.w	lr, #0
 801a6aa:	eba3 020e 	sub.w	r2, r3, lr
 801a6ae:	2a00      	cmp	r2, #0
 801a6b0:	f77f af3a 	ble.w	801a528 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a6b4:	9e02      	ldr	r6, [sp, #8]
 801a6b6:	1402      	asrs	r2, r0, #16
 801a6b8:	140d      	asrs	r5, r1, #16
 801a6ba:	fb06 2505 	mla	r5, r6, r5, r2
 801a6be:	086a      	lsrs	r2, r5, #1
 801a6c0:	9e03      	ldr	r6, [sp, #12]
 801a6c2:	5cb2      	ldrb	r2, [r6, r2]
 801a6c4:	07ed      	lsls	r5, r5, #31
 801a6c6:	bf54      	ite	pl
 801a6c8:	f002 020f 	andpl.w	r2, r2, #15
 801a6cc:	1112      	asrmi	r2, r2, #4
 801a6ce:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a6d2:	b2d2      	uxtb	r2, r2
 801a6d4:	2aff      	cmp	r2, #255	; 0xff
 801a6d6:	d115      	bne.n	801a704 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801a6d8:	f8d8 5000 	ldr.w	r5, [r8]
 801a6dc:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801a6e0:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801a6e4:	096a      	lsrs	r2, r5, #5
 801a6e6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a6ea:	4332      	orrs	r2, r6
 801a6ec:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a6f0:	432a      	orrs	r2, r5
 801a6f2:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801a6f6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a6f8:	4410      	add	r0, r2
 801a6fa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a6fc:	f10e 0e01 	add.w	lr, lr, #1
 801a700:	4411      	add	r1, r2
 801a702:	e7d2      	b.n	801a6aa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801a704:	2a00      	cmp	r2, #0
 801a706:	d0f6      	beq.n	801a6f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801a708:	f8d8 7000 	ldr.w	r7, [r8]
 801a70c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801a710:	fa1f f982 	uxth.w	r9, r2
 801a714:	ea4f 262c 	mov.w	r6, ip, asr #8
 801a718:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801a71c:	43d2      	mvns	r2, r2
 801a71e:	b2d2      	uxtb	r2, r2
 801a720:	fb15 f509 	smulbb	r5, r5, r9
 801a724:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a728:	fb06 5602 	mla	r6, r6, r2, r5
 801a72c:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801a730:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801a734:	b2ff      	uxtb	r7, r7
 801a736:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a73a:	fa5f fc8c 	uxtb.w	ip, ip
 801a73e:	fb17 f709 	smulbb	r7, r7, r9
 801a742:	fb0c 7702 	mla	r7, ip, r2, r7
 801a746:	b2b6      	uxth	r6, r6
 801a748:	fb1a fa09 	smulbb	sl, sl, r9
 801a74c:	b2bf      	uxth	r7, r7
 801a74e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a752:	fb05 a502 	mla	r5, r5, r2, sl
 801a756:	1c72      	adds	r2, r6, #1
 801a758:	f107 0a01 	add.w	sl, r7, #1
 801a75c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801a760:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a764:	b2ad      	uxth	r5, r5
 801a766:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a76a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a76e:	ea4a 0606 	orr.w	r6, sl, r6
 801a772:	f105 0a01 	add.w	sl, r5, #1
 801a776:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a77a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a77e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a782:	ea46 060a 	orr.w	r6, r6, sl
 801a786:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801a78a:	e7b4      	b.n	801a6f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801a78c:	b007      	add	sp, #28
 801a78e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a792:	bf00      	nop
 801a794:	200137cc 	.word	0x200137cc

0801a798 <_ZN8touchgfx8LCD16bppD1Ev>:
 801a798:	4770      	bx	lr

0801a79a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801a79a:	4770      	bx	lr

0801a79c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801a79c:	4770      	bx	lr

0801a79e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801a79e:	4770      	bx	lr

0801a7a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801a7a0:	4770      	bx	lr

0801a7a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801a7a2:	4770      	bx	lr

0801a7a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801a7a4:	4770      	bx	lr

0801a7a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801a7a6:	4770      	bx	lr

0801a7a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801a7a8:	4770      	bx	lr

0801a7aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801a7aa:	4770      	bx	lr

0801a7ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801a7ac:	4770      	bx	lr

0801a7ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801a7ae:	4770      	bx	lr

0801a7b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801a7b0:	4770      	bx	lr

0801a7b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801a7b2:	4770      	bx	lr

0801a7b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801a7b4:	4770      	bx	lr

0801a7b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801a7b6:	4770      	bx	lr

0801a7b8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801a7b8:	4770      	bx	lr

0801a7ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801a7ba:	4770      	bx	lr

0801a7bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801a7bc:	4770      	bx	lr

0801a7be <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801a7be:	4770      	bx	lr

0801a7c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801a7c0:	4770      	bx	lr

0801a7c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801a7c2:	4770      	bx	lr

0801a7c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801a7c4:	4770      	bx	lr

0801a7c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801a7c6:	4770      	bx	lr

0801a7c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801a7c8:	4770      	bx	lr

0801a7ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801a7ca:	4770      	bx	lr

0801a7cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801a7cc:	4770      	bx	lr

0801a7ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801a7ce:	4770      	bx	lr

0801a7d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801a7d0:	4770      	bx	lr

0801a7d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801a7d2:	4770      	bx	lr

0801a7d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801a7d4:	4770      	bx	lr

0801a7d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801a7d6:	4770      	bx	lr

0801a7d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801a7d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a7dc:	b088      	sub	sp, #32
 801a7de:	ac08      	add	r4, sp, #32
 801a7e0:	4606      	mov	r6, r0
 801a7e2:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801a7e6:	4620      	mov	r0, r4
 801a7e8:	4688      	mov	r8, r1
 801a7ea:	4691      	mov	r9, r2
 801a7ec:	f7fd fc62 	bl	80180b4 <_ZNK8touchgfx6Bitmap7getDataEv>
 801a7f0:	6833      	ldr	r3, [r6, #0]
 801a7f2:	4605      	mov	r5, r0
 801a7f4:	4620      	mov	r0, r4
 801a7f6:	699f      	ldr	r7, [r3, #24]
 801a7f8:	f7fd fb70 	bl	8017edc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801a7fc:	4682      	mov	sl, r0
 801a7fe:	4620      	mov	r0, r4
 801a800:	f7fd fba0 	bl	8017f44 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801a804:	9500      	str	r5, [sp, #0]
 801a806:	e9cd a001 	strd	sl, r0, [sp, #4]
 801a80a:	464b      	mov	r3, r9
 801a80c:	a806      	add	r0, sp, #24
 801a80e:	4642      	mov	r2, r8
 801a810:	4631      	mov	r1, r6
 801a812:	47b8      	blx	r7
 801a814:	4628      	mov	r0, r5
 801a816:	b008      	add	sp, #32
 801a818:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801a81c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801a81c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801a820:	2300      	movs	r3, #0
 801a822:	9300      	str	r3, [sp, #0]
 801a824:	4b3d      	ldr	r3, [pc, #244]	; (801a91c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801a826:	781b      	ldrb	r3, [r3, #0]
 801a828:	2b00      	cmp	r3, #0
 801a82a:	d137      	bne.n	801a89c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801a82c:	4a3c      	ldr	r2, [pc, #240]	; (801a920 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801a82e:	f9b2 2000 	ldrsh.w	r2, [r2]
 801a832:	f8ad 2004 	strh.w	r2, [sp, #4]
 801a836:	2b00      	cmp	r3, #0
 801a838:	d132      	bne.n	801a8a0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801a83a:	4b3a      	ldr	r3, [pc, #232]	; (801a924 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801a83c:	f9b3 3000 	ldrsh.w	r3, [r3]
 801a840:	6808      	ldr	r0, [r1, #0]
 801a842:	6849      	ldr	r1, [r1, #4]
 801a844:	f8ad 3006 	strh.w	r3, [sp, #6]
 801a848:	ac02      	add	r4, sp, #8
 801a84a:	ab02      	add	r3, sp, #8
 801a84c:	c303      	stmia	r3!, {r0, r1}
 801a84e:	4669      	mov	r1, sp
 801a850:	4620      	mov	r0, r4
 801a852:	f7f9 ffb5 	bl	80147c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a856:	4668      	mov	r0, sp
 801a858:	f7f9 ff6e 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a85c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a860:	f8bd 2000 	ldrh.w	r2, [sp]
 801a864:	4d30      	ldr	r5, [pc, #192]	; (801a928 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801a866:	4413      	add	r3, r2
 801a868:	f8ad 3008 	strh.w	r3, [sp, #8]
 801a86c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801a870:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a874:	6828      	ldr	r0, [r5, #0]
 801a876:	4413      	add	r3, r2
 801a878:	f8ad 300a 	strh.w	r3, [sp, #10]
 801a87c:	6803      	ldr	r3, [r0, #0]
 801a87e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801a880:	4798      	blx	r3
 801a882:	f010 0f01 	tst.w	r0, #1
 801a886:	462f      	mov	r7, r5
 801a888:	d00c      	beq.n	801a8a4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801a88a:	6828      	ldr	r0, [r5, #0]
 801a88c:	6803      	ldr	r3, [r0, #0]
 801a88e:	e894 0006 	ldmia.w	r4, {r1, r2}
 801a892:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801a894:	4798      	blx	r3
 801a896:	b004      	add	sp, #16
 801a898:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a89c:	4a21      	ldr	r2, [pc, #132]	; (801a924 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801a89e:	e7c6      	b.n	801a82e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801a8a0:	4b1f      	ldr	r3, [pc, #124]	; (801a920 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801a8a2:	e7cb      	b.n	801a83c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801a8a4:	6838      	ldr	r0, [r7, #0]
 801a8a6:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801a8aa:	6803      	ldr	r3, [r0, #0]
 801a8ac:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801a8b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801a8b2:	4798      	blx	r3
 801a8b4:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801a8b8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801a8bc:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801a8c0:	fb16 3602 	smlabb	r6, r6, r2, r3
 801a8c4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801a8c8:	6838      	ldr	r0, [r7, #0]
 801a8ca:	6803      	ldr	r3, [r0, #0]
 801a8cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a8ce:	4798      	blx	r3
 801a8d0:	4a13      	ldr	r2, [pc, #76]	; (801a920 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801a8d2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801a8d6:	8813      	ldrh	r3, [r2, #0]
 801a8d8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801a8dc:	fb03 1404 	mla	r4, r3, r4, r1
 801a8e0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801a8e4:	435d      	muls	r5, r3
 801a8e6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801a8ea:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801a8ee:	4691      	mov	r9, r2
 801a8f0:	6838      	ldr	r0, [r7, #0]
 801a8f2:	42ac      	cmp	r4, r5
 801a8f4:	6803      	ldr	r3, [r0, #0]
 801a8f6:	d20e      	bcs.n	801a916 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801a8f8:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801a8fc:	4632      	mov	r2, r6
 801a8fe:	4643      	mov	r3, r8
 801a900:	4621      	mov	r1, r4
 801a902:	47d0      	blx	sl
 801a904:	f8b9 3000 	ldrh.w	r3, [r9]
 801a908:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a90c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801a910:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801a914:	e7ec      	b.n	801a8f0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801a916:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a918:	4798      	blx	r3
 801a91a:	e7bc      	b.n	801a896 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801a91c:	200137b4 	.word	0x200137b4
 801a920:	200137b6 	.word	0x200137b6
 801a924:	200137b8 	.word	0x200137b8
 801a928:	200137bc 	.word	0x200137bc

0801a92c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801a92c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a930:	b08b      	sub	sp, #44	; 0x2c
 801a932:	460f      	mov	r7, r1
 801a934:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801a938:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801a93c:	4616      	mov	r6, r2
 801a93e:	f1bb 0f00 	cmp.w	fp, #0
 801a942:	d04a      	beq.n	801a9da <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801a944:	6810      	ldr	r0, [r2, #0]
 801a946:	6851      	ldr	r1, [r2, #4]
 801a948:	ad06      	add	r5, sp, #24
 801a94a:	c503      	stmia	r5!, {r0, r1}
 801a94c:	6818      	ldr	r0, [r3, #0]
 801a94e:	6859      	ldr	r1, [r3, #4]
 801a950:	ad08      	add	r5, sp, #32
 801a952:	c503      	stmia	r5!, {r0, r1}
 801a954:	a806      	add	r0, sp, #24
 801a956:	f7f9 feef 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a95a:	4631      	mov	r1, r6
 801a95c:	a808      	add	r0, sp, #32
 801a95e:	f7f9 ff2f 	bl	80147c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a962:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801a966:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801a96a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801a96e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801a972:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801a976:	fb16 2103 	smlabb	r1, r6, r3, r2
 801a97a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801a97e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801a982:	4f5f      	ldr	r7, [pc, #380]	; (801ab00 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801a984:	440a      	add	r2, r1
 801a986:	f8ad 2020 	strh.w	r2, [sp, #32]
 801a98a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801a98e:	6838      	ldr	r0, [r7, #0]
 801a990:	4413      	add	r3, r2
 801a992:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801a996:	6803      	ldr	r3, [r0, #0]
 801a998:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801a99a:	4798      	blx	r3
 801a99c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801a9a0:	46b9      	mov	r9, r7
 801a9a2:	d11d      	bne.n	801a9e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801a9a4:	b9fc      	cbnz	r4, 801a9e6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801a9a6:	f010 0f01 	tst.w	r0, #1
 801a9aa:	d01c      	beq.n	801a9e6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801a9ac:	f8d9 0000 	ldr.w	r0, [r9]
 801a9b0:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801a9b4:	6801      	ldr	r1, [r0, #0]
 801a9b6:	f8cd b00c 	str.w	fp, [sp, #12]
 801a9ba:	2700      	movs	r7, #0
 801a9bc:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801a9c0:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801a9c4:	9402      	str	r4, [sp, #8]
 801a9c6:	b2ad      	uxth	r5, r5
 801a9c8:	fa1f f488 	uxth.w	r4, r8
 801a9cc:	9501      	str	r5, [sp, #4]
 801a9ce:	9400      	str	r4, [sp, #0]
 801a9d0:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801a9d2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801a9d6:	4631      	mov	r1, r6
 801a9d8:	47a0      	blx	r4
 801a9da:	b00b      	add	sp, #44	; 0x2c
 801a9dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a9e0:	f010 0f04 	tst.w	r0, #4
 801a9e4:	e7e1      	b.n	801a9aa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801a9e6:	f8d9 0000 	ldr.w	r0, [r9]
 801a9ea:	6803      	ldr	r3, [r0, #0]
 801a9ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a9ee:	4798      	blx	r3
 801a9f0:	4b44      	ldr	r3, [pc, #272]	; (801ab04 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801a9f2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801a9f6:	881a      	ldrh	r2, [r3, #0]
 801a9f8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801a9fc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801aa00:	fb02 1404 	mla	r4, r2, r4, r1
 801aa04:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801aa08:	469a      	mov	sl, r3
 801aa0a:	fb05 f502 	mul.w	r5, r5, r2
 801aa0e:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801aa12:	d059      	beq.n	801aac8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801aa14:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801aa18:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801aa1c:	fa1f f28b 	uxth.w	r2, fp
 801aa20:	fa1f f989 	uxth.w	r9, r9
 801aa24:	469e      	mov	lr, r3
 801aa26:	42ac      	cmp	r4, r5
 801aa28:	d264      	bcs.n	801aaf4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801aa2a:	eb04 0a07 	add.w	sl, r4, r7
 801aa2e:	4554      	cmp	r4, sl
 801aa30:	d23d      	bcs.n	801aaae <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801aa32:	8821      	ldrh	r1, [r4, #0]
 801aa34:	f836 3b02 	ldrh.w	r3, [r6], #2
 801aa38:	1208      	asrs	r0, r1, #8
 801aa3a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801aa3e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801aa42:	fb10 f009 	smulbb	r0, r0, r9
 801aa46:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801aa4a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aa4e:	00c9      	lsls	r1, r1, #3
 801aa50:	fb0c 0c02 	mla	ip, ip, r2, r0
 801aa54:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801aa58:	10d8      	asrs	r0, r3, #3
 801aa5a:	b2c9      	uxtb	r1, r1
 801aa5c:	00db      	lsls	r3, r3, #3
 801aa5e:	fa1f fc8c 	uxth.w	ip, ip
 801aa62:	fb1b fb09 	smulbb	fp, fp, r9
 801aa66:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801aa6a:	b2db      	uxtb	r3, r3
 801aa6c:	fb11 f109 	smulbb	r1, r1, r9
 801aa70:	fb00 b002 	mla	r0, r0, r2, fp
 801aa74:	fb03 1302 	mla	r3, r3, r2, r1
 801aa78:	f10c 0b01 	add.w	fp, ip, #1
 801aa7c:	b29b      	uxth	r3, r3
 801aa7e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801aa82:	b280      	uxth	r0, r0
 801aa84:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801aa88:	f103 0c01 	add.w	ip, r3, #1
 801aa8c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801aa90:	1c43      	adds	r3, r0, #1
 801aa92:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801aa96:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801aa9a:	0940      	lsrs	r0, r0, #5
 801aa9c:	ea4c 0c0b 	orr.w	ip, ip, fp
 801aaa0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801aaa4:	ea4c 0c00 	orr.w	ip, ip, r0
 801aaa8:	f824 cb02 	strh.w	ip, [r4], #2
 801aaac:	e7bf      	b.n	801aa2e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801aaae:	f8be 3000 	ldrh.w	r3, [lr]
 801aab2:	eba3 0308 	sub.w	r3, r3, r8
 801aab6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801aaba:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801aabe:	eba3 0308 	sub.w	r3, r3, r8
 801aac2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801aac6:	e7ae      	b.n	801aa26 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801aac8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801aacc:	f8d9 0000 	ldr.w	r0, [r9]
 801aad0:	42ac      	cmp	r4, r5
 801aad2:	6803      	ldr	r3, [r0, #0]
 801aad4:	d20e      	bcs.n	801aaf4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801aad6:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801aada:	4632      	mov	r2, r6
 801aadc:	463b      	mov	r3, r7
 801aade:	4621      	mov	r1, r4
 801aae0:	47c0      	blx	r8
 801aae2:	f8ba 3000 	ldrh.w	r3, [sl]
 801aae6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801aaea:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801aaee:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801aaf2:	e7eb      	b.n	801aacc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801aaf4:	4b02      	ldr	r3, [pc, #8]	; (801ab00 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801aaf6:	6818      	ldr	r0, [r3, #0]
 801aaf8:	6803      	ldr	r3, [r0, #0]
 801aafa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801aafc:	4798      	blx	r3
 801aafe:	e76c      	b.n	801a9da <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801ab00:	200137bc 	.word	0x200137bc
 801ab04:	200137b6 	.word	0x200137b6

0801ab08 <_ZN8touchgfx8LCD16bppD0Ev>:
 801ab08:	b510      	push	{r4, lr}
 801ab0a:	2184      	movs	r1, #132	; 0x84
 801ab0c:	4604      	mov	r4, r0
 801ab0e:	f00c fd26 	bl	802755e <_ZdlPvj>
 801ab12:	4620      	mov	r0, r4
 801ab14:	bd10      	pop	{r4, pc}

0801ab16 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801ab16:	b510      	push	{r4, lr}
 801ab18:	2104      	movs	r1, #4
 801ab1a:	4604      	mov	r4, r0
 801ab1c:	f00c fd1f 	bl	802755e <_ZdlPvj>
 801ab20:	4620      	mov	r0, r4
 801ab22:	bd10      	pop	{r4, pc}

0801ab24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801ab24:	b510      	push	{r4, lr}
 801ab26:	2104      	movs	r1, #4
 801ab28:	4604      	mov	r4, r0
 801ab2a:	f00c fd18 	bl	802755e <_ZdlPvj>
 801ab2e:	4620      	mov	r0, r4
 801ab30:	bd10      	pop	{r4, pc}

0801ab32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801ab32:	b510      	push	{r4, lr}
 801ab34:	f640 0144 	movw	r1, #2116	; 0x844
 801ab38:	4604      	mov	r4, r0
 801ab3a:	f00c fd10 	bl	802755e <_ZdlPvj>
 801ab3e:	4620      	mov	r0, r4
 801ab40:	bd10      	pop	{r4, pc}

0801ab42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801ab42:	b510      	push	{r4, lr}
 801ab44:	2104      	movs	r1, #4
 801ab46:	4604      	mov	r4, r0
 801ab48:	f00c fd09 	bl	802755e <_ZdlPvj>
 801ab4c:	4620      	mov	r0, r4
 801ab4e:	bd10      	pop	{r4, pc}

0801ab50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801ab50:	b510      	push	{r4, lr}
 801ab52:	2104      	movs	r1, #4
 801ab54:	4604      	mov	r4, r0
 801ab56:	f00c fd02 	bl	802755e <_ZdlPvj>
 801ab5a:	4620      	mov	r0, r4
 801ab5c:	bd10      	pop	{r4, pc}

0801ab5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801ab5e:	b510      	push	{r4, lr}
 801ab60:	2104      	movs	r1, #4
 801ab62:	4604      	mov	r4, r0
 801ab64:	f00c fcfb 	bl	802755e <_ZdlPvj>
 801ab68:	4620      	mov	r0, r4
 801ab6a:	bd10      	pop	{r4, pc}

0801ab6c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801ab6c:	b510      	push	{r4, lr}
 801ab6e:	2104      	movs	r1, #4
 801ab70:	4604      	mov	r4, r0
 801ab72:	f00c fcf4 	bl	802755e <_ZdlPvj>
 801ab76:	4620      	mov	r0, r4
 801ab78:	bd10      	pop	{r4, pc}

0801ab7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801ab7a:	b510      	push	{r4, lr}
 801ab7c:	2104      	movs	r1, #4
 801ab7e:	4604      	mov	r4, r0
 801ab80:	f00c fced 	bl	802755e <_ZdlPvj>
 801ab84:	4620      	mov	r0, r4
 801ab86:	bd10      	pop	{r4, pc}

0801ab88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801ab88:	b510      	push	{r4, lr}
 801ab8a:	2104      	movs	r1, #4
 801ab8c:	4604      	mov	r4, r0
 801ab8e:	f00c fce6 	bl	802755e <_ZdlPvj>
 801ab92:	4620      	mov	r0, r4
 801ab94:	bd10      	pop	{r4, pc}

0801ab96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801ab96:	b510      	push	{r4, lr}
 801ab98:	2104      	movs	r1, #4
 801ab9a:	4604      	mov	r4, r0
 801ab9c:	f00c fcdf 	bl	802755e <_ZdlPvj>
 801aba0:	4620      	mov	r0, r4
 801aba2:	bd10      	pop	{r4, pc}

0801aba4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801aba4:	b510      	push	{r4, lr}
 801aba6:	2104      	movs	r1, #4
 801aba8:	4604      	mov	r4, r0
 801abaa:	f00c fcd8 	bl	802755e <_ZdlPvj>
 801abae:	4620      	mov	r0, r4
 801abb0:	bd10      	pop	{r4, pc}

0801abb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801abb2:	b510      	push	{r4, lr}
 801abb4:	2104      	movs	r1, #4
 801abb6:	4604      	mov	r4, r0
 801abb8:	f00c fcd1 	bl	802755e <_ZdlPvj>
 801abbc:	4620      	mov	r0, r4
 801abbe:	bd10      	pop	{r4, pc}

0801abc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801abc0:	b510      	push	{r4, lr}
 801abc2:	2104      	movs	r1, #4
 801abc4:	4604      	mov	r4, r0
 801abc6:	f00c fcca 	bl	802755e <_ZdlPvj>
 801abca:	4620      	mov	r0, r4
 801abcc:	bd10      	pop	{r4, pc}

0801abce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801abce:	b510      	push	{r4, lr}
 801abd0:	2104      	movs	r1, #4
 801abd2:	4604      	mov	r4, r0
 801abd4:	f00c fcc3 	bl	802755e <_ZdlPvj>
 801abd8:	4620      	mov	r0, r4
 801abda:	bd10      	pop	{r4, pc}

0801abdc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801abdc:	b510      	push	{r4, lr}
 801abde:	2104      	movs	r1, #4
 801abe0:	4604      	mov	r4, r0
 801abe2:	f00c fcbc 	bl	802755e <_ZdlPvj>
 801abe6:	4620      	mov	r0, r4
 801abe8:	bd10      	pop	{r4, pc}

0801abea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801abea:	b510      	push	{r4, lr}
 801abec:	2104      	movs	r1, #4
 801abee:	4604      	mov	r4, r0
 801abf0:	f00c fcb5 	bl	802755e <_ZdlPvj>
 801abf4:	4620      	mov	r0, r4
 801abf6:	bd10      	pop	{r4, pc}

0801abf8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801abf8:	b510      	push	{r4, lr}
 801abfa:	2104      	movs	r1, #4
 801abfc:	4604      	mov	r4, r0
 801abfe:	f00c fcae 	bl	802755e <_ZdlPvj>
 801ac02:	4620      	mov	r0, r4
 801ac04:	bd10      	pop	{r4, pc}

0801ac06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ac06:	b510      	push	{r4, lr}
 801ac08:	2104      	movs	r1, #4
 801ac0a:	4604      	mov	r4, r0
 801ac0c:	f00c fca7 	bl	802755e <_ZdlPvj>
 801ac10:	4620      	mov	r0, r4
 801ac12:	bd10      	pop	{r4, pc}

0801ac14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801ac14:	b510      	push	{r4, lr}
 801ac16:	2104      	movs	r1, #4
 801ac18:	4604      	mov	r4, r0
 801ac1a:	f00c fca0 	bl	802755e <_ZdlPvj>
 801ac1e:	4620      	mov	r0, r4
 801ac20:	bd10      	pop	{r4, pc}

0801ac22 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801ac22:	b510      	push	{r4, lr}
 801ac24:	2104      	movs	r1, #4
 801ac26:	4604      	mov	r4, r0
 801ac28:	f00c fc99 	bl	802755e <_ZdlPvj>
 801ac2c:	4620      	mov	r0, r4
 801ac2e:	bd10      	pop	{r4, pc}

0801ac30 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801ac30:	b510      	push	{r4, lr}
 801ac32:	2104      	movs	r1, #4
 801ac34:	4604      	mov	r4, r0
 801ac36:	f00c fc92 	bl	802755e <_ZdlPvj>
 801ac3a:	4620      	mov	r0, r4
 801ac3c:	bd10      	pop	{r4, pc}

0801ac3e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ac3e:	b510      	push	{r4, lr}
 801ac40:	2104      	movs	r1, #4
 801ac42:	4604      	mov	r4, r0
 801ac44:	f00c fc8b 	bl	802755e <_ZdlPvj>
 801ac48:	4620      	mov	r0, r4
 801ac4a:	bd10      	pop	{r4, pc}

0801ac4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801ac4c:	b510      	push	{r4, lr}
 801ac4e:	2104      	movs	r1, #4
 801ac50:	4604      	mov	r4, r0
 801ac52:	f00c fc84 	bl	802755e <_ZdlPvj>
 801ac56:	4620      	mov	r0, r4
 801ac58:	bd10      	pop	{r4, pc}

0801ac5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ac5a:	b510      	push	{r4, lr}
 801ac5c:	2104      	movs	r1, #4
 801ac5e:	4604      	mov	r4, r0
 801ac60:	f00c fc7d 	bl	802755e <_ZdlPvj>
 801ac64:	4620      	mov	r0, r4
 801ac66:	bd10      	pop	{r4, pc}

0801ac68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801ac68:	b510      	push	{r4, lr}
 801ac6a:	2104      	movs	r1, #4
 801ac6c:	4604      	mov	r4, r0
 801ac6e:	f00c fc76 	bl	802755e <_ZdlPvj>
 801ac72:	4620      	mov	r0, r4
 801ac74:	bd10      	pop	{r4, pc}

0801ac76 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ac76:	b510      	push	{r4, lr}
 801ac78:	2104      	movs	r1, #4
 801ac7a:	4604      	mov	r4, r0
 801ac7c:	f00c fc6f 	bl	802755e <_ZdlPvj>
 801ac80:	4620      	mov	r0, r4
 801ac82:	bd10      	pop	{r4, pc}

0801ac84 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801ac84:	b510      	push	{r4, lr}
 801ac86:	2104      	movs	r1, #4
 801ac88:	4604      	mov	r4, r0
 801ac8a:	f00c fc68 	bl	802755e <_ZdlPvj>
 801ac8e:	4620      	mov	r0, r4
 801ac90:	bd10      	pop	{r4, pc}

0801ac92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801ac92:	b510      	push	{r4, lr}
 801ac94:	2104      	movs	r1, #4
 801ac96:	4604      	mov	r4, r0
 801ac98:	f00c fc61 	bl	802755e <_ZdlPvj>
 801ac9c:	4620      	mov	r0, r4
 801ac9e:	bd10      	pop	{r4, pc}

0801aca0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801aca0:	b510      	push	{r4, lr}
 801aca2:	2104      	movs	r1, #4
 801aca4:	4604      	mov	r4, r0
 801aca6:	f00c fc5a 	bl	802755e <_ZdlPvj>
 801acaa:	4620      	mov	r0, r4
 801acac:	bd10      	pop	{r4, pc}

0801acae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801acae:	b510      	push	{r4, lr}
 801acb0:	2104      	movs	r1, #4
 801acb2:	4604      	mov	r4, r0
 801acb4:	f00c fc53 	bl	802755e <_ZdlPvj>
 801acb8:	4620      	mov	r0, r4
 801acba:	bd10      	pop	{r4, pc}

0801acbc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801acbc:	b510      	push	{r4, lr}
 801acbe:	2104      	movs	r1, #4
 801acc0:	4604      	mov	r4, r0
 801acc2:	f00c fc4c 	bl	802755e <_ZdlPvj>
 801acc6:	4620      	mov	r0, r4
 801acc8:	bd10      	pop	{r4, pc}
	...

0801accc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801accc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801acd0:	b08f      	sub	sp, #60	; 0x3c
 801acd2:	461c      	mov	r4, r3
 801acd4:	9205      	str	r2, [sp, #20]
 801acd6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801acda:	9100      	str	r1, [sp, #0]
 801acdc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801acde:	9201      	str	r2, [sp, #4]
 801ace0:	2a00      	cmp	r2, #0
 801ace2:	f000 8115 	beq.w	801af10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801ace6:	6820      	ldr	r0, [r4, #0]
 801ace8:	6861      	ldr	r1, [r4, #4]
 801acea:	aa0a      	add	r2, sp, #40	; 0x28
 801acec:	c203      	stmia	r2!, {r0, r1}
 801acee:	6818      	ldr	r0, [r3, #0]
 801acf0:	6859      	ldr	r1, [r3, #4]
 801acf2:	aa0c      	add	r2, sp, #48	; 0x30
 801acf4:	c203      	stmia	r2!, {r0, r1}
 801acf6:	a80a      	add	r0, sp, #40	; 0x28
 801acf8:	f7f9 fd1e 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801acfc:	4621      	mov	r1, r4
 801acfe:	a80c      	add	r0, sp, #48	; 0x30
 801ad00:	f7f9 fd5e 	bl	80147c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ad04:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801ad08:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801ad0c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801ad10:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801ad14:	bfde      	ittt	le
 801ad16:	b2b3      	uxthle	r3, r6
 801ad18:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801ad1c:	fb92 f3f3 	sdivle	r3, r2, r3
 801ad20:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801ad24:	bfc8      	it	gt
 801ad26:	2301      	movgt	r3, #1
 801ad28:	fb92 f1f3 	sdiv	r1, r2, r3
 801ad2c:	fa1f fc81 	uxth.w	ip, r1
 801ad30:	fb0c 2413 	mls	r4, ip, r3, r2
 801ad34:	fb14 f406 	smulbb	r4, r4, r6
 801ad38:	441d      	add	r5, r3
 801ad3a:	4404      	add	r4, r0
 801ad3c:	4661      	mov	r1, ip
 801ad3e:	3d01      	subs	r5, #1
 801ad40:	b2a4      	uxth	r4, r4
 801ad42:	fb95 f5f3 	sdiv	r5, r5, r3
 801ad46:	b131      	cbz	r1, 801ad56 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801ad48:	9b05      	ldr	r3, [sp, #20]
 801ad4a:	9900      	ldr	r1, [sp, #0]
 801ad4c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801ad50:	ba1b      	rev	r3, r3
 801ad52:	4419      	add	r1, r3
 801ad54:	9100      	str	r1, [sp, #0]
 801ad56:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801ad5a:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801ad5e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801ad62:	4418      	add	r0, r3
 801ad64:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801ad68:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801ad6c:	441a      	add	r2, r3
 801ad6e:	4b6a      	ldr	r3, [pc, #424]	; (801af18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801ad70:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801ad74:	6818      	ldr	r0, [r3, #0]
 801ad76:	6803      	ldr	r3, [r0, #0]
 801ad78:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ad7a:	4798      	blx	r3
 801ad7c:	4967      	ldr	r1, [pc, #412]	; (801af1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801ad7e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801ad82:	880b      	ldrh	r3, [r1, #0]
 801ad84:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801ad88:	9109      	str	r1, [sp, #36]	; 0x24
 801ad8a:	fb03 c202 	mla	r2, r3, r2, ip
 801ad8e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ad92:	4373      	muls	r3, r6
 801ad94:	b2ad      	uxth	r5, r5
 801ad96:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ad9a:	00ad      	lsls	r5, r5, #2
 801ad9c:	9306      	str	r3, [sp, #24]
 801ad9e:	1d2b      	adds	r3, r5, #4
 801ada0:	9307      	str	r3, [sp, #28]
 801ada2:	9b01      	ldr	r3, [sp, #4]
 801ada4:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801ada8:	9103      	str	r1, [sp, #12]
 801adaa:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801adae:	2c00      	cmp	r4, #0
 801adb0:	bf0c      	ite	eq
 801adb2:	46c6      	moveq	lr, r8
 801adb4:	f04f 0e00 	movne.w	lr, #0
 801adb8:	2300      	movs	r3, #0
 801adba:	b292      	uxth	r2, r2
 801adbc:	fa1f fe8e 	uxth.w	lr, lr
 801adc0:	9302      	str	r3, [sp, #8]
 801adc2:	9204      	str	r2, [sp, #16]
 801adc4:	9a06      	ldr	r2, [sp, #24]
 801adc6:	4282      	cmp	r2, r0
 801adc8:	f240 809d 	bls.w	801af06 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801adcc:	b963      	cbnz	r3, 801ade8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801adce:	9b00      	ldr	r3, [sp, #0]
 801add0:	781a      	ldrb	r2, [r3, #0]
 801add2:	0993      	lsrs	r3, r2, #6
 801add4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801add8:	9202      	str	r2, [sp, #8]
 801adda:	1e5a      	subs	r2, r3, #1
 801addc:	2a02      	cmp	r2, #2
 801adde:	d815      	bhi.n	801ae0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801ade0:	9a00      	ldr	r2, [sp, #0]
 801ade2:	3201      	adds	r2, #1
 801ade4:	9200      	str	r2, [sp, #0]
 801ade6:	b29b      	uxth	r3, r3
 801ade8:	b1b4      	cbz	r4, 801ae18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801adea:	429c      	cmp	r4, r3
 801adec:	bf95      	itete	ls
 801adee:	1b1c      	subls	r4, r3, r4
 801adf0:	1ae4      	subhi	r4, r4, r3
 801adf2:	fa1f fa84 	uxthls.w	sl, r4
 801adf6:	b2a4      	uxthhi	r4, r4
 801adf8:	bf87      	ittee	hi
 801adfa:	4671      	movhi	r1, lr
 801adfc:	f04f 0a00 	movhi.w	sl, #0
 801ae00:	fa1f f188 	uxthls.w	r1, r8
 801ae04:	2400      	movls	r4, #0
 801ae06:	4653      	mov	r3, sl
 801ae08:	468e      	mov	lr, r1
 801ae0a:	e7db      	b.n	801adc4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801ae0c:	9a00      	ldr	r2, [sp, #0]
 801ae0e:	9b00      	ldr	r3, [sp, #0]
 801ae10:	3202      	adds	r2, #2
 801ae12:	785b      	ldrb	r3, [r3, #1]
 801ae14:	9200      	str	r2, [sp, #0]
 801ae16:	e7e7      	b.n	801ade8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801ae18:	2202      	movs	r2, #2
 801ae1a:	4615      	mov	r5, r2
 801ae1c:	9907      	ldr	r1, [sp, #28]
 801ae1e:	9a02      	ldr	r2, [sp, #8]
 801ae20:	fb15 1202 	smlabb	r2, r5, r2, r1
 801ae24:	9905      	ldr	r1, [sp, #20]
 801ae26:	4573      	cmp	r3, lr
 801ae28:	f831 c002 	ldrh.w	ip, [r1, r2]
 801ae2c:	9a01      	ldr	r2, [sp, #4]
 801ae2e:	bf2b      	itete	cs
 801ae30:	eba3 0a0e 	subcs.w	sl, r3, lr
 801ae34:	ebae 0103 	subcc.w	r1, lr, r3
 801ae38:	46f1      	movcs	r9, lr
 801ae3a:	4699      	movcc	r9, r3
 801ae3c:	bf27      	ittee	cs
 801ae3e:	fa1f fa8a 	uxthcs.w	sl, sl
 801ae42:	4621      	movcs	r1, r4
 801ae44:	b289      	uxthcc	r1, r1
 801ae46:	46a2      	movcc	sl, r4
 801ae48:	2aff      	cmp	r2, #255	; 0xff
 801ae4a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801ae4e:	d105      	bne.n	801ae5c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801ae50:	4481      	add	r9, r0
 801ae52:	4581      	cmp	r9, r0
 801ae54:	d045      	beq.n	801aee2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801ae56:	f820 cb02 	strh.w	ip, [r0], #2
 801ae5a:	e7fa      	b.n	801ae52 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801ae5c:	9d03      	ldr	r5, [sp, #12]
 801ae5e:	ea4f 222c 	mov.w	r2, ip, asr #8
 801ae62:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801ae66:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801ae6a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ae6e:	436a      	muls	r2, r5
 801ae70:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801ae74:	fa5f fc8c 	uxtb.w	ip, ip
 801ae78:	9208      	str	r2, [sp, #32]
 801ae7a:	fb0b fb05 	mul.w	fp, fp, r5
 801ae7e:	fb0c fc05 	mul.w	ip, ip, r5
 801ae82:	4481      	add	r9, r0
 801ae84:	4581      	cmp	r9, r0
 801ae86:	d02c      	beq.n	801aee2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801ae88:	8802      	ldrh	r2, [r0, #0]
 801ae8a:	9d04      	ldr	r5, [sp, #16]
 801ae8c:	9f04      	ldr	r7, [sp, #16]
 801ae8e:	1216      	asrs	r6, r2, #8
 801ae90:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ae94:	fb16 f605 	smulbb	r6, r6, r5
 801ae98:	9d08      	ldr	r5, [sp, #32]
 801ae9a:	442e      	add	r6, r5
 801ae9c:	10d5      	asrs	r5, r2, #3
 801ae9e:	00d2      	lsls	r2, r2, #3
 801aea0:	b2d2      	uxtb	r2, r2
 801aea2:	fb12 f207 	smulbb	r2, r2, r7
 801aea6:	b2b6      	uxth	r6, r6
 801aea8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801aeac:	4462      	add	r2, ip
 801aeae:	fb15 f507 	smulbb	r5, r5, r7
 801aeb2:	b292      	uxth	r2, r2
 801aeb4:	1c77      	adds	r7, r6, #1
 801aeb6:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801aeba:	1c57      	adds	r7, r2, #1
 801aebc:	445d      	add	r5, fp
 801aebe:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801aec2:	b2ad      	uxth	r5, r5
 801aec4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801aec8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801aecc:	4316      	orrs	r6, r2
 801aece:	1c6a      	adds	r2, r5, #1
 801aed0:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801aed4:	096d      	lsrs	r5, r5, #5
 801aed6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801aeda:	432e      	orrs	r6, r5
 801aedc:	f820 6b02 	strh.w	r6, [r0], #2
 801aee0:	e7d0      	b.n	801ae84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801aee2:	4573      	cmp	r3, lr
 801aee4:	d38f      	bcc.n	801ae06 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801aee6:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801aeea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801aeec:	fa1f f188 	uxth.w	r1, r8
 801aef0:	1a64      	subs	r4, r4, r1
 801aef2:	881b      	ldrh	r3, [r3, #0]
 801aef4:	b2a4      	uxth	r4, r4
 801aef6:	2c00      	cmp	r4, #0
 801aef8:	eba3 0308 	sub.w	r3, r3, r8
 801aefc:	bf18      	it	ne
 801aefe:	2100      	movne	r1, #0
 801af00:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801af04:	e77f      	b.n	801ae06 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801af06:	4b04      	ldr	r3, [pc, #16]	; (801af18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801af08:	6818      	ldr	r0, [r3, #0]
 801af0a:	6803      	ldr	r3, [r0, #0]
 801af0c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801af0e:	4798      	blx	r3
 801af10:	b00f      	add	sp, #60	; 0x3c
 801af12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801af16:	bf00      	nop
 801af18:	200137bc 	.word	0x200137bc
 801af1c:	200137b6 	.word	0x200137b6

0801af20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801af20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af24:	b09f      	sub	sp, #124	; 0x7c
 801af26:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801af2a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801af2e:	9209      	str	r2, [sp, #36]	; 0x24
 801af30:	461d      	mov	r5, r3
 801af32:	4604      	mov	r4, r0
 801af34:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801af36:	2a00      	cmp	r2, #0
 801af38:	f000 81eb 	beq.w	801b312 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801af3c:	6828      	ldr	r0, [r5, #0]
 801af3e:	6869      	ldr	r1, [r5, #4]
 801af40:	aa1a      	add	r2, sp, #104	; 0x68
 801af42:	c203      	stmia	r2!, {r0, r1}
 801af44:	6818      	ldr	r0, [r3, #0]
 801af46:	6859      	ldr	r1, [r3, #4]
 801af48:	aa1c      	add	r2, sp, #112	; 0x70
 801af4a:	c203      	stmia	r2!, {r0, r1}
 801af4c:	a81a      	add	r0, sp, #104	; 0x68
 801af4e:	f7f9 fbf3 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801af52:	4629      	mov	r1, r5
 801af54:	a81c      	add	r0, sp, #112	; 0x70
 801af56:	f7f9 fc33 	bl	80147c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801af5a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801af5e:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801af62:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801af66:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801af6a:	bfd7      	itett	le
 801af6c:	b29a      	uxthle	r2, r3
 801af6e:	2201      	movgt	r2, #1
 801af70:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801af74:	fb91 f2f2 	sdivle	r2, r1, r2
 801af78:	9202      	str	r2, [sp, #8]
 801af7a:	9802      	ldr	r0, [sp, #8]
 801af7c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801af80:	fb92 f0f0 	sdiv	r0, r2, r0
 801af84:	b280      	uxth	r0, r0
 801af86:	9010      	str	r0, [sp, #64]	; 0x40
 801af88:	9902      	ldr	r1, [sp, #8]
 801af8a:	9802      	ldr	r0, [sp, #8]
 801af8c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801af8e:	4488      	add	r8, r1
 801af90:	fb05 2510 	mls	r5, r5, r0, r2
 801af94:	fb15 f503 	smulbb	r5, r5, r3
 801af98:	f108 38ff 	add.w	r8, r8, #4294967295
 801af9c:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801afa0:	fb98 f8f1 	sdiv	r8, r8, r1
 801afa4:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801afa8:	440d      	add	r5, r1
 801afaa:	4419      	add	r1, r3
 801afac:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801afb0:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801afb4:	441a      	add	r2, r3
 801afb6:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801afba:	9304      	str	r3, [sp, #16]
 801afbc:	4b95      	ldr	r3, [pc, #596]	; (801b214 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801afbe:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801afc2:	6818      	ldr	r0, [r3, #0]
 801afc4:	6803      	ldr	r3, [r0, #0]
 801afc6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801afc8:	4798      	blx	r3
 801afca:	4b93      	ldr	r3, [pc, #588]	; (801b218 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801afcc:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801afd0:	881a      	ldrh	r2, [r3, #0]
 801afd2:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801afd6:	9318      	str	r3, [sp, #96]	; 0x60
 801afd8:	fb02 7101 	mla	r1, r2, r1, r7
 801afdc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801afe0:	4356      	muls	r6, r2
 801afe2:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801afe6:	f108 0801 	add.w	r8, r8, #1
 801afea:	920a      	str	r2, [sp, #40]	; 0x28
 801afec:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801afee:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801aff2:	930f      	str	r3, [sp, #60]	; 0x3c
 801aff4:	fa1f f888 	uxth.w	r8, r8
 801aff8:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801affc:	f108 0204 	add.w	r2, r8, #4
 801b000:	9211      	str	r2, [sp, #68]	; 0x44
 801b002:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b004:	4b85      	ldr	r3, [pc, #532]	; (801b21c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801b006:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801b00a:	b2ad      	uxth	r5, r5
 801b00c:	9215      	str	r2, [sp, #84]	; 0x54
 801b00e:	2d00      	cmp	r5, #0
 801b010:	9a04      	ldr	r2, [sp, #16]
 801b012:	f04f 0100 	mov.w	r1, #0
 801b016:	bf18      	it	ne
 801b018:	2200      	movne	r2, #0
 801b01a:	1b1b      	subs	r3, r3, r4
 801b01c:	b292      	uxth	r2, r2
 801b01e:	910d      	str	r1, [sp, #52]	; 0x34
 801b020:	9319      	str	r3, [sp, #100]	; 0x64
 801b022:	9910      	ldr	r1, [sp, #64]	; 0x40
 801b024:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b026:	fa11 f383 	uxtah	r3, r1, r3
 801b02a:	9914      	ldr	r1, [sp, #80]	; 0x50
 801b02c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b030:	3304      	adds	r3, #4
 801b032:	9306      	str	r3, [sp, #24]
 801b034:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b036:	4283      	cmp	r3, r0
 801b038:	f240 8166 	bls.w	801b308 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801b03c:	9902      	ldr	r1, [sp, #8]
 801b03e:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801b042:	fbb5 f3f3 	udiv	r3, r5, r3
 801b046:	1acb      	subs	r3, r1, r3
 801b048:	b29b      	uxth	r3, r3
 801b04a:	9316      	str	r3, [sp, #88]	; 0x58
 801b04c:	9b06      	ldr	r3, [sp, #24]
 801b04e:	9e06      	ldr	r6, [sp, #24]
 801b050:	7859      	ldrb	r1, [r3, #1]
 801b052:	789b      	ldrb	r3, [r3, #2]
 801b054:	7836      	ldrb	r6, [r6, #0]
 801b056:	9612      	str	r6, [sp, #72]	; 0x48
 801b058:	021b      	lsls	r3, r3, #8
 801b05a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801b05e:	9906      	ldr	r1, [sp, #24]
 801b060:	78c9      	ldrb	r1, [r1, #3]
 801b062:	430b      	orrs	r3, r1
 801b064:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801b066:	3601      	adds	r6, #1
 801b068:	4419      	add	r1, r3
 801b06a:	9605      	str	r6, [sp, #20]
 801b06c:	1c4e      	adds	r6, r1, #1
 801b06e:	9603      	str	r6, [sp, #12]
 801b070:	7849      	ldrb	r1, [r1, #1]
 801b072:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b074:	0209      	lsls	r1, r1, #8
 801b076:	5cf3      	ldrb	r3, [r6, r3]
 801b078:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801b07c:	4319      	orrs	r1, r3
 801b07e:	b28b      	uxth	r3, r1
 801b080:	930c      	str	r3, [sp, #48]	; 0x30
 801b082:	2300      	movs	r3, #0
 801b084:	f04f 0a01 	mov.w	sl, #1
 801b088:	9307      	str	r3, [sp, #28]
 801b08a:	469c      	mov	ip, r3
 801b08c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801b090:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801b094:	46d3      	mov	fp, sl
 801b096:	4657      	mov	r7, sl
 801b098:	930e      	str	r3, [sp, #56]	; 0x38
 801b09a:	2d00      	cmp	r5, #0
 801b09c:	d07e      	beq.n	801b19c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801b09e:	42af      	cmp	r7, r5
 801b0a0:	d26e      	bcs.n	801b180 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801b0a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b0a4:	9201      	str	r2, [sp, #4]
 801b0a6:	1bed      	subs	r5, r5, r7
 801b0a8:	4283      	cmp	r3, r0
 801b0aa:	b2ad      	uxth	r5, r5
 801b0ac:	d802      	bhi.n	801b0b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801b0ae:	e073      	b.n	801b198 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801b0b0:	2b00      	cmp	r3, #0
 801b0b2:	d15f      	bne.n	801b174 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801b0b4:	9b03      	ldr	r3, [sp, #12]
 801b0b6:	785b      	ldrb	r3, [r3, #1]
 801b0b8:	f1cb 0207 	rsb	r2, fp, #7
 801b0bc:	4093      	lsls	r3, r2
 801b0be:	005b      	lsls	r3, r3, #1
 801b0c0:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801b0c4:	9b03      	ldr	r3, [sp, #12]
 801b0c6:	781b      	ldrb	r3, [r3, #0]
 801b0c8:	fa43 f30b 	asr.w	r3, r3, fp
 801b0cc:	b2db      	uxtb	r3, r3
 801b0ce:	4313      	orrs	r3, r2
 801b0d0:	f10b 0201 	add.w	r2, fp, #1
 801b0d4:	fa5f fb82 	uxtb.w	fp, r2
 801b0d8:	9a03      	ldr	r2, [sp, #12]
 801b0da:	f1bb 0f08 	cmp.w	fp, #8
 801b0de:	bf15      	itete	ne
 801b0e0:	3201      	addne	r2, #1
 801b0e2:	3202      	addeq	r2, #2
 801b0e4:	9203      	strne	r2, [sp, #12]
 801b0e6:	9203      	streq	r2, [sp, #12]
 801b0e8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b0ea:	b29f      	uxth	r7, r3
 801b0ec:	bf08      	it	eq
 801b0ee:	f04f 0b00 	moveq.w	fp, #0
 801b0f2:	42ba      	cmp	r2, r7
 801b0f4:	d309      	bcc.n	801b10a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801b0f6:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801b0fa:	2301      	movs	r3, #1
 801b0fc:	9a05      	ldr	r2, [sp, #20]
 801b0fe:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801b102:	d30e      	bcc.n	801b122 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801b104:	469a      	mov	sl, r3
 801b106:	2600      	movs	r6, #0
 801b108:	e035      	b.n	801b176 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801b10a:	9b05      	ldr	r3, [sp, #20]
 801b10c:	429f      	cmp	r7, r3
 801b10e:	d318      	bcc.n	801b142 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801b110:	eb04 030a 	add.w	r3, r4, sl
 801b114:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801b118:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801b11c:	f10a 0301 	add.w	r3, sl, #1
 801b120:	b29b      	uxth	r3, r3
 801b122:	9a05      	ldr	r2, [sp, #20]
 801b124:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801b128:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b12a:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b12e:	7116      	strb	r6, [r2, #4]
 801b130:	f10a 0601 	add.w	r6, sl, #1
 801b134:	80d1      	strh	r1, [r2, #6]
 801b136:	7156      	strb	r6, [r2, #5]
 801b138:	9a05      	ldr	r2, [sp, #20]
 801b13a:	3201      	adds	r2, #1
 801b13c:	b292      	uxth	r2, r2
 801b13e:	9205      	str	r2, [sp, #20]
 801b140:	e7e0      	b.n	801b104 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801b142:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801b146:	463a      	mov	r2, r7
 801b148:	795b      	ldrb	r3, [r3, #5]
 801b14a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801b14e:	4426      	add	r6, r4
 801b150:	9919      	ldr	r1, [sp, #100]	; 0x64
 801b152:	eb01 0c06 	add.w	ip, r1, r6
 801b156:	f1bc 0f00 	cmp.w	ip, #0
 801b15a:	dd07      	ble.n	801b16c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801b15c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b160:	f892 c004 	ldrb.w	ip, [r2, #4]
 801b164:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801b168:	88d2      	ldrh	r2, [r2, #6]
 801b16a:	e7f1      	b.n	801b150 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801b16c:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801b170:	b29b      	uxth	r3, r3
 801b172:	e7c3      	b.n	801b0fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801b174:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801b176:	970c      	str	r7, [sp, #48]	; 0x30
 801b178:	9a01      	ldr	r2, [sp, #4]
 801b17a:	46b4      	mov	ip, r6
 801b17c:	461f      	mov	r7, r3
 801b17e:	e78c      	b.n	801b09a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801b180:	1b7b      	subs	r3, r7, r5
 801b182:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b186:	9201      	str	r2, [sp, #4]
 801b188:	eb0c 0605 	add.w	r6, ip, r5
 801b18c:	b29b      	uxth	r3, r3
 801b18e:	b2b6      	uxth	r6, r6
 801b190:	2500      	movs	r5, #0
 801b192:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b194:	4282      	cmp	r2, r0
 801b196:	d88b      	bhi.n	801b0b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b198:	9a01      	ldr	r2, [sp, #4]
 801b19a:	e74b      	b.n	801b034 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801b19c:	4297      	cmp	r7, r2
 801b19e:	d332      	bcc.n	801b206 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801b1a0:	1abb      	subs	r3, r7, r2
 801b1a2:	b29b      	uxth	r3, r3
 801b1a4:	9208      	str	r2, [sp, #32]
 801b1a6:	9501      	str	r5, [sp, #4]
 801b1a8:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b1aa:	29ff      	cmp	r1, #255	; 0xff
 801b1ac:	9908      	ldr	r1, [sp, #32]
 801b1ae:	eb0c 0601 	add.w	r6, ip, r1
 801b1b2:	d135      	bne.n	801b220 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801b1b4:	f1a0 0e02 	sub.w	lr, r0, #2
 801b1b8:	b2b6      	uxth	r6, r6
 801b1ba:	45b4      	cmp	ip, r6
 801b1bc:	f040 808c 	bne.w	801b2d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801b1c0:	9908      	ldr	r1, [sp, #32]
 801b1c2:	4297      	cmp	r7, r2
 801b1c4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b1c8:	d3e2      	bcc.n	801b190 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801b1ca:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b1cc:	9904      	ldr	r1, [sp, #16]
 801b1ce:	8812      	ldrh	r2, [r2, #0]
 801b1d0:	1a52      	subs	r2, r2, r1
 801b1d2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b1d6:	9a07      	ldr	r2, [sp, #28]
 801b1d8:	9916      	ldr	r1, [sp, #88]	; 0x58
 801b1da:	3201      	adds	r2, #1
 801b1dc:	428a      	cmp	r2, r1
 801b1de:	9207      	str	r2, [sp, #28]
 801b1e0:	f040 8087 	bne.w	801b2f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801b1e4:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801b1e8:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801b1ec:	9b04      	ldr	r3, [sp, #16]
 801b1ee:	1bed      	subs	r5, r5, r7
 801b1f0:	b2ad      	uxth	r5, r5
 801b1f2:	2d00      	cmp	r5, #0
 801b1f4:	bf08      	it	eq
 801b1f6:	461a      	moveq	r2, r3
 801b1f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b1fa:	bf18      	it	ne
 801b1fc:	2200      	movne	r2, #0
 801b1fe:	3301      	adds	r3, #1
 801b200:	930d      	str	r3, [sp, #52]	; 0x34
 801b202:	b292      	uxth	r2, r2
 801b204:	e70d      	b.n	801b022 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801b206:	1bd1      	subs	r1, r2, r7
 801b208:	b28b      	uxth	r3, r1
 801b20a:	9301      	str	r3, [sp, #4]
 801b20c:	9708      	str	r7, [sp, #32]
 801b20e:	462b      	mov	r3, r5
 801b210:	e7ca      	b.n	801b1a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801b212:	bf00      	nop
 801b214:	200137bc 	.word	0x200137bc
 801b218:	200137b6 	.word	0x200137b6
 801b21c:	fffff7fb 	.word	0xfffff7fb
 801b220:	b2b6      	uxth	r6, r6
 801b222:	900b      	str	r0, [sp, #44]	; 0x2c
 801b224:	45b4      	cmp	ip, r6
 801b226:	d0cb      	beq.n	801b1c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801b228:	f10c 0101 	add.w	r1, ip, #1
 801b22c:	44a4      	add	ip, r4
 801b22e:	9117      	str	r1, [sp, #92]	; 0x5c
 801b230:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801b234:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b236:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801b23a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b23c:	f8b1 c000 	ldrh.w	ip, [r1]
 801b240:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b242:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801b246:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b24a:	fb1e fe01 	smulbb	lr, lr, r1
 801b24e:	ea4f 2825 	mov.w	r8, r5, asr #8
 801b252:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b254:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801b258:	fb08 e801 	mla	r8, r8, r1, lr
 801b25c:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801b260:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b262:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801b266:	fb19 f901 	smulbb	r9, r9, r1
 801b26a:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801b26e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b270:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801b274:	fb0e 9e01 	mla	lr, lr, r1, r9
 801b278:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b27c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b27e:	fa5f fc8c 	uxtb.w	ip, ip
 801b282:	fb1c fc01 	smulbb	ip, ip, r1
 801b286:	00ed      	lsls	r5, r5, #3
 801b288:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b28a:	b2ed      	uxtb	r5, r5
 801b28c:	fb05 c501 	mla	r5, r5, r1, ip
 801b290:	fa1f f888 	uxth.w	r8, r8
 801b294:	fa1f fe8e 	uxth.w	lr, lr
 801b298:	b2ad      	uxth	r5, r5
 801b29a:	f108 0c01 	add.w	ip, r8, #1
 801b29e:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801b2a2:	f10e 0901 	add.w	r9, lr, #1
 801b2a6:	f105 0c01 	add.w	ip, r5, #1
 801b2aa:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801b2ae:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801b2b2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b2b6:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801b2ba:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b2be:	ea4c 0808 	orr.w	r8, ip, r8
 801b2c2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b2c4:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801b2c8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b2cc:	ea48 0809 	orr.w	r8, r8, r9
 801b2d0:	f821 8b02 	strh.w	r8, [r1], #2
 801b2d4:	910b      	str	r1, [sp, #44]	; 0x2c
 801b2d6:	e7a5      	b.n	801b224 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801b2d8:	f10c 0801 	add.w	r8, ip, #1
 801b2dc:	44a4      	add	ip, r4
 801b2de:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b2e0:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801b2e4:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801b2e8:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801b2ec:	fa1f fc88 	uxth.w	ip, r8
 801b2f0:	e763      	b.n	801b1ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801b2f2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b2f6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801b2fa:	1aad      	subs	r5, r5, r2
 801b2fc:	b2ad      	uxth	r5, r5
 801b2fe:	2d00      	cmp	r5, #0
 801b300:	bf18      	it	ne
 801b302:	2200      	movne	r2, #0
 801b304:	9201      	str	r2, [sp, #4]
 801b306:	e744      	b.n	801b192 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801b308:	4b03      	ldr	r3, [pc, #12]	; (801b318 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801b30a:	6818      	ldr	r0, [r3, #0]
 801b30c:	6803      	ldr	r3, [r0, #0]
 801b30e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b310:	4798      	blx	r3
 801b312:	b01f      	add	sp, #124	; 0x7c
 801b314:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b318:	200137bc 	.word	0x200137bc

0801b31c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801b31c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b320:	b08f      	sub	sp, #60	; 0x3c
 801b322:	461c      	mov	r4, r3
 801b324:	9203      	str	r2, [sp, #12]
 801b326:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b32a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b32c:	9202      	str	r2, [sp, #8]
 801b32e:	460f      	mov	r7, r1
 801b330:	2a00      	cmp	r2, #0
 801b332:	f000 8128 	beq.w	801b586 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801b336:	6820      	ldr	r0, [r4, #0]
 801b338:	6861      	ldr	r1, [r4, #4]
 801b33a:	aa0a      	add	r2, sp, #40	; 0x28
 801b33c:	c203      	stmia	r2!, {r0, r1}
 801b33e:	6818      	ldr	r0, [r3, #0]
 801b340:	6859      	ldr	r1, [r3, #4]
 801b342:	aa0c      	add	r2, sp, #48	; 0x30
 801b344:	c203      	stmia	r2!, {r0, r1}
 801b346:	a80a      	add	r0, sp, #40	; 0x28
 801b348:	f7f9 f9f6 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b34c:	4621      	mov	r1, r4
 801b34e:	a80c      	add	r0, sp, #48	; 0x30
 801b350:	f7f9 fa36 	bl	80147c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b354:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b358:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801b35c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801b360:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b364:	bfde      	ittt	le
 801b366:	b2b3      	uxthle	r3, r6
 801b368:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b36c:	fb92 f3f3 	sdivle	r3, r2, r3
 801b370:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b374:	bfc8      	it	gt
 801b376:	2301      	movgt	r3, #1
 801b378:	fb92 f1f3 	sdiv	r1, r2, r3
 801b37c:	fa1f fc81 	uxth.w	ip, r1
 801b380:	fb0c 2413 	mls	r4, ip, r3, r2
 801b384:	fb14 f406 	smulbb	r4, r4, r6
 801b388:	441d      	add	r5, r3
 801b38a:	4404      	add	r4, r0
 801b38c:	4661      	mov	r1, ip
 801b38e:	3d01      	subs	r5, #1
 801b390:	b2a4      	uxth	r4, r4
 801b392:	fb95 f5f3 	sdiv	r5, r5, r3
 801b396:	b121      	cbz	r1, 801b3a2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801b398:	9b03      	ldr	r3, [sp, #12]
 801b39a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b39e:	ba1b      	rev	r3, r3
 801b3a0:	441f      	add	r7, r3
 801b3a2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801b3a6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801b3aa:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801b3ae:	4418      	add	r0, r3
 801b3b0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b3b4:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801b3b8:	441a      	add	r2, r3
 801b3ba:	4b74      	ldr	r3, [pc, #464]	; (801b58c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801b3bc:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801b3c0:	6818      	ldr	r0, [r3, #0]
 801b3c2:	6803      	ldr	r3, [r0, #0]
 801b3c4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b3c6:	4798      	blx	r3
 801b3c8:	4a71      	ldr	r2, [pc, #452]	; (801b590 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801b3ca:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801b3ce:	8813      	ldrh	r3, [r2, #0]
 801b3d0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801b3d4:	9209      	str	r2, [sp, #36]	; 0x24
 801b3d6:	fb03 c101 	mla	r1, r3, r1, ip
 801b3da:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b3de:	4373      	muls	r3, r6
 801b3e0:	b2ad      	uxth	r5, r5
 801b3e2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b3e6:	00ad      	lsls	r5, r5, #2
 801b3e8:	2c00      	cmp	r4, #0
 801b3ea:	9304      	str	r3, [sp, #16]
 801b3ec:	f105 0304 	add.w	r3, r5, #4
 801b3f0:	9305      	str	r3, [sp, #20]
 801b3f2:	bf0c      	ite	eq
 801b3f4:	46c8      	moveq	r8, r9
 801b3f6:	f04f 0800 	movne.w	r8, #0
 801b3fa:	2300      	movs	r3, #0
 801b3fc:	fa1f f888 	uxth.w	r8, r8
 801b400:	9301      	str	r3, [sp, #4]
 801b402:	9a04      	ldr	r2, [sp, #16]
 801b404:	4282      	cmp	r2, r0
 801b406:	f240 80b9 	bls.w	801b57c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801b40a:	b95b      	cbnz	r3, 801b424 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801b40c:	783a      	ldrb	r2, [r7, #0]
 801b40e:	0993      	lsrs	r3, r2, #6
 801b410:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801b414:	9201      	str	r2, [sp, #4]
 801b416:	1e5a      	subs	r2, r3, #1
 801b418:	2a02      	cmp	r2, #2
 801b41a:	bf8d      	iteet	hi
 801b41c:	787b      	ldrbhi	r3, [r7, #1]
 801b41e:	3701      	addls	r7, #1
 801b420:	b29b      	uxthls	r3, r3
 801b422:	3702      	addhi	r7, #2
 801b424:	b184      	cbz	r4, 801b448 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801b426:	429c      	cmp	r4, r3
 801b428:	bf95      	itete	ls
 801b42a:	1b1c      	subls	r4, r3, r4
 801b42c:	1ae4      	subhi	r4, r4, r3
 801b42e:	fa1f fa84 	uxthls.w	sl, r4
 801b432:	b2a4      	uxthhi	r4, r4
 801b434:	bf87      	ittee	hi
 801b436:	46c4      	movhi	ip, r8
 801b438:	f04f 0a00 	movhi.w	sl, #0
 801b43c:	fa1f fc89 	uxthls.w	ip, r9
 801b440:	2400      	movls	r4, #0
 801b442:	4653      	mov	r3, sl
 801b444:	46e0      	mov	r8, ip
 801b446:	e7dc      	b.n	801b402 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801b448:	2204      	movs	r2, #4
 801b44a:	4615      	mov	r5, r2
 801b44c:	9905      	ldr	r1, [sp, #20]
 801b44e:	9a01      	ldr	r2, [sp, #4]
 801b450:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b454:	9903      	ldr	r1, [sp, #12]
 801b456:	588a      	ldr	r2, [r1, r2]
 801b458:	4543      	cmp	r3, r8
 801b45a:	bf27      	ittee	cs
 801b45c:	eba3 0a08 	subcs.w	sl, r3, r8
 801b460:	46c6      	movcs	lr, r8
 801b462:	eba8 0c03 	subcc.w	ip, r8, r3
 801b466:	469e      	movcc	lr, r3
 801b468:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801b46c:	bf27      	ittee	cs
 801b46e:	fa1f fa8a 	uxthcs.w	sl, sl
 801b472:	46a4      	movcs	ip, r4
 801b474:	fa1f fc8c 	uxthcc.w	ip, ip
 801b478:	46a2      	movcc	sl, r4
 801b47a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801b47e:	2900      	cmp	r1, #0
 801b480:	d066      	beq.n	801b550 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801b482:	29ff      	cmp	r1, #255	; 0xff
 801b484:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801b488:	d114      	bne.n	801b4b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801b48a:	9d02      	ldr	r5, [sp, #8]
 801b48c:	2dff      	cmp	r5, #255	; 0xff
 801b48e:	d111      	bne.n	801b4b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801b490:	0951      	lsrs	r1, r2, #5
 801b492:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b496:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b49a:	f026 0607 	bic.w	r6, r6, #7
 801b49e:	430e      	orrs	r6, r1
 801b4a0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b4a4:	4316      	orrs	r6, r2
 801b4a6:	b2b6      	uxth	r6, r6
 801b4a8:	4486      	add	lr, r0
 801b4aa:	4586      	cmp	lr, r0
 801b4ac:	d051      	beq.n	801b552 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b4ae:	f820 6b02 	strh.w	r6, [r0], #2
 801b4b2:	e7fa      	b.n	801b4aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801b4b4:	9d02      	ldr	r5, [sp, #8]
 801b4b6:	4369      	muls	r1, r5
 801b4b8:	1c4d      	adds	r5, r1, #1
 801b4ba:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801b4be:	122d      	asrs	r5, r5, #8
 801b4c0:	ea6f 0b05 	mvn.w	fp, r5
 801b4c4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801b4c8:	b2ad      	uxth	r5, r5
 801b4ca:	b2f6      	uxtb	r6, r6
 801b4cc:	b2d2      	uxtb	r2, r2
 801b4ce:	fb11 f105 	smulbb	r1, r1, r5
 801b4d2:	fb16 f605 	smulbb	r6, r6, r5
 801b4d6:	fb12 f205 	smulbb	r2, r2, r5
 801b4da:	b289      	uxth	r1, r1
 801b4dc:	b2b6      	uxth	r6, r6
 801b4de:	b292      	uxth	r2, r2
 801b4e0:	9106      	str	r1, [sp, #24]
 801b4e2:	9607      	str	r6, [sp, #28]
 801b4e4:	9208      	str	r2, [sp, #32]
 801b4e6:	4486      	add	lr, r0
 801b4e8:	fa5f fb8b 	uxtb.w	fp, fp
 801b4ec:	4586      	cmp	lr, r0
 801b4ee:	d030      	beq.n	801b552 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b4f0:	8802      	ldrh	r2, [r0, #0]
 801b4f2:	9906      	ldr	r1, [sp, #24]
 801b4f4:	1216      	asrs	r6, r2, #8
 801b4f6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b4fa:	10d5      	asrs	r5, r2, #3
 801b4fc:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801b500:	fb06 160b 	mla	r6, r6, fp, r1
 801b504:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b508:	9907      	ldr	r1, [sp, #28]
 801b50a:	00d2      	lsls	r2, r2, #3
 801b50c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801b510:	fb05 150b 	mla	r5, r5, fp, r1
 801b514:	b2d2      	uxtb	r2, r2
 801b516:	9908      	ldr	r1, [sp, #32]
 801b518:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b51c:	b2b6      	uxth	r6, r6
 801b51e:	fb02 120b 	mla	r2, r2, fp, r1
 801b522:	b292      	uxth	r2, r2
 801b524:	1c71      	adds	r1, r6, #1
 801b526:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801b52a:	1c51      	adds	r1, r2, #1
 801b52c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b530:	b2ad      	uxth	r5, r5
 801b532:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b536:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b53a:	4316      	orrs	r6, r2
 801b53c:	1c6a      	adds	r2, r5, #1
 801b53e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801b542:	096d      	lsrs	r5, r5, #5
 801b544:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b548:	432e      	orrs	r6, r5
 801b54a:	f820 6b02 	strh.w	r6, [r0], #2
 801b54e:	e7cd      	b.n	801b4ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801b550:	4470      	add	r0, lr
 801b552:	4543      	cmp	r3, r8
 801b554:	f4ff af75 	bcc.w	801b442 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801b558:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801b55c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b55e:	fa1f fc89 	uxth.w	ip, r9
 801b562:	eba4 040c 	sub.w	r4, r4, ip
 801b566:	881b      	ldrh	r3, [r3, #0]
 801b568:	b2a4      	uxth	r4, r4
 801b56a:	2c00      	cmp	r4, #0
 801b56c:	eba3 0309 	sub.w	r3, r3, r9
 801b570:	bf18      	it	ne
 801b572:	f04f 0c00 	movne.w	ip, #0
 801b576:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b57a:	e762      	b.n	801b442 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801b57c:	4b03      	ldr	r3, [pc, #12]	; (801b58c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801b57e:	6818      	ldr	r0, [r3, #0]
 801b580:	6803      	ldr	r3, [r0, #0]
 801b582:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b584:	4798      	blx	r3
 801b586:	b00f      	add	sp, #60	; 0x3c
 801b588:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b58c:	200137bc 	.word	0x200137bc
 801b590:	200137b6 	.word	0x200137b6

0801b594 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801b594:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b598:	b093      	sub	sp, #76	; 0x4c
 801b59a:	461c      	mov	r4, r3
 801b59c:	9205      	str	r2, [sp, #20]
 801b59e:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801b5a2:	9101      	str	r1, [sp, #4]
 801b5a4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b5a6:	9202      	str	r2, [sp, #8]
 801b5a8:	2a00      	cmp	r2, #0
 801b5aa:	f000 812c 	beq.w	801b806 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801b5ae:	6820      	ldr	r0, [r4, #0]
 801b5b0:	6861      	ldr	r1, [r4, #4]
 801b5b2:	aa0e      	add	r2, sp, #56	; 0x38
 801b5b4:	c203      	stmia	r2!, {r0, r1}
 801b5b6:	6818      	ldr	r0, [r3, #0]
 801b5b8:	6859      	ldr	r1, [r3, #4]
 801b5ba:	aa10      	add	r2, sp, #64	; 0x40
 801b5bc:	c203      	stmia	r2!, {r0, r1}
 801b5be:	a80e      	add	r0, sp, #56	; 0x38
 801b5c0:	f7f9 f8ba 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b5c4:	4621      	mov	r1, r4
 801b5c6:	a810      	add	r0, sp, #64	; 0x40
 801b5c8:	f7f9 f8fa 	bl	80147c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b5cc:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801b5d0:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801b5d4:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801b5d8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b5dc:	bfde      	ittt	le
 801b5de:	b2b3      	uxthle	r3, r6
 801b5e0:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b5e4:	fb92 f3f3 	sdivle	r3, r2, r3
 801b5e8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801b5ec:	bfc8      	it	gt
 801b5ee:	2301      	movgt	r3, #1
 801b5f0:	fb92 f1f3 	sdiv	r1, r2, r3
 801b5f4:	fa1f fc81 	uxth.w	ip, r1
 801b5f8:	fb0c 2413 	mls	r4, ip, r3, r2
 801b5fc:	fb14 f406 	smulbb	r4, r4, r6
 801b600:	441d      	add	r5, r3
 801b602:	4404      	add	r4, r0
 801b604:	4661      	mov	r1, ip
 801b606:	3d01      	subs	r5, #1
 801b608:	b2a4      	uxth	r4, r4
 801b60a:	fb95 f5f3 	sdiv	r5, r5, r3
 801b60e:	b131      	cbz	r1, 801b61e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801b610:	9b05      	ldr	r3, [sp, #20]
 801b612:	9901      	ldr	r1, [sp, #4]
 801b614:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b618:	ba1b      	rev	r3, r3
 801b61a:	4419      	add	r1, r3
 801b61c:	9101      	str	r1, [sp, #4]
 801b61e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801b622:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801b626:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801b62a:	4418      	add	r0, r3
 801b62c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801b630:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801b634:	441a      	add	r2, r3
 801b636:	4b75      	ldr	r3, [pc, #468]	; (801b80c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801b638:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801b63c:	6818      	ldr	r0, [r3, #0]
 801b63e:	6803      	ldr	r3, [r0, #0]
 801b640:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b642:	4798      	blx	r3
 801b644:	4972      	ldr	r1, [pc, #456]	; (801b810 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801b646:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801b64a:	880b      	ldrh	r3, [r1, #0]
 801b64c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801b650:	910d      	str	r1, [sp, #52]	; 0x34
 801b652:	fb03 c202 	mla	r2, r3, r2, ip
 801b656:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b65a:	4373      	muls	r3, r6
 801b65c:	b2ad      	uxth	r5, r5
 801b65e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b662:	00ad      	lsls	r5, r5, #2
 801b664:	9308      	str	r3, [sp, #32]
 801b666:	1d2b      	adds	r3, r5, #4
 801b668:	9309      	str	r3, [sp, #36]	; 0x24
 801b66a:	9b02      	ldr	r3, [sp, #8]
 801b66c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801b670:	9106      	str	r1, [sp, #24]
 801b672:	43da      	mvns	r2, r3
 801b674:	2c00      	cmp	r4, #0
 801b676:	bf0c      	ite	eq
 801b678:	46dc      	moveq	ip, fp
 801b67a:	f04f 0c00 	movne.w	ip, #0
 801b67e:	2300      	movs	r3, #0
 801b680:	b2d2      	uxtb	r2, r2
 801b682:	fa1f fc8c 	uxth.w	ip, ip
 801b686:	9303      	str	r3, [sp, #12]
 801b688:	9207      	str	r2, [sp, #28]
 801b68a:	9a08      	ldr	r2, [sp, #32]
 801b68c:	4282      	cmp	r2, r0
 801b68e:	f240 80b5 	bls.w	801b7fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801b692:	b963      	cbnz	r3, 801b6ae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801b694:	9b01      	ldr	r3, [sp, #4]
 801b696:	781a      	ldrb	r2, [r3, #0]
 801b698:	0993      	lsrs	r3, r2, #6
 801b69a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801b69e:	9203      	str	r2, [sp, #12]
 801b6a0:	1e5a      	subs	r2, r3, #1
 801b6a2:	2a02      	cmp	r2, #2
 801b6a4:	d815      	bhi.n	801b6d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801b6a6:	9a01      	ldr	r2, [sp, #4]
 801b6a8:	3201      	adds	r2, #1
 801b6aa:	9201      	str	r2, [sp, #4]
 801b6ac:	b29b      	uxth	r3, r3
 801b6ae:	b1b4      	cbz	r4, 801b6de <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801b6b0:	429c      	cmp	r4, r3
 801b6b2:	bf95      	itete	ls
 801b6b4:	1b1c      	subls	r4, r3, r4
 801b6b6:	1ae4      	subhi	r4, r4, r3
 801b6b8:	fa1f f884 	uxthls.w	r8, r4
 801b6bc:	b2a4      	uxthhi	r4, r4
 801b6be:	bf87      	ittee	hi
 801b6c0:	4666      	movhi	r6, ip
 801b6c2:	f04f 0800 	movhi.w	r8, #0
 801b6c6:	fa1f f68b 	uxthls.w	r6, fp
 801b6ca:	2400      	movls	r4, #0
 801b6cc:	4643      	mov	r3, r8
 801b6ce:	46b4      	mov	ip, r6
 801b6d0:	e7db      	b.n	801b68a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801b6d2:	9a01      	ldr	r2, [sp, #4]
 801b6d4:	9b01      	ldr	r3, [sp, #4]
 801b6d6:	3202      	adds	r2, #2
 801b6d8:	785b      	ldrb	r3, [r3, #1]
 801b6da:	9201      	str	r2, [sp, #4]
 801b6dc:	e7e7      	b.n	801b6ae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801b6de:	2203      	movs	r2, #3
 801b6e0:	4615      	mov	r5, r2
 801b6e2:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b6e4:	9a03      	ldr	r2, [sp, #12]
 801b6e6:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b6ea:	9905      	ldr	r1, [sp, #20]
 801b6ec:	4563      	cmp	r3, ip
 801b6ee:	eb01 0502 	add.w	r5, r1, r2
 801b6f2:	9902      	ldr	r1, [sp, #8]
 801b6f4:	bf29      	itett	cs
 801b6f6:	eba3 080c 	subcs.w	r8, r3, ip
 801b6fa:	ebac 0603 	subcc.w	r6, ip, r3
 801b6fe:	fa1f f888 	uxthcs.w	r8, r8
 801b702:	46e1      	movcs	r9, ip
 801b704:	bf2f      	iteee	cs
 801b706:	4626      	movcs	r6, r4
 801b708:	b2b6      	uxthcc	r6, r6
 801b70a:	4699      	movcc	r9, r3
 801b70c:	46a0      	movcc	r8, r4
 801b70e:	29ff      	cmp	r1, #255	; 0xff
 801b710:	d04a      	beq.n	801b7a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801b712:	9f06      	ldr	r7, [sp, #24]
 801b714:	78a9      	ldrb	r1, [r5, #2]
 801b716:	9004      	str	r0, [sp, #16]
 801b718:	4379      	muls	r1, r7
 801b71a:	910a      	str	r1, [sp, #40]	; 0x28
 801b71c:	7869      	ldrb	r1, [r5, #1]
 801b71e:	4379      	muls	r1, r7
 801b720:	910b      	str	r1, [sp, #44]	; 0x2c
 801b722:	9905      	ldr	r1, [sp, #20]
 801b724:	5c8a      	ldrb	r2, [r1, r2]
 801b726:	437a      	muls	r2, r7
 801b728:	920c      	str	r2, [sp, #48]	; 0x30
 801b72a:	46ca      	mov	sl, r9
 801b72c:	f1ba 0f00 	cmp.w	sl, #0
 801b730:	d03d      	beq.n	801b7ae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801b732:	9a04      	ldr	r2, [sp, #16]
 801b734:	9f07      	ldr	r7, [sp, #28]
 801b736:	8812      	ldrh	r2, [r2, #0]
 801b738:	1215      	asrs	r5, r2, #8
 801b73a:	46be      	mov	lr, r7
 801b73c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b740:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b742:	10d1      	asrs	r1, r2, #3
 801b744:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801b748:	fb05 750e 	mla	r5, r5, lr, r7
 801b74c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b750:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801b752:	00d2      	lsls	r2, r2, #3
 801b754:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801b758:	fb01 710e 	mla	r1, r1, lr, r7
 801b75c:	b2d2      	uxtb	r2, r2
 801b75e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801b760:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b764:	b2ad      	uxth	r5, r5
 801b766:	fb02 720e 	mla	r2, r2, lr, r7
 801b76a:	b292      	uxth	r2, r2
 801b76c:	f105 0e01 	add.w	lr, r5, #1
 801b770:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801b774:	f102 0e01 	add.w	lr, r2, #1
 801b778:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801b77c:	b289      	uxth	r1, r1
 801b77e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b782:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801b786:	4315      	orrs	r5, r2
 801b788:	1c4a      	adds	r2, r1, #1
 801b78a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b78e:	0949      	lsrs	r1, r1, #5
 801b790:	9a04      	ldr	r2, [sp, #16]
 801b792:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b796:	430d      	orrs	r5, r1
 801b798:	f822 5b02 	strh.w	r5, [r2], #2
 801b79c:	f10a 3aff 	add.w	sl, sl, #4294967295
 801b7a0:	9204      	str	r2, [sp, #16]
 801b7a2:	fa1f fa8a 	uxth.w	sl, sl
 801b7a6:	e7c1      	b.n	801b72c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801b7a8:	4649      	mov	r1, r9
 801b7aa:	4686      	mov	lr, r0
 801b7ac:	b999      	cbnz	r1, 801b7d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801b7ae:	4563      	cmp	r3, ip
 801b7b0:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801b7b4:	d38a      	bcc.n	801b6cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801b7b6:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801b7ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b7bc:	fa1f f68b 	uxth.w	r6, fp
 801b7c0:	1ba4      	subs	r4, r4, r6
 801b7c2:	881b      	ldrh	r3, [r3, #0]
 801b7c4:	b2a4      	uxth	r4, r4
 801b7c6:	2c00      	cmp	r4, #0
 801b7c8:	eba3 030b 	sub.w	r3, r3, fp
 801b7cc:	bf18      	it	ne
 801b7ce:	2600      	movne	r6, #0
 801b7d0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b7d4:	e77a      	b.n	801b6cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801b7d6:	78aa      	ldrb	r2, [r5, #2]
 801b7d8:	4f0e      	ldr	r7, [pc, #56]	; (801b814 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801b7da:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801b7de:	786a      	ldrb	r2, [r5, #1]
 801b7e0:	00d2      	lsls	r2, r2, #3
 801b7e2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b7e6:	ea4a 0202 	orr.w	r2, sl, r2
 801b7ea:	f895 a000 	ldrb.w	sl, [r5]
 801b7ee:	3901      	subs	r1, #1
 801b7f0:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801b7f4:	f82e 2b02 	strh.w	r2, [lr], #2
 801b7f8:	b289      	uxth	r1, r1
 801b7fa:	e7d7      	b.n	801b7ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801b7fc:	4b03      	ldr	r3, [pc, #12]	; (801b80c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801b7fe:	6818      	ldr	r0, [r3, #0]
 801b800:	6803      	ldr	r3, [r0, #0]
 801b802:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b804:	4798      	blx	r3
 801b806:	b013      	add	sp, #76	; 0x4c
 801b808:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b80c:	200137bc 	.word	0x200137bc
 801b810:	200137b6 	.word	0x200137b6
 801b814:	fffff800 	.word	0xfffff800

0801b818 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801b818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b81c:	b09d      	sub	sp, #116	; 0x74
 801b81e:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801b822:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801b826:	920e      	str	r2, [sp, #56]	; 0x38
 801b828:	461c      	mov	r4, r3
 801b82a:	4683      	mov	fp, r0
 801b82c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b82e:	2a00      	cmp	r2, #0
 801b830:	f000 81e0 	beq.w	801bbf4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801b834:	6820      	ldr	r0, [r4, #0]
 801b836:	6861      	ldr	r1, [r4, #4]
 801b838:	aa18      	add	r2, sp, #96	; 0x60
 801b83a:	c203      	stmia	r2!, {r0, r1}
 801b83c:	6818      	ldr	r0, [r3, #0]
 801b83e:	6859      	ldr	r1, [r3, #4]
 801b840:	aa1a      	add	r2, sp, #104	; 0x68
 801b842:	c203      	stmia	r2!, {r0, r1}
 801b844:	a818      	add	r0, sp, #96	; 0x60
 801b846:	f7f8 ff77 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b84a:	4621      	mov	r1, r4
 801b84c:	a81a      	add	r0, sp, #104	; 0x68
 801b84e:	f7f8 ffb7 	bl	80147c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b852:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801b856:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801b85a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801b85e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801b862:	bfd7      	itett	le
 801b864:	b29a      	uxthle	r2, r3
 801b866:	2201      	movgt	r2, #1
 801b868:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801b86c:	fb91 f2f2 	sdivle	r2, r1, r2
 801b870:	9202      	str	r2, [sp, #8]
 801b872:	9802      	ldr	r0, [sp, #8]
 801b874:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801b878:	fb92 f0f0 	sdiv	r0, r2, r0
 801b87c:	b280      	uxth	r0, r0
 801b87e:	900f      	str	r0, [sp, #60]	; 0x3c
 801b880:	9902      	ldr	r1, [sp, #8]
 801b882:	9802      	ldr	r0, [sp, #8]
 801b884:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b886:	440c      	add	r4, r1
 801b888:	fb05 2510 	mls	r5, r5, r0, r2
 801b88c:	fb15 f503 	smulbb	r5, r5, r3
 801b890:	3c01      	subs	r4, #1
 801b892:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801b896:	fb94 f4f1 	sdiv	r4, r4, r1
 801b89a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801b89e:	440d      	add	r5, r1
 801b8a0:	4419      	add	r1, r3
 801b8a2:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801b8a6:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801b8aa:	441a      	add	r2, r3
 801b8ac:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801b8b0:	9306      	str	r3, [sp, #24]
 801b8b2:	4bb3      	ldr	r3, [pc, #716]	; (801bb80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801b8b4:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801b8b8:	6818      	ldr	r0, [r3, #0]
 801b8ba:	6803      	ldr	r3, [r0, #0]
 801b8bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b8be:	4798      	blx	r3
 801b8c0:	4bb0      	ldr	r3, [pc, #704]	; (801bb84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801b8c2:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801b8c6:	881a      	ldrh	r2, [r3, #0]
 801b8c8:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801b8cc:	9316      	str	r3, [sp, #88]	; 0x58
 801b8ce:	fb02 7101 	mla	r1, r2, r1, r7
 801b8d2:	3401      	adds	r4, #1
 801b8d4:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801b8d8:	b2a4      	uxth	r4, r4
 801b8da:	4356      	muls	r6, r2
 801b8dc:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801b8e0:	00a4      	lsls	r4, r4, #2
 801b8e2:	920a      	str	r2, [sp, #40]	; 0x28
 801b8e4:	1d22      	adds	r2, r4, #4
 801b8e6:	b2ad      	uxth	r5, r5
 801b8e8:	9213      	str	r2, [sp, #76]	; 0x4c
 801b8ea:	4ba7      	ldr	r3, [pc, #668]	; (801bb88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801b8ec:	9a06      	ldr	r2, [sp, #24]
 801b8ee:	2d00      	cmp	r5, #0
 801b8f0:	bf0c      	ite	eq
 801b8f2:	4611      	moveq	r1, r2
 801b8f4:	2100      	movne	r1, #0
 801b8f6:	2200      	movs	r2, #0
 801b8f8:	eba3 030b 	sub.w	r3, r3, fp
 801b8fc:	b289      	uxth	r1, r1
 801b8fe:	920d      	str	r2, [sp, #52]	; 0x34
 801b900:	9317      	str	r3, [sp, #92]	; 0x5c
 801b902:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b904:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b906:	fa12 f383 	uxtah	r3, r2, r3
 801b90a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b90c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801b910:	3304      	adds	r3, #4
 801b912:	9308      	str	r3, [sp, #32]
 801b914:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b916:	4543      	cmp	r3, r8
 801b918:	f240 8167 	bls.w	801bbea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801b91c:	9a02      	ldr	r2, [sp, #8]
 801b91e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801b922:	fbb5 f3f3 	udiv	r3, r5, r3
 801b926:	1ad3      	subs	r3, r2, r3
 801b928:	b29b      	uxth	r3, r3
 801b92a:	9314      	str	r3, [sp, #80]	; 0x50
 801b92c:	9b08      	ldr	r3, [sp, #32]
 801b92e:	9808      	ldr	r0, [sp, #32]
 801b930:	785a      	ldrb	r2, [r3, #1]
 801b932:	789b      	ldrb	r3, [r3, #2]
 801b934:	7800      	ldrb	r0, [r0, #0]
 801b936:	9010      	str	r0, [sp, #64]	; 0x40
 801b938:	021b      	lsls	r3, r3, #8
 801b93a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801b93e:	9a08      	ldr	r2, [sp, #32]
 801b940:	78d2      	ldrb	r2, [r2, #3]
 801b942:	4313      	orrs	r3, r2
 801b944:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b946:	3001      	adds	r0, #1
 801b948:	441a      	add	r2, r3
 801b94a:	9007      	str	r0, [sp, #28]
 801b94c:	1c50      	adds	r0, r2, #1
 801b94e:	9005      	str	r0, [sp, #20]
 801b950:	7852      	ldrb	r2, [r2, #1]
 801b952:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b954:	0212      	lsls	r2, r2, #8
 801b956:	5cc3      	ldrb	r3, [r0, r3]
 801b958:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801b95c:	431a      	orrs	r2, r3
 801b95e:	b293      	uxth	r3, r2
 801b960:	930b      	str	r3, [sp, #44]	; 0x2c
 801b962:	2300      	movs	r3, #0
 801b964:	9309      	str	r3, [sp, #36]	; 0x24
 801b966:	2301      	movs	r3, #1
 801b968:	9301      	str	r3, [sp, #4]
 801b96a:	9304      	str	r3, [sp, #16]
 801b96c:	2300      	movs	r3, #0
 801b96e:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801b972:	9303      	str	r3, [sp, #12]
 801b974:	f04f 0e01 	mov.w	lr, #1
 801b978:	2d00      	cmp	r5, #0
 801b97a:	d07c      	beq.n	801ba76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801b97c:	45ae      	cmp	lr, r5
 801b97e:	d26b      	bcs.n	801ba58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801b980:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b982:	eba5 050e 	sub.w	r5, r5, lr
 801b986:	4543      	cmp	r3, r8
 801b988:	b2ad      	uxth	r5, r5
 801b98a:	460c      	mov	r4, r1
 801b98c:	d802      	bhi.n	801b994 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801b98e:	e070      	b.n	801ba72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801b990:	2b00      	cmp	r3, #0
 801b992:	d15c      	bne.n	801ba4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b994:	9b05      	ldr	r3, [sp, #20]
 801b996:	9a04      	ldr	r2, [sp, #16]
 801b998:	785b      	ldrb	r3, [r3, #1]
 801b99a:	9904      	ldr	r1, [sp, #16]
 801b99c:	f1c2 0207 	rsb	r2, r2, #7
 801b9a0:	4093      	lsls	r3, r2
 801b9a2:	005b      	lsls	r3, r3, #1
 801b9a4:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801b9a8:	9b05      	ldr	r3, [sp, #20]
 801b9aa:	781b      	ldrb	r3, [r3, #0]
 801b9ac:	410b      	asrs	r3, r1
 801b9ae:	3101      	adds	r1, #1
 801b9b0:	b2c9      	uxtb	r1, r1
 801b9b2:	2908      	cmp	r1, #8
 801b9b4:	9104      	str	r1, [sp, #16]
 801b9b6:	9905      	ldr	r1, [sp, #20]
 801b9b8:	bf0a      	itet	eq
 801b9ba:	3102      	addeq	r1, #2
 801b9bc:	3101      	addne	r1, #1
 801b9be:	9105      	streq	r1, [sp, #20]
 801b9c0:	b2db      	uxtb	r3, r3
 801b9c2:	bf0a      	itet	eq
 801b9c4:	2100      	moveq	r1, #0
 801b9c6:	9105      	strne	r1, [sp, #20]
 801b9c8:	9104      	streq	r1, [sp, #16]
 801b9ca:	4313      	orrs	r3, r2
 801b9cc:	9910      	ldr	r1, [sp, #64]	; 0x40
 801b9ce:	b29a      	uxth	r2, r3
 801b9d0:	4291      	cmp	r1, r2
 801b9d2:	d30a      	bcc.n	801b9ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801b9d4:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801b9d8:	2301      	movs	r3, #1
 801b9da:	9907      	ldr	r1, [sp, #28]
 801b9dc:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801b9e0:	d30f      	bcc.n	801ba02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801b9e2:	2100      	movs	r1, #0
 801b9e4:	9301      	str	r3, [sp, #4]
 801b9e6:	9103      	str	r1, [sp, #12]
 801b9e8:	e032      	b.n	801ba50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801b9ea:	9b07      	ldr	r3, [sp, #28]
 801b9ec:	429a      	cmp	r2, r3
 801b9ee:	d318      	bcc.n	801ba22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801b9f0:	9b01      	ldr	r3, [sp, #4]
 801b9f2:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801b9f6:	445b      	add	r3, fp
 801b9f8:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801b9fc:	9b01      	ldr	r3, [sp, #4]
 801b9fe:	3301      	adds	r3, #1
 801ba00:	b29b      	uxth	r3, r3
 801ba02:	9907      	ldr	r1, [sp, #28]
 801ba04:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801ba08:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801ba0c:	7108      	strb	r0, [r1, #4]
 801ba0e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801ba10:	80c8      	strh	r0, [r1, #6]
 801ba12:	9801      	ldr	r0, [sp, #4]
 801ba14:	3001      	adds	r0, #1
 801ba16:	7148      	strb	r0, [r1, #5]
 801ba18:	9907      	ldr	r1, [sp, #28]
 801ba1a:	3101      	adds	r1, #1
 801ba1c:	b289      	uxth	r1, r1
 801ba1e:	9107      	str	r1, [sp, #28]
 801ba20:	e7df      	b.n	801b9e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801ba22:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801ba26:	4611      	mov	r1, r2
 801ba28:	795b      	ldrb	r3, [r3, #5]
 801ba2a:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801ba2e:	4458      	add	r0, fp
 801ba30:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801ba32:	4406      	add	r6, r0
 801ba34:	2e00      	cmp	r6, #0
 801ba36:	dd06      	ble.n	801ba46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801ba38:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801ba3c:	790e      	ldrb	r6, [r1, #4]
 801ba3e:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801ba42:	88c9      	ldrh	r1, [r1, #6]
 801ba44:	e7f4      	b.n	801ba30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801ba46:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801ba4a:	b29b      	uxth	r3, r3
 801ba4c:	e7c5      	b.n	801b9da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801ba4e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ba50:	920b      	str	r2, [sp, #44]	; 0x2c
 801ba52:	4621      	mov	r1, r4
 801ba54:	469e      	mov	lr, r3
 801ba56:	e78f      	b.n	801b978 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801ba58:	9a03      	ldr	r2, [sp, #12]
 801ba5a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801ba5e:	442a      	add	r2, r5
 801ba60:	ebae 0305 	sub.w	r3, lr, r5
 801ba64:	b292      	uxth	r2, r2
 801ba66:	b29b      	uxth	r3, r3
 801ba68:	9203      	str	r2, [sp, #12]
 801ba6a:	2500      	movs	r5, #0
 801ba6c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ba6e:	4542      	cmp	r2, r8
 801ba70:	d88e      	bhi.n	801b990 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801ba72:	4621      	mov	r1, r4
 801ba74:	e74e      	b.n	801b914 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801ba76:	458e      	cmp	lr, r1
 801ba78:	bf29      	itett	cs
 801ba7a:	ebae 0301 	subcs.w	r3, lr, r1
 801ba7e:	eba1 040e 	subcc.w	r4, r1, lr
 801ba82:	b29b      	uxthcs	r3, r3
 801ba84:	910c      	strcs	r1, [sp, #48]	; 0x30
 801ba86:	bf2f      	iteee	cs
 801ba88:	462c      	movcs	r4, r5
 801ba8a:	b2a4      	uxthcc	r4, r4
 801ba8c:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801ba90:	462b      	movcc	r3, r5
 801ba92:	f04f 0900 	mov.w	r9, #0
 801ba96:	9a03      	ldr	r2, [sp, #12]
 801ba98:	980c      	ldr	r0, [sp, #48]	; 0x30
 801ba9a:	444a      	add	r2, r9
 801ba9c:	4548      	cmp	r0, r9
 801ba9e:	b292      	uxth	r2, r2
 801baa0:	d074      	beq.n	801bb8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801baa2:	445a      	add	r2, fp
 801baa4:	2004      	movs	r0, #4
 801baa6:	4605      	mov	r5, r0
 801baa8:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801baac:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801baae:	fb15 0202 	smlabb	r2, r5, r2, r0
 801bab2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801bab4:	5880      	ldr	r0, [r0, r2]
 801bab6:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801baba:	d014      	beq.n	801bae6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801babc:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801bac0:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801bac4:	d112      	bne.n	801baec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801bac6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801bac8:	2aff      	cmp	r2, #255	; 0xff
 801baca:	d10f      	bne.n	801baec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801bacc:	0942      	lsrs	r2, r0, #5
 801bace:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801bad2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bad6:	f025 0507 	bic.w	r5, r5, #7
 801bada:	4315      	orrs	r5, r2
 801badc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801bae0:	4305      	orrs	r5, r0
 801bae2:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801bae6:	f109 0901 	add.w	r9, r9, #1
 801baea:	e7d4      	b.n	801ba96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801baec:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801baf0:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801baf4:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801baf8:	9215      	str	r2, [sp, #84]	; 0x54
 801bafa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801bafc:	fb02 fa0a 	mul.w	sl, r2, sl
 801bb00:	f10a 0201 	add.w	r2, sl, #1
 801bb04:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801bb08:	ea4f 272c 	mov.w	r7, ip, asr #8
 801bb0c:	1212      	asrs	r2, r2, #8
 801bb0e:	fa1f fa82 	uxth.w	sl, r2
 801bb12:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801bb16:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bb1a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bb1e:	43d2      	mvns	r2, r2
 801bb20:	b2d2      	uxtb	r2, r2
 801bb22:	fb16 f60a 	smulbb	r6, r6, sl
 801bb26:	fa5f fc8c 	uxtb.w	ip, ip
 801bb2a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801bb2e:	b2c0      	uxtb	r0, r0
 801bb30:	fb07 6702 	mla	r7, r7, r2, r6
 801bb34:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801bb38:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801bb3a:	fb10 f00a 	smulbb	r0, r0, sl
 801bb3e:	fb0c 0002 	mla	r0, ip, r2, r0
 801bb42:	b2ed      	uxtb	r5, r5
 801bb44:	b2bf      	uxth	r7, r7
 801bb46:	fb15 f50a 	smulbb	r5, r5, sl
 801bb4a:	b280      	uxth	r0, r0
 801bb4c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801bb50:	fb06 5602 	mla	r6, r6, r2, r5
 801bb54:	1c7a      	adds	r2, r7, #1
 801bb56:	1c45      	adds	r5, r0, #1
 801bb58:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801bb5c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801bb60:	b2b6      	uxth	r6, r6
 801bb62:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bb66:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801bb6a:	432f      	orrs	r7, r5
 801bb6c:	1c75      	adds	r5, r6, #1
 801bb6e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801bb72:	096d      	lsrs	r5, r5, #5
 801bb74:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bb78:	432f      	orrs	r7, r5
 801bb7a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801bb7e:	e7b2      	b.n	801bae6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801bb80:	200137bc 	.word	0x200137bc
 801bb84:	200137b6 	.word	0x200137b6
 801bb88:	fffff7fb 	.word	0xfffff7fb
 801bb8c:	9203      	str	r2, [sp, #12]
 801bb8e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801bb90:	458e      	cmp	lr, r1
 801bb92:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801bb96:	f4ff af68 	bcc.w	801ba6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801bb9a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801bb9c:	9906      	ldr	r1, [sp, #24]
 801bb9e:	8812      	ldrh	r2, [r2, #0]
 801bba0:	1a52      	subs	r2, r2, r1
 801bba2:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801bba6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bba8:	9914      	ldr	r1, [sp, #80]	; 0x50
 801bbaa:	3201      	adds	r2, #1
 801bbac:	428a      	cmp	r2, r1
 801bbae:	9209      	str	r2, [sp, #36]	; 0x24
 801bbb0:	d111      	bne.n	801bbd6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801bbb2:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801bbb6:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801bbba:	9b06      	ldr	r3, [sp, #24]
 801bbbc:	eba5 0509 	sub.w	r5, r5, r9
 801bbc0:	b2ad      	uxth	r5, r5
 801bbc2:	2d00      	cmp	r5, #0
 801bbc4:	bf08      	it	eq
 801bbc6:	4619      	moveq	r1, r3
 801bbc8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bbca:	bf18      	it	ne
 801bbcc:	2100      	movne	r1, #0
 801bbce:	3301      	adds	r3, #1
 801bbd0:	930d      	str	r3, [sp, #52]	; 0x34
 801bbd2:	b289      	uxth	r1, r1
 801bbd4:	e695      	b.n	801b902 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801bbd6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801bbda:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801bbde:	1b2d      	subs	r5, r5, r4
 801bbe0:	b2ad      	uxth	r5, r5
 801bbe2:	2d00      	cmp	r5, #0
 801bbe4:	bf18      	it	ne
 801bbe6:	2400      	movne	r4, #0
 801bbe8:	e740      	b.n	801ba6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801bbea:	4b04      	ldr	r3, [pc, #16]	; (801bbfc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801bbec:	6818      	ldr	r0, [r3, #0]
 801bbee:	6803      	ldr	r3, [r0, #0]
 801bbf0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bbf2:	4798      	blx	r3
 801bbf4:	b01d      	add	sp, #116	; 0x74
 801bbf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bbfa:	bf00      	nop
 801bbfc:	200137bc 	.word	0x200137bc

0801bc00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801bc00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bc04:	b09f      	sub	sp, #124	; 0x7c
 801bc06:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801bc0a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801bc0e:	920a      	str	r2, [sp, #40]	; 0x28
 801bc10:	461d      	mov	r5, r3
 801bc12:	4604      	mov	r4, r0
 801bc14:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bc16:	2a00      	cmp	r2, #0
 801bc18:	f000 81fa 	beq.w	801c010 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801bc1c:	6828      	ldr	r0, [r5, #0]
 801bc1e:	6869      	ldr	r1, [r5, #4]
 801bc20:	aa1a      	add	r2, sp, #104	; 0x68
 801bc22:	c203      	stmia	r2!, {r0, r1}
 801bc24:	6818      	ldr	r0, [r3, #0]
 801bc26:	6859      	ldr	r1, [r3, #4]
 801bc28:	aa1c      	add	r2, sp, #112	; 0x70
 801bc2a:	c203      	stmia	r2!, {r0, r1}
 801bc2c:	a81a      	add	r0, sp, #104	; 0x68
 801bc2e:	f7f8 fd83 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bc32:	4629      	mov	r1, r5
 801bc34:	a81c      	add	r0, sp, #112	; 0x70
 801bc36:	f7f8 fdc3 	bl	80147c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bc3a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801bc3e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801bc42:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801bc46:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801bc4a:	bfd7      	itett	le
 801bc4c:	b29a      	uxthle	r2, r3
 801bc4e:	2201      	movgt	r2, #1
 801bc50:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801bc54:	fb91 f2f2 	sdivle	r2, r1, r2
 801bc58:	9201      	str	r2, [sp, #4]
 801bc5a:	9801      	ldr	r0, [sp, #4]
 801bc5c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801bc60:	fb92 f0f0 	sdiv	r0, r2, r0
 801bc64:	b280      	uxth	r0, r0
 801bc66:	9010      	str	r0, [sp, #64]	; 0x40
 801bc68:	9901      	ldr	r1, [sp, #4]
 801bc6a:	9801      	ldr	r0, [sp, #4]
 801bc6c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801bc6e:	440e      	add	r6, r1
 801bc70:	fb05 2510 	mls	r5, r5, r0, r2
 801bc74:	fb15 f503 	smulbb	r5, r5, r3
 801bc78:	3e01      	subs	r6, #1
 801bc7a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801bc7e:	fb96 f6f1 	sdiv	r6, r6, r1
 801bc82:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801bc86:	440d      	add	r5, r1
 801bc88:	4419      	add	r1, r3
 801bc8a:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801bc8e:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801bc92:	441a      	add	r2, r3
 801bc94:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801bc98:	9304      	str	r3, [sp, #16]
 801bc9a:	4b96      	ldr	r3, [pc, #600]	; (801bef4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801bc9c:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801bca0:	6818      	ldr	r0, [r3, #0]
 801bca2:	6803      	ldr	r3, [r0, #0]
 801bca4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bca6:	4798      	blx	r3
 801bca8:	4b93      	ldr	r3, [pc, #588]	; (801bef8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801bcaa:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801bcae:	881a      	ldrh	r2, [r3, #0]
 801bcb0:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801bcb4:	9318      	str	r3, [sp, #96]	; 0x60
 801bcb6:	fb02 c101 	mla	r1, r2, r1, ip
 801bcba:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801bcbe:	4357      	muls	r7, r2
 801bcc0:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801bcc4:	3601      	adds	r6, #1
 801bcc6:	920b      	str	r2, [sp, #44]	; 0x2c
 801bcc8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bcca:	4b8c      	ldr	r3, [pc, #560]	; (801befc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801bccc:	b2b6      	uxth	r6, r6
 801bcce:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801bcd2:	1d32      	adds	r2, r6, #4
 801bcd4:	9206      	str	r2, [sp, #24]
 801bcd6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801bcd8:	43d2      	mvns	r2, r2
 801bcda:	b2d2      	uxtb	r2, r2
 801bcdc:	b2ad      	uxth	r5, r5
 801bcde:	9215      	str	r2, [sp, #84]	; 0x54
 801bce0:	9a04      	ldr	r2, [sp, #16]
 801bce2:	2d00      	cmp	r5, #0
 801bce4:	bf0c      	ite	eq
 801bce6:	4611      	moveq	r1, r2
 801bce8:	2100      	movne	r1, #0
 801bcea:	2200      	movs	r2, #0
 801bcec:	1b1b      	subs	r3, r3, r4
 801bcee:	b289      	uxth	r1, r1
 801bcf0:	920d      	str	r2, [sp, #52]	; 0x34
 801bcf2:	9319      	str	r3, [sp, #100]	; 0x64
 801bcf4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801bcf6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bcf8:	fa12 f383 	uxtah	r3, r2, r3
 801bcfc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bcfe:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801bd02:	3304      	adds	r3, #4
 801bd04:	9307      	str	r3, [sp, #28]
 801bd06:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801bd08:	455b      	cmp	r3, fp
 801bd0a:	f240 817c 	bls.w	801c006 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801bd0e:	9a01      	ldr	r2, [sp, #4]
 801bd10:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801bd14:	fbb5 f3f3 	udiv	r3, r5, r3
 801bd18:	1ad3      	subs	r3, r2, r3
 801bd1a:	b29b      	uxth	r3, r3
 801bd1c:	9316      	str	r3, [sp, #88]	; 0x58
 801bd1e:	9b07      	ldr	r3, [sp, #28]
 801bd20:	9807      	ldr	r0, [sp, #28]
 801bd22:	785a      	ldrb	r2, [r3, #1]
 801bd24:	789b      	ldrb	r3, [r3, #2]
 801bd26:	7800      	ldrb	r0, [r0, #0]
 801bd28:	9011      	str	r0, [sp, #68]	; 0x44
 801bd2a:	021b      	lsls	r3, r3, #8
 801bd2c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801bd30:	9a07      	ldr	r2, [sp, #28]
 801bd32:	78d2      	ldrb	r2, [r2, #3]
 801bd34:	4313      	orrs	r3, r2
 801bd36:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bd38:	3001      	adds	r0, #1
 801bd3a:	441a      	add	r2, r3
 801bd3c:	9005      	str	r0, [sp, #20]
 801bd3e:	1c50      	adds	r0, r2, #1
 801bd40:	9003      	str	r0, [sp, #12]
 801bd42:	7852      	ldrb	r2, [r2, #1]
 801bd44:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801bd46:	0212      	lsls	r2, r2, #8
 801bd48:	5cc3      	ldrb	r3, [r0, r3]
 801bd4a:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801bd4e:	431a      	orrs	r2, r3
 801bd50:	b293      	uxth	r3, r2
 801bd52:	930c      	str	r3, [sp, #48]	; 0x30
 801bd54:	2300      	movs	r3, #0
 801bd56:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801bd5a:	9308      	str	r3, [sp, #32]
 801bd5c:	461a      	mov	r2, r3
 801bd5e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801bd62:	930e      	str	r3, [sp, #56]	; 0x38
 801bd64:	f04f 0801 	mov.w	r8, #1
 801bd68:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801bd6c:	f8cd 8008 	str.w	r8, [sp, #8]
 801bd70:	46c4      	mov	ip, r8
 801bd72:	930f      	str	r3, [sp, #60]	; 0x3c
 801bd74:	2d00      	cmp	r5, #0
 801bd76:	d07c      	beq.n	801be72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801bd78:	45ac      	cmp	ip, r5
 801bd7a:	d26c      	bcs.n	801be56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801bd7c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801bd7e:	eba5 050c 	sub.w	r5, r5, ip
 801bd82:	455b      	cmp	r3, fp
 801bd84:	b2ad      	uxth	r5, r5
 801bd86:	4608      	mov	r0, r1
 801bd88:	d802      	bhi.n	801bd90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801bd8a:	e070      	b.n	801be6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801bd8c:	2b00      	cmp	r3, #0
 801bd8e:	d15c      	bne.n	801be4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801bd90:	9b03      	ldr	r3, [sp, #12]
 801bd92:	9a02      	ldr	r2, [sp, #8]
 801bd94:	785b      	ldrb	r3, [r3, #1]
 801bd96:	9902      	ldr	r1, [sp, #8]
 801bd98:	f1c2 0207 	rsb	r2, r2, #7
 801bd9c:	4093      	lsls	r3, r2
 801bd9e:	005b      	lsls	r3, r3, #1
 801bda0:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801bda4:	9b03      	ldr	r3, [sp, #12]
 801bda6:	781b      	ldrb	r3, [r3, #0]
 801bda8:	410b      	asrs	r3, r1
 801bdaa:	3101      	adds	r1, #1
 801bdac:	b2c9      	uxtb	r1, r1
 801bdae:	2908      	cmp	r1, #8
 801bdb0:	9102      	str	r1, [sp, #8]
 801bdb2:	9903      	ldr	r1, [sp, #12]
 801bdb4:	bf0a      	itet	eq
 801bdb6:	3102      	addeq	r1, #2
 801bdb8:	3101      	addne	r1, #1
 801bdba:	9103      	streq	r1, [sp, #12]
 801bdbc:	b2db      	uxtb	r3, r3
 801bdbe:	bf0a      	itet	eq
 801bdc0:	2100      	moveq	r1, #0
 801bdc2:	9103      	strne	r1, [sp, #12]
 801bdc4:	9102      	streq	r1, [sp, #8]
 801bdc6:	4313      	orrs	r3, r2
 801bdc8:	9911      	ldr	r1, [sp, #68]	; 0x44
 801bdca:	b29a      	uxth	r2, r3
 801bdcc:	4291      	cmp	r1, r2
 801bdce:	d30a      	bcc.n	801bde6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801bdd0:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801bdd4:	2301      	movs	r3, #1
 801bdd6:	9905      	ldr	r1, [sp, #20]
 801bdd8:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801bddc:	d30f      	bcc.n	801bdfe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801bdde:	2100      	movs	r1, #0
 801bde0:	4698      	mov	r8, r3
 801bde2:	9100      	str	r1, [sp, #0]
 801bde4:	e032      	b.n	801be4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801bde6:	9b05      	ldr	r3, [sp, #20]
 801bde8:	429a      	cmp	r2, r3
 801bdea:	d318      	bcc.n	801be1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801bdec:	eb04 0308 	add.w	r3, r4, r8
 801bdf0:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801bdf4:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801bdf8:	f108 0301 	add.w	r3, r8, #1
 801bdfc:	b29b      	uxth	r3, r3
 801bdfe:	9905      	ldr	r1, [sp, #20]
 801be00:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801be04:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801be08:	710e      	strb	r6, [r1, #4]
 801be0a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801be0c:	80ce      	strh	r6, [r1, #6]
 801be0e:	f108 0601 	add.w	r6, r8, #1
 801be12:	714e      	strb	r6, [r1, #5]
 801be14:	9905      	ldr	r1, [sp, #20]
 801be16:	3101      	adds	r1, #1
 801be18:	b289      	uxth	r1, r1
 801be1a:	9105      	str	r1, [sp, #20]
 801be1c:	e7df      	b.n	801bdde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801be1e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801be22:	4611      	mov	r1, r2
 801be24:	795b      	ldrb	r3, [r3, #5]
 801be26:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801be2a:	4426      	add	r6, r4
 801be2c:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801be2e:	4437      	add	r7, r6
 801be30:	2f00      	cmp	r7, #0
 801be32:	dd06      	ble.n	801be42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801be34:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801be38:	790f      	ldrb	r7, [r1, #4]
 801be3a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801be3e:	88c9      	ldrh	r1, [r1, #6]
 801be40:	e7f4      	b.n	801be2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801be42:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801be46:	b29b      	uxth	r3, r3
 801be48:	e7c5      	b.n	801bdd6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801be4a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801be4c:	920c      	str	r2, [sp, #48]	; 0x30
 801be4e:	4601      	mov	r1, r0
 801be50:	9a00      	ldr	r2, [sp, #0]
 801be52:	469c      	mov	ip, r3
 801be54:	e78e      	b.n	801bd74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801be56:	1957      	adds	r7, r2, r5
 801be58:	ebac 0305 	sub.w	r3, ip, r5
 801be5c:	b2ba      	uxth	r2, r7
 801be5e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801be62:	9200      	str	r2, [sp, #0]
 801be64:	b29b      	uxth	r3, r3
 801be66:	2500      	movs	r5, #0
 801be68:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801be6a:	455a      	cmp	r2, fp
 801be6c:	d88e      	bhi.n	801bd8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801be6e:	4601      	mov	r1, r0
 801be70:	e749      	b.n	801bd06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801be72:	458c      	cmp	ip, r1
 801be74:	bf2c      	ite	cs
 801be76:	4628      	movcs	r0, r5
 801be78:	462b      	movcc	r3, r5
 801be7a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801be7c:	bf27      	ittee	cs
 801be7e:	9109      	strcs	r1, [sp, #36]	; 0x24
 801be80:	ebac 0301 	subcs.w	r3, ip, r1
 801be84:	eba1 000c 	subcc.w	r0, r1, ip
 801be88:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801be8c:	bf2c      	ite	cs
 801be8e:	b29b      	uxthcs	r3, r3
 801be90:	b280      	uxthcc	r0, r0
 801be92:	2dff      	cmp	r5, #255	; 0xff
 801be94:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801be96:	eb02 0705 	add.w	r7, r2, r5
 801be9a:	b2bd      	uxth	r5, r7
 801be9c:	9500      	str	r5, [sp, #0]
 801be9e:	d12f      	bne.n	801bf00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801bea0:	465e      	mov	r6, fp
 801bea2:	9d00      	ldr	r5, [sp, #0]
 801bea4:	42aa      	cmp	r2, r5
 801bea6:	f040 8084 	bne.w	801bfb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801beaa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801beac:	458c      	cmp	ip, r1
 801beae:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801beb2:	d3d8      	bcc.n	801be66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801beb4:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801beb6:	9904      	ldr	r1, [sp, #16]
 801beb8:	8812      	ldrh	r2, [r2, #0]
 801beba:	1a52      	subs	r2, r2, r1
 801bebc:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801bec0:	9a08      	ldr	r2, [sp, #32]
 801bec2:	9916      	ldr	r1, [sp, #88]	; 0x58
 801bec4:	3201      	adds	r2, #1
 801bec6:	428a      	cmp	r2, r1
 801bec8:	9208      	str	r2, [sp, #32]
 801beca:	f040 8092 	bne.w	801bff2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801bece:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801bed2:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801bed6:	9b04      	ldr	r3, [sp, #16]
 801bed8:	eba5 050c 	sub.w	r5, r5, ip
 801bedc:	b2ad      	uxth	r5, r5
 801bede:	2d00      	cmp	r5, #0
 801bee0:	bf08      	it	eq
 801bee2:	4619      	moveq	r1, r3
 801bee4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bee6:	bf18      	it	ne
 801bee8:	2100      	movne	r1, #0
 801beea:	3301      	adds	r3, #1
 801beec:	930d      	str	r3, [sp, #52]	; 0x34
 801beee:	b289      	uxth	r1, r1
 801bef0:	e700      	b.n	801bcf4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801bef2:	bf00      	nop
 801bef4:	200137bc 	.word	0x200137bc
 801bef8:	200137b6 	.word	0x200137b6
 801befc:	fffff7fb 	.word	0xfffff7fb
 801bf00:	46d9      	mov	r9, fp
 801bf02:	9d00      	ldr	r5, [sp, #0]
 801bf04:	42aa      	cmp	r2, r5
 801bf06:	d0d0      	beq.n	801beaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801bf08:	1c55      	adds	r5, r2, #1
 801bf0a:	4422      	add	r2, r4
 801bf0c:	9517      	str	r5, [sp, #92]	; 0x5c
 801bf0e:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801bf12:	9a06      	ldr	r2, [sp, #24]
 801bf14:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801bf18:	4472      	add	r2, lr
 801bf1a:	9212      	str	r2, [sp, #72]	; 0x48
 801bf1c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801bf1e:	f8b9 2000 	ldrh.w	r2, [r9]
 801bf22:	f897 a002 	ldrb.w	sl, [r7, #2]
 801bf26:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801bf28:	1216      	asrs	r6, r2, #8
 801bf2a:	fb1a fa07 	smulbb	sl, sl, r7
 801bf2e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bf32:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801bf34:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801bf38:	fb06 a607 	mla	r6, r6, r7, sl
 801bf3c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801bf3e:	f897 a001 	ldrb.w	sl, [r7, #1]
 801bf42:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801bf44:	10d5      	asrs	r5, r2, #3
 801bf46:	fb1a fa07 	smulbb	sl, sl, r7
 801bf4a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bf4e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801bf50:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801bf54:	fb05 a507 	mla	r5, r5, r7, sl
 801bf58:	9f06      	ldr	r7, [sp, #24]
 801bf5a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801bf5e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801bf60:	00d2      	lsls	r2, r2, #3
 801bf62:	fb1e fe07 	smulbb	lr, lr, r7
 801bf66:	b2d2      	uxtb	r2, r2
 801bf68:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801bf6a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801bf6e:	b2b6      	uxth	r6, r6
 801bf70:	fb02 e207 	mla	r2, r2, r7, lr
 801bf74:	b292      	uxth	r2, r2
 801bf76:	b2ad      	uxth	r5, r5
 801bf78:	f106 0a01 	add.w	sl, r6, #1
 801bf7c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801bf80:	f102 0e01 	add.w	lr, r2, #1
 801bf84:	f105 0a01 	add.w	sl, r5, #1
 801bf88:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801bf8c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bf90:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801bf94:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801bf98:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bf9c:	ea4e 0606 	orr.w	r6, lr, r6
 801bfa0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bfa4:	ea46 060a 	orr.w	r6, r6, sl
 801bfa8:	f829 6b02 	strh.w	r6, [r9], #2
 801bfac:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801bfb0:	e7a7      	b.n	801bf02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801bfb2:	f102 0e01 	add.w	lr, r2, #1
 801bfb6:	4422      	add	r2, r4
 801bfb8:	9f06      	ldr	r7, [sp, #24]
 801bfba:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801bfbe:	9a06      	ldr	r2, [sp, #24]
 801bfc0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801bfc4:	eb02 0a05 	add.w	sl, r2, r5
 801bfc8:	4a13      	ldr	r2, [pc, #76]	; (801c018 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801bfca:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801bfce:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801bfd2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801bfd6:	00d2      	lsls	r2, r2, #3
 801bfd8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bfdc:	ea49 0202 	orr.w	r2, r9, r2
 801bfe0:	f817 9005 	ldrb.w	r9, [r7, r5]
 801bfe4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801bfe8:	f826 2b02 	strh.w	r2, [r6], #2
 801bfec:	fa1f f28e 	uxth.w	r2, lr
 801bff0:	e757      	b.n	801bea2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801bff2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801bff6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801bffa:	1a2d      	subs	r5, r5, r0
 801bffc:	b2ad      	uxth	r5, r5
 801bffe:	2d00      	cmp	r5, #0
 801c000:	bf18      	it	ne
 801c002:	2000      	movne	r0, #0
 801c004:	e730      	b.n	801be68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801c006:	4b05      	ldr	r3, [pc, #20]	; (801c01c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801c008:	6818      	ldr	r0, [r3, #0]
 801c00a:	6803      	ldr	r3, [r0, #0]
 801c00c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c00e:	4798      	blx	r3
 801c010:	b01f      	add	sp, #124	; 0x7c
 801c012:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c016:	bf00      	nop
 801c018:	fffff800 	.word	0xfffff800
 801c01c:	200137bc 	.word	0x200137bc

0801c020 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801c020:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c024:	b091      	sub	sp, #68	; 0x44
 801c026:	469b      	mov	fp, r3
 801c028:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801c02c:	4616      	mov	r6, r2
 801c02e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801c032:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c036:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c03a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801c03e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801c042:	4604      	mov	r4, r0
 801c044:	460d      	mov	r5, r1
 801c046:	4640      	mov	r0, r8
 801c048:	4659      	mov	r1, fp
 801c04a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801c04e:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801c052:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801c056:	f7f3 fc11 	bl	800f87c <_ZN8touchgfx4RectaNERKS0_>
 801c05a:	4631      	mov	r1, r6
 801c05c:	4640      	mov	r0, r8
 801c05e:	f7f3 fc0d 	bl	800f87c <_ZN8touchgfx4RectaNERKS0_>
 801c062:	4b74      	ldr	r3, [pc, #464]	; (801c234 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801c064:	8818      	ldrh	r0, [r3, #0]
 801c066:	4b74      	ldr	r3, [pc, #464]	; (801c238 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801c068:	8819      	ldrh	r1, [r3, #0]
 801c06a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c06e:	2b00      	cmp	r3, #0
 801c070:	b202      	sxth	r2, r0
 801c072:	b20e      	sxth	r6, r1
 801c074:	da07      	bge.n	801c086 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801c076:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801c07a:	4463      	add	r3, ip
 801c07c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801c080:	2300      	movs	r3, #0
 801c082:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801c086:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c08a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801c08e:	1ad2      	subs	r2, r2, r3
 801c090:	4594      	cmp	ip, r2
 801c092:	bfc4      	itt	gt
 801c094:	1ac2      	subgt	r2, r0, r3
 801c096:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801c09a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c09e:	2a00      	cmp	r2, #0
 801c0a0:	da07      	bge.n	801c0b2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801c0a2:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801c0a6:	4462      	add	r2, ip
 801c0a8:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801c0ac:	2200      	movs	r2, #0
 801c0ae:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801c0b2:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801c0b6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c0ba:	eba6 060a 	sub.w	r6, r6, sl
 801c0be:	42b2      	cmp	r2, r6
 801c0c0:	bfc4      	itt	gt
 801c0c2:	eba1 020a 	subgt.w	r2, r1, sl
 801c0c6:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801c0ca:	4a5c      	ldr	r2, [pc, #368]	; (801c23c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801c0cc:	7812      	ldrb	r2, [r2, #0]
 801c0ce:	b9a2      	cbnz	r2, 801c0fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801c0d0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c0d4:	4286      	cmp	r6, r0
 801c0d6:	4640      	mov	r0, r8
 801c0d8:	9303      	str	r3, [sp, #12]
 801c0da:	bf14      	ite	ne
 801c0dc:	2600      	movne	r6, #0
 801c0de:	2601      	moveq	r6, #1
 801c0e0:	f7f3 fc0f 	bl	800f902 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c0e4:	9b03      	ldr	r3, [sp, #12]
 801c0e6:	b160      	cbz	r0, 801c102 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801c0e8:	2300      	movs	r3, #0
 801c0ea:	8023      	strh	r3, [r4, #0]
 801c0ec:	8063      	strh	r3, [r4, #2]
 801c0ee:	80a3      	strh	r3, [r4, #4]
 801c0f0:	4620      	mov	r0, r4
 801c0f2:	80e3      	strh	r3, [r4, #6]
 801c0f4:	b011      	add	sp, #68	; 0x44
 801c0f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c0fa:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801c0fe:	428e      	cmp	r6, r1
 801c100:	e7e9      	b.n	801c0d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801c102:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801c106:	9205      	str	r2, [sp, #20]
 801c108:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c10c:	9206      	str	r2, [sp, #24]
 801c10e:	f8bb 2000 	ldrh.w	r2, [fp]
 801c112:	900e      	str	r0, [sp, #56]	; 0x38
 801c114:	1a9b      	subs	r3, r3, r2
 801c116:	b21b      	sxth	r3, r3
 801c118:	9303      	str	r3, [sp, #12]
 801c11a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801c11e:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801c122:	ebaa 0a03 	sub.w	sl, sl, r3
 801c126:	fa0f f38a 	sxth.w	r3, sl
 801c12a:	9304      	str	r3, [sp, #16]
 801c12c:	9b03      	ldr	r3, [sp, #12]
 801c12e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801c132:	9b04      	ldr	r3, [sp, #16]
 801c134:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801c138:	9b05      	ldr	r3, [sp, #20]
 801c13a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801c13e:	a90e      	add	r1, sp, #56	; 0x38
 801c140:	9b06      	ldr	r3, [sp, #24]
 801c142:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801c146:	a80c      	add	r0, sp, #48	; 0x30
 801c148:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801c14c:	f7f8 fb38 	bl	80147c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c150:	4640      	mov	r0, r8
 801c152:	f7f8 faf1 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c156:	a80e      	add	r0, sp, #56	; 0x38
 801c158:	f7f8 faee 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c15c:	4b38      	ldr	r3, [pc, #224]	; (801c240 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801c15e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801c162:	881b      	ldrh	r3, [r3, #0]
 801c164:	9307      	str	r3, [sp, #28]
 801c166:	682b      	ldr	r3, [r5, #0]
 801c168:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801c244 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c16c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c16e:	4628      	mov	r0, r5
 801c170:	4798      	blx	r3
 801c172:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801c176:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801c17a:	4681      	mov	r9, r0
 801c17c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801c180:	f8db 0000 	ldr.w	r0, [fp]
 801c184:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801c186:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801c18a:	6803      	ldr	r3, [r0, #0]
 801c18c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c18e:	4798      	blx	r3
 801c190:	4607      	mov	r7, r0
 801c192:	f8db 0000 	ldr.w	r0, [fp]
 801c196:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801c19a:	6803      	ldr	r3, [r0, #0]
 801c19c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c1a0:	9109      	str	r1, [sp, #36]	; 0x24
 801c1a2:	9208      	str	r2, [sp, #32]
 801c1a4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c1a6:	4798      	blx	r3
 801c1a8:	f010 0f01 	tst.w	r0, #1
 801c1ac:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c1b0:	d012      	beq.n	801c1d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801c1b2:	f8db 0000 	ldr.w	r0, [fp]
 801c1b6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801c1ba:	6803      	ldr	r3, [r0, #0]
 801c1bc:	9200      	str	r2, [sp, #0]
 801c1be:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801c1c0:	e898 0006 	ldmia.w	r8, {r1, r2}
 801c1c4:	462b      	mov	r3, r5
 801c1c6:	47b0      	blx	r6
 801c1c8:	9b03      	ldr	r3, [sp, #12]
 801c1ca:	8023      	strh	r3, [r4, #0]
 801c1cc:	9b04      	ldr	r3, [sp, #16]
 801c1ce:	8063      	strh	r3, [r4, #2]
 801c1d0:	9b05      	ldr	r3, [sp, #20]
 801c1d2:	80a3      	strh	r3, [r4, #4]
 801c1d4:	9b06      	ldr	r3, [sp, #24]
 801c1d6:	e78b      	b.n	801c0f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801c1d8:	fb09 f202 	mul.w	r2, r9, r2
 801c1dc:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801c1e0:	440f      	add	r7, r1
 801c1e2:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801c1e6:	b166      	cbz	r6, 801c202 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c1e8:	9a07      	ldr	r2, [sp, #28]
 801c1ea:	4592      	cmp	sl, r2
 801c1ec:	d109      	bne.n	801c202 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c1ee:	f8db 0000 	ldr.w	r0, [fp]
 801c1f2:	6802      	ldr	r2, [r0, #0]
 801c1f4:	fb09 f303 	mul.w	r3, r9, r3
 801c1f8:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801c1fa:	4629      	mov	r1, r5
 801c1fc:	463a      	mov	r2, r7
 801c1fe:	47b0      	blx	r6
 801c200:	e7e2      	b.n	801c1c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c202:	fb0a f303 	mul.w	r3, sl, r3
 801c206:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801c244 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c20a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801c20e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801c212:	4545      	cmp	r5, r8
 801c214:	d2d8      	bcs.n	801c1c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c216:	f8db 0000 	ldr.w	r0, [fp]
 801c21a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801c21e:	6802      	ldr	r2, [r0, #0]
 801c220:	4629      	mov	r1, r5
 801c222:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801c226:	005b      	lsls	r3, r3, #1
 801c228:	463a      	mov	r2, r7
 801c22a:	47d0      	blx	sl
 801c22c:	444f      	add	r7, r9
 801c22e:	4435      	add	r5, r6
 801c230:	e7ef      	b.n	801c212 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801c232:	bf00      	nop
 801c234:	200137b0 	.word	0x200137b0
 801c238:	200137b2 	.word	0x200137b2
 801c23c:	200137b4 	.word	0x200137b4
 801c240:	200137b6 	.word	0x200137b6
 801c244:	200137bc 	.word	0x200137bc

0801c248 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801c248:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c24a:	4606      	mov	r6, r0
 801c24c:	b087      	sub	sp, #28
 801c24e:	460c      	mov	r4, r1
 801c250:	4617      	mov	r7, r2
 801c252:	461d      	mov	r5, r3
 801c254:	b333      	cbz	r3, 801c2a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c256:	4608      	mov	r0, r1
 801c258:	f7f3 fb53 	bl	800f902 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c25c:	bb10      	cbnz	r0, 801c2a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c25e:	6820      	ldr	r0, [r4, #0]
 801c260:	6861      	ldr	r1, [r4, #4]
 801c262:	4c1c      	ldr	r4, [pc, #112]	; (801c2d4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801c264:	ab04      	add	r3, sp, #16
 801c266:	c303      	stmia	r3!, {r0, r1}
 801c268:	a804      	add	r0, sp, #16
 801c26a:	f7f8 fa65 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c26e:	6820      	ldr	r0, [r4, #0]
 801c270:	6803      	ldr	r3, [r0, #0]
 801c272:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c274:	4798      	blx	r3
 801c276:	2dff      	cmp	r5, #255	; 0xff
 801c278:	d016      	beq.n	801c2a8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801c27a:	f010 0f08 	tst.w	r0, #8
 801c27e:	6820      	ldr	r0, [r4, #0]
 801c280:	d015      	beq.n	801c2ae <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801c282:	2400      	movs	r4, #0
 801c284:	6801      	ldr	r1, [r0, #0]
 801c286:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801c28a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c28e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801c292:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801c296:	9401      	str	r4, [sp, #4]
 801c298:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801c29c:	9400      	str	r4, [sp, #0]
 801c29e:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801c2a0:	4639      	mov	r1, r7
 801c2a2:	47a0      	blx	r4
 801c2a4:	b007      	add	sp, #28
 801c2a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c2a8:	f010 0f02 	tst.w	r0, #2
 801c2ac:	e7e7      	b.n	801c27e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801c2ae:	6803      	ldr	r3, [r0, #0]
 801c2b0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c2b2:	4798      	blx	r3
 801c2b4:	4b08      	ldr	r3, [pc, #32]	; (801c2d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801c2b6:	881a      	ldrh	r2, [r3, #0]
 801c2b8:	6833      	ldr	r3, [r6, #0]
 801c2ba:	e9cd 7500 	strd	r7, r5, [sp]
 801c2be:	4601      	mov	r1, r0
 801c2c0:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801c2c2:	4630      	mov	r0, r6
 801c2c4:	ab04      	add	r3, sp, #16
 801c2c6:	47a8      	blx	r5
 801c2c8:	6820      	ldr	r0, [r4, #0]
 801c2ca:	6803      	ldr	r3, [r0, #0]
 801c2cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c2ce:	4798      	blx	r3
 801c2d0:	e7e8      	b.n	801c2a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c2d2:	bf00      	nop
 801c2d4:	200137bc 	.word	0x200137bc
 801c2d8:	200137b6 	.word	0x200137b6

0801c2dc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801c2dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c2e0:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801c2e4:	9e08      	ldr	r6, [sp, #32]
 801c2e6:	4688      	mov	r8, r1
 801c2e8:	4614      	mov	r4, r2
 801c2ea:	461d      	mov	r5, r3
 801c2ec:	2f00      	cmp	r7, #0
 801c2ee:	f000 80a9 	beq.w	801c444 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c2f2:	4618      	mov	r0, r3
 801c2f4:	f7f3 fb05 	bl	800f902 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c2f8:	2800      	cmp	r0, #0
 801c2fa:	f040 80a3 	bne.w	801c444 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c2fe:	f9b5 1000 	ldrsh.w	r1, [r5]
 801c302:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801c306:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801c30a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801c30e:	fb04 1303 	mla	r3, r4, r3, r1
 801c312:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801c316:	4365      	muls	r5, r4
 801c318:	2fff      	cmp	r7, #255	; 0xff
 801c31a:	eba4 0200 	sub.w	r2, r4, r0
 801c31e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801c322:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801c326:	d04a      	beq.n	801c3be <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801c328:	b2bc      	uxth	r4, r7
 801c32a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801c32e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801c332:	fa5f f788 	uxtb.w	r7, r8
 801c336:	b2f3      	uxtb	r3, r6
 801c338:	0040      	lsls	r0, r0, #1
 801c33a:	fb0e fe04 	mul.w	lr, lr, r4
 801c33e:	4367      	muls	r7, r4
 801c340:	4363      	muls	r3, r4
 801c342:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801c346:	fa1f fc8c 	uxth.w	ip, ip
 801c34a:	42a9      	cmp	r1, r5
 801c34c:	d27a      	bcs.n	801c444 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c34e:	eb01 0900 	add.w	r9, r1, r0
 801c352:	4549      	cmp	r1, r9
 801c354:	d231      	bcs.n	801c3ba <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801c356:	880a      	ldrh	r2, [r1, #0]
 801c358:	1214      	asrs	r4, r2, #8
 801c35a:	10d6      	asrs	r6, r2, #3
 801c35c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801c360:	00d2      	lsls	r2, r2, #3
 801c362:	b2d2      	uxtb	r2, r2
 801c364:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801c368:	fb14 f40c 	smulbb	r4, r4, ip
 801c36c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c370:	4474      	add	r4, lr
 801c372:	fb12 f20c 	smulbb	r2, r2, ip
 801c376:	b2a4      	uxth	r4, r4
 801c378:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c37c:	441a      	add	r2, r3
 801c37e:	b292      	uxth	r2, r2
 801c380:	f104 0a01 	add.w	sl, r4, #1
 801c384:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c388:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801c38c:	fb16 f60c 	smulbb	r6, r6, ip
 801c390:	f102 0a01 	add.w	sl, r2, #1
 801c394:	443e      	add	r6, r7
 801c396:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801c39a:	b2b6      	uxth	r6, r6
 801c39c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801c3a0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c3a4:	4322      	orrs	r2, r4
 801c3a6:	1c74      	adds	r4, r6, #1
 801c3a8:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801c3ac:	0976      	lsrs	r6, r6, #5
 801c3ae:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c3b2:	4332      	orrs	r2, r6
 801c3b4:	f821 2b02 	strh.w	r2, [r1], #2
 801c3b8:	e7cb      	b.n	801c352 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801c3ba:	4441      	add	r1, r8
 801c3bc:	e7c5      	b.n	801c34a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801c3be:	4f22      	ldr	r7, [pc, #136]	; (801c448 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801c3c0:	0973      	lsrs	r3, r6, #5
 801c3c2:	ea08 0707 	and.w	r7, r8, r7
 801c3c6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c3ca:	433b      	orrs	r3, r7
 801c3cc:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801c3d0:	4333      	orrs	r3, r6
 801c3d2:	07e7      	lsls	r7, r4, #31
 801c3d4:	b29b      	uxth	r3, r3
 801c3d6:	d50b      	bpl.n	801c3f0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801c3d8:	0040      	lsls	r0, r0, #1
 801c3da:	0052      	lsls	r2, r2, #1
 801c3dc:	42a9      	cmp	r1, r5
 801c3de:	d231      	bcs.n	801c444 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c3e0:	180c      	adds	r4, r1, r0
 801c3e2:	42a1      	cmp	r1, r4
 801c3e4:	d202      	bcs.n	801c3ec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801c3e6:	f821 3b02 	strh.w	r3, [r1], #2
 801c3ea:	e7fa      	b.n	801c3e2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801c3ec:	4411      	add	r1, r2
 801c3ee:	e7f5      	b.n	801c3dc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801c3f0:	078e      	lsls	r6, r1, #30
 801c3f2:	d008      	beq.n	801c406 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801c3f4:	0066      	lsls	r6, r4, #1
 801c3f6:	460a      	mov	r2, r1
 801c3f8:	42aa      	cmp	r2, r5
 801c3fa:	d202      	bcs.n	801c402 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801c3fc:	8013      	strh	r3, [r2, #0]
 801c3fe:	4432      	add	r2, r6
 801c400:	e7fa      	b.n	801c3f8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801c402:	3102      	adds	r1, #2
 801c404:	3801      	subs	r0, #1
 801c406:	07c2      	lsls	r2, r0, #31
 801c408:	d50b      	bpl.n	801c422 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801c40a:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801c40e:	3a01      	subs	r2, #1
 801c410:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801c414:	0066      	lsls	r6, r4, #1
 801c416:	42aa      	cmp	r2, r5
 801c418:	d202      	bcs.n	801c420 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801c41a:	8013      	strh	r3, [r2, #0]
 801c41c:	4432      	add	r2, r6
 801c41e:	e7fa      	b.n	801c416 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801c420:	3801      	subs	r0, #1
 801c422:	b178      	cbz	r0, 801c444 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c424:	1040      	asrs	r0, r0, #1
 801c426:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801c42a:	0080      	lsls	r0, r0, #2
 801c42c:	0064      	lsls	r4, r4, #1
 801c42e:	42a9      	cmp	r1, r5
 801c430:	d208      	bcs.n	801c444 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c432:	180e      	adds	r6, r1, r0
 801c434:	460a      	mov	r2, r1
 801c436:	42b2      	cmp	r2, r6
 801c438:	d202      	bcs.n	801c440 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801c43a:	f842 3b04 	str.w	r3, [r2], #4
 801c43e:	e7fa      	b.n	801c436 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801c440:	4421      	add	r1, r4
 801c442:	e7f4      	b.n	801c42e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801c444:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c448:	00fff800 	.word	0x00fff800

0801c44c <_ZN8touchgfx8LCD16bppC1Ev>:
 801c44c:	2200      	movs	r2, #0
 801c44e:	4912      	ldr	r1, [pc, #72]	; (801c498 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801c450:	6042      	str	r2, [r0, #4]
 801c452:	6001      	str	r1, [r0, #0]
 801c454:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801c458:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801c45c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801c460:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801c464:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801c468:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801c46c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801c470:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801c474:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801c478:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801c47c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801c480:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801c484:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801c488:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801c48c:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801c490:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801c494:	4770      	bx	lr
 801c496:	bf00      	nop
 801c498:	0802cd54 	.word	0x0802cd54

0801c49c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801c49c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c4a0:	460d      	mov	r5, r1
 801c4a2:	b08d      	sub	sp, #52	; 0x34
 801c4a4:	4604      	mov	r4, r0
 801c4a6:	6808      	ldr	r0, [r1, #0]
 801c4a8:	6849      	ldr	r1, [r1, #4]
 801c4aa:	4699      	mov	r9, r3
 801c4ac:	ab08      	add	r3, sp, #32
 801c4ae:	c303      	stmia	r3!, {r0, r1}
 801c4b0:	6810      	ldr	r0, [r2, #0]
 801c4b2:	6851      	ldr	r1, [r2, #4]
 801c4b4:	ab0a      	add	r3, sp, #40	; 0x28
 801c4b6:	c303      	stmia	r3!, {r0, r1}
 801c4b8:	a808      	add	r0, sp, #32
 801c4ba:	f7f8 f93d 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c4be:	4629      	mov	r1, r5
 801c4c0:	a80a      	add	r0, sp, #40	; 0x28
 801c4c2:	f7f8 f97d 	bl	80147c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c4c6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801c4ca:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801c4ce:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801c4d2:	4d63      	ldr	r5, [pc, #396]	; (801c660 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801c4d4:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801c4d8:	6828      	ldr	r0, [r5, #0]
 801c4da:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801c4de:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c4e2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801c4e6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801c4ea:	440a      	add	r2, r1
 801c4ec:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801c4f0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801c4f4:	4413      	add	r3, r2
 801c4f6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801c4fa:	6803      	ldr	r3, [r0, #0]
 801c4fc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c4fe:	4798      	blx	r3
 801c500:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c504:	d119      	bne.n	801c53a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801c506:	f010 0f20 	tst.w	r0, #32
 801c50a:	6828      	ldr	r0, [r5, #0]
 801c50c:	d018      	beq.n	801c540 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801c50e:	2500      	movs	r5, #0
 801c510:	6801      	ldr	r1, [r0, #0]
 801c512:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c516:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801c51a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801c51e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801c522:	9502      	str	r5, [sp, #8]
 801c524:	b2b6      	uxth	r6, r6
 801c526:	fa1f f588 	uxth.w	r5, r8
 801c52a:	9601      	str	r6, [sp, #4]
 801c52c:	9500      	str	r5, [sp, #0]
 801c52e:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801c530:	4621      	mov	r1, r4
 801c532:	47a8      	blx	r5
 801c534:	b00d      	add	sp, #52	; 0x34
 801c536:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c53a:	f010 0f40 	tst.w	r0, #64	; 0x40
 801c53e:	e7e4      	b.n	801c50a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801c540:	6803      	ldr	r3, [r0, #0]
 801c542:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c544:	4798      	blx	r3
 801c546:	4947      	ldr	r1, [pc, #284]	; (801c664 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801c548:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c54c:	880b      	ldrh	r3, [r1, #0]
 801c54e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801c552:	fb03 5202 	mla	r2, r3, r2, r5
 801c556:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c55a:	4373      	muls	r3, r6
 801c55c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c560:	9307      	str	r3, [sp, #28]
 801c562:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801c566:	9306      	str	r3, [sp, #24]
 801c568:	468a      	mov	sl, r1
 801c56a:	9b07      	ldr	r3, [sp, #28]
 801c56c:	4298      	cmp	r0, r3
 801c56e:	d270      	bcs.n	801c652 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801c570:	9b06      	ldr	r3, [sp, #24]
 801c572:	4621      	mov	r1, r4
 801c574:	eb00 0b03 	add.w	fp, r0, r3
 801c578:	4558      	cmp	r0, fp
 801c57a:	d25d      	bcs.n	801c638 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801c57c:	f851 4b04 	ldr.w	r4, [r1], #4
 801c580:	0e23      	lsrs	r3, r4, #24
 801c582:	d014      	beq.n	801c5ae <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801c584:	2bff      	cmp	r3, #255	; 0xff
 801c586:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801c58a:	d112      	bne.n	801c5b2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801c58c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c590:	d10f      	bne.n	801c5b2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801c592:	0963      	lsrs	r3, r4, #5
 801c594:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801c598:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c59c:	f02c 0c07 	bic.w	ip, ip, #7
 801c5a0:	ea43 0c0c 	orr.w	ip, r3, ip
 801c5a4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801c5a8:	ea4c 0404 	orr.w	r4, ip, r4
 801c5ac:	8004      	strh	r4, [r0, #0]
 801c5ae:	3002      	adds	r0, #2
 801c5b0:	e7e2      	b.n	801c578 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801c5b2:	fb09 f303 	mul.w	r3, r9, r3
 801c5b6:	8807      	ldrh	r7, [r0, #0]
 801c5b8:	1c5a      	adds	r2, r3, #1
 801c5ba:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801c5be:	1212      	asrs	r2, r2, #8
 801c5c0:	123e      	asrs	r6, r7, #8
 801c5c2:	b293      	uxth	r3, r2
 801c5c4:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801c5c8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c5cc:	43d2      	mvns	r2, r2
 801c5ce:	b2d2      	uxtb	r2, r2
 801c5d0:	10fd      	asrs	r5, r7, #3
 801c5d2:	fb1e fe03 	smulbb	lr, lr, r3
 801c5d6:	00ff      	lsls	r7, r7, #3
 801c5d8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c5dc:	fb06 e602 	mla	r6, r6, r2, lr
 801c5e0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c5e4:	b2ff      	uxtb	r7, r7
 801c5e6:	fa5f fc8c 	uxtb.w	ip, ip
 801c5ea:	b2e4      	uxtb	r4, r4
 801c5ec:	b2b6      	uxth	r6, r6
 801c5ee:	fb1c fc03 	smulbb	ip, ip, r3
 801c5f2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c5f6:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801c5fa:	fb14 f403 	smulbb	r4, r4, r3
 801c5fe:	fb05 c502 	mla	r5, r5, r2, ip
 801c602:	f106 0e01 	add.w	lr, r6, #1
 801c606:	fb07 4702 	mla	r7, r7, r2, r4
 801c60a:	b2ad      	uxth	r5, r5
 801c60c:	b2bf      	uxth	r7, r7
 801c60e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801c612:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801c616:	f105 0c01 	add.w	ip, r5, #1
 801c61a:	1c7e      	adds	r6, r7, #1
 801c61c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801c620:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801c624:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c628:	096d      	lsrs	r5, r5, #5
 801c62a:	ea46 060e 	orr.w	r6, r6, lr
 801c62e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c632:	432e      	orrs	r6, r5
 801c634:	8006      	strh	r6, [r0, #0]
 801c636:	e7ba      	b.n	801c5ae <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801c638:	f8ba 3000 	ldrh.w	r3, [sl]
 801c63c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801c640:	eba3 0308 	sub.w	r3, r3, r8
 801c644:	eba4 0408 	sub.w	r4, r4, r8
 801c648:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c64c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801c650:	e78b      	b.n	801c56a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801c652:	4b03      	ldr	r3, [pc, #12]	; (801c660 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801c654:	6818      	ldr	r0, [r3, #0]
 801c656:	6803      	ldr	r3, [r0, #0]
 801c658:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c65a:	4798      	blx	r3
 801c65c:	e76a      	b.n	801c534 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801c65e:	bf00      	nop
 801c660:	200137bc 	.word	0x200137bc
 801c664:	200137b6 	.word	0x200137b6

0801c668 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801c668:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801c66c:	460c      	mov	r4, r1
 801c66e:	b085      	sub	sp, #20
 801c670:	6810      	ldr	r0, [r2, #0]
 801c672:	6851      	ldr	r1, [r2, #4]
 801c674:	466d      	mov	r5, sp
 801c676:	c503      	stmia	r5!, {r0, r1}
 801c678:	6818      	ldr	r0, [r3, #0]
 801c67a:	6859      	ldr	r1, [r3, #4]
 801c67c:	4616      	mov	r6, r2
 801c67e:	c503      	stmia	r5!, {r0, r1}
 801c680:	4668      	mov	r0, sp
 801c682:	f7f8 f859 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c686:	4631      	mov	r1, r6
 801c688:	a802      	add	r0, sp, #8
 801c68a:	f7f8 f899 	bl	80147c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c68e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801c692:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801c696:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801c69a:	4d28      	ldr	r5, [pc, #160]	; (801c73c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801c69c:	4e28      	ldr	r6, [pc, #160]	; (801c740 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801c69e:	6828      	ldr	r0, [r5, #0]
 801c6a0:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801c6a4:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801c6a8:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c6ac:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801c6b0:	f8bd 1000 	ldrh.w	r1, [sp]
 801c6b4:	440a      	add	r2, r1
 801c6b6:	f8ad 2008 	strh.w	r2, [sp, #8]
 801c6ba:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801c6be:	4413      	add	r3, r2
 801c6c0:	f8ad 300a 	strh.w	r3, [sp, #10]
 801c6c4:	6803      	ldr	r3, [r0, #0]
 801c6c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c6c8:	4798      	blx	r3
 801c6ca:	8833      	ldrh	r3, [r6, #0]
 801c6cc:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801c6d0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801c6d4:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801c744 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801c6d8:	fb03 1202 	mla	r2, r3, r2, r1
 801c6dc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c6e0:	fb08 f303 	mul.w	r3, r8, r3
 801c6e4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c6e8:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801c6ec:	4298      	cmp	r0, r3
 801c6ee:	d21d      	bcs.n	801c72c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801c6f0:	eb00 080c 	add.w	r8, r0, ip
 801c6f4:	4540      	cmp	r0, r8
 801c6f6:	d20f      	bcs.n	801c718 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801c6f8:	f854 1b04 	ldr.w	r1, [r4], #4
 801c6fc:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801c700:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801c704:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c708:	ea42 0209 	orr.w	r2, r2, r9
 801c70c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801c710:	430a      	orrs	r2, r1
 801c712:	f820 2b02 	strh.w	r2, [r0], #2
 801c716:	e7ed      	b.n	801c6f4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801c718:	8832      	ldrh	r2, [r6, #0]
 801c71a:	1bd2      	subs	r2, r2, r7
 801c71c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c720:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801c724:	1bd2      	subs	r2, r2, r7
 801c726:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801c72a:	e7df      	b.n	801c6ec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801c72c:	6828      	ldr	r0, [r5, #0]
 801c72e:	6803      	ldr	r3, [r0, #0]
 801c730:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c732:	4798      	blx	r3
 801c734:	b005      	add	sp, #20
 801c736:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801c73a:	bf00      	nop
 801c73c:	200137bc 	.word	0x200137bc
 801c740:	200137b6 	.word	0x200137b6
 801c744:	fffff800 	.word	0xfffff800

0801c748 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801c748:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c74c:	460e      	mov	r6, r1
 801c74e:	b08e      	sub	sp, #56	; 0x38
 801c750:	4604      	mov	r4, r0
 801c752:	6808      	ldr	r0, [r1, #0]
 801c754:	6849      	ldr	r1, [r1, #4]
 801c756:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801c930 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801c75a:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801c934 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801c75e:	461d      	mov	r5, r3
 801c760:	ab0a      	add	r3, sp, #40	; 0x28
 801c762:	c303      	stmia	r3!, {r0, r1}
 801c764:	6810      	ldr	r0, [r2, #0]
 801c766:	6851      	ldr	r1, [r2, #4]
 801c768:	ab0c      	add	r3, sp, #48	; 0x30
 801c76a:	c303      	stmia	r3!, {r0, r1}
 801c76c:	a80a      	add	r0, sp, #40	; 0x28
 801c76e:	f7f7 ffe3 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c772:	4631      	mov	r1, r6
 801c774:	a80c      	add	r0, sp, #48	; 0x30
 801c776:	f7f8 f823 	bl	80147c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c77a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801c77e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801c782:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801c786:	f8d8 0000 	ldr.w	r0, [r8]
 801c78a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801c78e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801c792:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c796:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801c79a:	440c      	add	r4, r1
 801c79c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801c7a0:	440a      	add	r2, r1
 801c7a2:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801c7a6:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801c7aa:	4413      	add	r3, r2
 801c7ac:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801c7b0:	6803      	ldr	r3, [r0, #0]
 801c7b2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c7b4:	4798      	blx	r3
 801c7b6:	2dff      	cmp	r5, #255	; 0xff
 801c7b8:	d124      	bne.n	801c804 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801c7ba:	f010 0f01 	tst.w	r0, #1
 801c7be:	f8d8 0000 	ldr.w	r0, [r8]
 801c7c2:	d022      	beq.n	801c80a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801c7c4:	2100      	movs	r1, #0
 801c7c6:	f8d0 c000 	ldr.w	ip, [r0]
 801c7ca:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801c7ce:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801c7d2:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801c7d6:	f04f 0e01 	mov.w	lr, #1
 801c7da:	f8cd e018 	str.w	lr, [sp, #24]
 801c7de:	f8b9 e000 	ldrh.w	lr, [r9]
 801c7e2:	9503      	str	r5, [sp, #12]
 801c7e4:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801c7e8:	b2b6      	uxth	r6, r6
 801c7ea:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801c7ee:	9102      	str	r1, [sp, #8]
 801c7f0:	b2bf      	uxth	r7, r7
 801c7f2:	9601      	str	r6, [sp, #4]
 801c7f4:	9700      	str	r7, [sp, #0]
 801c7f6:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801c7fa:	4621      	mov	r1, r4
 801c7fc:	47a8      	blx	r5
 801c7fe:	b00e      	add	sp, #56	; 0x38
 801c800:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c804:	f010 0f04 	tst.w	r0, #4
 801c808:	e7d9      	b.n	801c7be <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801c80a:	6803      	ldr	r3, [r0, #0]
 801c80c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c80e:	4798      	blx	r3
 801c810:	f8b9 3000 	ldrh.w	r3, [r9]
 801c814:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c818:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801c81c:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801c820:	fb03 1202 	mla	r2, r3, r2, r1
 801c824:	ebac 0c07 	sub.w	ip, ip, r7
 801c828:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c82c:	435e      	muls	r6, r3
 801c82e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801c832:	2dff      	cmp	r5, #255	; 0xff
 801c834:	eba3 0707 	sub.w	r7, r3, r7
 801c838:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801c83c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801c840:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801c844:	d049      	beq.n	801c8da <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801c846:	43eb      	mvns	r3, r5
 801c848:	fa1f f985 	uxth.w	r9, r5
 801c84c:	b2db      	uxtb	r3, r3
 801c84e:	42b0      	cmp	r0, r6
 801c850:	d266      	bcs.n	801c920 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801c852:	eb00 0a0e 	add.w	sl, r0, lr
 801c856:	4550      	cmp	r0, sl
 801c858:	4621      	mov	r1, r4
 801c85a:	f104 0403 	add.w	r4, r4, #3
 801c85e:	d25b      	bcs.n	801c918 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801c860:	8802      	ldrh	r2, [r0, #0]
 801c862:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801c866:	ea4f 2822 	mov.w	r8, r2, asr #8
 801c86a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801c86e:	fb11 f109 	smulbb	r1, r1, r9
 801c872:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801c876:	10d5      	asrs	r5, r2, #3
 801c878:	fb08 1803 	mla	r8, r8, r3, r1
 801c87c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801c880:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c884:	fb11 f109 	smulbb	r1, r1, r9
 801c888:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c88c:	fb05 1503 	mla	r5, r5, r3, r1
 801c890:	00d2      	lsls	r2, r2, #3
 801c892:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801c896:	b2d2      	uxtb	r2, r2
 801c898:	fb11 f109 	smulbb	r1, r1, r9
 801c89c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c8a0:	fa1f f888 	uxth.w	r8, r8
 801c8a4:	fb02 1203 	mla	r2, r2, r3, r1
 801c8a8:	b292      	uxth	r2, r2
 801c8aa:	f108 0101 	add.w	r1, r8, #1
 801c8ae:	b2ad      	uxth	r5, r5
 801c8b0:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801c8b4:	1c51      	adds	r1, r2, #1
 801c8b6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c8ba:	1c69      	adds	r1, r5, #1
 801c8bc:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801c8c0:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801c8c4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c8c8:	096d      	lsrs	r5, r5, #5
 801c8ca:	ea42 0208 	orr.w	r2, r2, r8
 801c8ce:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c8d2:	432a      	orrs	r2, r5
 801c8d4:	f820 2b02 	strh.w	r2, [r0], #2
 801c8d8:	e7bd      	b.n	801c856 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801c8da:	4a14      	ldr	r2, [pc, #80]	; (801c92c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801c8dc:	42b0      	cmp	r0, r6
 801c8de:	d21f      	bcs.n	801c920 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801c8e0:	eb00 050e 	add.w	r5, r0, lr
 801c8e4:	42a8      	cmp	r0, r5
 801c8e6:	4621      	mov	r1, r4
 801c8e8:	f104 0403 	add.w	r4, r4, #3
 801c8ec:	d210      	bcs.n	801c910 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801c8ee:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801c8f2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801c8f6:	00db      	lsls	r3, r3, #3
 801c8f8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801c8fc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c900:	430b      	orrs	r3, r1
 801c902:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801c906:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801c90a:	f820 3b02 	strh.w	r3, [r0], #2
 801c90e:	e7e9      	b.n	801c8e4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801c910:	4438      	add	r0, r7
 801c912:	eb01 040c 	add.w	r4, r1, ip
 801c916:	e7e1      	b.n	801c8dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801c918:	4438      	add	r0, r7
 801c91a:	eb01 040c 	add.w	r4, r1, ip
 801c91e:	e796      	b.n	801c84e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801c920:	4b03      	ldr	r3, [pc, #12]	; (801c930 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801c922:	6818      	ldr	r0, [r3, #0]
 801c924:	6803      	ldr	r3, [r0, #0]
 801c926:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c928:	4798      	blx	r3
 801c92a:	e768      	b.n	801c7fe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801c92c:	fffff800 	.word	0xfffff800
 801c930:	200137bc 	.word	0x200137bc
 801c934:	200137b6 	.word	0x200137b6

0801c938 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801c938:	b4f0      	push	{r4, r5, r6, r7}
 801c93a:	4616      	mov	r6, r2
 801c93c:	2e01      	cmp	r6, #1
 801c93e:	461c      	mov	r4, r3
 801c940:	460d      	mov	r5, r1
 801c942:	9a04      	ldr	r2, [sp, #16]
 801c944:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801c948:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801c94c:	d012      	beq.n	801c974 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801c94e:	d303      	bcc.n	801c958 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801c950:	2e02      	cmp	r6, #2
 801c952:	d00a      	beq.n	801c96a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801c954:	bcf0      	pop	{r4, r5, r6, r7}
 801c956:	4770      	bx	lr
 801c958:	6805      	ldr	r5, [r0, #0]
 801c95a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801c95e:	68ed      	ldr	r5, [r5, #12]
 801c960:	4613      	mov	r3, r2
 801c962:	46ac      	mov	ip, r5
 801c964:	4622      	mov	r2, r4
 801c966:	bcf0      	pop	{r4, r5, r6, r7}
 801c968:	4760      	bx	ip
 801c96a:	4621      	mov	r1, r4
 801c96c:	4628      	mov	r0, r5
 801c96e:	bcf0      	pop	{r4, r5, r6, r7}
 801c970:	f7ff bd94 	b.w	801c49c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801c974:	4621      	mov	r1, r4
 801c976:	4628      	mov	r0, r5
 801c978:	bcf0      	pop	{r4, r5, r6, r7}
 801c97a:	f7ff bee5 	b.w	801c748 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801c980 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801c980:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c984:	4681      	mov	r9, r0
 801c986:	b093      	sub	sp, #76	; 0x4c
 801c988:	6810      	ldr	r0, [r2, #0]
 801c98a:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801c98e:	4f6d      	ldr	r7, [pc, #436]	; (801cb44 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801c990:	4688      	mov	r8, r1
 801c992:	6851      	ldr	r1, [r2, #4]
 801c994:	ac0e      	add	r4, sp, #56	; 0x38
 801c996:	c403      	stmia	r4!, {r0, r1}
 801c998:	6818      	ldr	r0, [r3, #0]
 801c99a:	6859      	ldr	r1, [r3, #4]
 801c99c:	ac10      	add	r4, sp, #64	; 0x40
 801c99e:	4616      	mov	r6, r2
 801c9a0:	c403      	stmia	r4!, {r0, r1}
 801c9a2:	a80e      	add	r0, sp, #56	; 0x38
 801c9a4:	f7f7 fec8 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c9a8:	4631      	mov	r1, r6
 801c9aa:	a810      	add	r0, sp, #64	; 0x40
 801c9ac:	f7f7 ff08 	bl	80147c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c9b0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801c9b4:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801c9b8:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801c9bc:	4e62      	ldr	r6, [pc, #392]	; (801cb48 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801c9be:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801c9c2:	6830      	ldr	r0, [r6, #0]
 801c9c4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801c9c8:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c9cc:	4489      	add	r9, r1
 801c9ce:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801c9d2:	440a      	add	r2, r1
 801c9d4:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801c9d8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801c9dc:	4413      	add	r3, r2
 801c9de:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801c9e2:	6803      	ldr	r3, [r0, #0]
 801c9e4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c9e6:	4798      	blx	r3
 801c9e8:	f010 0f80 	tst.w	r0, #128	; 0x80
 801c9ec:	6830      	ldr	r0, [r6, #0]
 801c9ee:	d01d      	beq.n	801ca2c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801c9f0:	2200      	movs	r2, #0
 801c9f2:	6801      	ldr	r1, [r0, #0]
 801c9f4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801c9f8:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801c9fc:	220b      	movs	r2, #11
 801c9fe:	9207      	str	r2, [sp, #28]
 801ca00:	883a      	ldrh	r2, [r7, #0]
 801ca02:	9206      	str	r2, [sp, #24]
 801ca04:	2201      	movs	r2, #1
 801ca06:	e9cd a204 	strd	sl, r2, [sp, #16]
 801ca0a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801ca0e:	9203      	str	r2, [sp, #12]
 801ca10:	b2a4      	uxth	r4, r4
 801ca12:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801ca16:	9200      	str	r2, [sp, #0]
 801ca18:	b2ad      	uxth	r5, r5
 801ca1a:	9502      	str	r5, [sp, #8]
 801ca1c:	9401      	str	r4, [sp, #4]
 801ca1e:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801ca20:	4642      	mov	r2, r8
 801ca22:	4649      	mov	r1, r9
 801ca24:	47a0      	blx	r4
 801ca26:	b013      	add	sp, #76	; 0x4c
 801ca28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ca2c:	6803      	ldr	r3, [r0, #0]
 801ca2e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ca30:	4798      	blx	r3
 801ca32:	883b      	ldrh	r3, [r7, #0]
 801ca34:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801ca38:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801ca3c:	fb03 1202 	mla	r2, r3, r2, r1
 801ca40:	435d      	muls	r5, r3
 801ca42:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ca46:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801ca4a:	920c      	str	r2, [sp, #48]	; 0x30
 801ca4c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801ca50:	1b12      	subs	r2, r2, r4
 801ca52:	920d      	str	r2, [sp, #52]	; 0x34
 801ca54:	0062      	lsls	r2, r4, #1
 801ca56:	1b1c      	subs	r4, r3, r4
 801ca58:	0063      	lsls	r3, r4, #1
 801ca5a:	920a      	str	r2, [sp, #40]	; 0x28
 801ca5c:	930b      	str	r3, [sp, #44]	; 0x2c
 801ca5e:	f04f 0e04 	mov.w	lr, #4
 801ca62:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ca64:	4298      	cmp	r0, r3
 801ca66:	d266      	bcs.n	801cb36 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801ca68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ca6a:	eb00 0b03 	add.w	fp, r0, r3
 801ca6e:	4558      	cmp	r0, fp
 801ca70:	d25c      	bcs.n	801cb2c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801ca72:	f819 3b01 	ldrb.w	r3, [r9], #1
 801ca76:	fb1e e303 	smlabb	r3, lr, r3, lr
 801ca7a:	f858 2003 	ldr.w	r2, [r8, r3]
 801ca7e:	0e11      	lsrs	r1, r2, #24
 801ca80:	d012      	beq.n	801caa8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801ca82:	29ff      	cmp	r1, #255	; 0xff
 801ca84:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801ca88:	d110      	bne.n	801caac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801ca8a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801ca8e:	d10d      	bne.n	801caac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801ca90:	0953      	lsrs	r3, r2, #5
 801ca92:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801ca96:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ca9a:	f027 0707 	bic.w	r7, r7, #7
 801ca9e:	431f      	orrs	r7, r3
 801caa0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801caa4:	433a      	orrs	r2, r7
 801caa6:	8002      	strh	r2, [r0, #0]
 801caa8:	3002      	adds	r0, #2
 801caaa:	e7e0      	b.n	801ca6e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801caac:	fb0a f101 	mul.w	r1, sl, r1
 801cab0:	8806      	ldrh	r6, [r0, #0]
 801cab2:	1c4b      	adds	r3, r1, #1
 801cab4:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801cab8:	1235      	asrs	r5, r6, #8
 801caba:	10f4      	asrs	r4, r6, #3
 801cabc:	121b      	asrs	r3, r3, #8
 801cabe:	00f6      	lsls	r6, r6, #3
 801cac0:	b299      	uxth	r1, r3
 801cac2:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801cac6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801caca:	b2f6      	uxtb	r6, r6
 801cacc:	43db      	mvns	r3, r3
 801cace:	b2d2      	uxtb	r2, r2
 801cad0:	b2db      	uxtb	r3, r3
 801cad2:	fb1c fc01 	smulbb	ip, ip, r1
 801cad6:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801cada:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cade:	fb12 f201 	smulbb	r2, r2, r1
 801cae2:	fb05 c503 	mla	r5, r5, r3, ip
 801cae6:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801caea:	b2ff      	uxtb	r7, r7
 801caec:	fb06 2203 	mla	r2, r6, r3, r2
 801caf0:	b2ad      	uxth	r5, r5
 801caf2:	fb17 f701 	smulbb	r7, r7, r1
 801caf6:	b292      	uxth	r2, r2
 801caf8:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801cafc:	fb04 7403 	mla	r4, r4, r3, r7
 801cb00:	f105 0c01 	add.w	ip, r5, #1
 801cb04:	1c57      	adds	r7, r2, #1
 801cb06:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801cb0a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801cb0e:	b2a4      	uxth	r4, r4
 801cb10:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cb14:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801cb18:	433d      	orrs	r5, r7
 801cb1a:	1c67      	adds	r7, r4, #1
 801cb1c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801cb20:	0964      	lsrs	r4, r4, #5
 801cb22:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801cb26:	4325      	orrs	r5, r4
 801cb28:	8005      	strh	r5, [r0, #0]
 801cb2a:	e7bd      	b.n	801caa8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801cb2c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801cb2e:	4418      	add	r0, r3
 801cb30:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cb32:	4499      	add	r9, r3
 801cb34:	e795      	b.n	801ca62 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801cb36:	4b04      	ldr	r3, [pc, #16]	; (801cb48 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801cb38:	6818      	ldr	r0, [r3, #0]
 801cb3a:	6803      	ldr	r3, [r0, #0]
 801cb3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cb3e:	4798      	blx	r3
 801cb40:	e771      	b.n	801ca26 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801cb42:	bf00      	nop
 801cb44:	200137b6 	.word	0x200137b6
 801cb48:	200137bc 	.word	0x200137bc

0801cb4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801cb4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cb50:	b087      	sub	sp, #28
 801cb52:	4680      	mov	r8, r0
 801cb54:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801cb58:	460d      	mov	r5, r1
 801cb5a:	4614      	mov	r4, r2
 801cb5c:	2e00      	cmp	r6, #0
 801cb5e:	f000 80b9 	beq.w	801ccd4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801cb62:	6810      	ldr	r0, [r2, #0]
 801cb64:	6851      	ldr	r1, [r2, #4]
 801cb66:	af02      	add	r7, sp, #8
 801cb68:	c703      	stmia	r7!, {r0, r1}
 801cb6a:	6818      	ldr	r0, [r3, #0]
 801cb6c:	6859      	ldr	r1, [r3, #4]
 801cb6e:	af04      	add	r7, sp, #16
 801cb70:	c703      	stmia	r7!, {r0, r1}
 801cb72:	a802      	add	r0, sp, #8
 801cb74:	f7f7 fde0 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cb78:	4621      	mov	r1, r4
 801cb7a:	a804      	add	r0, sp, #16
 801cb7c:	f7f7 fe20 	bl	80147c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cb80:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801cb84:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801cb88:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801cb8c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801cb90:	fb14 2103 	smlabb	r1, r4, r3, r2
 801cb94:	eb08 0401 	add.w	r4, r8, r1
 801cb98:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801cb9c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801cba0:	440a      	add	r2, r1
 801cba2:	f8ad 2010 	strh.w	r2, [sp, #16]
 801cba6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801cbaa:	4413      	add	r3, r2
 801cbac:	f8ad 3012 	strh.w	r3, [sp, #18]
 801cbb0:	4b4a      	ldr	r3, [pc, #296]	; (801ccdc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801cbb2:	6818      	ldr	r0, [r3, #0]
 801cbb4:	6803      	ldr	r3, [r0, #0]
 801cbb6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cbb8:	4798      	blx	r3
 801cbba:	4b49      	ldr	r3, [pc, #292]	; (801cce0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801cbbc:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801cbc0:	881a      	ldrh	r2, [r3, #0]
 801cbc2:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801cbc6:	2eff      	cmp	r6, #255	; 0xff
 801cbc8:	fb02 c101 	mla	r1, r2, r1, ip
 801cbcc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801cbd0:	fb02 f207 	mul.w	r2, r2, r7
 801cbd4:	f105 0104 	add.w	r1, r5, #4
 801cbd8:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801cbdc:	461d      	mov	r5, r3
 801cbde:	d05a      	beq.n	801cc96 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801cbe0:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801cbe4:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801cbe8:	b2b6      	uxth	r6, r6
 801cbea:	fa1f fe8e 	uxth.w	lr, lr
 801cbee:	9301      	str	r3, [sp, #4]
 801cbf0:	4282      	cmp	r2, r0
 801cbf2:	d96a      	bls.n	801ccca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801cbf4:	eb00 0b0a 	add.w	fp, r0, sl
 801cbf8:	4583      	cmp	fp, r0
 801cbfa:	d940      	bls.n	801cc7e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801cbfc:	f814 3b01 	ldrb.w	r3, [r4], #1
 801cc00:	8805      	ldrh	r5, [r0, #0]
 801cc02:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801cc06:	122f      	asrs	r7, r5, #8
 801cc08:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801cc0c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cc10:	fb17 f70e 	smulbb	r7, r7, lr
 801cc14:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801cc18:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801cc1c:	00ed      	lsls	r5, r5, #3
 801cc1e:	fb0c 7c06 	mla	ip, ip, r6, r7
 801cc22:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801cc26:	10df      	asrs	r7, r3, #3
 801cc28:	b2ed      	uxtb	r5, r5
 801cc2a:	00db      	lsls	r3, r3, #3
 801cc2c:	fa1f fc8c 	uxth.w	ip, ip
 801cc30:	fb19 f90e 	smulbb	r9, r9, lr
 801cc34:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801cc38:	b2db      	uxtb	r3, r3
 801cc3a:	fb15 f50e 	smulbb	r5, r5, lr
 801cc3e:	fb07 9706 	mla	r7, r7, r6, r9
 801cc42:	fb03 5306 	mla	r3, r3, r6, r5
 801cc46:	f10c 0901 	add.w	r9, ip, #1
 801cc4a:	b29b      	uxth	r3, r3
 801cc4c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801cc50:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801cc54:	f103 0c01 	add.w	ip, r3, #1
 801cc58:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801cc5c:	b2bf      	uxth	r7, r7
 801cc5e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801cc62:	ea4c 0c09 	orr.w	ip, ip, r9
 801cc66:	f107 0901 	add.w	r9, r7, #1
 801cc6a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801cc6e:	097f      	lsrs	r7, r7, #5
 801cc70:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cc74:	ea4c 0c07 	orr.w	ip, ip, r7
 801cc78:	f820 cb02 	strh.w	ip, [r0], #2
 801cc7c:	e7bc      	b.n	801cbf8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801cc7e:	9b01      	ldr	r3, [sp, #4]
 801cc80:	881b      	ldrh	r3, [r3, #0]
 801cc82:	eba3 0308 	sub.w	r3, r3, r8
 801cc86:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cc8a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801cc8e:	eba3 0308 	sub.w	r3, r3, r8
 801cc92:	441c      	add	r4, r3
 801cc94:	e7ac      	b.n	801cbf0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801cc96:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801cc9a:	4282      	cmp	r2, r0
 801cc9c:	d915      	bls.n	801ccca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801cc9e:	eb00 060a 	add.w	r6, r0, sl
 801cca2:	4286      	cmp	r6, r0
 801cca4:	d906      	bls.n	801ccb4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801cca6:	f814 3b01 	ldrb.w	r3, [r4], #1
 801ccaa:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801ccae:	f820 3b02 	strh.w	r3, [r0], #2
 801ccb2:	e7f6      	b.n	801cca2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801ccb4:	882b      	ldrh	r3, [r5, #0]
 801ccb6:	eba3 0308 	sub.w	r3, r3, r8
 801ccba:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ccbe:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801ccc2:	eba3 0308 	sub.w	r3, r3, r8
 801ccc6:	441c      	add	r4, r3
 801ccc8:	e7e7      	b.n	801cc9a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801ccca:	4b04      	ldr	r3, [pc, #16]	; (801ccdc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801cccc:	6818      	ldr	r0, [r3, #0]
 801ccce:	6803      	ldr	r3, [r0, #0]
 801ccd0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ccd2:	4798      	blx	r3
 801ccd4:	b007      	add	sp, #28
 801ccd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ccda:	bf00      	nop
 801ccdc:	200137bc 	.word	0x200137bc
 801cce0:	200137b6 	.word	0x200137b6

0801cce4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801cce4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cce8:	b091      	sub	sp, #68	; 0x44
 801ccea:	4680      	mov	r8, r0
 801ccec:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801ccf0:	460f      	mov	r7, r1
 801ccf2:	4614      	mov	r4, r2
 801ccf4:	2d00      	cmp	r5, #0
 801ccf6:	d051      	beq.n	801cd9c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801ccf8:	6810      	ldr	r0, [r2, #0]
 801ccfa:	6851      	ldr	r1, [r2, #4]
 801ccfc:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801cf00 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801cd00:	ae0c      	add	r6, sp, #48	; 0x30
 801cd02:	c603      	stmia	r6!, {r0, r1}
 801cd04:	6818      	ldr	r0, [r3, #0]
 801cd06:	6859      	ldr	r1, [r3, #4]
 801cd08:	ae0e      	add	r6, sp, #56	; 0x38
 801cd0a:	c603      	stmia	r6!, {r0, r1}
 801cd0c:	a80c      	add	r0, sp, #48	; 0x30
 801cd0e:	f7f7 fd13 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cd12:	4621      	mov	r1, r4
 801cd14:	a80e      	add	r0, sp, #56	; 0x38
 801cd16:	f7f7 fd53 	bl	80147c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cd1a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801cd1e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801cd22:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801cd26:	f8d9 0000 	ldr.w	r0, [r9]
 801cd2a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801cd2e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801cd32:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cd36:	eb08 0401 	add.w	r4, r8, r1
 801cd3a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801cd3e:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801cf04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801cd42:	440a      	add	r2, r1
 801cd44:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801cd48:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801cd4c:	4413      	add	r3, r2
 801cd4e:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801cd52:	6803      	ldr	r3, [r0, #0]
 801cd54:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cd56:	4798      	blx	r3
 801cd58:	f010 0f80 	tst.w	r0, #128	; 0x80
 801cd5c:	f8d9 0000 	ldr.w	r0, [r9]
 801cd60:	d01f      	beq.n	801cda2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801cd62:	2200      	movs	r2, #0
 801cd64:	6801      	ldr	r1, [r0, #0]
 801cd66:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801cd6a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801cd6e:	220b      	movs	r2, #11
 801cd70:	9207      	str	r2, [sp, #28]
 801cd72:	f8b8 2000 	ldrh.w	r2, [r8]
 801cd76:	9206      	str	r2, [sp, #24]
 801cd78:	2201      	movs	r2, #1
 801cd7a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801cd7e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801cd82:	9203      	str	r2, [sp, #12]
 801cd84:	fa1f f28a 	uxth.w	r2, sl
 801cd88:	9202      	str	r2, [sp, #8]
 801cd8a:	b2b6      	uxth	r6, r6
 801cd8c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801cd90:	9200      	str	r2, [sp, #0]
 801cd92:	9601      	str	r6, [sp, #4]
 801cd94:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801cd96:	463a      	mov	r2, r7
 801cd98:	4621      	mov	r1, r4
 801cd9a:	47a8      	blx	r5
 801cd9c:	b011      	add	sp, #68	; 0x44
 801cd9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cda2:	6803      	ldr	r3, [r0, #0]
 801cda4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cda6:	4798      	blx	r3
 801cda8:	f8b8 2000 	ldrh.w	r2, [r8]
 801cdac:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801cdb0:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801cdb4:	2dff      	cmp	r5, #255	; 0xff
 801cdb6:	fb02 1303 	mla	r3, r2, r3, r1
 801cdba:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cdbe:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801cdc2:	fb0a fa02 	mul.w	sl, sl, r2
 801cdc6:	d062      	beq.n	801ce8e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801cdc8:	ea6f 0c05 	mvn.w	ip, r5
 801cdcc:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801cdd0:	930a      	str	r3, [sp, #40]	; 0x28
 801cdd2:	b2ad      	uxth	r5, r5
 801cdd4:	fa5f fc8c 	uxtb.w	ip, ip
 801cdd8:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801cddc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cdde:	4298      	cmp	r0, r3
 801cde0:	f080 8085 	bcs.w	801ceee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801cde4:	eb00 0b09 	add.w	fp, r0, r9
 801cde8:	4558      	cmp	r0, fp
 801cdea:	d246      	bcs.n	801ce7a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801cdec:	f814 eb01 	ldrb.w	lr, [r4], #1
 801cdf0:	2303      	movs	r3, #3
 801cdf2:	2204      	movs	r2, #4
 801cdf4:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801cdf8:	eb07 0a0e 	add.w	sl, r7, lr
 801cdfc:	8803      	ldrh	r3, [r0, #0]
 801cdfe:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801ce02:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ce06:	1219      	asrs	r1, r3, #8
 801ce08:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ce0c:	fb18 f805 	smulbb	r8, r8, r5
 801ce10:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801ce14:	10da      	asrs	r2, r3, #3
 801ce16:	fb01 810c 	mla	r1, r1, ip, r8
 801ce1a:	00db      	lsls	r3, r3, #3
 801ce1c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801ce20:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ce24:	b2db      	uxtb	r3, r3
 801ce26:	fb18 f805 	smulbb	r8, r8, r5
 801ce2a:	fb1e fe05 	smulbb	lr, lr, r5
 801ce2e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801ce32:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801ce36:	b289      	uxth	r1, r1
 801ce38:	fb02 820c 	mla	r2, r2, ip, r8
 801ce3c:	fb03 e30c 	mla	r3, r3, ip, lr
 801ce40:	b292      	uxth	r2, r2
 801ce42:	b29b      	uxth	r3, r3
 801ce44:	f101 0801 	add.w	r8, r1, #1
 801ce48:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801ce4c:	f103 0e01 	add.w	lr, r3, #1
 801ce50:	f102 0801 	add.w	r8, r2, #1
 801ce54:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801ce58:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801ce5c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801ce60:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801ce64:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801ce68:	ea4e 0101 	orr.w	r1, lr, r1
 801ce6c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ce70:	ea41 0108 	orr.w	r1, r1, r8
 801ce74:	f820 1b02 	strh.w	r1, [r0], #2
 801ce78:	e7b6      	b.n	801cde8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801ce7a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ce7c:	881b      	ldrh	r3, [r3, #0]
 801ce7e:	1b9b      	subs	r3, r3, r6
 801ce80:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ce84:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801ce88:	1b9b      	subs	r3, r3, r6
 801ce8a:	441c      	add	r4, r3
 801ce8c:	e7a6      	b.n	801cddc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801ce8e:	491b      	ldr	r1, [pc, #108]	; (801cefc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801ce90:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801ce94:	2203      	movs	r2, #3
 801ce96:	2504      	movs	r5, #4
 801ce98:	4550      	cmp	r0, sl
 801ce9a:	d228      	bcs.n	801ceee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801ce9c:	eb00 0c09 	add.w	ip, r0, r9
 801cea0:	4560      	cmp	r0, ip
 801cea2:	4623      	mov	r3, r4
 801cea4:	d219      	bcs.n	801ceda <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801cea6:	f893 e000 	ldrb.w	lr, [r3]
 801ceaa:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801ceae:	eb07 0b0e 	add.w	fp, r7, lr
 801ceb2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ceb6:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801ceba:	f89b b001 	ldrb.w	fp, [fp, #1]
 801cebe:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801cec2:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801cec6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801ceca:	ea43 030b 	orr.w	r3, r3, fp
 801cece:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801ced2:	3401      	adds	r4, #1
 801ced4:	f820 3b02 	strh.w	r3, [r0], #2
 801ced8:	e7e2      	b.n	801cea0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801ceda:	f8b8 3000 	ldrh.w	r3, [r8]
 801cede:	1b9b      	subs	r3, r3, r6
 801cee0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cee4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801cee8:	1b9b      	subs	r3, r3, r6
 801ceea:	441c      	add	r4, r3
 801ceec:	e7d4      	b.n	801ce98 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801ceee:	4b04      	ldr	r3, [pc, #16]	; (801cf00 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801cef0:	6818      	ldr	r0, [r3, #0]
 801cef2:	6803      	ldr	r3, [r0, #0]
 801cef4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cef6:	4798      	blx	r3
 801cef8:	e750      	b.n	801cd9c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801cefa:	bf00      	nop
 801cefc:	fffff800 	.word	0xfffff800
 801cf00:	200137bc 	.word	0x200137bc
 801cf04:	200137b6 	.word	0x200137b6

0801cf08 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801cf08:	b4f0      	push	{r4, r5, r6, r7}
 801cf0a:	460c      	mov	r4, r1
 801cf0c:	4611      	mov	r1, r2
 801cf0e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801cf12:	780f      	ldrb	r7, [r1, #0]
 801cf14:	784e      	ldrb	r6, [r1, #1]
 801cf16:	2f01      	cmp	r7, #1
 801cf18:	461a      	mov	r2, r3
 801cf1a:	9b04      	ldr	r3, [sp, #16]
 801cf1c:	d036      	beq.n	801cf8c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801cf1e:	d31e      	bcc.n	801cf5e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801cf20:	2f02      	cmp	r7, #2
 801cf22:	d14a      	bne.n	801cfba <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801cf24:	2e03      	cmp	r6, #3
 801cf26:	d848      	bhi.n	801cfba <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801cf28:	e8df f006 	tbb	[pc, r6]
 801cf2c:	16140702 	.word	0x16140702
 801cf30:	9504      	str	r5, [sp, #16]
 801cf32:	4620      	mov	r0, r4
 801cf34:	bcf0      	pop	{r4, r5, r6, r7}
 801cf36:	f7ff be09 	b.w	801cb4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801cf3a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801cf3c:	2800      	cmp	r0, #0
 801cf3e:	d03c      	beq.n	801cfba <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801cf40:	6806      	ldr	r6, [r0, #0]
 801cf42:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801cf46:	68b5      	ldr	r5, [r6, #8]
 801cf48:	4613      	mov	r3, r2
 801cf4a:	46ac      	mov	ip, r5
 801cf4c:	460a      	mov	r2, r1
 801cf4e:	4621      	mov	r1, r4
 801cf50:	bcf0      	pop	{r4, r5, r6, r7}
 801cf52:	4760      	bx	ip
 801cf54:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801cf56:	e7f1      	b.n	801cf3c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801cf58:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801cf5c:	e7ee      	b.n	801cf3c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801cf5e:	2e03      	cmp	r6, #3
 801cf60:	d82b      	bhi.n	801cfba <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801cf62:	e8df f006 	tbb	[pc, r6]
 801cf66:	0702      	.short	0x0702
 801cf68:	100e      	.short	0x100e
 801cf6a:	9504      	str	r5, [sp, #16]
 801cf6c:	4620      	mov	r0, r4
 801cf6e:	bcf0      	pop	{r4, r5, r6, r7}
 801cf70:	f7ff bd06 	b.w	801c980 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801cf74:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801cf76:	b300      	cbz	r0, 801cfba <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801cf78:	6806      	ldr	r6, [r0, #0]
 801cf7a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801cf7e:	68f5      	ldr	r5, [r6, #12]
 801cf80:	e7e2      	b.n	801cf48 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801cf82:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801cf84:	e7f7      	b.n	801cf76 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801cf86:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801cf8a:	e7f4      	b.n	801cf76 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801cf8c:	2e03      	cmp	r6, #3
 801cf8e:	d814      	bhi.n	801cfba <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801cf90:	e8df f006 	tbb	[pc, r6]
 801cf94:	100e0702 	.word	0x100e0702
 801cf98:	9504      	str	r5, [sp, #16]
 801cf9a:	4620      	mov	r0, r4
 801cf9c:	bcf0      	pop	{r4, r5, r6, r7}
 801cf9e:	f7ff bea1 	b.w	801cce4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801cfa2:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801cfa4:	b148      	cbz	r0, 801cfba <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801cfa6:	6806      	ldr	r6, [r0, #0]
 801cfa8:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801cfac:	6935      	ldr	r5, [r6, #16]
 801cfae:	e7cb      	b.n	801cf48 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801cfb0:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801cfb2:	e7f7      	b.n	801cfa4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801cfb4:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801cfb8:	e7f4      	b.n	801cfa4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801cfba:	bcf0      	pop	{r4, r5, r6, r7}
 801cfbc:	4770      	bx	lr
	...

0801cfc0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801cfc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cfc4:	4604      	mov	r4, r0
 801cfc6:	b087      	sub	sp, #28
 801cfc8:	6810      	ldr	r0, [r2, #0]
 801cfca:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801cfce:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801d208 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801cfd2:	460e      	mov	r6, r1
 801cfd4:	6851      	ldr	r1, [r2, #4]
 801cfd6:	ad02      	add	r5, sp, #8
 801cfd8:	c503      	stmia	r5!, {r0, r1}
 801cfda:	6818      	ldr	r0, [r3, #0]
 801cfdc:	6859      	ldr	r1, [r3, #4]
 801cfde:	ad04      	add	r5, sp, #16
 801cfe0:	4617      	mov	r7, r2
 801cfe2:	c503      	stmia	r5!, {r0, r1}
 801cfe4:	a802      	add	r0, sp, #8
 801cfe6:	f7f7 fba7 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cfea:	4639      	mov	r1, r7
 801cfec:	a804      	add	r0, sp, #16
 801cfee:	f7f7 fbe7 	bl	80147c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cff2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801cff6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801cffa:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801cffe:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d002:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801d006:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d00a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801d00e:	440e      	add	r6, r1
 801d010:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d014:	440a      	add	r2, r1
 801d016:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d01a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d01e:	4413      	add	r3, r2
 801d020:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d024:	4b77      	ldr	r3, [pc, #476]	; (801d204 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d026:	6818      	ldr	r0, [r3, #0]
 801d028:	6803      	ldr	r3, [r0, #0]
 801d02a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d02c:	4798      	blx	r3
 801d02e:	f8b9 b000 	ldrh.w	fp, [r9]
 801d032:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d036:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d03a:	fb0b 2303 	mla	r3, fp, r3, r2
 801d03e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d042:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d046:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d04a:	fb05 f50b 	mul.w	r5, r5, fp
 801d04e:	9300      	str	r3, [sp, #0]
 801d050:	d069      	beq.n	801d126 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801d052:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801d056:	4558      	cmp	r0, fp
 801d058:	f080 80cc 	bcs.w	801d1f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d05c:	9b00      	ldr	r3, [sp, #0]
 801d05e:	18c3      	adds	r3, r0, r3
 801d060:	9301      	str	r3, [sp, #4]
 801d062:	4631      	mov	r1, r6
 801d064:	9b01      	ldr	r3, [sp, #4]
 801d066:	4298      	cmp	r0, r3
 801d068:	d24f      	bcs.n	801d10a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801d06a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801d06e:	2a00      	cmp	r2, #0
 801d070:	d048      	beq.n	801d104 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d072:	fb0a f202 	mul.w	r2, sl, r2
 801d076:	1c53      	adds	r3, r2, #1
 801d078:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d07c:	121b      	asrs	r3, r3, #8
 801d07e:	d041      	beq.n	801d104 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d080:	8802      	ldrh	r2, [r0, #0]
 801d082:	f8b4 c000 	ldrh.w	ip, [r4]
 801d086:	b29e      	uxth	r6, r3
 801d088:	1215      	asrs	r5, r2, #8
 801d08a:	43db      	mvns	r3, r3
 801d08c:	b2db      	uxtb	r3, r3
 801d08e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d092:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d096:	fb15 f503 	smulbb	r5, r5, r3
 801d09a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801d09e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d0a2:	00d2      	lsls	r2, r2, #3
 801d0a4:	fb07 5706 	mla	r7, r7, r6, r5
 801d0a8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d0ac:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d0b0:	b2d2      	uxtb	r2, r2
 801d0b2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d0b6:	b2bf      	uxth	r7, r7
 801d0b8:	fb1e fe03 	smulbb	lr, lr, r3
 801d0bc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d0c0:	fa5f fc8c 	uxtb.w	ip, ip
 801d0c4:	fb12 f203 	smulbb	r2, r2, r3
 801d0c8:	fb05 e506 	mla	r5, r5, r6, lr
 801d0cc:	fb0c 2c06 	mla	ip, ip, r6, r2
 801d0d0:	f107 0e01 	add.w	lr, r7, #1
 801d0d4:	fa1f fc8c 	uxth.w	ip, ip
 801d0d8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801d0dc:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801d0e0:	f10c 0701 	add.w	r7, ip, #1
 801d0e4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d0e8:	b2ad      	uxth	r5, r5
 801d0ea:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d0ee:	ea47 070e 	orr.w	r7, r7, lr
 801d0f2:	f105 0e01 	add.w	lr, r5, #1
 801d0f6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d0fa:	096d      	lsrs	r5, r5, #5
 801d0fc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d100:	432f      	orrs	r7, r5
 801d102:	8007      	strh	r7, [r0, #0]
 801d104:	3002      	adds	r0, #2
 801d106:	3402      	adds	r4, #2
 801d108:	e7ac      	b.n	801d064 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801d10a:	f8b9 3000 	ldrh.w	r3, [r9]
 801d10e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d112:	eba3 0308 	sub.w	r3, r3, r8
 801d116:	eba6 0608 	sub.w	r6, r6, r8
 801d11a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d11e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d122:	440e      	add	r6, r1
 801d124:	e797      	b.n	801d056 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801d126:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801d12a:	42a8      	cmp	r0, r5
 801d12c:	d262      	bcs.n	801d1f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d12e:	9b00      	ldr	r3, [sp, #0]
 801d130:	4631      	mov	r1, r6
 801d132:	eb00 0b03 	add.w	fp, r0, r3
 801d136:	4558      	cmp	r0, fp
 801d138:	d24e      	bcs.n	801d1d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801d13a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801d13e:	b12b      	cbz	r3, 801d14c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d140:	2bff      	cmp	r3, #255	; 0xff
 801d142:	f8b4 e000 	ldrh.w	lr, [r4]
 801d146:	d104      	bne.n	801d152 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801d148:	f8a0 e000 	strh.w	lr, [r0]
 801d14c:	3002      	adds	r0, #2
 801d14e:	3402      	adds	r4, #2
 801d150:	e7f1      	b.n	801d136 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801d152:	8802      	ldrh	r2, [r0, #0]
 801d154:	b29f      	uxth	r7, r3
 801d156:	1216      	asrs	r6, r2, #8
 801d158:	43db      	mvns	r3, r3
 801d15a:	b2db      	uxtb	r3, r3
 801d15c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d160:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d164:	fb16 f603 	smulbb	r6, r6, r3
 801d168:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801d16c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d170:	00d2      	lsls	r2, r2, #3
 801d172:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d176:	b2d2      	uxtb	r2, r2
 801d178:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d17c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d180:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d184:	fb1a fa03 	smulbb	sl, sl, r3
 801d188:	fa1f fc8c 	uxth.w	ip, ip
 801d18c:	fb12 f303 	smulbb	r3, r2, r3
 801d190:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d194:	fa5f fe8e 	uxtb.w	lr, lr
 801d198:	fb06 a607 	mla	r6, r6, r7, sl
 801d19c:	f10c 0201 	add.w	r2, ip, #1
 801d1a0:	fb0e 3307 	mla	r3, lr, r7, r3
 801d1a4:	b2b6      	uxth	r6, r6
 801d1a6:	b29b      	uxth	r3, r3
 801d1a8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801d1ac:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801d1b0:	f106 0a01 	add.w	sl, r6, #1
 801d1b4:	f103 0c01 	add.w	ip, r3, #1
 801d1b8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d1bc:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d1c0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d1c4:	0976      	lsrs	r6, r6, #5
 801d1c6:	ea4c 0c02 	orr.w	ip, ip, r2
 801d1ca:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d1ce:	ea4c 0c06 	orr.w	ip, ip, r6
 801d1d2:	f8a0 c000 	strh.w	ip, [r0]
 801d1d6:	e7b9      	b.n	801d14c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d1d8:	f8b9 3000 	ldrh.w	r3, [r9]
 801d1dc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d1e0:	eba3 0308 	sub.w	r3, r3, r8
 801d1e4:	eba6 0608 	sub.w	r6, r6, r8
 801d1e8:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d1ec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d1f0:	440e      	add	r6, r1
 801d1f2:	e79a      	b.n	801d12a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801d1f4:	4b03      	ldr	r3, [pc, #12]	; (801d204 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d1f6:	6818      	ldr	r0, [r3, #0]
 801d1f8:	6803      	ldr	r3, [r0, #0]
 801d1fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d1fc:	4798      	blx	r3
 801d1fe:	b007      	add	sp, #28
 801d200:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d204:	200137bc 	.word	0x200137bc
 801d208:	200137b6 	.word	0x200137b6

0801d20c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801d20c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d210:	b089      	sub	sp, #36	; 0x24
 801d212:	4682      	mov	sl, r0
 801d214:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801d218:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d21a:	460f      	mov	r7, r1
 801d21c:	4691      	mov	r9, r2
 801d21e:	4698      	mov	r8, r3
 801d220:	2e00      	cmp	r6, #0
 801d222:	d03d      	beq.n	801d2a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d224:	4608      	mov	r0, r1
 801d226:	f7fa fe59 	bl	8017edc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801d22a:	4605      	mov	r5, r0
 801d22c:	4638      	mov	r0, r7
 801d22e:	f7fa fe89 	bl	8017f44 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801d232:	f8ad 000e 	strh.w	r0, [sp, #14]
 801d236:	4638      	mov	r0, r7
 801d238:	f8ad 9008 	strh.w	r9, [sp, #8]
 801d23c:	f8ad 500c 	strh.w	r5, [sp, #12]
 801d240:	f8ad 800a 	strh.w	r8, [sp, #10]
 801d244:	f7fa ff36 	bl	80180b4 <_ZNK8touchgfx6Bitmap7getDataEv>
 801d248:	4605      	mov	r5, r0
 801d24a:	4638      	mov	r0, r7
 801d24c:	f7fa ff62 	bl	8018114 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801d250:	4681      	mov	r9, r0
 801d252:	4638      	mov	r0, r7
 801d254:	f7fa ffb2 	bl	80181bc <_ZNK8touchgfx6Bitmap9getFormatEv>
 801d258:	280b      	cmp	r0, #11
 801d25a:	d821      	bhi.n	801d2a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d25c:	e8df f000 	tbb	[pc, r0]
 801d260:	2006aebe 	.word	0x2006aebe
 801d264:	20202020 	.word	0x20202020
 801d268:	b5202020 	.word	0xb5202020
 801d26c:	4bb0      	ldr	r3, [pc, #704]	; (801d530 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801d26e:	6818      	ldr	r0, [r3, #0]
 801d270:	6803      	ldr	r3, [r0, #0]
 801d272:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d274:	4798      	blx	r3
 801d276:	2eff      	cmp	r6, #255	; 0xff
 801d278:	d101      	bne.n	801d27e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801d27a:	0683      	lsls	r3, r0, #26
 801d27c:	d506      	bpl.n	801d28c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801d27e:	4633      	mov	r3, r6
 801d280:	4622      	mov	r2, r4
 801d282:	a902      	add	r1, sp, #8
 801d284:	4628      	mov	r0, r5
 801d286:	f7ff f909 	bl	801c49c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d28a:	e009      	b.n	801d2a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d28c:	4638      	mov	r0, r7
 801d28e:	f7fa fed9 	bl	8018044 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d292:	b940      	cbnz	r0, 801d2a6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801d294:	4623      	mov	r3, r4
 801d296:	aa02      	add	r2, sp, #8
 801d298:	4629      	mov	r1, r5
 801d29a:	4650      	mov	r0, sl
 801d29c:	f7ff f9e4 	bl	801c668 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d2a0:	b009      	add	sp, #36	; 0x24
 801d2a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d2a6:	f10d 0818 	add.w	r8, sp, #24
 801d2aa:	4639      	mov	r1, r7
 801d2ac:	4640      	mov	r0, r8
 801d2ae:	f7fa fe7d 	bl	8017fac <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d2b2:	e898 0003 	ldmia.w	r8, {r0, r1}
 801d2b6:	af04      	add	r7, sp, #16
 801d2b8:	e887 0003 	stmia.w	r7, {r0, r1}
 801d2bc:	4638      	mov	r0, r7
 801d2be:	4621      	mov	r1, r4
 801d2c0:	f7f2 fadc 	bl	800f87c <_ZN8touchgfx4RectaNERKS0_>
 801d2c4:	4638      	mov	r0, r7
 801d2c6:	f7f2 fb1c 	bl	800f902 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d2ca:	2800      	cmp	r0, #0
 801d2cc:	d1d7      	bne.n	801d27e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801d2ce:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d2d2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d2d6:	4293      	cmp	r3, r2
 801d2d8:	dd12      	ble.n	801d300 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801d2da:	1a9b      	subs	r3, r3, r2
 801d2dc:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d2e0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d2e4:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d2e8:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d2ec:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d2f0:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d2f4:	4642      	mov	r2, r8
 801d2f6:	4633      	mov	r3, r6
 801d2f8:	a902      	add	r1, sp, #8
 801d2fa:	4628      	mov	r0, r5
 801d2fc:	f7ff f8ce 	bl	801c49c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d300:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d304:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d308:	4293      	cmp	r3, r2
 801d30a:	dd12      	ble.n	801d332 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801d30c:	1a9b      	subs	r3, r3, r2
 801d30e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d312:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d316:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d31a:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d31e:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d322:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d326:	23ff      	movs	r3, #255	; 0xff
 801d328:	4642      	mov	r2, r8
 801d32a:	a902      	add	r1, sp, #8
 801d32c:	4628      	mov	r0, r5
 801d32e:	f7ff f8b5 	bl	801c49c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d332:	463b      	mov	r3, r7
 801d334:	aa02      	add	r2, sp, #8
 801d336:	4629      	mov	r1, r5
 801d338:	4650      	mov	r0, sl
 801d33a:	f7ff f995 	bl	801c668 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d33e:	88a2      	ldrh	r2, [r4, #4]
 801d340:	8823      	ldrh	r3, [r4, #0]
 801d342:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d346:	4413      	add	r3, r2
 801d348:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d34c:	440a      	add	r2, r1
 801d34e:	b29b      	uxth	r3, r3
 801d350:	b292      	uxth	r2, r2
 801d352:	b211      	sxth	r1, r2
 801d354:	b218      	sxth	r0, r3
 801d356:	4288      	cmp	r0, r1
 801d358:	dd12      	ble.n	801d380 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801d35a:	1a9b      	subs	r3, r3, r2
 801d35c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d360:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801d364:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d368:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d36c:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d370:	23ff      	movs	r3, #255	; 0xff
 801d372:	4642      	mov	r2, r8
 801d374:	a902      	add	r1, sp, #8
 801d376:	4628      	mov	r0, r5
 801d378:	f8ad 601a 	strh.w	r6, [sp, #26]
 801d37c:	f7ff f88e 	bl	801c49c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d380:	88e2      	ldrh	r2, [r4, #6]
 801d382:	8863      	ldrh	r3, [r4, #2]
 801d384:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d388:	4413      	add	r3, r2
 801d38a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d38e:	440a      	add	r2, r1
 801d390:	b29b      	uxth	r3, r3
 801d392:	b292      	uxth	r2, r2
 801d394:	b211      	sxth	r1, r2
 801d396:	b218      	sxth	r0, r3
 801d398:	4288      	cmp	r0, r1
 801d39a:	dd81      	ble.n	801d2a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d39c:	1a9b      	subs	r3, r3, r2
 801d39e:	f9b4 6000 	ldrsh.w	r6, [r4]
 801d3a2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d3a6:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d3aa:	f8ad 6018 	strh.w	r6, [sp, #24]
 801d3ae:	f8ad 101a 	strh.w	r1, [sp, #26]
 801d3b2:	f8ad 001c 	strh.w	r0, [sp, #28]
 801d3b6:	23ff      	movs	r3, #255	; 0xff
 801d3b8:	4642      	mov	r2, r8
 801d3ba:	e762      	b.n	801d282 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801d3bc:	4633      	mov	r3, r6
 801d3be:	4622      	mov	r2, r4
 801d3c0:	a902      	add	r1, sp, #8
 801d3c2:	4628      	mov	r0, r5
 801d3c4:	f7ff f9c0 	bl	801c748 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801d3c8:	e76a      	b.n	801d2a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d3ca:	e9cd 4600 	strd	r4, r6, [sp]
 801d3ce:	ab02      	add	r3, sp, #8
 801d3d0:	464a      	mov	r2, r9
 801d3d2:	4629      	mov	r1, r5
 801d3d4:	4650      	mov	r0, sl
 801d3d6:	f7ff fd97 	bl	801cf08 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801d3da:	e761      	b.n	801d2a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d3dc:	4638      	mov	r0, r7
 801d3de:	f7fa fe31 	bl	8018044 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d3e2:	b950      	cbnz	r0, 801d3fa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801d3e4:	e9cd 6000 	strd	r6, r0, [sp]
 801d3e8:	f8da 3000 	ldr.w	r3, [sl]
 801d3ec:	aa02      	add	r2, sp, #8
 801d3ee:	68de      	ldr	r6, [r3, #12]
 801d3f0:	4629      	mov	r1, r5
 801d3f2:	4623      	mov	r3, r4
 801d3f4:	4650      	mov	r0, sl
 801d3f6:	47b0      	blx	r6
 801d3f8:	e752      	b.n	801d2a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d3fa:	f10d 0818 	add.w	r8, sp, #24
 801d3fe:	4639      	mov	r1, r7
 801d400:	4640      	mov	r0, r8
 801d402:	f7fa fdd3 	bl	8017fac <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d406:	e898 0003 	ldmia.w	r8, {r0, r1}
 801d40a:	af04      	add	r7, sp, #16
 801d40c:	e887 0003 	stmia.w	r7, {r0, r1}
 801d410:	4638      	mov	r0, r7
 801d412:	4621      	mov	r1, r4
 801d414:	f7f2 fa32 	bl	800f87c <_ZN8touchgfx4RectaNERKS0_>
 801d418:	4638      	mov	r0, r7
 801d41a:	f7f2 fa72 	bl	800f902 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d41e:	b138      	cbz	r0, 801d430 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801d420:	9600      	str	r6, [sp, #0]
 801d422:	4623      	mov	r3, r4
 801d424:	aa02      	add	r2, sp, #8
 801d426:	4649      	mov	r1, r9
 801d428:	4628      	mov	r0, r5
 801d42a:	f7ff fdc9 	bl	801cfc0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d42e:	e737      	b.n	801d2a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d430:	e9cd 6000 	strd	r6, r0, [sp]
 801d434:	f8da 3000 	ldr.w	r3, [sl]
 801d438:	aa02      	add	r2, sp, #8
 801d43a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801d43e:	4629      	mov	r1, r5
 801d440:	463b      	mov	r3, r7
 801d442:	4650      	mov	r0, sl
 801d444:	47d8      	blx	fp
 801d446:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d44a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d44e:	4293      	cmp	r3, r2
 801d450:	dd13      	ble.n	801d47a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801d452:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d456:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d45a:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d45e:	1a9b      	subs	r3, r3, r2
 801d460:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d464:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d468:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d46c:	9600      	str	r6, [sp, #0]
 801d46e:	4643      	mov	r3, r8
 801d470:	aa02      	add	r2, sp, #8
 801d472:	4649      	mov	r1, r9
 801d474:	4628      	mov	r0, r5
 801d476:	f7ff fda3 	bl	801cfc0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d47a:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d47e:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d482:	4293      	cmp	r3, r2
 801d484:	dd13      	ble.n	801d4ae <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801d486:	1a9b      	subs	r3, r3, r2
 801d488:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d48c:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d490:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d494:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d498:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d49c:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d4a0:	9600      	str	r6, [sp, #0]
 801d4a2:	4643      	mov	r3, r8
 801d4a4:	aa02      	add	r2, sp, #8
 801d4a6:	4649      	mov	r1, r9
 801d4a8:	4628      	mov	r0, r5
 801d4aa:	f7ff fd89 	bl	801cfc0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d4ae:	88a2      	ldrh	r2, [r4, #4]
 801d4b0:	8823      	ldrh	r3, [r4, #0]
 801d4b2:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d4b6:	4413      	add	r3, r2
 801d4b8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d4bc:	440a      	add	r2, r1
 801d4be:	b29b      	uxth	r3, r3
 801d4c0:	b292      	uxth	r2, r2
 801d4c2:	b211      	sxth	r1, r2
 801d4c4:	b218      	sxth	r0, r3
 801d4c6:	4288      	cmp	r0, r1
 801d4c8:	dd13      	ble.n	801d4f2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801d4ca:	1a9b      	subs	r3, r3, r2
 801d4cc:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d4d0:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801d4d4:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d4d8:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d4dc:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d4e0:	9600      	str	r6, [sp, #0]
 801d4e2:	4643      	mov	r3, r8
 801d4e4:	aa02      	add	r2, sp, #8
 801d4e6:	4649      	mov	r1, r9
 801d4e8:	4628      	mov	r0, r5
 801d4ea:	f8ad 701a 	strh.w	r7, [sp, #26]
 801d4ee:	f7ff fd67 	bl	801cfc0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d4f2:	88e2      	ldrh	r2, [r4, #6]
 801d4f4:	8863      	ldrh	r3, [r4, #2]
 801d4f6:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d4fa:	4413      	add	r3, r2
 801d4fc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d500:	440a      	add	r2, r1
 801d502:	b29b      	uxth	r3, r3
 801d504:	b292      	uxth	r2, r2
 801d506:	b211      	sxth	r1, r2
 801d508:	b218      	sxth	r0, r3
 801d50a:	4288      	cmp	r0, r1
 801d50c:	f77f aec8 	ble.w	801d2a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d510:	f9b4 7000 	ldrsh.w	r7, [r4]
 801d514:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d518:	f8ad 7018 	strh.w	r7, [sp, #24]
 801d51c:	1a9b      	subs	r3, r3, r2
 801d51e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d522:	f8ad 101a 	strh.w	r1, [sp, #26]
 801d526:	f8ad 001c 	strh.w	r0, [sp, #28]
 801d52a:	9600      	str	r6, [sp, #0]
 801d52c:	4643      	mov	r3, r8
 801d52e:	e779      	b.n	801d424 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801d530:	200137bc 	.word	0x200137bc

0801d534 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801d534:	b180      	cbz	r0, 801d558 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801d536:	2903      	cmp	r1, #3
 801d538:	d81c      	bhi.n	801d574 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801d53a:	e8df f001 	tbb	[pc, r1]
 801d53e:	1d02      	.short	0x1d02
 801d540:	1f08      	.short	0x1f08
 801d542:	4b10      	ldr	r3, [pc, #64]	; (801d584 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801d544:	8818      	ldrh	r0, [r3, #0]
 801d546:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d54a:	4240      	negs	r0, r0
 801d54c:	4770      	bx	lr
 801d54e:	4b0d      	ldr	r3, [pc, #52]	; (801d584 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801d550:	8818      	ldrh	r0, [r3, #0]
 801d552:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d556:	4770      	bx	lr
 801d558:	2903      	cmp	r1, #3
 801d55a:	d80b      	bhi.n	801d574 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801d55c:	a301      	add	r3, pc, #4	; (adr r3, 801d564 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801d55e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801d562:	bf00      	nop
 801d564:	0801d579 	.word	0x0801d579
 801d568:	0801d54f 	.word	0x0801d54f
 801d56c:	0801d57d 	.word	0x0801d57d
 801d570:	0801d543 	.word	0x0801d543
 801d574:	2000      	movs	r0, #0
 801d576:	4770      	bx	lr
 801d578:	2001      	movs	r0, #1
 801d57a:	4770      	bx	lr
 801d57c:	f04f 30ff 	mov.w	r0, #4294967295
 801d580:	4770      	bx	lr
 801d582:	bf00      	nop
 801d584:	200137b6 	.word	0x200137b6

0801d588 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801d588:	b180      	cbz	r0, 801d5ac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801d58a:	2903      	cmp	r1, #3
 801d58c:	d81c      	bhi.n	801d5c8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801d58e:	e8df f001 	tbb	[pc, r1]
 801d592:	021d      	.short	0x021d
 801d594:	071f      	.short	0x071f
 801d596:	4b10      	ldr	r3, [pc, #64]	; (801d5d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801d598:	8818      	ldrh	r0, [r3, #0]
 801d59a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d59e:	4770      	bx	lr
 801d5a0:	4b0d      	ldr	r3, [pc, #52]	; (801d5d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801d5a2:	8818      	ldrh	r0, [r3, #0]
 801d5a4:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d5a8:	4240      	negs	r0, r0
 801d5aa:	4770      	bx	lr
 801d5ac:	2903      	cmp	r1, #3
 801d5ae:	d80b      	bhi.n	801d5c8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801d5b0:	a301      	add	r3, pc, #4	; (adr r3, 801d5b8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801d5b2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801d5b6:	bf00      	nop
 801d5b8:	0801d597 	.word	0x0801d597
 801d5bc:	0801d5d1 	.word	0x0801d5d1
 801d5c0:	0801d5a1 	.word	0x0801d5a1
 801d5c4:	0801d5cd 	.word	0x0801d5cd
 801d5c8:	2000      	movs	r0, #0
 801d5ca:	4770      	bx	lr
 801d5cc:	2001      	movs	r0, #1
 801d5ce:	4770      	bx	lr
 801d5d0:	f04f 30ff 	mov.w	r0, #4294967295
 801d5d4:	4770      	bx	lr
 801d5d6:	bf00      	nop
 801d5d8:	200137b6 	.word	0x200137b6

0801d5dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801d5dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d5e0:	b099      	sub	sp, #100	; 0x64
 801d5e2:	910b      	str	r1, [sp, #44]	; 0x2c
 801d5e4:	a914      	add	r1, sp, #80	; 0x50
 801d5e6:	e881 000c 	stmia.w	r1, {r2, r3}
 801d5ea:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801d5ee:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801d5f2:	f891 900d 	ldrb.w	r9, [r1, #13]
 801d5f6:	9309      	str	r3, [sp, #36]	; 0x24
 801d5f8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801d5fc:	9310      	str	r3, [sp, #64]	; 0x40
 801d5fe:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801d602:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801d606:	930c      	str	r3, [sp, #48]	; 0x30
 801d608:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801d60c:	798f      	ldrb	r7, [r1, #6]
 801d60e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801d612:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801d616:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801d61a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801d61e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801d622:	431f      	orrs	r7, r3
 801d624:	f000 8195 	beq.w	801d952 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d628:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801d62c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801d630:	f891 9007 	ldrb.w	r9, [r1, #7]
 801d634:	ea59 0903 	orrs.w	r9, r9, r3
 801d638:	f000 818b 	beq.w	801d952 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d63c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801d640:	b29b      	uxth	r3, r3
 801d642:	2d00      	cmp	r5, #0
 801d644:	f000 812e 	beq.w	801d8a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801d648:	1aed      	subs	r5, r5, r3
 801d64a:	b2ad      	uxth	r5, r5
 801d64c:	042b      	lsls	r3, r5, #16
 801d64e:	d502      	bpl.n	801d656 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801d650:	1b64      	subs	r4, r4, r5
 801d652:	b224      	sxth	r4, r4
 801d654:	2500      	movs	r5, #0
 801d656:	f9b2 1000 	ldrsh.w	r1, [r2]
 801d65a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801d65e:	428c      	cmp	r4, r1
 801d660:	b28b      	uxth	r3, r1
 801d662:	bfbf      	itttt	lt
 801d664:	18ed      	addlt	r5, r5, r3
 801d666:	1b2c      	sublt	r4, r5, r4
 801d668:	b2a5      	uxthlt	r5, r4
 801d66a:	460c      	movlt	r4, r1
 801d66c:	8891      	ldrh	r1, [r2, #4]
 801d66e:	440b      	add	r3, r1
 801d670:	b21b      	sxth	r3, r3
 801d672:	930f      	str	r3, [sp, #60]	; 0x3c
 801d674:	88d3      	ldrh	r3, [r2, #6]
 801d676:	8852      	ldrh	r2, [r2, #2]
 801d678:	4413      	add	r3, r2
 801d67a:	b21b      	sxth	r3, r3
 801d67c:	930d      	str	r3, [sp, #52]	; 0x34
 801d67e:	4bbe      	ldr	r3, [pc, #760]	; (801d978 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801d680:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d682:	f893 b000 	ldrb.w	fp, [r3]
 801d686:	f10b 3cff 	add.w	ip, fp, #4294967295
 801d68a:	f1dc 0300 	rsbs	r3, ip, #0
 801d68e:	eb43 030c 	adc.w	r3, r3, ip
 801d692:	930e      	str	r3, [sp, #56]	; 0x38
 801d694:	4621      	mov	r1, r4
 801d696:	4653      	mov	r3, sl
 801d698:	a814      	add	r0, sp, #80	; 0x50
 801d69a:	f7f6 fec2 	bl	8014422 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801d69e:	4621      	mov	r1, r4
 801d6a0:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801d6a4:	4653      	mov	r3, sl
 801d6a6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d6a8:	a814      	add	r0, sp, #80	; 0x50
 801d6aa:	f7f6 fed7 	bl	801445c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801d6ae:	a918      	add	r1, sp, #96	; 0x60
 801d6b0:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801d6b4:	a817      	add	r0, sp, #92	; 0x5c
 801d6b6:	f7f6 fffd 	bl	80146b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801d6ba:	f1ba 0f00 	cmp.w	sl, #0
 801d6be:	f040 80f4 	bne.w	801d8aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801d6c2:	f1bb 0f01 	cmp.w	fp, #1
 801d6c6:	f040 80f8 	bne.w	801d8ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801d6ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d6cc:	2b00      	cmp	r3, #0
 801d6ce:	f040 8145 	bne.w	801d95c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801d6d2:	b2ba      	uxth	r2, r7
 801d6d4:	b905      	cbnz	r5, 801d6d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801d6d6:	b16e      	cbz	r6, 801d6f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801d6d8:	fb06 5302 	mla	r3, r6, r2, r5
 801d6dc:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801d6de:	fb08 f303 	mul.w	r3, r8, r3
 801d6e2:	4631      	mov	r1, r6
 801d6e4:	f003 0607 	and.w	r6, r3, #7
 801d6e8:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801d6ec:	9328      	str	r3, [sp, #160]	; 0xa0
 801d6ee:	eba9 0301 	sub.w	r3, r9, r1
 801d6f2:	930a      	str	r3, [sp, #40]	; 0x28
 801d6f4:	4651      	mov	r1, sl
 801d6f6:	980e      	ldr	r0, [sp, #56]	; 0x38
 801d6f8:	f7ff ff1c 	bl	801d534 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801d6fc:	4681      	mov	r9, r0
 801d6fe:	980e      	ldr	r0, [sp, #56]	; 0x38
 801d700:	f7ff ff42 	bl	801d588 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801d704:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d706:	9909      	ldr	r1, [sp, #36]	; 0x24
 801d708:	eba3 0a01 	sub.w	sl, r3, r1
 801d70c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d70e:	459a      	cmp	sl, r3
 801d710:	bfa8      	it	ge
 801d712:	469a      	movge	sl, r3
 801d714:	f1ba 0f00 	cmp.w	sl, #0
 801d718:	4683      	mov	fp, r0
 801d71a:	f340 811a 	ble.w	801d952 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d71e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d720:	1b64      	subs	r4, r4, r5
 801d722:	1b1c      	subs	r4, r3, r4
 801d724:	42bc      	cmp	r4, r7
 801d726:	bfd4      	ite	le
 801d728:	ebc5 0504 	rsble	r5, r5, r4
 801d72c:	ebc5 0507 	rsbgt	r5, r5, r7
 801d730:	2d00      	cmp	r5, #0
 801d732:	f340 810e 	ble.w	801d952 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d736:	1b52      	subs	r2, r2, r5
 801d738:	fb08 f302 	mul.w	r3, r8, r2
 801d73c:	930f      	str	r3, [sp, #60]	; 0x3c
 801d73e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d740:	2b00      	cmp	r3, #0
 801d742:	f040 8116 	bne.w	801d972 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801d746:	4b8d      	ldr	r3, [pc, #564]	; (801d97c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801d748:	6818      	ldr	r0, [r3, #0]
 801d74a:	6803      	ldr	r3, [r0, #0]
 801d74c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d74e:	4798      	blx	r3
 801d750:	2301      	movs	r3, #1
 801d752:	fa03 f308 	lsl.w	r3, r3, r8
 801d756:	4a8a      	ldr	r2, [pc, #552]	; (801d980 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801d758:	3b01      	subs	r3, #1
 801d75a:	b2db      	uxtb	r3, r3
 801d75c:	8811      	ldrh	r1, [r2, #0]
 801d75e:	930e      	str	r3, [sp, #56]	; 0x38
 801d760:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801d764:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801d768:	fb01 2303 	mla	r3, r1, r3, r2
 801d76c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d770:	930a      	str	r3, [sp, #40]	; 0x28
 801d772:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d774:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801d778:	9313      	str	r3, [sp, #76]	; 0x4c
 801d77a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d77c:	0a19      	lsrs	r1, r3, #8
 801d77e:	b2cb      	uxtb	r3, r1
 801d780:	9312      	str	r3, [sp, #72]	; 0x48
 801d782:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d784:	b2db      	uxtb	r3, r3
 801d786:	9311      	str	r3, [sp, #68]	; 0x44
 801d788:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d78a:	095a      	lsrs	r2, r3, #5
 801d78c:	4b7d      	ldr	r3, [pc, #500]	; (801d984 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801d78e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d792:	400b      	ands	r3, r1
 801d794:	4313      	orrs	r3, r2
 801d796:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801d798:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d79c:	4313      	orrs	r3, r2
 801d79e:	b29b      	uxth	r3, r3
 801d7a0:	9310      	str	r3, [sp, #64]	; 0x40
 801d7a2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d7a4:	781a      	ldrb	r2, [r3, #0]
 801d7a6:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801d7aa:	4132      	asrs	r2, r6
 801d7ac:	fb05 b919 	mls	r9, r5, r9, fp
 801d7b0:	fb03 fb05 	mul.w	fp, r3, r5
 801d7b4:	b2d2      	uxtb	r2, r2
 801d7b6:	930d      	str	r3, [sp, #52]	; 0x34
 801d7b8:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801d7bc:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801d7c0:	f0c0 80f5 	bcc.w	801d9ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801d7c4:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801d7c8:	46ae      	mov	lr, r5
 801d7ca:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801d7ce:	f0c0 80dd 	bcc.w	801d98c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801d7d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d7d4:	4013      	ands	r3, r2
 801d7d6:	d055      	beq.n	801d884 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801d7d8:	20ff      	movs	r0, #255	; 0xff
 801d7da:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d7dc:	fb90 f1f1 	sdiv	r1, r0, r1
 801d7e0:	434b      	muls	r3, r1
 801d7e2:	2bfe      	cmp	r3, #254	; 0xfe
 801d7e4:	dd03      	ble.n	801d7ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801d7e6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d7e8:	4281      	cmp	r1, r0
 801d7ea:	f000 80cd 	beq.w	801d988 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801d7ee:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d7f0:	f8bc 4000 	ldrh.w	r4, [ip]
 801d7f4:	fb11 f303 	smulbb	r3, r1, r3
 801d7f8:	b29b      	uxth	r3, r3
 801d7fa:	1c59      	adds	r1, r3, #1
 801d7fc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d800:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d804:	b29f      	uxth	r7, r3
 801d806:	43db      	mvns	r3, r3
 801d808:	b2db      	uxtb	r3, r3
 801d80a:	9309      	str	r3, [sp, #36]	; 0x24
 801d80c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801d80e:	1220      	asrs	r0, r4, #8
 801d810:	fb13 f907 	smulbb	r9, r3, r7
 801d814:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d818:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d81a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801d81e:	fb00 9003 	mla	r0, r0, r3, r9
 801d822:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801d824:	10e1      	asrs	r1, r4, #3
 801d826:	fb13 f907 	smulbb	r9, r3, r7
 801d82a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d82e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d830:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801d834:	fb01 9103 	mla	r1, r1, r3, r9
 801d838:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d83a:	00e4      	lsls	r4, r4, #3
 801d83c:	fb13 f707 	smulbb	r7, r3, r7
 801d840:	b2e4      	uxtb	r4, r4
 801d842:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d844:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801d848:	fb04 7403 	mla	r4, r4, r3, r7
 801d84c:	b280      	uxth	r0, r0
 801d84e:	b2a4      	uxth	r4, r4
 801d850:	1c43      	adds	r3, r0, #1
 801d852:	f104 0901 	add.w	r9, r4, #1
 801d856:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801d85a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801d85e:	b289      	uxth	r1, r1
 801d860:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801d864:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801d868:	ea49 0000 	orr.w	r0, r9, r0
 801d86c:	f101 0901 	add.w	r9, r1, #1
 801d870:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801d874:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d878:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d87c:	ea40 0009 	orr.w	r0, r0, r9
 801d880:	f8ac 0000 	strh.w	r0, [ip]
 801d884:	4446      	add	r6, r8
 801d886:	b2b6      	uxth	r6, r6
 801d888:	2e07      	cmp	r6, #7
 801d88a:	bf81      	itttt	hi
 801d88c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801d88e:	785a      	ldrbhi	r2, [r3, #1]
 801d890:	3301      	addhi	r3, #1
 801d892:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801d894:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d896:	bf9a      	itte	ls
 801d898:	fa42 f208 	asrls.w	r2, r2, r8
 801d89c:	b2d2      	uxtbls	r2, r2
 801d89e:	2600      	movhi	r6, #0
 801d8a0:	449c      	add	ip, r3
 801d8a2:	e792      	b.n	801d7ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801d8a4:	441c      	add	r4, r3
 801d8a6:	b224      	sxth	r4, r4
 801d8a8:	e6d5      	b.n	801d656 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801d8aa:	f1ba 0f01 	cmp.w	sl, #1
 801d8ae:	f47f af0c 	bne.w	801d6ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d8b2:	f1bb 0f01 	cmp.w	fp, #1
 801d8b6:	f47f af08 	bne.w	801d6ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d8ba:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801d97c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801d8be:	f8db 0000 	ldr.w	r0, [fp]
 801d8c2:	6803      	ldr	r3, [r0, #0]
 801d8c4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d8c6:	4798      	blx	r3
 801d8c8:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801d8cc:	465a      	mov	r2, fp
 801d8ce:	d006      	beq.n	801d8de <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801d8d0:	f1b8 0f04 	cmp.w	r8, #4
 801d8d4:	d140      	bne.n	801d958 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801d8d6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d8d8:	3300      	adds	r3, #0
 801d8da:	bf18      	it	ne
 801d8dc:	2301      	movne	r3, #1
 801d8de:	0580      	lsls	r0, r0, #22
 801d8e0:	d56e      	bpl.n	801d9c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801d8e2:	f1b8 0f08 	cmp.w	r8, #8
 801d8e6:	d16b      	bne.n	801d9c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801d8e8:	2b00      	cmp	r3, #0
 801d8ea:	bf0c      	ite	eq
 801d8ec:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801d8f0:	f44f 7180 	movne.w	r1, #256	; 0x100
 801d8f4:	2d00      	cmp	r5, #0
 801d8f6:	f47f aee8 	bne.w	801d6ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d8fa:	2e00      	cmp	r6, #0
 801d8fc:	f47f aee5 	bne.w	801d6ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d900:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801d902:	19e3      	adds	r3, r4, r7
 801d904:	4283      	cmp	r3, r0
 801d906:	f73f aee0 	bgt.w	801d6ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d90a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d90c:	980d      	ldr	r0, [sp, #52]	; 0x34
 801d90e:	444b      	add	r3, r9
 801d910:	4283      	cmp	r3, r0
 801d912:	f73f aeda 	bgt.w	801d6ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d916:	6810      	ldr	r0, [r2, #0]
 801d918:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801d91c:	6804      	ldr	r4, [r0, #0]
 801d91e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801d922:	b2bf      	uxth	r7, r7
 801d924:	f1b8 0f08 	cmp.w	r8, #8
 801d928:	f04f 0500 	mov.w	r5, #0
 801d92c:	bf18      	it	ne
 801d92e:	3701      	addne	r7, #1
 801d930:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801d934:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d936:	9104      	str	r1, [sp, #16]
 801d938:	bf18      	it	ne
 801d93a:	f027 0701 	bicne.w	r7, r7, #1
 801d93e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801d940:	bf18      	it	ne
 801d942:	b2bf      	uxthne	r7, r7
 801d944:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801d948:	e9cd 7900 	strd	r7, r9, [sp]
 801d94c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801d94e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801d950:	47a0      	blx	r4
 801d952:	b019      	add	sp, #100	; 0x64
 801d954:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d958:	2300      	movs	r3, #0
 801d95a:	e7c0      	b.n	801d8de <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801d95c:	2208      	movs	r2, #8
 801d95e:	fb92 f3f8 	sdiv	r3, r2, r8
 801d962:	1e5a      	subs	r2, r3, #1
 801d964:	443a      	add	r2, r7
 801d966:	fb92 f2f3 	sdiv	r2, r2, r3
 801d96a:	fb12 f203 	smulbb	r2, r2, r3
 801d96e:	b292      	uxth	r2, r2
 801d970:	e6b0      	b.n	801d6d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801d972:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801d974:	e6ec      	b.n	801d750 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801d976:	bf00      	nop
 801d978:	200137b4 	.word	0x200137b4
 801d97c:	200137bc 	.word	0x200137bc
 801d980:	200137b6 	.word	0x200137b6
 801d984:	00fff800 	.word	0x00fff800
 801d988:	9810      	ldr	r0, [sp, #64]	; 0x40
 801d98a:	e779      	b.n	801d880 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801d98c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d98e:	b153      	cbz	r3, 801d9a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801d990:	441e      	add	r6, r3
 801d992:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d994:	b2b6      	uxth	r6, r6
 801d996:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801d99a:	f006 0607 	and.w	r6, r6, #7
 801d99e:	781a      	ldrb	r2, [r3, #0]
 801d9a0:	9328      	str	r3, [sp, #160]	; 0xa0
 801d9a2:	4132      	asrs	r2, r6
 801d9a4:	b2d2      	uxtb	r2, r2
 801d9a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d9a8:	445b      	add	r3, fp
 801d9aa:	930a      	str	r3, [sp, #40]	; 0x28
 801d9ac:	e706      	b.n	801d7bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801d9ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d9b0:	2b00      	cmp	r3, #0
 801d9b2:	d1ce      	bne.n	801d952 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d9b4:	4b05      	ldr	r3, [pc, #20]	; (801d9cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801d9b6:	6818      	ldr	r0, [r3, #0]
 801d9b8:	6803      	ldr	r3, [r0, #0]
 801d9ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d9bc:	4798      	blx	r3
 801d9be:	e7c8      	b.n	801d952 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d9c0:	2b00      	cmp	r3, #0
 801d9c2:	f43f ae82 	beq.w	801d6ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d9c6:	f44f 7180 	mov.w	r1, #256	; 0x100
 801d9ca:	e793      	b.n	801d8f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801d9cc:	200137bc 	.word	0x200137bc

0801d9d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801d9d0:	b538      	push	{r3, r4, r5, lr}
 801d9d2:	4c15      	ldr	r4, [pc, #84]	; (801da28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801d9d4:	7823      	ldrb	r3, [r4, #0]
 801d9d6:	f3bf 8f5b 	dmb	ish
 801d9da:	07da      	lsls	r2, r3, #31
 801d9dc:	4605      	mov	r5, r0
 801d9de:	d40b      	bmi.n	801d9f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801d9e0:	4620      	mov	r0, r4
 801d9e2:	f009 fdbe 	bl	8027562 <__cxa_guard_acquire>
 801d9e6:	b138      	cbz	r0, 801d9f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801d9e8:	4620      	mov	r0, r4
 801d9ea:	f009 fdc6 	bl	802757a <__cxa_guard_release>
 801d9ee:	4a0f      	ldr	r2, [pc, #60]	; (801da2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801d9f0:	490f      	ldr	r1, [pc, #60]	; (801da30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801d9f2:	4810      	ldr	r0, [pc, #64]	; (801da34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801d9f4:	f009 fdae 	bl	8027554 <__aeabi_atexit>
 801d9f8:	4c0f      	ldr	r4, [pc, #60]	; (801da38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801d9fa:	7823      	ldrb	r3, [r4, #0]
 801d9fc:	f3bf 8f5b 	dmb	ish
 801da00:	07db      	lsls	r3, r3, #31
 801da02:	d40b      	bmi.n	801da1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801da04:	4620      	mov	r0, r4
 801da06:	f009 fdac 	bl	8027562 <__cxa_guard_acquire>
 801da0a:	b138      	cbz	r0, 801da1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801da0c:	4620      	mov	r0, r4
 801da0e:	f009 fdb4 	bl	802757a <__cxa_guard_release>
 801da12:	4a06      	ldr	r2, [pc, #24]	; (801da2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801da14:	4909      	ldr	r1, [pc, #36]	; (801da3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801da16:	480a      	ldr	r0, [pc, #40]	; (801da40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801da18:	f009 fd9c 	bl	8027554 <__aeabi_atexit>
 801da1c:	4b05      	ldr	r3, [pc, #20]	; (801da34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801da1e:	612b      	str	r3, [r5, #16]
 801da20:	4b07      	ldr	r3, [pc, #28]	; (801da40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801da22:	616b      	str	r3, [r5, #20]
 801da24:	bd38      	pop	{r3, r4, r5, pc}
 801da26:	bf00      	nop
 801da28:	2001389c 	.word	0x2001389c
 801da2c:	20000000 	.word	0x20000000
 801da30:	0801a7d3 	.word	0x0801a7d3
 801da34:	200000d4 	.word	0x200000d4
 801da38:	200138a0 	.word	0x200138a0
 801da3c:	0801a7d1 	.word	0x0801a7d1
 801da40:	200000d8 	.word	0x200000d8

0801da44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801da44:	b538      	push	{r3, r4, r5, lr}
 801da46:	4c15      	ldr	r4, [pc, #84]	; (801da9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801da48:	7823      	ldrb	r3, [r4, #0]
 801da4a:	f3bf 8f5b 	dmb	ish
 801da4e:	07da      	lsls	r2, r3, #31
 801da50:	4605      	mov	r5, r0
 801da52:	d40b      	bmi.n	801da6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801da54:	4620      	mov	r0, r4
 801da56:	f009 fd84 	bl	8027562 <__cxa_guard_acquire>
 801da5a:	b138      	cbz	r0, 801da6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801da5c:	4620      	mov	r0, r4
 801da5e:	f009 fd8c 	bl	802757a <__cxa_guard_release>
 801da62:	4a0f      	ldr	r2, [pc, #60]	; (801daa0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801da64:	490f      	ldr	r1, [pc, #60]	; (801daa4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801da66:	4810      	ldr	r0, [pc, #64]	; (801daa8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801da68:	f009 fd74 	bl	8027554 <__aeabi_atexit>
 801da6c:	4c0f      	ldr	r4, [pc, #60]	; (801daac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801da6e:	7823      	ldrb	r3, [r4, #0]
 801da70:	f3bf 8f5b 	dmb	ish
 801da74:	07db      	lsls	r3, r3, #31
 801da76:	d40b      	bmi.n	801da90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801da78:	4620      	mov	r0, r4
 801da7a:	f009 fd72 	bl	8027562 <__cxa_guard_acquire>
 801da7e:	b138      	cbz	r0, 801da90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801da80:	4620      	mov	r0, r4
 801da82:	f009 fd7a 	bl	802757a <__cxa_guard_release>
 801da86:	4a06      	ldr	r2, [pc, #24]	; (801daa0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801da88:	4909      	ldr	r1, [pc, #36]	; (801dab0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801da8a:	480a      	ldr	r0, [pc, #40]	; (801dab4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801da8c:	f009 fd62 	bl	8027554 <__aeabi_atexit>
 801da90:	4b05      	ldr	r3, [pc, #20]	; (801daa8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801da92:	60ab      	str	r3, [r5, #8]
 801da94:	4b07      	ldr	r3, [pc, #28]	; (801dab4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801da96:	60eb      	str	r3, [r5, #12]
 801da98:	bd38      	pop	{r3, r4, r5, pc}
 801da9a:	bf00      	nop
 801da9c:	20013874 	.word	0x20013874
 801daa0:	20000000 	.word	0x20000000
 801daa4:	0801a7d7 	.word	0x0801a7d7
 801daa8:	200000ac 	.word	0x200000ac
 801daac:	20013878 	.word	0x20013878
 801dab0:	0801a7d5 	.word	0x0801a7d5
 801dab4:	200000b0 	.word	0x200000b0

0801dab8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801dab8:	b510      	push	{r4, lr}
 801daba:	4604      	mov	r4, r0
 801dabc:	f7ff ff88 	bl	801d9d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801dac0:	4620      	mov	r0, r4
 801dac2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dac6:	f7ff bfbd 	b.w	801da44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801dacc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801dacc:	b538      	push	{r3, r4, r5, lr}
 801dace:	4c15      	ldr	r4, [pc, #84]	; (801db24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801dad0:	7823      	ldrb	r3, [r4, #0]
 801dad2:	f3bf 8f5b 	dmb	ish
 801dad6:	07da      	lsls	r2, r3, #31
 801dad8:	4605      	mov	r5, r0
 801dada:	d40b      	bmi.n	801daf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801dadc:	4620      	mov	r0, r4
 801dade:	f009 fd40 	bl	8027562 <__cxa_guard_acquire>
 801dae2:	b138      	cbz	r0, 801daf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801dae4:	4620      	mov	r0, r4
 801dae6:	f009 fd48 	bl	802757a <__cxa_guard_release>
 801daea:	4a0f      	ldr	r2, [pc, #60]	; (801db28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801daec:	490f      	ldr	r1, [pc, #60]	; (801db2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801daee:	4810      	ldr	r0, [pc, #64]	; (801db30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801daf0:	f009 fd30 	bl	8027554 <__aeabi_atexit>
 801daf4:	4c0f      	ldr	r4, [pc, #60]	; (801db34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801daf6:	7823      	ldrb	r3, [r4, #0]
 801daf8:	f3bf 8f5b 	dmb	ish
 801dafc:	07db      	lsls	r3, r3, #31
 801dafe:	d40b      	bmi.n	801db18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801db00:	4620      	mov	r0, r4
 801db02:	f009 fd2e 	bl	8027562 <__cxa_guard_acquire>
 801db06:	b138      	cbz	r0, 801db18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801db08:	4620      	mov	r0, r4
 801db0a:	f009 fd36 	bl	802757a <__cxa_guard_release>
 801db0e:	4a06      	ldr	r2, [pc, #24]	; (801db28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801db10:	4909      	ldr	r1, [pc, #36]	; (801db38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801db12:	480a      	ldr	r0, [pc, #40]	; (801db3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801db14:	f009 fd1e 	bl	8027554 <__aeabi_atexit>
 801db18:	4b05      	ldr	r3, [pc, #20]	; (801db30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801db1a:	622b      	str	r3, [r5, #32]
 801db1c:	4b07      	ldr	r3, [pc, #28]	; (801db3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801db1e:	626b      	str	r3, [r5, #36]	; 0x24
 801db20:	bd38      	pop	{r3, r4, r5, pc}
 801db22:	bf00      	nop
 801db24:	200138a4 	.word	0x200138a4
 801db28:	20000000 	.word	0x20000000
 801db2c:	0801a7cb 	.word	0x0801a7cb
 801db30:	200000dc 	.word	0x200000dc
 801db34:	200138a8 	.word	0x200138a8
 801db38:	0801a7c9 	.word	0x0801a7c9
 801db3c:	200000e0 	.word	0x200000e0

0801db40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801db40:	b538      	push	{r3, r4, r5, lr}
 801db42:	4c15      	ldr	r4, [pc, #84]	; (801db98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801db44:	7823      	ldrb	r3, [r4, #0]
 801db46:	f3bf 8f5b 	dmb	ish
 801db4a:	07da      	lsls	r2, r3, #31
 801db4c:	4605      	mov	r5, r0
 801db4e:	d40b      	bmi.n	801db68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801db50:	4620      	mov	r0, r4
 801db52:	f009 fd06 	bl	8027562 <__cxa_guard_acquire>
 801db56:	b138      	cbz	r0, 801db68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801db58:	4620      	mov	r0, r4
 801db5a:	f009 fd0e 	bl	802757a <__cxa_guard_release>
 801db5e:	4a0f      	ldr	r2, [pc, #60]	; (801db9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801db60:	490f      	ldr	r1, [pc, #60]	; (801dba0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801db62:	4810      	ldr	r0, [pc, #64]	; (801dba4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801db64:	f009 fcf6 	bl	8027554 <__aeabi_atexit>
 801db68:	4c0f      	ldr	r4, [pc, #60]	; (801dba8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801db6a:	7823      	ldrb	r3, [r4, #0]
 801db6c:	f3bf 8f5b 	dmb	ish
 801db70:	07db      	lsls	r3, r3, #31
 801db72:	d40b      	bmi.n	801db8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801db74:	4620      	mov	r0, r4
 801db76:	f009 fcf4 	bl	8027562 <__cxa_guard_acquire>
 801db7a:	b138      	cbz	r0, 801db8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801db7c:	4620      	mov	r0, r4
 801db7e:	f009 fcfc 	bl	802757a <__cxa_guard_release>
 801db82:	4a06      	ldr	r2, [pc, #24]	; (801db9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801db84:	4909      	ldr	r1, [pc, #36]	; (801dbac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801db86:	480a      	ldr	r0, [pc, #40]	; (801dbb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801db88:	f009 fce4 	bl	8027554 <__aeabi_atexit>
 801db8c:	4b05      	ldr	r3, [pc, #20]	; (801dba4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801db8e:	61ab      	str	r3, [r5, #24]
 801db90:	4b07      	ldr	r3, [pc, #28]	; (801dbb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801db92:	61eb      	str	r3, [r5, #28]
 801db94:	bd38      	pop	{r3, r4, r5, pc}
 801db96:	bf00      	nop
 801db98:	2001387c 	.word	0x2001387c
 801db9c:	20000000 	.word	0x20000000
 801dba0:	0801a7cf 	.word	0x0801a7cf
 801dba4:	200000b4 	.word	0x200000b4
 801dba8:	20013880 	.word	0x20013880
 801dbac:	0801a7cd 	.word	0x0801a7cd
 801dbb0:	200000b8 	.word	0x200000b8

0801dbb4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801dbb4:	b510      	push	{r4, lr}
 801dbb6:	4604      	mov	r4, r0
 801dbb8:	f7ff ff88 	bl	801dacc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801dbbc:	4620      	mov	r0, r4
 801dbbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dbc2:	f7ff bfbd 	b.w	801db40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801dbc8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801dbc8:	b538      	push	{r3, r4, r5, lr}
 801dbca:	4c15      	ldr	r4, [pc, #84]	; (801dc20 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801dbcc:	7823      	ldrb	r3, [r4, #0]
 801dbce:	f3bf 8f5b 	dmb	ish
 801dbd2:	07da      	lsls	r2, r3, #31
 801dbd4:	4605      	mov	r5, r0
 801dbd6:	d40b      	bmi.n	801dbf0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801dbd8:	4620      	mov	r0, r4
 801dbda:	f009 fcc2 	bl	8027562 <__cxa_guard_acquire>
 801dbde:	b138      	cbz	r0, 801dbf0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801dbe0:	4620      	mov	r0, r4
 801dbe2:	f009 fcca 	bl	802757a <__cxa_guard_release>
 801dbe6:	4a0f      	ldr	r2, [pc, #60]	; (801dc24 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801dbe8:	490f      	ldr	r1, [pc, #60]	; (801dc28 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801dbea:	4810      	ldr	r0, [pc, #64]	; (801dc2c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801dbec:	f009 fcb2 	bl	8027554 <__aeabi_atexit>
 801dbf0:	4c0f      	ldr	r4, [pc, #60]	; (801dc30 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801dbf2:	7823      	ldrb	r3, [r4, #0]
 801dbf4:	f3bf 8f5b 	dmb	ish
 801dbf8:	07db      	lsls	r3, r3, #31
 801dbfa:	d40b      	bmi.n	801dc14 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801dbfc:	4620      	mov	r0, r4
 801dbfe:	f009 fcb0 	bl	8027562 <__cxa_guard_acquire>
 801dc02:	b138      	cbz	r0, 801dc14 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801dc04:	4620      	mov	r0, r4
 801dc06:	f009 fcb8 	bl	802757a <__cxa_guard_release>
 801dc0a:	4a06      	ldr	r2, [pc, #24]	; (801dc24 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801dc0c:	4909      	ldr	r1, [pc, #36]	; (801dc34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801dc0e:	480a      	ldr	r0, [pc, #40]	; (801dc38 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801dc10:	f009 fca0 	bl	8027554 <__aeabi_atexit>
 801dc14:	4b05      	ldr	r3, [pc, #20]	; (801dc2c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801dc16:	632b      	str	r3, [r5, #48]	; 0x30
 801dc18:	4b07      	ldr	r3, [pc, #28]	; (801dc38 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801dc1a:	636b      	str	r3, [r5, #52]	; 0x34
 801dc1c:	bd38      	pop	{r3, r4, r5, pc}
 801dc1e:	bf00      	nop
 801dc20:	200138b4 	.word	0x200138b4
 801dc24:	20000000 	.word	0x20000000
 801dc28:	0801a7c3 	.word	0x0801a7c3
 801dc2c:	200000ec 	.word	0x200000ec
 801dc30:	200138b8 	.word	0x200138b8
 801dc34:	0801a7c1 	.word	0x0801a7c1
 801dc38:	200000f0 	.word	0x200000f0

0801dc3c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801dc3c:	b538      	push	{r3, r4, r5, lr}
 801dc3e:	4c15      	ldr	r4, [pc, #84]	; (801dc94 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801dc40:	7823      	ldrb	r3, [r4, #0]
 801dc42:	f3bf 8f5b 	dmb	ish
 801dc46:	07da      	lsls	r2, r3, #31
 801dc48:	4605      	mov	r5, r0
 801dc4a:	d40b      	bmi.n	801dc64 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801dc4c:	4620      	mov	r0, r4
 801dc4e:	f009 fc88 	bl	8027562 <__cxa_guard_acquire>
 801dc52:	b138      	cbz	r0, 801dc64 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801dc54:	4620      	mov	r0, r4
 801dc56:	f009 fc90 	bl	802757a <__cxa_guard_release>
 801dc5a:	4a0f      	ldr	r2, [pc, #60]	; (801dc98 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801dc5c:	490f      	ldr	r1, [pc, #60]	; (801dc9c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801dc5e:	4810      	ldr	r0, [pc, #64]	; (801dca0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801dc60:	f009 fc78 	bl	8027554 <__aeabi_atexit>
 801dc64:	4c0f      	ldr	r4, [pc, #60]	; (801dca4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801dc66:	7823      	ldrb	r3, [r4, #0]
 801dc68:	f3bf 8f5b 	dmb	ish
 801dc6c:	07db      	lsls	r3, r3, #31
 801dc6e:	d40b      	bmi.n	801dc88 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801dc70:	4620      	mov	r0, r4
 801dc72:	f009 fc76 	bl	8027562 <__cxa_guard_acquire>
 801dc76:	b138      	cbz	r0, 801dc88 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801dc78:	4620      	mov	r0, r4
 801dc7a:	f009 fc7e 	bl	802757a <__cxa_guard_release>
 801dc7e:	4a06      	ldr	r2, [pc, #24]	; (801dc98 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801dc80:	4909      	ldr	r1, [pc, #36]	; (801dca8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801dc82:	480a      	ldr	r0, [pc, #40]	; (801dcac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801dc84:	f009 fc66 	bl	8027554 <__aeabi_atexit>
 801dc88:	4b05      	ldr	r3, [pc, #20]	; (801dca0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801dc8a:	62ab      	str	r3, [r5, #40]	; 0x28
 801dc8c:	4b07      	ldr	r3, [pc, #28]	; (801dcac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801dc8e:	62eb      	str	r3, [r5, #44]	; 0x2c
 801dc90:	bd38      	pop	{r3, r4, r5, pc}
 801dc92:	bf00      	nop
 801dc94:	20013884 	.word	0x20013884
 801dc98:	20000000 	.word	0x20000000
 801dc9c:	0801a7c7 	.word	0x0801a7c7
 801dca0:	200000bc 	.word	0x200000bc
 801dca4:	20013888 	.word	0x20013888
 801dca8:	0801a7c5 	.word	0x0801a7c5
 801dcac:	200000c0 	.word	0x200000c0

0801dcb0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801dcb0:	b510      	push	{r4, lr}
 801dcb2:	4604      	mov	r4, r0
 801dcb4:	f7ff ff88 	bl	801dbc8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801dcb8:	4620      	mov	r0, r4
 801dcba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dcbe:	f7ff bfbd 	b.w	801dc3c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801dcc4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801dcc4:	b538      	push	{r3, r4, r5, lr}
 801dcc6:	4c15      	ldr	r4, [pc, #84]	; (801dd1c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801dcc8:	7823      	ldrb	r3, [r4, #0]
 801dcca:	f3bf 8f5b 	dmb	ish
 801dcce:	07da      	lsls	r2, r3, #31
 801dcd0:	4605      	mov	r5, r0
 801dcd2:	d40b      	bmi.n	801dcec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801dcd4:	4620      	mov	r0, r4
 801dcd6:	f009 fc44 	bl	8027562 <__cxa_guard_acquire>
 801dcda:	b138      	cbz	r0, 801dcec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801dcdc:	4620      	mov	r0, r4
 801dcde:	f009 fc4c 	bl	802757a <__cxa_guard_release>
 801dce2:	4a0f      	ldr	r2, [pc, #60]	; (801dd20 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801dce4:	490f      	ldr	r1, [pc, #60]	; (801dd24 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801dce6:	4810      	ldr	r0, [pc, #64]	; (801dd28 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801dce8:	f009 fc34 	bl	8027554 <__aeabi_atexit>
 801dcec:	4c0f      	ldr	r4, [pc, #60]	; (801dd2c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801dcee:	7823      	ldrb	r3, [r4, #0]
 801dcf0:	f3bf 8f5b 	dmb	ish
 801dcf4:	07db      	lsls	r3, r3, #31
 801dcf6:	d40b      	bmi.n	801dd10 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801dcf8:	4620      	mov	r0, r4
 801dcfa:	f009 fc32 	bl	8027562 <__cxa_guard_acquire>
 801dcfe:	b138      	cbz	r0, 801dd10 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801dd00:	4620      	mov	r0, r4
 801dd02:	f009 fc3a 	bl	802757a <__cxa_guard_release>
 801dd06:	4a06      	ldr	r2, [pc, #24]	; (801dd20 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801dd08:	4909      	ldr	r1, [pc, #36]	; (801dd30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801dd0a:	480a      	ldr	r0, [pc, #40]	; (801dd34 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801dd0c:	f009 fc22 	bl	8027554 <__aeabi_atexit>
 801dd10:	4b05      	ldr	r3, [pc, #20]	; (801dd28 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801dd12:	652b      	str	r3, [r5, #80]	; 0x50
 801dd14:	4b07      	ldr	r3, [pc, #28]	; (801dd34 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801dd16:	656b      	str	r3, [r5, #84]	; 0x54
 801dd18:	bd38      	pop	{r3, r4, r5, pc}
 801dd1a:	bf00      	nop
 801dd1c:	200138bc 	.word	0x200138bc
 801dd20:	20000000 	.word	0x20000000
 801dd24:	0801a7b3 	.word	0x0801a7b3
 801dd28:	200000f4 	.word	0x200000f4
 801dd2c:	200138c0 	.word	0x200138c0
 801dd30:	0801a7b1 	.word	0x0801a7b1
 801dd34:	200000f8 	.word	0x200000f8

0801dd38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801dd38:	b538      	push	{r3, r4, r5, lr}
 801dd3a:	4c15      	ldr	r4, [pc, #84]	; (801dd90 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801dd3c:	7823      	ldrb	r3, [r4, #0]
 801dd3e:	f3bf 8f5b 	dmb	ish
 801dd42:	07da      	lsls	r2, r3, #31
 801dd44:	4605      	mov	r5, r0
 801dd46:	d40b      	bmi.n	801dd60 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801dd48:	4620      	mov	r0, r4
 801dd4a:	f009 fc0a 	bl	8027562 <__cxa_guard_acquire>
 801dd4e:	b138      	cbz	r0, 801dd60 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801dd50:	4620      	mov	r0, r4
 801dd52:	f009 fc12 	bl	802757a <__cxa_guard_release>
 801dd56:	4a0f      	ldr	r2, [pc, #60]	; (801dd94 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801dd58:	490f      	ldr	r1, [pc, #60]	; (801dd98 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801dd5a:	4810      	ldr	r0, [pc, #64]	; (801dd9c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801dd5c:	f009 fbfa 	bl	8027554 <__aeabi_atexit>
 801dd60:	4c0f      	ldr	r4, [pc, #60]	; (801dda0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801dd62:	7823      	ldrb	r3, [r4, #0]
 801dd64:	f3bf 8f5b 	dmb	ish
 801dd68:	07db      	lsls	r3, r3, #31
 801dd6a:	d40b      	bmi.n	801dd84 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801dd6c:	4620      	mov	r0, r4
 801dd6e:	f009 fbf8 	bl	8027562 <__cxa_guard_acquire>
 801dd72:	b138      	cbz	r0, 801dd84 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801dd74:	4620      	mov	r0, r4
 801dd76:	f009 fc00 	bl	802757a <__cxa_guard_release>
 801dd7a:	4a06      	ldr	r2, [pc, #24]	; (801dd94 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801dd7c:	4909      	ldr	r1, [pc, #36]	; (801dda4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801dd7e:	480a      	ldr	r0, [pc, #40]	; (801dda8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801dd80:	f009 fbe8 	bl	8027554 <__aeabi_atexit>
 801dd84:	4b05      	ldr	r3, [pc, #20]	; (801dd9c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801dd86:	64ab      	str	r3, [r5, #72]	; 0x48
 801dd88:	4b07      	ldr	r3, [pc, #28]	; (801dda8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801dd8a:	64eb      	str	r3, [r5, #76]	; 0x4c
 801dd8c:	bd38      	pop	{r3, r4, r5, pc}
 801dd8e:	bf00      	nop
 801dd90:	200138c4 	.word	0x200138c4
 801dd94:	20000000 	.word	0x20000000
 801dd98:	0801a7b7 	.word	0x0801a7b7
 801dd9c:	200000fc 	.word	0x200000fc
 801dda0:	200138c8 	.word	0x200138c8
 801dda4:	0801a7b5 	.word	0x0801a7b5
 801dda8:	20000100 	.word	0x20000100

0801ddac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801ddac:	b538      	push	{r3, r4, r5, lr}
 801ddae:	4c15      	ldr	r4, [pc, #84]	; (801de04 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801ddb0:	7823      	ldrb	r3, [r4, #0]
 801ddb2:	f3bf 8f5b 	dmb	ish
 801ddb6:	07da      	lsls	r2, r3, #31
 801ddb8:	4605      	mov	r5, r0
 801ddba:	d40b      	bmi.n	801ddd4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801ddbc:	4620      	mov	r0, r4
 801ddbe:	f009 fbd0 	bl	8027562 <__cxa_guard_acquire>
 801ddc2:	b138      	cbz	r0, 801ddd4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801ddc4:	4620      	mov	r0, r4
 801ddc6:	f009 fbd8 	bl	802757a <__cxa_guard_release>
 801ddca:	4a0f      	ldr	r2, [pc, #60]	; (801de08 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801ddcc:	490f      	ldr	r1, [pc, #60]	; (801de0c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801ddce:	4810      	ldr	r0, [pc, #64]	; (801de10 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801ddd0:	f009 fbc0 	bl	8027554 <__aeabi_atexit>
 801ddd4:	4c0f      	ldr	r4, [pc, #60]	; (801de14 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801ddd6:	7823      	ldrb	r3, [r4, #0]
 801ddd8:	f3bf 8f5b 	dmb	ish
 801dddc:	07db      	lsls	r3, r3, #31
 801ddde:	d40b      	bmi.n	801ddf8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801dde0:	4620      	mov	r0, r4
 801dde2:	f009 fbbe 	bl	8027562 <__cxa_guard_acquire>
 801dde6:	b138      	cbz	r0, 801ddf8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801dde8:	4620      	mov	r0, r4
 801ddea:	f009 fbc6 	bl	802757a <__cxa_guard_release>
 801ddee:	4a06      	ldr	r2, [pc, #24]	; (801de08 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801ddf0:	4909      	ldr	r1, [pc, #36]	; (801de18 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801ddf2:	480a      	ldr	r0, [pc, #40]	; (801de1c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801ddf4:	f009 fbae 	bl	8027554 <__aeabi_atexit>
 801ddf8:	4b05      	ldr	r3, [pc, #20]	; (801de10 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801ddfa:	642b      	str	r3, [r5, #64]	; 0x40
 801ddfc:	4b07      	ldr	r3, [pc, #28]	; (801de1c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801ddfe:	646b      	str	r3, [r5, #68]	; 0x44
 801de00:	bd38      	pop	{r3, r4, r5, pc}
 801de02:	bf00      	nop
 801de04:	2001388c 	.word	0x2001388c
 801de08:	20000000 	.word	0x20000000
 801de0c:	0801a7bb 	.word	0x0801a7bb
 801de10:	200000c4 	.word	0x200000c4
 801de14:	20013890 	.word	0x20013890
 801de18:	0801a7b9 	.word	0x0801a7b9
 801de1c:	200000c8 	.word	0x200000c8

0801de20 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801de20:	b538      	push	{r3, r4, r5, lr}
 801de22:	4c15      	ldr	r4, [pc, #84]	; (801de78 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801de24:	7823      	ldrb	r3, [r4, #0]
 801de26:	f3bf 8f5b 	dmb	ish
 801de2a:	07da      	lsls	r2, r3, #31
 801de2c:	4605      	mov	r5, r0
 801de2e:	d40b      	bmi.n	801de48 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801de30:	4620      	mov	r0, r4
 801de32:	f009 fb96 	bl	8027562 <__cxa_guard_acquire>
 801de36:	b138      	cbz	r0, 801de48 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801de38:	4620      	mov	r0, r4
 801de3a:	f009 fb9e 	bl	802757a <__cxa_guard_release>
 801de3e:	4a0f      	ldr	r2, [pc, #60]	; (801de7c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801de40:	490f      	ldr	r1, [pc, #60]	; (801de80 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801de42:	4810      	ldr	r0, [pc, #64]	; (801de84 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801de44:	f009 fb86 	bl	8027554 <__aeabi_atexit>
 801de48:	4c0f      	ldr	r4, [pc, #60]	; (801de88 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801de4a:	7823      	ldrb	r3, [r4, #0]
 801de4c:	f3bf 8f5b 	dmb	ish
 801de50:	07db      	lsls	r3, r3, #31
 801de52:	d40b      	bmi.n	801de6c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801de54:	4620      	mov	r0, r4
 801de56:	f009 fb84 	bl	8027562 <__cxa_guard_acquire>
 801de5a:	b138      	cbz	r0, 801de6c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801de5c:	4620      	mov	r0, r4
 801de5e:	f009 fb8c 	bl	802757a <__cxa_guard_release>
 801de62:	4a06      	ldr	r2, [pc, #24]	; (801de7c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801de64:	4909      	ldr	r1, [pc, #36]	; (801de8c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801de66:	480a      	ldr	r0, [pc, #40]	; (801de90 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801de68:	f009 fb74 	bl	8027554 <__aeabi_atexit>
 801de6c:	4b05      	ldr	r3, [pc, #20]	; (801de84 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801de6e:	63ab      	str	r3, [r5, #56]	; 0x38
 801de70:	4b07      	ldr	r3, [pc, #28]	; (801de90 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801de72:	63eb      	str	r3, [r5, #60]	; 0x3c
 801de74:	bd38      	pop	{r3, r4, r5, pc}
 801de76:	bf00      	nop
 801de78:	200138ac 	.word	0x200138ac
 801de7c:	20000000 	.word	0x20000000
 801de80:	0801a7bf 	.word	0x0801a7bf
 801de84:	200000e4 	.word	0x200000e4
 801de88:	200138b0 	.word	0x200138b0
 801de8c:	0801a7bd 	.word	0x0801a7bd
 801de90:	200000e8 	.word	0x200000e8

0801de94 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801de94:	b510      	push	{r4, lr}
 801de96:	4604      	mov	r4, r0
 801de98:	f7ff ff14 	bl	801dcc4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801de9c:	4620      	mov	r0, r4
 801de9e:	f7ff ff85 	bl	801ddac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801dea2:	4620      	mov	r0, r4
 801dea4:	f7ff ff48 	bl	801dd38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801dea8:	4620      	mov	r0, r4
 801deaa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801deae:	f7ff bfb7 	b.w	801de20 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801deb4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801deb4:	b538      	push	{r3, r4, r5, lr}
 801deb6:	4c15      	ldr	r4, [pc, #84]	; (801df0c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801deb8:	7823      	ldrb	r3, [r4, #0]
 801deba:	f3bf 8f5b 	dmb	ish
 801debe:	07da      	lsls	r2, r3, #31
 801dec0:	4605      	mov	r5, r0
 801dec2:	d40b      	bmi.n	801dedc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801dec4:	4620      	mov	r0, r4
 801dec6:	f009 fb4c 	bl	8027562 <__cxa_guard_acquire>
 801deca:	b138      	cbz	r0, 801dedc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801decc:	4620      	mov	r0, r4
 801dece:	f009 fb54 	bl	802757a <__cxa_guard_release>
 801ded2:	4a0f      	ldr	r2, [pc, #60]	; (801df10 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801ded4:	490f      	ldr	r1, [pc, #60]	; (801df14 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801ded6:	4810      	ldr	r0, [pc, #64]	; (801df18 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801ded8:	f009 fb3c 	bl	8027554 <__aeabi_atexit>
 801dedc:	4c0f      	ldr	r4, [pc, #60]	; (801df1c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801dede:	7823      	ldrb	r3, [r4, #0]
 801dee0:	f3bf 8f5b 	dmb	ish
 801dee4:	07db      	lsls	r3, r3, #31
 801dee6:	d40b      	bmi.n	801df00 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801dee8:	4620      	mov	r0, r4
 801deea:	f009 fb3a 	bl	8027562 <__cxa_guard_acquire>
 801deee:	b138      	cbz	r0, 801df00 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801def0:	4620      	mov	r0, r4
 801def2:	f009 fb42 	bl	802757a <__cxa_guard_release>
 801def6:	4a06      	ldr	r2, [pc, #24]	; (801df10 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801def8:	4909      	ldr	r1, [pc, #36]	; (801df20 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801defa:	480a      	ldr	r0, [pc, #40]	; (801df24 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801defc:	f009 fb2a 	bl	8027554 <__aeabi_atexit>
 801df00:	4b05      	ldr	r3, [pc, #20]	; (801df18 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801df02:	662b      	str	r3, [r5, #96]	; 0x60
 801df04:	4b07      	ldr	r3, [pc, #28]	; (801df24 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801df06:	666b      	str	r3, [r5, #100]	; 0x64
 801df08:	bd38      	pop	{r3, r4, r5, pc}
 801df0a:	bf00      	nop
 801df0c:	20013894 	.word	0x20013894
 801df10:	20000000 	.word	0x20000000
 801df14:	0801a7ab 	.word	0x0801a7ab
 801df18:	200000cc 	.word	0x200000cc
 801df1c:	20013898 	.word	0x20013898
 801df20:	0801a7a9 	.word	0x0801a7a9
 801df24:	200000d0 	.word	0x200000d0

0801df28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801df28:	b538      	push	{r3, r4, r5, lr}
 801df2a:	4c15      	ldr	r4, [pc, #84]	; (801df80 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801df2c:	7823      	ldrb	r3, [r4, #0]
 801df2e:	f3bf 8f5b 	dmb	ish
 801df32:	07da      	lsls	r2, r3, #31
 801df34:	4605      	mov	r5, r0
 801df36:	d40b      	bmi.n	801df50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801df38:	4620      	mov	r0, r4
 801df3a:	f009 fb12 	bl	8027562 <__cxa_guard_acquire>
 801df3e:	b138      	cbz	r0, 801df50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801df40:	4620      	mov	r0, r4
 801df42:	f009 fb1a 	bl	802757a <__cxa_guard_release>
 801df46:	4a0f      	ldr	r2, [pc, #60]	; (801df84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801df48:	490f      	ldr	r1, [pc, #60]	; (801df88 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801df4a:	4810      	ldr	r0, [pc, #64]	; (801df8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801df4c:	f009 fb02 	bl	8027554 <__aeabi_atexit>
 801df50:	4c0f      	ldr	r4, [pc, #60]	; (801df90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801df52:	7823      	ldrb	r3, [r4, #0]
 801df54:	f3bf 8f5b 	dmb	ish
 801df58:	07db      	lsls	r3, r3, #31
 801df5a:	d40b      	bmi.n	801df74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801df5c:	4620      	mov	r0, r4
 801df5e:	f009 fb00 	bl	8027562 <__cxa_guard_acquire>
 801df62:	b138      	cbz	r0, 801df74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801df64:	4620      	mov	r0, r4
 801df66:	f009 fb08 	bl	802757a <__cxa_guard_release>
 801df6a:	4a06      	ldr	r2, [pc, #24]	; (801df84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801df6c:	4909      	ldr	r1, [pc, #36]	; (801df94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801df6e:	480a      	ldr	r0, [pc, #40]	; (801df98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801df70:	f009 faf0 	bl	8027554 <__aeabi_atexit>
 801df74:	4b05      	ldr	r3, [pc, #20]	; (801df8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801df76:	65ab      	str	r3, [r5, #88]	; 0x58
 801df78:	4b07      	ldr	r3, [pc, #28]	; (801df98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801df7a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801df7c:	bd38      	pop	{r3, r4, r5, pc}
 801df7e:	bf00      	nop
 801df80:	2001386c 	.word	0x2001386c
 801df84:	20000000 	.word	0x20000000
 801df88:	0801a7af 	.word	0x0801a7af
 801df8c:	200000a4 	.word	0x200000a4
 801df90:	20013870 	.word	0x20013870
 801df94:	0801a7ad 	.word	0x0801a7ad
 801df98:	200000a8 	.word	0x200000a8

0801df9c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801df9c:	b510      	push	{r4, lr}
 801df9e:	4604      	mov	r4, r0
 801dfa0:	f7ff ff88 	bl	801deb4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801dfa4:	4620      	mov	r0, r4
 801dfa6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dfaa:	f7ff bfbd 	b.w	801df28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801dfb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801dfb0:	b538      	push	{r3, r4, r5, lr}
 801dfb2:	4c15      	ldr	r4, [pc, #84]	; (801e008 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801dfb4:	7823      	ldrb	r3, [r4, #0]
 801dfb6:	f3bf 8f5b 	dmb	ish
 801dfba:	07da      	lsls	r2, r3, #31
 801dfbc:	4605      	mov	r5, r0
 801dfbe:	d40b      	bmi.n	801dfd8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801dfc0:	4620      	mov	r0, r4
 801dfc2:	f009 face 	bl	8027562 <__cxa_guard_acquire>
 801dfc6:	b138      	cbz	r0, 801dfd8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801dfc8:	4620      	mov	r0, r4
 801dfca:	f009 fad6 	bl	802757a <__cxa_guard_release>
 801dfce:	4a0f      	ldr	r2, [pc, #60]	; (801e00c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801dfd0:	490f      	ldr	r1, [pc, #60]	; (801e010 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801dfd2:	4810      	ldr	r0, [pc, #64]	; (801e014 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801dfd4:	f009 fabe 	bl	8027554 <__aeabi_atexit>
 801dfd8:	4c0f      	ldr	r4, [pc, #60]	; (801e018 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801dfda:	7823      	ldrb	r3, [r4, #0]
 801dfdc:	f3bf 8f5b 	dmb	ish
 801dfe0:	07db      	lsls	r3, r3, #31
 801dfe2:	d40b      	bmi.n	801dffc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801dfe4:	4620      	mov	r0, r4
 801dfe6:	f009 fabc 	bl	8027562 <__cxa_guard_acquire>
 801dfea:	b138      	cbz	r0, 801dffc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801dfec:	4620      	mov	r0, r4
 801dfee:	f009 fac4 	bl	802757a <__cxa_guard_release>
 801dff2:	4a06      	ldr	r2, [pc, #24]	; (801e00c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801dff4:	4909      	ldr	r1, [pc, #36]	; (801e01c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801dff6:	480a      	ldr	r0, [pc, #40]	; (801e020 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801dff8:	f009 faac 	bl	8027554 <__aeabi_atexit>
 801dffc:	4b05      	ldr	r3, [pc, #20]	; (801e014 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801dffe:	672b      	str	r3, [r5, #112]	; 0x70
 801e000:	4b07      	ldr	r3, [pc, #28]	; (801e020 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e002:	676b      	str	r3, [r5, #116]	; 0x74
 801e004:	bd38      	pop	{r3, r4, r5, pc}
 801e006:	bf00      	nop
 801e008:	20013864 	.word	0x20013864
 801e00c:	20000000 	.word	0x20000000
 801e010:	0801a7a3 	.word	0x0801a7a3
 801e014:	2000009c 	.word	0x2000009c
 801e018:	20013868 	.word	0x20013868
 801e01c:	0801a7a1 	.word	0x0801a7a1
 801e020:	200000a0 	.word	0x200000a0

0801e024 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801e024:	b538      	push	{r3, r4, r5, lr}
 801e026:	4c15      	ldr	r4, [pc, #84]	; (801e07c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801e028:	7823      	ldrb	r3, [r4, #0]
 801e02a:	f3bf 8f5b 	dmb	ish
 801e02e:	07da      	lsls	r2, r3, #31
 801e030:	4605      	mov	r5, r0
 801e032:	d40b      	bmi.n	801e04c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e034:	4620      	mov	r0, r4
 801e036:	f009 fa94 	bl	8027562 <__cxa_guard_acquire>
 801e03a:	b138      	cbz	r0, 801e04c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e03c:	4620      	mov	r0, r4
 801e03e:	f009 fa9c 	bl	802757a <__cxa_guard_release>
 801e042:	4a0f      	ldr	r2, [pc, #60]	; (801e080 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e044:	490f      	ldr	r1, [pc, #60]	; (801e084 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801e046:	4810      	ldr	r0, [pc, #64]	; (801e088 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e048:	f009 fa84 	bl	8027554 <__aeabi_atexit>
 801e04c:	4c0f      	ldr	r4, [pc, #60]	; (801e08c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801e04e:	7823      	ldrb	r3, [r4, #0]
 801e050:	f3bf 8f5b 	dmb	ish
 801e054:	07db      	lsls	r3, r3, #31
 801e056:	d40b      	bmi.n	801e070 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e058:	4620      	mov	r0, r4
 801e05a:	f009 fa82 	bl	8027562 <__cxa_guard_acquire>
 801e05e:	b138      	cbz	r0, 801e070 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e060:	4620      	mov	r0, r4
 801e062:	f009 fa8a 	bl	802757a <__cxa_guard_release>
 801e066:	4a06      	ldr	r2, [pc, #24]	; (801e080 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e068:	4909      	ldr	r1, [pc, #36]	; (801e090 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801e06a:	480a      	ldr	r0, [pc, #40]	; (801e094 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e06c:	f009 fa72 	bl	8027554 <__aeabi_atexit>
 801e070:	4b05      	ldr	r3, [pc, #20]	; (801e088 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e072:	66ab      	str	r3, [r5, #104]	; 0x68
 801e074:	4b07      	ldr	r3, [pc, #28]	; (801e094 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e076:	66eb      	str	r3, [r5, #108]	; 0x6c
 801e078:	bd38      	pop	{r3, r4, r5, pc}
 801e07a:	bf00      	nop
 801e07c:	2001385c 	.word	0x2001385c
 801e080:	20000000 	.word	0x20000000
 801e084:	0801a7a7 	.word	0x0801a7a7
 801e088:	20000094 	.word	0x20000094
 801e08c:	20013860 	.word	0x20013860
 801e090:	0801a7a5 	.word	0x0801a7a5
 801e094:	20000098 	.word	0x20000098

0801e098 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801e098:	b510      	push	{r4, lr}
 801e09a:	4604      	mov	r4, r0
 801e09c:	f7ff ff88 	bl	801dfb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801e0a0:	4620      	mov	r0, r4
 801e0a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e0a6:	f7ff bfbd 	b.w	801e024 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801e0aa <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801e0aa:	b510      	push	{r4, lr}
 801e0ac:	4604      	mov	r4, r0
 801e0ae:	f7ff fff3 	bl	801e098 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801e0b2:	4620      	mov	r0, r4
 801e0b4:	f7ff ff72 	bl	801df9c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801e0b8:	4620      	mov	r0, r4
 801e0ba:	f7ff fdf9 	bl	801dcb0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801e0be:	4620      	mov	r0, r4
 801e0c0:	f7ff fcfa 	bl	801dab8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801e0c4:	4620      	mov	r0, r4
 801e0c6:	f7ff fd75 	bl	801dbb4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801e0ca:	4620      	mov	r0, r4
 801e0cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e0d0:	f7ff bee0 	b.w	801de94 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801e0d4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801e0d4:	b538      	push	{r3, r4, r5, lr}
 801e0d6:	4c0b      	ldr	r4, [pc, #44]	; (801e104 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801e0d8:	7823      	ldrb	r3, [r4, #0]
 801e0da:	f3bf 8f5b 	dmb	ish
 801e0de:	07db      	lsls	r3, r3, #31
 801e0e0:	4605      	mov	r5, r0
 801e0e2:	d40b      	bmi.n	801e0fc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e0e4:	4620      	mov	r0, r4
 801e0e6:	f009 fa3c 	bl	8027562 <__cxa_guard_acquire>
 801e0ea:	b138      	cbz	r0, 801e0fc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e0ec:	4620      	mov	r0, r4
 801e0ee:	f009 fa44 	bl	802757a <__cxa_guard_release>
 801e0f2:	4a05      	ldr	r2, [pc, #20]	; (801e108 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801e0f4:	4905      	ldr	r1, [pc, #20]	; (801e10c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801e0f6:	4806      	ldr	r0, [pc, #24]	; (801e110 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e0f8:	f009 fa2c 	bl	8027554 <__aeabi_atexit>
 801e0fc:	4b04      	ldr	r3, [pc, #16]	; (801e110 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e0fe:	67ab      	str	r3, [r5, #120]	; 0x78
 801e100:	bd38      	pop	{r3, r4, r5, pc}
 801e102:	bf00      	nop
 801e104:	20013850 	.word	0x20013850
 801e108:	20000000 	.word	0x20000000
 801e10c:	0801a79f 	.word	0x0801a79f
 801e110:	2000008c 	.word	0x2000008c

0801e114 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801e114:	b538      	push	{r3, r4, r5, lr}
 801e116:	4c0b      	ldr	r4, [pc, #44]	; (801e144 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801e118:	7823      	ldrb	r3, [r4, #0]
 801e11a:	f3bf 8f5b 	dmb	ish
 801e11e:	07db      	lsls	r3, r3, #31
 801e120:	4605      	mov	r5, r0
 801e122:	d40b      	bmi.n	801e13c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e124:	4620      	mov	r0, r4
 801e126:	f009 fa1c 	bl	8027562 <__cxa_guard_acquire>
 801e12a:	b138      	cbz	r0, 801e13c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e12c:	4620      	mov	r0, r4
 801e12e:	f009 fa24 	bl	802757a <__cxa_guard_release>
 801e132:	4a05      	ldr	r2, [pc, #20]	; (801e148 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801e134:	4905      	ldr	r1, [pc, #20]	; (801e14c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801e136:	4806      	ldr	r0, [pc, #24]	; (801e150 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e138:	f009 fa0c 	bl	8027554 <__aeabi_atexit>
 801e13c:	4b04      	ldr	r3, [pc, #16]	; (801e150 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e13e:	67eb      	str	r3, [r5, #124]	; 0x7c
 801e140:	bd38      	pop	{r3, r4, r5, pc}
 801e142:	bf00      	nop
 801e144:	20013854 	.word	0x20013854
 801e148:	20000000 	.word	0x20000000
 801e14c:	0801a79d 	.word	0x0801a79d
 801e150:	20000090 	.word	0x20000090

0801e154 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801e154:	b570      	push	{r4, r5, r6, lr}
 801e156:	4d0d      	ldr	r5, [pc, #52]	; (801e18c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801e158:	4c0d      	ldr	r4, [pc, #52]	; (801e190 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801e15a:	782b      	ldrb	r3, [r5, #0]
 801e15c:	f3bf 8f5b 	dmb	ish
 801e160:	f013 0f01 	tst.w	r3, #1
 801e164:	4606      	mov	r6, r0
 801e166:	d10d      	bne.n	801e184 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e168:	4628      	mov	r0, r5
 801e16a:	f009 f9fa 	bl	8027562 <__cxa_guard_acquire>
 801e16e:	b148      	cbz	r0, 801e184 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e170:	4b08      	ldr	r3, [pc, #32]	; (801e194 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801e172:	6023      	str	r3, [r4, #0]
 801e174:	4628      	mov	r0, r5
 801e176:	f009 fa00 	bl	802757a <__cxa_guard_release>
 801e17a:	4a07      	ldr	r2, [pc, #28]	; (801e198 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801e17c:	4907      	ldr	r1, [pc, #28]	; (801e19c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801e17e:	4620      	mov	r0, r4
 801e180:	f009 f9e8 	bl	8027554 <__aeabi_atexit>
 801e184:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801e188:	bd70      	pop	{r4, r5, r6, pc}
 801e18a:	bf00      	nop
 801e18c:	20013858 	.word	0x20013858
 801e190:	200138cc 	.word	0x200138cc
 801e194:	0802cb08 	.word	0x0802cb08
 801e198:	20000000 	.word	0x20000000
 801e19c:	0801a79b 	.word	0x0801a79b

0801e1a0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801e1a0:	b510      	push	{r4, lr}
 801e1a2:	4604      	mov	r4, r0
 801e1a4:	f7ff ff96 	bl	801e0d4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801e1a8:	4620      	mov	r0, r4
 801e1aa:	f7ff ffb3 	bl	801e114 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801e1ae:	4620      	mov	r0, r4
 801e1b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e1b4:	f7ff bfce 	b.w	801e154 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801e1b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801e1b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e1bc:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801e1c0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801e1c4:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801e1c8:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801e1cc:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801e1d0:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801e1d4:	8808      	ldrh	r0, [r1, #0]
 801e1d6:	fb05 4c0e 	mla	ip, r5, lr, r4
 801e1da:	2d00      	cmp	r5, #0
 801e1dc:	eb02 0a0c 	add.w	sl, r2, ip
 801e1e0:	f2c0 80b0 	blt.w	801e344 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e1e4:	45ab      	cmp	fp, r5
 801e1e6:	f340 80ad 	ble.w	801e344 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e1ea:	2c00      	cmp	r4, #0
 801e1ec:	f2c0 80a8 	blt.w	801e340 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e1f0:	45a6      	cmp	lr, r4
 801e1f2:	f340 80a5 	ble.w	801e340 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e1f6:	f812 200c 	ldrb.w	r2, [r2, ip]
 801e1fa:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801e1fe:	1c62      	adds	r2, r4, #1
 801e200:	f100 80a3 	bmi.w	801e34a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e204:	4596      	cmp	lr, r2
 801e206:	f340 80a0 	ble.w	801e34a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e20a:	f1b9 0f00 	cmp.w	r9, #0
 801e20e:	f000 809c 	beq.w	801e34a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e212:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e216:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801e21a:	3501      	adds	r5, #1
 801e21c:	f100 8099 	bmi.w	801e352 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e220:	45ab      	cmp	fp, r5
 801e222:	f340 8096 	ble.w	801e352 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e226:	2f00      	cmp	r7, #0
 801e228:	f000 8093 	beq.w	801e352 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e22c:	2c00      	cmp	r4, #0
 801e22e:	f2c0 808e 	blt.w	801e34e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e232:	45a6      	cmp	lr, r4
 801e234:	f340 808b 	ble.w	801e34e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e238:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801e23c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801e240:	3401      	adds	r4, #1
 801e242:	f100 8089 	bmi.w	801e358 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e246:	45a6      	cmp	lr, r4
 801e248:	f340 8086 	ble.w	801e358 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e24c:	f1b9 0f00 	cmp.w	r9, #0
 801e250:	f000 8082 	beq.w	801e358 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e254:	44d6      	add	lr, sl
 801e256:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801e25a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801e25e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801e262:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e266:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801e26a:	fb19 fe07 	smulbb	lr, r9, r7
 801e26e:	ea44 0808 	orr.w	r8, r4, r8
 801e272:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801e276:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801e27a:	f1c7 0210 	rsb	r2, r7, #16
 801e27e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e282:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e286:	ea44 0c0c 	orr.w	ip, r4, ip
 801e28a:	eba2 0209 	sub.w	r2, r2, r9
 801e28e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801e292:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801e296:	fb04 f40c 	mul.w	r4, r4, ip
 801e29a:	fb02 4808 	mla	r8, r2, r8, r4
 801e29e:	041a      	lsls	r2, r3, #16
 801e2a0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e2a4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e2a8:	4313      	orrs	r3, r2
 801e2aa:	042a      	lsls	r2, r5, #16
 801e2ac:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e2b0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801e2b4:	fb0e 8303 	mla	r3, lr, r3, r8
 801e2b8:	432a      	orrs	r2, r5
 801e2ba:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801e2be:	fb07 3202 	mla	r2, r7, r2, r3
 801e2c2:	0d53      	lsrs	r3, r2, #21
 801e2c4:	0952      	lsrs	r2, r2, #5
 801e2c6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e2ca:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e2ce:	431a      	orrs	r2, r3
 801e2d0:	b293      	uxth	r3, r2
 801e2d2:	b2b4      	uxth	r4, r6
 801e2d4:	1202      	asrs	r2, r0, #8
 801e2d6:	43f6      	mvns	r6, r6
 801e2d8:	b2f6      	uxtb	r6, r6
 801e2da:	121d      	asrs	r5, r3, #8
 801e2dc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e2e0:	fb12 f206 	smulbb	r2, r2, r6
 801e2e4:	10c7      	asrs	r7, r0, #3
 801e2e6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e2ea:	00c0      	lsls	r0, r0, #3
 801e2ec:	fb05 2504 	mla	r5, r5, r4, r2
 801e2f0:	b2c0      	uxtb	r0, r0
 801e2f2:	10da      	asrs	r2, r3, #3
 801e2f4:	00db      	lsls	r3, r3, #3
 801e2f6:	b2db      	uxtb	r3, r3
 801e2f8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e2fc:	fb10 f006 	smulbb	r0, r0, r6
 801e300:	b2ad      	uxth	r5, r5
 801e302:	fb03 0004 	mla	r0, r3, r4, r0
 801e306:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e30a:	fb17 f706 	smulbb	r7, r7, r6
 801e30e:	b280      	uxth	r0, r0
 801e310:	1c6b      	adds	r3, r5, #1
 801e312:	fb02 7204 	mla	r2, r2, r4, r7
 801e316:	b292      	uxth	r2, r2
 801e318:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e31c:	1c43      	adds	r3, r0, #1
 801e31e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e322:	1c50      	adds	r0, r2, #1
 801e324:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801e328:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e32c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e330:	0952      	lsrs	r2, r2, #5
 801e332:	432b      	orrs	r3, r5
 801e334:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e338:	4313      	orrs	r3, r2
 801e33a:	800b      	strh	r3, [r1, #0]
 801e33c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e340:	4680      	mov	r8, r0
 801e342:	e75c      	b.n	801e1fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801e344:	4684      	mov	ip, r0
 801e346:	4680      	mov	r8, r0
 801e348:	e767      	b.n	801e21a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e34a:	4684      	mov	ip, r0
 801e34c:	e765      	b.n	801e21a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e34e:	4605      	mov	r5, r0
 801e350:	e776      	b.n	801e240 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801e352:	4603      	mov	r3, r0
 801e354:	4605      	mov	r5, r0
 801e356:	e782      	b.n	801e25e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801e358:	4603      	mov	r3, r0
 801e35a:	e780      	b.n	801e25e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801e35c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e35c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e360:	b099      	sub	sp, #100	; 0x64
 801e362:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801e366:	9215      	str	r2, [sp, #84]	; 0x54
 801e368:	9309      	str	r3, [sp, #36]	; 0x24
 801e36a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801e36c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801e370:	930d      	str	r3, [sp, #52]	; 0x34
 801e372:	910c      	str	r1, [sp, #48]	; 0x30
 801e374:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801e378:	9016      	str	r0, [sp, #88]	; 0x58
 801e37a:	6850      	ldr	r0, [r2, #4]
 801e37c:	6812      	ldr	r2, [r2, #0]
 801e37e:	fb00 1303 	mla	r3, r0, r3, r1
 801e382:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801e386:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e388:	681b      	ldr	r3, [r3, #0]
 801e38a:	930b      	str	r3, [sp, #44]	; 0x2c
 801e38c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e38e:	685e      	ldr	r6, [r3, #4]
 801e390:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e392:	43db      	mvns	r3, r3
 801e394:	b2db      	uxtb	r3, r3
 801e396:	3604      	adds	r6, #4
 801e398:	930a      	str	r3, [sp, #40]	; 0x28
 801e39a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e39c:	2b00      	cmp	r3, #0
 801e39e:	dc03      	bgt.n	801e3a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e3a0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801e3a2:	2b00      	cmp	r3, #0
 801e3a4:	f340 8225 	ble.w	801e7f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801e3a8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e3aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e3ae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e3b2:	1e48      	subs	r0, r1, #1
 801e3b4:	1e57      	subs	r7, r2, #1
 801e3b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e3b8:	2b00      	cmp	r3, #0
 801e3ba:	f340 80e3 	ble.w	801e584 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801e3be:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801e3c2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801e3c6:	d406      	bmi.n	801e3d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e3c8:	4584      	cmp	ip, r0
 801e3ca:	da04      	bge.n	801e3d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e3cc:	2b00      	cmp	r3, #0
 801e3ce:	db02      	blt.n	801e3d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e3d0:	42bb      	cmp	r3, r7
 801e3d2:	f2c0 80d8 	blt.w	801e586 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801e3d6:	f11c 0c01 	adds.w	ip, ip, #1
 801e3da:	f100 80c9 	bmi.w	801e570 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e3de:	4561      	cmp	r1, ip
 801e3e0:	f2c0 80c6 	blt.w	801e570 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e3e4:	3301      	adds	r3, #1
 801e3e6:	f100 80c3 	bmi.w	801e570 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e3ea:	429a      	cmp	r2, r3
 801e3ec:	f2c0 80c0 	blt.w	801e570 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e3f0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801e3f4:	4647      	mov	r7, r8
 801e3f6:	f1bb 0f00 	cmp.w	fp, #0
 801e3fa:	f340 80e3 	ble.w	801e5c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801e3fe:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801e400:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e402:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e406:	689b      	ldr	r3, [r3, #8]
 801e408:	ea5f 422a 	movs.w	r2, sl, asr #16
 801e40c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801e410:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801e414:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801e418:	f100 8121 	bmi.w	801e65e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e41c:	f103 39ff 	add.w	r9, r3, #4294967295
 801e420:	454a      	cmp	r2, r9
 801e422:	f280 811c 	bge.w	801e65e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e426:	f1bc 0f00 	cmp.w	ip, #0
 801e42a:	f2c0 8118 	blt.w	801e65e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e42e:	f10e 39ff 	add.w	r9, lr, #4294967295
 801e432:	45cc      	cmp	ip, r9
 801e434:	f280 8113 	bge.w	801e65e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e438:	b21b      	sxth	r3, r3
 801e43a:	fb0c 2203 	mla	r2, ip, r3, r2
 801e43e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e440:	eb04 0902 	add.w	r9, r4, r2
 801e444:	5ca2      	ldrb	r2, [r4, r2]
 801e446:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801e44a:	2800      	cmp	r0, #0
 801e44c:	f000 80fe 	beq.w	801e64c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e450:	f899 2001 	ldrb.w	r2, [r9, #1]
 801e454:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801e458:	9211      	str	r2, [sp, #68]	; 0x44
 801e45a:	b151      	cbz	r1, 801e472 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e45c:	eb09 0203 	add.w	r2, r9, r3
 801e460:	f819 3003 	ldrb.w	r3, [r9, r3]
 801e464:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e468:	930f      	str	r3, [sp, #60]	; 0x3c
 801e46a:	7853      	ldrb	r3, [r2, #1]
 801e46c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e470:	9312      	str	r3, [sp, #72]	; 0x48
 801e472:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e474:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e476:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801e47a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e47e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e482:	ea4c 0c03 	orr.w	ip, ip, r3
 801e486:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e488:	041b      	lsls	r3, r3, #16
 801e48a:	fb10 f201 	smulbb	r2, r0, r1
 801e48e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801e492:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e496:	10d2      	asrs	r2, r2, #3
 801e498:	4323      	orrs	r3, r4
 801e49a:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801e49e:	4353      	muls	r3, r2
 801e4a0:	fb09 330c 	mla	r3, r9, ip, r3
 801e4a4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801e4a8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e4ac:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801e4b0:	ea4c 0e0e 	orr.w	lr, ip, lr
 801e4b4:	f1c1 0c10 	rsb	ip, r1, #16
 801e4b8:	ebac 0c00 	sub.w	ip, ip, r0
 801e4bc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801e4c0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801e4c4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e4c6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801e4c8:	0418      	lsls	r0, r3, #16
 801e4ca:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e4ce:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e4d2:	4318      	orrs	r0, r3
 801e4d4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801e4d8:	fb02 c200 	mla	r2, r2, r0, ip
 801e4dc:	0d53      	lsrs	r3, r2, #21
 801e4de:	0952      	lsrs	r2, r2, #5
 801e4e0:	8838      	ldrh	r0, [r7, #0]
 801e4e2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e4e6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e4ea:	431a      	orrs	r2, r3
 801e4ec:	b292      	uxth	r2, r2
 801e4ee:	1201      	asrs	r1, r0, #8
 801e4f0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801e4f4:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801e4f8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e4fc:	fb11 f104 	smulbb	r1, r1, r4
 801e500:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801e504:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e508:	00c0      	lsls	r0, r0, #3
 801e50a:	fb0c 1c03 	mla	ip, ip, r3, r1
 801e50e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801e512:	10d1      	asrs	r1, r2, #3
 801e514:	b2c0      	uxtb	r0, r0
 801e516:	00d2      	lsls	r2, r2, #3
 801e518:	b2d2      	uxtb	r2, r2
 801e51a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e51e:	fb1e fe04 	smulbb	lr, lr, r4
 801e522:	fb10 f004 	smulbb	r0, r0, r4
 801e526:	fa1f fc8c 	uxth.w	ip, ip
 801e52a:	fb01 e103 	mla	r1, r1, r3, lr
 801e52e:	fb02 0303 	mla	r3, r2, r3, r0
 801e532:	b29a      	uxth	r2, r3
 801e534:	f10c 0301 	add.w	r3, ip, #1
 801e538:	b289      	uxth	r1, r1
 801e53a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801e53e:	1c53      	adds	r3, r2, #1
 801e540:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e544:	1c4a      	adds	r2, r1, #1
 801e546:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e54a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e54e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e552:	0949      	lsrs	r1, r1, #5
 801e554:	ea43 030c 	orr.w	r3, r3, ip
 801e558:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e55c:	430b      	orrs	r3, r1
 801e55e:	803b      	strh	r3, [r7, #0]
 801e560:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801e562:	449a      	add	sl, r3
 801e564:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e566:	3702      	adds	r7, #2
 801e568:	441d      	add	r5, r3
 801e56a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e56e:	e742      	b.n	801e3f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801e570:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801e572:	449a      	add	sl, r3
 801e574:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e576:	441d      	add	r5, r3
 801e578:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e57a:	3b01      	subs	r3, #1
 801e57c:	9309      	str	r3, [sp, #36]	; 0x24
 801e57e:	f108 0802 	add.w	r8, r8, #2
 801e582:	e718      	b.n	801e3b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801e584:	d023      	beq.n	801e5ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801e586:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e588:	9825      	ldr	r0, [sp, #148]	; 0x94
 801e58a:	3b01      	subs	r3, #1
 801e58c:	fb00 a003 	mla	r0, r0, r3, sl
 801e590:	1400      	asrs	r0, r0, #16
 801e592:	f53f af2d 	bmi.w	801e3f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e596:	3901      	subs	r1, #1
 801e598:	4288      	cmp	r0, r1
 801e59a:	f6bf af29 	bge.w	801e3f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e59e:	9926      	ldr	r1, [sp, #152]	; 0x98
 801e5a0:	fb01 5303 	mla	r3, r1, r3, r5
 801e5a4:	141b      	asrs	r3, r3, #16
 801e5a6:	f53f af23 	bmi.w	801e3f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e5aa:	3a01      	subs	r2, #1
 801e5ac:	4293      	cmp	r3, r2
 801e5ae:	f6bf af1f 	bge.w	801e3f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e5b2:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801e5b6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801e5ba:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801e5be:	f1be 0f00 	cmp.w	lr, #0
 801e5c2:	dc6c      	bgt.n	801e69e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801e5c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e5c6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e5ca:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801e5ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e5d0:	2b00      	cmp	r3, #0
 801e5d2:	f340 810e 	ble.w	801e7f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801e5d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e5da:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e5de:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e5e2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e5e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e5e8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e5ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e5f0:	eef0 6a62 	vmov.f32	s13, s5
 801e5f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e5f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e5fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e600:	ee16 aa90 	vmov	sl, s13
 801e604:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e608:	eef0 6a43 	vmov.f32	s13, s6
 801e60c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e610:	ee12 2a90 	vmov	r2, s5
 801e614:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e618:	fb92 f3f3 	sdiv	r3, r2, r3
 801e61c:	ee13 2a10 	vmov	r2, s6
 801e620:	9325      	str	r3, [sp, #148]	; 0x94
 801e622:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e624:	fb92 f3f3 	sdiv	r3, r2, r3
 801e628:	9326      	str	r3, [sp, #152]	; 0x98
 801e62a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e62c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801e62e:	3b01      	subs	r3, #1
 801e630:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e634:	930c      	str	r3, [sp, #48]	; 0x30
 801e636:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801e638:	bf08      	it	eq
 801e63a:	4613      	moveq	r3, r2
 801e63c:	ee16 5a90 	vmov	r5, s13
 801e640:	9309      	str	r3, [sp, #36]	; 0x24
 801e642:	eeb0 3a67 	vmov.f32	s6, s15
 801e646:	eef0 2a47 	vmov.f32	s5, s14
 801e64a:	e6a6      	b.n	801e39a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801e64c:	2900      	cmp	r1, #0
 801e64e:	f43f af10 	beq.w	801e472 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e652:	f819 3003 	ldrb.w	r3, [r9, r3]
 801e656:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e65a:	930f      	str	r3, [sp, #60]	; 0x3c
 801e65c:	e709      	b.n	801e472 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e65e:	f112 0901 	adds.w	r9, r2, #1
 801e662:	f53f af7d 	bmi.w	801e560 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e666:	454b      	cmp	r3, r9
 801e668:	f6ff af7a 	blt.w	801e560 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e66c:	f11c 0901 	adds.w	r9, ip, #1
 801e670:	f53f af76 	bmi.w	801e560 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e674:	45ce      	cmp	lr, r9
 801e676:	f6ff af73 	blt.w	801e560 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e67a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801e67c:	9202      	str	r2, [sp, #8]
 801e67e:	b21b      	sxth	r3, r3
 801e680:	fa0f f28e 	sxth.w	r2, lr
 801e684:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801e688:	e9cd c003 	strd	ip, r0, [sp, #12]
 801e68c:	9201      	str	r2, [sp, #4]
 801e68e:	9300      	str	r3, [sp, #0]
 801e690:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e692:	9816      	ldr	r0, [sp, #88]	; 0x58
 801e694:	4633      	mov	r3, r6
 801e696:	4639      	mov	r1, r7
 801e698:	f7ff fd8e 	bl	801e1b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801e69c:	e760      	b.n	801e560 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e69e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e6a0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e6a2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801e6a6:	ea4f 422a 	mov.w	r2, sl, asr #16
 801e6aa:	1429      	asrs	r1, r5, #16
 801e6ac:	fb03 2101 	mla	r1, r3, r1, r2
 801e6b0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e6b2:	440a      	add	r2, r1
 801e6b4:	5c61      	ldrb	r1, [r4, r1]
 801e6b6:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801e6ba:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801e6be:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801e6c2:	f1bc 0f00 	cmp.w	ip, #0
 801e6c6:	f000 808c 	beq.w	801e7e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801e6ca:	7857      	ldrb	r7, [r2, #1]
 801e6cc:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801e6d0:	9413      	str	r4, [sp, #76]	; 0x4c
 801e6d2:	b140      	cbz	r0, 801e6e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e6d4:	18d7      	adds	r7, r2, r3
 801e6d6:	5cd3      	ldrb	r3, [r2, r3]
 801e6d8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e6dc:	9310      	str	r3, [sp, #64]	; 0x40
 801e6de:	787b      	ldrb	r3, [r7, #1]
 801e6e0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e6e4:	9314      	str	r3, [sp, #80]	; 0x50
 801e6e6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801e6e8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801e6ea:	fb1c f200 	smulbb	r2, ip, r0
 801e6ee:	041f      	lsls	r7, r3, #16
 801e6f0:	10d2      	asrs	r2, r2, #3
 801e6f2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e6f6:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801e6fa:	431f      	orrs	r7, r3
 801e6fc:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801e700:	9317      	str	r3, [sp, #92]	; 0x5c
 801e702:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801e704:	041b      	lsls	r3, r3, #16
 801e706:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801e70a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e70e:	ea43 030b 	orr.w	r3, r3, fp
 801e712:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801e714:	4353      	muls	r3, r2
 801e716:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e71a:	fb04 3707 	mla	r7, r4, r7, r3
 801e71e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801e722:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801e726:	ea43 0b01 	orr.w	fp, r3, r1
 801e72a:	f1c0 0110 	rsb	r1, r0, #16
 801e72e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e730:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801e732:	eba1 0c0c 	sub.w	ip, r1, ip
 801e736:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801e73a:	fb0c 770b 	mla	r7, ip, fp, r7
 801e73e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801e742:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801e746:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e74a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801e74e:	ea4c 0c0b 	orr.w	ip, ip, fp
 801e752:	fb02 770c 	mla	r7, r2, ip, r7
 801e756:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801e758:	0d79      	lsrs	r1, r7, #21
 801e75a:	097f      	lsrs	r7, r7, #5
 801e75c:	8812      	ldrh	r2, [r2, #0]
 801e75e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e762:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801e766:	430f      	orrs	r7, r1
 801e768:	b2bb      	uxth	r3, r7
 801e76a:	1211      	asrs	r1, r2, #8
 801e76c:	1218      	asrs	r0, r3, #8
 801e76e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e772:	fb11 f104 	smulbb	r1, r1, r4
 801e776:	10d7      	asrs	r7, r2, #3
 801e778:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e77c:	00d2      	lsls	r2, r2, #3
 801e77e:	fb00 1009 	mla	r0, r0, r9, r1
 801e782:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e786:	10d9      	asrs	r1, r3, #3
 801e788:	b2d2      	uxtb	r2, r2
 801e78a:	00db      	lsls	r3, r3, #3
 801e78c:	fb17 f704 	smulbb	r7, r7, r4
 801e790:	fb12 f204 	smulbb	r2, r2, r4
 801e794:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e798:	b2db      	uxtb	r3, r3
 801e79a:	b280      	uxth	r0, r0
 801e79c:	fb01 7109 	mla	r1, r1, r9, r7
 801e7a0:	fb03 2309 	mla	r3, r3, r9, r2
 801e7a4:	b29b      	uxth	r3, r3
 801e7a6:	b289      	uxth	r1, r1
 801e7a8:	1c42      	adds	r2, r0, #1
 801e7aa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e7ae:	1c4f      	adds	r7, r1, #1
 801e7b0:	1c5a      	adds	r2, r3, #1
 801e7b2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e7b6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801e7ba:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801e7be:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e7c2:	0949      	lsrs	r1, r1, #5
 801e7c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e7c6:	4310      	orrs	r0, r2
 801e7c8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e7cc:	4308      	orrs	r0, r1
 801e7ce:	f823 0b02 	strh.w	r0, [r3], #2
 801e7d2:	930e      	str	r3, [sp, #56]	; 0x38
 801e7d4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801e7d6:	449a      	add	sl, r3
 801e7d8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e7da:	f10e 3eff 	add.w	lr, lr, #4294967295
 801e7de:	441d      	add	r5, r3
 801e7e0:	e6ed      	b.n	801e5be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801e7e2:	2800      	cmp	r0, #0
 801e7e4:	f43f af7f 	beq.w	801e6e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e7e8:	5cd3      	ldrb	r3, [r2, r3]
 801e7ea:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e7ee:	9310      	str	r3, [sp, #64]	; 0x40
 801e7f0:	e779      	b.n	801e6e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e7f2:	b019      	add	sp, #100	; 0x64
 801e7f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e7f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801e7f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e7fc:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801e800:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801e804:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801e808:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801e80c:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801e810:	8808      	ldrh	r0, [r1, #0]
 801e812:	fb08 470e 	mla	r7, r8, lr, r4
 801e816:	f1b8 0f00 	cmp.w	r8, #0
 801e81a:	eb02 0907 	add.w	r9, r2, r7
 801e81e:	db67      	blt.n	801e8f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801e820:	45c2      	cmp	sl, r8
 801e822:	dd65      	ble.n	801e8f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801e824:	2c00      	cmp	r4, #0
 801e826:	db61      	blt.n	801e8ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801e828:	45a6      	cmp	lr, r4
 801e82a:	dd5f      	ble.n	801e8ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801e82c:	5dd2      	ldrb	r2, [r2, r7]
 801e82e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801e832:	1c62      	adds	r2, r4, #1
 801e834:	d45f      	bmi.n	801e8f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801e836:	4596      	cmp	lr, r2
 801e838:	dd5d      	ble.n	801e8f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801e83a:	2d00      	cmp	r5, #0
 801e83c:	d05b      	beq.n	801e8f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801e83e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801e842:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801e846:	f118 0801 	adds.w	r8, r8, #1
 801e84a:	d458      	bmi.n	801e8fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801e84c:	45c2      	cmp	sl, r8
 801e84e:	dd56      	ble.n	801e8fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801e850:	2e00      	cmp	r6, #0
 801e852:	d054      	beq.n	801e8fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801e854:	2c00      	cmp	r4, #0
 801e856:	db50      	blt.n	801e8fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801e858:	45a6      	cmp	lr, r4
 801e85a:	dd4e      	ble.n	801e8fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801e85c:	f819 200e 	ldrb.w	r2, [r9, lr]
 801e860:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801e864:	3401      	adds	r4, #1
 801e866:	d407      	bmi.n	801e878 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801e868:	45a6      	cmp	lr, r4
 801e86a:	dd05      	ble.n	801e878 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801e86c:	b125      	cbz	r5, 801e878 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801e86e:	44ce      	add	lr, r9
 801e870:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801e874:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801e878:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801e87c:	fb15 f406 	smulbb	r4, r5, r6
 801e880:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e884:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801e888:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e88c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801e890:	ea43 0c0c 	orr.w	ip, r3, ip
 801e894:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801e898:	f1c6 0310 	rsb	r3, r6, #16
 801e89c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801e8a0:	1b5b      	subs	r3, r3, r5
 801e8a2:	ea4e 0707 	orr.w	r7, lr, r7
 801e8a6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801e8aa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e8ae:	437d      	muls	r5, r7
 801e8b0:	fb03 5c0c 	mla	ip, r3, ip, r5
 801e8b4:	0403      	lsls	r3, r0, #16
 801e8b6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e8ba:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e8be:	4318      	orrs	r0, r3
 801e8c0:	0413      	lsls	r3, r2, #16
 801e8c2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e8c6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e8ca:	4313      	orrs	r3, r2
 801e8cc:	fb04 c000 	mla	r0, r4, r0, ip
 801e8d0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801e8d4:	fb06 0003 	mla	r0, r6, r3, r0
 801e8d8:	0d43      	lsrs	r3, r0, #21
 801e8da:	0940      	lsrs	r0, r0, #5
 801e8dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e8e0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e8e4:	4318      	orrs	r0, r3
 801e8e6:	8008      	strh	r0, [r1, #0]
 801e8e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e8ec:	4684      	mov	ip, r0
 801e8ee:	e7a0      	b.n	801e832 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801e8f0:	4607      	mov	r7, r0
 801e8f2:	4684      	mov	ip, r0
 801e8f4:	e7a7      	b.n	801e846 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801e8f6:	4607      	mov	r7, r0
 801e8f8:	e7a5      	b.n	801e846 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801e8fa:	4602      	mov	r2, r0
 801e8fc:	e7b2      	b.n	801e864 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801e8fe:	4602      	mov	r2, r0
 801e900:	e7ba      	b.n	801e878 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801e902 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e902:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e906:	b093      	sub	sp, #76	; 0x4c
 801e908:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801e90c:	920f      	str	r2, [sp, #60]	; 0x3c
 801e90e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801e910:	9108      	str	r1, [sp, #32]
 801e912:	9306      	str	r3, [sp, #24]
 801e914:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801e918:	9010      	str	r0, [sp, #64]	; 0x40
 801e91a:	6850      	ldr	r0, [r2, #4]
 801e91c:	6812      	ldr	r2, [r2, #0]
 801e91e:	fb00 1303 	mla	r3, r0, r3, r1
 801e922:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801e926:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e928:	681b      	ldr	r3, [r3, #0]
 801e92a:	9307      	str	r3, [sp, #28]
 801e92c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e92e:	685f      	ldr	r7, [r3, #4]
 801e930:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e934:	3704      	adds	r7, #4
 801e936:	9b08      	ldr	r3, [sp, #32]
 801e938:	2b00      	cmp	r3, #0
 801e93a:	dc03      	bgt.n	801e944 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801e93c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e93e:	2b00      	cmp	r3, #0
 801e940:	f340 81b2 	ble.w	801eca8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801e944:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e946:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e94a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e94e:	1e48      	subs	r0, r1, #1
 801e950:	f102 3cff 	add.w	ip, r2, #4294967295
 801e954:	9b06      	ldr	r3, [sp, #24]
 801e956:	2b00      	cmp	r3, #0
 801e958:	f340 80a9 	ble.w	801eaae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801e95c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e960:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e964:	d406      	bmi.n	801e974 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e966:	4586      	cmp	lr, r0
 801e968:	da04      	bge.n	801e974 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e96a:	2b00      	cmp	r3, #0
 801e96c:	db02      	blt.n	801e974 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e96e:	4563      	cmp	r3, ip
 801e970:	f2c0 809e 	blt.w	801eab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801e974:	f11e 0e01 	adds.w	lr, lr, #1
 801e978:	f100 808f 	bmi.w	801ea9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e97c:	4571      	cmp	r1, lr
 801e97e:	f2c0 808c 	blt.w	801ea9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e982:	3301      	adds	r3, #1
 801e984:	f100 8089 	bmi.w	801ea9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e988:	429a      	cmp	r2, r3
 801e98a:	f2c0 8086 	blt.w	801ea9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e98e:	f8dd b018 	ldr.w	fp, [sp, #24]
 801e992:	46c8      	mov	r8, r9
 801e994:	f1bb 0f00 	cmp.w	fp, #0
 801e998:	f340 80a6 	ble.w	801eae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801e99c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801e99e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e9a0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e9a4:	689b      	ldr	r3, [r3, #8]
 801e9a6:	1422      	asrs	r2, r4, #16
 801e9a8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e9ac:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801e9b0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e9b4:	f100 80e3 	bmi.w	801eb7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801e9b8:	f103 3aff 	add.w	sl, r3, #4294967295
 801e9bc:	4552      	cmp	r2, sl
 801e9be:	f280 80de 	bge.w	801eb7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801e9c2:	f1bc 0f00 	cmp.w	ip, #0
 801e9c6:	f2c0 80da 	blt.w	801eb7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801e9ca:	f10e 3aff 	add.w	sl, lr, #4294967295
 801e9ce:	45d4      	cmp	ip, sl
 801e9d0:	f280 80d5 	bge.w	801eb7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801e9d4:	b21b      	sxth	r3, r3
 801e9d6:	fb0c 2203 	mla	r2, ip, r3, r2
 801e9da:	9d07      	ldr	r5, [sp, #28]
 801e9dc:	eb05 0a02 	add.w	sl, r5, r2
 801e9e0:	5caa      	ldrb	r2, [r5, r2]
 801e9e2:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801e9e6:	2800      	cmp	r0, #0
 801e9e8:	f000 80c0 	beq.w	801eb6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801e9ec:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e9f0:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801e9f4:	920b      	str	r2, [sp, #44]	; 0x2c
 801e9f6:	b151      	cbz	r1, 801ea0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801e9f8:	eb0a 0203 	add.w	r2, sl, r3
 801e9fc:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801ea00:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ea04:	9309      	str	r3, [sp, #36]	; 0x24
 801ea06:	7853      	ldrb	r3, [r2, #1]
 801ea08:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ea0c:	930c      	str	r3, [sp, #48]	; 0x30
 801ea0e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ea10:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ea12:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ea16:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ea1a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ea1e:	ea4c 0c03 	orr.w	ip, ip, r3
 801ea22:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ea24:	041b      	lsls	r3, r3, #16
 801ea26:	fb10 f201 	smulbb	r2, r0, r1
 801ea2a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ea2e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801ea32:	10d2      	asrs	r2, r2, #3
 801ea34:	432b      	orrs	r3, r5
 801ea36:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801ea3a:	4353      	muls	r3, r2
 801ea3c:	fb0a 330c 	mla	r3, sl, ip, r3
 801ea40:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ea44:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ea48:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ea4c:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ea50:	f1c1 0c10 	rsb	ip, r1, #16
 801ea54:	ebac 0c00 	sub.w	ip, ip, r0
 801ea58:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ea5c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801ea60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ea62:	0418      	lsls	r0, r3, #16
 801ea64:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ea68:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ea6c:	4318      	orrs	r0, r3
 801ea6e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801ea72:	fb02 c200 	mla	r2, r2, r0, ip
 801ea76:	0d53      	lsrs	r3, r2, #21
 801ea78:	0952      	lsrs	r2, r2, #5
 801ea7a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ea7e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ea82:	431a      	orrs	r2, r3
 801ea84:	f8a8 2000 	strh.w	r2, [r8]
 801ea88:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ea8a:	441c      	add	r4, r3
 801ea8c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ea8e:	f108 0802 	add.w	r8, r8, #2
 801ea92:	441e      	add	r6, r3
 801ea94:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ea98:	e77c      	b.n	801e994 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ea9a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ea9c:	441c      	add	r4, r3
 801ea9e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801eaa0:	441e      	add	r6, r3
 801eaa2:	9b06      	ldr	r3, [sp, #24]
 801eaa4:	3b01      	subs	r3, #1
 801eaa6:	9306      	str	r3, [sp, #24]
 801eaa8:	f109 0902 	add.w	r9, r9, #2
 801eaac:	e752      	b.n	801e954 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801eaae:	d020      	beq.n	801eaf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801eab0:	9b06      	ldr	r3, [sp, #24]
 801eab2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801eab4:	3b01      	subs	r3, #1
 801eab6:	fb00 4003 	mla	r0, r0, r3, r4
 801eaba:	1400      	asrs	r0, r0, #16
 801eabc:	f53f af67 	bmi.w	801e98e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801eac0:	3901      	subs	r1, #1
 801eac2:	4288      	cmp	r0, r1
 801eac4:	f6bf af63 	bge.w	801e98e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801eac8:	9920      	ldr	r1, [sp, #128]	; 0x80
 801eaca:	fb01 6303 	mla	r3, r1, r3, r6
 801eace:	141b      	asrs	r3, r3, #16
 801ead0:	f53f af5d 	bmi.w	801e98e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ead4:	3a01      	subs	r2, #1
 801ead6:	4293      	cmp	r3, r2
 801ead8:	f6bf af59 	bge.w	801e98e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801eadc:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801eae0:	46ca      	mov	sl, r9
 801eae2:	f1b8 0f00 	cmp.w	r8, #0
 801eae6:	dc67      	bgt.n	801ebb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801eae8:	9b06      	ldr	r3, [sp, #24]
 801eaea:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801eaee:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801eaf2:	9b08      	ldr	r3, [sp, #32]
 801eaf4:	2b00      	cmp	r3, #0
 801eaf6:	f340 80d7 	ble.w	801eca8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801eafa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801eafe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801eb02:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801eb06:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801eb08:	ee31 1a05 	vadd.f32	s2, s2, s10
 801eb0c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801eb10:	eeb0 6a62 	vmov.f32	s12, s5
 801eb14:	ee61 7a27 	vmul.f32	s15, s2, s15
 801eb18:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801eb1c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801eb20:	ee16 4a10 	vmov	r4, s12
 801eb24:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801eb28:	eeb0 6a43 	vmov.f32	s12, s6
 801eb2c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801eb30:	ee12 2a90 	vmov	r2, s5
 801eb34:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eb38:	fb92 f3f3 	sdiv	r3, r2, r3
 801eb3c:	ee13 2a10 	vmov	r2, s6
 801eb40:	931f      	str	r3, [sp, #124]	; 0x7c
 801eb42:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801eb44:	fb92 f3f3 	sdiv	r3, r2, r3
 801eb48:	9320      	str	r3, [sp, #128]	; 0x80
 801eb4a:	9b08      	ldr	r3, [sp, #32]
 801eb4c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801eb4e:	3b01      	subs	r3, #1
 801eb50:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801eb54:	9308      	str	r3, [sp, #32]
 801eb56:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801eb58:	bf08      	it	eq
 801eb5a:	4613      	moveq	r3, r2
 801eb5c:	ee16 6a10 	vmov	r6, s12
 801eb60:	9306      	str	r3, [sp, #24]
 801eb62:	eeb0 3a67 	vmov.f32	s6, s15
 801eb66:	eef0 2a47 	vmov.f32	s5, s14
 801eb6a:	e6e4      	b.n	801e936 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801eb6c:	2900      	cmp	r1, #0
 801eb6e:	f43f af4e 	beq.w	801ea0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801eb72:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801eb76:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801eb7a:	9309      	str	r3, [sp, #36]	; 0x24
 801eb7c:	e747      	b.n	801ea0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801eb7e:	f112 0a01 	adds.w	sl, r2, #1
 801eb82:	d481      	bmi.n	801ea88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801eb84:	4553      	cmp	r3, sl
 801eb86:	f6ff af7f 	blt.w	801ea88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801eb8a:	f11c 0a01 	adds.w	sl, ip, #1
 801eb8e:	f53f af7b 	bmi.w	801ea88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801eb92:	45d6      	cmp	lr, sl
 801eb94:	f6ff af78 	blt.w	801ea88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801eb98:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801eb9c:	b21b      	sxth	r3, r3
 801eb9e:	fa0f f28e 	sxth.w	r2, lr
 801eba2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801eba6:	9201      	str	r2, [sp, #4]
 801eba8:	9300      	str	r3, [sp, #0]
 801ebaa:	9a07      	ldr	r2, [sp, #28]
 801ebac:	9810      	ldr	r0, [sp, #64]	; 0x40
 801ebae:	463b      	mov	r3, r7
 801ebb0:	4641      	mov	r1, r8
 801ebb2:	f7ff fe21 	bl	801e7f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801ebb6:	e767      	b.n	801ea88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ebb8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ebba:	9d07      	ldr	r5, [sp, #28]
 801ebbc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ebc0:	1422      	asrs	r2, r4, #16
 801ebc2:	1431      	asrs	r1, r6, #16
 801ebc4:	fb03 2101 	mla	r1, r3, r1, r2
 801ebc8:	9a07      	ldr	r2, [sp, #28]
 801ebca:	440a      	add	r2, r1
 801ebcc:	5c69      	ldrb	r1, [r5, r1]
 801ebce:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801ebd2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ebd6:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801ebda:	f1be 0f00 	cmp.w	lr, #0
 801ebde:	d05c      	beq.n	801ec9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801ebe0:	f892 c001 	ldrb.w	ip, [r2, #1]
 801ebe4:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801ebe8:	950d      	str	r5, [sp, #52]	; 0x34
 801ebea:	b150      	cbz	r0, 801ec02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801ebec:	eb02 0c03 	add.w	ip, r2, r3
 801ebf0:	5cd3      	ldrb	r3, [r2, r3]
 801ebf2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ebf6:	930a      	str	r3, [sp, #40]	; 0x28
 801ebf8:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801ebfc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ec00:	930e      	str	r3, [sp, #56]	; 0x38
 801ec02:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ec04:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ec06:	fb1e f200 	smulbb	r2, lr, r0
 801ec0a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ec0e:	10d2      	asrs	r2, r2, #3
 801ec10:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ec14:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ec18:	ea4c 0c03 	orr.w	ip, ip, r3
 801ec1c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801ec20:	9311      	str	r3, [sp, #68]	; 0x44
 801ec22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ec24:	041b      	lsls	r3, r3, #16
 801ec26:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801ec2a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ec2e:	ea43 030b 	orr.w	r3, r3, fp
 801ec32:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ec34:	4353      	muls	r3, r2
 801ec36:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ec3a:	fb05 3c0c 	mla	ip, r5, ip, r3
 801ec3e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ec42:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801ec46:	ea43 0b01 	orr.w	fp, r3, r1
 801ec4a:	f1c0 0110 	rsb	r1, r0, #16
 801ec4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ec50:	eba1 0e0e 	sub.w	lr, r1, lr
 801ec54:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801ec58:	fb0e cc0b 	mla	ip, lr, fp, ip
 801ec5c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801ec60:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801ec64:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ec68:	ea4b 0e0e 	orr.w	lr, fp, lr
 801ec6c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801ec70:	fb02 cc0e 	mla	ip, r2, lr, ip
 801ec74:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801ec78:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ec7c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ec80:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ec84:	ea43 0c0c 	orr.w	ip, r3, ip
 801ec88:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ec8a:	f82a cb02 	strh.w	ip, [sl], #2
 801ec8e:	441c      	add	r4, r3
 801ec90:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ec92:	f108 38ff 	add.w	r8, r8, #4294967295
 801ec96:	441e      	add	r6, r3
 801ec98:	e723      	b.n	801eae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801ec9a:	2800      	cmp	r0, #0
 801ec9c:	d0b1      	beq.n	801ec02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801ec9e:	5cd3      	ldrb	r3, [r2, r3]
 801eca0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801eca4:	930a      	str	r3, [sp, #40]	; 0x28
 801eca6:	e7ac      	b.n	801ec02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801eca8:	b013      	add	sp, #76	; 0x4c
 801ecaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ecae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801ecae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ecb2:	880d      	ldrh	r5, [r1, #0]
 801ecb4:	b087      	sub	sp, #28
 801ecb6:	10ef      	asrs	r7, r5, #3
 801ecb8:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801ecbc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ecc0:	00ed      	lsls	r5, r5, #3
 801ecc2:	9701      	str	r7, [sp, #4]
 801ecc4:	b2ed      	uxtb	r5, r5
 801ecc6:	9502      	str	r5, [sp, #8]
 801ecc8:	9d01      	ldr	r5, [sp, #4]
 801ecca:	9103      	str	r1, [sp, #12]
 801eccc:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801ecd0:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801ecd4:	9902      	ldr	r1, [sp, #8]
 801ecd6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801ecda:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801ecde:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801ece2:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801ece6:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801ecea:	022d      	lsls	r5, r5, #8
 801ecec:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801ecf0:	fb06 0709 	mla	r7, r6, r9, r0
 801ecf4:	430d      	orrs	r5, r1
 801ecf6:	2e00      	cmp	r6, #0
 801ecf8:	eb02 0c07 	add.w	ip, r2, r7
 801ecfc:	9505      	str	r5, [sp, #20]
 801ecfe:	f2c0 80b6 	blt.w	801ee6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801ed02:	45b3      	cmp	fp, r6
 801ed04:	f340 80b3 	ble.w	801ee6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801ed08:	2800      	cmp	r0, #0
 801ed0a:	f2c0 80ae 	blt.w	801ee6a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801ed0e:	4581      	cmp	r9, r0
 801ed10:	f340 80ab 	ble.w	801ee6a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801ed14:	5dd7      	ldrb	r7, [r2, r7]
 801ed16:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801ed1a:	441f      	add	r7, r3
 801ed1c:	1c42      	adds	r2, r0, #1
 801ed1e:	f100 80a9 	bmi.w	801ee74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801ed22:	4591      	cmp	r9, r2
 801ed24:	f340 80a6 	ble.w	801ee74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801ed28:	2c00      	cmp	r4, #0
 801ed2a:	f000 80a3 	beq.w	801ee74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801ed2e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801ed32:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801ed36:	441d      	add	r5, r3
 801ed38:	3601      	adds	r6, #1
 801ed3a:	f100 809f 	bmi.w	801ee7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801ed3e:	45b3      	cmp	fp, r6
 801ed40:	f340 809c 	ble.w	801ee7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801ed44:	f1be 0f00 	cmp.w	lr, #0
 801ed48:	f000 8098 	beq.w	801ee7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801ed4c:	2800      	cmp	r0, #0
 801ed4e:	f2c0 8093 	blt.w	801ee78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801ed52:	4581      	cmp	r9, r0
 801ed54:	f340 8090 	ble.w	801ee78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801ed58:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801ed5c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801ed60:	441e      	add	r6, r3
 801ed62:	3001      	adds	r0, #1
 801ed64:	f100 808d 	bmi.w	801ee82 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801ed68:	4581      	cmp	r9, r0
 801ed6a:	f340 808a 	ble.w	801ee82 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801ed6e:	2c00      	cmp	r4, #0
 801ed70:	f000 8087 	beq.w	801ee82 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801ed74:	44e1      	add	r9, ip
 801ed76:	f899 2001 	ldrb.w	r2, [r9, #1]
 801ed7a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ed7e:	4413      	add	r3, r2
 801ed80:	b2a4      	uxth	r4, r4
 801ed82:	fa1f fe8e 	uxth.w	lr, lr
 801ed86:	fb04 fb0e 	mul.w	fp, r4, lr
 801ed8a:	0124      	lsls	r4, r4, #4
 801ed8c:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801ed90:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801ed94:	eba4 040b 	sub.w	r4, r4, fp
 801ed98:	fa1f f08e 	uxth.w	r0, lr
 801ed9c:	b2a2      	uxth	r2, r4
 801ed9e:	78ac      	ldrb	r4, [r5, #2]
 801eda0:	f897 c002 	ldrb.w	ip, [r7, #2]
 801eda4:	9901      	ldr	r1, [sp, #4]
 801eda6:	eba9 0900 	sub.w	r9, r9, r0
 801edaa:	fa1f f989 	uxth.w	r9, r9
 801edae:	4354      	muls	r4, r2
 801edb0:	fb09 440c 	mla	r4, r9, ip, r4
 801edb4:	f896 c002 	ldrb.w	ip, [r6, #2]
 801edb8:	fb00 440c 	mla	r4, r0, ip, r4
 801edbc:	f893 c002 	ldrb.w	ip, [r3, #2]
 801edc0:	fa1f fe88 	uxth.w	lr, r8
 801edc4:	ea6f 0808 	mvn.w	r8, r8
 801edc8:	fa5f f888 	uxtb.w	r8, r8
 801edcc:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801edd0:	fb1a fa08 	smulbb	sl, sl, r8
 801edd4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801edd8:	fb0c ac0e 	mla	ip, ip, lr, sl
 801eddc:	f895 a001 	ldrb.w	sl, [r5, #1]
 801ede0:	787c      	ldrb	r4, [r7, #1]
 801ede2:	782d      	ldrb	r5, [r5, #0]
 801ede4:	783f      	ldrb	r7, [r7, #0]
 801ede6:	fb02 fa0a 	mul.w	sl, r2, sl
 801edea:	fb09 aa04 	mla	sl, r9, r4, sl
 801edee:	7874      	ldrb	r4, [r6, #1]
 801edf0:	436a      	muls	r2, r5
 801edf2:	7835      	ldrb	r5, [r6, #0]
 801edf4:	fb00 aa04 	mla	sl, r0, r4, sl
 801edf8:	fb09 2207 	mla	r2, r9, r7, r2
 801edfc:	785c      	ldrb	r4, [r3, #1]
 801edfe:	781b      	ldrb	r3, [r3, #0]
 801ee00:	fb00 2005 	mla	r0, r0, r5, r2
 801ee04:	fb0b a404 	mla	r4, fp, r4, sl
 801ee08:	fb0b 0b03 	mla	fp, fp, r3, r0
 801ee0c:	9b02      	ldr	r3, [sp, #8]
 801ee0e:	fb11 fa08 	smulbb	sl, r1, r8
 801ee12:	fa1f fc8c 	uxth.w	ip, ip
 801ee16:	fb13 f808 	smulbb	r8, r3, r8
 801ee1a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801ee1e:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801ee22:	fb04 a40e 	mla	r4, r4, lr, sl
 801ee26:	f10c 0301 	add.w	r3, ip, #1
 801ee2a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801ee2e:	fa1f fe8e 	uxth.w	lr, lr
 801ee32:	b2a4      	uxth	r4, r4
 801ee34:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801ee38:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801ee3c:	f104 0a01 	add.w	sl, r4, #1
 801ee40:	f10e 0c01 	add.w	ip, lr, #1
 801ee44:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ee48:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801ee4c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ee50:	0964      	lsrs	r4, r4, #5
 801ee52:	ea4c 0c03 	orr.w	ip, ip, r3
 801ee56:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801ee5a:	9b03      	ldr	r3, [sp, #12]
 801ee5c:	ea4c 0c04 	orr.w	ip, ip, r4
 801ee60:	f8a3 c000 	strh.w	ip, [r3]
 801ee64:	b007      	add	sp, #28
 801ee66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ee6a:	af05      	add	r7, sp, #20
 801ee6c:	e756      	b.n	801ed1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801ee6e:	ad05      	add	r5, sp, #20
 801ee70:	462f      	mov	r7, r5
 801ee72:	e761      	b.n	801ed38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801ee74:	ad05      	add	r5, sp, #20
 801ee76:	e75f      	b.n	801ed38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801ee78:	ae05      	add	r6, sp, #20
 801ee7a:	e772      	b.n	801ed62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801ee7c:	ab05      	add	r3, sp, #20
 801ee7e:	461e      	mov	r6, r3
 801ee80:	e77e      	b.n	801ed80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801ee82:	ab05      	add	r3, sp, #20
 801ee84:	e77c      	b.n	801ed80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801ee86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ee86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee8a:	b095      	sub	sp, #84	; 0x54
 801ee8c:	9212      	str	r2, [sp, #72]	; 0x48
 801ee8e:	9309      	str	r3, [sp, #36]	; 0x24
 801ee90:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801ee92:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801ee96:	930f      	str	r3, [sp, #60]	; 0x3c
 801ee98:	910e      	str	r1, [sp, #56]	; 0x38
 801ee9a:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801ee9e:	9013      	str	r0, [sp, #76]	; 0x4c
 801eea0:	6850      	ldr	r0, [r2, #4]
 801eea2:	6812      	ldr	r2, [r2, #0]
 801eea4:	fb00 1303 	mla	r3, r0, r3, r1
 801eea8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801eeac:	930a      	str	r3, [sp, #40]	; 0x28
 801eeae:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801eeb0:	681b      	ldr	r3, [r3, #0]
 801eeb2:	930d      	str	r3, [sp, #52]	; 0x34
 801eeb4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801eeb6:	685c      	ldr	r4, [r3, #4]
 801eeb8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801eeba:	43db      	mvns	r3, r3
 801eebc:	b2db      	uxtb	r3, r3
 801eebe:	3404      	adds	r4, #4
 801eec0:	930b      	str	r3, [sp, #44]	; 0x2c
 801eec2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801eec4:	2b00      	cmp	r3, #0
 801eec6:	dc03      	bgt.n	801eed0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801eec8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801eeca:	2b00      	cmp	r3, #0
 801eecc:	f340 8255 	ble.w	801f37a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801eed0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801eed2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801eed6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801eeda:	1e48      	subs	r0, r1, #1
 801eedc:	1e55      	subs	r5, r2, #1
 801eede:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eee0:	2b00      	cmp	r3, #0
 801eee2:	f340 80f9 	ble.w	801f0d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801eee6:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801eee8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801eeea:	1436      	asrs	r6, r6, #16
 801eeec:	ea4f 4323 	mov.w	r3, r3, asr #16
 801eef0:	d406      	bmi.n	801ef00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801eef2:	4286      	cmp	r6, r0
 801eef4:	da04      	bge.n	801ef00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801eef6:	2b00      	cmp	r3, #0
 801eef8:	db02      	blt.n	801ef00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801eefa:	42ab      	cmp	r3, r5
 801eefc:	f2c0 80ed 	blt.w	801f0da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801ef00:	3601      	adds	r6, #1
 801ef02:	f100 80da 	bmi.w	801f0ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ef06:	42b1      	cmp	r1, r6
 801ef08:	f2c0 80d7 	blt.w	801f0ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ef0c:	3301      	adds	r3, #1
 801ef0e:	f100 80d4 	bmi.w	801f0ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ef12:	429a      	cmp	r2, r3
 801ef14:	f2c0 80d1 	blt.w	801f0ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ef18:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ef1a:	9311      	str	r3, [sp, #68]	; 0x44
 801ef1c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ef1e:	930c      	str	r3, [sp, #48]	; 0x30
 801ef20:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ef22:	2b00      	cmp	r3, #0
 801ef24:	f340 80fa 	ble.w	801f11c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801ef28:	9826      	ldr	r0, [sp, #152]	; 0x98
 801ef2a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ef2c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801ef2e:	68c6      	ldr	r6, [r0, #12]
 801ef30:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801ef32:	141d      	asrs	r5, r3, #16
 801ef34:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801ef38:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ef3a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801ef3c:	1400      	asrs	r0, r0, #16
 801ef3e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801ef42:	6892      	ldr	r2, [r2, #8]
 801ef44:	f100 813e 	bmi.w	801f1c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801ef48:	1e57      	subs	r7, r2, #1
 801ef4a:	42b8      	cmp	r0, r7
 801ef4c:	f280 813a 	bge.w	801f1c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801ef50:	2d00      	cmp	r5, #0
 801ef52:	f2c0 8137 	blt.w	801f1c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801ef56:	1e77      	subs	r7, r6, #1
 801ef58:	42bd      	cmp	r5, r7
 801ef5a:	f280 8133 	bge.w	801f1c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801ef5e:	b212      	sxth	r2, r2
 801ef60:	fb05 0002 	mla	r0, r5, r2, r0
 801ef64:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ef66:	f815 a000 	ldrb.w	sl, [r5, r0]
 801ef6a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801ef6e:	182e      	adds	r6, r5, r0
 801ef70:	eb04 050a 	add.w	r5, r4, sl
 801ef74:	2b00      	cmp	r3, #0
 801ef76:	f000 8117 	beq.w	801f1a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801ef7a:	f896 c001 	ldrb.w	ip, [r6, #1]
 801ef7e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801ef82:	44a4      	add	ip, r4
 801ef84:	2900      	cmp	r1, #0
 801ef86:	f000 8117 	beq.w	801f1b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801ef8a:	18b0      	adds	r0, r6, r2
 801ef8c:	5cb2      	ldrb	r2, [r6, r2]
 801ef8e:	7840      	ldrb	r0, [r0, #1]
 801ef90:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ef94:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ef98:	4422      	add	r2, r4
 801ef9a:	4420      	add	r0, r4
 801ef9c:	b29b      	uxth	r3, r3
 801ef9e:	b289      	uxth	r1, r1
 801efa0:	fb03 f901 	mul.w	r9, r3, r1
 801efa4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801efa8:	011b      	lsls	r3, r3, #4
 801efaa:	b289      	uxth	r1, r1
 801efac:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801efb0:	f895 b002 	ldrb.w	fp, [r5, #2]
 801efb4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801efb6:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801efba:	f8b6 e000 	ldrh.w	lr, [r6]
 801efbe:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801efc2:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801efc6:	eba3 0309 	sub.w	r3, r3, r9
 801efca:	b29b      	uxth	r3, r3
 801efcc:	eba8 0801 	sub.w	r8, r8, r1
 801efd0:	fa1f f888 	uxth.w	r8, r8
 801efd4:	435f      	muls	r7, r3
 801efd6:	fb08 770b 	mla	r7, r8, fp, r7
 801efda:	f892 b002 	ldrb.w	fp, [r2, #2]
 801efde:	9310      	str	r3, [sp, #64]	; 0x40
 801efe0:	fb01 770b 	mla	r7, r1, fp, r7
 801efe4:	f890 b002 	ldrb.w	fp, [r0, #2]
 801efe8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801efea:	fb09 770b 	mla	r7, r9, fp, r7
 801efee:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801eff2:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801eff6:	fb1b fb03 	smulbb	fp, fp, r3
 801effa:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801effe:	fb07 b706 	mla	r7, r7, r6, fp
 801f002:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f004:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f008:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f00c:	f89c c000 	ldrb.w	ip, [ip]
 801f010:	435d      	muls	r5, r3
 801f012:	fb08 550b 	mla	r5, r8, fp, r5
 801f016:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f01a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f01c:	fb01 550b 	mla	r5, r1, fp, r5
 801f020:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f024:	fb09 550b 	mla	r5, r9, fp, r5
 801f028:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801f02c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f030:	fb1b fb03 	smulbb	fp, fp, r3
 801f034:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f036:	fb03 f30c 	mul.w	r3, r3, ip
 801f03a:	f892 c000 	ldrb.w	ip, [r2]
 801f03e:	fb08 330a 	mla	r3, r8, sl, r3
 801f042:	fb01 330c 	mla	r3, r1, ip, r3
 801f046:	f890 c000 	ldrb.w	ip, [r0]
 801f04a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f04e:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f052:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f054:	fa5f fe8e 	uxtb.w	lr, lr
 801f058:	b2bf      	uxth	r7, r7
 801f05a:	fb1e fe03 	smulbb	lr, lr, r3
 801f05e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f062:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f066:	fb05 b506 	mla	r5, r5, r6, fp
 801f06a:	1c7b      	adds	r3, r7, #1
 801f06c:	fb0c e606 	mla	r6, ip, r6, lr
 801f070:	b2ad      	uxth	r5, r5
 801f072:	b2b6      	uxth	r6, r6
 801f074:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f078:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801f07c:	f105 0b01 	add.w	fp, r5, #1
 801f080:	1c77      	adds	r7, r6, #1
 801f082:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801f086:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f08a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f08e:	096d      	lsrs	r5, r5, #5
 801f090:	431f      	orrs	r7, r3
 801f092:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f096:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f098:	433d      	orrs	r5, r7
 801f09a:	801d      	strh	r5, [r3, #0]
 801f09c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f09e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f0a0:	3302      	adds	r3, #2
 801f0a2:	930c      	str	r3, [sp, #48]	; 0x30
 801f0a4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f0a6:	4413      	add	r3, r2
 801f0a8:	931f      	str	r3, [sp, #124]	; 0x7c
 801f0aa:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f0ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f0ae:	4413      	add	r3, r2
 801f0b0:	9320      	str	r3, [sp, #128]	; 0x80
 801f0b2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f0b4:	3b01      	subs	r3, #1
 801f0b6:	9311      	str	r3, [sp, #68]	; 0x44
 801f0b8:	e732      	b.n	801ef20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f0ba:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f0bc:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801f0be:	4433      	add	r3, r6
 801f0c0:	931f      	str	r3, [sp, #124]	; 0x7c
 801f0c2:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801f0c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f0c6:	4433      	add	r3, r6
 801f0c8:	9320      	str	r3, [sp, #128]	; 0x80
 801f0ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f0cc:	3b01      	subs	r3, #1
 801f0ce:	9309      	str	r3, [sp, #36]	; 0x24
 801f0d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f0d2:	3302      	adds	r3, #2
 801f0d4:	930a      	str	r3, [sp, #40]	; 0x28
 801f0d6:	e702      	b.n	801eede <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f0d8:	d027      	beq.n	801f12a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801f0da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f0dc:	9821      	ldr	r0, [sp, #132]	; 0x84
 801f0de:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f0e0:	3b01      	subs	r3, #1
 801f0e2:	fb00 5003 	mla	r0, r0, r3, r5
 801f0e6:	1400      	asrs	r0, r0, #16
 801f0e8:	f53f af16 	bmi.w	801ef18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f0ec:	3901      	subs	r1, #1
 801f0ee:	4288      	cmp	r0, r1
 801f0f0:	f6bf af12 	bge.w	801ef18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f0f4:	9922      	ldr	r1, [sp, #136]	; 0x88
 801f0f6:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f0f8:	fb01 0303 	mla	r3, r1, r3, r0
 801f0fc:	141b      	asrs	r3, r3, #16
 801f0fe:	f53f af0b 	bmi.w	801ef18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f102:	3a01      	subs	r2, #1
 801f104:	4293      	cmp	r3, r2
 801f106:	f6bf af07 	bge.w	801ef18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f10a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f10c:	9311      	str	r3, [sp, #68]	; 0x44
 801f10e:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801f112:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f114:	930c      	str	r3, [sp, #48]	; 0x30
 801f116:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f118:	2b00      	cmp	r3, #0
 801f11a:	dc70      	bgt.n	801f1fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801f11c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f11e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f120:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f124:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f128:	930a      	str	r3, [sp, #40]	; 0x28
 801f12a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f12c:	2b00      	cmp	r3, #0
 801f12e:	f340 8124 	ble.w	801f37a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f132:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f136:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f13a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f13e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f140:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f144:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f148:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f14c:	eef0 6a62 	vmov.f32	s13, s5
 801f150:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f154:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f158:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f15c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801f160:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f164:	eef0 6a43 	vmov.f32	s13, s6
 801f168:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f16c:	ee12 2a90 	vmov	r2, s5
 801f170:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f174:	fb92 f3f3 	sdiv	r3, r2, r3
 801f178:	ee13 2a10 	vmov	r2, s6
 801f17c:	9321      	str	r3, [sp, #132]	; 0x84
 801f17e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f180:	fb92 f3f3 	sdiv	r3, r2, r3
 801f184:	9322      	str	r3, [sp, #136]	; 0x88
 801f186:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f188:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f18a:	3b01      	subs	r3, #1
 801f18c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f190:	930e      	str	r3, [sp, #56]	; 0x38
 801f192:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f194:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801f198:	bf08      	it	eq
 801f19a:	4613      	moveq	r3, r2
 801f19c:	9309      	str	r3, [sp, #36]	; 0x24
 801f19e:	eeb0 3a67 	vmov.f32	s6, s15
 801f1a2:	eef0 2a47 	vmov.f32	s5, s14
 801f1a6:	e68c      	b.n	801eec2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f1a8:	b149      	cbz	r1, 801f1be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801f1aa:	5cb2      	ldrb	r2, [r6, r2]
 801f1ac:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f1b0:	4422      	add	r2, r4
 801f1b2:	4628      	mov	r0, r5
 801f1b4:	46ac      	mov	ip, r5
 801f1b6:	e6f1      	b.n	801ef9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f1b8:	4628      	mov	r0, r5
 801f1ba:	462a      	mov	r2, r5
 801f1bc:	e6ee      	b.n	801ef9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f1be:	4628      	mov	r0, r5
 801f1c0:	462a      	mov	r2, r5
 801f1c2:	e7f7      	b.n	801f1b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801f1c4:	1c47      	adds	r7, r0, #1
 801f1c6:	f53f af69 	bmi.w	801f09c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f1ca:	42ba      	cmp	r2, r7
 801f1cc:	f6ff af66 	blt.w	801f09c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f1d0:	1c6f      	adds	r7, r5, #1
 801f1d2:	f53f af63 	bmi.w	801f09c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f1d6:	42be      	cmp	r6, r7
 801f1d8:	f6ff af60 	blt.w	801f09c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f1dc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801f1de:	9002      	str	r0, [sp, #8]
 801f1e0:	b236      	sxth	r6, r6
 801f1e2:	b212      	sxth	r2, r2
 801f1e4:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801f1e8:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801f1ec:	9200      	str	r2, [sp, #0]
 801f1ee:	9601      	str	r6, [sp, #4]
 801f1f0:	4623      	mov	r3, r4
 801f1f2:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801f1f6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801f1f8:	f7ff fd59 	bl	801ecae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801f1fc:	e74e      	b.n	801f09c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f1fe:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f200:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f202:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f204:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f206:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f20a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f20c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801f210:	142d      	asrs	r5, r5, #16
 801f212:	1400      	asrs	r0, r0, #16
 801f214:	fb02 5000 	mla	r0, r2, r0, r5
 801f218:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f21a:	f815 9000 	ldrb.w	r9, [r5, r0]
 801f21e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f222:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801f226:	182e      	adds	r6, r5, r0
 801f228:	eb04 0509 	add.w	r5, r4, r9
 801f22c:	2b00      	cmp	r3, #0
 801f22e:	f000 8096 	beq.w	801f35e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f232:	7877      	ldrb	r7, [r6, #1]
 801f234:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f238:	4427      	add	r7, r4
 801f23a:	2900      	cmp	r1, #0
 801f23c:	f000 8097 	beq.w	801f36e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801f240:	18b0      	adds	r0, r6, r2
 801f242:	5cb2      	ldrb	r2, [r6, r2]
 801f244:	7840      	ldrb	r0, [r0, #1]
 801f246:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f24a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f24e:	4422      	add	r2, r4
 801f250:	4420      	add	r0, r4
 801f252:	b29b      	uxth	r3, r3
 801f254:	b289      	uxth	r1, r1
 801f256:	fb03 f801 	mul.w	r8, r3, r1
 801f25a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f25c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f260:	f8b6 c000 	ldrh.w	ip, [r6]
 801f264:	78be      	ldrb	r6, [r7, #2]
 801f266:	f814 9009 	ldrb.w	r9, [r4, r9]
 801f26a:	011b      	lsls	r3, r3, #4
 801f26c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801f270:	b289      	uxth	r1, r1
 801f272:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801f276:	eba3 0308 	sub.w	r3, r3, r8
 801f27a:	b29b      	uxth	r3, r3
 801f27c:	ebae 0e01 	sub.w	lr, lr, r1
 801f280:	fa1f fe8e 	uxth.w	lr, lr
 801f284:	435e      	muls	r6, r3
 801f286:	fb0e 660b 	mla	r6, lr, fp, r6
 801f28a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f28e:	9310      	str	r3, [sp, #64]	; 0x40
 801f290:	fb01 660b 	mla	r6, r1, fp, r6
 801f294:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f298:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f29a:	fb08 660b 	mla	r6, r8, fp, r6
 801f29e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801f2a2:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f2a6:	fb1b fb03 	smulbb	fp, fp, r3
 801f2aa:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f2ae:	fb06 b60a 	mla	r6, r6, sl, fp
 801f2b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f2b4:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f2b8:	787d      	ldrb	r5, [r7, #1]
 801f2ba:	783f      	ldrb	r7, [r7, #0]
 801f2bc:	435d      	muls	r5, r3
 801f2be:	fb0e 550b 	mla	r5, lr, fp, r5
 801f2c2:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f2c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f2c8:	fb01 550b 	mla	r5, r1, fp, r5
 801f2cc:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f2d0:	fb08 550b 	mla	r5, r8, fp, r5
 801f2d4:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f2d8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f2dc:	fb1b fb03 	smulbb	fp, fp, r3
 801f2e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f2e2:	437b      	muls	r3, r7
 801f2e4:	7817      	ldrb	r7, [r2, #0]
 801f2e6:	fb0e 3309 	mla	r3, lr, r9, r3
 801f2ea:	fb01 3307 	mla	r3, r1, r7, r3
 801f2ee:	7807      	ldrb	r7, [r0, #0]
 801f2f0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f2f4:	fb08 3707 	mla	r7, r8, r7, r3
 801f2f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f2fa:	fa5f fc8c 	uxtb.w	ip, ip
 801f2fe:	fb1c fc03 	smulbb	ip, ip, r3
 801f302:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f306:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f30a:	fb05 b50a 	mla	r5, r5, sl, fp
 801f30e:	fb07 c70a 	mla	r7, r7, sl, ip
 801f312:	b2b6      	uxth	r6, r6
 801f314:	b2ad      	uxth	r5, r5
 801f316:	b2bf      	uxth	r7, r7
 801f318:	1c73      	adds	r3, r6, #1
 801f31a:	1c7a      	adds	r2, r7, #1
 801f31c:	f105 0b01 	add.w	fp, r5, #1
 801f320:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801f324:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801f328:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f32c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f330:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f334:	096d      	lsrs	r5, r5, #5
 801f336:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f338:	4316      	orrs	r6, r2
 801f33a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f33e:	432e      	orrs	r6, r5
 801f340:	f823 6b02 	strh.w	r6, [r3], #2
 801f344:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f346:	930c      	str	r3, [sp, #48]	; 0x30
 801f348:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f34a:	4413      	add	r3, r2
 801f34c:	931f      	str	r3, [sp, #124]	; 0x7c
 801f34e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f350:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f352:	4413      	add	r3, r2
 801f354:	9320      	str	r3, [sp, #128]	; 0x80
 801f356:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f358:	3b01      	subs	r3, #1
 801f35a:	9311      	str	r3, [sp, #68]	; 0x44
 801f35c:	e6db      	b.n	801f116 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801f35e:	b149      	cbz	r1, 801f374 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801f360:	5cb2      	ldrb	r2, [r6, r2]
 801f362:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f366:	4422      	add	r2, r4
 801f368:	4628      	mov	r0, r5
 801f36a:	462f      	mov	r7, r5
 801f36c:	e771      	b.n	801f252 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f36e:	4628      	mov	r0, r5
 801f370:	462a      	mov	r2, r5
 801f372:	e76e      	b.n	801f252 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f374:	4628      	mov	r0, r5
 801f376:	462a      	mov	r2, r5
 801f378:	e7f7      	b.n	801f36a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f37a:	b015      	add	sp, #84	; 0x54
 801f37c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f380 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801f380:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f384:	880f      	ldrh	r7, [r1, #0]
 801f386:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801f38a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801f38e:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801f392:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801f396:	023c      	lsls	r4, r7, #8
 801f398:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801f39c:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801f3a0:	017c      	lsls	r4, r7, #5
 801f3a2:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801f3a6:	00ff      	lsls	r7, r7, #3
 801f3a8:	ea4b 0404 	orr.w	r4, fp, r4
 801f3ac:	b2ff      	uxtb	r7, r7
 801f3ae:	fb05 ca0e 	mla	sl, r5, lr, ip
 801f3b2:	4327      	orrs	r7, r4
 801f3b4:	2d00      	cmp	r5, #0
 801f3b6:	eb02 080a 	add.w	r8, r2, sl
 801f3ba:	9701      	str	r7, [sp, #4]
 801f3bc:	db7e      	blt.n	801f4bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f3be:	45a9      	cmp	r9, r5
 801f3c0:	dd7c      	ble.n	801f4bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f3c2:	f1bc 0f00 	cmp.w	ip, #0
 801f3c6:	db77      	blt.n	801f4b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f3c8:	45e6      	cmp	lr, ip
 801f3ca:	dd75      	ble.n	801f4b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f3cc:	f812 700a 	ldrb.w	r7, [r2, sl]
 801f3d0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f3d4:	441f      	add	r7, r3
 801f3d6:	f11c 0201 	adds.w	r2, ip, #1
 801f3da:	d472      	bmi.n	801f4c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f3dc:	4596      	cmp	lr, r2
 801f3de:	dd70      	ble.n	801f4c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f3e0:	2800      	cmp	r0, #0
 801f3e2:	d06e      	beq.n	801f4c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f3e4:	f898 4001 	ldrb.w	r4, [r8, #1]
 801f3e8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801f3ec:	441c      	add	r4, r3
 801f3ee:	3501      	adds	r5, #1
 801f3f0:	d46b      	bmi.n	801f4ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f3f2:	45a9      	cmp	r9, r5
 801f3f4:	dd69      	ble.n	801f4ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f3f6:	2e00      	cmp	r6, #0
 801f3f8:	d067      	beq.n	801f4ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f3fa:	f1bc 0f00 	cmp.w	ip, #0
 801f3fe:	db62      	blt.n	801f4c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f400:	45e6      	cmp	lr, ip
 801f402:	dd60      	ble.n	801f4c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f404:	f818 500e 	ldrb.w	r5, [r8, lr]
 801f408:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f40c:	441d      	add	r5, r3
 801f40e:	f11c 0201 	adds.w	r2, ip, #1
 801f412:	d45d      	bmi.n	801f4d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f414:	4596      	cmp	lr, r2
 801f416:	dd5b      	ble.n	801f4d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f418:	2800      	cmp	r0, #0
 801f41a:	d059      	beq.n	801f4d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f41c:	44c6      	add	lr, r8
 801f41e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f422:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f426:	4413      	add	r3, r2
 801f428:	b280      	uxth	r0, r0
 801f42a:	b2b2      	uxth	r2, r6
 801f42c:	fb00 f602 	mul.w	r6, r0, r2
 801f430:	0100      	lsls	r0, r0, #4
 801f432:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801f436:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801f43a:	1b80      	subs	r0, r0, r6
 801f43c:	fa1f fc82 	uxth.w	ip, r2
 801f440:	b282      	uxth	r2, r0
 801f442:	78a0      	ldrb	r0, [r4, #2]
 801f444:	f897 e002 	ldrb.w	lr, [r7, #2]
 801f448:	f897 9000 	ldrb.w	r9, [r7]
 801f44c:	787f      	ldrb	r7, [r7, #1]
 801f44e:	eba8 080c 	sub.w	r8, r8, ip
 801f452:	fa1f f888 	uxth.w	r8, r8
 801f456:	4350      	muls	r0, r2
 801f458:	fb08 0e0e 	mla	lr, r8, lr, r0
 801f45c:	78a8      	ldrb	r0, [r5, #2]
 801f45e:	fb0c e000 	mla	r0, ip, r0, lr
 801f462:	f893 e002 	ldrb.w	lr, [r3, #2]
 801f466:	fb06 0e0e 	mla	lr, r6, lr, r0
 801f46a:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801f46e:	f894 e000 	ldrb.w	lr, [r4]
 801f472:	fb02 fe0e 	mul.w	lr, r2, lr
 801f476:	fb08 e909 	mla	r9, r8, r9, lr
 801f47a:	f895 e000 	ldrb.w	lr, [r5]
 801f47e:	fb0c 990e 	mla	r9, ip, lr, r9
 801f482:	f893 e000 	ldrb.w	lr, [r3]
 801f486:	785b      	ldrb	r3, [r3, #1]
 801f488:	fb06 9e0e 	mla	lr, r6, lr, r9
 801f48c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801f490:	ea4e 0e00 	orr.w	lr, lr, r0
 801f494:	7860      	ldrb	r0, [r4, #1]
 801f496:	4350      	muls	r0, r2
 801f498:	786a      	ldrb	r2, [r5, #1]
 801f49a:	fb08 0007 	mla	r0, r8, r7, r0
 801f49e:	fb0c 0202 	mla	r2, ip, r2, r0
 801f4a2:	fb06 2303 	mla	r3, r6, r3, r2
 801f4a6:	095b      	lsrs	r3, r3, #5
 801f4a8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f4ac:	ea4e 0303 	orr.w	r3, lr, r3
 801f4b0:	800b      	strh	r3, [r1, #0]
 801f4b2:	b003      	add	sp, #12
 801f4b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f4b8:	af01      	add	r7, sp, #4
 801f4ba:	e78c      	b.n	801f3d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801f4bc:	ac01      	add	r4, sp, #4
 801f4be:	4627      	mov	r7, r4
 801f4c0:	e795      	b.n	801f3ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801f4c2:	ac01      	add	r4, sp, #4
 801f4c4:	e793      	b.n	801f3ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801f4c6:	ad01      	add	r5, sp, #4
 801f4c8:	e7a1      	b.n	801f40e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801f4ca:	ab01      	add	r3, sp, #4
 801f4cc:	461d      	mov	r5, r3
 801f4ce:	e7ab      	b.n	801f428 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801f4d0:	ab01      	add	r3, sp, #4
 801f4d2:	e7a9      	b.n	801f428 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801f4d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f4d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f4d8:	b08f      	sub	sp, #60	; 0x3c
 801f4da:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801f4de:	920c      	str	r2, [sp, #48]	; 0x30
 801f4e0:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801f4e2:	910a      	str	r1, [sp, #40]	; 0x28
 801f4e4:	9306      	str	r3, [sp, #24]
 801f4e6:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801f4ea:	900d      	str	r0, [sp, #52]	; 0x34
 801f4ec:	6850      	ldr	r0, [r2, #4]
 801f4ee:	6812      	ldr	r2, [r2, #0]
 801f4f0:	fb00 1303 	mla	r3, r0, r3, r1
 801f4f4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f4f8:	9307      	str	r3, [sp, #28]
 801f4fa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f4fc:	681b      	ldr	r3, [r3, #0]
 801f4fe:	9308      	str	r3, [sp, #32]
 801f500:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f502:	685c      	ldr	r4, [r3, #4]
 801f504:	3404      	adds	r4, #4
 801f506:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f508:	2b00      	cmp	r3, #0
 801f50a:	dc03      	bgt.n	801f514 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801f50c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f50e:	2b00      	cmp	r3, #0
 801f510:	f340 81d6 	ble.w	801f8c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801f514:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f516:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f51a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f51e:	1e48      	subs	r0, r1, #1
 801f520:	1e56      	subs	r6, r2, #1
 801f522:	9b06      	ldr	r3, [sp, #24]
 801f524:	2b00      	cmp	r3, #0
 801f526:	f340 80b7 	ble.w	801f698 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801f52a:	ea5f 472b 	movs.w	r7, fp, asr #16
 801f52e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801f532:	d406      	bmi.n	801f542 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f534:	4287      	cmp	r7, r0
 801f536:	da04      	bge.n	801f542 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f538:	2b00      	cmp	r3, #0
 801f53a:	db02      	blt.n	801f542 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f53c:	42b3      	cmp	r3, r6
 801f53e:	f2c0 80ac 	blt.w	801f69a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801f542:	3701      	adds	r7, #1
 801f544:	f100 809d 	bmi.w	801f682 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f548:	42b9      	cmp	r1, r7
 801f54a:	f2c0 809a 	blt.w	801f682 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f54e:	3301      	adds	r3, #1
 801f550:	f100 8097 	bmi.w	801f682 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f554:	429a      	cmp	r2, r3
 801f556:	f2c0 8094 	blt.w	801f682 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f55a:	9b06      	ldr	r3, [sp, #24]
 801f55c:	930b      	str	r3, [sp, #44]	; 0x2c
 801f55e:	9b07      	ldr	r3, [sp, #28]
 801f560:	9309      	str	r3, [sp, #36]	; 0x24
 801f562:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f564:	2b00      	cmp	r3, #0
 801f566:	f340 80b5 	ble.w	801f6d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f56a:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f56c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f56e:	68c7      	ldr	r7, [r0, #12]
 801f570:	6892      	ldr	r2, [r2, #8]
 801f572:	ea5f 402b 	movs.w	r0, fp, asr #16
 801f576:	ea4f 4625 	mov.w	r6, r5, asr #16
 801f57a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801f57e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801f582:	f100 80fb 	bmi.w	801f77c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f586:	f102 3cff 	add.w	ip, r2, #4294967295
 801f58a:	4560      	cmp	r0, ip
 801f58c:	f280 80f6 	bge.w	801f77c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f590:	2e00      	cmp	r6, #0
 801f592:	f2c0 80f3 	blt.w	801f77c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f596:	f107 3cff 	add.w	ip, r7, #4294967295
 801f59a:	4566      	cmp	r6, ip
 801f59c:	f280 80ee 	bge.w	801f77c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f5a0:	b212      	sxth	r2, r2
 801f5a2:	fb06 0002 	mla	r0, r6, r2, r0
 801f5a6:	9e08      	ldr	r6, [sp, #32]
 801f5a8:	1837      	adds	r7, r6, r0
 801f5aa:	5c30      	ldrb	r0, [r6, r0]
 801f5ac:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801f5b0:	eb04 0c08 	add.w	ip, r4, r8
 801f5b4:	2b00      	cmp	r3, #0
 801f5b6:	f000 80d3 	beq.w	801f760 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801f5ba:	787e      	ldrb	r6, [r7, #1]
 801f5bc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f5c0:	4426      	add	r6, r4
 801f5c2:	2900      	cmp	r1, #0
 801f5c4:	f000 80d4 	beq.w	801f770 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801f5c8:	18b8      	adds	r0, r7, r2
 801f5ca:	5cba      	ldrb	r2, [r7, r2]
 801f5cc:	7840      	ldrb	r0, [r0, #1]
 801f5ce:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f5d2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f5d6:	4422      	add	r2, r4
 801f5d8:	4420      	add	r0, r4
 801f5da:	b29b      	uxth	r3, r3
 801f5dc:	b289      	uxth	r1, r1
 801f5de:	fb03 f901 	mul.w	r9, r3, r1
 801f5e2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f5e6:	011b      	lsls	r3, r3, #4
 801f5e8:	b289      	uxth	r1, r1
 801f5ea:	78b7      	ldrb	r7, [r6, #2]
 801f5ec:	f89c a002 	ldrb.w	sl, [ip, #2]
 801f5f0:	f89c c001 	ldrb.w	ip, [ip, #1]
 801f5f4:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801f5f8:	eba3 0309 	sub.w	r3, r3, r9
 801f5fc:	b29b      	uxth	r3, r3
 801f5fe:	ebae 0e01 	sub.w	lr, lr, r1
 801f602:	fa1f fe8e 	uxth.w	lr, lr
 801f606:	435f      	muls	r7, r3
 801f608:	fb0e 770a 	mla	r7, lr, sl, r7
 801f60c:	f892 a002 	ldrb.w	sl, [r2, #2]
 801f610:	fb01 770a 	mla	r7, r1, sl, r7
 801f614:	f890 a002 	ldrb.w	sl, [r0, #2]
 801f618:	fb09 7a0a 	mla	sl, r9, sl, r7
 801f61c:	f814 7008 	ldrb.w	r7, [r4, r8]
 801f620:	f896 8000 	ldrb.w	r8, [r6]
 801f624:	7876      	ldrb	r6, [r6, #1]
 801f626:	fb03 f808 	mul.w	r8, r3, r8
 801f62a:	fb0e 8807 	mla	r8, lr, r7, r8
 801f62e:	7817      	ldrb	r7, [r2, #0]
 801f630:	fb01 8807 	mla	r8, r1, r7, r8
 801f634:	7807      	ldrb	r7, [r0, #0]
 801f636:	fb09 8707 	mla	r7, r9, r7, r8
 801f63a:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801f63e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f642:	ea47 070a 	orr.w	r7, r7, sl
 801f646:	4373      	muls	r3, r6
 801f648:	f892 a001 	ldrb.w	sl, [r2, #1]
 801f64c:	fb0e 330c 	mla	r3, lr, ip, r3
 801f650:	fb01 310a 	mla	r1, r1, sl, r3
 801f654:	f890 a001 	ldrb.w	sl, [r0, #1]
 801f658:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f65a:	fb09 1a0a 	mla	sl, r9, sl, r1
 801f65e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f662:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801f666:	ea47 070a 	orr.w	r7, r7, sl
 801f66a:	801f      	strh	r7, [r3, #0]
 801f66c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f66e:	3302      	adds	r3, #2
 801f670:	9309      	str	r3, [sp, #36]	; 0x24
 801f672:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801f674:	449b      	add	fp, r3
 801f676:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f678:	441d      	add	r5, r3
 801f67a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f67c:	3b01      	subs	r3, #1
 801f67e:	930b      	str	r3, [sp, #44]	; 0x2c
 801f680:	e76f      	b.n	801f562 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f682:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801f684:	449b      	add	fp, r3
 801f686:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f688:	441d      	add	r5, r3
 801f68a:	9b06      	ldr	r3, [sp, #24]
 801f68c:	3b01      	subs	r3, #1
 801f68e:	9306      	str	r3, [sp, #24]
 801f690:	9b07      	ldr	r3, [sp, #28]
 801f692:	3302      	adds	r3, #2
 801f694:	9307      	str	r3, [sp, #28]
 801f696:	e744      	b.n	801f522 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801f698:	d023      	beq.n	801f6e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801f69a:	9b06      	ldr	r3, [sp, #24]
 801f69c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801f69e:	3b01      	subs	r3, #1
 801f6a0:	fb00 b003 	mla	r0, r0, r3, fp
 801f6a4:	1400      	asrs	r0, r0, #16
 801f6a6:	f53f af58 	bmi.w	801f55a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f6aa:	3901      	subs	r1, #1
 801f6ac:	4288      	cmp	r0, r1
 801f6ae:	f6bf af54 	bge.w	801f55a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f6b2:	991c      	ldr	r1, [sp, #112]	; 0x70
 801f6b4:	fb01 5303 	mla	r3, r1, r3, r5
 801f6b8:	141b      	asrs	r3, r3, #16
 801f6ba:	f53f af4e 	bmi.w	801f55a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f6be:	3a01      	subs	r2, #1
 801f6c0:	4293      	cmp	r3, r2
 801f6c2:	f6bf af4a 	bge.w	801f55a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f6c6:	9b06      	ldr	r3, [sp, #24]
 801f6c8:	9309      	str	r3, [sp, #36]	; 0x24
 801f6ca:	9b07      	ldr	r3, [sp, #28]
 801f6cc:	930b      	str	r3, [sp, #44]	; 0x2c
 801f6ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f6d0:	2b00      	cmp	r3, #0
 801f6d2:	dc70      	bgt.n	801f7b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801f6d4:	9b06      	ldr	r3, [sp, #24]
 801f6d6:	9a07      	ldr	r2, [sp, #28]
 801f6d8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f6dc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f6e0:	9307      	str	r3, [sp, #28]
 801f6e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f6e4:	2b00      	cmp	r3, #0
 801f6e6:	f340 80eb 	ble.w	801f8c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801f6ea:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f6ee:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f6f2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f6f6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f6f8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f6fc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f700:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f704:	eef0 6a62 	vmov.f32	s13, s5
 801f708:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f70c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f710:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f714:	ee16 ba90 	vmov	fp, s13
 801f718:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f71c:	eef0 6a43 	vmov.f32	s13, s6
 801f720:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f724:	ee12 2a90 	vmov	r2, s5
 801f728:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f72c:	fb92 f3f3 	sdiv	r3, r2, r3
 801f730:	ee13 2a10 	vmov	r2, s6
 801f734:	931b      	str	r3, [sp, #108]	; 0x6c
 801f736:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f738:	fb92 f3f3 	sdiv	r3, r2, r3
 801f73c:	931c      	str	r3, [sp, #112]	; 0x70
 801f73e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f740:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801f742:	3b01      	subs	r3, #1
 801f744:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f748:	930a      	str	r3, [sp, #40]	; 0x28
 801f74a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f74c:	bf08      	it	eq
 801f74e:	4613      	moveq	r3, r2
 801f750:	ee16 5a90 	vmov	r5, s13
 801f754:	9306      	str	r3, [sp, #24]
 801f756:	eeb0 3a67 	vmov.f32	s6, s15
 801f75a:	eef0 2a47 	vmov.f32	s5, s14
 801f75e:	e6d2      	b.n	801f506 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801f760:	b149      	cbz	r1, 801f776 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801f762:	5cba      	ldrb	r2, [r7, r2]
 801f764:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f768:	4422      	add	r2, r4
 801f76a:	4660      	mov	r0, ip
 801f76c:	4666      	mov	r6, ip
 801f76e:	e734      	b.n	801f5da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801f770:	4660      	mov	r0, ip
 801f772:	4662      	mov	r2, ip
 801f774:	e731      	b.n	801f5da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801f776:	4660      	mov	r0, ip
 801f778:	4662      	mov	r2, ip
 801f77a:	e7f7      	b.n	801f76c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801f77c:	f110 0c01 	adds.w	ip, r0, #1
 801f780:	f53f af74 	bmi.w	801f66c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f784:	4562      	cmp	r2, ip
 801f786:	f6ff af71 	blt.w	801f66c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f78a:	f116 0c01 	adds.w	ip, r6, #1
 801f78e:	f53f af6d 	bmi.w	801f66c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f792:	4567      	cmp	r7, ip
 801f794:	f6ff af6a 	blt.w	801f66c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f798:	b23f      	sxth	r7, r7
 801f79a:	b212      	sxth	r2, r2
 801f79c:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801f7a0:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801f7a4:	9200      	str	r2, [sp, #0]
 801f7a6:	9701      	str	r7, [sp, #4]
 801f7a8:	4623      	mov	r3, r4
 801f7aa:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801f7ae:	980d      	ldr	r0, [sp, #52]	; 0x34
 801f7b0:	f7ff fde6 	bl	801f380 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801f7b4:	e75a      	b.n	801f66c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f7b6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f7b8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801f7bc:	ea4f 462b 	mov.w	r6, fp, asr #16
 801f7c0:	1428      	asrs	r0, r5, #16
 801f7c2:	fb02 6000 	mla	r0, r2, r0, r6
 801f7c6:	9e08      	ldr	r6, [sp, #32]
 801f7c8:	f816 8000 	ldrb.w	r8, [r6, r0]
 801f7cc:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801f7d0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801f7d4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801f7d8:	1837      	adds	r7, r6, r0
 801f7da:	eb04 0c08 	add.w	ip, r4, r8
 801f7de:	2b00      	cmp	r3, #0
 801f7e0:	d060      	beq.n	801f8a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801f7e2:	787e      	ldrb	r6, [r7, #1]
 801f7e4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f7e8:	4426      	add	r6, r4
 801f7ea:	2900      	cmp	r1, #0
 801f7ec:	d062      	beq.n	801f8b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801f7ee:	18b8      	adds	r0, r7, r2
 801f7f0:	5cba      	ldrb	r2, [r7, r2]
 801f7f2:	7840      	ldrb	r0, [r0, #1]
 801f7f4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f7f8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f7fc:	4422      	add	r2, r4
 801f7fe:	4420      	add	r0, r4
 801f800:	b29b      	uxth	r3, r3
 801f802:	b289      	uxth	r1, r1
 801f804:	fb03 f901 	mul.w	r9, r3, r1
 801f808:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f80c:	011b      	lsls	r3, r3, #4
 801f80e:	b289      	uxth	r1, r1
 801f810:	78b7      	ldrb	r7, [r6, #2]
 801f812:	f89c a002 	ldrb.w	sl, [ip, #2]
 801f816:	f89c c001 	ldrb.w	ip, [ip, #1]
 801f81a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801f81e:	eba3 0309 	sub.w	r3, r3, r9
 801f822:	b29b      	uxth	r3, r3
 801f824:	ebae 0e01 	sub.w	lr, lr, r1
 801f828:	fa1f fe8e 	uxth.w	lr, lr
 801f82c:	435f      	muls	r7, r3
 801f82e:	fb0e 770a 	mla	r7, lr, sl, r7
 801f832:	f892 a002 	ldrb.w	sl, [r2, #2]
 801f836:	fb01 770a 	mla	r7, r1, sl, r7
 801f83a:	f890 a002 	ldrb.w	sl, [r0, #2]
 801f83e:	fb09 7a0a 	mla	sl, r9, sl, r7
 801f842:	f814 7008 	ldrb.w	r7, [r4, r8]
 801f846:	f896 8000 	ldrb.w	r8, [r6]
 801f84a:	7876      	ldrb	r6, [r6, #1]
 801f84c:	fb03 f808 	mul.w	r8, r3, r8
 801f850:	fb0e 8807 	mla	r8, lr, r7, r8
 801f854:	7817      	ldrb	r7, [r2, #0]
 801f856:	fb01 8807 	mla	r8, r1, r7, r8
 801f85a:	7807      	ldrb	r7, [r0, #0]
 801f85c:	fb09 8707 	mla	r7, r9, r7, r8
 801f860:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801f864:	4373      	muls	r3, r6
 801f866:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f86a:	7856      	ldrb	r6, [r2, #1]
 801f86c:	ea47 070a 	orr.w	r7, r7, sl
 801f870:	fb0e 330c 	mla	r3, lr, ip, r3
 801f874:	f890 a001 	ldrb.w	sl, [r0, #1]
 801f878:	fb01 3306 	mla	r3, r1, r6, r3
 801f87c:	fb09 3a0a 	mla	sl, r9, sl, r3
 801f880:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f884:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f886:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801f88a:	ea47 070a 	orr.w	r7, r7, sl
 801f88e:	f823 7b02 	strh.w	r7, [r3], #2
 801f892:	930b      	str	r3, [sp, #44]	; 0x2c
 801f894:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801f896:	449b      	add	fp, r3
 801f898:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f89a:	441d      	add	r5, r3
 801f89c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f89e:	3b01      	subs	r3, #1
 801f8a0:	9309      	str	r3, [sp, #36]	; 0x24
 801f8a2:	e714      	b.n	801f6ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801f8a4:	b149      	cbz	r1, 801f8ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801f8a6:	5cba      	ldrb	r2, [r7, r2]
 801f8a8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f8ac:	4422      	add	r2, r4
 801f8ae:	4660      	mov	r0, ip
 801f8b0:	4666      	mov	r6, ip
 801f8b2:	e7a5      	b.n	801f800 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801f8b4:	4660      	mov	r0, ip
 801f8b6:	4662      	mov	r2, ip
 801f8b8:	e7a2      	b.n	801f800 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801f8ba:	4660      	mov	r0, ip
 801f8bc:	4662      	mov	r2, ip
 801f8be:	e7f7      	b.n	801f8b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801f8c0:	b00f      	add	sp, #60	; 0x3c
 801f8c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f8c6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801f8c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f8ca:	b085      	sub	sp, #20
 801f8cc:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801f8d0:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801f8d4:	9102      	str	r1, [sp, #8]
 801f8d6:	2c00      	cmp	r4, #0
 801f8d8:	fb04 710c 	mla	r1, r4, ip, r7
 801f8dc:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801f8e0:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801f8e4:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801f8e8:	eb02 0e01 	add.w	lr, r2, r1
 801f8ec:	f2c0 8122 	blt.w	801fb34 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801f8f0:	45a0      	cmp	r8, r4
 801f8f2:	f340 811f 	ble.w	801fb34 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801f8f6:	2f00      	cmp	r7, #0
 801f8f8:	f2c0 811a 	blt.w	801fb30 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801f8fc:	45bc      	cmp	ip, r7
 801f8fe:	f340 8117 	ble.w	801fb30 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801f902:	5c52      	ldrb	r2, [r2, r1]
 801f904:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801f908:	1c7a      	adds	r2, r7, #1
 801f90a:	f100 8116 	bmi.w	801fb3a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801f90e:	4594      	cmp	ip, r2
 801f910:	f340 8113 	ble.w	801fb3a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801f914:	2e00      	cmp	r6, #0
 801f916:	f000 8112 	beq.w	801fb3e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801f91a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f91e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801f922:	3401      	adds	r4, #1
 801f924:	f100 810f 	bmi.w	801fb46 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801f928:	45a0      	cmp	r8, r4
 801f92a:	f340 810c 	ble.w	801fb46 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801f92e:	2800      	cmp	r0, #0
 801f930:	f000 810c 	beq.w	801fb4c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801f934:	2f00      	cmp	r7, #0
 801f936:	f2c0 8104 	blt.w	801fb42 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801f93a:	45bc      	cmp	ip, r7
 801f93c:	f340 8101 	ble.w	801fb42 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801f940:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801f944:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801f948:	3701      	adds	r7, #1
 801f94a:	f100 8102 	bmi.w	801fb52 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801f94e:	45bc      	cmp	ip, r7
 801f950:	f340 80ff 	ble.w	801fb52 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801f954:	2e00      	cmp	r6, #0
 801f956:	f000 80fe 	beq.w	801fb56 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801f95a:	44f4      	add	ip, lr
 801f95c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801f960:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801f964:	b2b6      	uxth	r6, r6
 801f966:	b280      	uxth	r0, r0
 801f968:	fb00 fe06 	mul.w	lr, r0, r6
 801f96c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801f970:	0136      	lsls	r6, r6, #4
 801f972:	eba6 070e 	sub.w	r7, r6, lr
 801f976:	b280      	uxth	r0, r0
 801f978:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801f97c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801f980:	b2bf      	uxth	r7, r7
 801f982:	1a1b      	subs	r3, r3, r0
 801f984:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801f988:	b29b      	uxth	r3, r3
 801f98a:	fb0a f607 	mul.w	r6, sl, r7
 801f98e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801f992:	fb0b 6603 	mla	r6, fp, r3, r6
 801f996:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801f99a:	fb00 6609 	mla	r6, r0, r9, r6
 801f99e:	fb0e 6608 	mla	r6, lr, r8, r6
 801f9a2:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f9a6:	9600      	str	r6, [sp, #0]
 801f9a8:	2e00      	cmp	r6, #0
 801f9aa:	f000 80be 	beq.w	801fb2a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801f9ae:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f9b2:	fb0b fc0c 	mul.w	ip, fp, ip
 801f9b6:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801f9ba:	fb0b f505 	mul.w	r5, fp, r5
 801f9be:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801f9c2:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801f9c6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801f9ca:	44dc      	add	ip, fp
 801f9cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f9d0:	9501      	str	r5, [sp, #4]
 801f9d2:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801f9d6:	9503      	str	r5, [sp, #12]
 801f9d8:	9d01      	ldr	r5, [sp, #4]
 801f9da:	9e02      	ldr	r6, [sp, #8]
 801f9dc:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801f9e0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801f9e4:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801f9e8:	fb0a fc0c 	mul.w	ip, sl, ip
 801f9ec:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801f9f0:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801f9f4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801f9f8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801f9fc:	4465      	add	r5, ip
 801f9fe:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801fa02:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801fa06:	fb09 fc0c 	mul.w	ip, r9, ip
 801fa0a:	fb09 f904 	mul.w	r9, r9, r4
 801fa0e:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801fa12:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801fa16:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801fa1a:	fb08 f404 	mul.w	r4, r8, r4
 801fa1e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801fa22:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801fa26:	fb08 f802 	mul.w	r8, r8, r2
 801fa2a:	fb0a fa01 	mul.w	sl, sl, r1
 801fa2e:	0a22      	lsrs	r2, r4, #8
 801fa30:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801fa34:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801fa38:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801fa3c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801fa40:	4414      	add	r4, r2
 801fa42:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801fa46:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801fa4a:	0a2d      	lsrs	r5, r5, #8
 801fa4c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801fa50:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801fa54:	9a03      	ldr	r2, [sp, #12]
 801fa56:	8836      	ldrh	r6, [r6, #0]
 801fa58:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801fa5c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801fa60:	437d      	muls	r5, r7
 801fa62:	4461      	add	r1, ip
 801fa64:	0a24      	lsrs	r4, r4, #8
 801fa66:	fb02 5503 	mla	r5, r2, r3, r5
 801fa6a:	0a09      	lsrs	r1, r1, #8
 801fa6c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801fa70:	fb04 540e 	mla	r4, r4, lr, r5
 801fa74:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801fa78:	fb01 4100 	mla	r1, r1, r0, r4
 801fa7c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fa80:	0a09      	lsrs	r1, r1, #8
 801fa82:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fa86:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801fa8a:	fb07 f70a 	mul.w	r7, r7, sl
 801fa8e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801fa92:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801fa96:	fb03 7101 	mla	r1, r3, r1, r7
 801fa9a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fa9e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801faa2:	fb0e 1e08 	mla	lr, lr, r8, r1
 801faa6:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801faaa:	fb00 e101 	mla	r1, r0, r1, lr
 801faae:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801fab2:	9a00      	ldr	r2, [sp, #0]
 801fab4:	b287      	uxth	r7, r0
 801fab6:	437a      	muls	r2, r7
 801fab8:	0a09      	lsrs	r1, r1, #8
 801faba:	1c53      	adds	r3, r2, #1
 801fabc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801fac0:	4321      	orrs	r1, r4
 801fac2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fac6:	1235      	asrs	r5, r6, #8
 801fac8:	0c0a      	lsrs	r2, r1, #16
 801faca:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801face:	b2db      	uxtb	r3, r3
 801fad0:	fb12 f207 	smulbb	r2, r2, r7
 801fad4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801fad8:	fb05 2503 	mla	r5, r5, r3, r2
 801fadc:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801fae0:	10f2      	asrs	r2, r6, #3
 801fae2:	b2c8      	uxtb	r0, r1
 801fae4:	00f6      	lsls	r6, r6, #3
 801fae6:	fb14 f407 	smulbb	r4, r4, r7
 801faea:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801faee:	b2f6      	uxtb	r6, r6
 801faf0:	fb10 f007 	smulbb	r0, r0, r7
 801faf4:	fb02 4203 	mla	r2, r2, r3, r4
 801faf8:	b2ad      	uxth	r5, r5
 801fafa:	fb06 0303 	mla	r3, r6, r3, r0
 801fafe:	b299      	uxth	r1, r3
 801fb00:	b294      	uxth	r4, r2
 801fb02:	1c6b      	adds	r3, r5, #1
 801fb04:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801fb08:	1c62      	adds	r2, r4, #1
 801fb0a:	1c4b      	adds	r3, r1, #1
 801fb0c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801fb10:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801fb14:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801fb18:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fb1c:	0952      	lsrs	r2, r2, #5
 801fb1e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fb22:	432b      	orrs	r3, r5
 801fb24:	4313      	orrs	r3, r2
 801fb26:	9a02      	ldr	r2, [sp, #8]
 801fb28:	8013      	strh	r3, [r2, #0]
 801fb2a:	b005      	add	sp, #20
 801fb2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fb30:	2500      	movs	r5, #0
 801fb32:	e6e9      	b.n	801f908 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801fb34:	2100      	movs	r1, #0
 801fb36:	460d      	mov	r5, r1
 801fb38:	e6f3      	b.n	801f922 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801fb3a:	2100      	movs	r1, #0
 801fb3c:	e6f1      	b.n	801f922 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801fb3e:	4631      	mov	r1, r6
 801fb40:	e6ef      	b.n	801f922 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801fb42:	2400      	movs	r4, #0
 801fb44:	e700      	b.n	801f948 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801fb46:	2200      	movs	r2, #0
 801fb48:	4614      	mov	r4, r2
 801fb4a:	e70b      	b.n	801f964 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801fb4c:	4602      	mov	r2, r0
 801fb4e:	4604      	mov	r4, r0
 801fb50:	e708      	b.n	801f964 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801fb52:	2200      	movs	r2, #0
 801fb54:	e706      	b.n	801f964 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801fb56:	4632      	mov	r2, r6
 801fb58:	e704      	b.n	801f964 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801fb5a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fb5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb5e:	b09f      	sub	sp, #124	; 0x7c
 801fb60:	921b      	str	r2, [sp, #108]	; 0x6c
 801fb62:	9309      	str	r3, [sp, #36]	; 0x24
 801fb64:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801fb66:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801fb6a:	931c      	str	r3, [sp, #112]	; 0x70
 801fb6c:	9119      	str	r1, [sp, #100]	; 0x64
 801fb6e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801fb72:	901d      	str	r0, [sp, #116]	; 0x74
 801fb74:	6850      	ldr	r0, [r2, #4]
 801fb76:	6812      	ldr	r2, [r2, #0]
 801fb78:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801fb7a:	fb00 1303 	mla	r3, r0, r3, r1
 801fb7e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fb82:	930c      	str	r3, [sp, #48]	; 0x30
 801fb84:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801fb86:	681b      	ldr	r3, [r3, #0]
 801fb88:	9312      	str	r3, [sp, #72]	; 0x48
 801fb8a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801fb8c:	685e      	ldr	r6, [r3, #4]
 801fb8e:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801fb92:	930d      	str	r3, [sp, #52]	; 0x34
 801fb94:	3604      	adds	r6, #4
 801fb96:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801fb98:	2b00      	cmp	r3, #0
 801fb9a:	dc03      	bgt.n	801fba4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801fb9c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fb9e:	2b00      	cmp	r3, #0
 801fba0:	f340 8388 	ble.w	80202b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801fba4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801fba6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fbaa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fbae:	1e48      	subs	r0, r1, #1
 801fbb0:	1e57      	subs	r7, r2, #1
 801fbb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fbb4:	2b00      	cmp	r3, #0
 801fbb6:	f340 8195 	ble.w	801fee4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fbba:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801fbbc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801fbc0:	ea4f 4325 	mov.w	r3, r5, asr #16
 801fbc4:	d406      	bmi.n	801fbd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fbc6:	4584      	cmp	ip, r0
 801fbc8:	da04      	bge.n	801fbd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fbca:	2b00      	cmp	r3, #0
 801fbcc:	db02      	blt.n	801fbd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fbce:	42bb      	cmp	r3, r7
 801fbd0:	f2c0 8189 	blt.w	801fee6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801fbd4:	f11c 0c01 	adds.w	ip, ip, #1
 801fbd8:	f100 8177 	bmi.w	801feca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fbdc:	4561      	cmp	r1, ip
 801fbde:	f2c0 8174 	blt.w	801feca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fbe2:	3301      	adds	r3, #1
 801fbe4:	f100 8171 	bmi.w	801feca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fbe8:	429a      	cmp	r2, r3
 801fbea:	f2c0 816e 	blt.w	801feca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fbee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fbf0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801fbf2:	931a      	str	r3, [sp, #104]	; 0x68
 801fbf4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801fbf6:	2b00      	cmp	r3, #0
 801fbf8:	f340 8193 	ble.w	801ff22 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801fbfc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801fbfe:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801fc02:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801fc04:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801fc08:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801fc0a:	141b      	asrs	r3, r3, #16
 801fc0c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801fc10:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fc14:	f100 81d6 	bmi.w	801ffc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801fc18:	f100 38ff 	add.w	r8, r0, #4294967295
 801fc1c:	4543      	cmp	r3, r8
 801fc1e:	f280 81d1 	bge.w	801ffc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801fc22:	f1bc 0f00 	cmp.w	ip, #0
 801fc26:	f2c0 81cd 	blt.w	801ffc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801fc2a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801fc2e:	45c4      	cmp	ip, r8
 801fc30:	f280 81c8 	bge.w	801ffc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801fc34:	b200      	sxth	r0, r0
 801fc36:	fb0c 3300 	mla	r3, ip, r0, r3
 801fc3a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801fc3c:	eb04 0803 	add.w	r8, r4, r3
 801fc40:	5ce3      	ldrb	r3, [r4, r3]
 801fc42:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801fc46:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801fc4a:	2a00      	cmp	r2, #0
 801fc4c:	f000 81af 	beq.w	801ffae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801fc50:	f898 c001 	ldrb.w	ip, [r8, #1]
 801fc54:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801fc58:	940e      	str	r4, [sp, #56]	; 0x38
 801fc5a:	0e24      	lsrs	r4, r4, #24
 801fc5c:	9415      	str	r4, [sp, #84]	; 0x54
 801fc5e:	b179      	cbz	r1, 801fc80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801fc60:	eb08 0c00 	add.w	ip, r8, r0
 801fc64:	f818 0000 	ldrb.w	r0, [r8, r0]
 801fc68:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801fc6c:	900a      	str	r0, [sp, #40]	; 0x28
 801fc6e:	0e00      	lsrs	r0, r0, #24
 801fc70:	9013      	str	r0, [sp, #76]	; 0x4c
 801fc72:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801fc76:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801fc7a:	900f      	str	r0, [sp, #60]	; 0x3c
 801fc7c:	0e00      	lsrs	r0, r0, #24
 801fc7e:	9016      	str	r0, [sp, #88]	; 0x58
 801fc80:	b292      	uxth	r2, r2
 801fc82:	b289      	uxth	r1, r1
 801fc84:	fb02 f901 	mul.w	r9, r2, r1
 801fc88:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fc8c:	0112      	lsls	r2, r2, #4
 801fc8e:	eba2 0809 	sub.w	r8, r2, r9
 801fc92:	b289      	uxth	r1, r1
 801fc94:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801fc98:	9815      	ldr	r0, [sp, #84]	; 0x54
 801fc9a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801fc9c:	fa1f f888 	uxth.w	r8, r8
 801fca0:	1a52      	subs	r2, r2, r1
 801fca2:	b292      	uxth	r2, r2
 801fca4:	fb08 f000 	mul.w	r0, r8, r0
 801fca8:	fb02 000e 	mla	r0, r2, lr, r0
 801fcac:	fb01 0004 	mla	r0, r1, r4, r0
 801fcb0:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801fcb2:	fb09 0004 	mla	r0, r9, r4, r0
 801fcb6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801fcba:	2800      	cmp	r0, #0
 801fcbc:	f000 80fa 	beq.w	801feb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801fcc0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801fcc4:	d01b      	beq.n	801fcfe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fcc6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801fcca:	fb0e fa0a 	mul.w	sl, lr, sl
 801fcce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801fcd2:	fb0e fe03 	mul.w	lr, lr, r3
 801fcd6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801fcda:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801fcde:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801fce2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801fce6:	4453      	add	r3, sl
 801fce8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801fcec:	0a1b      	lsrs	r3, r3, #8
 801fcee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fcf2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801fcf6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801fcfa:	ea43 030c 	orr.w	r3, r3, ip
 801fcfe:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fd00:	2cff      	cmp	r4, #255	; 0xff
 801fd02:	d021      	beq.n	801fd48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801fd04:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fd06:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801fd0a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fd0c:	fb04 fb0b 	mul.w	fp, r4, fp
 801fd10:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fd12:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fd16:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fd18:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fd1c:	fb04 fa0a 	mul.w	sl, r4, sl
 801fd20:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fd24:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801fd28:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801fd2c:	44de      	add	lr, fp
 801fd2e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fd32:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fd36:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fd3a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fd3e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fd42:	ea4e 040a 	orr.w	r4, lr, sl
 801fd46:	940e      	str	r4, [sp, #56]	; 0x38
 801fd48:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801fd4a:	2cff      	cmp	r4, #255	; 0xff
 801fd4c:	d021      	beq.n	801fd92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801fd4e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fd50:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801fd54:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801fd56:	fb04 fb0b 	mul.w	fp, r4, fp
 801fd5a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fd5c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fd60:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801fd62:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fd66:	fb04 fa0a 	mul.w	sl, r4, sl
 801fd6a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fd6e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801fd72:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801fd76:	44de      	add	lr, fp
 801fd78:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fd7c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fd80:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fd84:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fd88:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fd8c:	ea4e 040a 	orr.w	r4, lr, sl
 801fd90:	940a      	str	r4, [sp, #40]	; 0x28
 801fd92:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801fd94:	2cff      	cmp	r4, #255	; 0xff
 801fd96:	d021      	beq.n	801fddc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801fd98:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801fd9a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801fd9e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801fda0:	fb04 fb0b 	mul.w	fp, r4, fp
 801fda4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801fda6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fdaa:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801fdac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fdb0:	fb04 fa0a 	mul.w	sl, r4, sl
 801fdb4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fdb8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801fdbc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801fdc0:	44de      	add	lr, fp
 801fdc2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fdc6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fdca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fdce:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801fdd2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fdd6:	ea4e 040a 	orr.w	r4, lr, sl
 801fdda:	940f      	str	r4, [sp, #60]	; 0x3c
 801fddc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fdde:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801fde2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fde4:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801fde8:	fb08 fc0c 	mul.w	ip, r8, ip
 801fdec:	fb02 cc0e 	mla	ip, r2, lr, ip
 801fdf0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801fdf4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801fdf6:	fb01 cc0e 	mla	ip, r1, lr, ip
 801fdfa:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801fdfe:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fe00:	fb09 cc0e 	mla	ip, r9, lr, ip
 801fe04:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801fe08:	fb08 f80e 	mul.w	r8, r8, lr
 801fe0c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801fe10:	fb02 8303 	mla	r3, r2, r3, r8
 801fe14:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fe16:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fe18:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801fe1c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801fe1e:	fb01 330a 	mla	r3, r1, sl, r3
 801fe22:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801fe26:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801fe28:	fb09 3901 	mla	r9, r9, r1, r3
 801fe2c:	4342      	muls	r2, r0
 801fe2e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fe32:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fe36:	883b      	ldrh	r3, [r7, #0]
 801fe38:	1c50      	adds	r0, r2, #1
 801fe3a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fe3e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801fe42:	ea4c 0c09 	orr.w	ip, ip, r9
 801fe46:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801fe4a:	1219      	asrs	r1, r3, #8
 801fe4c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801fe50:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801fe54:	b2c0      	uxtb	r0, r0
 801fe56:	fb12 f204 	smulbb	r2, r2, r4
 801fe5a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fe5e:	fb01 2100 	mla	r1, r1, r0, r2
 801fe62:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801fe66:	10da      	asrs	r2, r3, #3
 801fe68:	fa5f fc8c 	uxtb.w	ip, ip
 801fe6c:	00db      	lsls	r3, r3, #3
 801fe6e:	fb1c fc04 	smulbb	ip, ip, r4
 801fe72:	b2db      	uxtb	r3, r3
 801fe74:	b289      	uxth	r1, r1
 801fe76:	fb03 c300 	mla	r3, r3, r0, ip
 801fe7a:	fa1f fc83 	uxth.w	ip, r3
 801fe7e:	1c4b      	adds	r3, r1, #1
 801fe80:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801fe84:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fe88:	fb1e fe04 	smulbb	lr, lr, r4
 801fe8c:	f10c 0301 	add.w	r3, ip, #1
 801fe90:	fb02 e200 	mla	r2, r2, r0, lr
 801fe94:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801fe98:	b292      	uxth	r2, r2
 801fe9a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801fe9e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fea2:	430b      	orrs	r3, r1
 801fea4:	1c51      	adds	r1, r2, #1
 801fea6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801feaa:	0952      	lsrs	r2, r2, #5
 801feac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801feb0:	4313      	orrs	r3, r2
 801feb2:	803b      	strh	r3, [r7, #0]
 801feb4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801feb6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801feb8:	441a      	add	r2, r3
 801feba:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801febc:	9229      	str	r2, [sp, #164]	; 0xa4
 801febe:	441d      	add	r5, r3
 801fec0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801fec2:	3b01      	subs	r3, #1
 801fec4:	3702      	adds	r7, #2
 801fec6:	931a      	str	r3, [sp, #104]	; 0x68
 801fec8:	e694      	b.n	801fbf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801feca:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801fecc:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801fece:	441c      	add	r4, r3
 801fed0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801fed2:	9429      	str	r4, [sp, #164]	; 0xa4
 801fed4:	441d      	add	r5, r3
 801fed6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fed8:	3b01      	subs	r3, #1
 801feda:	9309      	str	r3, [sp, #36]	; 0x24
 801fedc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fede:	3302      	adds	r3, #2
 801fee0:	930c      	str	r3, [sp, #48]	; 0x30
 801fee2:	e666      	b.n	801fbb2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801fee4:	d024      	beq.n	801ff30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801fee6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fee8:	982b      	ldr	r0, [sp, #172]	; 0xac
 801feea:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801feec:	3b01      	subs	r3, #1
 801feee:	fb00 4003 	mla	r0, r0, r3, r4
 801fef2:	1400      	asrs	r0, r0, #16
 801fef4:	f53f ae7b 	bmi.w	801fbee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fef8:	3901      	subs	r1, #1
 801fefa:	4288      	cmp	r0, r1
 801fefc:	f6bf ae77 	bge.w	801fbee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ff00:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801ff02:	fb01 5303 	mla	r3, r1, r3, r5
 801ff06:	141b      	asrs	r3, r3, #16
 801ff08:	f53f ae71 	bmi.w	801fbee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ff0c:	3a01      	subs	r2, #1
 801ff0e:	4293      	cmp	r3, r2
 801ff10:	f6bf ae6d 	bge.w	801fbee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ff14:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801ff18:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801ff1c:	f1bb 0f00 	cmp.w	fp, #0
 801ff20:	dc70      	bgt.n	8020004 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801ff22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ff24:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ff28:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ff2a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ff2e:	930c      	str	r3, [sp, #48]	; 0x30
 801ff30:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801ff32:	2b00      	cmp	r3, #0
 801ff34:	f340 81be 	ble.w	80202b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801ff38:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ff3c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ff40:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ff44:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ff46:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ff4a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ff4e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ff52:	eef0 6a62 	vmov.f32	s13, s5
 801ff56:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ff5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ff5e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ff62:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801ff66:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ff6a:	eef0 6a43 	vmov.f32	s13, s6
 801ff6e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ff72:	ee12 2a90 	vmov	r2, s5
 801ff76:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ff7a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ff7e:	ee13 2a10 	vmov	r2, s6
 801ff82:	932b      	str	r3, [sp, #172]	; 0xac
 801ff84:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ff86:	fb92 f3f3 	sdiv	r3, r2, r3
 801ff8a:	932c      	str	r3, [sp, #176]	; 0xb0
 801ff8c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801ff8e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801ff90:	3b01      	subs	r3, #1
 801ff92:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ff96:	9319      	str	r3, [sp, #100]	; 0x64
 801ff98:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ff9a:	bf08      	it	eq
 801ff9c:	4613      	moveq	r3, r2
 801ff9e:	ee16 5a90 	vmov	r5, s13
 801ffa2:	9309      	str	r3, [sp, #36]	; 0x24
 801ffa4:	eeb0 3a67 	vmov.f32	s6, s15
 801ffa8:	eef0 2a47 	vmov.f32	s5, s14
 801ffac:	e5f3      	b.n	801fb96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ffae:	2900      	cmp	r1, #0
 801ffb0:	f43f ae66 	beq.w	801fc80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ffb4:	f818 0000 	ldrb.w	r0, [r8, r0]
 801ffb8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ffbc:	900a      	str	r0, [sp, #40]	; 0x28
 801ffbe:	0e00      	lsrs	r0, r0, #24
 801ffc0:	9013      	str	r0, [sp, #76]	; 0x4c
 801ffc2:	e65d      	b.n	801fc80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ffc4:	f113 0801 	adds.w	r8, r3, #1
 801ffc8:	f53f af74 	bmi.w	801feb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ffcc:	4540      	cmp	r0, r8
 801ffce:	f6ff af71 	blt.w	801feb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ffd2:	f11c 0801 	adds.w	r8, ip, #1
 801ffd6:	f53f af6d 	bmi.w	801feb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ffda:	45c6      	cmp	lr, r8
 801ffdc:	f6ff af6a 	blt.w	801feb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ffe0:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801ffe2:	9302      	str	r3, [sp, #8]
 801ffe4:	b200      	sxth	r0, r0
 801ffe6:	fa0f f38e 	sxth.w	r3, lr
 801ffea:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801ffee:	e9cd c203 	strd	ip, r2, [sp, #12]
 801fff2:	9301      	str	r3, [sp, #4]
 801fff4:	9000      	str	r0, [sp, #0]
 801fff6:	4633      	mov	r3, r6
 801fff8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801fffa:	981d      	ldr	r0, [sp, #116]	; 0x74
 801fffc:	4639      	mov	r1, r7
 801fffe:	f7ff fc62 	bl	801f8c6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8020002:	e757      	b.n	801feb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020004:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020006:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020008:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802000c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802000e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020012:	1427      	asrs	r7, r4, #16
 8020014:	142b      	asrs	r3, r5, #16
 8020016:	fb01 7303 	mla	r3, r1, r3, r7
 802001a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802001c:	18e7      	adds	r7, r4, r3
 802001e:	5ce3      	ldrb	r3, [r4, r3]
 8020020:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020024:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020028:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802002c:	2a00      	cmp	r2, #0
 802002e:	f000 8137 	beq.w	80202a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8020032:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020036:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802003a:	9410      	str	r4, [sp, #64]	; 0x40
 802003c:	0e24      	lsrs	r4, r4, #24
 802003e:	9417      	str	r4, [sp, #92]	; 0x5c
 8020040:	b170      	cbz	r0, 8020060 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020042:	eb07 0e01 	add.w	lr, r7, r1
 8020046:	5c79      	ldrb	r1, [r7, r1]
 8020048:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802004c:	910b      	str	r1, [sp, #44]	; 0x2c
 802004e:	0e09      	lsrs	r1, r1, #24
 8020050:	9114      	str	r1, [sp, #80]	; 0x50
 8020052:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020056:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802005a:	9111      	str	r1, [sp, #68]	; 0x44
 802005c:	0e09      	lsrs	r1, r1, #24
 802005e:	9118      	str	r1, [sp, #96]	; 0x60
 8020060:	b292      	uxth	r2, r2
 8020062:	b280      	uxth	r0, r0
 8020064:	fb02 f800 	mul.w	r8, r2, r0
 8020068:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802006c:	0112      	lsls	r2, r2, #4
 802006e:	eba2 0e08 	sub.w	lr, r2, r8
 8020072:	b280      	uxth	r0, r0
 8020074:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020078:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802007a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802007c:	fa1f fe8e 	uxth.w	lr, lr
 8020080:	1a12      	subs	r2, r2, r0
 8020082:	b292      	uxth	r2, r2
 8020084:	fb0e f101 	mul.w	r1, lr, r1
 8020088:	fb02 110c 	mla	r1, r2, ip, r1
 802008c:	fb00 1104 	mla	r1, r0, r4, r1
 8020090:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020092:	fb08 1104 	mla	r1, r8, r4, r1
 8020096:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802009a:	2900      	cmp	r1, #0
 802009c:	f000 80f5 	beq.w	802028a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80200a0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80200a4:	d019      	beq.n	80200da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 80200a6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80200aa:	fb0c fa0a 	mul.w	sl, ip, sl
 80200ae:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80200b2:	fb0c fc03 	mul.w	ip, ip, r3
 80200b6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80200ba:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80200be:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80200c2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80200c6:	4453      	add	r3, sl
 80200c8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80200cc:	0a1b      	lsrs	r3, r3, #8
 80200ce:	0a3f      	lsrs	r7, r7, #8
 80200d0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80200d4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80200d8:	433b      	orrs	r3, r7
 80200da:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80200dc:	2cff      	cmp	r4, #255	; 0xff
 80200de:	d020      	beq.n	8020122 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 80200e0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80200e2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80200e6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80200e8:	4367      	muls	r7, r4
 80200ea:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80200ec:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80200f0:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80200f2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80200f6:	fb04 fa0a 	mul.w	sl, r4, sl
 80200fa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80200fe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020102:	44bc      	add	ip, r7
 8020104:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020108:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802010c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020110:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020114:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020118:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802011c:	ea4c 040a 	orr.w	r4, ip, sl
 8020120:	9410      	str	r4, [sp, #64]	; 0x40
 8020122:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020124:	2cff      	cmp	r4, #255	; 0xff
 8020126:	d020      	beq.n	802016a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8020128:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802012a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802012e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020130:	4367      	muls	r7, r4
 8020132:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020134:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020138:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802013a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802013e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020142:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020146:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802014a:	44bc      	add	ip, r7
 802014c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020150:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020154:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020158:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802015c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020160:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020164:	ea4c 040a 	orr.w	r4, ip, sl
 8020168:	940b      	str	r4, [sp, #44]	; 0x2c
 802016a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802016c:	2cff      	cmp	r4, #255	; 0xff
 802016e:	d020      	beq.n	80201b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8020170:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020172:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020176:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020178:	4367      	muls	r7, r4
 802017a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802017c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020180:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020182:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020186:	fb04 fa0a 	mul.w	sl, r4, sl
 802018a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802018e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020192:	44bc      	add	ip, r7
 8020194:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020198:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802019c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80201a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80201a4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80201a8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80201ac:	ea4c 040a 	orr.w	r4, ip, sl
 80201b0:	9411      	str	r4, [sp, #68]	; 0x44
 80201b2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80201b4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80201b8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80201ba:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80201be:	fb0e f707 	mul.w	r7, lr, r7
 80201c2:	fb02 770c 	mla	r7, r2, ip, r7
 80201c6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80201ca:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80201cc:	fb00 770c 	mla	r7, r0, ip, r7
 80201d0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80201d4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80201d6:	fb08 770c 	mla	r7, r8, ip, r7
 80201da:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80201de:	fb0e fe0c 	mul.w	lr, lr, ip
 80201e2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80201e6:	fb02 e303 	mla	r3, r2, r3, lr
 80201ea:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80201ec:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80201ee:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80201f2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80201f4:	fb00 330a 	mla	r3, r0, sl, r3
 80201f8:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80201fc:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020200:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020202:	f8b9 0000 	ldrh.w	r0, [r9]
 8020206:	434b      	muls	r3, r1
 8020208:	0a3f      	lsrs	r7, r7, #8
 802020a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802020e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020212:	1c59      	adds	r1, r3, #1
 8020214:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020218:	ea47 070c 	orr.w	r7, r7, ip
 802021c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020220:	1202      	asrs	r2, r0, #8
 8020222:	0c3b      	lsrs	r3, r7, #16
 8020224:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8020228:	b2c9      	uxtb	r1, r1
 802022a:	fb13 f304 	smulbb	r3, r3, r4
 802022e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020232:	fb02 3201 	mla	r2, r2, r1, r3
 8020236:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802023a:	10c3      	asrs	r3, r0, #3
 802023c:	b2ff      	uxtb	r7, r7
 802023e:	00c0      	lsls	r0, r0, #3
 8020240:	b292      	uxth	r2, r2
 8020242:	fb1c fc04 	smulbb	ip, ip, r4
 8020246:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802024a:	b2c0      	uxtb	r0, r0
 802024c:	fb17 f704 	smulbb	r7, r7, r4
 8020250:	fb03 c301 	mla	r3, r3, r1, ip
 8020254:	fb00 7001 	mla	r0, r0, r1, r7
 8020258:	f102 0c01 	add.w	ip, r2, #1
 802025c:	b280      	uxth	r0, r0
 802025e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8020262:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8020266:	1c42      	adds	r2, r0, #1
 8020268:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802026c:	b29b      	uxth	r3, r3
 802026e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020272:	ea42 020c 	orr.w	r2, r2, ip
 8020276:	f103 0c01 	add.w	ip, r3, #1
 802027a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 802027e:	095b      	lsrs	r3, r3, #5
 8020280:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020284:	431a      	orrs	r2, r3
 8020286:	f8a9 2000 	strh.w	r2, [r9]
 802028a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802028c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802028e:	441a      	add	r2, r3
 8020290:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020292:	9229      	str	r2, [sp, #164]	; 0xa4
 8020294:	f109 0902 	add.w	r9, r9, #2
 8020298:	441d      	add	r5, r3
 802029a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802029e:	e63d      	b.n	801ff1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80202a0:	2800      	cmp	r0, #0
 80202a2:	f43f aedd 	beq.w	8020060 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80202a6:	5c79      	ldrb	r1, [r7, r1]
 80202a8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80202ac:	910b      	str	r1, [sp, #44]	; 0x2c
 80202ae:	0e09      	lsrs	r1, r1, #24
 80202b0:	9114      	str	r1, [sp, #80]	; 0x50
 80202b2:	e6d5      	b.n	8020060 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80202b4:	b01f      	add	sp, #124	; 0x7c
 80202b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080202ba <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80202ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80202be:	b089      	sub	sp, #36	; 0x24
 80202c0:	9101      	str	r1, [sp, #4]
 80202c2:	9801      	ldr	r0, [sp, #4]
 80202c4:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 80202c8:	8800      	ldrh	r0, [r0, #0]
 80202ca:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 80202ce:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80202d2:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 80202d6:	1206      	asrs	r6, r0, #8
 80202d8:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 80202dc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80202e0:	9602      	str	r6, [sp, #8]
 80202e2:	10c6      	asrs	r6, r0, #3
 80202e4:	00c0      	lsls	r0, r0, #3
 80202e6:	b2c0      	uxtb	r0, r0
 80202e8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80202ec:	9004      	str	r0, [sp, #16]
 80202ee:	2f00      	cmp	r7, #0
 80202f0:	fb07 100c 	mla	r0, r7, ip, r1
 80202f4:	9603      	str	r6, [sp, #12]
 80202f6:	eb02 0e00 	add.w	lr, r2, r0
 80202fa:	f2c0 810a 	blt.w	8020512 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80202fe:	45b8      	cmp	r8, r7
 8020300:	f340 8107 	ble.w	8020512 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020304:	2900      	cmp	r1, #0
 8020306:	f2c0 8102 	blt.w	802050e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802030a:	458c      	cmp	ip, r1
 802030c:	f340 80ff 	ble.w	802050e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020310:	5c12      	ldrb	r2, [r2, r0]
 8020312:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8020316:	1c4a      	adds	r2, r1, #1
 8020318:	f100 80fe 	bmi.w	8020518 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 802031c:	4594      	cmp	ip, r2
 802031e:	f340 80fb 	ble.w	8020518 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020322:	2d00      	cmp	r5, #0
 8020324:	f000 80fa 	beq.w	802051c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8020328:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802032c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8020330:	3701      	adds	r7, #1
 8020332:	f100 80f7 	bmi.w	8020524 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8020336:	45b8      	cmp	r8, r7
 8020338:	f340 80f4 	ble.w	8020524 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 802033c:	2c00      	cmp	r4, #0
 802033e:	f000 80f4 	beq.w	802052a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8020342:	2900      	cmp	r1, #0
 8020344:	eb0e 020c 	add.w	r2, lr, ip
 8020348:	f2c0 80ea 	blt.w	8020520 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 802034c:	458c      	cmp	ip, r1
 802034e:	f340 80e7 	ble.w	8020520 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8020352:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8020356:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 802035a:	3101      	adds	r1, #1
 802035c:	f100 80e8 	bmi.w	8020530 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020360:	458c      	cmp	ip, r1
 8020362:	f340 80e5 	ble.w	8020530 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020366:	2d00      	cmp	r5, #0
 8020368:	f000 80e4 	beq.w	8020534 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 802036c:	7852      	ldrb	r2, [r2, #1]
 802036e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8020372:	0e0b      	lsrs	r3, r1, #24
 8020374:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8020378:	9300      	str	r3, [sp, #0]
 802037a:	b2a4      	uxth	r4, r4
 802037c:	b2ab      	uxth	r3, r5
 802037e:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8020382:	fb03 f904 	mul.w	r9, r3, r4
 8020386:	fb0a f505 	mul.w	r5, sl, r5
 802038a:	011b      	lsls	r3, r3, #4
 802038c:	eba3 0e09 	sub.w	lr, r3, r9
 8020390:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8020394:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8020398:	0a28      	lsrs	r0, r5, #8
 802039a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 802039e:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 80203a2:	4405      	add	r5, r0
 80203a4:	0a2d      	lsrs	r5, r5, #8
 80203a6:	fb0a f303 	mul.w	r3, sl, r3
 80203aa:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 80203ae:	9005      	str	r0, [sp, #20]
 80203b0:	f503 7080 	add.w	r0, r3, #256	; 0x100
 80203b4:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80203b8:	0a1b      	lsrs	r3, r3, #8
 80203ba:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 80203be:	9306      	str	r3, [sp, #24]
 80203c0:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 80203c4:	fb0b f303 	mul.w	r3, fp, r3
 80203c8:	0a1d      	lsrs	r5, r3, #8
 80203ca:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80203ce:	ea4f 6817 	mov.w	r8, r7, lsr #24
 80203d2:	fb0b f606 	mul.w	r6, fp, r6
 80203d6:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80203da:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80203de:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80203e2:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80203e6:	fb08 f707 	mul.w	r7, r8, r7
 80203ea:	441d      	add	r5, r3
 80203ec:	f506 7380 	add.w	r3, r6, #256	; 0x100
 80203f0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80203f4:	f507 7380 	add.w	r3, r7, #256	; 0x100
 80203f8:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 80203fc:	fb08 fc0c 	mul.w	ip, r8, ip
 8020400:	0a1b      	lsrs	r3, r3, #8
 8020402:	9307      	str	r3, [sp, #28]
 8020404:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8020408:	0e0b      	lsrs	r3, r1, #24
 802040a:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 802040e:	435f      	muls	r7, r3
 8020410:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020414:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020418:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 802041c:	4460      	add	r0, ip
 802041e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020422:	b2a4      	uxth	r4, r4
 8020424:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020428:	0a2d      	lsrs	r5, r5, #8
 802042a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802042e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020432:	fa1f fe8e 	uxth.w	lr, lr
 8020436:	4359      	muls	r1, r3
 8020438:	1b12      	subs	r2, r2, r4
 802043a:	9b05      	ldr	r3, [sp, #20]
 802043c:	44bc      	add	ip, r7
 802043e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020442:	b292      	uxth	r2, r2
 8020444:	fb05 f50e 	mul.w	r5, r5, lr
 8020448:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802044c:	fb03 5502 	mla	r5, r3, r2, r5
 8020450:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020454:	9b06      	ldr	r3, [sp, #24]
 8020456:	f501 7780 	add.w	r7, r1, #256	; 0x100
 802045a:	0a36      	lsrs	r6, r6, #8
 802045c:	0a00      	lsrs	r0, r0, #8
 802045e:	fb0c 5509 	mla	r5, ip, r9, r5
 8020462:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020466:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 802046a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 802046e:	fb00 5504 	mla	r5, r0, r4, r5
 8020472:	fb0e f606 	mul.w	r6, lr, r6
 8020476:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 802047a:	0a09      	lsrs	r1, r1, #8
 802047c:	9b07      	ldr	r3, [sp, #28]
 802047e:	fb02 6000 	mla	r0, r2, r0, r6
 8020482:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020486:	fb09 0001 	mla	r0, r9, r1, r0
 802048a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802048e:	fb0e fe0b 	mul.w	lr, lr, fp
 8020492:	fb04 0003 	mla	r0, r4, r3, r0
 8020496:	fb02 e20a 	mla	r2, r2, sl, lr
 802049a:	9b00      	ldr	r3, [sp, #0]
 802049c:	fb04 2408 	mla	r4, r4, r8, r2
 80204a0:	fb09 4903 	mla	r9, r9, r3, r4
 80204a4:	ea6f 2929 	mvn.w	r9, r9, asr #8
 80204a8:	9b02      	ldr	r3, [sp, #8]
 80204aa:	9a04      	ldr	r2, [sp, #16]
 80204ac:	fa5f f989 	uxtb.w	r9, r9
 80204b0:	fb03 f109 	mul.w	r1, r3, r9
 80204b4:	9b03      	ldr	r3, [sp, #12]
 80204b6:	0a2d      	lsrs	r5, r5, #8
 80204b8:	0a00      	lsrs	r0, r0, #8
 80204ba:	fb03 f309 	mul.w	r3, r3, r9
 80204be:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80204c2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80204c6:	4305      	orrs	r5, r0
 80204c8:	fb02 f909 	mul.w	r9, r2, r9
 80204cc:	1c58      	adds	r0, r3, #1
 80204ce:	1c4a      	adds	r2, r1, #1
 80204d0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80204d4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80204d8:	0a2b      	lsrs	r3, r5, #8
 80204da:	0c2a      	lsrs	r2, r5, #16
 80204dc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80204e0:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 80204e4:	00db      	lsls	r3, r3, #3
 80204e6:	0212      	lsls	r2, r2, #8
 80204e8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80204ec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80204f0:	4313      	orrs	r3, r2
 80204f2:	f109 0201 	add.w	r2, r9, #1
 80204f6:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 80204fa:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 80204fe:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8020502:	431d      	orrs	r5, r3
 8020504:	9b01      	ldr	r3, [sp, #4]
 8020506:	801d      	strh	r5, [r3, #0]
 8020508:	b009      	add	sp, #36	; 0x24
 802050a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802050e:	2000      	movs	r0, #0
 8020510:	e701      	b.n	8020316 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8020512:	2600      	movs	r6, #0
 8020514:	4630      	mov	r0, r6
 8020516:	e70b      	b.n	8020330 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020518:	2600      	movs	r6, #0
 802051a:	e709      	b.n	8020330 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 802051c:	462e      	mov	r6, r5
 802051e:	e707      	b.n	8020330 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020520:	2700      	movs	r7, #0
 8020522:	e71a      	b.n	802035a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8020524:	2100      	movs	r1, #0
 8020526:	460f      	mov	r7, r1
 8020528:	e723      	b.n	8020372 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 802052a:	4621      	mov	r1, r4
 802052c:	4627      	mov	r7, r4
 802052e:	e720      	b.n	8020372 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020530:	2100      	movs	r1, #0
 8020532:	e71e      	b.n	8020372 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020534:	4629      	mov	r1, r5
 8020536:	e71c      	b.n	8020372 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08020538 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802053c:	b09b      	sub	sp, #108	; 0x6c
 802053e:	9218      	str	r2, [sp, #96]	; 0x60
 8020540:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020542:	9116      	str	r1, [sp, #88]	; 0x58
 8020544:	9307      	str	r3, [sp, #28]
 8020546:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 802054a:	9019      	str	r0, [sp, #100]	; 0x64
 802054c:	6850      	ldr	r0, [r2, #4]
 802054e:	6812      	ldr	r2, [r2, #0]
 8020550:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8020552:	fb00 1303 	mla	r3, r0, r3, r1
 8020556:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802055a:	930a      	str	r3, [sp, #40]	; 0x28
 802055c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802055e:	681b      	ldr	r3, [r3, #0]
 8020560:	930f      	str	r3, [sp, #60]	; 0x3c
 8020562:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020564:	685e      	ldr	r6, [r3, #4]
 8020566:	3604      	adds	r6, #4
 8020568:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802056a:	2b00      	cmp	r3, #0
 802056c:	dc03      	bgt.n	8020576 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 802056e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020570:	2b00      	cmp	r3, #0
 8020572:	f340 8373 	ble.w	8020c5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020576:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020578:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802057c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020580:	1e48      	subs	r0, r1, #1
 8020582:	1e57      	subs	r7, r2, #1
 8020584:	9b07      	ldr	r3, [sp, #28]
 8020586:	2b00      	cmp	r3, #0
 8020588:	f340 8190 	ble.w	80208ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 802058c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 802058e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020592:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020596:	d406      	bmi.n	80205a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020598:	4584      	cmp	ip, r0
 802059a:	da04      	bge.n	80205a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802059c:	2b00      	cmp	r3, #0
 802059e:	db02      	blt.n	80205a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80205a0:	42bb      	cmp	r3, r7
 80205a2:	f2c0 8184 	blt.w	80208ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 80205a6:	f11c 0c01 	adds.w	ip, ip, #1
 80205aa:	f100 8172 	bmi.w	8020892 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80205ae:	4561      	cmp	r1, ip
 80205b0:	f2c0 816f 	blt.w	8020892 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80205b4:	3301      	adds	r3, #1
 80205b6:	f100 816c 	bmi.w	8020892 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80205ba:	429a      	cmp	r2, r3
 80205bc:	f2c0 8169 	blt.w	8020892 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80205c0:	9b07      	ldr	r3, [sp, #28]
 80205c2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80205c4:	9317      	str	r3, [sp, #92]	; 0x5c
 80205c6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80205c8:	2b00      	cmp	r3, #0
 80205ca:	f340 818e 	ble.w	80208ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 80205ce:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80205d0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80205d4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80205d6:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 80205da:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80205dc:	141b      	asrs	r3, r3, #16
 80205de:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80205e2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80205e6:	f100 81d1 	bmi.w	802098c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80205ea:	f101 38ff 	add.w	r8, r1, #4294967295
 80205ee:	4543      	cmp	r3, r8
 80205f0:	f280 81cc 	bge.w	802098c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80205f4:	f1bc 0f00 	cmp.w	ip, #0
 80205f8:	f2c0 81c8 	blt.w	802098c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80205fc:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020600:	45c4      	cmp	ip, r8
 8020602:	f280 81c3 	bge.w	802098c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020606:	b209      	sxth	r1, r1
 8020608:	fb0c 3301 	mla	r3, ip, r1, r3
 802060c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802060e:	eb04 0803 	add.w	r8, r4, r3
 8020612:	5ce3      	ldrb	r3, [r4, r3]
 8020614:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020618:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 802061c:	2a00      	cmp	r2, #0
 802061e:	f000 81aa 	beq.w	8020976 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8020622:	f898 c001 	ldrb.w	ip, [r8, #1]
 8020626:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 802062a:	940b      	str	r4, [sp, #44]	; 0x2c
 802062c:	0e24      	lsrs	r4, r4, #24
 802062e:	9412      	str	r4, [sp, #72]	; 0x48
 8020630:	b178      	cbz	r0, 8020652 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020632:	eb08 0c01 	add.w	ip, r8, r1
 8020636:	f818 1001 	ldrb.w	r1, [r8, r1]
 802063a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802063e:	9108      	str	r1, [sp, #32]
 8020640:	0e09      	lsrs	r1, r1, #24
 8020642:	9110      	str	r1, [sp, #64]	; 0x40
 8020644:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8020648:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802064c:	910c      	str	r1, [sp, #48]	; 0x30
 802064e:	0e09      	lsrs	r1, r1, #24
 8020650:	9113      	str	r1, [sp, #76]	; 0x4c
 8020652:	b292      	uxth	r2, r2
 8020654:	b280      	uxth	r0, r0
 8020656:	fb02 f900 	mul.w	r9, r2, r0
 802065a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802065e:	0112      	lsls	r2, r2, #4
 8020660:	eba2 0809 	sub.w	r8, r2, r9
 8020664:	b280      	uxth	r0, r0
 8020666:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802066a:	9912      	ldr	r1, [sp, #72]	; 0x48
 802066c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802066e:	fa1f f888 	uxth.w	r8, r8
 8020672:	1a12      	subs	r2, r2, r0
 8020674:	b292      	uxth	r2, r2
 8020676:	fb08 f101 	mul.w	r1, r8, r1
 802067a:	fb02 110e 	mla	r1, r2, lr, r1
 802067e:	fb00 1104 	mla	r1, r0, r4, r1
 8020682:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020684:	fb09 1104 	mla	r1, r9, r4, r1
 8020688:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802068c:	2900      	cmp	r1, #0
 802068e:	f000 80f5 	beq.w	802087c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020692:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020696:	d01b      	beq.n	80206d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020698:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802069c:	fb0e fa0a 	mul.w	sl, lr, sl
 80206a0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80206a4:	fb0e fe03 	mul.w	lr, lr, r3
 80206a8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80206ac:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80206b0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80206b4:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80206b8:	4453      	add	r3, sl
 80206ba:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80206be:	0a1b      	lsrs	r3, r3, #8
 80206c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80206c4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80206c8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80206cc:	ea43 030c 	orr.w	r3, r3, ip
 80206d0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80206d2:	2cff      	cmp	r4, #255	; 0xff
 80206d4:	d021      	beq.n	802071a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 80206d6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80206d8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80206dc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80206de:	fb04 fb0b 	mul.w	fp, r4, fp
 80206e2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80206e4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80206e8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80206ea:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80206ee:	fb04 fa0a 	mul.w	sl, r4, sl
 80206f2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80206f6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80206fa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80206fe:	44de      	add	lr, fp
 8020700:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020704:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020708:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802070c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020710:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020714:	ea4e 040a 	orr.w	r4, lr, sl
 8020718:	940b      	str	r4, [sp, #44]	; 0x2c
 802071a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802071c:	2cff      	cmp	r4, #255	; 0xff
 802071e:	d021      	beq.n	8020764 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8020720:	9c08      	ldr	r4, [sp, #32]
 8020722:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020726:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020728:	fb04 fb0b 	mul.w	fp, r4, fp
 802072c:	9c08      	ldr	r4, [sp, #32]
 802072e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020732:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020734:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020738:	fb04 fa0a 	mul.w	sl, r4, sl
 802073c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020740:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020744:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020748:	44de      	add	lr, fp
 802074a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802074e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020752:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020756:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802075a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802075e:	ea4e 040a 	orr.w	r4, lr, sl
 8020762:	9408      	str	r4, [sp, #32]
 8020764:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020766:	2cff      	cmp	r4, #255	; 0xff
 8020768:	d021      	beq.n	80207ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802076a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802076c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020770:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020772:	fb04 fb0b 	mul.w	fp, r4, fp
 8020776:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020778:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802077c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802077e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020782:	fb04 fa0a 	mul.w	sl, r4, sl
 8020786:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802078a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802078e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020792:	44de      	add	lr, fp
 8020794:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020798:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802079c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80207a0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80207a4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80207a8:	ea4e 040a 	orr.w	r4, lr, sl
 80207ac:	940c      	str	r4, [sp, #48]	; 0x30
 80207ae:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80207b0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80207b4:	9c08      	ldr	r4, [sp, #32]
 80207b6:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80207ba:	fb08 fc0c 	mul.w	ip, r8, ip
 80207be:	fb02 cc0e 	mla	ip, r2, lr, ip
 80207c2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80207c6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80207c8:	fb00 cc0e 	mla	ip, r0, lr, ip
 80207cc:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80207d0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80207d2:	fb09 cc0e 	mla	ip, r9, lr, ip
 80207d6:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80207da:	fb08 f80e 	mul.w	r8, r8, lr
 80207de:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80207e2:	fb02 8303 	mla	r3, r2, r3, r8
 80207e6:	9a08      	ldr	r2, [sp, #32]
 80207e8:	f8b7 8000 	ldrh.w	r8, [r7]
 80207ec:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80207f0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80207f2:	fb00 330a 	mla	r3, r0, sl, r3
 80207f6:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 80207fa:	fb09 3900 	mla	r9, r9, r0, r3
 80207fe:	43c9      	mvns	r1, r1
 8020800:	ea4f 2228 	mov.w	r2, r8, asr #8
 8020804:	fa5f fe81 	uxtb.w	lr, r1
 8020808:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802080c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020810:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020814:	fb02 f20e 	mul.w	r2, r2, lr
 8020818:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802081c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020820:	ea4c 0c09 	orr.w	ip, ip, r9
 8020824:	1c53      	adds	r3, r2, #1
 8020826:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 802082a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 802082e:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8020832:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020836:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802083a:	4a63      	ldr	r2, [pc, #396]	; (80209c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 802083c:	fb00 f00e 	mul.w	r0, r0, lr
 8020840:	b2db      	uxtb	r3, r3
 8020842:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8020846:	1c43      	adds	r3, r0, #1
 8020848:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802084c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8020850:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8020854:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020858:	b2c9      	uxtb	r1, r1
 802085a:	00db      	lsls	r3, r3, #3
 802085c:	fb01 f10e 	mul.w	r1, r1, lr
 8020860:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020864:	4313      	orrs	r3, r2
 8020866:	1c4a      	adds	r2, r1, #1
 8020868:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802086c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8020870:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8020874:	ea4c 0c03 	orr.w	ip, ip, r3
 8020878:	f8a7 c000 	strh.w	ip, [r7]
 802087c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802087e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8020880:	441a      	add	r2, r3
 8020882:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020884:	9225      	str	r2, [sp, #148]	; 0x94
 8020886:	441d      	add	r5, r3
 8020888:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802088a:	3b01      	subs	r3, #1
 802088c:	3702      	adds	r7, #2
 802088e:	9317      	str	r3, [sp, #92]	; 0x5c
 8020890:	e699      	b.n	80205c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020892:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020894:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020896:	441c      	add	r4, r3
 8020898:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802089a:	9425      	str	r4, [sp, #148]	; 0x94
 802089c:	441d      	add	r5, r3
 802089e:	9b07      	ldr	r3, [sp, #28]
 80208a0:	3b01      	subs	r3, #1
 80208a2:	9307      	str	r3, [sp, #28]
 80208a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80208a6:	3302      	adds	r3, #2
 80208a8:	930a      	str	r3, [sp, #40]	; 0x28
 80208aa:	e66b      	b.n	8020584 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80208ac:	d024      	beq.n	80208f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 80208ae:	9b07      	ldr	r3, [sp, #28]
 80208b0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80208b2:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80208b4:	3b01      	subs	r3, #1
 80208b6:	fb00 4003 	mla	r0, r0, r3, r4
 80208ba:	1400      	asrs	r0, r0, #16
 80208bc:	f53f ae80 	bmi.w	80205c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80208c0:	3901      	subs	r1, #1
 80208c2:	4288      	cmp	r0, r1
 80208c4:	f6bf ae7c 	bge.w	80205c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80208c8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80208ca:	fb01 5303 	mla	r3, r1, r3, r5
 80208ce:	141b      	asrs	r3, r3, #16
 80208d0:	f53f ae76 	bmi.w	80205c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80208d4:	3a01      	subs	r2, #1
 80208d6:	4293      	cmp	r3, r2
 80208d8:	f6bf ae72 	bge.w	80205c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80208dc:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80208e0:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80208e4:	f1bb 0f00 	cmp.w	fp, #0
 80208e8:	dc70      	bgt.n	80209cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80208ea:	9b07      	ldr	r3, [sp, #28]
 80208ec:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80208f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80208f2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80208f6:	930a      	str	r3, [sp, #40]	; 0x28
 80208f8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80208fa:	2b00      	cmp	r3, #0
 80208fc:	f340 81ae 	ble.w	8020c5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020900:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020904:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020908:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802090c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802090e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020912:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020916:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802091a:	eef0 6a62 	vmov.f32	s13, s5
 802091e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020922:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020926:	ee77 2a62 	vsub.f32	s5, s14, s5
 802092a:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 802092e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020932:	eef0 6a43 	vmov.f32	s13, s6
 8020936:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802093a:	ee12 2a90 	vmov	r2, s5
 802093e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020942:	fb92 f3f3 	sdiv	r3, r2, r3
 8020946:	ee13 2a10 	vmov	r2, s6
 802094a:	9327      	str	r3, [sp, #156]	; 0x9c
 802094c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802094e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020952:	9328      	str	r3, [sp, #160]	; 0xa0
 8020954:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020956:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8020958:	3b01      	subs	r3, #1
 802095a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802095e:	9316      	str	r3, [sp, #88]	; 0x58
 8020960:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020962:	bf08      	it	eq
 8020964:	4613      	moveq	r3, r2
 8020966:	ee16 5a90 	vmov	r5, s13
 802096a:	9307      	str	r3, [sp, #28]
 802096c:	eeb0 3a67 	vmov.f32	s6, s15
 8020970:	eef0 2a47 	vmov.f32	s5, s14
 8020974:	e5f8      	b.n	8020568 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8020976:	2800      	cmp	r0, #0
 8020978:	f43f ae6b 	beq.w	8020652 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 802097c:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020980:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020984:	9108      	str	r1, [sp, #32]
 8020986:	0e09      	lsrs	r1, r1, #24
 8020988:	9110      	str	r1, [sp, #64]	; 0x40
 802098a:	e662      	b.n	8020652 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 802098c:	f113 0801 	adds.w	r8, r3, #1
 8020990:	f53f af74 	bmi.w	802087c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020994:	4541      	cmp	r1, r8
 8020996:	f6ff af71 	blt.w	802087c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802099a:	f11c 0801 	adds.w	r8, ip, #1
 802099e:	f53f af6d 	bmi.w	802087c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80209a2:	45c6      	cmp	lr, r8
 80209a4:	f6ff af6a 	blt.w	802087c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80209a8:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 80209ac:	b209      	sxth	r1, r1
 80209ae:	fa0f f38e 	sxth.w	r3, lr
 80209b2:	e9cd 2004 	strd	r2, r0, [sp, #16]
 80209b6:	9301      	str	r3, [sp, #4]
 80209b8:	9100      	str	r1, [sp, #0]
 80209ba:	4633      	mov	r3, r6
 80209bc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80209be:	9819      	ldr	r0, [sp, #100]	; 0x64
 80209c0:	4639      	mov	r1, r7
 80209c2:	f7ff fc7a 	bl	80202ba <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80209c6:	e759      	b.n	802087c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80209c8:	fffff800 	.word	0xfffff800
 80209cc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80209ce:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80209d0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80209d4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80209d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80209da:	1427      	asrs	r7, r4, #16
 80209dc:	142b      	asrs	r3, r5, #16
 80209de:	fb01 7303 	mla	r3, r1, r3, r7
 80209e2:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80209e4:	18e7      	adds	r7, r4, r3
 80209e6:	5ce3      	ldrb	r3, [r4, r3]
 80209e8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80209ec:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80209f0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80209f4:	2a00      	cmp	r2, #0
 80209f6:	f000 8127 	beq.w	8020c48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80209fa:	f897 e001 	ldrb.w	lr, [r7, #1]
 80209fe:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8020a02:	940d      	str	r4, [sp, #52]	; 0x34
 8020a04:	0e24      	lsrs	r4, r4, #24
 8020a06:	9414      	str	r4, [sp, #80]	; 0x50
 8020a08:	b170      	cbz	r0, 8020a28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020a0a:	eb07 0e01 	add.w	lr, r7, r1
 8020a0e:	5c79      	ldrb	r1, [r7, r1]
 8020a10:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020a14:	9109      	str	r1, [sp, #36]	; 0x24
 8020a16:	0e09      	lsrs	r1, r1, #24
 8020a18:	9111      	str	r1, [sp, #68]	; 0x44
 8020a1a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020a1e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020a22:	910e      	str	r1, [sp, #56]	; 0x38
 8020a24:	0e09      	lsrs	r1, r1, #24
 8020a26:	9115      	str	r1, [sp, #84]	; 0x54
 8020a28:	b292      	uxth	r2, r2
 8020a2a:	b280      	uxth	r0, r0
 8020a2c:	fb02 f800 	mul.w	r8, r2, r0
 8020a30:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020a34:	0112      	lsls	r2, r2, #4
 8020a36:	eba2 0e08 	sub.w	lr, r2, r8
 8020a3a:	b280      	uxth	r0, r0
 8020a3c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8020a40:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020a42:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020a44:	fa1f fe8e 	uxth.w	lr, lr
 8020a48:	1a09      	subs	r1, r1, r0
 8020a4a:	b289      	uxth	r1, r1
 8020a4c:	fb0e f202 	mul.w	r2, lr, r2
 8020a50:	fb01 220c 	mla	r2, r1, ip, r2
 8020a54:	fb00 2204 	mla	r2, r0, r4, r2
 8020a58:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020a5a:	fb08 2204 	mla	r2, r8, r4, r2
 8020a5e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8020a62:	2a00      	cmp	r2, #0
 8020a64:	f000 80e5 	beq.w	8020c32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8020a68:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020a6c:	d019      	beq.n	8020aa2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8020a6e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020a72:	fb0c fa0a 	mul.w	sl, ip, sl
 8020a76:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020a7a:	fb0c fc03 	mul.w	ip, ip, r3
 8020a7e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020a82:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020a86:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020a8a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8020a8e:	4453      	add	r3, sl
 8020a90:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020a94:	0a1b      	lsrs	r3, r3, #8
 8020a96:	0a3f      	lsrs	r7, r7, #8
 8020a98:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020a9c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020aa0:	433b      	orrs	r3, r7
 8020aa2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020aa4:	2cff      	cmp	r4, #255	; 0xff
 8020aa6:	d020      	beq.n	8020aea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8020aa8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020aaa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020aae:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020ab0:	4367      	muls	r7, r4
 8020ab2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020ab4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020ab8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020aba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020abe:	fb04 fa0a 	mul.w	sl, r4, sl
 8020ac2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020ac6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020aca:	44bc      	add	ip, r7
 8020acc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020ad0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020ad4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020ad8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020adc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020ae0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020ae4:	ea4c 040a 	orr.w	r4, ip, sl
 8020ae8:	940d      	str	r4, [sp, #52]	; 0x34
 8020aea:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020aec:	2cff      	cmp	r4, #255	; 0xff
 8020aee:	d020      	beq.n	8020b32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8020af0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8020af2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020af6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020af8:	4367      	muls	r7, r4
 8020afa:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8020afc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020b00:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020b02:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020b06:	fb04 fa0a 	mul.w	sl, r4, sl
 8020b0a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020b0e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020b12:	44bc      	add	ip, r7
 8020b14:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020b18:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020b1c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020b20:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020b24:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020b28:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020b2c:	ea4c 040a 	orr.w	r4, ip, sl
 8020b30:	9409      	str	r4, [sp, #36]	; 0x24
 8020b32:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020b34:	2cff      	cmp	r4, #255	; 0xff
 8020b36:	d020      	beq.n	8020b7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8020b38:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020b3a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020b3e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020b40:	4367      	muls	r7, r4
 8020b42:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020b44:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020b48:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020b4a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020b4e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020b52:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020b56:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020b5a:	44bc      	add	ip, r7
 8020b5c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020b60:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020b64:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020b68:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020b6c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020b70:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020b74:	ea4c 040a 	orr.w	r4, ip, sl
 8020b78:	940e      	str	r4, [sp, #56]	; 0x38
 8020b7a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020b7c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020b80:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8020b82:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8020b86:	fb0e f707 	mul.w	r7, lr, r7
 8020b8a:	fb01 770c 	mla	r7, r1, ip, r7
 8020b8e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020b92:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020b94:	fb00 770c 	mla	r7, r0, ip, r7
 8020b98:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020b9c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020b9e:	fb08 770c 	mla	r7, r8, ip, r7
 8020ba2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8020ba6:	fb0e fe0c 	mul.w	lr, lr, ip
 8020baa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020bae:	fb01 e303 	mla	r3, r1, r3, lr
 8020bb2:	9909      	ldr	r1, [sp, #36]	; 0x24
 8020bb4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8020bb8:	990e      	ldr	r1, [sp, #56]	; 0x38
 8020bba:	fb00 330a 	mla	r3, r0, sl, r3
 8020bbe:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8020bc2:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020bc6:	f8b9 3000 	ldrh.w	r3, [r9]
 8020bca:	43d2      	mvns	r2, r2
 8020bcc:	1218      	asrs	r0, r3, #8
 8020bce:	b2d2      	uxtb	r2, r2
 8020bd0:	10d9      	asrs	r1, r3, #3
 8020bd2:	0a3f      	lsrs	r7, r7, #8
 8020bd4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020bd8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020bdc:	00db      	lsls	r3, r3, #3
 8020bde:	4350      	muls	r0, r2
 8020be0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020be4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020be8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020bec:	b2db      	uxtb	r3, r3
 8020bee:	ea47 070c 	orr.w	r7, r7, ip
 8020bf2:	4351      	muls	r1, r2
 8020bf4:	4353      	muls	r3, r2
 8020bf6:	1c42      	adds	r2, r0, #1
 8020bf8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020bfc:	0c3a      	lsrs	r2, r7, #16
 8020bfe:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020c02:	4a18      	ldr	r2, [pc, #96]	; (8020c64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8020c04:	b2c0      	uxtb	r0, r0
 8020c06:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8020c0a:	1c4a      	adds	r2, r1, #1
 8020c0c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020c10:	0a3a      	lsrs	r2, r7, #8
 8020c12:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020c16:	00c9      	lsls	r1, r1, #3
 8020c18:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020c1c:	4301      	orrs	r1, r0
 8020c1e:	1c58      	adds	r0, r3, #1
 8020c20:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020c24:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8020c28:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8020c2c:	4308      	orrs	r0, r1
 8020c2e:	f8a9 0000 	strh.w	r0, [r9]
 8020c32:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020c34:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8020c36:	441a      	add	r2, r3
 8020c38:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020c3a:	9225      	str	r2, [sp, #148]	; 0x94
 8020c3c:	f109 0902 	add.w	r9, r9, #2
 8020c40:	441d      	add	r5, r3
 8020c42:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020c46:	e64d      	b.n	80208e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8020c48:	2800      	cmp	r0, #0
 8020c4a:	f43f aeed 	beq.w	8020a28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020c4e:	5c79      	ldrb	r1, [r7, r1]
 8020c50:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020c54:	9109      	str	r1, [sp, #36]	; 0x24
 8020c56:	0e09      	lsrs	r1, r1, #24
 8020c58:	9111      	str	r1, [sp, #68]	; 0x44
 8020c5a:	e6e5      	b.n	8020a28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020c5c:	b01b      	add	sp, #108	; 0x6c
 8020c5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020c62:	bf00      	nop
 8020c64:	fffff800 	.word	0xfffff800

08020c68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8020c68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020c6c:	b085      	sub	sp, #20
 8020c6e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8020c72:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8020c76:	9103      	str	r1, [sp, #12]
 8020c78:	fb00 7406 	mla	r4, r0, r6, r7
 8020c7c:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8020c80:	2800      	cmp	r0, #0
 8020c82:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8020c86:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8020c8a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8020c8e:	9501      	str	r5, [sp, #4]
 8020c90:	eb03 0904 	add.w	r9, r3, r4
 8020c94:	f2c0 8150 	blt.w	8020f38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8020c98:	4583      	cmp	fp, r0
 8020c9a:	f340 814d 	ble.w	8020f38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8020c9e:	2f00      	cmp	r7, #0
 8020ca0:	f2c0 8146 	blt.w	8020f30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8020ca4:	42be      	cmp	r6, r7
 8020ca6:	f340 8143 	ble.w	8020f30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8020caa:	f813 c004 	ldrb.w	ip, [r3, r4]
 8020cae:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8020cb2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020cb6:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8020cba:	4355      	muls	r5, r2
 8020cbc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020cc0:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8020cc4:	fb0c f203 	mul.w	r2, ip, r3
 8020cc8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8020ccc:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8020cd0:	441d      	add	r5, r3
 8020cd2:	f102 0320 	add.w	r3, r2, #32
 8020cd6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020cda:	0a1b      	lsrs	r3, r3, #8
 8020cdc:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8020ce0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020ce4:	431c      	orrs	r4, r3
 8020ce6:	1c7b      	adds	r3, r7, #1
 8020ce8:	f100 812b 	bmi.w	8020f42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8020cec:	429e      	cmp	r6, r3
 8020cee:	f340 8128 	ble.w	8020f42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8020cf2:	2900      	cmp	r1, #0
 8020cf4:	f000 8128 	beq.w	8020f48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8020cf8:	9a01      	ldr	r2, [sp, #4]
 8020cfa:	f899 3001 	ldrb.w	r3, [r9, #1]
 8020cfe:	8855      	ldrh	r5, [r2, #2]
 8020d00:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8020d04:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8020d08:	fb08 f802 	mul.w	r8, r8, r2
 8020d0c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020d10:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8020d14:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8020d18:	435d      	muls	r5, r3
 8020d1a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020d1e:	44d0      	add	r8, sl
 8020d20:	f105 0a20 	add.w	sl, r5, #32
 8020d24:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8020d28:	0a2d      	lsrs	r5, r5, #8
 8020d2a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8020d2e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020d32:	432a      	orrs	r2, r5
 8020d34:	3001      	adds	r0, #1
 8020d36:	f100 810d 	bmi.w	8020f54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8020d3a:	4583      	cmp	fp, r0
 8020d3c:	f340 810a 	ble.w	8020f54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8020d40:	f1be 0f00 	cmp.w	lr, #0
 8020d44:	f000 810b 	beq.w	8020f5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8020d48:	2f00      	cmp	r7, #0
 8020d4a:	f2c0 8100 	blt.w	8020f4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8020d4e:	42be      	cmp	r6, r7
 8020d50:	f340 80fd 	ble.w	8020f4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8020d54:	9801      	ldr	r0, [sp, #4]
 8020d56:	f819 5006 	ldrb.w	r5, [r9, r6]
 8020d5a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8020d5e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8020d62:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8020d66:	fb0a fa00 	mul.w	sl, sl, r0
 8020d6a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8020d6e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8020d72:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8020d76:	fb05 f808 	mul.w	r8, r5, r8
 8020d7a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8020d7e:	4482      	add	sl, r0
 8020d80:	f108 0020 	add.w	r0, r8, #32
 8020d84:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8020d88:	0a00      	lsrs	r0, r0, #8
 8020d8a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8020d8e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020d92:	ea4b 0b00 	orr.w	fp, fp, r0
 8020d96:	3701      	adds	r7, #1
 8020d98:	f100 80e6 	bmi.w	8020f68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8020d9c:	42be      	cmp	r6, r7
 8020d9e:	f340 80e3 	ble.w	8020f68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8020da2:	2900      	cmp	r1, #0
 8020da4:	f000 80e3 	beq.w	8020f6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8020da8:	3601      	adds	r6, #1
 8020daa:	9801      	ldr	r0, [sp, #4]
 8020dac:	f819 7006 	ldrb.w	r7, [r9, r6]
 8020db0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8020db4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8020db8:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8020dbc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020dc0:	fb09 f906 	mul.w	r9, r9, r6
 8020dc4:	fb07 f800 	mul.w	r8, r7, r0
 8020dc8:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8020dcc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8020dd0:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8020dd4:	44d1      	add	r9, sl
 8020dd6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8020dda:	f108 0020 	add.w	r0, r8, #32
 8020dde:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8020de2:	0a00      	lsrs	r0, r0, #8
 8020de4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020de8:	4330      	orrs	r0, r6
 8020dea:	b28e      	uxth	r6, r1
 8020dec:	fa1f f98e 	uxth.w	r9, lr
 8020df0:	fb06 f809 	mul.w	r8, r6, r9
 8020df4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8020df8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8020dfc:	0136      	lsls	r6, r6, #4
 8020dfe:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020e02:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8020e06:	9601      	str	r6, [sp, #4]
 8020e08:	ea4a 0404 	orr.w	r4, sl, r4
 8020e0c:	fa1f f689 	uxth.w	r6, r9
 8020e10:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8020e14:	fb11 f90e 	smulbb	r9, r1, lr
 8020e18:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8020e1c:	9602      	str	r6, [sp, #8]
 8020e1e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020e22:	4626      	mov	r6, r4
 8020e24:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020e28:	f1ce 0410 	rsb	r4, lr, #16
 8020e2c:	1a64      	subs	r4, r4, r1
 8020e2e:	ea4a 0202 	orr.w	r2, sl, r2
 8020e32:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8020e36:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8020e3a:	434a      	muls	r2, r1
 8020e3c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8020e40:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020e44:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020e48:	fb04 2406 	mla	r4, r4, r6, r2
 8020e4c:	ea4a 0000 	orr.w	r0, sl, r0
 8020e50:	fb09 4200 	mla	r2, r9, r0, r4
 8020e54:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8020e58:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8020e5c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8020e60:	ea44 0b0b 	orr.w	fp, r4, fp
 8020e64:	9c01      	ldr	r4, [sp, #4]
 8020e66:	9e02      	ldr	r6, [sp, #8]
 8020e68:	9903      	ldr	r1, [sp, #12]
 8020e6a:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8020e6e:	1ba4      	subs	r4, r4, r6
 8020e70:	9e01      	ldr	r6, [sp, #4]
 8020e72:	8808      	ldrh	r0, [r1, #0]
 8020e74:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8020e78:	eba6 0608 	sub.w	r6, r6, r8
 8020e7c:	b2b6      	uxth	r6, r6
 8020e7e:	b2a4      	uxth	r4, r4
 8020e80:	4373      	muls	r3, r6
 8020e82:	fb0c 3304 	mla	r3, ip, r4, r3
 8020e86:	9c02      	ldr	r4, [sp, #8]
 8020e88:	fb04 3505 	mla	r5, r4, r5, r3
 8020e8c:	fb08 5707 	mla	r7, r8, r7, r5
 8020e90:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8020e94:	b289      	uxth	r1, r1
 8020e96:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8020e9a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8020e9e:	434f      	muls	r7, r1
 8020ea0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8020ea4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8020ea8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020eac:	1c7b      	adds	r3, r7, #1
 8020eae:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020eb2:	ea42 0e0e 	orr.w	lr, r2, lr
 8020eb6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8020eba:	fa1f f28e 	uxth.w	r2, lr
 8020ebe:	1203      	asrs	r3, r0, #8
 8020ec0:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8020ec4:	b2ff      	uxtb	r7, r7
 8020ec6:	1215      	asrs	r5, r2, #8
 8020ec8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8020ecc:	fb13 f307 	smulbb	r3, r3, r7
 8020ed0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020ed4:	fb05 3501 	mla	r5, r5, r1, r3
 8020ed8:	10c3      	asrs	r3, r0, #3
 8020eda:	10d4      	asrs	r4, r2, #3
 8020edc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8020ee0:	fb13 f307 	smulbb	r3, r3, r7
 8020ee4:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8020ee8:	fb04 3401 	mla	r4, r4, r1, r3
 8020eec:	00c3      	lsls	r3, r0, #3
 8020eee:	00d2      	lsls	r2, r2, #3
 8020ef0:	b2db      	uxtb	r3, r3
 8020ef2:	fb13 f307 	smulbb	r3, r3, r7
 8020ef6:	b2d2      	uxtb	r2, r2
 8020ef8:	fb02 3101 	mla	r1, r2, r1, r3
 8020efc:	b2ad      	uxth	r5, r5
 8020efe:	b289      	uxth	r1, r1
 8020f00:	b2a4      	uxth	r4, r4
 8020f02:	1c6b      	adds	r3, r5, #1
 8020f04:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020f08:	1c62      	adds	r2, r4, #1
 8020f0a:	1c4b      	adds	r3, r1, #1
 8020f0c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8020f10:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8020f14:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020f18:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020f1c:	0964      	lsrs	r4, r4, #5
 8020f1e:	432b      	orrs	r3, r5
 8020f20:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020f24:	9a03      	ldr	r2, [sp, #12]
 8020f26:	4323      	orrs	r3, r4
 8020f28:	8013      	strh	r3, [r2, #0]
 8020f2a:	b005      	add	sp, #20
 8020f2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020f30:	f04f 0c00 	mov.w	ip, #0
 8020f34:	4664      	mov	r4, ip
 8020f36:	e6d6      	b.n	8020ce6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8020f38:	2300      	movs	r3, #0
 8020f3a:	469c      	mov	ip, r3
 8020f3c:	461a      	mov	r2, r3
 8020f3e:	461c      	mov	r4, r3
 8020f40:	e6f8      	b.n	8020d34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8020f42:	2300      	movs	r3, #0
 8020f44:	461a      	mov	r2, r3
 8020f46:	e6f5      	b.n	8020d34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8020f48:	460b      	mov	r3, r1
 8020f4a:	460a      	mov	r2, r1
 8020f4c:	e6f2      	b.n	8020d34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8020f4e:	2500      	movs	r5, #0
 8020f50:	46ab      	mov	fp, r5
 8020f52:	e720      	b.n	8020d96 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8020f54:	2700      	movs	r7, #0
 8020f56:	463d      	mov	r5, r7
 8020f58:	4638      	mov	r0, r7
 8020f5a:	46bb      	mov	fp, r7
 8020f5c:	e745      	b.n	8020dea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8020f5e:	4677      	mov	r7, lr
 8020f60:	4675      	mov	r5, lr
 8020f62:	4670      	mov	r0, lr
 8020f64:	46f3      	mov	fp, lr
 8020f66:	e740      	b.n	8020dea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8020f68:	2700      	movs	r7, #0
 8020f6a:	4638      	mov	r0, r7
 8020f6c:	e73d      	b.n	8020dea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8020f6e:	460f      	mov	r7, r1
 8020f70:	4608      	mov	r0, r1
 8020f72:	e73a      	b.n	8020dea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08020f74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020f74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020f78:	b097      	sub	sp, #92	; 0x5c
 8020f7a:	9214      	str	r2, [sp, #80]	; 0x50
 8020f7c:	9308      	str	r3, [sp, #32]
 8020f7e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8020f80:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8020f84:	9312      	str	r3, [sp, #72]	; 0x48
 8020f86:	9111      	str	r1, [sp, #68]	; 0x44
 8020f88:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8020f8c:	9015      	str	r0, [sp, #84]	; 0x54
 8020f8e:	6850      	ldr	r0, [r2, #4]
 8020f90:	6812      	ldr	r2, [r2, #0]
 8020f92:	fb00 1303 	mla	r3, r0, r3, r1
 8020f96:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020f9a:	9309      	str	r3, [sp, #36]	; 0x24
 8020f9c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020f9e:	681b      	ldr	r3, [r3, #0]
 8020fa0:	930b      	str	r3, [sp, #44]	; 0x2c
 8020fa2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020fa4:	685b      	ldr	r3, [r3, #4]
 8020fa6:	930c      	str	r3, [sp, #48]	; 0x30
 8020fa8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8020fac:	930a      	str	r3, [sp, #40]	; 0x28
 8020fae:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020fb0:	2b00      	cmp	r3, #0
 8020fb2:	dc03      	bgt.n	8020fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8020fb4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8020fb6:	2b00      	cmp	r3, #0
 8020fb8:	f340 83cb 	ble.w	8021752 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8020fbc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020fbe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020fc2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020fc6:	1e48      	subs	r0, r1, #1
 8020fc8:	1e55      	subs	r5, r2, #1
 8020fca:	9b08      	ldr	r3, [sp, #32]
 8020fcc:	2b00      	cmp	r3, #0
 8020fce:	f340 81a3 	ble.w	8021318 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8020fd2:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8020fd4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020fd6:	1436      	asrs	r6, r6, #16
 8020fd8:	ea4f 4323 	mov.w	r3, r3, asr #16
 8020fdc:	d406      	bmi.n	8020fec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8020fde:	4286      	cmp	r6, r0
 8020fe0:	da04      	bge.n	8020fec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8020fe2:	2b00      	cmp	r3, #0
 8020fe4:	db02      	blt.n	8020fec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8020fe6:	42ab      	cmp	r3, r5
 8020fe8:	f2c0 8197 	blt.w	802131a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8020fec:	3601      	adds	r6, #1
 8020fee:	f100 8184 	bmi.w	80212fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8020ff2:	42b1      	cmp	r1, r6
 8020ff4:	f2c0 8181 	blt.w	80212fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8020ff8:	3301      	adds	r3, #1
 8020ffa:	f100 817e 	bmi.w	80212fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8020ffe:	429a      	cmp	r2, r3
 8021000:	f2c0 817b 	blt.w	80212fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021004:	9b08      	ldr	r3, [sp, #32]
 8021006:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8021008:	9313      	str	r3, [sp, #76]	; 0x4c
 802100a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802100e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021010:	2b00      	cmp	r3, #0
 8021012:	f340 81a4 	ble.w	802135e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8021016:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021018:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802101a:	1418      	asrs	r0, r3, #16
 802101c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802101e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021022:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021024:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021028:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802102a:	142d      	asrs	r5, r5, #16
 802102c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021030:	f100 81f8 	bmi.w	8021424 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021034:	f102 3eff 	add.w	lr, r2, #4294967295
 8021038:	4575      	cmp	r5, lr
 802103a:	f280 81f3 	bge.w	8021424 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802103e:	2800      	cmp	r0, #0
 8021040:	f2c0 81f0 	blt.w	8021424 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021044:	f103 3eff 	add.w	lr, r3, #4294967295
 8021048:	4570      	cmp	r0, lr
 802104a:	f280 81eb 	bge.w	8021424 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802104e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021050:	b212      	sxth	r2, r2
 8021052:	fb00 5002 	mla	r0, r0, r2, r5
 8021056:	fa1f fe81 	uxth.w	lr, r1
 802105a:	eb03 0a00 	add.w	sl, r3, r0
 802105e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021062:	f813 9000 	ldrb.w	r9, [r3, r0]
 8021066:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802106a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802106e:	b29b      	uxth	r3, r3
 8021070:	f1bc 0f00 	cmp.w	ip, #0
 8021074:	f000 81b9 	beq.w	80213ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8021078:	f81a 4002 	ldrb.w	r4, [sl, r2]
 802107c:	940d      	str	r4, [sp, #52]	; 0x34
 802107e:	eb0a 0b02 	add.w	fp, sl, r2
 8021082:	fa1f fa8c 	uxth.w	sl, ip
 8021086:	fb0a fe0e 	mul.w	lr, sl, lr
 802108a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802108e:	fa1f fa8a 	uxth.w	sl, sl
 8021092:	eba5 050e 	sub.w	r5, r5, lr
 8021096:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802109a:	940e      	str	r4, [sp, #56]	; 0x38
 802109c:	eba3 030a 	sub.w	r3, r3, sl
 80210a0:	b2ad      	uxth	r5, r5
 80210a2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80210a4:	b29b      	uxth	r3, r3
 80210a6:	fb08 f505 	mul.w	r5, r8, r5
 80210aa:	fb09 5303 	mla	r3, r9, r3, r5
 80210ae:	fb0a 3304 	mla	r3, sl, r4, r3
 80210b2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80210b4:	fb0e 3304 	mla	r3, lr, r4, r3
 80210b8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80210bc:	2b00      	cmp	r3, #0
 80210be:	f000 810f 	beq.w	80212e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80210c2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80210c4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80210c8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80210cc:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80210d0:	f000 8190 	beq.w	80213f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 80210d4:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80210d8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80210dc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80210e0:	fb09 f000 	mul.w	r0, r9, r0
 80210e4:	fb0a fe0e 	mul.w	lr, sl, lr
 80210e8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80210ec:	f100 0b20 	add.w	fp, r0, #32
 80210f0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80210f4:	44ce      	add	lr, r9
 80210f6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80210fa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80210fe:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021102:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021106:	ea4e 0909 	orr.w	r9, lr, r9
 802110a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802110e:	8868      	ldrh	r0, [r5, #2]
 8021110:	d019      	beq.n	8021146 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8021112:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021116:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802111a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802111e:	fb08 f800 	mul.w	r8, r8, r0
 8021122:	fb0a fe0e 	mul.w	lr, sl, lr
 8021126:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802112a:	f108 0b20 	add.w	fp, r8, #32
 802112e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021132:	4486      	add	lr, r0
 8021134:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021138:	0a00      	lsrs	r0, r0, #8
 802113a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802113e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021142:	ea4e 0000 	orr.w	r0, lr, r0
 8021146:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802114a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802114e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8021152:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021156:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802115a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802115e:	ea4e 0909 	orr.w	r9, lr, r9
 8021162:	ea4a 0000 	orr.w	r0, sl, r0
 8021166:	f1bc 0f00 	cmp.w	ip, #0
 802116a:	f000 8145 	beq.w	80213f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 802116e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8021172:	3a01      	subs	r2, #1
 8021174:	0052      	lsls	r2, r2, #1
 8021176:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021178:	3202      	adds	r2, #2
 802117a:	2cff      	cmp	r4, #255	; 0xff
 802117c:	eb05 0e02 	add.w	lr, r5, r2
 8021180:	5aaa      	ldrh	r2, [r5, r2]
 8021182:	d018      	beq.n	80211b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8021184:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8021188:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802118c:	fb04 fa02 	mul.w	sl, r4, r2
 8021190:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021194:	fb08 f805 	mul.w	r8, r8, r5
 8021198:	f10a 0520 	add.w	r5, sl, #32
 802119c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80211a0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80211a4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80211a8:	4442      	add	r2, r8
 80211aa:	0a2d      	lsrs	r5, r5, #8
 80211ac:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80211b0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80211b4:	432a      	orrs	r2, r5
 80211b6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80211b8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80211bc:	2cff      	cmp	r4, #255	; 0xff
 80211be:	d01a      	beq.n	80211f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80211c0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80211c4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80211c8:	fb04 fa05 	mul.w	sl, r4, r5
 80211cc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80211d0:	fb08 f80e 	mul.w	r8, r8, lr
 80211d4:	f10a 0e20 	add.w	lr, sl, #32
 80211d8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80211dc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80211e0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80211e4:	4445      	add	r5, r8
 80211e6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80211ea:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80211ee:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80211f2:	ea45 050e 	orr.w	r5, r5, lr
 80211f6:	fb1c fe01 	smulbb	lr, ip, r1
 80211fa:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80211fe:	f1cc 0810 	rsb	r8, ip, #16
 8021202:	eba8 0801 	sub.w	r8, r8, r1
 8021206:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802120a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802120e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021212:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8021216:	4341      	muls	r1, r0
 8021218:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802121c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021220:	ea4a 0202 	orr.w	r2, sl, r2
 8021224:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8021228:	fb09 1108 	mla	r1, r9, r8, r1
 802122c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021230:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021234:	fb0c 1102 	mla	r1, ip, r2, r1
 8021238:	ea4b 0505 	orr.w	r5, fp, r5
 802123c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021240:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021244:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021248:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802124c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021250:	ea42 0e0e 	orr.w	lr, r2, lr
 8021254:	fa1f f28e 	uxth.w	r2, lr
 8021258:	2bff      	cmp	r3, #255	; 0xff
 802125a:	d103      	bne.n	8021264 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 802125c:	9912      	ldr	r1, [sp, #72]	; 0x48
 802125e:	29ff      	cmp	r1, #255	; 0xff
 8021260:	f000 80de 	beq.w	8021420 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8021264:	990a      	ldr	r1, [sp, #40]	; 0x28
 8021266:	8838      	ldrh	r0, [r7, #0]
 8021268:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802126a:	434b      	muls	r3, r1
 802126c:	f103 0c01 	add.w	ip, r3, #1
 8021270:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8021274:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021278:	fa5f fc83 	uxtb.w	ip, r3
 802127c:	1203      	asrs	r3, r0, #8
 802127e:	1215      	asrs	r5, r2, #8
 8021280:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021284:	fb13 f30c 	smulbb	r3, r3, ip
 8021288:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802128c:	fb05 3501 	mla	r5, r5, r1, r3
 8021290:	10c3      	asrs	r3, r0, #3
 8021292:	10d1      	asrs	r1, r2, #3
 8021294:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021298:	fb13 f30c 	smulbb	r3, r3, ip
 802129c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80212a0:	fb01 3104 	mla	r1, r1, r4, r3
 80212a4:	00c3      	lsls	r3, r0, #3
 80212a6:	00d2      	lsls	r2, r2, #3
 80212a8:	b2db      	uxtb	r3, r3
 80212aa:	b2d2      	uxtb	r2, r2
 80212ac:	fb13 f30c 	smulbb	r3, r3, ip
 80212b0:	b2ad      	uxth	r5, r5
 80212b2:	fb02 3304 	mla	r3, r2, r4, r3
 80212b6:	b29a      	uxth	r2, r3
 80212b8:	1c6b      	adds	r3, r5, #1
 80212ba:	b289      	uxth	r1, r1
 80212bc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80212c0:	1c53      	adds	r3, r2, #1
 80212c2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80212c6:	1c4a      	adds	r2, r1, #1
 80212c8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80212cc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80212d0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80212d4:	0949      	lsrs	r1, r1, #5
 80212d6:	432b      	orrs	r3, r5
 80212d8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80212dc:	430b      	orrs	r3, r1
 80212de:	803b      	strh	r3, [r7, #0]
 80212e0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80212e2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80212e4:	4413      	add	r3, r2
 80212e6:	9321      	str	r3, [sp, #132]	; 0x84
 80212e8:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80212ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80212ec:	441a      	add	r2, r3
 80212ee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80212f0:	9222      	str	r2, [sp, #136]	; 0x88
 80212f2:	3b01      	subs	r3, #1
 80212f4:	3702      	adds	r7, #2
 80212f6:	9313      	str	r3, [sp, #76]	; 0x4c
 80212f8:	e689      	b.n	802100e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80212fa:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80212fc:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 80212fe:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8021300:	4433      	add	r3, r6
 8021302:	9321      	str	r3, [sp, #132]	; 0x84
 8021304:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021306:	441c      	add	r4, r3
 8021308:	9b08      	ldr	r3, [sp, #32]
 802130a:	9422      	str	r4, [sp, #136]	; 0x88
 802130c:	3b01      	subs	r3, #1
 802130e:	9308      	str	r3, [sp, #32]
 8021310:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021312:	3302      	adds	r3, #2
 8021314:	9309      	str	r3, [sp, #36]	; 0x24
 8021316:	e658      	b.n	8020fca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8021318:	d028      	beq.n	802136c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802131a:	9b08      	ldr	r3, [sp, #32]
 802131c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 802131e:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8021320:	3b01      	subs	r3, #1
 8021322:	fb00 5003 	mla	r0, r0, r3, r5
 8021326:	1400      	asrs	r0, r0, #16
 8021328:	f53f ae6c 	bmi.w	8021004 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802132c:	3901      	subs	r1, #1
 802132e:	4288      	cmp	r0, r1
 8021330:	f6bf ae68 	bge.w	8021004 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021334:	9924      	ldr	r1, [sp, #144]	; 0x90
 8021336:	9822      	ldr	r0, [sp, #136]	; 0x88
 8021338:	fb01 0303 	mla	r3, r1, r3, r0
 802133c:	141b      	asrs	r3, r3, #16
 802133e:	f53f ae61 	bmi.w	8021004 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021342:	3a01      	subs	r2, #1
 8021344:	4293      	cmp	r3, r2
 8021346:	f6bf ae5d 	bge.w	8021004 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802134a:	9b08      	ldr	r3, [sp, #32]
 802134c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8021350:	9313      	str	r3, [sp, #76]	; 0x4c
 8021352:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021356:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021358:	2b00      	cmp	r3, #0
 802135a:	f300 8082 	bgt.w	8021462 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 802135e:	9b08      	ldr	r3, [sp, #32]
 8021360:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021364:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021366:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802136a:	9309      	str	r3, [sp, #36]	; 0x24
 802136c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802136e:	2b00      	cmp	r3, #0
 8021370:	f340 81ef 	ble.w	8021752 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8021374:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021378:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802137c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021380:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021382:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021386:	ee31 1a05 	vadd.f32	s2, s2, s10
 802138a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802138e:	eef0 6a62 	vmov.f32	s13, s5
 8021392:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021396:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802139a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802139e:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 80213a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80213a6:	eef0 6a43 	vmov.f32	s13, s6
 80213aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80213ae:	ee12 2a90 	vmov	r2, s5
 80213b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80213b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80213ba:	ee13 2a10 	vmov	r2, s6
 80213be:	9323      	str	r3, [sp, #140]	; 0x8c
 80213c0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80213c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80213c6:	9324      	str	r3, [sp, #144]	; 0x90
 80213c8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80213ca:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80213cc:	3b01      	subs	r3, #1
 80213ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80213d2:	9311      	str	r3, [sp, #68]	; 0x44
 80213d4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80213d6:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 80213da:	bf08      	it	eq
 80213dc:	4613      	moveq	r3, r2
 80213de:	9308      	str	r3, [sp, #32]
 80213e0:	eeb0 3a67 	vmov.f32	s6, s15
 80213e4:	eef0 2a47 	vmov.f32	s5, s14
 80213e8:	e5e1      	b.n	8020fae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80213ea:	fb08 f505 	mul.w	r5, r8, r5
 80213ee:	fb09 5303 	mla	r3, r9, r3, r5
 80213f2:	e661      	b.n	80210b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 80213f4:	4681      	mov	r9, r0
 80213f6:	e688      	b.n	802110a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80213f8:	f1c1 0210 	rsb	r2, r1, #16
 80213fc:	4341      	muls	r1, r0
 80213fe:	fb09 1902 	mla	r9, r9, r2, r1
 8021402:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021406:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802140a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802140e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021412:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021416:	ea42 0909 	orr.w	r9, r2, r9
 802141a:	fa1f f289 	uxth.w	r2, r9
 802141e:	e71b      	b.n	8021258 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8021420:	803a      	strh	r2, [r7, #0]
 8021422:	e75d      	b.n	80212e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021424:	f115 0e01 	adds.w	lr, r5, #1
 8021428:	f53f af5a 	bmi.w	80212e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802142c:	4572      	cmp	r2, lr
 802142e:	f6ff af57 	blt.w	80212e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021432:	f110 0e01 	adds.w	lr, r0, #1
 8021436:	f53f af53 	bmi.w	80212e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802143a:	4573      	cmp	r3, lr
 802143c:	f6ff af50 	blt.w	80212e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021440:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021442:	9502      	str	r5, [sp, #8]
 8021444:	b21b      	sxth	r3, r3
 8021446:	b212      	sxth	r2, r2
 8021448:	e9cd 0103 	strd	r0, r1, [sp, #12]
 802144c:	9301      	str	r3, [sp, #4]
 802144e:	9200      	str	r2, [sp, #0]
 8021450:	e9cd c405 	strd	ip, r4, [sp, #20]
 8021454:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8021458:	4639      	mov	r1, r7
 802145a:	9815      	ldr	r0, [sp, #84]	; 0x54
 802145c:	f7ff fc04 	bl	8020c68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8021460:	e73e      	b.n	80212e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021462:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021464:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021468:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802146a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802146e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021470:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021474:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021476:	141f      	asrs	r7, r3, #16
 8021478:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802147a:	141b      	asrs	r3, r3, #16
 802147c:	fb01 3707 	mla	r7, r1, r7, r3
 8021480:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021482:	fa1f fc82 	uxth.w	ip, r2
 8021486:	eb03 0a07 	add.w	sl, r3, r7
 802148a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802148e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8021492:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021496:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802149a:	b29b      	uxth	r3, r3
 802149c:	2d00      	cmp	r5, #0
 802149e:	f000 813d 	beq.w	802171c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 80214a2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80214a6:	940f      	str	r4, [sp, #60]	; 0x3c
 80214a8:	eb0a 0b01 	add.w	fp, sl, r1
 80214ac:	fa1f fa85 	uxth.w	sl, r5
 80214b0:	fb0a fc0c 	mul.w	ip, sl, ip
 80214b4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80214b8:	fa1f fa8a 	uxth.w	sl, sl
 80214bc:	eba0 000c 	sub.w	r0, r0, ip
 80214c0:	eba3 030a 	sub.w	r3, r3, sl
 80214c4:	b280      	uxth	r0, r0
 80214c6:	fb08 f000 	mul.w	r0, r8, r0
 80214ca:	b29b      	uxth	r3, r3
 80214cc:	fb09 0303 	mla	r3, r9, r3, r0
 80214d0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80214d2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80214d6:	9410      	str	r4, [sp, #64]	; 0x40
 80214d8:	fb0a 3300 	mla	r3, sl, r0, r3
 80214dc:	fb0c 3304 	mla	r3, ip, r4, r3
 80214e0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80214e4:	2b00      	cmp	r3, #0
 80214e6:	f000 810b 	beq.w	8021700 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80214ea:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80214ec:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80214ee:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80214f2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80214f6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80214fa:	f000 8114 	beq.w	8021726 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 80214fe:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021502:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021506:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802150a:	fb09 f707 	mul.w	r7, r9, r7
 802150e:	fb0a fc0c 	mul.w	ip, sl, ip
 8021512:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8021516:	f107 0b20 	add.w	fp, r7, #32
 802151a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802151e:	44cc      	add	ip, r9
 8021520:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8021524:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021528:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802152c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021530:	ea4c 0909 	orr.w	r9, ip, r9
 8021534:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021538:	8847      	ldrh	r7, [r0, #2]
 802153a:	d019      	beq.n	8021570 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 802153c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021540:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021544:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021548:	fb08 f807 	mul.w	r8, r8, r7
 802154c:	fb0a fc0c 	mul.w	ip, sl, ip
 8021550:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8021554:	f108 0b20 	add.w	fp, r8, #32
 8021558:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802155c:	44bc      	add	ip, r7
 802155e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8021562:	0a3f      	lsrs	r7, r7, #8
 8021564:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021568:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802156c:	ea4c 0707 	orr.w	r7, ip, r7
 8021570:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8021574:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8021578:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802157c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021580:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021584:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021588:	ea4c 0909 	orr.w	r9, ip, r9
 802158c:	ea4a 0707 	orr.w	r7, sl, r7
 8021590:	2d00      	cmp	r5, #0
 8021592:	f000 80ca 	beq.w	802172a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8021596:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802159a:	3901      	subs	r1, #1
 802159c:	0049      	lsls	r1, r1, #1
 802159e:	3102      	adds	r1, #2
 80215a0:	eb00 0c01 	add.w	ip, r0, r1
 80215a4:	5a41      	ldrh	r1, [r0, r1]
 80215a6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80215a8:	28ff      	cmp	r0, #255	; 0xff
 80215aa:	d019      	beq.n	80215e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 80215ac:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80215ae:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80215b2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80215b6:	fb04 fa01 	mul.w	sl, r4, r1
 80215ba:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80215be:	fb08 f800 	mul.w	r8, r8, r0
 80215c2:	f10a 0020 	add.w	r0, sl, #32
 80215c6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80215ca:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80215ce:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80215d2:	4441      	add	r1, r8
 80215d4:	0a00      	lsrs	r0, r0, #8
 80215d6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80215da:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80215de:	4301      	orrs	r1, r0
 80215e0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80215e2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80215e6:	2cff      	cmp	r4, #255	; 0xff
 80215e8:	d01a      	beq.n	8021620 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 80215ea:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80215ee:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80215f2:	fb04 fa00 	mul.w	sl, r4, r0
 80215f6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80215fa:	fb08 f80c 	mul.w	r8, r8, ip
 80215fe:	f10a 0c20 	add.w	ip, sl, #32
 8021602:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8021606:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802160a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802160e:	4440      	add	r0, r8
 8021610:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021614:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8021618:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802161c:	ea40 000c 	orr.w	r0, r0, ip
 8021620:	fb15 fc02 	smulbb	ip, r5, r2
 8021624:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8021628:	f1c5 0810 	rsb	r8, r5, #16
 802162c:	eba8 0802 	sub.w	r8, r8, r2
 8021630:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8021634:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8021638:	437a      	muls	r2, r7
 802163a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802163e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8021642:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021646:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802164a:	fb09 2208 	mla	r2, r9, r8, r2
 802164e:	ea4a 0101 	orr.w	r1, sl, r1
 8021652:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8021656:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802165a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802165e:	fb05 2201 	mla	r2, r5, r1, r2
 8021662:	ea4b 0000 	orr.w	r0, fp, r0
 8021666:	fb0c 2200 	mla	r2, ip, r0, r2
 802166a:	0d57      	lsrs	r7, r2, #21
 802166c:	0952      	lsrs	r2, r2, #5
 802166e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021672:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021676:	433a      	orrs	r2, r7
 8021678:	2bff      	cmp	r3, #255	; 0xff
 802167a:	b292      	uxth	r2, r2
 802167c:	d102      	bne.n	8021684 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802167e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021680:	29ff      	cmp	r1, #255	; 0xff
 8021682:	d063      	beq.n	802174c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8021684:	980a      	ldr	r0, [sp, #40]	; 0x28
 8021686:	f8be 1000 	ldrh.w	r1, [lr]
 802168a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802168c:	4343      	muls	r3, r0
 802168e:	1c58      	adds	r0, r3, #1
 8021690:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8021694:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021698:	1208      	asrs	r0, r1, #8
 802169a:	b2db      	uxtb	r3, r3
 802169c:	1215      	asrs	r5, r2, #8
 802169e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80216a2:	fb10 f003 	smulbb	r0, r0, r3
 80216a6:	10cf      	asrs	r7, r1, #3
 80216a8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80216ac:	00c9      	lsls	r1, r1, #3
 80216ae:	fb05 0504 	mla	r5, r5, r4, r0
 80216b2:	b2c9      	uxtb	r1, r1
 80216b4:	10d0      	asrs	r0, r2, #3
 80216b6:	00d2      	lsls	r2, r2, #3
 80216b8:	fb11 f103 	smulbb	r1, r1, r3
 80216bc:	b2d2      	uxtb	r2, r2
 80216be:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80216c2:	fb02 1204 	mla	r2, r2, r4, r1
 80216c6:	fb17 f703 	smulbb	r7, r7, r3
 80216ca:	b2ad      	uxth	r5, r5
 80216cc:	b292      	uxth	r2, r2
 80216ce:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80216d2:	fb00 7004 	mla	r0, r0, r4, r7
 80216d6:	1c6b      	adds	r3, r5, #1
 80216d8:	1c57      	adds	r7, r2, #1
 80216da:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80216de:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80216e2:	b280      	uxth	r0, r0
 80216e4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80216e8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80216ec:	433d      	orrs	r5, r7
 80216ee:	1c47      	adds	r7, r0, #1
 80216f0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80216f4:	097f      	lsrs	r7, r7, #5
 80216f6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80216fa:	433d      	orrs	r5, r7
 80216fc:	f8ae 5000 	strh.w	r5, [lr]
 8021700:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021702:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021704:	4413      	add	r3, r2
 8021706:	9321      	str	r3, [sp, #132]	; 0x84
 8021708:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802170a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802170c:	441a      	add	r2, r3
 802170e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021710:	9222      	str	r2, [sp, #136]	; 0x88
 8021712:	3b01      	subs	r3, #1
 8021714:	f10e 0e02 	add.w	lr, lr, #2
 8021718:	9313      	str	r3, [sp, #76]	; 0x4c
 802171a:	e61c      	b.n	8021356 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 802171c:	fb08 f000 	mul.w	r0, r8, r0
 8021720:	fb09 0303 	mla	r3, r9, r3, r0
 8021724:	e6dc      	b.n	80214e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8021726:	46b9      	mov	r9, r7
 8021728:	e704      	b.n	8021534 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 802172a:	f1c2 0110 	rsb	r1, r2, #16
 802172e:	437a      	muls	r2, r7
 8021730:	fb09 2901 	mla	r9, r9, r1, r2
 8021734:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021738:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802173c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8021740:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021744:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021748:	4302      	orrs	r2, r0
 802174a:	e795      	b.n	8021678 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 802174c:	f8ae 2000 	strh.w	r2, [lr]
 8021750:	e7d6      	b.n	8021700 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8021752:	b017      	add	sp, #92	; 0x5c
 8021754:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021758 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8021758:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802175c:	b085      	sub	sp, #20
 802175e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8021762:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8021766:	9103      	str	r1, [sp, #12]
 8021768:	fb00 7406 	mla	r4, r0, r6, r7
 802176c:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8021770:	2800      	cmp	r0, #0
 8021772:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8021776:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802177a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 802177e:	9501      	str	r5, [sp, #4]
 8021780:	eb02 0904 	add.w	r9, r2, r4
 8021784:	f2c0 8141 	blt.w	8021a0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021788:	4583      	cmp	fp, r0
 802178a:	f340 813e 	ble.w	8021a0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 802178e:	2f00      	cmp	r7, #0
 8021790:	f2c0 8137 	blt.w	8021a02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021794:	42be      	cmp	r6, r7
 8021796:	f340 8134 	ble.w	8021a02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 802179a:	f812 c004 	ldrb.w	ip, [r2, r4]
 802179e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 80217a2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80217a6:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 80217aa:	4355      	muls	r5, r2
 80217ac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80217b0:	f64f 041f 	movw	r4, #63519	; 0xf81f
 80217b4:	fb0c f203 	mul.w	r2, ip, r3
 80217b8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80217bc:	f605 0501 	addw	r5, r5, #2049	; 0x801
 80217c0:	441d      	add	r5, r3
 80217c2:	f102 0320 	add.w	r3, r2, #32
 80217c6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80217ca:	0a1b      	lsrs	r3, r3, #8
 80217cc:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80217d0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80217d4:	431c      	orrs	r4, r3
 80217d6:	1c7b      	adds	r3, r7, #1
 80217d8:	f100 811c 	bmi.w	8021a14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 80217dc:	429e      	cmp	r6, r3
 80217de:	f340 8119 	ble.w	8021a14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 80217e2:	2900      	cmp	r1, #0
 80217e4:	f000 8119 	beq.w	8021a1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 80217e8:	9a01      	ldr	r2, [sp, #4]
 80217ea:	f899 3001 	ldrb.w	r3, [r9, #1]
 80217ee:	8855      	ldrh	r5, [r2, #2]
 80217f0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80217f4:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80217f8:	fb08 f802 	mul.w	r8, r8, r2
 80217fc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021800:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8021804:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021808:	435d      	muls	r5, r3
 802180a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802180e:	44d0      	add	r8, sl
 8021810:	f105 0a20 	add.w	sl, r5, #32
 8021814:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021818:	0a2d      	lsrs	r5, r5, #8
 802181a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802181e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021822:	432a      	orrs	r2, r5
 8021824:	3001      	adds	r0, #1
 8021826:	f100 80fe 	bmi.w	8021a26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 802182a:	4583      	cmp	fp, r0
 802182c:	f340 80fb 	ble.w	8021a26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8021830:	f1be 0f00 	cmp.w	lr, #0
 8021834:	f000 80fc 	beq.w	8021a30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8021838:	2f00      	cmp	r7, #0
 802183a:	f2c0 80f1 	blt.w	8021a20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 802183e:	42be      	cmp	r6, r7
 8021840:	f340 80ee 	ble.w	8021a20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8021844:	9801      	ldr	r0, [sp, #4]
 8021846:	f819 5006 	ldrb.w	r5, [r9, r6]
 802184a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802184e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8021852:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8021856:	fb0a fa00 	mul.w	sl, sl, r0
 802185a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 802185e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8021862:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8021866:	fb05 f808 	mul.w	r8, r5, r8
 802186a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 802186e:	4482      	add	sl, r0
 8021870:	f108 0020 	add.w	r0, r8, #32
 8021874:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021878:	0a00      	lsrs	r0, r0, #8
 802187a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802187e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021882:	ea4b 0b00 	orr.w	fp, fp, r0
 8021886:	3701      	adds	r7, #1
 8021888:	f100 80d7 	bmi.w	8021a3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 802188c:	42be      	cmp	r6, r7
 802188e:	f340 80d4 	ble.w	8021a3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8021892:	2900      	cmp	r1, #0
 8021894:	f000 80d4 	beq.w	8021a40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8021898:	3601      	adds	r6, #1
 802189a:	9801      	ldr	r0, [sp, #4]
 802189c:	f819 7006 	ldrb.w	r7, [r9, r6]
 80218a0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80218a4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80218a8:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 80218ac:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80218b0:	fb09 f906 	mul.w	r9, r9, r6
 80218b4:	fb07 f800 	mul.w	r8, r7, r0
 80218b8:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80218bc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80218c0:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80218c4:	44d1      	add	r9, sl
 80218c6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80218ca:	f108 0020 	add.w	r0, r8, #32
 80218ce:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80218d2:	0a00      	lsrs	r0, r0, #8
 80218d4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80218d8:	4330      	orrs	r0, r6
 80218da:	b28e      	uxth	r6, r1
 80218dc:	fa1f f98e 	uxth.w	r9, lr
 80218e0:	fb06 f809 	mul.w	r8, r6, r9
 80218e4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80218e8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80218ec:	0136      	lsls	r6, r6, #4
 80218ee:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80218f2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80218f6:	9601      	str	r6, [sp, #4]
 80218f8:	ea4a 0404 	orr.w	r4, sl, r4
 80218fc:	fa1f f689 	uxth.w	r6, r9
 8021900:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021904:	fb11 f90e 	smulbb	r9, r1, lr
 8021908:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 802190c:	9602      	str	r6, [sp, #8]
 802190e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021912:	4626      	mov	r6, r4
 8021914:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021918:	f1ce 0410 	rsb	r4, lr, #16
 802191c:	1a64      	subs	r4, r4, r1
 802191e:	ea4a 0202 	orr.w	r2, sl, r2
 8021922:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8021926:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802192a:	434a      	muls	r2, r1
 802192c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021930:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021934:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021938:	fb04 2406 	mla	r4, r4, r6, r2
 802193c:	ea4a 0000 	orr.w	r0, sl, r0
 8021940:	fb09 4200 	mla	r2, r9, r0, r4
 8021944:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021948:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802194c:	9801      	ldr	r0, [sp, #4]
 802194e:	9903      	ldr	r1, [sp, #12]
 8021950:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021954:	ea44 0b0b 	orr.w	fp, r4, fp
 8021958:	9c02      	ldr	r4, [sp, #8]
 802195a:	8809      	ldrh	r1, [r1, #0]
 802195c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8021960:	1b00      	subs	r0, r0, r4
 8021962:	9c01      	ldr	r4, [sp, #4]
 8021964:	eba4 0608 	sub.w	r6, r4, r8
 8021968:	b2b6      	uxth	r6, r6
 802196a:	b280      	uxth	r0, r0
 802196c:	4373      	muls	r3, r6
 802196e:	fb0c 3300 	mla	r3, ip, r0, r3
 8021972:	9802      	ldr	r0, [sp, #8]
 8021974:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021978:	fb00 3505 	mla	r5, r0, r5, r3
 802197c:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8021980:	fb08 5707 	mla	r7, r8, r7, r5
 8021984:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021988:	120b      	asrs	r3, r1, #8
 802198a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802198e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8021992:	b2ff      	uxtb	r7, r7
 8021994:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021998:	10c8      	asrs	r0, r1, #3
 802199a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802199e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80219a2:	00c9      	lsls	r1, r1, #3
 80219a4:	437b      	muls	r3, r7
 80219a6:	ea42 0e0e 	orr.w	lr, r2, lr
 80219aa:	b2c9      	uxtb	r1, r1
 80219ac:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80219b0:	fa1f f28e 	uxth.w	r2, lr
 80219b4:	4378      	muls	r0, r7
 80219b6:	434f      	muls	r7, r1
 80219b8:	1c59      	adds	r1, r3, #1
 80219ba:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80219be:	1213      	asrs	r3, r2, #8
 80219c0:	f023 0307 	bic.w	r3, r3, #7
 80219c4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80219c8:	1c41      	adds	r1, r0, #1
 80219ca:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80219ce:	10d1      	asrs	r1, r2, #3
 80219d0:	f021 0103 	bic.w	r1, r1, #3
 80219d4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80219d8:	021b      	lsls	r3, r3, #8
 80219da:	00c9      	lsls	r1, r1, #3
 80219dc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80219e0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80219e4:	430b      	orrs	r3, r1
 80219e6:	1c79      	adds	r1, r7, #1
 80219e8:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80219ec:	00d2      	lsls	r2, r2, #3
 80219ee:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80219f2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80219f6:	431a      	orrs	r2, r3
 80219f8:	9b03      	ldr	r3, [sp, #12]
 80219fa:	801a      	strh	r2, [r3, #0]
 80219fc:	b005      	add	sp, #20
 80219fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021a02:	f04f 0c00 	mov.w	ip, #0
 8021a06:	4664      	mov	r4, ip
 8021a08:	e6e5      	b.n	80217d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8021a0a:	2300      	movs	r3, #0
 8021a0c:	469c      	mov	ip, r3
 8021a0e:	461a      	mov	r2, r3
 8021a10:	461c      	mov	r4, r3
 8021a12:	e707      	b.n	8021824 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021a14:	2300      	movs	r3, #0
 8021a16:	461a      	mov	r2, r3
 8021a18:	e704      	b.n	8021824 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021a1a:	460b      	mov	r3, r1
 8021a1c:	460a      	mov	r2, r1
 8021a1e:	e701      	b.n	8021824 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021a20:	2500      	movs	r5, #0
 8021a22:	46ab      	mov	fp, r5
 8021a24:	e72f      	b.n	8021886 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8021a26:	2700      	movs	r7, #0
 8021a28:	463d      	mov	r5, r7
 8021a2a:	4638      	mov	r0, r7
 8021a2c:	46bb      	mov	fp, r7
 8021a2e:	e754      	b.n	80218da <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021a30:	4677      	mov	r7, lr
 8021a32:	4675      	mov	r5, lr
 8021a34:	4670      	mov	r0, lr
 8021a36:	46f3      	mov	fp, lr
 8021a38:	e74f      	b.n	80218da <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021a3a:	2700      	movs	r7, #0
 8021a3c:	4638      	mov	r0, r7
 8021a3e:	e74c      	b.n	80218da <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021a40:	460f      	mov	r7, r1
 8021a42:	4608      	mov	r0, r1
 8021a44:	e749      	b.n	80218da <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08021a48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021a48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021a4c:	b093      	sub	sp, #76	; 0x4c
 8021a4e:	9210      	str	r2, [sp, #64]	; 0x40
 8021a50:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021a52:	910e      	str	r1, [sp, #56]	; 0x38
 8021a54:	9306      	str	r3, [sp, #24]
 8021a56:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8021a5a:	9011      	str	r0, [sp, #68]	; 0x44
 8021a5c:	6850      	ldr	r0, [r2, #4]
 8021a5e:	6812      	ldr	r2, [r2, #0]
 8021a60:	fb00 1303 	mla	r3, r0, r3, r1
 8021a64:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021a68:	9307      	str	r3, [sp, #28]
 8021a6a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021a6c:	681b      	ldr	r3, [r3, #0]
 8021a6e:	9308      	str	r3, [sp, #32]
 8021a70:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021a72:	685b      	ldr	r3, [r3, #4]
 8021a74:	9309      	str	r3, [sp, #36]	; 0x24
 8021a76:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021a78:	2b00      	cmp	r3, #0
 8021a7a:	dc03      	bgt.n	8021a84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021a7c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021a7e:	2b00      	cmp	r3, #0
 8021a80:	f340 83b4 	ble.w	80221ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8021a84:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021a86:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021a8a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021a8e:	1e48      	subs	r0, r1, #1
 8021a90:	1e55      	subs	r5, r2, #1
 8021a92:	9b06      	ldr	r3, [sp, #24]
 8021a94:	2b00      	cmp	r3, #0
 8021a96:	f340 8163 	ble.w	8021d60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8021a9a:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8021a9c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021a9e:	1436      	asrs	r6, r6, #16
 8021aa0:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021aa4:	d406      	bmi.n	8021ab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021aa6:	4286      	cmp	r6, r0
 8021aa8:	da04      	bge.n	8021ab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021aaa:	2b00      	cmp	r3, #0
 8021aac:	db02      	blt.n	8021ab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021aae:	42ab      	cmp	r3, r5
 8021ab0:	f2c0 8157 	blt.w	8021d62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8021ab4:	3601      	adds	r6, #1
 8021ab6:	f100 8144 	bmi.w	8021d42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021aba:	42b1      	cmp	r1, r6
 8021abc:	f2c0 8141 	blt.w	8021d42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021ac0:	3301      	adds	r3, #1
 8021ac2:	f100 813e 	bmi.w	8021d42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021ac6:	429a      	cmp	r2, r3
 8021ac8:	f2c0 813b 	blt.w	8021d42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021acc:	9b06      	ldr	r3, [sp, #24]
 8021ace:	9f07      	ldr	r7, [sp, #28]
 8021ad0:	930f      	str	r3, [sp, #60]	; 0x3c
 8021ad2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021ad6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021ad8:	2b00      	cmp	r3, #0
 8021ada:	f340 8164 	ble.w	8021da6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8021ade:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021ae0:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8021ae2:	1418      	asrs	r0, r3, #16
 8021ae4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021ae6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021aea:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021aec:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021af0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021af2:	142d      	asrs	r5, r5, #16
 8021af4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021af8:	f100 81ee 	bmi.w	8021ed8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021afc:	f102 3eff 	add.w	lr, r2, #4294967295
 8021b00:	4575      	cmp	r5, lr
 8021b02:	f280 81e9 	bge.w	8021ed8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021b06:	2800      	cmp	r0, #0
 8021b08:	f2c0 81e6 	blt.w	8021ed8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021b0c:	f103 3eff 	add.w	lr, r3, #4294967295
 8021b10:	4570      	cmp	r0, lr
 8021b12:	f280 81e1 	bge.w	8021ed8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021b16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021b18:	b212      	sxth	r2, r2
 8021b1a:	fb00 5002 	mla	r0, r0, r2, r5
 8021b1e:	fa1f fe81 	uxth.w	lr, r1
 8021b22:	eb03 0a00 	add.w	sl, r3, r0
 8021b26:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021b2a:	f813 9000 	ldrb.w	r9, [r3, r0]
 8021b2e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021b32:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8021b36:	b29b      	uxth	r3, r3
 8021b38:	f1bc 0f00 	cmp.w	ip, #0
 8021b3c:	f000 8179 	beq.w	8021e32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8021b40:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8021b44:	940a      	str	r4, [sp, #40]	; 0x28
 8021b46:	eb0a 0b02 	add.w	fp, sl, r2
 8021b4a:	fa1f fa8c 	uxth.w	sl, ip
 8021b4e:	fb0a fe0e 	mul.w	lr, sl, lr
 8021b52:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8021b56:	fa1f fa8a 	uxth.w	sl, sl
 8021b5a:	eba5 050e 	sub.w	r5, r5, lr
 8021b5e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021b62:	940b      	str	r4, [sp, #44]	; 0x2c
 8021b64:	eba3 030a 	sub.w	r3, r3, sl
 8021b68:	b2ad      	uxth	r5, r5
 8021b6a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021b6c:	b29b      	uxth	r3, r3
 8021b6e:	fb08 f505 	mul.w	r5, r8, r5
 8021b72:	fb09 5303 	mla	r3, r9, r3, r5
 8021b76:	fb0a 3304 	mla	r3, sl, r4, r3
 8021b7a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021b7c:	fb0e 3304 	mla	r3, lr, r4, r3
 8021b80:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021b84:	2b00      	cmp	r3, #0
 8021b86:	f000 80cf 	beq.w	8021d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8021b8a:	9c08      	ldr	r4, [sp, #32]
 8021b8c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021b90:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8021b94:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021b98:	f000 8150 	beq.w	8021e3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8021b9c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021ba0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021ba4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021ba8:	fb09 f000 	mul.w	r0, r9, r0
 8021bac:	fb0a fe0e 	mul.w	lr, sl, lr
 8021bb0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8021bb4:	f100 0b20 	add.w	fp, r0, #32
 8021bb8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021bbc:	44ce      	add	lr, r9
 8021bbe:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8021bc2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021bc6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021bca:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021bce:	ea4e 0909 	orr.w	r9, lr, r9
 8021bd2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021bd6:	8868      	ldrh	r0, [r5, #2]
 8021bd8:	d019      	beq.n	8021c0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8021bda:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021bde:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021be2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021be6:	fb08 f800 	mul.w	r8, r8, r0
 8021bea:	fb0a fe0e 	mul.w	lr, sl, lr
 8021bee:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8021bf2:	f108 0b20 	add.w	fp, r8, #32
 8021bf6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021bfa:	4486      	add	lr, r0
 8021bfc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021c00:	0a00      	lsrs	r0, r0, #8
 8021c02:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021c06:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021c0a:	ea4e 0000 	orr.w	r0, lr, r0
 8021c0e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8021c12:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021c16:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8021c1a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021c1e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021c22:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021c26:	ea4e 0909 	orr.w	r9, lr, r9
 8021c2a:	ea4a 0000 	orr.w	r0, sl, r0
 8021c2e:	f1bc 0f00 	cmp.w	ip, #0
 8021c32:	f000 8105 	beq.w	8021e40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8021c36:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8021c3a:	3a01      	subs	r2, #1
 8021c3c:	0052      	lsls	r2, r2, #1
 8021c3e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021c40:	3202      	adds	r2, #2
 8021c42:	2cff      	cmp	r4, #255	; 0xff
 8021c44:	eb05 0e02 	add.w	lr, r5, r2
 8021c48:	5aaa      	ldrh	r2, [r5, r2]
 8021c4a:	d018      	beq.n	8021c7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8021c4c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8021c50:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021c54:	fb04 fa02 	mul.w	sl, r4, r2
 8021c58:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021c5c:	fb08 f805 	mul.w	r8, r8, r5
 8021c60:	f10a 0520 	add.w	r5, sl, #32
 8021c64:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021c68:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8021c6c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021c70:	4442      	add	r2, r8
 8021c72:	0a2d      	lsrs	r5, r5, #8
 8021c74:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021c78:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021c7c:	432a      	orrs	r2, r5
 8021c7e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021c80:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8021c84:	2cff      	cmp	r4, #255	; 0xff
 8021c86:	d01a      	beq.n	8021cbe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8021c88:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8021c8c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021c90:	fb04 fa05 	mul.w	sl, r4, r5
 8021c94:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021c98:	fb08 f80e 	mul.w	r8, r8, lr
 8021c9c:	f10a 0e20 	add.w	lr, sl, #32
 8021ca0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8021ca4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021ca8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021cac:	4445      	add	r5, r8
 8021cae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021cb2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8021cb6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8021cba:	ea45 050e 	orr.w	r5, r5, lr
 8021cbe:	fb1c fe01 	smulbb	lr, ip, r1
 8021cc2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8021cc6:	f1cc 0810 	rsb	r8, ip, #16
 8021cca:	eba8 0801 	sub.w	r8, r8, r1
 8021cce:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021cd2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8021cd6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021cda:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8021cde:	4341      	muls	r1, r0
 8021ce0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021ce4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021ce8:	ea4a 0202 	orr.w	r2, sl, r2
 8021cec:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8021cf0:	fb09 1108 	mla	r1, r9, r8, r1
 8021cf4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021cf8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021cfc:	fb0c 1102 	mla	r1, ip, r2, r1
 8021d00:	ea4b 0505 	orr.w	r5, fp, r5
 8021d04:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021d08:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021d0c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021d10:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021d14:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021d18:	ea42 0e0e 	orr.w	lr, r2, lr
 8021d1c:	fa1f f28e 	uxth.w	r2, lr
 8021d20:	2bff      	cmp	r3, #255	; 0xff
 8021d22:	f040 80a1 	bne.w	8021e68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8021d26:	803a      	strh	r2, [r7, #0]
 8021d28:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021d2a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8021d2c:	4413      	add	r3, r2
 8021d2e:	931d      	str	r3, [sp, #116]	; 0x74
 8021d30:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8021d32:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021d34:	441a      	add	r2, r3
 8021d36:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021d38:	921e      	str	r2, [sp, #120]	; 0x78
 8021d3a:	3b01      	subs	r3, #1
 8021d3c:	3702      	adds	r7, #2
 8021d3e:	930f      	str	r3, [sp, #60]	; 0x3c
 8021d40:	e6c9      	b.n	8021ad6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021d42:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021d44:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8021d46:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8021d48:	4433      	add	r3, r6
 8021d4a:	931d      	str	r3, [sp, #116]	; 0x74
 8021d4c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021d4e:	441c      	add	r4, r3
 8021d50:	9b06      	ldr	r3, [sp, #24]
 8021d52:	941e      	str	r4, [sp, #120]	; 0x78
 8021d54:	3b01      	subs	r3, #1
 8021d56:	9306      	str	r3, [sp, #24]
 8021d58:	9b07      	ldr	r3, [sp, #28]
 8021d5a:	3302      	adds	r3, #2
 8021d5c:	9307      	str	r3, [sp, #28]
 8021d5e:	e698      	b.n	8021a92 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8021d60:	d028      	beq.n	8021db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021d62:	9b06      	ldr	r3, [sp, #24]
 8021d64:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8021d66:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8021d68:	3b01      	subs	r3, #1
 8021d6a:	fb00 5003 	mla	r0, r0, r3, r5
 8021d6e:	1400      	asrs	r0, r0, #16
 8021d70:	f53f aeac 	bmi.w	8021acc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8021d74:	3901      	subs	r1, #1
 8021d76:	4288      	cmp	r0, r1
 8021d78:	f6bf aea8 	bge.w	8021acc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8021d7c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8021d7e:	981e      	ldr	r0, [sp, #120]	; 0x78
 8021d80:	fb01 0303 	mla	r3, r1, r3, r0
 8021d84:	141b      	asrs	r3, r3, #16
 8021d86:	f53f aea1 	bmi.w	8021acc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8021d8a:	3a01      	subs	r2, #1
 8021d8c:	4293      	cmp	r3, r2
 8021d8e:	f6bf ae9d 	bge.w	8021acc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8021d92:	9b06      	ldr	r3, [sp, #24]
 8021d94:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8021d98:	930f      	str	r3, [sp, #60]	; 0x3c
 8021d9a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021d9e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021da0:	2b00      	cmp	r3, #0
 8021da2:	f300 80b6 	bgt.w	8021f12 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8021da6:	9b06      	ldr	r3, [sp, #24]
 8021da8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021dac:	9b07      	ldr	r3, [sp, #28]
 8021dae:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021db2:	9307      	str	r3, [sp, #28]
 8021db4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021db6:	2b00      	cmp	r3, #0
 8021db8:	f340 8218 	ble.w	80221ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8021dbc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021dc0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021dc4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021dc8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021dca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021dce:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021dd2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021dd6:	eef0 6a62 	vmov.f32	s13, s5
 8021dda:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021dde:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021de2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021de6:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8021dea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021dee:	eef0 6a43 	vmov.f32	s13, s6
 8021df2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021df6:	ee12 2a90 	vmov	r2, s5
 8021dfa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021dfe:	fb92 f3f3 	sdiv	r3, r2, r3
 8021e02:	ee13 2a10 	vmov	r2, s6
 8021e06:	931f      	str	r3, [sp, #124]	; 0x7c
 8021e08:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021e0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8021e0e:	9320      	str	r3, [sp, #128]	; 0x80
 8021e10:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021e12:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8021e14:	3b01      	subs	r3, #1
 8021e16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021e1a:	930e      	str	r3, [sp, #56]	; 0x38
 8021e1c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021e1e:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8021e22:	bf08      	it	eq
 8021e24:	4613      	moveq	r3, r2
 8021e26:	9306      	str	r3, [sp, #24]
 8021e28:	eeb0 3a67 	vmov.f32	s6, s15
 8021e2c:	eef0 2a47 	vmov.f32	s5, s14
 8021e30:	e621      	b.n	8021a76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8021e32:	fb08 f505 	mul.w	r5, r8, r5
 8021e36:	fb09 5303 	mla	r3, r9, r3, r5
 8021e3a:	e6a1      	b.n	8021b80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8021e3c:	4681      	mov	r9, r0
 8021e3e:	e6c8      	b.n	8021bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8021e40:	f1c1 0210 	rsb	r2, r1, #16
 8021e44:	4341      	muls	r1, r0
 8021e46:	fb09 1902 	mla	r9, r9, r2, r1
 8021e4a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021e4e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8021e52:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021e56:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021e5a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021e5e:	ea42 0909 	orr.w	r9, r2, r9
 8021e62:	fa1f f289 	uxth.w	r2, r9
 8021e66:	e75b      	b.n	8021d20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8021e68:	f8b7 c000 	ldrh.w	ip, [r7]
 8021e6c:	43db      	mvns	r3, r3
 8021e6e:	ea4f 202c 	mov.w	r0, ip, asr #8
 8021e72:	fa5f fe83 	uxtb.w	lr, r3
 8021e76:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021e7a:	fb00 f00e 	mul.w	r0, r0, lr
 8021e7e:	1c41      	adds	r1, r0, #1
 8021e80:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8021e84:	1211      	asrs	r1, r2, #8
 8021e86:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8021e8a:	f021 0107 	bic.w	r1, r1, #7
 8021e8e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021e92:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8021e96:	48d7      	ldr	r0, [pc, #860]	; (80221f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8021e98:	fb05 f50e 	mul.w	r5, r5, lr
 8021e9c:	b2c9      	uxtb	r1, r1
 8021e9e:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8021ea2:	1c69      	adds	r1, r5, #1
 8021ea4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8021ea8:	10d1      	asrs	r1, r2, #3
 8021eaa:	f021 0103 	bic.w	r1, r1, #3
 8021eae:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8021eb2:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8021eb6:	b2db      	uxtb	r3, r3
 8021eb8:	00c9      	lsls	r1, r1, #3
 8021eba:	fb03 f30e 	mul.w	r3, r3, lr
 8021ebe:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021ec2:	4301      	orrs	r1, r0
 8021ec4:	1c58      	adds	r0, r3, #1
 8021ec6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8021eca:	00d2      	lsls	r2, r2, #3
 8021ecc:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8021ed0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021ed4:	430a      	orrs	r2, r1
 8021ed6:	e726      	b.n	8021d26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8021ed8:	f115 0e01 	adds.w	lr, r5, #1
 8021edc:	f53f af24 	bmi.w	8021d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8021ee0:	4572      	cmp	r2, lr
 8021ee2:	f6ff af21 	blt.w	8021d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8021ee6:	f110 0e01 	adds.w	lr, r0, #1
 8021eea:	f53f af1d 	bmi.w	8021d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8021eee:	4573      	cmp	r3, lr
 8021ef0:	f6ff af1a 	blt.w	8021d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8021ef4:	b21b      	sxth	r3, r3
 8021ef6:	b212      	sxth	r2, r2
 8021ef8:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8021efc:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8021f00:	9301      	str	r3, [sp, #4]
 8021f02:	9200      	str	r2, [sp, #0]
 8021f04:	4639      	mov	r1, r7
 8021f06:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8021f0a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8021f0c:	f7ff fc24 	bl	8021758 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8021f10:	e70a      	b.n	8021d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8021f12:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021f14:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021f18:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021f1a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8021f1e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021f20:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021f24:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021f26:	141f      	asrs	r7, r3, #16
 8021f28:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021f2a:	141b      	asrs	r3, r3, #16
 8021f2c:	fb01 3707 	mla	r7, r1, r7, r3
 8021f30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021f32:	fa1f fc82 	uxth.w	ip, r2
 8021f36:	eb03 0a07 	add.w	sl, r3, r7
 8021f3a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8021f3e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8021f42:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021f46:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8021f4a:	b29b      	uxth	r3, r3
 8021f4c:	2d00      	cmp	r5, #0
 8021f4e:	f000 80fe 	beq.w	802214e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8021f52:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8021f56:	940c      	str	r4, [sp, #48]	; 0x30
 8021f58:	eb0a 0b01 	add.w	fp, sl, r1
 8021f5c:	fa1f fa85 	uxth.w	sl, r5
 8021f60:	fb0a fc0c 	mul.w	ip, sl, ip
 8021f64:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8021f68:	fa1f fa8a 	uxth.w	sl, sl
 8021f6c:	eba0 000c 	sub.w	r0, r0, ip
 8021f70:	eba3 030a 	sub.w	r3, r3, sl
 8021f74:	b280      	uxth	r0, r0
 8021f76:	fb08 f000 	mul.w	r0, r8, r0
 8021f7a:	b29b      	uxth	r3, r3
 8021f7c:	fb09 0303 	mla	r3, r9, r3, r0
 8021f80:	980c      	ldr	r0, [sp, #48]	; 0x30
 8021f82:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021f86:	940d      	str	r4, [sp, #52]	; 0x34
 8021f88:	fb0a 3300 	mla	r3, sl, r0, r3
 8021f8c:	fb0c 3304 	mla	r3, ip, r4, r3
 8021f90:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021f94:	2b00      	cmp	r3, #0
 8021f96:	f000 80cc 	beq.w	8022132 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8021f9a:	9808      	ldr	r0, [sp, #32]
 8021f9c:	9c08      	ldr	r4, [sp, #32]
 8021f9e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021fa2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8021fa6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8021faa:	f000 80d5 	beq.w	8022158 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8021fae:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021fb2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021fb6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021fba:	fb09 f707 	mul.w	r7, r9, r7
 8021fbe:	fb0a fc0c 	mul.w	ip, sl, ip
 8021fc2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8021fc6:	f107 0b20 	add.w	fp, r7, #32
 8021fca:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021fce:	44cc      	add	ip, r9
 8021fd0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8021fd4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021fd8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021fdc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021fe0:	ea4c 0909 	orr.w	r9, ip, r9
 8021fe4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021fe8:	8847      	ldrh	r7, [r0, #2]
 8021fea:	d019      	beq.n	8022020 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8021fec:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021ff0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021ff4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021ff8:	fb08 f807 	mul.w	r8, r8, r7
 8021ffc:	fb0a fc0c 	mul.w	ip, sl, ip
 8022000:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022004:	f108 0b20 	add.w	fp, r8, #32
 8022008:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802200c:	44bc      	add	ip, r7
 802200e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022012:	0a3f      	lsrs	r7, r7, #8
 8022014:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022018:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802201c:	ea4c 0707 	orr.w	r7, ip, r7
 8022020:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022024:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022028:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802202c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022030:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022034:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022038:	ea4c 0909 	orr.w	r9, ip, r9
 802203c:	ea4a 0707 	orr.w	r7, sl, r7
 8022040:	2d00      	cmp	r5, #0
 8022042:	f000 808b 	beq.w	802215c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8022046:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802204a:	3901      	subs	r1, #1
 802204c:	0049      	lsls	r1, r1, #1
 802204e:	3102      	adds	r1, #2
 8022050:	eb00 0c01 	add.w	ip, r0, r1
 8022054:	5a41      	ldrh	r1, [r0, r1]
 8022056:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022058:	28ff      	cmp	r0, #255	; 0xff
 802205a:	d019      	beq.n	8022090 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 802205c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802205e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8022062:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022066:	fb04 fa01 	mul.w	sl, r4, r1
 802206a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802206e:	fb08 f800 	mul.w	r8, r8, r0
 8022072:	f10a 0020 	add.w	r0, sl, #32
 8022076:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802207a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802207e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022082:	4441      	add	r1, r8
 8022084:	0a00      	lsrs	r0, r0, #8
 8022086:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802208a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802208e:	4301      	orrs	r1, r0
 8022090:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022092:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022096:	2cff      	cmp	r4, #255	; 0xff
 8022098:	d01a      	beq.n	80220d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802209a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 802209e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80220a2:	fb04 fa00 	mul.w	sl, r4, r0
 80220a6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80220aa:	fb08 f80c 	mul.w	r8, r8, ip
 80220ae:	f10a 0c20 	add.w	ip, sl, #32
 80220b2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80220b6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80220ba:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80220be:	4440      	add	r0, r8
 80220c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80220c4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80220c8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80220cc:	ea40 000c 	orr.w	r0, r0, ip
 80220d0:	fb15 fc02 	smulbb	ip, r5, r2
 80220d4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80220d8:	f1c5 0810 	rsb	r8, r5, #16
 80220dc:	eba8 0802 	sub.w	r8, r8, r2
 80220e0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80220e4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80220e8:	437a      	muls	r2, r7
 80220ea:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80220ee:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80220f2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80220f6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80220fa:	fb09 2208 	mla	r2, r9, r8, r2
 80220fe:	ea4a 0101 	orr.w	r1, sl, r1
 8022102:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022106:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802210a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802210e:	fb05 2201 	mla	r2, r5, r1, r2
 8022112:	ea4b 0000 	orr.w	r0, fp, r0
 8022116:	fb0c 2200 	mla	r2, ip, r0, r2
 802211a:	0d57      	lsrs	r7, r2, #21
 802211c:	0952      	lsrs	r2, r2, #5
 802211e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022122:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022126:	433a      	orrs	r2, r7
 8022128:	2bff      	cmp	r3, #255	; 0xff
 802212a:	b292      	uxth	r2, r2
 802212c:	d127      	bne.n	802217e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 802212e:	f8ae 2000 	strh.w	r2, [lr]
 8022132:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022134:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8022136:	4413      	add	r3, r2
 8022138:	931d      	str	r3, [sp, #116]	; 0x74
 802213a:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 802213c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802213e:	441a      	add	r2, r3
 8022140:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022142:	921e      	str	r2, [sp, #120]	; 0x78
 8022144:	3b01      	subs	r3, #1
 8022146:	f10e 0e02 	add.w	lr, lr, #2
 802214a:	930f      	str	r3, [sp, #60]	; 0x3c
 802214c:	e627      	b.n	8021d9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802214e:	fb08 f000 	mul.w	r0, r8, r0
 8022152:	fb09 0303 	mla	r3, r9, r3, r0
 8022156:	e71b      	b.n	8021f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8022158:	46b9      	mov	r9, r7
 802215a:	e743      	b.n	8021fe4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 802215c:	f1c2 0110 	rsb	r1, r2, #16
 8022160:	437a      	muls	r2, r7
 8022162:	fb09 2901 	mla	r9, r9, r1, r2
 8022166:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802216a:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802216e:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022172:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022176:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802217a:	4302      	orrs	r2, r0
 802217c:	e7d4      	b.n	8022128 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 802217e:	f8be 7000 	ldrh.w	r7, [lr]
 8022182:	4c1c      	ldr	r4, [pc, #112]	; (80221f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022184:	43db      	mvns	r3, r3
 8022186:	1238      	asrs	r0, r7, #8
 8022188:	fa5f fc83 	uxtb.w	ip, r3
 802218c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022190:	10fd      	asrs	r5, r7, #3
 8022192:	fb00 f00c 	mul.w	r0, r0, ip
 8022196:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802219a:	fb05 f10c 	mul.w	r1, r5, ip
 802219e:	1c45      	adds	r5, r0, #1
 80221a0:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80221a4:	1215      	asrs	r5, r2, #8
 80221a6:	f025 0507 	bic.w	r5, r5, #7
 80221aa:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80221ae:	1c4d      	adds	r5, r1, #1
 80221b0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80221b4:	10d1      	asrs	r1, r2, #3
 80221b6:	f021 0103 	bic.w	r1, r1, #3
 80221ba:	00fb      	lsls	r3, r7, #3
 80221bc:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80221c0:	b2db      	uxtb	r3, r3
 80221c2:	b2c0      	uxtb	r0, r0
 80221c4:	00c9      	lsls	r1, r1, #3
 80221c6:	fb03 f30c 	mul.w	r3, r3, ip
 80221ca:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80221ce:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80221d2:	4308      	orrs	r0, r1
 80221d4:	1c59      	adds	r1, r3, #1
 80221d6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80221da:	00d2      	lsls	r2, r2, #3
 80221dc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80221e0:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80221e4:	4318      	orrs	r0, r3
 80221e6:	f8ae 0000 	strh.w	r0, [lr]
 80221ea:	e7a2      	b.n	8022132 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80221ec:	b013      	add	sp, #76	; 0x4c
 80221ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80221f2:	bf00      	nop
 80221f4:	fffff800 	.word	0xfffff800

080221f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80221f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80221fc:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8022200:	fb05 4c03 	mla	ip, r5, r3, r4
 8022204:	2d00      	cmp	r5, #0
 8022206:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802220a:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 802220e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8022212:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8022216:	8808      	ldrh	r0, [r1, #0]
 8022218:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 802221c:	f2c0 80a7 	blt.w	802236e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022220:	45aa      	cmp	sl, r5
 8022222:	f340 80a4 	ble.w	802236e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022226:	2c00      	cmp	r4, #0
 8022228:	f2c0 809f 	blt.w	802236a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 802222c:	42a3      	cmp	r3, r4
 802222e:	f340 809c 	ble.w	802236a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022232:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8022236:	1c62      	adds	r2, r4, #1
 8022238:	f100 809c 	bmi.w	8022374 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802223c:	4293      	cmp	r3, r2
 802223e:	f340 8099 	ble.w	8022374 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022242:	f1b9 0f00 	cmp.w	r9, #0
 8022246:	f000 8095 	beq.w	8022374 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802224a:	f8be c002 	ldrh.w	ip, [lr, #2]
 802224e:	3501      	adds	r5, #1
 8022250:	f100 8094 	bmi.w	802237c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022254:	45aa      	cmp	sl, r5
 8022256:	f340 8091 	ble.w	802237c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802225a:	2f00      	cmp	r7, #0
 802225c:	f000 808e 	beq.w	802237c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022260:	2c00      	cmp	r4, #0
 8022262:	f2c0 8089 	blt.w	8022378 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022266:	42a3      	cmp	r3, r4
 8022268:	f340 8086 	ble.w	8022378 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802226c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8022270:	3401      	adds	r4, #1
 8022272:	f100 8086 	bmi.w	8022382 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022276:	42a3      	cmp	r3, r4
 8022278:	f340 8083 	ble.w	8022382 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802227c:	f1b9 0f00 	cmp.w	r9, #0
 8022280:	d07f      	beq.n	8022382 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022282:	3301      	adds	r3, #1
 8022284:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8022288:	ea4f 4408 	mov.w	r4, r8, lsl #16
 802228c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022290:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8022294:	fb19 fe07 	smulbb	lr, r9, r7
 8022298:	ea44 0808 	orr.w	r8, r4, r8
 802229c:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80222a0:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80222a4:	f1c7 0210 	rsb	r2, r7, #16
 80222a8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80222ac:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80222b0:	ea44 0c0c 	orr.w	ip, r4, ip
 80222b4:	eba2 0209 	sub.w	r2, r2, r9
 80222b8:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80222bc:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80222c0:	fb04 f40c 	mul.w	r4, r4, ip
 80222c4:	fb02 4808 	mla	r8, r2, r8, r4
 80222c8:	041a      	lsls	r2, r3, #16
 80222ca:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80222ce:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80222d2:	4313      	orrs	r3, r2
 80222d4:	042a      	lsls	r2, r5, #16
 80222d6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80222da:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80222de:	fb0e 8303 	mla	r3, lr, r3, r8
 80222e2:	432a      	orrs	r2, r5
 80222e4:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80222e8:	fb07 3202 	mla	r2, r7, r2, r3
 80222ec:	0d53      	lsrs	r3, r2, #21
 80222ee:	0952      	lsrs	r2, r2, #5
 80222f0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80222f4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80222f8:	431a      	orrs	r2, r3
 80222fa:	b293      	uxth	r3, r2
 80222fc:	b2b4      	uxth	r4, r6
 80222fe:	1202      	asrs	r2, r0, #8
 8022300:	43f6      	mvns	r6, r6
 8022302:	b2f6      	uxtb	r6, r6
 8022304:	121d      	asrs	r5, r3, #8
 8022306:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802230a:	fb12 f206 	smulbb	r2, r2, r6
 802230e:	10c7      	asrs	r7, r0, #3
 8022310:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022314:	00c0      	lsls	r0, r0, #3
 8022316:	fb05 2504 	mla	r5, r5, r4, r2
 802231a:	b2c0      	uxtb	r0, r0
 802231c:	10da      	asrs	r2, r3, #3
 802231e:	00db      	lsls	r3, r3, #3
 8022320:	b2db      	uxtb	r3, r3
 8022322:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022326:	fb10 f006 	smulbb	r0, r0, r6
 802232a:	b2ad      	uxth	r5, r5
 802232c:	fb03 0004 	mla	r0, r3, r4, r0
 8022330:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022334:	fb17 f706 	smulbb	r7, r7, r6
 8022338:	b280      	uxth	r0, r0
 802233a:	1c6b      	adds	r3, r5, #1
 802233c:	fb02 7204 	mla	r2, r2, r4, r7
 8022340:	b292      	uxth	r2, r2
 8022342:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022346:	1c43      	adds	r3, r0, #1
 8022348:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802234c:	1c50      	adds	r0, r2, #1
 802234e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8022352:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022356:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802235a:	0952      	lsrs	r2, r2, #5
 802235c:	432b      	orrs	r3, r5
 802235e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022362:	4313      	orrs	r3, r2
 8022364:	800b      	strh	r3, [r1, #0]
 8022366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802236a:	4680      	mov	r8, r0
 802236c:	e763      	b.n	8022236 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 802236e:	4684      	mov	ip, r0
 8022370:	4680      	mov	r8, r0
 8022372:	e76c      	b.n	802224e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022374:	4684      	mov	ip, r0
 8022376:	e76a      	b.n	802224e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022378:	4605      	mov	r5, r0
 802237a:	e779      	b.n	8022270 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 802237c:	4603      	mov	r3, r0
 802237e:	4605      	mov	r5, r0
 8022380:	e782      	b.n	8022288 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8022382:	4603      	mov	r3, r0
 8022384:	e780      	b.n	8022288 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08022386 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022386:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802238a:	b093      	sub	sp, #76	; 0x4c
 802238c:	461d      	mov	r5, r3
 802238e:	9210      	str	r2, [sp, #64]	; 0x40
 8022390:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022392:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8022396:	920b      	str	r2, [sp, #44]	; 0x2c
 8022398:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 802239c:	910a      	str	r1, [sp, #40]	; 0x28
 802239e:	6859      	ldr	r1, [r3, #4]
 80223a0:	681b      	ldr	r3, [r3, #0]
 80223a2:	9011      	str	r0, [sp, #68]	; 0x44
 80223a4:	fb01 2707 	mla	r7, r1, r7, r2
 80223a8:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80223ac:	9307      	str	r3, [sp, #28]
 80223ae:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80223b0:	681b      	ldr	r3, [r3, #0]
 80223b2:	9309      	str	r3, [sp, #36]	; 0x24
 80223b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80223b6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80223ba:	43db      	mvns	r3, r3
 80223bc:	b2db      	uxtb	r3, r3
 80223be:	9308      	str	r3, [sp, #32]
 80223c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80223c2:	2b00      	cmp	r3, #0
 80223c4:	dc03      	bgt.n	80223ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80223c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80223c8:	2b00      	cmp	r3, #0
 80223ca:	f340 8203 	ble.w	80227d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80223ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80223d0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80223d4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80223d8:	1e48      	subs	r0, r1, #1
 80223da:	f102 3cff 	add.w	ip, r2, #4294967295
 80223de:	2d00      	cmp	r5, #0
 80223e0:	f340 80da 	ble.w	8022598 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80223e4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80223e8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80223ec:	d406      	bmi.n	80223fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80223ee:	4586      	cmp	lr, r0
 80223f0:	da04      	bge.n	80223fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80223f2:	2b00      	cmp	r3, #0
 80223f4:	db02      	blt.n	80223fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80223f6:	4563      	cmp	r3, ip
 80223f8:	f2c0 80cf 	blt.w	802259a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80223fc:	f11e 0e01 	adds.w	lr, lr, #1
 8022400:	f100 80c1 	bmi.w	8022586 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022404:	4571      	cmp	r1, lr
 8022406:	f2c0 80be 	blt.w	8022586 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802240a:	3301      	adds	r3, #1
 802240c:	f100 80bb 	bmi.w	8022586 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022410:	429a      	cmp	r2, r3
 8022412:	f2c0 80b8 	blt.w	8022586 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022416:	f8dd 801c 	ldr.w	r8, [sp, #28]
 802241a:	46a9      	mov	r9, r5
 802241c:	f1b9 0f00 	cmp.w	r9, #0
 8022420:	f340 80d8 	ble.w	80225d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8022424:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022426:	1421      	asrs	r1, r4, #16
 8022428:	ea4f 4026 	mov.w	r0, r6, asr #16
 802242c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022430:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022434:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022438:	f100 8111 	bmi.w	802265e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802243c:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022440:	4551      	cmp	r1, sl
 8022442:	f280 810c 	bge.w	802265e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022446:	2800      	cmp	r0, #0
 8022448:	f2c0 8109 	blt.w	802265e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802244c:	f103 3aff 	add.w	sl, r3, #4294967295
 8022450:	4550      	cmp	r0, sl
 8022452:	f280 8104 	bge.w	802265e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022456:	fa0f f38e 	sxth.w	r3, lr
 802245a:	fb00 1103 	mla	r1, r0, r3, r1
 802245e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8022460:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8022464:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8022468:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 802246c:	f1bc 0f00 	cmp.w	ip, #0
 8022470:	d007      	beq.n	8022482 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8022472:	005b      	lsls	r3, r3, #1
 8022474:	eb0a 0003 	add.w	r0, sl, r3
 8022478:	f83a 3003 	ldrh.w	r3, [sl, r3]
 802247c:	930c      	str	r3, [sp, #48]	; 0x30
 802247e:	8843      	ldrh	r3, [r0, #2]
 8022480:	930d      	str	r3, [sp, #52]	; 0x34
 8022482:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8022486:	fb12 f30c 	smulbb	r3, r2, ip
 802248a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802248e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022492:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022496:	10db      	asrs	r3, r3, #3
 8022498:	ea40 000e 	orr.w	r0, r0, lr
 802249c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80224a0:	f1cc 0e10 	rsb	lr, ip, #16
 80224a4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80224a8:	ebae 0e02 	sub.w	lr, lr, r2
 80224ac:	ea4a 0101 	orr.w	r1, sl, r1
 80224b0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80224b4:	4351      	muls	r1, r2
 80224b6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80224b8:	9f08      	ldr	r7, [sp, #32]
 80224ba:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80224be:	fb0e 1e00 	mla	lr, lr, r0, r1
 80224c2:	0410      	lsls	r0, r2, #16
 80224c4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80224c8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80224cc:	4310      	orrs	r0, r2
 80224ce:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80224d0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80224d2:	0412      	lsls	r2, r2, #16
 80224d4:	fb03 e000 	mla	r0, r3, r0, lr
 80224d8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80224dc:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80224e0:	ea42 020e 	orr.w	r2, r2, lr
 80224e4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80224e8:	fb03 0302 	mla	r3, r3, r2, r0
 80224ec:	0d5a      	lsrs	r2, r3, #21
 80224ee:	095b      	lsrs	r3, r3, #5
 80224f0:	f8b8 0000 	ldrh.w	r0, [r8]
 80224f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80224f8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80224fc:	4313      	orrs	r3, r2
 80224fe:	b29b      	uxth	r3, r3
 8022500:	1201      	asrs	r1, r0, #8
 8022502:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8022506:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802250a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802250e:	fb11 f107 	smulbb	r1, r1, r7
 8022512:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022516:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802251a:	00c0      	lsls	r0, r0, #3
 802251c:	fb0c 1c02 	mla	ip, ip, r2, r1
 8022520:	b2c0      	uxtb	r0, r0
 8022522:	10d9      	asrs	r1, r3, #3
 8022524:	00db      	lsls	r3, r3, #3
 8022526:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 802252a:	b2db      	uxtb	r3, r3
 802252c:	fb10 f007 	smulbb	r0, r0, r7
 8022530:	fa1f fc8c 	uxth.w	ip, ip
 8022534:	fb03 0302 	mla	r3, r3, r2, r0
 8022538:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802253c:	fb1e fe07 	smulbb	lr, lr, r7
 8022540:	fb01 e102 	mla	r1, r1, r2, lr
 8022544:	b29a      	uxth	r2, r3
 8022546:	f10c 0301 	add.w	r3, ip, #1
 802254a:	b289      	uxth	r1, r1
 802254c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8022550:	1c53      	adds	r3, r2, #1
 8022552:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022556:	1c4a      	adds	r2, r1, #1
 8022558:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802255c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8022560:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022564:	0949      	lsrs	r1, r1, #5
 8022566:	ea43 030c 	orr.w	r3, r3, ip
 802256a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802256e:	430b      	orrs	r3, r1
 8022570:	f8a8 3000 	strh.w	r3, [r8]
 8022574:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022576:	441c      	add	r4, r3
 8022578:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802257a:	f108 0802 	add.w	r8, r8, #2
 802257e:	441e      	add	r6, r3
 8022580:	f109 39ff 	add.w	r9, r9, #4294967295
 8022584:	e74a      	b.n	802241c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8022586:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022588:	441c      	add	r4, r3
 802258a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802258c:	441e      	add	r6, r3
 802258e:	9b07      	ldr	r3, [sp, #28]
 8022590:	3302      	adds	r3, #2
 8022592:	3d01      	subs	r5, #1
 8022594:	9307      	str	r3, [sp, #28]
 8022596:	e722      	b.n	80223de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022598:	d022      	beq.n	80225e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 802259a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802259c:	1e6b      	subs	r3, r5, #1
 802259e:	fb00 4003 	mla	r0, r0, r3, r4
 80225a2:	1400      	asrs	r0, r0, #16
 80225a4:	f53f af37 	bmi.w	8022416 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80225a8:	3901      	subs	r1, #1
 80225aa:	4288      	cmp	r0, r1
 80225ac:	f6bf af33 	bge.w	8022416 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80225b0:	9920      	ldr	r1, [sp, #128]	; 0x80
 80225b2:	fb01 6303 	mla	r3, r1, r3, r6
 80225b6:	141b      	asrs	r3, r3, #16
 80225b8:	f53f af2d 	bmi.w	8022416 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80225bc:	3a01      	subs	r2, #1
 80225be:	4293      	cmp	r3, r2
 80225c0:	f6bf af29 	bge.w	8022416 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80225c4:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80225c8:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 80225cc:	46a8      	mov	r8, r5
 80225ce:	f1b8 0f00 	cmp.w	r8, #0
 80225d2:	dc5e      	bgt.n	8022692 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80225d4:	9b07      	ldr	r3, [sp, #28]
 80225d6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80225da:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80225de:	9307      	str	r3, [sp, #28]
 80225e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80225e2:	2b00      	cmp	r3, #0
 80225e4:	f340 80f6 	ble.w	80227d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80225e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80225ec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80225f0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80225f4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80225f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80225fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80225fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022602:	eef0 6a62 	vmov.f32	s13, s5
 8022606:	ee61 7a27 	vmul.f32	s15, s2, s15
 802260a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802260e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022612:	ee16 4a90 	vmov	r4, s13
 8022616:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802261a:	eef0 6a43 	vmov.f32	s13, s6
 802261e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022622:	ee12 2a90 	vmov	r2, s5
 8022626:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802262a:	fb92 f3f3 	sdiv	r3, r2, r3
 802262e:	ee13 2a10 	vmov	r2, s6
 8022632:	931f      	str	r3, [sp, #124]	; 0x7c
 8022634:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022636:	fb92 f3f3 	sdiv	r3, r2, r3
 802263a:	9320      	str	r3, [sp, #128]	; 0x80
 802263c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802263e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022640:	3b01      	subs	r3, #1
 8022642:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022646:	930a      	str	r3, [sp, #40]	; 0x28
 8022648:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802264a:	ee16 6a90 	vmov	r6, s13
 802264e:	bf14      	ite	ne
 8022650:	461d      	movne	r5, r3
 8022652:	4615      	moveq	r5, r2
 8022654:	eeb0 3a67 	vmov.f32	s6, s15
 8022658:	eef0 2a47 	vmov.f32	s5, s14
 802265c:	e6b0      	b.n	80223c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802265e:	f111 0a01 	adds.w	sl, r1, #1
 8022662:	d487      	bmi.n	8022574 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022664:	45d6      	cmp	lr, sl
 8022666:	db85      	blt.n	8022574 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022668:	f110 0a01 	adds.w	sl, r0, #1
 802266c:	d482      	bmi.n	8022574 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802266e:	4553      	cmp	r3, sl
 8022670:	db80      	blt.n	8022574 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022672:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8022674:	9101      	str	r1, [sp, #4]
 8022676:	b21b      	sxth	r3, r3
 8022678:	e9cd 0202 	strd	r0, r2, [sp, #8]
 802267c:	9300      	str	r3, [sp, #0]
 802267e:	e9cd c704 	strd	ip, r7, [sp, #16]
 8022682:	fa0f f38e 	sxth.w	r3, lr
 8022686:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022688:	9811      	ldr	r0, [sp, #68]	; 0x44
 802268a:	4641      	mov	r1, r8
 802268c:	f7ff fdb4 	bl	80221f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8022690:	e770      	b.n	8022574 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022692:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022694:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8022696:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802269a:	1430      	asrs	r0, r6, #16
 802269c:	1423      	asrs	r3, r4, #16
 802269e:	fb01 3000 	mla	r0, r1, r0, r3
 80226a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80226a4:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 80226a8:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80226ac:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80226b0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80226b4:	8858      	ldrh	r0, [r3, #2]
 80226b6:	f1be 0f00 	cmp.w	lr, #0
 80226ba:	d00b      	beq.n	80226d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 80226bc:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80226c0:	3901      	subs	r1, #1
 80226c2:	0049      	lsls	r1, r1, #1
 80226c4:	3102      	adds	r1, #2
 80226c6:	eb03 0b01 	add.w	fp, r3, r1
 80226ca:	5a5b      	ldrh	r3, [r3, r1]
 80226cc:	930e      	str	r3, [sp, #56]	; 0x38
 80226ce:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80226d2:	930f      	str	r3, [sp, #60]	; 0x3c
 80226d4:	ea4f 410c 	mov.w	r1, ip, lsl #16
 80226d8:	fb12 f30e 	smulbb	r3, r2, lr
 80226dc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80226e0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80226e4:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 80226e8:	10db      	asrs	r3, r3, #3
 80226ea:	ea41 010c 	orr.w	r1, r1, ip
 80226ee:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80226f2:	f1ce 0c10 	rsb	ip, lr, #16
 80226f6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80226fa:	ebac 0c02 	sub.w	ip, ip, r2
 80226fe:	ea4b 0000 	orr.w	r0, fp, r0
 8022702:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022706:	4350      	muls	r0, r2
 8022708:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802270a:	9f08      	ldr	r7, [sp, #32]
 802270c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022710:	fb0c 0c01 	mla	ip, ip, r1, r0
 8022714:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022718:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 802271c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802271e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8022720:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022724:	0412      	lsls	r2, r2, #16
 8022726:	ea4b 0101 	orr.w	r1, fp, r1
 802272a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802272e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022732:	fb03 c101 	mla	r1, r3, r1, ip
 8022736:	4302      	orrs	r2, r0
 8022738:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 802273c:	fb03 1202 	mla	r2, r3, r2, r1
 8022740:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8022744:	0952      	lsrs	r2, r2, #5
 8022746:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 802274a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 802274e:	f8b9 2000 	ldrh.w	r2, [r9]
 8022752:	ea4b 0303 	orr.w	r3, fp, r3
 8022756:	b29b      	uxth	r3, r3
 8022758:	1211      	asrs	r1, r2, #8
 802275a:	1218      	asrs	r0, r3, #8
 802275c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022760:	fb11 f107 	smulbb	r1, r1, r7
 8022764:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8022768:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802276c:	00d2      	lsls	r2, r2, #3
 802276e:	fb00 100a 	mla	r0, r0, sl, r1
 8022772:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8022776:	10d9      	asrs	r1, r3, #3
 8022778:	b2d2      	uxtb	r2, r2
 802277a:	00db      	lsls	r3, r3, #3
 802277c:	fb1c fc07 	smulbb	ip, ip, r7
 8022780:	fb12 f207 	smulbb	r2, r2, r7
 8022784:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022788:	b2db      	uxtb	r3, r3
 802278a:	b280      	uxth	r0, r0
 802278c:	fb01 c10a 	mla	r1, r1, sl, ip
 8022790:	fb03 230a 	mla	r3, r3, sl, r2
 8022794:	b29b      	uxth	r3, r3
 8022796:	b289      	uxth	r1, r1
 8022798:	1c42      	adds	r2, r0, #1
 802279a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802279e:	f101 0c01 	add.w	ip, r1, #1
 80227a2:	1c5a      	adds	r2, r3, #1
 80227a4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80227a8:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80227ac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80227ae:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80227b2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80227b6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80227ba:	4310      	orrs	r0, r2
 80227bc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80227c0:	441c      	add	r4, r3
 80227c2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80227c4:	ea40 000c 	orr.w	r0, r0, ip
 80227c8:	f829 0b02 	strh.w	r0, [r9], #2
 80227cc:	441e      	add	r6, r3
 80227ce:	f108 38ff 	add.w	r8, r8, #4294967295
 80227d2:	e6fc      	b.n	80225ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 80227d4:	b013      	add	sp, #76	; 0x4c
 80227d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080227da <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 80227da:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80227de:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 80227e2:	fb0e 4703 	mla	r7, lr, r3, r4
 80227e6:	f1be 0f00 	cmp.w	lr, #0
 80227ea:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 80227ee:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 80227f2:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 80227f6:	8808      	ldrh	r0, [r1, #0]
 80227f8:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 80227fc:	db60      	blt.n	80228c0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80227fe:	45f1      	cmp	r9, lr
 8022800:	dd5e      	ble.n	80228c0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022802:	2c00      	cmp	r4, #0
 8022804:	db5a      	blt.n	80228bc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022806:	42a3      	cmp	r3, r4
 8022808:	dd58      	ble.n	80228bc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 802280a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 802280e:	1c62      	adds	r2, r4, #1
 8022810:	d459      	bmi.n	80228c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022812:	4293      	cmp	r3, r2
 8022814:	dd57      	ble.n	80228c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022816:	2d00      	cmp	r5, #0
 8022818:	d055      	beq.n	80228c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802281a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 802281e:	f11e 0e01 	adds.w	lr, lr, #1
 8022822:	d454      	bmi.n	80228ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022824:	45f1      	cmp	r9, lr
 8022826:	dd52      	ble.n	80228ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022828:	2e00      	cmp	r6, #0
 802282a:	d050      	beq.n	80228ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 802282c:	2c00      	cmp	r4, #0
 802282e:	db4c      	blt.n	80228ca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022830:	42a3      	cmp	r3, r4
 8022832:	dd4a      	ble.n	80228ca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022834:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8022838:	3401      	adds	r4, #1
 802283a:	d405      	bmi.n	8022848 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802283c:	42a3      	cmp	r3, r4
 802283e:	dd03      	ble.n	8022848 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022840:	b115      	cbz	r5, 8022848 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022842:	3301      	adds	r3, #1
 8022844:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8022848:	ea4f 430c 	mov.w	r3, ip, lsl #16
 802284c:	fb15 f406 	smulbb	r4, r5, r6
 8022850:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022854:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8022858:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802285c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8022860:	ea43 0c0c 	orr.w	ip, r3, ip
 8022864:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022868:	f1c6 0310 	rsb	r3, r6, #16
 802286c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022870:	1b5b      	subs	r3, r3, r5
 8022872:	ea4e 0707 	orr.w	r7, lr, r7
 8022876:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 802287a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802287e:	437d      	muls	r5, r7
 8022880:	fb03 5c0c 	mla	ip, r3, ip, r5
 8022884:	0403      	lsls	r3, r0, #16
 8022886:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802288a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802288e:	4318      	orrs	r0, r3
 8022890:	0413      	lsls	r3, r2, #16
 8022892:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022896:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802289a:	4313      	orrs	r3, r2
 802289c:	fb04 c000 	mla	r0, r4, r0, ip
 80228a0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80228a4:	fb06 0003 	mla	r0, r6, r3, r0
 80228a8:	0d43      	lsrs	r3, r0, #21
 80228aa:	0940      	lsrs	r0, r0, #5
 80228ac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80228b0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80228b4:	4318      	orrs	r0, r3
 80228b6:	8008      	strh	r0, [r1, #0]
 80228b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80228bc:	4684      	mov	ip, r0
 80228be:	e7a6      	b.n	802280e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 80228c0:	4607      	mov	r7, r0
 80228c2:	4684      	mov	ip, r0
 80228c4:	e7ab      	b.n	802281e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80228c6:	4607      	mov	r7, r0
 80228c8:	e7a9      	b.n	802281e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80228ca:	4602      	mov	r2, r0
 80228cc:	e7b4      	b.n	8022838 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 80228ce:	4602      	mov	r2, r0
 80228d0:	e7ba      	b.n	8022848 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

080228d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80228d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80228d6:	b08f      	sub	sp, #60	; 0x3c
 80228d8:	461d      	mov	r5, r3
 80228da:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80228dc:	920c      	str	r2, [sp, #48]	; 0x30
 80228de:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 80228e2:	9107      	str	r1, [sp, #28]
 80228e4:	6859      	ldr	r1, [r3, #4]
 80228e6:	681b      	ldr	r3, [r3, #0]
 80228e8:	900d      	str	r0, [sp, #52]	; 0x34
 80228ea:	fb01 2707 	mla	r7, r1, r7, r2
 80228ee:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 80228f2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80228f4:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 80228f8:	f8d3 8000 	ldr.w	r8, [r3]
 80228fc:	9b07      	ldr	r3, [sp, #28]
 80228fe:	2b00      	cmp	r3, #0
 8022900:	dc03      	bgt.n	802290a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8022902:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022904:	2b00      	cmp	r3, #0
 8022906:	f340 8181 	ble.w	8022c0c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802290a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802290c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022910:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022914:	1e48      	subs	r0, r1, #1
 8022916:	f102 3cff 	add.w	ip, r2, #4294967295
 802291a:	2d00      	cmp	r5, #0
 802291c:	f340 809b 	ble.w	8022a56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8022920:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022924:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022928:	d406      	bmi.n	8022938 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802292a:	4586      	cmp	lr, r0
 802292c:	da04      	bge.n	8022938 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802292e:	2b00      	cmp	r3, #0
 8022930:	db02      	blt.n	8022938 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022932:	4563      	cmp	r3, ip
 8022934:	f2c0 8090 	blt.w	8022a58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022938:	f11e 0e01 	adds.w	lr, lr, #1
 802293c:	f100 8084 	bmi.w	8022a48 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022940:	4571      	cmp	r1, lr
 8022942:	f2c0 8081 	blt.w	8022a48 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022946:	3301      	adds	r3, #1
 8022948:	d47e      	bmi.n	8022a48 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802294a:	429a      	cmp	r2, r3
 802294c:	db7c      	blt.n	8022a48 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802294e:	46aa      	mov	sl, r5
 8022950:	46b9      	mov	r9, r7
 8022952:	f1ba 0f00 	cmp.w	sl, #0
 8022956:	f340 8099 	ble.w	8022a8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802295a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802295c:	1421      	asrs	r1, r4, #16
 802295e:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022962:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022966:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802296a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802296e:	f100 80d0 	bmi.w	8022b12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022972:	f10e 3bff 	add.w	fp, lr, #4294967295
 8022976:	4559      	cmp	r1, fp
 8022978:	f280 80cb 	bge.w	8022b12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802297c:	2800      	cmp	r0, #0
 802297e:	f2c0 80c8 	blt.w	8022b12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022982:	f103 3bff 	add.w	fp, r3, #4294967295
 8022986:	4558      	cmp	r0, fp
 8022988:	f280 80c3 	bge.w	8022b12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802298c:	fa0f fe8e 	sxth.w	lr, lr
 8022990:	fb00 110e 	mla	r1, r0, lr, r1
 8022994:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8022998:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 802299c:	8841      	ldrh	r1, [r0, #2]
 802299e:	f1bc 0f00 	cmp.w	ip, #0
 80229a2:	d00b      	beq.n	80229bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 80229a4:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 80229a8:	3b01      	subs	r3, #1
 80229aa:	005b      	lsls	r3, r3, #1
 80229ac:	3302      	adds	r3, #2
 80229ae:	eb00 0e03 	add.w	lr, r0, r3
 80229b2:	5ac3      	ldrh	r3, [r0, r3]
 80229b4:	9308      	str	r3, [sp, #32]
 80229b6:	f8be 3002 	ldrh.w	r3, [lr, #2]
 80229ba:	9309      	str	r3, [sp, #36]	; 0x24
 80229bc:	ea4f 400b 	mov.w	r0, fp, lsl #16
 80229c0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80229c4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80229c8:	ea40 000b 	orr.w	r0, r0, fp
 80229cc:	fb12 f30c 	smulbb	r3, r2, ip
 80229d0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80229d4:	10db      	asrs	r3, r3, #3
 80229d6:	f1cc 0e10 	rsb	lr, ip, #16
 80229da:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80229de:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80229e2:	ebae 0e02 	sub.w	lr, lr, r2
 80229e6:	ea4b 0101 	orr.w	r1, fp, r1
 80229ea:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80229ee:	4351      	muls	r1, r2
 80229f0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80229f2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80229f6:	fb0e 1e00 	mla	lr, lr, r0, r1
 80229fa:	0410      	lsls	r0, r2, #16
 80229fc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022a00:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022a04:	4310      	orrs	r0, r2
 8022a06:	9a08      	ldr	r2, [sp, #32]
 8022a08:	9908      	ldr	r1, [sp, #32]
 8022a0a:	0412      	lsls	r2, r2, #16
 8022a0c:	fb03 e000 	mla	r0, r3, r0, lr
 8022a10:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022a14:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8022a18:	ea42 020e 	orr.w	r2, r2, lr
 8022a1c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022a20:	fb03 0302 	mla	r3, r3, r2, r0
 8022a24:	0d5a      	lsrs	r2, r3, #21
 8022a26:	095b      	lsrs	r3, r3, #5
 8022a28:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022a2c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022a30:	4313      	orrs	r3, r2
 8022a32:	f8a9 3000 	strh.w	r3, [r9]
 8022a36:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022a38:	441c      	add	r4, r3
 8022a3a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022a3c:	f109 0902 	add.w	r9, r9, #2
 8022a40:	441e      	add	r6, r3
 8022a42:	f10a 3aff 	add.w	sl, sl, #4294967295
 8022a46:	e784      	b.n	8022952 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022a48:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022a4a:	441c      	add	r4, r3
 8022a4c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022a4e:	3d01      	subs	r5, #1
 8022a50:	441e      	add	r6, r3
 8022a52:	3702      	adds	r7, #2
 8022a54:	e761      	b.n	802291a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022a56:	d01d      	beq.n	8022a94 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8022a58:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8022a5a:	1e6b      	subs	r3, r5, #1
 8022a5c:	fb00 4003 	mla	r0, r0, r3, r4
 8022a60:	1400      	asrs	r0, r0, #16
 8022a62:	f53f af74 	bmi.w	802294e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022a66:	3901      	subs	r1, #1
 8022a68:	4288      	cmp	r0, r1
 8022a6a:	f6bf af70 	bge.w	802294e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022a6e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8022a70:	fb01 6303 	mla	r3, r1, r3, r6
 8022a74:	141b      	asrs	r3, r3, #16
 8022a76:	f53f af6a 	bmi.w	802294e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022a7a:	3a01      	subs	r2, #1
 8022a7c:	4293      	cmp	r3, r2
 8022a7e:	f6bf af66 	bge.w	802294e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022a82:	46a9      	mov	r9, r5
 8022a84:	46ba      	mov	sl, r7
 8022a86:	f1b9 0f00 	cmp.w	r9, #0
 8022a8a:	dc5a      	bgt.n	8022b42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8022a8c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022a90:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8022a94:	9b07      	ldr	r3, [sp, #28]
 8022a96:	2b00      	cmp	r3, #0
 8022a98:	f340 80b8 	ble.w	8022c0c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8022a9c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022aa0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022aa4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022aa8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022aaa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022aae:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022ab2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022ab6:	eef0 6a62 	vmov.f32	s13, s5
 8022aba:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022abe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022ac2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022ac6:	ee16 4a90 	vmov	r4, s13
 8022aca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022ace:	eef0 6a43 	vmov.f32	s13, s6
 8022ad2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022ad6:	ee12 2a90 	vmov	r2, s5
 8022ada:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022ade:	fb92 f3f3 	sdiv	r3, r2, r3
 8022ae2:	ee13 2a10 	vmov	r2, s6
 8022ae6:	931b      	str	r3, [sp, #108]	; 0x6c
 8022ae8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022aea:	fb92 f3f3 	sdiv	r3, r2, r3
 8022aee:	931c      	str	r3, [sp, #112]	; 0x70
 8022af0:	9b07      	ldr	r3, [sp, #28]
 8022af2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022af4:	3b01      	subs	r3, #1
 8022af6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022afa:	9307      	str	r3, [sp, #28]
 8022afc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022afe:	ee16 6a90 	vmov	r6, s13
 8022b02:	bf14      	ite	ne
 8022b04:	461d      	movne	r5, r3
 8022b06:	4615      	moveq	r5, r2
 8022b08:	eeb0 3a67 	vmov.f32	s6, s15
 8022b0c:	eef0 2a47 	vmov.f32	s5, s14
 8022b10:	e6f4      	b.n	80228fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8022b12:	f111 0b01 	adds.w	fp, r1, #1
 8022b16:	d48e      	bmi.n	8022a36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022b18:	45de      	cmp	lr, fp
 8022b1a:	db8c      	blt.n	8022a36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022b1c:	f110 0b01 	adds.w	fp, r0, #1
 8022b20:	d489      	bmi.n	8022a36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022b22:	455b      	cmp	r3, fp
 8022b24:	db87      	blt.n	8022a36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022b26:	b21b      	sxth	r3, r3
 8022b28:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8022b2c:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8022b30:	9300      	str	r3, [sp, #0]
 8022b32:	4642      	mov	r2, r8
 8022b34:	fa0f f38e 	sxth.w	r3, lr
 8022b38:	4649      	mov	r1, r9
 8022b3a:	980d      	ldr	r0, [sp, #52]	; 0x34
 8022b3c:	f7ff fe4d 	bl	80227da <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8022b40:	e779      	b.n	8022a36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022b42:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022b44:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8022b48:	1420      	asrs	r0, r4, #16
 8022b4a:	1431      	asrs	r1, r6, #16
 8022b4c:	fb03 0101 	mla	r1, r3, r1, r0
 8022b50:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8022b54:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022b58:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8022b5c:	8841      	ldrh	r1, [r0, #2]
 8022b5e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022b62:	f1be 0f00 	cmp.w	lr, #0
 8022b66:	d00b      	beq.n	8022b80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8022b68:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8022b6c:	3b01      	subs	r3, #1
 8022b6e:	005b      	lsls	r3, r3, #1
 8022b70:	3302      	adds	r3, #2
 8022b72:	eb00 0b03 	add.w	fp, r0, r3
 8022b76:	5ac3      	ldrh	r3, [r0, r3]
 8022b78:	930a      	str	r3, [sp, #40]	; 0x28
 8022b7a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022b7e:	930b      	str	r3, [sp, #44]	; 0x2c
 8022b80:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8022b84:	fb12 f30e 	smulbb	r3, r2, lr
 8022b88:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022b8c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022b90:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022b94:	10db      	asrs	r3, r3, #3
 8022b96:	ea40 000c 	orr.w	r0, r0, ip
 8022b9a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022b9e:	f1ce 0c10 	rsb	ip, lr, #16
 8022ba2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022ba6:	ebac 0c02 	sub.w	ip, ip, r2
 8022baa:	ea4b 0101 	orr.w	r1, fp, r1
 8022bae:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022bb2:	4351      	muls	r1, r2
 8022bb4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022bb6:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022bba:	fb0c 1c00 	mla	ip, ip, r0, r1
 8022bbe:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022bc2:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8022bc6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8022bc8:	990a      	ldr	r1, [sp, #40]	; 0x28
 8022bca:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022bce:	0412      	lsls	r2, r2, #16
 8022bd0:	ea4b 0000 	orr.w	r0, fp, r0
 8022bd4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022bd8:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8022bdc:	fb03 c000 	mla	r0, r3, r0, ip
 8022be0:	ea42 0b0b 	orr.w	fp, r2, fp
 8022be4:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8022be8:	fb03 000b 	mla	r0, r3, fp, r0
 8022bec:	0d43      	lsrs	r3, r0, #21
 8022bee:	0940      	lsrs	r0, r0, #5
 8022bf0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022bf4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022bf8:	4318      	orrs	r0, r3
 8022bfa:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022bfc:	f82a 0b02 	strh.w	r0, [sl], #2
 8022c00:	441c      	add	r4, r3
 8022c02:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022c04:	f109 39ff 	add.w	r9, r9, #4294967295
 8022c08:	441e      	add	r6, r3
 8022c0a:	e73c      	b.n	8022a86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8022c0c:	b00f      	add	sp, #60	; 0x3c
 8022c0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022c12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8022c12:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022c16:	b085      	sub	sp, #20
 8022c18:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8022c1c:	9102      	str	r1, [sp, #8]
 8022c1e:	2c00      	cmp	r4, #0
 8022c20:	fb04 7103 	mla	r1, r4, r3, r7
 8022c24:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8022c28:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8022c2c:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8022c30:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8022c34:	f2c0 811b 	blt.w	8022e6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8022c38:	45a6      	cmp	lr, r4
 8022c3a:	f340 8118 	ble.w	8022e6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8022c3e:	2f00      	cmp	r7, #0
 8022c40:	f2c0 8113 	blt.w	8022e6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8022c44:	42bb      	cmp	r3, r7
 8022c46:	f340 8110 	ble.w	8022e6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8022c4a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8022c4e:	1c7a      	adds	r2, r7, #1
 8022c50:	f100 8110 	bmi.w	8022e74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8022c54:	4293      	cmp	r3, r2
 8022c56:	f340 810d 	ble.w	8022e74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8022c5a:	2e00      	cmp	r6, #0
 8022c5c:	f000 810c 	beq.w	8022e78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8022c60:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8022c64:	3401      	adds	r4, #1
 8022c66:	f100 810b 	bmi.w	8022e80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8022c6a:	45a6      	cmp	lr, r4
 8022c6c:	f340 8108 	ble.w	8022e80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8022c70:	2800      	cmp	r0, #0
 8022c72:	f000 8108 	beq.w	8022e86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8022c76:	2f00      	cmp	r7, #0
 8022c78:	f2c0 8100 	blt.w	8022e7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8022c7c:	42bb      	cmp	r3, r7
 8022c7e:	f340 80fd 	ble.w	8022e7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8022c82:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8022c86:	3701      	adds	r7, #1
 8022c88:	f100 8100 	bmi.w	8022e8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8022c8c:	42bb      	cmp	r3, r7
 8022c8e:	f340 80fd 	ble.w	8022e8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8022c92:	2e00      	cmp	r6, #0
 8022c94:	f000 80fc 	beq.w	8022e90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8022c98:	3301      	adds	r3, #1
 8022c9a:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8022c9e:	b2b6      	uxth	r6, r6
 8022ca0:	b280      	uxth	r0, r0
 8022ca2:	fb00 fe06 	mul.w	lr, r0, r6
 8022ca6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8022caa:	0136      	lsls	r6, r6, #4
 8022cac:	eba6 070e 	sub.w	r7, r6, lr
 8022cb0:	b280      	uxth	r0, r0
 8022cb2:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8022cb6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8022cba:	b2bf      	uxth	r7, r7
 8022cbc:	1a1b      	subs	r3, r3, r0
 8022cbe:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8022cc2:	b29b      	uxth	r3, r3
 8022cc4:	fb0a f607 	mul.w	r6, sl, r7
 8022cc8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8022ccc:	fb0b 6603 	mla	r6, fp, r3, r6
 8022cd0:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8022cd4:	fb00 6609 	mla	r6, r0, r9, r6
 8022cd8:	fb0e 6608 	mla	r6, lr, r8, r6
 8022cdc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8022ce0:	9600      	str	r6, [sp, #0]
 8022ce2:	2e00      	cmp	r6, #0
 8022ce4:	f000 80be 	beq.w	8022e64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8022ce8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022cec:	fb0b fc0c 	mul.w	ip, fp, ip
 8022cf0:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8022cf4:	fb0b f505 	mul.w	r5, fp, r5
 8022cf8:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8022cfc:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8022d00:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022d04:	44dc      	add	ip, fp
 8022d06:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022d0a:	9501      	str	r5, [sp, #4]
 8022d0c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8022d10:	9503      	str	r5, [sp, #12]
 8022d12:	9d01      	ldr	r5, [sp, #4]
 8022d14:	9e02      	ldr	r6, [sp, #8]
 8022d16:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8022d1a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8022d1e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8022d22:	fb0a fc0c 	mul.w	ip, sl, ip
 8022d26:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8022d2a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8022d2e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022d32:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022d36:	4465      	add	r5, ip
 8022d38:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022d3c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8022d40:	fb09 fc0c 	mul.w	ip, r9, ip
 8022d44:	fb09 f904 	mul.w	r9, r9, r4
 8022d48:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8022d4c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8022d50:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8022d54:	fb08 f404 	mul.w	r4, r8, r4
 8022d58:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022d5c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022d60:	fb08 f802 	mul.w	r8, r8, r2
 8022d64:	fb0a fa01 	mul.w	sl, sl, r1
 8022d68:	0a22      	lsrs	r2, r4, #8
 8022d6a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8022d6e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022d72:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8022d76:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8022d7a:	4414      	add	r4, r2
 8022d7c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8022d80:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8022d84:	0a2d      	lsrs	r5, r5, #8
 8022d86:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8022d8a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022d8e:	9a03      	ldr	r2, [sp, #12]
 8022d90:	8836      	ldrh	r6, [r6, #0]
 8022d92:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8022d96:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022d9a:	437d      	muls	r5, r7
 8022d9c:	4461      	add	r1, ip
 8022d9e:	0a24      	lsrs	r4, r4, #8
 8022da0:	fb02 5503 	mla	r5, r2, r3, r5
 8022da4:	0a09      	lsrs	r1, r1, #8
 8022da6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8022daa:	fb04 540e 	mla	r4, r4, lr, r5
 8022dae:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8022db2:	fb01 4100 	mla	r1, r1, r0, r4
 8022db6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022dba:	0a09      	lsrs	r1, r1, #8
 8022dbc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022dc0:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8022dc4:	fb07 f70a 	mul.w	r7, r7, sl
 8022dc8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8022dcc:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8022dd0:	fb03 7101 	mla	r1, r3, r1, r7
 8022dd4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022dd8:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8022ddc:	fb0e 1e08 	mla	lr, lr, r8, r1
 8022de0:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8022de4:	fb00 e101 	mla	r1, r0, r1, lr
 8022de8:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8022dec:	9a00      	ldr	r2, [sp, #0]
 8022dee:	b287      	uxth	r7, r0
 8022df0:	437a      	muls	r2, r7
 8022df2:	0a09      	lsrs	r1, r1, #8
 8022df4:	1c53      	adds	r3, r2, #1
 8022df6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022dfa:	4321      	orrs	r1, r4
 8022dfc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022e00:	1235      	asrs	r5, r6, #8
 8022e02:	0c0a      	lsrs	r2, r1, #16
 8022e04:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8022e08:	b2db      	uxtb	r3, r3
 8022e0a:	fb12 f207 	smulbb	r2, r2, r7
 8022e0e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022e12:	fb05 2503 	mla	r5, r5, r3, r2
 8022e16:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8022e1a:	10f2      	asrs	r2, r6, #3
 8022e1c:	b2c8      	uxtb	r0, r1
 8022e1e:	00f6      	lsls	r6, r6, #3
 8022e20:	fb14 f407 	smulbb	r4, r4, r7
 8022e24:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022e28:	b2f6      	uxtb	r6, r6
 8022e2a:	fb10 f007 	smulbb	r0, r0, r7
 8022e2e:	fb02 4203 	mla	r2, r2, r3, r4
 8022e32:	b2ad      	uxth	r5, r5
 8022e34:	fb06 0303 	mla	r3, r6, r3, r0
 8022e38:	b299      	uxth	r1, r3
 8022e3a:	b294      	uxth	r4, r2
 8022e3c:	1c6b      	adds	r3, r5, #1
 8022e3e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022e42:	1c62      	adds	r2, r4, #1
 8022e44:	1c4b      	adds	r3, r1, #1
 8022e46:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022e4a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8022e4e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022e52:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022e56:	0952      	lsrs	r2, r2, #5
 8022e58:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022e5c:	432b      	orrs	r3, r5
 8022e5e:	4313      	orrs	r3, r2
 8022e60:	9a02      	ldr	r2, [sp, #8]
 8022e62:	8013      	strh	r3, [r2, #0]
 8022e64:	b005      	add	sp, #20
 8022e66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022e6a:	2500      	movs	r5, #0
 8022e6c:	e6ef      	b.n	8022c4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8022e6e:	2100      	movs	r1, #0
 8022e70:	460d      	mov	r5, r1
 8022e72:	e6f7      	b.n	8022c64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8022e74:	2100      	movs	r1, #0
 8022e76:	e6f5      	b.n	8022c64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8022e78:	4631      	mov	r1, r6
 8022e7a:	e6f3      	b.n	8022c64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8022e7c:	2400      	movs	r4, #0
 8022e7e:	e702      	b.n	8022c86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8022e80:	2200      	movs	r2, #0
 8022e82:	4614      	mov	r4, r2
 8022e84:	e70b      	b.n	8022c9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8022e86:	4602      	mov	r2, r0
 8022e88:	4604      	mov	r4, r0
 8022e8a:	e708      	b.n	8022c9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8022e8c:	2200      	movs	r2, #0
 8022e8e:	e706      	b.n	8022c9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8022e90:	4632      	mov	r2, r6
 8022e92:	e704      	b.n	8022c9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08022e94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022e94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022e98:	b09d      	sub	sp, #116	; 0x74
 8022e9a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8022e9e:	9219      	str	r2, [sp, #100]	; 0x64
 8022ea0:	9307      	str	r3, [sp, #28]
 8022ea2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8022ea4:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8022ea8:	931a      	str	r3, [sp, #104]	; 0x68
 8022eaa:	9117      	str	r1, [sp, #92]	; 0x5c
 8022eac:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8022eb0:	901b      	str	r0, [sp, #108]	; 0x6c
 8022eb2:	6850      	ldr	r0, [r2, #4]
 8022eb4:	6812      	ldr	r2, [r2, #0]
 8022eb6:	fb00 1303 	mla	r3, r0, r3, r1
 8022eba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022ebe:	930a      	str	r3, [sp, #40]	; 0x28
 8022ec0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8022ec2:	681b      	ldr	r3, [r3, #0]
 8022ec4:	9310      	str	r3, [sp, #64]	; 0x40
 8022ec6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8022eca:	930b      	str	r3, [sp, #44]	; 0x2c
 8022ecc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022ece:	2b00      	cmp	r3, #0
 8022ed0:	dc03      	bgt.n	8022eda <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8022ed2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8022ed4:	2b00      	cmp	r3, #0
 8022ed6:	f340 8375 	ble.w	80235c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8022eda:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8022edc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022ee0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022ee4:	1e48      	subs	r0, r1, #1
 8022ee6:	1e57      	subs	r7, r2, #1
 8022ee8:	9b07      	ldr	r3, [sp, #28]
 8022eea:	2b00      	cmp	r3, #0
 8022eec:	f340 818e 	ble.w	802320c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8022ef0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8022ef4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022ef8:	d406      	bmi.n	8022f08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8022efa:	4584      	cmp	ip, r0
 8022efc:	da04      	bge.n	8022f08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8022efe:	2b00      	cmp	r3, #0
 8022f00:	db02      	blt.n	8022f08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8022f02:	42bb      	cmp	r3, r7
 8022f04:	f2c0 8183 	blt.w	802320e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8022f08:	f11c 0c01 	adds.w	ip, ip, #1
 8022f0c:	f100 8173 	bmi.w	80231f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8022f10:	4561      	cmp	r1, ip
 8022f12:	f2c0 8170 	blt.w	80231f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8022f16:	3301      	adds	r3, #1
 8022f18:	f100 816d 	bmi.w	80231f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8022f1c:	429a      	cmp	r2, r3
 8022f1e:	f2c0 816a 	blt.w	80231f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8022f22:	9b07      	ldr	r3, [sp, #28]
 8022f24:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8022f26:	9318      	str	r3, [sp, #96]	; 0x60
 8022f28:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022f2a:	2b00      	cmp	r3, #0
 8022f2c:	f340 818c 	ble.w	8023248 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8022f30:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8022f32:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8022f34:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8022f38:	689b      	ldr	r3, [r3, #8]
 8022f3a:	1422      	asrs	r2, r4, #16
 8022f3c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8022f40:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8022f44:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8022f48:	f100 81cd 	bmi.w	80232e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8022f4c:	f103 38ff 	add.w	r8, r3, #4294967295
 8022f50:	4542      	cmp	r2, r8
 8022f52:	f280 81c8 	bge.w	80232e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8022f56:	f1bc 0f00 	cmp.w	ip, #0
 8022f5a:	f2c0 81c4 	blt.w	80232e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8022f5e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8022f62:	45c4      	cmp	ip, r8
 8022f64:	f280 81bf 	bge.w	80232e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8022f68:	b21b      	sxth	r3, r3
 8022f6a:	fb0c 2203 	mla	r2, ip, r3, r2
 8022f6e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022f70:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8022f74:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8022f78:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8022f7c:	2800      	cmp	r0, #0
 8022f7e:	f000 81a9 	beq.w	80232d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8022f82:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8022f86:	950c      	str	r5, [sp, #48]	; 0x30
 8022f88:	0e2d      	lsrs	r5, r5, #24
 8022f8a:	9513      	str	r5, [sp, #76]	; 0x4c
 8022f8c:	b181      	cbz	r1, 8022fb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8022f8e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8022f92:	3b01      	subs	r3, #1
 8022f94:	009b      	lsls	r3, r3, #2
 8022f96:	3304      	adds	r3, #4
 8022f98:	eb08 0c03 	add.w	ip, r8, r3
 8022f9c:	f858 3003 	ldr.w	r3, [r8, r3]
 8022fa0:	9308      	str	r3, [sp, #32]
 8022fa2:	0e1b      	lsrs	r3, r3, #24
 8022fa4:	9311      	str	r3, [sp, #68]	; 0x44
 8022fa6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8022faa:	930d      	str	r3, [sp, #52]	; 0x34
 8022fac:	0e1b      	lsrs	r3, r3, #24
 8022fae:	9314      	str	r3, [sp, #80]	; 0x50
 8022fb0:	b280      	uxth	r0, r0
 8022fb2:	b289      	uxth	r1, r1
 8022fb4:	fb00 f901 	mul.w	r9, r0, r1
 8022fb8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8022fbc:	0100      	lsls	r0, r0, #4
 8022fbe:	eba0 0809 	sub.w	r8, r0, r9
 8022fc2:	b289      	uxth	r1, r1
 8022fc4:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8022fc8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8022fca:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8022fcc:	fa1f f888 	uxth.w	r8, r8
 8022fd0:	1a5b      	subs	r3, r3, r1
 8022fd2:	b29b      	uxth	r3, r3
 8022fd4:	fb08 f000 	mul.w	r0, r8, r0
 8022fd8:	fb03 000e 	mla	r0, r3, lr, r0
 8022fdc:	fb01 0005 	mla	r0, r1, r5, r0
 8022fe0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8022fe2:	fb09 0005 	mla	r0, r9, r5, r0
 8022fe6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8022fea:	2800      	cmp	r0, #0
 8022fec:	f000 80fa 	beq.w	80231e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8022ff0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8022ff4:	d01b      	beq.n	802302e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8022ff6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8022ffa:	fb0e fa0a 	mul.w	sl, lr, sl
 8022ffe:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023002:	fb0e fe02 	mul.w	lr, lr, r2
 8023006:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802300a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802300e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023012:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023016:	4452      	add	r2, sl
 8023018:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802301c:	0a12      	lsrs	r2, r2, #8
 802301e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023022:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023026:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802302a:	ea42 020c 	orr.w	r2, r2, ip
 802302e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023030:	2dff      	cmp	r5, #255	; 0xff
 8023032:	d021      	beq.n	8023078 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8023034:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023036:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802303a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802303c:	fb05 fb0b 	mul.w	fp, r5, fp
 8023040:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023042:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023046:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023048:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802304c:	fb05 fa0a 	mul.w	sl, r5, sl
 8023050:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023054:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023058:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802305c:	44de      	add	lr, fp
 802305e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023062:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023066:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802306a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802306e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023072:	ea4e 050a 	orr.w	r5, lr, sl
 8023076:	950c      	str	r5, [sp, #48]	; 0x30
 8023078:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802307a:	2dff      	cmp	r5, #255	; 0xff
 802307c:	d021      	beq.n	80230c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 802307e:	9d08      	ldr	r5, [sp, #32]
 8023080:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023084:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023086:	fb05 fb0b 	mul.w	fp, r5, fp
 802308a:	9d08      	ldr	r5, [sp, #32]
 802308c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023090:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023092:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023096:	fb05 fa0a 	mul.w	sl, r5, sl
 802309a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802309e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80230a2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80230a6:	44de      	add	lr, fp
 80230a8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80230ac:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80230b0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80230b4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80230b8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80230bc:	ea4e 050a 	orr.w	r5, lr, sl
 80230c0:	9508      	str	r5, [sp, #32]
 80230c2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80230c4:	2dff      	cmp	r5, #255	; 0xff
 80230c6:	d021      	beq.n	802310c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80230c8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80230ca:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80230ce:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80230d0:	fb05 fb0b 	mul.w	fp, r5, fp
 80230d4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80230d6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80230da:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80230dc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80230e0:	fb05 fa0a 	mul.w	sl, r5, sl
 80230e4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80230e8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80230ec:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80230f0:	44de      	add	lr, fp
 80230f2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80230f6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80230fa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80230fe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023102:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023106:	ea4e 050a 	orr.w	r5, lr, sl
 802310a:	950d      	str	r5, [sp, #52]	; 0x34
 802310c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802310e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023112:	9d08      	ldr	r5, [sp, #32]
 8023114:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8023118:	fb08 fc0c 	mul.w	ip, r8, ip
 802311c:	fb03 cc0e 	mla	ip, r3, lr, ip
 8023120:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023124:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023126:	fb01 cc0e 	mla	ip, r1, lr, ip
 802312a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802312e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023130:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023134:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023138:	fb08 f80e 	mul.w	r8, r8, lr
 802313c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023140:	fb03 8202 	mla	r2, r3, r2, r8
 8023144:	9b08      	ldr	r3, [sp, #32]
 8023146:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023148:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 802314c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802314e:	fb01 220a 	mla	r2, r1, sl, r2
 8023152:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8023156:	fb09 2901 	mla	r9, r9, r1, r2
 802315a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802315c:	883b      	ldrh	r3, [r7, #0]
 802315e:	4342      	muls	r2, r0
 8023160:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023164:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023168:	1c50      	adds	r0, r2, #1
 802316a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802316e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023172:	ea4c 0c09 	orr.w	ip, ip, r9
 8023176:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802317a:	1219      	asrs	r1, r3, #8
 802317c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8023180:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8023184:	b2c0      	uxtb	r0, r0
 8023186:	fb12 f205 	smulbb	r2, r2, r5
 802318a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802318e:	fb01 2100 	mla	r1, r1, r0, r2
 8023192:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8023196:	10da      	asrs	r2, r3, #3
 8023198:	fa5f fc8c 	uxtb.w	ip, ip
 802319c:	00db      	lsls	r3, r3, #3
 802319e:	fb1c fc05 	smulbb	ip, ip, r5
 80231a2:	b2db      	uxtb	r3, r3
 80231a4:	b289      	uxth	r1, r1
 80231a6:	fb03 c300 	mla	r3, r3, r0, ip
 80231aa:	fa1f fc83 	uxth.w	ip, r3
 80231ae:	1c4b      	adds	r3, r1, #1
 80231b0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80231b4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80231b8:	fb1e fe05 	smulbb	lr, lr, r5
 80231bc:	f10c 0301 	add.w	r3, ip, #1
 80231c0:	fb02 e200 	mla	r2, r2, r0, lr
 80231c4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80231c8:	b292      	uxth	r2, r2
 80231ca:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80231ce:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80231d2:	430b      	orrs	r3, r1
 80231d4:	1c51      	adds	r1, r2, #1
 80231d6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80231da:	0952      	lsrs	r2, r2, #5
 80231dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80231e0:	4313      	orrs	r3, r2
 80231e2:	803b      	strh	r3, [r7, #0]
 80231e4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80231e6:	441c      	add	r4, r3
 80231e8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80231ea:	441e      	add	r6, r3
 80231ec:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80231ee:	3b01      	subs	r3, #1
 80231f0:	3702      	adds	r7, #2
 80231f2:	9318      	str	r3, [sp, #96]	; 0x60
 80231f4:	e698      	b.n	8022f28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80231f6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80231f8:	441c      	add	r4, r3
 80231fa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80231fc:	441e      	add	r6, r3
 80231fe:	9b07      	ldr	r3, [sp, #28]
 8023200:	3b01      	subs	r3, #1
 8023202:	9307      	str	r3, [sp, #28]
 8023204:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023206:	3302      	adds	r3, #2
 8023208:	930a      	str	r3, [sp, #40]	; 0x28
 802320a:	e66d      	b.n	8022ee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 802320c:	d023      	beq.n	8023256 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802320e:	9b07      	ldr	r3, [sp, #28]
 8023210:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8023212:	3b01      	subs	r3, #1
 8023214:	fb00 4003 	mla	r0, r0, r3, r4
 8023218:	1400      	asrs	r0, r0, #16
 802321a:	f53f ae82 	bmi.w	8022f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802321e:	3901      	subs	r1, #1
 8023220:	4288      	cmp	r0, r1
 8023222:	f6bf ae7e 	bge.w	8022f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023226:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8023228:	fb01 6303 	mla	r3, r1, r3, r6
 802322c:	141b      	asrs	r3, r3, #16
 802322e:	f53f ae78 	bmi.w	8022f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023232:	3a01      	subs	r2, #1
 8023234:	4293      	cmp	r3, r2
 8023236:	f6bf ae74 	bge.w	8022f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802323a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802323e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8023242:	f1bb 0f00 	cmp.w	fp, #0
 8023246:	dc6c      	bgt.n	8023322 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023248:	9b07      	ldr	r3, [sp, #28]
 802324a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802324e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023250:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023254:	930a      	str	r3, [sp, #40]	; 0x28
 8023256:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023258:	2b00      	cmp	r3, #0
 802325a:	f340 81b3 	ble.w	80235c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802325e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023262:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023266:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802326a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802326c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023270:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023274:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023278:	eef0 6a62 	vmov.f32	s13, s5
 802327c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023280:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023284:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023288:	ee16 4a90 	vmov	r4, s13
 802328c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023290:	eef0 6a43 	vmov.f32	s13, s6
 8023294:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023298:	ee12 2a90 	vmov	r2, s5
 802329c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80232a0:	fb92 f3f3 	sdiv	r3, r2, r3
 80232a4:	ee13 2a10 	vmov	r2, s6
 80232a8:	9329      	str	r3, [sp, #164]	; 0xa4
 80232aa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80232ac:	fb92 f3f3 	sdiv	r3, r2, r3
 80232b0:	932a      	str	r3, [sp, #168]	; 0xa8
 80232b2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80232b4:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80232b6:	3b01      	subs	r3, #1
 80232b8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80232bc:	9317      	str	r3, [sp, #92]	; 0x5c
 80232be:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80232c0:	bf08      	it	eq
 80232c2:	4613      	moveq	r3, r2
 80232c4:	ee16 6a90 	vmov	r6, s13
 80232c8:	9307      	str	r3, [sp, #28]
 80232ca:	eeb0 3a67 	vmov.f32	s6, s15
 80232ce:	eef0 2a47 	vmov.f32	s5, s14
 80232d2:	e5fb      	b.n	8022ecc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80232d4:	2900      	cmp	r1, #0
 80232d6:	f43f ae6b 	beq.w	8022fb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80232da:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80232de:	9308      	str	r3, [sp, #32]
 80232e0:	0e1b      	lsrs	r3, r3, #24
 80232e2:	9311      	str	r3, [sp, #68]	; 0x44
 80232e4:	e664      	b.n	8022fb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80232e6:	f112 0801 	adds.w	r8, r2, #1
 80232ea:	f53f af7b 	bmi.w	80231e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80232ee:	4543      	cmp	r3, r8
 80232f0:	f6ff af78 	blt.w	80231e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80232f4:	f11c 0801 	adds.w	r8, ip, #1
 80232f8:	f53f af74 	bmi.w	80231e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80232fc:	45c6      	cmp	lr, r8
 80232fe:	f6ff af71 	blt.w	80231e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023302:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8023304:	9201      	str	r2, [sp, #4]
 8023306:	fa0f f28e 	sxth.w	r2, lr
 802330a:	e9cd 1504 	strd	r1, r5, [sp, #16]
 802330e:	e9cd c002 	strd	ip, r0, [sp, #8]
 8023312:	9200      	str	r2, [sp, #0]
 8023314:	b21b      	sxth	r3, r3
 8023316:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023318:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802331a:	4639      	mov	r1, r7
 802331c:	f7ff fc79 	bl	8022c12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8023320:	e760      	b.n	80231e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023322:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023324:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023326:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802332a:	1427      	asrs	r7, r4, #16
 802332c:	1433      	asrs	r3, r6, #16
 802332e:	fb01 7303 	mla	r3, r1, r3, r7
 8023332:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8023336:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802333a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802333e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023342:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023346:	2a00      	cmp	r2, #0
 8023348:	f000 8133 	beq.w	80235b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 802334c:	687d      	ldr	r5, [r7, #4]
 802334e:	950e      	str	r5, [sp, #56]	; 0x38
 8023350:	0e2d      	lsrs	r5, r5, #24
 8023352:	9515      	str	r5, [sp, #84]	; 0x54
 8023354:	b178      	cbz	r0, 8023376 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023356:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 802335a:	3901      	subs	r1, #1
 802335c:	0089      	lsls	r1, r1, #2
 802335e:	3104      	adds	r1, #4
 8023360:	eb07 0e01 	add.w	lr, r7, r1
 8023364:	5879      	ldr	r1, [r7, r1]
 8023366:	9109      	str	r1, [sp, #36]	; 0x24
 8023368:	0e09      	lsrs	r1, r1, #24
 802336a:	9112      	str	r1, [sp, #72]	; 0x48
 802336c:	f8de 1004 	ldr.w	r1, [lr, #4]
 8023370:	910f      	str	r1, [sp, #60]	; 0x3c
 8023372:	0e09      	lsrs	r1, r1, #24
 8023374:	9116      	str	r1, [sp, #88]	; 0x58
 8023376:	b292      	uxth	r2, r2
 8023378:	b280      	uxth	r0, r0
 802337a:	fb02 f800 	mul.w	r8, r2, r0
 802337e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8023382:	0112      	lsls	r2, r2, #4
 8023384:	eba2 0e08 	sub.w	lr, r2, r8
 8023388:	b280      	uxth	r0, r0
 802338a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802338e:	9915      	ldr	r1, [sp, #84]	; 0x54
 8023390:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023392:	fa1f fe8e 	uxth.w	lr, lr
 8023396:	1a12      	subs	r2, r2, r0
 8023398:	b292      	uxth	r2, r2
 802339a:	fb0e f101 	mul.w	r1, lr, r1
 802339e:	fb02 110c 	mla	r1, r2, ip, r1
 80233a2:	fb00 1105 	mla	r1, r0, r5, r1
 80233a6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80233a8:	fb08 1105 	mla	r1, r8, r5, r1
 80233ac:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80233b0:	2900      	cmp	r1, #0
 80233b2:	f000 80f5 	beq.w	80235a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 80233b6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80233ba:	d019      	beq.n	80233f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 80233bc:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80233c0:	fb0c fa0a 	mul.w	sl, ip, sl
 80233c4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80233c8:	fb0c fc03 	mul.w	ip, ip, r3
 80233cc:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80233d0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80233d4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80233d8:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80233dc:	4453      	add	r3, sl
 80233de:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80233e2:	0a1b      	lsrs	r3, r3, #8
 80233e4:	0a3f      	lsrs	r7, r7, #8
 80233e6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80233ea:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80233ee:	433b      	orrs	r3, r7
 80233f0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80233f2:	2dff      	cmp	r5, #255	; 0xff
 80233f4:	d020      	beq.n	8023438 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 80233f6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80233f8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80233fc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80233fe:	436f      	muls	r7, r5
 8023400:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023402:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023406:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023408:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802340c:	fb05 fa0a 	mul.w	sl, r5, sl
 8023410:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023414:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023418:	44bc      	add	ip, r7
 802341a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802341e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023422:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023426:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802342a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802342e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023432:	ea4c 050a 	orr.w	r5, ip, sl
 8023436:	950e      	str	r5, [sp, #56]	; 0x38
 8023438:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802343a:	2dff      	cmp	r5, #255	; 0xff
 802343c:	d020      	beq.n	8023480 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 802343e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023440:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023444:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023446:	436f      	muls	r7, r5
 8023448:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802344a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802344e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023450:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023454:	fb05 fa0a 	mul.w	sl, r5, sl
 8023458:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802345c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023460:	44bc      	add	ip, r7
 8023462:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023466:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802346a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802346e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023472:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023476:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802347a:	ea4c 050a 	orr.w	r5, ip, sl
 802347e:	9509      	str	r5, [sp, #36]	; 0x24
 8023480:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023482:	2dff      	cmp	r5, #255	; 0xff
 8023484:	d020      	beq.n	80234c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8023486:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023488:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802348c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802348e:	436f      	muls	r7, r5
 8023490:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023492:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023496:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023498:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802349c:	fb05 fa0a 	mul.w	sl, r5, sl
 80234a0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80234a4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80234a8:	44bc      	add	ip, r7
 80234aa:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80234ae:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80234b2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80234b6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80234ba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80234be:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80234c2:	ea4c 050a 	orr.w	r5, ip, sl
 80234c6:	950f      	str	r5, [sp, #60]	; 0x3c
 80234c8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80234ca:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80234ce:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80234d0:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80234d4:	fb0e f707 	mul.w	r7, lr, r7
 80234d8:	fb02 770c 	mla	r7, r2, ip, r7
 80234dc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80234e0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80234e2:	fb00 770c 	mla	r7, r0, ip, r7
 80234e6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80234ea:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80234ec:	fb08 770c 	mla	r7, r8, ip, r7
 80234f0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80234f4:	fb0e fe0c 	mul.w	lr, lr, ip
 80234f8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80234fc:	fb02 e303 	mla	r3, r2, r3, lr
 8023500:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023502:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023504:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8023508:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802350a:	fb00 330a 	mla	r3, r0, sl, r3
 802350e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8023512:	fb08 3c0c 	mla	ip, r8, ip, r3
 8023516:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023518:	f8b9 0000 	ldrh.w	r0, [r9]
 802351c:	4359      	muls	r1, r3
 802351e:	0a3f      	lsrs	r7, r7, #8
 8023520:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023524:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023528:	1c4b      	adds	r3, r1, #1
 802352a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802352e:	ea47 070c 	orr.w	r7, r7, ip
 8023532:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023536:	1202      	asrs	r2, r0, #8
 8023538:	0c3b      	lsrs	r3, r7, #16
 802353a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802353e:	b2c9      	uxtb	r1, r1
 8023540:	fb13 f305 	smulbb	r3, r3, r5
 8023544:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023548:	fb02 3201 	mla	r2, r2, r1, r3
 802354c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8023550:	10c3      	asrs	r3, r0, #3
 8023552:	b2ff      	uxtb	r7, r7
 8023554:	00c0      	lsls	r0, r0, #3
 8023556:	b2c0      	uxtb	r0, r0
 8023558:	fb17 f705 	smulbb	r7, r7, r5
 802355c:	fb00 7001 	mla	r0, r0, r1, r7
 8023560:	b292      	uxth	r2, r2
 8023562:	fb1c fc05 	smulbb	ip, ip, r5
 8023566:	b280      	uxth	r0, r0
 8023568:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802356c:	fb03 c301 	mla	r3, r3, r1, ip
 8023570:	1c51      	adds	r1, r2, #1
 8023572:	f100 0c01 	add.w	ip, r0, #1
 8023576:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802357a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 802357e:	b29b      	uxth	r3, r3
 8023580:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8023584:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8023588:	ea4c 0202 	orr.w	r2, ip, r2
 802358c:	f103 0c01 	add.w	ip, r3, #1
 8023590:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8023594:	095b      	lsrs	r3, r3, #5
 8023596:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802359a:	431a      	orrs	r2, r3
 802359c:	f8a9 2000 	strh.w	r2, [r9]
 80235a0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80235a2:	441c      	add	r4, r3
 80235a4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80235a6:	f109 0902 	add.w	r9, r9, #2
 80235aa:	441e      	add	r6, r3
 80235ac:	f10b 3bff 	add.w	fp, fp, #4294967295
 80235b0:	e647      	b.n	8023242 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80235b2:	2800      	cmp	r0, #0
 80235b4:	f43f aedf 	beq.w	8023376 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80235b8:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 80235bc:	9109      	str	r1, [sp, #36]	; 0x24
 80235be:	0e09      	lsrs	r1, r1, #24
 80235c0:	9112      	str	r1, [sp, #72]	; 0x48
 80235c2:	e6d8      	b.n	8023376 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80235c4:	b01d      	add	sp, #116	; 0x74
 80235c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080235ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 80235ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80235ce:	b085      	sub	sp, #20
 80235d0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80235d4:	9102      	str	r1, [sp, #8]
 80235d6:	2c00      	cmp	r4, #0
 80235d8:	fb04 7103 	mla	r1, r4, r3, r7
 80235dc:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80235e0:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80235e4:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80235e8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80235ec:	f2c0 810c 	blt.w	8023808 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80235f0:	45a6      	cmp	lr, r4
 80235f2:	f340 8109 	ble.w	8023808 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80235f6:	2f00      	cmp	r7, #0
 80235f8:	f2c0 8104 	blt.w	8023804 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80235fc:	42bb      	cmp	r3, r7
 80235fe:	f340 8101 	ble.w	8023804 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023602:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8023606:	1c7a      	adds	r2, r7, #1
 8023608:	f100 8101 	bmi.w	802380e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 802360c:	4293      	cmp	r3, r2
 802360e:	f340 80fe 	ble.w	802380e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023612:	2e00      	cmp	r6, #0
 8023614:	f000 80fd 	beq.w	8023812 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8023618:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802361c:	3401      	adds	r4, #1
 802361e:	f100 80fc 	bmi.w	802381a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023622:	45a6      	cmp	lr, r4
 8023624:	f340 80f9 	ble.w	802381a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023628:	2800      	cmp	r0, #0
 802362a:	f000 80f9 	beq.w	8023820 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 802362e:	2f00      	cmp	r7, #0
 8023630:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8023634:	f2c0 80ef 	blt.w	8023816 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023638:	42bb      	cmp	r3, r7
 802363a:	f340 80ec 	ble.w	8023816 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802363e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023642:	3701      	adds	r7, #1
 8023644:	f100 80ef 	bmi.w	8023826 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023648:	42bb      	cmp	r3, r7
 802364a:	f340 80ec 	ble.w	8023826 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802364e:	2e00      	cmp	r6, #0
 8023650:	f000 80eb 	beq.w	802382a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8023654:	6852      	ldr	r2, [r2, #4]
 8023656:	b2b6      	uxth	r6, r6
 8023658:	b280      	uxth	r0, r0
 802365a:	fb00 fe06 	mul.w	lr, r0, r6
 802365e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023662:	0136      	lsls	r6, r6, #4
 8023664:	eba6 070e 	sub.w	r7, r6, lr
 8023668:	b280      	uxth	r0, r0
 802366a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802366e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023672:	b2bf      	uxth	r7, r7
 8023674:	1a1b      	subs	r3, r3, r0
 8023676:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802367a:	b29b      	uxth	r3, r3
 802367c:	fb07 f60a 	mul.w	r6, r7, sl
 8023680:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023684:	fb0b 6603 	mla	r6, fp, r3, r6
 8023688:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802368c:	fb00 6609 	mla	r6, r0, r9, r6
 8023690:	fb0e 6608 	mla	r6, lr, r8, r6
 8023694:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023698:	9600      	str	r6, [sp, #0]
 802369a:	2e00      	cmp	r6, #0
 802369c:	f000 80af 	beq.w	80237fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 80236a0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80236a4:	fb0b fc0c 	mul.w	ip, fp, ip
 80236a8:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80236ac:	fb0b f505 	mul.w	r5, fp, r5
 80236b0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80236b4:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80236b8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80236bc:	44dc      	add	ip, fp
 80236be:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80236c2:	9501      	str	r5, [sp, #4]
 80236c4:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80236c8:	9503      	str	r5, [sp, #12]
 80236ca:	9d01      	ldr	r5, [sp, #4]
 80236cc:	9e02      	ldr	r6, [sp, #8]
 80236ce:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80236d2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80236d6:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80236da:	fb0a fc0c 	mul.w	ip, sl, ip
 80236de:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80236e2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80236e6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80236ea:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80236ee:	4465      	add	r5, ip
 80236f0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80236f4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80236f8:	fb09 fc0c 	mul.w	ip, r9, ip
 80236fc:	fb09 f904 	mul.w	r9, r9, r4
 8023700:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023704:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023708:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 802370c:	fb08 f404 	mul.w	r4, r8, r4
 8023710:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023714:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023718:	fb08 f802 	mul.w	r8, r8, r2
 802371c:	fb0a fa01 	mul.w	sl, sl, r1
 8023720:	0a22      	lsrs	r2, r4, #8
 8023722:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023726:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802372a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802372e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023732:	4414      	add	r4, r2
 8023734:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023738:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802373c:	0a2d      	lsrs	r5, r5, #8
 802373e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023742:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023746:	9a03      	ldr	r2, [sp, #12]
 8023748:	8836      	ldrh	r6, [r6, #0]
 802374a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802374e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023752:	437d      	muls	r5, r7
 8023754:	4461      	add	r1, ip
 8023756:	0a24      	lsrs	r4, r4, #8
 8023758:	fb02 5503 	mla	r5, r2, r3, r5
 802375c:	0a09      	lsrs	r1, r1, #8
 802375e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023762:	fb04 540e 	mla	r4, r4, lr, r5
 8023766:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802376a:	fb01 4100 	mla	r1, r1, r0, r4
 802376e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023772:	0a09      	lsrs	r1, r1, #8
 8023774:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023778:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802377c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023780:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023784:	fb07 f70a 	mul.w	r7, r7, sl
 8023788:	fb03 7101 	mla	r1, r3, r1, r7
 802378c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023790:	9b00      	ldr	r3, [sp, #0]
 8023792:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023796:	fb0e 1e08 	mla	lr, lr, r8, r1
 802379a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802379e:	fb00 e101 	mla	r1, r0, r1, lr
 80237a2:	43da      	mvns	r2, r3
 80237a4:	1233      	asrs	r3, r6, #8
 80237a6:	b2d2      	uxtb	r2, r2
 80237a8:	10f0      	asrs	r0, r6, #3
 80237aa:	0a09      	lsrs	r1, r1, #8
 80237ac:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80237b0:	00f6      	lsls	r6, r6, #3
 80237b2:	4353      	muls	r3, r2
 80237b4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80237b8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80237bc:	b2f6      	uxtb	r6, r6
 80237be:	4321      	orrs	r1, r4
 80237c0:	4350      	muls	r0, r2
 80237c2:	4356      	muls	r6, r2
 80237c4:	1c5a      	adds	r2, r3, #1
 80237c6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80237ca:	0c0b      	lsrs	r3, r1, #16
 80237cc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80237d0:	1c42      	adds	r2, r0, #1
 80237d2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80237d6:	0a0a      	lsrs	r2, r1, #8
 80237d8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80237dc:	021b      	lsls	r3, r3, #8
 80237de:	00d2      	lsls	r2, r2, #3
 80237e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80237e4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80237e8:	4313      	orrs	r3, r2
 80237ea:	1c72      	adds	r2, r6, #1
 80237ec:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80237f0:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 80237f4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80237f8:	4319      	orrs	r1, r3
 80237fa:	9b02      	ldr	r3, [sp, #8]
 80237fc:	8019      	strh	r1, [r3, #0]
 80237fe:	b005      	add	sp, #20
 8023800:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023804:	2500      	movs	r5, #0
 8023806:	e6fe      	b.n	8023606 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8023808:	2100      	movs	r1, #0
 802380a:	460d      	mov	r5, r1
 802380c:	e706      	b.n	802361c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802380e:	2100      	movs	r1, #0
 8023810:	e704      	b.n	802361c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023812:	4631      	mov	r1, r6
 8023814:	e702      	b.n	802361c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023816:	2400      	movs	r4, #0
 8023818:	e713      	b.n	8023642 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 802381a:	2200      	movs	r2, #0
 802381c:	4614      	mov	r4, r2
 802381e:	e71a      	b.n	8023656 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023820:	4602      	mov	r2, r0
 8023822:	4604      	mov	r4, r0
 8023824:	e717      	b.n	8023656 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023826:	2200      	movs	r2, #0
 8023828:	e715      	b.n	8023656 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802382a:	4632      	mov	r2, r6
 802382c:	e713      	b.n	8023656 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08023830 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023830:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023834:	b09b      	sub	sp, #108	; 0x6c
 8023836:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 802383a:	9218      	str	r2, [sp, #96]	; 0x60
 802383c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802383e:	9116      	str	r1, [sp, #88]	; 0x58
 8023840:	9307      	str	r3, [sp, #28]
 8023842:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8023846:	9019      	str	r0, [sp, #100]	; 0x64
 8023848:	6850      	ldr	r0, [r2, #4]
 802384a:	6812      	ldr	r2, [r2, #0]
 802384c:	fb00 1303 	mla	r3, r0, r3, r1
 8023850:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023854:	930a      	str	r3, [sp, #40]	; 0x28
 8023856:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023858:	681b      	ldr	r3, [r3, #0]
 802385a:	930f      	str	r3, [sp, #60]	; 0x3c
 802385c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802385e:	2b00      	cmp	r3, #0
 8023860:	dc03      	bgt.n	802386a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023862:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023864:	2b00      	cmp	r3, #0
 8023866:	f340 8386 	ble.w	8023f76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802386a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802386c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023870:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023874:	1e48      	subs	r0, r1, #1
 8023876:	1e57      	subs	r7, r2, #1
 8023878:	9b07      	ldr	r3, [sp, #28]
 802387a:	2b00      	cmp	r3, #0
 802387c:	f340 8166 	ble.w	8023b4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8023880:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023884:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023888:	d406      	bmi.n	8023898 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802388a:	4584      	cmp	ip, r0
 802388c:	da04      	bge.n	8023898 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802388e:	2b00      	cmp	r3, #0
 8023890:	db02      	blt.n	8023898 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023892:	42bb      	cmp	r3, r7
 8023894:	f2c0 815b 	blt.w	8023b4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8023898:	f11c 0c01 	adds.w	ip, ip, #1
 802389c:	f100 814b 	bmi.w	8023b36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80238a0:	4561      	cmp	r1, ip
 80238a2:	f2c0 8148 	blt.w	8023b36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80238a6:	3301      	adds	r3, #1
 80238a8:	f100 8145 	bmi.w	8023b36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80238ac:	429a      	cmp	r2, r3
 80238ae:	f2c0 8142 	blt.w	8023b36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80238b2:	9b07      	ldr	r3, [sp, #28]
 80238b4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80238b6:	9317      	str	r3, [sp, #92]	; 0x5c
 80238b8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80238ba:	2b00      	cmp	r3, #0
 80238bc:	f340 8165 	ble.w	8023b8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80238c0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80238c2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80238c4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80238c8:	689b      	ldr	r3, [r3, #8]
 80238ca:	1422      	asrs	r2, r4, #16
 80238cc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80238d0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80238d4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80238d8:	f100 81d5 	bmi.w	8023c86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80238dc:	f103 38ff 	add.w	r8, r3, #4294967295
 80238e0:	4542      	cmp	r2, r8
 80238e2:	f280 81d0 	bge.w	8023c86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80238e6:	f1bc 0f00 	cmp.w	ip, #0
 80238ea:	f2c0 81cc 	blt.w	8023c86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80238ee:	f10e 38ff 	add.w	r8, lr, #4294967295
 80238f2:	45c4      	cmp	ip, r8
 80238f4:	f280 81c7 	bge.w	8023c86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80238f8:	b21b      	sxth	r3, r3
 80238fa:	fb0c 2203 	mla	r2, ip, r3, r2
 80238fe:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023900:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023904:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023908:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802390c:	2900      	cmp	r1, #0
 802390e:	f000 8182 	beq.w	8023c16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8023912:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023916:	950b      	str	r5, [sp, #44]	; 0x2c
 8023918:	0e2d      	lsrs	r5, r5, #24
 802391a:	9512      	str	r5, [sp, #72]	; 0x48
 802391c:	b180      	cbz	r0, 8023940 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802391e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8023922:	3b01      	subs	r3, #1
 8023924:	009b      	lsls	r3, r3, #2
 8023926:	3304      	adds	r3, #4
 8023928:	eb08 0c03 	add.w	ip, r8, r3
 802392c:	f858 3003 	ldr.w	r3, [r8, r3]
 8023930:	9308      	str	r3, [sp, #32]
 8023932:	0e1b      	lsrs	r3, r3, #24
 8023934:	9310      	str	r3, [sp, #64]	; 0x40
 8023936:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802393a:	930c      	str	r3, [sp, #48]	; 0x30
 802393c:	0e1b      	lsrs	r3, r3, #24
 802393e:	9313      	str	r3, [sp, #76]	; 0x4c
 8023940:	b289      	uxth	r1, r1
 8023942:	b280      	uxth	r0, r0
 8023944:	fb01 f900 	mul.w	r9, r1, r0
 8023948:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802394c:	0109      	lsls	r1, r1, #4
 802394e:	eba1 0809 	sub.w	r8, r1, r9
 8023952:	b280      	uxth	r0, r0
 8023954:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8023958:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802395a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802395c:	fa1f f888 	uxth.w	r8, r8
 8023960:	1a09      	subs	r1, r1, r0
 8023962:	b289      	uxth	r1, r1
 8023964:	fb08 f303 	mul.w	r3, r8, r3
 8023968:	fb01 330e 	mla	r3, r1, lr, r3
 802396c:	fb00 3305 	mla	r3, r0, r5, r3
 8023970:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023972:	fb09 3305 	mla	r3, r9, r5, r3
 8023976:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802397a:	2b00      	cmp	r3, #0
 802397c:	f000 80d2 	beq.w	8023b24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023980:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023984:	d01b      	beq.n	80239be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8023986:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802398a:	fb0e fa0a 	mul.w	sl, lr, sl
 802398e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023992:	fb0e fe02 	mul.w	lr, lr, r2
 8023996:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802399a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802399e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80239a2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80239a6:	4452      	add	r2, sl
 80239a8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80239ac:	0a12      	lsrs	r2, r2, #8
 80239ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80239b2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80239b6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80239ba:	ea42 020c 	orr.w	r2, r2, ip
 80239be:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80239c0:	2dff      	cmp	r5, #255	; 0xff
 80239c2:	d021      	beq.n	8023a08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 80239c4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80239c6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80239ca:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80239cc:	fb05 fb0b 	mul.w	fp, r5, fp
 80239d0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80239d2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80239d6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80239d8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80239dc:	fb05 fa0a 	mul.w	sl, r5, sl
 80239e0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80239e4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80239e8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80239ec:	44de      	add	lr, fp
 80239ee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80239f2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80239f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80239fa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80239fe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023a02:	ea4e 050a 	orr.w	r5, lr, sl
 8023a06:	950b      	str	r5, [sp, #44]	; 0x2c
 8023a08:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023a0a:	2dff      	cmp	r5, #255	; 0xff
 8023a0c:	d021      	beq.n	8023a52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8023a0e:	9d08      	ldr	r5, [sp, #32]
 8023a10:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023a14:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023a16:	fb05 fb0b 	mul.w	fp, r5, fp
 8023a1a:	9d08      	ldr	r5, [sp, #32]
 8023a1c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023a20:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023a22:	fb05 fa0e 	mul.w	sl, r5, lr
 8023a26:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023a2a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023a2e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023a32:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023a36:	44de      	add	lr, fp
 8023a38:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023a3c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023a40:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023a44:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023a48:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023a4c:	ea4e 050a 	orr.w	r5, lr, sl
 8023a50:	9508      	str	r5, [sp, #32]
 8023a52:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023a54:	2dff      	cmp	r5, #255	; 0xff
 8023a56:	d021      	beq.n	8023a9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8023a58:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023a5a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023a5e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023a60:	fb05 fb0b 	mul.w	fp, r5, fp
 8023a64:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023a66:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023a6a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023a6c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023a70:	fb05 fa0a 	mul.w	sl, r5, sl
 8023a74:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023a78:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023a7c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023a80:	44de      	add	lr, fp
 8023a82:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023a86:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023a8a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023a8e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023a92:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023a96:	ea4e 050a 	orr.w	r5, lr, sl
 8023a9a:	950c      	str	r5, [sp, #48]	; 0x30
 8023a9c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023a9e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023aa2:	9d08      	ldr	r5, [sp, #32]
 8023aa4:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8023aa8:	fb08 fc0c 	mul.w	ip, r8, ip
 8023aac:	fb01 cc0e 	mla	ip, r1, lr, ip
 8023ab0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023ab4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023ab6:	fb00 cc0e 	mla	ip, r0, lr, ip
 8023aba:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023abe:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023ac0:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023ac4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023ac8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023acc:	fb08 f80e 	mul.w	r8, r8, lr
 8023ad0:	fb01 8202 	mla	r2, r1, r2, r8
 8023ad4:	9908      	ldr	r1, [sp, #32]
 8023ad6:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8023ada:	990c      	ldr	r1, [sp, #48]	; 0x30
 8023adc:	fb00 220a 	mla	r2, r0, sl, r2
 8023ae0:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8023ae4:	fb09 2900 	mla	r9, r9, r0, r2
 8023ae8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023aec:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023af0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023af4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023af8:	ea4c 0c09 	orr.w	ip, ip, r9
 8023afc:	2bff      	cmp	r3, #255	; 0xff
 8023afe:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8023b02:	f040 8091 	bne.w	8023c28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8023b06:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8023b0a:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8023b0e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023b12:	f022 0207 	bic.w	r2, r2, #7
 8023b16:	431a      	orrs	r2, r3
 8023b18:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8023b1c:	ea4c 0c02 	orr.w	ip, ip, r2
 8023b20:	f8a7 c000 	strh.w	ip, [r7]
 8023b24:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023b26:	441c      	add	r4, r3
 8023b28:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023b2a:	441e      	add	r6, r3
 8023b2c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023b2e:	3b01      	subs	r3, #1
 8023b30:	3702      	adds	r7, #2
 8023b32:	9317      	str	r3, [sp, #92]	; 0x5c
 8023b34:	e6c0      	b.n	80238b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8023b36:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023b38:	441c      	add	r4, r3
 8023b3a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023b3c:	441e      	add	r6, r3
 8023b3e:	9b07      	ldr	r3, [sp, #28]
 8023b40:	3b01      	subs	r3, #1
 8023b42:	9307      	str	r3, [sp, #28]
 8023b44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023b46:	3302      	adds	r3, #2
 8023b48:	930a      	str	r3, [sp, #40]	; 0x28
 8023b4a:	e695      	b.n	8023878 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023b4c:	d024      	beq.n	8023b98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8023b4e:	9b07      	ldr	r3, [sp, #28]
 8023b50:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8023b52:	3b01      	subs	r3, #1
 8023b54:	fb00 4003 	mla	r0, r0, r3, r4
 8023b58:	1400      	asrs	r0, r0, #16
 8023b5a:	f53f aeaa 	bmi.w	80238b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023b5e:	3901      	subs	r1, #1
 8023b60:	4288      	cmp	r0, r1
 8023b62:	f6bf aea6 	bge.w	80238b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023b66:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8023b68:	fb01 6303 	mla	r3, r1, r3, r6
 8023b6c:	141b      	asrs	r3, r3, #16
 8023b6e:	f53f aea0 	bmi.w	80238b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023b72:	3a01      	subs	r2, #1
 8023b74:	4293      	cmp	r3, r2
 8023b76:	f6bf ae9c 	bge.w	80238b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023b7a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023b7e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8023b82:	f1bb 0f00 	cmp.w	fp, #0
 8023b86:	f300 809a 	bgt.w	8023cbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023b8a:	9b07      	ldr	r3, [sp, #28]
 8023b8c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023b90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023b92:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023b96:	930a      	str	r3, [sp, #40]	; 0x28
 8023b98:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023b9a:	2b00      	cmp	r3, #0
 8023b9c:	f340 81eb 	ble.w	8023f76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8023ba0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023ba4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023ba8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023bac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023bae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023bb2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023bb6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023bba:	eef0 6a62 	vmov.f32	s13, s5
 8023bbe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023bc2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023bc6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023bca:	ee16 4a90 	vmov	r4, s13
 8023bce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023bd2:	eef0 6a43 	vmov.f32	s13, s6
 8023bd6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023bda:	ee12 2a90 	vmov	r2, s5
 8023bde:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023be2:	fb92 f3f3 	sdiv	r3, r2, r3
 8023be6:	ee13 2a10 	vmov	r2, s6
 8023bea:	9327      	str	r3, [sp, #156]	; 0x9c
 8023bec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023bee:	fb92 f3f3 	sdiv	r3, r2, r3
 8023bf2:	9328      	str	r3, [sp, #160]	; 0xa0
 8023bf4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023bf6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8023bf8:	3b01      	subs	r3, #1
 8023bfa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023bfe:	9316      	str	r3, [sp, #88]	; 0x58
 8023c00:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023c02:	bf08      	it	eq
 8023c04:	4613      	moveq	r3, r2
 8023c06:	ee16 6a90 	vmov	r6, s13
 8023c0a:	9307      	str	r3, [sp, #28]
 8023c0c:	eeb0 3a67 	vmov.f32	s6, s15
 8023c10:	eef0 2a47 	vmov.f32	s5, s14
 8023c14:	e622      	b.n	802385c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8023c16:	2800      	cmp	r0, #0
 8023c18:	f43f ae92 	beq.w	8023940 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023c1c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8023c20:	9308      	str	r3, [sp, #32]
 8023c22:	0e1b      	lsrs	r3, r3, #24
 8023c24:	9310      	str	r3, [sp, #64]	; 0x40
 8023c26:	e68b      	b.n	8023940 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023c28:	8839      	ldrh	r1, [r7, #0]
 8023c2a:	4dd4      	ldr	r5, [pc, #848]	; (8023f7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8023c2c:	43db      	mvns	r3, r3
 8023c2e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8023c32:	fa5f f883 	uxtb.w	r8, r3
 8023c36:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8023c3a:	fb0e fe08 	mul.w	lr, lr, r8
 8023c3e:	10c8      	asrs	r0, r1, #3
 8023c40:	00cb      	lsls	r3, r1, #3
 8023c42:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023c46:	f10e 0101 	add.w	r1, lr, #1
 8023c4a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8023c4e:	fb00 f008 	mul.w	r0, r0, r8
 8023c52:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8023c56:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8023c5a:	f100 0e01 	add.w	lr, r0, #1
 8023c5e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8023c62:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023c66:	b2db      	uxtb	r3, r3
 8023c68:	b2c9      	uxtb	r1, r1
 8023c6a:	00d2      	lsls	r2, r2, #3
 8023c6c:	fb03 f308 	mul.w	r3, r3, r8
 8023c70:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8023c74:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023c78:	430a      	orrs	r2, r1
 8023c7a:	1c59      	adds	r1, r3, #1
 8023c7c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8023c80:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8023c84:	e748      	b.n	8023b18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8023c86:	f112 0801 	adds.w	r8, r2, #1
 8023c8a:	f53f af4b 	bmi.w	8023b24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023c8e:	4543      	cmp	r3, r8
 8023c90:	f6ff af48 	blt.w	8023b24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023c94:	f11c 0801 	adds.w	r8, ip, #1
 8023c98:	f53f af44 	bmi.w	8023b24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023c9c:	45c6      	cmp	lr, r8
 8023c9e:	f6ff af41 	blt.w	8023b24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023ca2:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8023ca6:	fa0f f28e 	sxth.w	r2, lr
 8023caa:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8023cae:	9200      	str	r2, [sp, #0]
 8023cb0:	b21b      	sxth	r3, r3
 8023cb2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023cb4:	9819      	ldr	r0, [sp, #100]	; 0x64
 8023cb6:	4639      	mov	r1, r7
 8023cb8:	f7ff fc87 	bl	80235ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8023cbc:	e732      	b.n	8023b24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023cbe:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023cc0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023cc2:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8023cc6:	1421      	asrs	r1, r4, #16
 8023cc8:	1433      	asrs	r3, r6, #16
 8023cca:	fb07 1303 	mla	r3, r7, r3, r1
 8023cce:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8023cd0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8023cd4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8023cd8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023cdc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023ce0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023ce4:	2a00      	cmp	r2, #0
 8023ce6:	f000 8107 	beq.w	8023ef8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8023cea:	684d      	ldr	r5, [r1, #4]
 8023cec:	950d      	str	r5, [sp, #52]	; 0x34
 8023cee:	0e2d      	lsrs	r5, r5, #24
 8023cf0:	9514      	str	r5, [sp, #80]	; 0x50
 8023cf2:	b178      	cbz	r0, 8023d14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8023cf4:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8023cf8:	3f01      	subs	r7, #1
 8023cfa:	00bf      	lsls	r7, r7, #2
 8023cfc:	3704      	adds	r7, #4
 8023cfe:	eb01 0e07 	add.w	lr, r1, r7
 8023d02:	59c9      	ldr	r1, [r1, r7]
 8023d04:	9109      	str	r1, [sp, #36]	; 0x24
 8023d06:	0e09      	lsrs	r1, r1, #24
 8023d08:	9111      	str	r1, [sp, #68]	; 0x44
 8023d0a:	f8de 1004 	ldr.w	r1, [lr, #4]
 8023d0e:	910e      	str	r1, [sp, #56]	; 0x38
 8023d10:	0e09      	lsrs	r1, r1, #24
 8023d12:	9115      	str	r1, [sp, #84]	; 0x54
 8023d14:	b292      	uxth	r2, r2
 8023d16:	b280      	uxth	r0, r0
 8023d18:	fb02 f900 	mul.w	r9, r2, r0
 8023d1c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8023d20:	0112      	lsls	r2, r2, #4
 8023d22:	eba2 0e09 	sub.w	lr, r2, r9
 8023d26:	b280      	uxth	r0, r0
 8023d28:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8023d2c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8023d2e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023d30:	fa1f fe8e 	uxth.w	lr, lr
 8023d34:	1a09      	subs	r1, r1, r0
 8023d36:	b289      	uxth	r1, r1
 8023d38:	fb0e f202 	mul.w	r2, lr, r2
 8023d3c:	fb01 220c 	mla	r2, r1, ip, r2
 8023d40:	fb00 2205 	mla	r2, r0, r5, r2
 8023d44:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023d46:	fb09 2205 	mla	r2, r9, r5, r2
 8023d4a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8023d4e:	2a00      	cmp	r2, #0
 8023d50:	f000 80c9 	beq.w	8023ee6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8023d54:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8023d58:	d019      	beq.n	8023d8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8023d5a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8023d5e:	fb0c fa0a 	mul.w	sl, ip, sl
 8023d62:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023d66:	fb0c fc03 	mul.w	ip, ip, r3
 8023d6a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023d6e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023d72:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023d76:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8023d7a:	4453      	add	r3, sl
 8023d7c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023d80:	0a1b      	lsrs	r3, r3, #8
 8023d82:	0a3f      	lsrs	r7, r7, #8
 8023d84:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023d88:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8023d8c:	433b      	orrs	r3, r7
 8023d8e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023d90:	2dff      	cmp	r5, #255	; 0xff
 8023d92:	d020      	beq.n	8023dd6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8023d94:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023d96:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023d9a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023d9c:	436f      	muls	r7, r5
 8023d9e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023da0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023da4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023da6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023daa:	fb05 fa0a 	mul.w	sl, r5, sl
 8023dae:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023db2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023db6:	44bc      	add	ip, r7
 8023db8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023dbc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023dc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023dc4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023dc8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023dcc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023dd0:	ea4c 050a 	orr.w	r5, ip, sl
 8023dd4:	950d      	str	r5, [sp, #52]	; 0x34
 8023dd6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023dd8:	2dff      	cmp	r5, #255	; 0xff
 8023dda:	d020      	beq.n	8023e1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8023ddc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023dde:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023de2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023de4:	436f      	muls	r7, r5
 8023de6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023de8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8023dec:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023dee:	fb05 fa0c 	mul.w	sl, r5, ip
 8023df2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023df6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023dfa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023dfe:	44bc      	add	ip, r7
 8023e00:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023e04:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023e08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023e0c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023e10:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023e14:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023e18:	ea4c 050a 	orr.w	r5, ip, sl
 8023e1c:	9509      	str	r5, [sp, #36]	; 0x24
 8023e1e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023e20:	2dff      	cmp	r5, #255	; 0xff
 8023e22:	d020      	beq.n	8023e66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8023e24:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023e26:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023e2a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023e2c:	436f      	muls	r7, r5
 8023e2e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023e30:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023e34:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023e36:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023e3a:	fb05 fa0a 	mul.w	sl, r5, sl
 8023e3e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023e42:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023e46:	44bc      	add	ip, r7
 8023e48:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023e4c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023e50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023e54:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023e58:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023e5c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023e60:	ea4c 050a 	orr.w	r5, ip, sl
 8023e64:	950e      	str	r5, [sp, #56]	; 0x38
 8023e66:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023e68:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023e6c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023e6e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8023e72:	fb0e f707 	mul.w	r7, lr, r7
 8023e76:	fb01 770c 	mla	r7, r1, ip, r7
 8023e7a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023e7e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023e80:	fb00 770c 	mla	r7, r0, ip, r7
 8023e84:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023e88:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023e8a:	fb09 770c 	mla	r7, r9, ip, r7
 8023e8e:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8023e92:	fb0e fe0c 	mul.w	lr, lr, ip
 8023e96:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023e9a:	fb01 e303 	mla	r3, r1, r3, lr
 8023e9e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8023ea0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8023ea4:	990e      	ldr	r1, [sp, #56]	; 0x38
 8023ea6:	fb00 330a 	mla	r3, r0, sl, r3
 8023eaa:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8023eae:	fb09 3c0c 	mla	ip, r9, ip, r3
 8023eb2:	0a3f      	lsrs	r7, r7, #8
 8023eb4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023eb8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8023ebc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023ec0:	ea47 070c 	orr.w	r7, r7, ip
 8023ec4:	2aff      	cmp	r2, #255	; 0xff
 8023ec6:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8023eca:	d11e      	bne.n	8023f0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8023ecc:	097a      	lsrs	r2, r7, #5
 8023ece:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8023ed2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023ed6:	f023 0307 	bic.w	r3, r3, #7
 8023eda:	4313      	orrs	r3, r2
 8023edc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8023ee0:	431f      	orrs	r7, r3
 8023ee2:	f8a8 7000 	strh.w	r7, [r8]
 8023ee6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023ee8:	441c      	add	r4, r3
 8023eea:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023eec:	f108 0802 	add.w	r8, r8, #2
 8023ef0:	441e      	add	r6, r3
 8023ef2:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023ef6:	e644      	b.n	8023b82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8023ef8:	2800      	cmp	r0, #0
 8023efa:	f43f af0b 	beq.w	8023d14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8023efe:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8023f02:	9109      	str	r1, [sp, #36]	; 0x24
 8023f04:	0e09      	lsrs	r1, r1, #24
 8023f06:	9111      	str	r1, [sp, #68]	; 0x44
 8023f08:	e704      	b.n	8023d14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8023f0a:	f8b8 1000 	ldrh.w	r1, [r8]
 8023f0e:	43d2      	mvns	r2, r2
 8023f10:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8023f14:	fa5f fe82 	uxtb.w	lr, r2
 8023f18:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8023f1c:	fb0c fc0e 	mul.w	ip, ip, lr
 8023f20:	10c8      	asrs	r0, r1, #3
 8023f22:	00ca      	lsls	r2, r1, #3
 8023f24:	f10c 0101 	add.w	r1, ip, #1
 8023f28:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8023f2c:	0c39      	lsrs	r1, r7, #16
 8023f2e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8023f32:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023f36:	4911      	ldr	r1, [pc, #68]	; (8023f7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8023f38:	fb00 f00e 	mul.w	r0, r0, lr
 8023f3c:	fa5f fc8c 	uxtb.w	ip, ip
 8023f40:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8023f44:	b2d2      	uxtb	r2, r2
 8023f46:	1c41      	adds	r1, r0, #1
 8023f48:	fb02 f20e 	mul.w	r2, r2, lr
 8023f4c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8023f50:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8023f54:	1c51      	adds	r1, r2, #1
 8023f56:	00c0      	lsls	r0, r0, #3
 8023f58:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023f5c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023f60:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8023f64:	ea4c 0c00 	orr.w	ip, ip, r0
 8023f68:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8023f6c:	ea47 0c0c 	orr.w	ip, r7, ip
 8023f70:	f8a8 c000 	strh.w	ip, [r8]
 8023f74:	e7b7      	b.n	8023ee6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8023f76:	b01b      	add	sp, #108	; 0x6c
 8023f78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023f7c:	fffff800 	.word	0xfffff800

08023f80 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8023f80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023f84:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8023f88:	2d00      	cmp	r5, #0
 8023f8a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8023f8e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8023f92:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8023f96:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8023f9a:	fb05 0e03 	mla	lr, r5, r3, r0
 8023f9e:	f2c0 808c 	blt.w	80240ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8023fa2:	45a9      	cmp	r9, r5
 8023fa4:	f340 8089 	ble.w	80240ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8023fa8:	2800      	cmp	r0, #0
 8023faa:	f2c0 8084 	blt.w	80240b6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8023fae:	4580      	cmp	r8, r0
 8023fb0:	f340 8081 	ble.w	80240b6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8023fb4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8023fb8:	f01e 0f01 	tst.w	lr, #1
 8023fbc:	5d16      	ldrb	r6, [r2, r4]
 8023fbe:	bf0c      	ite	eq
 8023fc0:	f006 060f 	andeq.w	r6, r6, #15
 8023fc4:	1136      	asrne	r6, r6, #4
 8023fc6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8023fca:	b2f6      	uxtb	r6, r6
 8023fcc:	1c44      	adds	r4, r0, #1
 8023fce:	d477      	bmi.n	80240c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8023fd0:	45a0      	cmp	r8, r4
 8023fd2:	dd75      	ble.n	80240c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8023fd4:	2f00      	cmp	r7, #0
 8023fd6:	d075      	beq.n	80240c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8023fd8:	f10e 0a01 	add.w	sl, lr, #1
 8023fdc:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8023fe0:	f01a 0f01 	tst.w	sl, #1
 8023fe4:	5d14      	ldrb	r4, [r2, r4]
 8023fe6:	bf0c      	ite	eq
 8023fe8:	f004 040f 	andeq.w	r4, r4, #15
 8023fec:	1124      	asrne	r4, r4, #4
 8023fee:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8023ff2:	b2e4      	uxtb	r4, r4
 8023ff4:	3501      	adds	r5, #1
 8023ff6:	d469      	bmi.n	80240cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8023ff8:	45a9      	cmp	r9, r5
 8023ffa:	dd67      	ble.n	80240cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8023ffc:	f1bc 0f00 	cmp.w	ip, #0
 8024000:	d067      	beq.n	80240d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8024002:	2800      	cmp	r0, #0
 8024004:	db60      	blt.n	80240c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8024006:	4580      	cmp	r8, r0
 8024008:	dd5e      	ble.n	80240c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802400a:	eb03 090e 	add.w	r9, r3, lr
 802400e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024012:	f019 0f01 	tst.w	r9, #1
 8024016:	5d55      	ldrb	r5, [r2, r5]
 8024018:	bf0c      	ite	eq
 802401a:	f005 050f 	andeq.w	r5, r5, #15
 802401e:	112d      	asrne	r5, r5, #4
 8024020:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024024:	b2ed      	uxtb	r5, r5
 8024026:	3001      	adds	r0, #1
 8024028:	d456      	bmi.n	80240d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802402a:	4580      	cmp	r8, r0
 802402c:	dd54      	ble.n	80240d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802402e:	2f00      	cmp	r7, #0
 8024030:	d054      	beq.n	80240dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8024032:	3301      	adds	r3, #1
 8024034:	449e      	add	lr, r3
 8024036:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802403a:	f01e 0f01 	tst.w	lr, #1
 802403e:	5cd0      	ldrb	r0, [r2, r3]
 8024040:	bf0c      	ite	eq
 8024042:	f000 000f 	andeq.w	r0, r0, #15
 8024046:	1100      	asrne	r0, r0, #4
 8024048:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802404c:	b2c3      	uxtb	r3, r0
 802404e:	b2ba      	uxth	r2, r7
 8024050:	fa1f fc8c 	uxth.w	ip, ip
 8024054:	fb02 f00c 	mul.w	r0, r2, ip
 8024058:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802405c:	0112      	lsls	r2, r2, #4
 802405e:	fa1f fc8c 	uxth.w	ip, ip
 8024062:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8024066:	1a12      	subs	r2, r2, r0
 8024068:	eba7 070c 	sub.w	r7, r7, ip
 802406c:	b292      	uxth	r2, r2
 802406e:	b2bf      	uxth	r7, r7
 8024070:	4362      	muls	r2, r4
 8024072:	fb06 2207 	mla	r2, r6, r7, r2
 8024076:	fb0c 2505 	mla	r5, ip, r5, r2
 802407a:	fb00 5303 	mla	r3, r0, r3, r5
 802407e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024082:	b1b3      	cbz	r3, 80240b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024084:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8024088:	435a      	muls	r2, r3
 802408a:	1c53      	adds	r3, r2, #1
 802408c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024090:	4a2d      	ldr	r2, [pc, #180]	; (8024148 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8024092:	121b      	asrs	r3, r3, #8
 8024094:	6812      	ldr	r2, [r2, #0]
 8024096:	2bff      	cmp	r3, #255	; 0xff
 8024098:	ea4f 2612 	mov.w	r6, r2, lsr #8
 802409c:	d120      	bne.n	80240e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 802409e:	4b2b      	ldr	r3, [pc, #172]	; (802414c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80240a0:	0950      	lsrs	r0, r2, #5
 80240a2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80240a6:	4033      	ands	r3, r6
 80240a8:	4318      	orrs	r0, r3
 80240aa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80240ae:	4302      	orrs	r2, r0
 80240b0:	800a      	strh	r2, [r1, #0]
 80240b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80240b6:	2600      	movs	r6, #0
 80240b8:	e788      	b.n	8023fcc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80240ba:	2400      	movs	r4, #0
 80240bc:	4626      	mov	r6, r4
 80240be:	e799      	b.n	8023ff4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80240c0:	2400      	movs	r4, #0
 80240c2:	e797      	b.n	8023ff4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80240c4:	463c      	mov	r4, r7
 80240c6:	e795      	b.n	8023ff4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80240c8:	2500      	movs	r5, #0
 80240ca:	e7ac      	b.n	8024026 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 80240cc:	2300      	movs	r3, #0
 80240ce:	461d      	mov	r5, r3
 80240d0:	e7bd      	b.n	802404e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80240d2:	4663      	mov	r3, ip
 80240d4:	4665      	mov	r5, ip
 80240d6:	e7ba      	b.n	802404e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80240d8:	2300      	movs	r3, #0
 80240da:	e7b8      	b.n	802404e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80240dc:	463b      	mov	r3, r7
 80240de:	e7b6      	b.n	802404e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80240e0:	880d      	ldrh	r5, [r1, #0]
 80240e2:	b29f      	uxth	r7, r3
 80240e4:	122c      	asrs	r4, r5, #8
 80240e6:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80240ea:	43db      	mvns	r3, r3
 80240ec:	b2db      	uxtb	r3, r3
 80240ee:	fb10 f007 	smulbb	r0, r0, r7
 80240f2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80240f6:	fb04 0403 	mla	r4, r4, r3, r0
 80240fa:	b2f6      	uxtb	r6, r6
 80240fc:	10e8      	asrs	r0, r5, #3
 80240fe:	b2d2      	uxtb	r2, r2
 8024100:	00ed      	lsls	r5, r5, #3
 8024102:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024106:	fb12 f207 	smulbb	r2, r2, r7
 802410a:	fb16 f607 	smulbb	r6, r6, r7
 802410e:	b2ed      	uxtb	r5, r5
 8024110:	b2a4      	uxth	r4, r4
 8024112:	fb00 6603 	mla	r6, r0, r3, r6
 8024116:	fb05 2303 	mla	r3, r5, r3, r2
 802411a:	b29a      	uxth	r2, r3
 802411c:	1c63      	adds	r3, r4, #1
 802411e:	b2b0      	uxth	r0, r6
 8024120:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024124:	1c53      	adds	r3, r2, #1
 8024126:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802412a:	1c42      	adds	r2, r0, #1
 802412c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024130:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024134:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024138:	0940      	lsrs	r0, r0, #5
 802413a:	4323      	orrs	r3, r4
 802413c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024140:	4303      	orrs	r3, r0
 8024142:	800b      	strh	r3, [r1, #0]
 8024144:	e7b5      	b.n	80240b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024146:	bf00      	nop
 8024148:	200137cc 	.word	0x200137cc
 802414c:	00fff800 	.word	0x00fff800

08024150 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024150:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024154:	b097      	sub	sp, #92	; 0x5c
 8024156:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 802415a:	9214      	str	r2, [sp, #80]	; 0x50
 802415c:	9309      	str	r3, [sp, #36]	; 0x24
 802415e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024160:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8024164:	910d      	str	r1, [sp, #52]	; 0x34
 8024166:	930f      	str	r3, [sp, #60]	; 0x3c
 8024168:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 802416c:	9015      	str	r0, [sp, #84]	; 0x54
 802416e:	6850      	ldr	r0, [r2, #4]
 8024170:	6812      	ldr	r2, [r2, #0]
 8024172:	fb00 1303 	mla	r3, r0, r3, r1
 8024176:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802417a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802417c:	689b      	ldr	r3, [r3, #8]
 802417e:	3301      	adds	r3, #1
 8024180:	f023 0301 	bic.w	r3, r3, #1
 8024184:	930a      	str	r3, [sp, #40]	; 0x28
 8024186:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024188:	681f      	ldr	r7, [r3, #0]
 802418a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802418c:	2b00      	cmp	r3, #0
 802418e:	dc03      	bgt.n	8024198 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024190:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8024192:	2b00      	cmp	r3, #0
 8024194:	f340 8287 	ble.w	80246a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024198:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802419a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802419e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80241a2:	1e48      	subs	r0, r1, #1
 80241a4:	f102 3cff 	add.w	ip, r2, #4294967295
 80241a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80241aa:	2b00      	cmp	r3, #0
 80241ac:	f340 80c4 	ble.w	8024338 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80241b0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80241b4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80241b8:	d406      	bmi.n	80241c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80241ba:	4586      	cmp	lr, r0
 80241bc:	da04      	bge.n	80241c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80241be:	2b00      	cmp	r3, #0
 80241c0:	db02      	blt.n	80241c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80241c2:	4563      	cmp	r3, ip
 80241c4:	f2c0 80b9 	blt.w	802433a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80241c8:	f11e 0e01 	adds.w	lr, lr, #1
 80241cc:	f100 80aa 	bmi.w	8024324 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80241d0:	4571      	cmp	r1, lr
 80241d2:	f2c0 80a7 	blt.w	8024324 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80241d6:	3301      	adds	r3, #1
 80241d8:	f100 80a4 	bmi.w	8024324 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80241dc:	429a      	cmp	r2, r3
 80241de:	f2c0 80a1 	blt.w	8024324 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80241e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80241e4:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 80241e8:	930e      	str	r3, [sp, #56]	; 0x38
 80241ea:	46c8      	mov	r8, r9
 80241ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80241ee:	2b00      	cmp	r3, #0
 80241f0:	f340 80c3 	ble.w	802437a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80241f4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80241f6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80241fa:	1423      	asrs	r3, r4, #16
 80241fc:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024200:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024204:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024208:	f100 814d 	bmi.w	80244a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802420c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024210:	455b      	cmp	r3, fp
 8024212:	f280 8148 	bge.w	80244a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024216:	2800      	cmp	r0, #0
 8024218:	f2c0 8145 	blt.w	80244a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802421c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024220:	4558      	cmp	r0, fp
 8024222:	f280 8140 	bge.w	80244a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024226:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024228:	fb00 3305 	mla	r3, r0, r5, r3
 802422c:	0858      	lsrs	r0, r3, #1
 802422e:	07dd      	lsls	r5, r3, #31
 8024230:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024234:	bf54      	ite	pl
 8024236:	f00c 0c0f 	andpl.w	ip, ip, #15
 802423a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802423e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024242:	fa5f fc8c 	uxtb.w	ip, ip
 8024246:	2a00      	cmp	r2, #0
 8024248:	f000 80db 	beq.w	8024402 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 802424c:	1c58      	adds	r0, r3, #1
 802424e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024252:	07c0      	lsls	r0, r0, #31
 8024254:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024258:	bf54      	ite	pl
 802425a:	f00e 0e0f 	andpl.w	lr, lr, #15
 802425e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024262:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024266:	fa5f f08e 	uxtb.w	r0, lr
 802426a:	9010      	str	r0, [sp, #64]	; 0x40
 802426c:	b1c9      	cbz	r1, 80242a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802426e:	4453      	add	r3, sl
 8024270:	0858      	lsrs	r0, r3, #1
 8024272:	07dd      	lsls	r5, r3, #31
 8024274:	5c38      	ldrb	r0, [r7, r0]
 8024276:	bf54      	ite	pl
 8024278:	f000 000f 	andpl.w	r0, r0, #15
 802427c:	1100      	asrmi	r0, r0, #4
 802427e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024282:	3301      	adds	r3, #1
 8024284:	b2c0      	uxtb	r0, r0
 8024286:	900b      	str	r0, [sp, #44]	; 0x2c
 8024288:	0858      	lsrs	r0, r3, #1
 802428a:	07dd      	lsls	r5, r3, #31
 802428c:	f817 e000 	ldrb.w	lr, [r7, r0]
 8024290:	bf54      	ite	pl
 8024292:	f00e 030f 	andpl.w	r3, lr, #15
 8024296:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802429a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802429e:	b2db      	uxtb	r3, r3
 80242a0:	9311      	str	r3, [sp, #68]	; 0x44
 80242a2:	b292      	uxth	r2, r2
 80242a4:	b289      	uxth	r1, r1
 80242a6:	fb02 f301 	mul.w	r3, r2, r1
 80242aa:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80242ae:	0112      	lsls	r2, r2, #4
 80242b0:	b289      	uxth	r1, r1
 80242b2:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80242b6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80242b8:	1ad2      	subs	r2, r2, r3
 80242ba:	1a40      	subs	r0, r0, r1
 80242bc:	b292      	uxth	r2, r2
 80242be:	436a      	muls	r2, r5
 80242c0:	b280      	uxth	r0, r0
 80242c2:	fb0c 2c00 	mla	ip, ip, r0, r2
 80242c6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80242c8:	fb01 c102 	mla	r1, r1, r2, ip
 80242cc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80242ce:	fb03 1302 	mla	r3, r3, r2, r1
 80242d2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80242d6:	b1db      	cbz	r3, 8024310 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80242d8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80242da:	4353      	muls	r3, r2
 80242dc:	1c5a      	adds	r2, r3, #1
 80242de:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80242e2:	4ac6      	ldr	r2, [pc, #792]	; (80245fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80242e4:	121b      	asrs	r3, r3, #8
 80242e6:	6812      	ldr	r2, [r2, #0]
 80242e8:	2bff      	cmp	r3, #255	; 0xff
 80242ea:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80242ee:	f040 8099 	bne.w	8024424 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 80242f2:	0953      	lsrs	r3, r2, #5
 80242f4:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80242f8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80242fc:	f02c 0c07 	bic.w	ip, ip, #7
 8024300:	ea43 0c0c 	orr.w	ip, r3, ip
 8024304:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024308:	ea4c 0202 	orr.w	r2, ip, r2
 802430c:	f8a8 2000 	strh.w	r2, [r8]
 8024310:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024312:	441c      	add	r4, r3
 8024314:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024316:	441e      	add	r6, r3
 8024318:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802431a:	3b01      	subs	r3, #1
 802431c:	f108 0802 	add.w	r8, r8, #2
 8024320:	930e      	str	r3, [sp, #56]	; 0x38
 8024322:	e763      	b.n	80241ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8024324:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024326:	441c      	add	r4, r3
 8024328:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802432a:	441e      	add	r6, r3
 802432c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802432e:	3b01      	subs	r3, #1
 8024330:	9309      	str	r3, [sp, #36]	; 0x24
 8024332:	f109 0902 	add.w	r9, r9, #2
 8024336:	e737      	b.n	80241a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024338:	d024      	beq.n	8024384 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802433a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802433c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 802433e:	3b01      	subs	r3, #1
 8024340:	fb00 4003 	mla	r0, r0, r3, r4
 8024344:	1400      	asrs	r0, r0, #16
 8024346:	f53f af4c 	bmi.w	80241e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802434a:	3901      	subs	r1, #1
 802434c:	4288      	cmp	r0, r1
 802434e:	f6bf af48 	bge.w	80241e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024352:	9924      	ldr	r1, [sp, #144]	; 0x90
 8024354:	fb01 6303 	mla	r3, r1, r3, r6
 8024358:	141b      	asrs	r3, r3, #16
 802435a:	f53f af42 	bmi.w	80241e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802435e:	3a01      	subs	r2, #1
 8024360:	4293      	cmp	r3, r2
 8024362:	f6bf af3e 	bge.w	80241e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024366:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 802436a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802436e:	930e      	str	r3, [sp, #56]	; 0x38
 8024370:	46c8      	mov	r8, r9
 8024372:	f1bb 0f00 	cmp.w	fp, #0
 8024376:	f300 80b7 	bgt.w	80244e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 802437a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802437c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024380:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024384:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024386:	2b00      	cmp	r3, #0
 8024388:	f340 818d 	ble.w	80246a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802438c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024390:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024394:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024398:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802439a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802439e:	ee31 1a05 	vadd.f32	s2, s2, s10
 80243a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80243a6:	eef0 6a62 	vmov.f32	s13, s5
 80243aa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80243ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80243b2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80243b6:	ee16 4a90 	vmov	r4, s13
 80243ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80243be:	eef0 6a43 	vmov.f32	s13, s6
 80243c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80243c6:	ee12 2a90 	vmov	r2, s5
 80243ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80243ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80243d2:	ee13 2a10 	vmov	r2, s6
 80243d6:	9323      	str	r3, [sp, #140]	; 0x8c
 80243d8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80243da:	fb92 f3f3 	sdiv	r3, r2, r3
 80243de:	9324      	str	r3, [sp, #144]	; 0x90
 80243e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80243e2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80243e4:	3b01      	subs	r3, #1
 80243e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80243ea:	930d      	str	r3, [sp, #52]	; 0x34
 80243ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80243ee:	bf08      	it	eq
 80243f0:	4613      	moveq	r3, r2
 80243f2:	ee16 6a90 	vmov	r6, s13
 80243f6:	9309      	str	r3, [sp, #36]	; 0x24
 80243f8:	eeb0 3a67 	vmov.f32	s6, s15
 80243fc:	eef0 2a47 	vmov.f32	s5, s14
 8024400:	e6c3      	b.n	802418a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024402:	2900      	cmp	r1, #0
 8024404:	f43f af4d 	beq.w	80242a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024408:	eb0a 0003 	add.w	r0, sl, r3
 802440c:	0843      	lsrs	r3, r0, #1
 802440e:	07c0      	lsls	r0, r0, #31
 8024410:	5cfb      	ldrb	r3, [r7, r3]
 8024412:	bf54      	ite	pl
 8024414:	f003 030f 	andpl.w	r3, r3, #15
 8024418:	111b      	asrmi	r3, r3, #4
 802441a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802441e:	b2db      	uxtb	r3, r3
 8024420:	930b      	str	r3, [sp, #44]	; 0x2c
 8024422:	e73e      	b.n	80242a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024424:	f8b8 e000 	ldrh.w	lr, [r8]
 8024428:	fa1f fb83 	uxth.w	fp, r3
 802442c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024430:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024434:	43db      	mvns	r3, r3
 8024436:	b2db      	uxtb	r3, r3
 8024438:	fb11 f10b 	smulbb	r1, r1, fp
 802443c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024440:	fb00 1003 	mla	r0, r0, r3, r1
 8024444:	fa5f fc8c 	uxtb.w	ip, ip
 8024448:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802444c:	b2d2      	uxtb	r2, r2
 802444e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024452:	b280      	uxth	r0, r0
 8024454:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024458:	fb1c fc0b 	smulbb	ip, ip, fp
 802445c:	fa5f fe8e 	uxtb.w	lr, lr
 8024460:	fb12 fb0b 	smulbb	fp, r2, fp
 8024464:	fb01 cc03 	mla	ip, r1, r3, ip
 8024468:	fb0e bb03 	mla	fp, lr, r3, fp
 802446c:	1c43      	adds	r3, r0, #1
 802446e:	fa1f fc8c 	uxth.w	ip, ip
 8024472:	fa1f fb8b 	uxth.w	fp, fp
 8024476:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802447a:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 802447e:	f10c 0101 	add.w	r1, ip, #1
 8024482:	f10b 0001 	add.w	r0, fp, #1
 8024486:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802448a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802448e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8024492:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024496:	4318      	orrs	r0, r3
 8024498:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802449c:	ea40 000c 	orr.w	r0, r0, ip
 80244a0:	f8a8 0000 	strh.w	r0, [r8]
 80244a4:	e734      	b.n	8024310 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80244a6:	f113 0b01 	adds.w	fp, r3, #1
 80244aa:	f53f af31 	bmi.w	8024310 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80244ae:	45dc      	cmp	ip, fp
 80244b0:	f6ff af2e 	blt.w	8024310 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80244b4:	f110 0b01 	adds.w	fp, r0, #1
 80244b8:	f53f af2a 	bmi.w	8024310 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80244bc:	45de      	cmp	lr, fp
 80244be:	f6ff af27 	blt.w	8024310 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80244c2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80244c4:	9302      	str	r3, [sp, #8]
 80244c6:	fa0f f38e 	sxth.w	r3, lr
 80244ca:	9301      	str	r3, [sp, #4]
 80244cc:	fa0f f38c 	sxth.w	r3, ip
 80244d0:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80244d4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80244d8:	9300      	str	r3, [sp, #0]
 80244da:	463a      	mov	r2, r7
 80244dc:	4653      	mov	r3, sl
 80244de:	4641      	mov	r1, r8
 80244e0:	9815      	ldr	r0, [sp, #84]	; 0x54
 80244e2:	f7ff fd4d 	bl	8023f80 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80244e6:	e713      	b.n	8024310 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80244e8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80244ea:	1422      	asrs	r2, r4, #16
 80244ec:	1433      	asrs	r3, r6, #16
 80244ee:	fb05 2303 	mla	r3, r5, r3, r2
 80244f2:	085a      	lsrs	r2, r3, #1
 80244f4:	07dd      	lsls	r5, r3, #31
 80244f6:	5cba      	ldrb	r2, [r7, r2]
 80244f8:	bf54      	ite	pl
 80244fa:	f002 020f 	andpl.w	r2, r2, #15
 80244fe:	1112      	asrmi	r2, r2, #4
 8024500:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024504:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024508:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802450c:	b2d2      	uxtb	r2, r2
 802450e:	2900      	cmp	r1, #0
 8024510:	d076      	beq.n	8024600 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8024512:	f103 0e01 	add.w	lr, r3, #1
 8024516:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802451a:	f01e 0f01 	tst.w	lr, #1
 802451e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024522:	bf0c      	ite	eq
 8024524:	f00c 0c0f 	andeq.w	ip, ip, #15
 8024528:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 802452c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024530:	fa5f f58c 	uxtb.w	r5, ip
 8024534:	9512      	str	r5, [sp, #72]	; 0x48
 8024536:	b300      	cbz	r0, 802457a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024538:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802453a:	442b      	add	r3, r5
 802453c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024540:	07dd      	lsls	r5, r3, #31
 8024542:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024546:	bf54      	ite	pl
 8024548:	f00c 0c0f 	andpl.w	ip, ip, #15
 802454c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024550:	3301      	adds	r3, #1
 8024552:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024556:	fa5f f58c 	uxtb.w	r5, ip
 802455a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802455e:	950c      	str	r5, [sp, #48]	; 0x30
 8024560:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024564:	07dd      	lsls	r5, r3, #31
 8024566:	bf54      	ite	pl
 8024568:	f00c 0c0f 	andpl.w	ip, ip, #15
 802456c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024570:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024574:	fa5f f38c 	uxtb.w	r3, ip
 8024578:	9313      	str	r3, [sp, #76]	; 0x4c
 802457a:	b289      	uxth	r1, r1
 802457c:	b280      	uxth	r0, r0
 802457e:	fb01 f300 	mul.w	r3, r1, r0
 8024582:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8024586:	0109      	lsls	r1, r1, #4
 8024588:	b280      	uxth	r0, r0
 802458a:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 802458e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024590:	1ac9      	subs	r1, r1, r3
 8024592:	ebac 0c00 	sub.w	ip, ip, r0
 8024596:	b289      	uxth	r1, r1
 8024598:	4369      	muls	r1, r5
 802459a:	fa1f fc8c 	uxth.w	ip, ip
 802459e:	fb02 120c 	mla	r2, r2, ip, r1
 80245a2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80245a4:	fb00 2001 	mla	r0, r0, r1, r2
 80245a8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80245aa:	fb03 0302 	mla	r3, r3, r2, r0
 80245ae:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80245b2:	b1d3      	cbz	r3, 80245ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80245b4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80245b6:	4353      	muls	r3, r2
 80245b8:	1c5a      	adds	r2, r3, #1
 80245ba:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80245be:	4a0f      	ldr	r2, [pc, #60]	; (80245fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80245c0:	121b      	asrs	r3, r3, #8
 80245c2:	6812      	ldr	r2, [r2, #0]
 80245c4:	2bff      	cmp	r3, #255	; 0xff
 80245c6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80245ca:	d12d      	bne.n	8024628 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80245cc:	0953      	lsrs	r3, r2, #5
 80245ce:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80245d2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80245d6:	f02c 0c07 	bic.w	ip, ip, #7
 80245da:	ea43 0c0c 	orr.w	ip, r3, ip
 80245de:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80245e2:	ea4c 0202 	orr.w	r2, ip, r2
 80245e6:	f8a8 2000 	strh.w	r2, [r8]
 80245ea:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80245ec:	441c      	add	r4, r3
 80245ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80245f0:	f108 0802 	add.w	r8, r8, #2
 80245f4:	441e      	add	r6, r3
 80245f6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80245fa:	e6ba      	b.n	8024372 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80245fc:	200137cc 	.word	0x200137cc
 8024600:	2800      	cmp	r0, #0
 8024602:	d0ba      	beq.n	802457a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024604:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024606:	442b      	add	r3, r5
 8024608:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802460c:	07db      	lsls	r3, r3, #31
 802460e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024612:	bf54      	ite	pl
 8024614:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024618:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802461c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024620:	fa5f f38c 	uxtb.w	r3, ip
 8024624:	930c      	str	r3, [sp, #48]	; 0x30
 8024626:	e7a8      	b.n	802457a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024628:	f8b8 e000 	ldrh.w	lr, [r8]
 802462c:	fa1f fa83 	uxth.w	sl, r3
 8024630:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024634:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024638:	43db      	mvns	r3, r3
 802463a:	b2db      	uxtb	r3, r3
 802463c:	fb11 f10a 	smulbb	r1, r1, sl
 8024640:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024644:	fb00 1003 	mla	r0, r0, r3, r1
 8024648:	b2d2      	uxtb	r2, r2
 802464a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802464e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024652:	fa5f fe8e 	uxtb.w	lr, lr
 8024656:	fb12 f20a 	smulbb	r2, r2, sl
 802465a:	fb0e 2203 	mla	r2, lr, r3, r2
 802465e:	fa5f fc8c 	uxtb.w	ip, ip
 8024662:	b280      	uxth	r0, r0
 8024664:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024668:	b292      	uxth	r2, r2
 802466a:	fb1c fc0a 	smulbb	ip, ip, sl
 802466e:	fb01 cc03 	mla	ip, r1, r3, ip
 8024672:	1c43      	adds	r3, r0, #1
 8024674:	1c51      	adds	r1, r2, #1
 8024676:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802467a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 802467e:	fa1f fc8c 	uxth.w	ip, ip
 8024682:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024686:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 802468a:	4308      	orrs	r0, r1
 802468c:	f10c 0101 	add.w	r1, ip, #1
 8024690:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024694:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024698:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802469c:	ea40 000c 	orr.w	r0, r0, ip
 80246a0:	f8a8 0000 	strh.w	r0, [r8]
 80246a4:	e7a1      	b.n	80245ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80246a6:	b017      	add	sp, #92	; 0x5c
 80246a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080246ac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80246ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80246b0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80246b4:	2d00      	cmp	r5, #0
 80246b6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80246ba:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80246be:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80246c2:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80246c6:	fb05 0e03 	mla	lr, r5, r3, r0
 80246ca:	f2c0 80b0 	blt.w	802482e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80246ce:	45a9      	cmp	r9, r5
 80246d0:	f340 80ad 	ble.w	802482e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80246d4:	2800      	cmp	r0, #0
 80246d6:	f2c0 80a8 	blt.w	802482a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80246da:	4580      	cmp	r8, r0
 80246dc:	f340 80a5 	ble.w	802482a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80246e0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80246e4:	f01e 0f01 	tst.w	lr, #1
 80246e8:	5d16      	ldrb	r6, [r2, r4]
 80246ea:	bf0c      	ite	eq
 80246ec:	f006 060f 	andeq.w	r6, r6, #15
 80246f0:	1136      	asrne	r6, r6, #4
 80246f2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80246f6:	b2f6      	uxtb	r6, r6
 80246f8:	1c44      	adds	r4, r0, #1
 80246fa:	f100 809b 	bmi.w	8024834 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80246fe:	45a0      	cmp	r8, r4
 8024700:	f340 8098 	ble.w	8024834 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024704:	2f00      	cmp	r7, #0
 8024706:	f000 8097 	beq.w	8024838 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 802470a:	f10e 0a01 	add.w	sl, lr, #1
 802470e:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024712:	f01a 0f01 	tst.w	sl, #1
 8024716:	5d14      	ldrb	r4, [r2, r4]
 8024718:	bf0c      	ite	eq
 802471a:	f004 040f 	andeq.w	r4, r4, #15
 802471e:	1124      	asrne	r4, r4, #4
 8024720:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024724:	b2e4      	uxtb	r4, r4
 8024726:	3501      	adds	r5, #1
 8024728:	f100 808a 	bmi.w	8024840 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 802472c:	45a9      	cmp	r9, r5
 802472e:	f340 8087 	ble.w	8024840 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024732:	f1bc 0f00 	cmp.w	ip, #0
 8024736:	f000 8086 	beq.w	8024846 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 802473a:	2800      	cmp	r0, #0
 802473c:	db7e      	blt.n	802483c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802473e:	4580      	cmp	r8, r0
 8024740:	dd7c      	ble.n	802483c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024742:	eb03 090e 	add.w	r9, r3, lr
 8024746:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802474a:	f019 0f01 	tst.w	r9, #1
 802474e:	5d55      	ldrb	r5, [r2, r5]
 8024750:	bf0c      	ite	eq
 8024752:	f005 050f 	andeq.w	r5, r5, #15
 8024756:	112d      	asrne	r5, r5, #4
 8024758:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802475c:	b2ed      	uxtb	r5, r5
 802475e:	3001      	adds	r0, #1
 8024760:	d474      	bmi.n	802484c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024762:	4580      	cmp	r8, r0
 8024764:	dd72      	ble.n	802484c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024766:	2f00      	cmp	r7, #0
 8024768:	d072      	beq.n	8024850 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802476a:	3301      	adds	r3, #1
 802476c:	449e      	add	lr, r3
 802476e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024772:	f01e 0f01 	tst.w	lr, #1
 8024776:	5cd0      	ldrb	r0, [r2, r3]
 8024778:	bf0c      	ite	eq
 802477a:	f000 000f 	andeq.w	r0, r0, #15
 802477e:	1100      	asrne	r0, r0, #4
 8024780:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024784:	b2c3      	uxtb	r3, r0
 8024786:	b2ba      	uxth	r2, r7
 8024788:	fa1f fc8c 	uxth.w	ip, ip
 802478c:	fb02 f00c 	mul.w	r0, r2, ip
 8024790:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024794:	0112      	lsls	r2, r2, #4
 8024796:	fa1f fc8c 	uxth.w	ip, ip
 802479a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802479e:	1a12      	subs	r2, r2, r0
 80247a0:	eba7 070c 	sub.w	r7, r7, ip
 80247a4:	b292      	uxth	r2, r2
 80247a6:	b2bf      	uxth	r7, r7
 80247a8:	4362      	muls	r2, r4
 80247aa:	fb06 2207 	mla	r2, r6, r7, r2
 80247ae:	fb0c 2505 	mla	r5, ip, r5, r2
 80247b2:	fb00 5303 	mla	r3, r0, r3, r5
 80247b6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80247ba:	b3a3      	cbz	r3, 8024826 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 80247bc:	4a25      	ldr	r2, [pc, #148]	; (8024854 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 80247be:	880e      	ldrh	r6, [r1, #0]
 80247c0:	6815      	ldr	r5, [r2, #0]
 80247c2:	1234      	asrs	r4, r6, #8
 80247c4:	b29a      	uxth	r2, r3
 80247c6:	f3c5 4007 	ubfx	r0, r5, #16, #8
 80247ca:	43db      	mvns	r3, r3
 80247cc:	b2db      	uxtb	r3, r3
 80247ce:	fb10 f002 	smulbb	r0, r0, r2
 80247d2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80247d6:	fb04 0403 	mla	r4, r4, r3, r0
 80247da:	f3c5 2707 	ubfx	r7, r5, #8, #8
 80247de:	10f0      	asrs	r0, r6, #3
 80247e0:	b2ed      	uxtb	r5, r5
 80247e2:	00f6      	lsls	r6, r6, #3
 80247e4:	fb17 f702 	smulbb	r7, r7, r2
 80247e8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80247ec:	fb15 f202 	smulbb	r2, r5, r2
 80247f0:	b2f6      	uxtb	r6, r6
 80247f2:	b2a4      	uxth	r4, r4
 80247f4:	fb00 7003 	mla	r0, r0, r3, r7
 80247f8:	fb06 2303 	mla	r3, r6, r3, r2
 80247fc:	b29a      	uxth	r2, r3
 80247fe:	1c63      	adds	r3, r4, #1
 8024800:	b280      	uxth	r0, r0
 8024802:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024806:	1c53      	adds	r3, r2, #1
 8024808:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802480c:	1c42      	adds	r2, r0, #1
 802480e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024812:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024816:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802481a:	0940      	lsrs	r0, r0, #5
 802481c:	4323      	orrs	r3, r4
 802481e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024822:	4303      	orrs	r3, r0
 8024824:	800b      	strh	r3, [r1, #0]
 8024826:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802482a:	2600      	movs	r6, #0
 802482c:	e764      	b.n	80246f8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 802482e:	2400      	movs	r4, #0
 8024830:	4626      	mov	r6, r4
 8024832:	e778      	b.n	8024726 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024834:	2400      	movs	r4, #0
 8024836:	e776      	b.n	8024726 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024838:	463c      	mov	r4, r7
 802483a:	e774      	b.n	8024726 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802483c:	2500      	movs	r5, #0
 802483e:	e78e      	b.n	802475e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8024840:	2300      	movs	r3, #0
 8024842:	461d      	mov	r5, r3
 8024844:	e79f      	b.n	8024786 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024846:	4663      	mov	r3, ip
 8024848:	4665      	mov	r5, ip
 802484a:	e79c      	b.n	8024786 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802484c:	2300      	movs	r3, #0
 802484e:	e79a      	b.n	8024786 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024850:	463b      	mov	r3, r7
 8024852:	e798      	b.n	8024786 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024854:	200137cc 	.word	0x200137cc

08024858 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024858:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802485c:	b093      	sub	sp, #76	; 0x4c
 802485e:	461d      	mov	r5, r3
 8024860:	920c      	str	r2, [sp, #48]	; 0x30
 8024862:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8024864:	9107      	str	r1, [sp, #28]
 8024866:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802486a:	9011      	str	r0, [sp, #68]	; 0x44
 802486c:	6850      	ldr	r0, [r2, #4]
 802486e:	6812      	ldr	r2, [r2, #0]
 8024870:	fb00 1303 	mla	r3, r0, r3, r1
 8024874:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024878:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802487a:	689b      	ldr	r3, [r3, #8]
 802487c:	3301      	adds	r3, #1
 802487e:	f023 0301 	bic.w	r3, r3, #1
 8024882:	9306      	str	r3, [sp, #24]
 8024884:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024886:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802488a:	681f      	ldr	r7, [r3, #0]
 802488c:	9b07      	ldr	r3, [sp, #28]
 802488e:	2b00      	cmp	r3, #0
 8024890:	dc03      	bgt.n	802489a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8024892:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024894:	2b00      	cmp	r3, #0
 8024896:	f340 8267 	ble.w	8024d68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802489a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802489c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80248a0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80248a4:	1e48      	subs	r0, r1, #1
 80248a6:	f102 3cff 	add.w	ip, r2, #4294967295
 80248aa:	2d00      	cmp	r5, #0
 80248ac:	f340 80b8 	ble.w	8024a20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80248b0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80248b4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80248b8:	d406      	bmi.n	80248c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80248ba:	4586      	cmp	lr, r0
 80248bc:	da04      	bge.n	80248c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80248be:	2b00      	cmp	r3, #0
 80248c0:	db02      	blt.n	80248c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80248c2:	4563      	cmp	r3, ip
 80248c4:	f2c0 80ad 	blt.w	8024a22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 80248c8:	f11e 0e01 	adds.w	lr, lr, #1
 80248cc:	f100 80a0 	bmi.w	8024a10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80248d0:	4571      	cmp	r1, lr
 80248d2:	f2c0 809d 	blt.w	8024a10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80248d6:	3301      	adds	r3, #1
 80248d8:	f100 809a 	bmi.w	8024a10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80248dc:	429a      	cmp	r2, r3
 80248de:	f2c0 8097 	blt.w	8024a10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80248e2:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 80248e6:	9509      	str	r5, [sp, #36]	; 0x24
 80248e8:	46c8      	mov	r8, r9
 80248ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80248ec:	2b00      	cmp	r3, #0
 80248ee:	f340 80b6 	ble.w	8024a5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80248f2:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80248f6:	9308      	str	r3, [sp, #32]
 80248f8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80248fa:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80248fe:	1423      	asrs	r3, r4, #16
 8024900:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024904:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024908:	f100 813e 	bmi.w	8024b88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802490c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024910:	455b      	cmp	r3, fp
 8024912:	f280 8139 	bge.w	8024b88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024916:	2800      	cmp	r0, #0
 8024918:	f2c0 8136 	blt.w	8024b88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802491c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024920:	4558      	cmp	r0, fp
 8024922:	f280 8131 	bge.w	8024b88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024926:	9a06      	ldr	r2, [sp, #24]
 8024928:	fb00 3302 	mla	r3, r0, r2, r3
 802492c:	0858      	lsrs	r0, r3, #1
 802492e:	07da      	lsls	r2, r3, #31
 8024930:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024934:	9a08      	ldr	r2, [sp, #32]
 8024936:	bf54      	ite	pl
 8024938:	f00c 0c0f 	andpl.w	ip, ip, #15
 802493c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024940:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024944:	fa5f fc8c 	uxtb.w	ip, ip
 8024948:	2a00      	cmp	r2, #0
 802494a:	f000 80cb 	beq.w	8024ae4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802494e:	1c58      	adds	r0, r3, #1
 8024950:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024954:	07c0      	lsls	r0, r0, #31
 8024956:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802495a:	bf54      	ite	pl
 802495c:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024960:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024964:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024968:	fa5f fe8e 	uxtb.w	lr, lr
 802496c:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8024970:	b1b9      	cbz	r1, 80249a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024972:	4453      	add	r3, sl
 8024974:	0858      	lsrs	r0, r3, #1
 8024976:	07da      	lsls	r2, r3, #31
 8024978:	5c38      	ldrb	r0, [r7, r0]
 802497a:	bf54      	ite	pl
 802497c:	f000 000f 	andpl.w	r0, r0, #15
 8024980:	1100      	asrmi	r0, r0, #4
 8024982:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024986:	b2c0      	uxtb	r0, r0
 8024988:	900a      	str	r0, [sp, #40]	; 0x28
 802498a:	1c58      	adds	r0, r3, #1
 802498c:	0843      	lsrs	r3, r0, #1
 802498e:	07c2      	lsls	r2, r0, #31
 8024990:	5cfb      	ldrb	r3, [r7, r3]
 8024992:	bf54      	ite	pl
 8024994:	f003 030f 	andpl.w	r3, r3, #15
 8024998:	111b      	asrmi	r3, r3, #4
 802499a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802499e:	b2db      	uxtb	r3, r3
 80249a0:	930e      	str	r3, [sp, #56]	; 0x38
 80249a2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80249a6:	b289      	uxth	r1, r1
 80249a8:	fb02 f301 	mul.w	r3, r2, r1
 80249ac:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80249b0:	0112      	lsls	r2, r2, #4
 80249b2:	b289      	uxth	r1, r1
 80249b4:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80249b8:	1a40      	subs	r0, r0, r1
 80249ba:	fa1f fe80 	uxth.w	lr, r0
 80249be:	1ad2      	subs	r2, r2, r3
 80249c0:	980d      	ldr	r0, [sp, #52]	; 0x34
 80249c2:	b292      	uxth	r2, r2
 80249c4:	4342      	muls	r2, r0
 80249c6:	fb0c 2c0e 	mla	ip, ip, lr, r2
 80249ca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80249cc:	fb01 c102 	mla	r1, r1, r2, ip
 80249d0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80249d2:	fb03 1302 	mla	r3, r3, r2, r1
 80249d6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80249da:	2bff      	cmp	r3, #255	; 0xff
 80249dc:	f040 8093 	bne.w	8024b06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80249e0:	4bbe      	ldr	r3, [pc, #760]	; (8024cdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80249e2:	681a      	ldr	r2, [r3, #0]
 80249e4:	4bbe      	ldr	r3, [pc, #760]	; (8024ce0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80249e6:	0951      	lsrs	r1, r2, #5
 80249e8:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80249ec:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80249f0:	430b      	orrs	r3, r1
 80249f2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80249f6:	4313      	orrs	r3, r2
 80249f8:	f8a8 3000 	strh.w	r3, [r8]
 80249fc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80249fe:	441c      	add	r4, r3
 8024a00:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024a02:	441e      	add	r6, r3
 8024a04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024a06:	3b01      	subs	r3, #1
 8024a08:	f108 0802 	add.w	r8, r8, #2
 8024a0c:	9309      	str	r3, [sp, #36]	; 0x24
 8024a0e:	e76c      	b.n	80248ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024a10:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024a12:	441c      	add	r4, r3
 8024a14:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024a16:	3d01      	subs	r5, #1
 8024a18:	441e      	add	r6, r3
 8024a1a:	f109 0902 	add.w	r9, r9, #2
 8024a1e:	e744      	b.n	80248aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8024a20:	d021      	beq.n	8024a66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8024a22:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8024a24:	1e6b      	subs	r3, r5, #1
 8024a26:	fb00 4003 	mla	r0, r0, r3, r4
 8024a2a:	1400      	asrs	r0, r0, #16
 8024a2c:	f53f af59 	bmi.w	80248e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024a30:	3901      	subs	r1, #1
 8024a32:	4288      	cmp	r0, r1
 8024a34:	f6bf af55 	bge.w	80248e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024a38:	9920      	ldr	r1, [sp, #128]	; 0x80
 8024a3a:	fb01 6303 	mla	r3, r1, r3, r6
 8024a3e:	141b      	asrs	r3, r3, #16
 8024a40:	f53f af4f 	bmi.w	80248e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024a44:	3a01      	subs	r2, #1
 8024a46:	4293      	cmp	r3, r2
 8024a48:	f6bf af4b 	bge.w	80248e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024a4c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8024a50:	9308      	str	r3, [sp, #32]
 8024a52:	46a8      	mov	r8, r5
 8024a54:	46ce      	mov	lr, r9
 8024a56:	f1b8 0f00 	cmp.w	r8, #0
 8024a5a:	f300 80b5 	bgt.w	8024bc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8024a5e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024a62:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024a66:	9b07      	ldr	r3, [sp, #28]
 8024a68:	2b00      	cmp	r3, #0
 8024a6a:	f340 817d 	ble.w	8024d68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8024a6e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024a72:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024a76:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024a7a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024a7c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024a80:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024a84:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024a88:	eef0 6a62 	vmov.f32	s13, s5
 8024a8c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024a90:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024a94:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024a98:	ee16 4a90 	vmov	r4, s13
 8024a9c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024aa0:	eef0 6a43 	vmov.f32	s13, s6
 8024aa4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024aa8:	ee12 2a90 	vmov	r2, s5
 8024aac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024ab0:	fb92 f3f3 	sdiv	r3, r2, r3
 8024ab4:	ee13 2a10 	vmov	r2, s6
 8024ab8:	931f      	str	r3, [sp, #124]	; 0x7c
 8024aba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024abc:	fb92 f3f3 	sdiv	r3, r2, r3
 8024ac0:	9320      	str	r3, [sp, #128]	; 0x80
 8024ac2:	9b07      	ldr	r3, [sp, #28]
 8024ac4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024ac6:	3b01      	subs	r3, #1
 8024ac8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024acc:	9307      	str	r3, [sp, #28]
 8024ace:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024ad0:	ee16 6a90 	vmov	r6, s13
 8024ad4:	bf14      	ite	ne
 8024ad6:	461d      	movne	r5, r3
 8024ad8:	4615      	moveq	r5, r2
 8024ada:	eeb0 3a67 	vmov.f32	s6, s15
 8024ade:	eef0 2a47 	vmov.f32	s5, s14
 8024ae2:	e6d3      	b.n	802488c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8024ae4:	2900      	cmp	r1, #0
 8024ae6:	f43f af5c 	beq.w	80249a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024aea:	eb0a 0003 	add.w	r0, sl, r3
 8024aee:	0843      	lsrs	r3, r0, #1
 8024af0:	07c0      	lsls	r0, r0, #31
 8024af2:	5cfb      	ldrb	r3, [r7, r3]
 8024af4:	bf54      	ite	pl
 8024af6:	f003 030f 	andpl.w	r3, r3, #15
 8024afa:	111b      	asrmi	r3, r3, #4
 8024afc:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024b00:	b2db      	uxtb	r3, r3
 8024b02:	930a      	str	r3, [sp, #40]	; 0x28
 8024b04:	e74d      	b.n	80249a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024b06:	2b00      	cmp	r3, #0
 8024b08:	f43f af78 	beq.w	80249fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024b0c:	4a73      	ldr	r2, [pc, #460]	; (8024cdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024b0e:	f8b8 c000 	ldrh.w	ip, [r8]
 8024b12:	6810      	ldr	r0, [r2, #0]
 8024b14:	fa1f fe83 	uxth.w	lr, r3
 8024b18:	ea4f 212c 	mov.w	r1, ip, asr #8
 8024b1c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8024b20:	43db      	mvns	r3, r3
 8024b22:	b2db      	uxtb	r3, r3
 8024b24:	fb12 f20e 	smulbb	r2, r2, lr
 8024b28:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024b2c:	fb01 2103 	mla	r1, r1, r3, r2
 8024b30:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8024b34:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8024b38:	b2c0      	uxtb	r0, r0
 8024b3a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8024b3e:	fb1b fb0e 	smulbb	fp, fp, lr
 8024b42:	b289      	uxth	r1, r1
 8024b44:	fb10 fe0e 	smulbb	lr, r0, lr
 8024b48:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024b4c:	fa5f fc8c 	uxtb.w	ip, ip
 8024b50:	fb02 b203 	mla	r2, r2, r3, fp
 8024b54:	1c48      	adds	r0, r1, #1
 8024b56:	fb0c e303 	mla	r3, ip, r3, lr
 8024b5a:	b292      	uxth	r2, r2
 8024b5c:	b29b      	uxth	r3, r3
 8024b5e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8024b62:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8024b66:	f102 0b01 	add.w	fp, r2, #1
 8024b6a:	1c59      	adds	r1, r3, #1
 8024b6c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8024b70:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8024b74:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024b78:	0952      	lsrs	r2, r2, #5
 8024b7a:	4301      	orrs	r1, r0
 8024b7c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024b80:	4311      	orrs	r1, r2
 8024b82:	f8a8 1000 	strh.w	r1, [r8]
 8024b86:	e739      	b.n	80249fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024b88:	f113 0b01 	adds.w	fp, r3, #1
 8024b8c:	f53f af36 	bmi.w	80249fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024b90:	45dc      	cmp	ip, fp
 8024b92:	f6ff af33 	blt.w	80249fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024b96:	f110 0b01 	adds.w	fp, r0, #1
 8024b9a:	f53f af2f 	bmi.w	80249fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024b9e:	45de      	cmp	lr, fp
 8024ba0:	f6ff af2c 	blt.w	80249fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024ba4:	9a08      	ldr	r2, [sp, #32]
 8024ba6:	9302      	str	r3, [sp, #8]
 8024ba8:	fa0f f38e 	sxth.w	r3, lr
 8024bac:	9301      	str	r3, [sp, #4]
 8024bae:	fa0f f38c 	sxth.w	r3, ip
 8024bb2:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8024bb6:	9105      	str	r1, [sp, #20]
 8024bb8:	9300      	str	r3, [sp, #0]
 8024bba:	463a      	mov	r2, r7
 8024bbc:	4653      	mov	r3, sl
 8024bbe:	4641      	mov	r1, r8
 8024bc0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8024bc2:	f7ff fd73 	bl	80246ac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8024bc6:	e719      	b.n	80249fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024bc8:	9906      	ldr	r1, [sp, #24]
 8024bca:	1422      	asrs	r2, r4, #16
 8024bcc:	1433      	asrs	r3, r6, #16
 8024bce:	fb01 2303 	mla	r3, r1, r3, r2
 8024bd2:	085a      	lsrs	r2, r3, #1
 8024bd4:	07d9      	lsls	r1, r3, #31
 8024bd6:	5cba      	ldrb	r2, [r7, r2]
 8024bd8:	bf54      	ite	pl
 8024bda:	f002 020f 	andpl.w	r2, r2, #15
 8024bde:	1112      	asrmi	r2, r2, #4
 8024be0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024be4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8024be8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024bec:	b2d2      	uxtb	r2, r2
 8024bee:	2800      	cmp	r0, #0
 8024bf0:	d062      	beq.n	8024cb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8024bf2:	f103 0a01 	add.w	sl, r3, #1
 8024bf6:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8024bfa:	f01a 0f01 	tst.w	sl, #1
 8024bfe:	5c79      	ldrb	r1, [r7, r1]
 8024c00:	bf0c      	ite	eq
 8024c02:	f001 010f 	andeq.w	r1, r1, #15
 8024c06:	1109      	asrne	r1, r1, #4
 8024c08:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024c0c:	b2c9      	uxtb	r1, r1
 8024c0e:	910f      	str	r1, [sp, #60]	; 0x3c
 8024c10:	f1bc 0f00 	cmp.w	ip, #0
 8024c14:	d019      	beq.n	8024c4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8024c16:	9908      	ldr	r1, [sp, #32]
 8024c18:	440b      	add	r3, r1
 8024c1a:	0859      	lsrs	r1, r3, #1
 8024c1c:	f013 0f01 	tst.w	r3, #1
 8024c20:	5c79      	ldrb	r1, [r7, r1]
 8024c22:	bf0c      	ite	eq
 8024c24:	f001 010f 	andeq.w	r1, r1, #15
 8024c28:	1109      	asrne	r1, r1, #4
 8024c2a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024c2e:	b2c9      	uxtb	r1, r1
 8024c30:	3301      	adds	r3, #1
 8024c32:	910b      	str	r1, [sp, #44]	; 0x2c
 8024c34:	0859      	lsrs	r1, r3, #1
 8024c36:	07db      	lsls	r3, r3, #31
 8024c38:	5c79      	ldrb	r1, [r7, r1]
 8024c3a:	bf54      	ite	pl
 8024c3c:	f001 010f 	andpl.w	r1, r1, #15
 8024c40:	1109      	asrmi	r1, r1, #4
 8024c42:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024c46:	b2c9      	uxtb	r1, r1
 8024c48:	9110      	str	r1, [sp, #64]	; 0x40
 8024c4a:	b280      	uxth	r0, r0
 8024c4c:	fa1f fc8c 	uxth.w	ip, ip
 8024c50:	fb00 f30c 	mul.w	r3, r0, ip
 8024c54:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8024c58:	0100      	lsls	r0, r0, #4
 8024c5a:	fa1f fc8c 	uxth.w	ip, ip
 8024c5e:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8024c62:	eba1 010c 	sub.w	r1, r1, ip
 8024c66:	fa1f fa81 	uxth.w	sl, r1
 8024c6a:	1ac0      	subs	r0, r0, r3
 8024c6c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8024c6e:	b280      	uxth	r0, r0
 8024c70:	4348      	muls	r0, r1
 8024c72:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8024c74:	fb02 020a 	mla	r2, r2, sl, r0
 8024c78:	fb0c 2c01 	mla	ip, ip, r1, r2
 8024c7c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024c7e:	fb03 c302 	mla	r3, r3, r2, ip
 8024c82:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024c86:	2bff      	cmp	r3, #255	; 0xff
 8024c88:	d12c      	bne.n	8024ce4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8024c8a:	4b14      	ldr	r3, [pc, #80]	; (8024cdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024c8c:	681a      	ldr	r2, [r3, #0]
 8024c8e:	4b14      	ldr	r3, [pc, #80]	; (8024ce0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8024c90:	0951      	lsrs	r1, r2, #5
 8024c92:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8024c96:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024c9a:	430b      	orrs	r3, r1
 8024c9c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024ca0:	4313      	orrs	r3, r2
 8024ca2:	f8ae 3000 	strh.w	r3, [lr]
 8024ca6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024ca8:	441c      	add	r4, r3
 8024caa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024cac:	f10e 0e02 	add.w	lr, lr, #2
 8024cb0:	441e      	add	r6, r3
 8024cb2:	f108 38ff 	add.w	r8, r8, #4294967295
 8024cb6:	e6ce      	b.n	8024a56 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8024cb8:	f1bc 0f00 	cmp.w	ip, #0
 8024cbc:	d0c5      	beq.n	8024c4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8024cbe:	9908      	ldr	r1, [sp, #32]
 8024cc0:	440b      	add	r3, r1
 8024cc2:	0859      	lsrs	r1, r3, #1
 8024cc4:	07db      	lsls	r3, r3, #31
 8024cc6:	5c79      	ldrb	r1, [r7, r1]
 8024cc8:	bf54      	ite	pl
 8024cca:	f001 010f 	andpl.w	r1, r1, #15
 8024cce:	1109      	asrmi	r1, r1, #4
 8024cd0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024cd4:	b2c9      	uxtb	r1, r1
 8024cd6:	910b      	str	r1, [sp, #44]	; 0x2c
 8024cd8:	e7b7      	b.n	8024c4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8024cda:	bf00      	nop
 8024cdc:	200137cc 	.word	0x200137cc
 8024ce0:	fffff800 	.word	0xfffff800
 8024ce4:	2b00      	cmp	r3, #0
 8024ce6:	d0de      	beq.n	8024ca6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024ce8:	4a21      	ldr	r2, [pc, #132]	; (8024d70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8024cea:	f8be c000 	ldrh.w	ip, [lr]
 8024cee:	6810      	ldr	r0, [r2, #0]
 8024cf0:	fa1f fa83 	uxth.w	sl, r3
 8024cf4:	ea4f 212c 	mov.w	r1, ip, asr #8
 8024cf8:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8024cfc:	43db      	mvns	r3, r3
 8024cfe:	b2db      	uxtb	r3, r3
 8024d00:	fb12 f20a 	smulbb	r2, r2, sl
 8024d04:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024d08:	fb01 2103 	mla	r1, r1, r3, r2
 8024d0c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8024d10:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8024d14:	b2c0      	uxtb	r0, r0
 8024d16:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8024d1a:	fa5f fc8c 	uxtb.w	ip, ip
 8024d1e:	fb10 f00a 	smulbb	r0, r0, sl
 8024d22:	fb0c 0003 	mla	r0, ip, r3, r0
 8024d26:	b289      	uxth	r1, r1
 8024d28:	fb1b fb0a 	smulbb	fp, fp, sl
 8024d2c:	b280      	uxth	r0, r0
 8024d2e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024d32:	fb02 b203 	mla	r2, r2, r3, fp
 8024d36:	1c4b      	adds	r3, r1, #1
 8024d38:	f100 0b01 	add.w	fp, r0, #1
 8024d3c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024d40:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8024d44:	b292      	uxth	r2, r2
 8024d46:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8024d4a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8024d4e:	ea4b 0101 	orr.w	r1, fp, r1
 8024d52:	f102 0b01 	add.w	fp, r2, #1
 8024d56:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8024d5a:	0952      	lsrs	r2, r2, #5
 8024d5c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024d60:	4311      	orrs	r1, r2
 8024d62:	f8ae 1000 	strh.w	r1, [lr]
 8024d66:	e79e      	b.n	8024ca6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024d68:	b013      	add	sp, #76	; 0x4c
 8024d6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024d6e:	bf00      	nop
 8024d70:	200137cc 	.word	0x200137cc

08024d74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8024d74:	b570      	push	{r4, r5, r6, lr}
 8024d76:	1208      	asrs	r0, r1, #8
 8024d78:	b29e      	uxth	r6, r3
 8024d7a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8024d7e:	1213      	asrs	r3, r2, #8
 8024d80:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024d84:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8024d88:	fb13 f305 	smulbb	r3, r3, r5
 8024d8c:	fb10 f006 	smulbb	r0, r0, r6
 8024d90:	4418      	add	r0, r3
 8024d92:	10cc      	asrs	r4, r1, #3
 8024d94:	10d3      	asrs	r3, r2, #3
 8024d96:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8024d9a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8024d9e:	fb13 f305 	smulbb	r3, r3, r5
 8024da2:	fb14 f406 	smulbb	r4, r4, r6
 8024da6:	00c9      	lsls	r1, r1, #3
 8024da8:	00d2      	lsls	r2, r2, #3
 8024daa:	441c      	add	r4, r3
 8024dac:	b2d2      	uxtb	r2, r2
 8024dae:	b2cb      	uxtb	r3, r1
 8024db0:	fb12 f205 	smulbb	r2, r2, r5
 8024db4:	b280      	uxth	r0, r0
 8024db6:	fb13 f306 	smulbb	r3, r3, r6
 8024dba:	4413      	add	r3, r2
 8024dbc:	1c42      	adds	r2, r0, #1
 8024dbe:	b29b      	uxth	r3, r3
 8024dc0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024dc4:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8024dc8:	1c58      	adds	r0, r3, #1
 8024dca:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024dce:	b2a4      	uxth	r4, r4
 8024dd0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8024dd4:	4310      	orrs	r0, r2
 8024dd6:	1c62      	adds	r2, r4, #1
 8024dd8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8024ddc:	0964      	lsrs	r4, r4, #5
 8024dde:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8024de2:	4320      	orrs	r0, r4
 8024de4:	bd70      	pop	{r4, r5, r6, pc}
	...

08024de8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8024de8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024dec:	b08f      	sub	sp, #60	; 0x3c
 8024dee:	461c      	mov	r4, r3
 8024df0:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8024df4:	9004      	str	r0, [sp, #16]
 8024df6:	460d      	mov	r5, r1
 8024df8:	4616      	mov	r6, r2
 8024dfa:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024dfc:	2f00      	cmp	r7, #0
 8024dfe:	f000 80f6 	beq.w	8024fee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8024e02:	6820      	ldr	r0, [r4, #0]
 8024e04:	6861      	ldr	r1, [r4, #4]
 8024e06:	aa0a      	add	r2, sp, #40	; 0x28
 8024e08:	c203      	stmia	r2!, {r0, r1}
 8024e0a:	6818      	ldr	r0, [r3, #0]
 8024e0c:	6859      	ldr	r1, [r3, #4]
 8024e0e:	aa0c      	add	r2, sp, #48	; 0x30
 8024e10:	c203      	stmia	r2!, {r0, r1}
 8024e12:	a80a      	add	r0, sp, #40	; 0x28
 8024e14:	f7ef fc90 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024e18:	4621      	mov	r1, r4
 8024e1a:	a80c      	add	r0, sp, #48	; 0x30
 8024e1c:	f7ef fcd0 	bl	80147c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024e20:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8024e24:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8024e28:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8024e2c:	f002 0301 	and.w	r3, r2, #1
 8024e30:	9306      	str	r3, [sp, #24]
 8024e32:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8024e36:	f003 0101 	and.w	r1, r3, #1
 8024e3a:	9105      	str	r1, [sp, #20]
 8024e3c:	9805      	ldr	r0, [sp, #20]
 8024e3e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8024e42:	4403      	add	r3, r0
 8024e44:	fb01 2303 	mla	r3, r1, r3, r2
 8024e48:	f04f 0802 	mov.w	r8, #2
 8024e4c:	fb93 f3f8 	sdiv	r3, r3, r8
 8024e50:	441d      	add	r5, r3
 8024e52:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8024e56:	441a      	add	r2, r3
 8024e58:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8024e5c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8024e60:	4419      	add	r1, r3
 8024e62:	4b64      	ldr	r3, [pc, #400]	; (8024ff4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8024e64:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8024e68:	6818      	ldr	r0, [r3, #0]
 8024e6a:	6803      	ldr	r3, [r0, #0]
 8024e6c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8024e6e:	4798      	blx	r3
 8024e70:	4a61      	ldr	r2, [pc, #388]	; (8024ff8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8024e72:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8024e76:	8813      	ldrh	r3, [r2, #0]
 8024e78:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8024e7c:	2fff      	cmp	r7, #255	; 0xff
 8024e7e:	fb03 a404 	mla	r4, r3, r4, sl
 8024e82:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8024e86:	f106 0604 	add.w	r6, r6, #4
 8024e8a:	4611      	mov	r1, r2
 8024e8c:	fb03 fb0b 	mul.w	fp, r3, fp
 8024e90:	d06b      	beq.n	8024f6a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8024e92:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 8024e96:	9303      	str	r3, [sp, #12]
 8024e98:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8024e9c:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8024ea0:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8024ea4:	9b07      	ldr	r3, [sp, #28]
 8024ea6:	42a3      	cmp	r3, r4
 8024ea8:	f240 809c 	bls.w	8024fe4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8024eac:	9b06      	ldr	r3, [sp, #24]
 8024eae:	2b00      	cmp	r3, #0
 8024eb0:	d039      	beq.n	8024f26 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8024eb2:	782b      	ldrb	r3, [r5, #0]
 8024eb4:	8822      	ldrh	r2, [r4, #0]
 8024eb6:	9804      	ldr	r0, [sp, #16]
 8024eb8:	f003 030f 	and.w	r3, r3, #15
 8024ebc:	f105 0801 	add.w	r8, r5, #1
 8024ec0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8024ec4:	9b03      	ldr	r3, [sp, #12]
 8024ec6:	9300      	str	r3, [sp, #0]
 8024ec8:	463b      	mov	r3, r7
 8024eca:	f7ff ff53 	bl	8024d74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8024ece:	f824 0b02 	strh.w	r0, [r4], #2
 8024ed2:	f109 3bff 	add.w	fp, r9, #4294967295
 8024ed6:	f1bb 0f01 	cmp.w	fp, #1
 8024eda:	46a2      	mov	sl, r4
 8024edc:	f104 0404 	add.w	r4, r4, #4
 8024ee0:	dd24      	ble.n	8024f2c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8024ee2:	f898 3000 	ldrb.w	r3, [r8]
 8024ee6:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8024eea:	9804      	ldr	r0, [sp, #16]
 8024eec:	091b      	lsrs	r3, r3, #4
 8024eee:	f1ab 0b02 	sub.w	fp, fp, #2
 8024ef2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8024ef6:	9b03      	ldr	r3, [sp, #12]
 8024ef8:	9300      	str	r3, [sp, #0]
 8024efa:	463b      	mov	r3, r7
 8024efc:	f7ff ff3a 	bl	8024d74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8024f00:	f824 0c04 	strh.w	r0, [r4, #-4]
 8024f04:	f818 3b01 	ldrb.w	r3, [r8], #1
 8024f08:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8024f0c:	9804      	ldr	r0, [sp, #16]
 8024f0e:	f003 030f 	and.w	r3, r3, #15
 8024f12:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8024f16:	9b03      	ldr	r3, [sp, #12]
 8024f18:	9300      	str	r3, [sp, #0]
 8024f1a:	463b      	mov	r3, r7
 8024f1c:	f7ff ff2a 	bl	8024d74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8024f20:	f824 0c02 	strh.w	r0, [r4, #-2]
 8024f24:	e7d7      	b.n	8024ed6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8024f26:	46a8      	mov	r8, r5
 8024f28:	46cb      	mov	fp, r9
 8024f2a:	e7d4      	b.n	8024ed6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8024f2c:	d10e      	bne.n	8024f4c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8024f2e:	f898 3000 	ldrb.w	r3, [r8]
 8024f32:	f8ba 2000 	ldrh.w	r2, [sl]
 8024f36:	9804      	ldr	r0, [sp, #16]
 8024f38:	091b      	lsrs	r3, r3, #4
 8024f3a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8024f3e:	9b03      	ldr	r3, [sp, #12]
 8024f40:	9300      	str	r3, [sp, #0]
 8024f42:	463b      	mov	r3, r7
 8024f44:	f7ff ff16 	bl	8024d74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8024f48:	f82a 0b02 	strh.w	r0, [sl], #2
 8024f4c:	9b08      	ldr	r3, [sp, #32]
 8024f4e:	9a05      	ldr	r2, [sp, #20]
 8024f50:	881c      	ldrh	r4, [r3, #0]
 8024f52:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8024f56:	eba4 0409 	sub.w	r4, r4, r9
 8024f5a:	4413      	add	r3, r2
 8024f5c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8024f60:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024f62:	fb93 f3f2 	sdiv	r3, r3, r2
 8024f66:	441d      	add	r5, r3
 8024f68:	e79c      	b.n	8024ea4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8024f6a:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8024f6e:	45a3      	cmp	fp, r4
 8024f70:	d938      	bls.n	8024fe4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8024f72:	9b06      	ldr	r3, [sp, #24]
 8024f74:	b1f3      	cbz	r3, 8024fb4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8024f76:	782b      	ldrb	r3, [r5, #0]
 8024f78:	f003 030f 	and.w	r3, r3, #15
 8024f7c:	1c6a      	adds	r2, r5, #1
 8024f7e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8024f82:	8023      	strh	r3, [r4, #0]
 8024f84:	f109 30ff 	add.w	r0, r9, #4294967295
 8024f88:	3402      	adds	r4, #2
 8024f8a:	2801      	cmp	r0, #1
 8024f8c:	4623      	mov	r3, r4
 8024f8e:	f104 0404 	add.w	r4, r4, #4
 8024f92:	dd12      	ble.n	8024fba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8024f94:	7813      	ldrb	r3, [r2, #0]
 8024f96:	091b      	lsrs	r3, r3, #4
 8024f98:	3802      	subs	r0, #2
 8024f9a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8024f9e:	f824 3c04 	strh.w	r3, [r4, #-4]
 8024fa2:	f812 3b01 	ldrb.w	r3, [r2], #1
 8024fa6:	f003 030f 	and.w	r3, r3, #15
 8024faa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8024fae:	f824 3c02 	strh.w	r3, [r4, #-2]
 8024fb2:	e7ea      	b.n	8024f8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8024fb4:	462a      	mov	r2, r5
 8024fb6:	4648      	mov	r0, r9
 8024fb8:	e7e7      	b.n	8024f8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8024fba:	d106      	bne.n	8024fca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8024fbc:	7812      	ldrb	r2, [r2, #0]
 8024fbe:	0912      	lsrs	r2, r2, #4
 8024fc0:	3302      	adds	r3, #2
 8024fc2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8024fc6:	f823 2c02 	strh.w	r2, [r3, #-2]
 8024fca:	880c      	ldrh	r4, [r1, #0]
 8024fcc:	9a05      	ldr	r2, [sp, #20]
 8024fce:	eba4 0409 	sub.w	r4, r4, r9
 8024fd2:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8024fd6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8024fda:	4413      	add	r3, r2
 8024fdc:	fb93 f3f8 	sdiv	r3, r3, r8
 8024fe0:	441d      	add	r5, r3
 8024fe2:	e7c4      	b.n	8024f6e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8024fe4:	4b03      	ldr	r3, [pc, #12]	; (8024ff4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8024fe6:	6818      	ldr	r0, [r3, #0]
 8024fe8:	6803      	ldr	r3, [r0, #0]
 8024fea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8024fec:	4798      	blx	r3
 8024fee:	b00f      	add	sp, #60	; 0x3c
 8024ff0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024ff4:	200137bc 	.word	0x200137bc
 8024ff8:	200137b6 	.word	0x200137b6

08024ffc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8024ffc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8024ffe:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8025002:	2dff      	cmp	r5, #255	; 0xff
 8025004:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8025008:	d10c      	bne.n	8025024 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802500a:	2bff      	cmp	r3, #255	; 0xff
 802500c:	d10a      	bne.n	8025024 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802500e:	4b25      	ldr	r3, [pc, #148]	; (80250a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8025010:	0948      	lsrs	r0, r1, #5
 8025012:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025016:	403b      	ands	r3, r7
 8025018:	4318      	orrs	r0, r3
 802501a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802501e:	4308      	orrs	r0, r1
 8025020:	b280      	uxth	r0, r0
 8025022:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025024:	fb15 f503 	smulbb	r5, r5, r3
 8025028:	b2ab      	uxth	r3, r5
 802502a:	1c5d      	adds	r5, r3, #1
 802502c:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8025030:	1214      	asrs	r4, r2, #8
 8025032:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8025036:	fa1f fc85 	uxth.w	ip, r5
 802503a:	10d6      	asrs	r6, r2, #3
 802503c:	00d0      	lsls	r0, r2, #3
 802503e:	43ed      	mvns	r5, r5
 8025040:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025044:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8025048:	b2eb      	uxtb	r3, r5
 802504a:	b2c0      	uxtb	r0, r0
 802504c:	fb12 f20c 	smulbb	r2, r2, ip
 8025050:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025054:	fb04 2403 	mla	r4, r4, r3, r2
 8025058:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 802505c:	b2c8      	uxtb	r0, r1
 802505e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8025062:	b2fd      	uxtb	r5, r7
 8025064:	fb10 f00c 	smulbb	r0, r0, ip
 8025068:	b2a4      	uxth	r4, r4
 802506a:	fb02 0003 	mla	r0, r2, r3, r0
 802506e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8025072:	fb15 f50c 	smulbb	r5, r5, ip
 8025076:	fb06 5503 	mla	r5, r6, r3, r5
 802507a:	b283      	uxth	r3, r0
 802507c:	1c60      	adds	r0, r4, #1
 802507e:	b2ad      	uxth	r5, r5
 8025080:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8025084:	1c58      	adds	r0, r3, #1
 8025086:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802508a:	1c6b      	adds	r3, r5, #1
 802508c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025090:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025094:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025098:	096d      	lsrs	r5, r5, #5
 802509a:	4320      	orrs	r0, r4
 802509c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80250a0:	4328      	orrs	r0, r5
 80250a2:	e7be      	b.n	8025022 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80250a4:	00fff800 	.word	0x00fff800

080250a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80250a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80250ac:	461c      	mov	r4, r3
 80250ae:	b08d      	sub	sp, #52	; 0x34
 80250b0:	460d      	mov	r5, r1
 80250b2:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80250b4:	6861      	ldr	r1, [r4, #4]
 80250b6:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 80250ba:	4680      	mov	r8, r0
 80250bc:	6820      	ldr	r0, [r4, #0]
 80250be:	4616      	mov	r6, r2
 80250c0:	aa08      	add	r2, sp, #32
 80250c2:	c203      	stmia	r2!, {r0, r1}
 80250c4:	6818      	ldr	r0, [r3, #0]
 80250c6:	6859      	ldr	r1, [r3, #4]
 80250c8:	aa0a      	add	r2, sp, #40	; 0x28
 80250ca:	c203      	stmia	r2!, {r0, r1}
 80250cc:	a808      	add	r0, sp, #32
 80250ce:	f7ef fb33 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80250d2:	4621      	mov	r1, r4
 80250d4:	a80a      	add	r0, sp, #40	; 0x28
 80250d6:	f7ef fb73 	bl	80147c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80250da:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80250de:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80250e2:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80250e6:	f002 0301 	and.w	r3, r2, #1
 80250ea:	9303      	str	r3, [sp, #12]
 80250ec:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80250f0:	f003 0101 	and.w	r1, r3, #1
 80250f4:	9102      	str	r1, [sp, #8]
 80250f6:	9802      	ldr	r0, [sp, #8]
 80250f8:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80250fc:	4403      	add	r3, r0
 80250fe:	fb01 2303 	mla	r3, r1, r3, r2
 8025102:	f04f 0a02 	mov.w	sl, #2
 8025106:	fb93 f3fa 	sdiv	r3, r3, sl
 802510a:	441d      	add	r5, r3
 802510c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8025110:	441a      	add	r2, r3
 8025112:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8025116:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 802511a:	4a3f      	ldr	r2, [pc, #252]	; (8025218 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 802511c:	9205      	str	r2, [sp, #20]
 802511e:	4419      	add	r1, r3
 8025120:	6810      	ldr	r0, [r2, #0]
 8025122:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8025126:	6803      	ldr	r3, [r0, #0]
 8025128:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802512a:	4798      	blx	r3
 802512c:	4b3b      	ldr	r3, [pc, #236]	; (802521c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 802512e:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8025132:	8819      	ldrh	r1, [r3, #0]
 8025134:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8025138:	fb01 c404 	mla	r4, r1, r4, ip
 802513c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025140:	434f      	muls	r7, r1
 8025142:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8025146:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802514a:	3604      	adds	r6, #4
 802514c:	9204      	str	r2, [sp, #16]
 802514e:	9b04      	ldr	r3, [sp, #16]
 8025150:	429c      	cmp	r4, r3
 8025152:	d258      	bcs.n	8025206 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8025154:	9b03      	ldr	r3, [sp, #12]
 8025156:	2b00      	cmp	r3, #0
 8025158:	d034      	beq.n	80251c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802515a:	782b      	ldrb	r3, [r5, #0]
 802515c:	f003 030f 	and.w	r3, r3, #15
 8025160:	1c6f      	adds	r7, r5, #1
 8025162:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025166:	0e0b      	lsrs	r3, r1, #24
 8025168:	d006      	beq.n	8025178 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802516a:	8822      	ldrh	r2, [r4, #0]
 802516c:	9300      	str	r3, [sp, #0]
 802516e:	4640      	mov	r0, r8
 8025170:	464b      	mov	r3, r9
 8025172:	f7ff ff43 	bl	8024ffc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025176:	8020      	strh	r0, [r4, #0]
 8025178:	3402      	adds	r4, #2
 802517a:	f10b 3aff 	add.w	sl, fp, #4294967295
 802517e:	f1ba 0f01 	cmp.w	sl, #1
 8025182:	dd22      	ble.n	80251ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8025184:	783b      	ldrb	r3, [r7, #0]
 8025186:	091b      	lsrs	r3, r3, #4
 8025188:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802518c:	0e0b      	lsrs	r3, r1, #24
 802518e:	d006      	beq.n	802519e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8025190:	8822      	ldrh	r2, [r4, #0]
 8025192:	9300      	str	r3, [sp, #0]
 8025194:	4640      	mov	r0, r8
 8025196:	464b      	mov	r3, r9
 8025198:	f7ff ff30 	bl	8024ffc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802519c:	8020      	strh	r0, [r4, #0]
 802519e:	f817 3b01 	ldrb.w	r3, [r7], #1
 80251a2:	f003 030f 	and.w	r3, r3, #15
 80251a6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80251aa:	0e0b      	lsrs	r3, r1, #24
 80251ac:	d006      	beq.n	80251bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80251ae:	8862      	ldrh	r2, [r4, #2]
 80251b0:	9300      	str	r3, [sp, #0]
 80251b2:	4640      	mov	r0, r8
 80251b4:	464b      	mov	r3, r9
 80251b6:	f7ff ff21 	bl	8024ffc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80251ba:	8060      	strh	r0, [r4, #2]
 80251bc:	3404      	adds	r4, #4
 80251be:	f1aa 0a02 	sub.w	sl, sl, #2
 80251c2:	e7dc      	b.n	802517e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80251c4:	462f      	mov	r7, r5
 80251c6:	46da      	mov	sl, fp
 80251c8:	e7d9      	b.n	802517e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80251ca:	d10d      	bne.n	80251e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80251cc:	783b      	ldrb	r3, [r7, #0]
 80251ce:	091b      	lsrs	r3, r3, #4
 80251d0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80251d4:	0e0b      	lsrs	r3, r1, #24
 80251d6:	d006      	beq.n	80251e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80251d8:	8822      	ldrh	r2, [r4, #0]
 80251da:	9300      	str	r3, [sp, #0]
 80251dc:	4640      	mov	r0, r8
 80251de:	464b      	mov	r3, r9
 80251e0:	f7ff ff0c 	bl	8024ffc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80251e4:	8020      	strh	r0, [r4, #0]
 80251e6:	3402      	adds	r4, #2
 80251e8:	9b06      	ldr	r3, [sp, #24]
 80251ea:	9a02      	ldr	r2, [sp, #8]
 80251ec:	881b      	ldrh	r3, [r3, #0]
 80251ee:	eba3 030b 	sub.w	r3, r3, fp
 80251f2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80251f6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80251fa:	4413      	add	r3, r2
 80251fc:	9a07      	ldr	r2, [sp, #28]
 80251fe:	fb93 f3f2 	sdiv	r3, r3, r2
 8025202:	441d      	add	r5, r3
 8025204:	e7a3      	b.n	802514e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8025206:	9b05      	ldr	r3, [sp, #20]
 8025208:	6818      	ldr	r0, [r3, #0]
 802520a:	6803      	ldr	r3, [r0, #0]
 802520c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802520e:	4798      	blx	r3
 8025210:	b00d      	add	sp, #52	; 0x34
 8025212:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025216:	bf00      	nop
 8025218:	200137bc 	.word	0x200137bc
 802521c:	200137b6 	.word	0x200137b6

08025220 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8025220:	b570      	push	{r4, r5, r6, lr}
 8025222:	1214      	asrs	r4, r2, #8
 8025224:	788d      	ldrb	r5, [r1, #2]
 8025226:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802522a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802522e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025232:	fb15 f503 	smulbb	r5, r5, r3
 8025236:	fb04 5506 	mla	r5, r4, r6, r5
 802523a:	10d0      	asrs	r0, r2, #3
 802523c:	784c      	ldrb	r4, [r1, #1]
 802523e:	7809      	ldrb	r1, [r1, #0]
 8025240:	00d2      	lsls	r2, r2, #3
 8025242:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025246:	b2d2      	uxtb	r2, r2
 8025248:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 802524c:	fb14 f403 	smulbb	r4, r4, r3
 8025250:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8025254:	fb11 f303 	smulbb	r3, r1, r3
 8025258:	fb00 4406 	mla	r4, r0, r6, r4
 802525c:	fb02 3306 	mla	r3, r2, r6, r3
 8025260:	b2ad      	uxth	r5, r5
 8025262:	b29b      	uxth	r3, r3
 8025264:	b2a4      	uxth	r4, r4
 8025266:	1c68      	adds	r0, r5, #1
 8025268:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 802526c:	1c62      	adds	r2, r4, #1
 802526e:	1c58      	adds	r0, r3, #1
 8025270:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025274:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025278:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802527c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025280:	0964      	lsrs	r4, r4, #5
 8025282:	4328      	orrs	r0, r5
 8025284:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025288:	4320      	orrs	r0, r4
 802528a:	bd70      	pop	{r4, r5, r6, pc}

0802528c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 802528c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025290:	b08f      	sub	sp, #60	; 0x3c
 8025292:	461c      	mov	r4, r3
 8025294:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8025298:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802529a:	4682      	mov	sl, r0
 802529c:	460e      	mov	r6, r1
 802529e:	4615      	mov	r5, r2
 80252a0:	2f00      	cmp	r7, #0
 80252a2:	f000 8142 	beq.w	802552a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 80252a6:	6820      	ldr	r0, [r4, #0]
 80252a8:	6861      	ldr	r1, [r4, #4]
 80252aa:	aa0a      	add	r2, sp, #40	; 0x28
 80252ac:	c203      	stmia	r2!, {r0, r1}
 80252ae:	6818      	ldr	r0, [r3, #0]
 80252b0:	6859      	ldr	r1, [r3, #4]
 80252b2:	aa0c      	add	r2, sp, #48	; 0x30
 80252b4:	c203      	stmia	r2!, {r0, r1}
 80252b6:	a80a      	add	r0, sp, #40	; 0x28
 80252b8:	f7ef fa3e 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80252bc:	4621      	mov	r1, r4
 80252be:	a80c      	add	r0, sp, #48	; 0x30
 80252c0:	f7ef fa7e 	bl	80147c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80252c4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80252c8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80252cc:	f002 0301 	and.w	r3, r2, #1
 80252d0:	9306      	str	r3, [sp, #24]
 80252d2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80252d6:	f003 0101 	and.w	r1, r3, #1
 80252da:	9105      	str	r1, [sp, #20]
 80252dc:	9805      	ldr	r0, [sp, #20]
 80252de:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80252e2:	4403      	add	r3, r0
 80252e4:	fb01 2303 	mla	r3, r1, r3, r2
 80252e8:	f04f 0802 	mov.w	r8, #2
 80252ec:	fb93 f3f8 	sdiv	r3, r3, r8
 80252f0:	441e      	add	r6, r3
 80252f2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80252f6:	441a      	add	r2, r3
 80252f8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80252fc:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8025300:	4419      	add	r1, r3
 8025302:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8025306:	9303      	str	r3, [sp, #12]
 8025308:	4b89      	ldr	r3, [pc, #548]	; (8025530 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802530a:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 802530e:	6818      	ldr	r0, [r3, #0]
 8025310:	6803      	ldr	r3, [r0, #0]
 8025312:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025314:	4798      	blx	r3
 8025316:	4a87      	ldr	r2, [pc, #540]	; (8025534 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8025318:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802531c:	8813      	ldrh	r3, [r2, #0]
 802531e:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8025322:	2fff      	cmp	r7, #255	; 0xff
 8025324:	fb03 9404 	mla	r4, r3, r4, r9
 8025328:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802532c:	f105 0504 	add.w	r5, r5, #4
 8025330:	4694      	mov	ip, r2
 8025332:	fb03 f30b 	mul.w	r3, r3, fp
 8025336:	d071      	beq.n	802541c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8025338:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802533c:	43f9      	mvns	r1, r7
 802533e:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025342:	b2c9      	uxtb	r1, r1
 8025344:	9104      	str	r1, [sp, #16]
 8025346:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802534a:	9b07      	ldr	r3, [sp, #28]
 802534c:	42a3      	cmp	r3, r4
 802534e:	f240 80e7 	bls.w	8025520 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8025352:	9b06      	ldr	r3, [sp, #24]
 8025354:	2b00      	cmp	r3, #0
 8025356:	d03d      	beq.n	80253d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8025358:	7831      	ldrb	r1, [r6, #0]
 802535a:	9b04      	ldr	r3, [sp, #16]
 802535c:	8822      	ldrh	r2, [r4, #0]
 802535e:	9300      	str	r3, [sp, #0]
 8025360:	f001 010f 	and.w	r1, r1, #15
 8025364:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025368:	463b      	mov	r3, r7
 802536a:	4429      	add	r1, r5
 802536c:	4650      	mov	r0, sl
 802536e:	f7ff ff57 	bl	8025220 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025372:	9b03      	ldr	r3, [sp, #12]
 8025374:	f824 0b02 	strh.w	r0, [r4], #2
 8025378:	f106 0801 	add.w	r8, r6, #1
 802537c:	f103 3bff 	add.w	fp, r3, #4294967295
 8025380:	f1bb 0f01 	cmp.w	fp, #1
 8025384:	46a1      	mov	r9, r4
 8025386:	f104 0404 	add.w	r4, r4, #4
 802538a:	dd27      	ble.n	80253dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 802538c:	f898 1000 	ldrb.w	r1, [r8]
 8025390:	9b04      	ldr	r3, [sp, #16]
 8025392:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8025396:	9300      	str	r3, [sp, #0]
 8025398:	0909      	lsrs	r1, r1, #4
 802539a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802539e:	463b      	mov	r3, r7
 80253a0:	4429      	add	r1, r5
 80253a2:	4650      	mov	r0, sl
 80253a4:	f7ff ff3c 	bl	8025220 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80253a8:	f824 0c04 	strh.w	r0, [r4, #-4]
 80253ac:	f818 1b01 	ldrb.w	r1, [r8], #1
 80253b0:	9b04      	ldr	r3, [sp, #16]
 80253b2:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80253b6:	9300      	str	r3, [sp, #0]
 80253b8:	f001 010f 	and.w	r1, r1, #15
 80253bc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80253c0:	463b      	mov	r3, r7
 80253c2:	4429      	add	r1, r5
 80253c4:	4650      	mov	r0, sl
 80253c6:	f7ff ff2b 	bl	8025220 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80253ca:	f1ab 0b02 	sub.w	fp, fp, #2
 80253ce:	f824 0c02 	strh.w	r0, [r4, #-2]
 80253d2:	e7d5      	b.n	8025380 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80253d4:	46b0      	mov	r8, r6
 80253d6:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80253da:	e7d1      	b.n	8025380 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80253dc:	d10f      	bne.n	80253fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 80253de:	f898 1000 	ldrb.w	r1, [r8]
 80253e2:	9b04      	ldr	r3, [sp, #16]
 80253e4:	f8b9 2000 	ldrh.w	r2, [r9]
 80253e8:	9300      	str	r3, [sp, #0]
 80253ea:	0909      	lsrs	r1, r1, #4
 80253ec:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80253f0:	463b      	mov	r3, r7
 80253f2:	4429      	add	r1, r5
 80253f4:	4650      	mov	r0, sl
 80253f6:	f7ff ff13 	bl	8025220 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80253fa:	f829 0b02 	strh.w	r0, [r9], #2
 80253fe:	9b08      	ldr	r3, [sp, #32]
 8025400:	9a05      	ldr	r2, [sp, #20]
 8025402:	881c      	ldrh	r4, [r3, #0]
 8025404:	9b03      	ldr	r3, [sp, #12]
 8025406:	1ae4      	subs	r4, r4, r3
 8025408:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802540c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025410:	4413      	add	r3, r2
 8025412:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025414:	fb93 f3f2 	sdiv	r3, r3, r2
 8025418:	441e      	add	r6, r3
 802541a:	e796      	b.n	802534a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 802541c:	4f46      	ldr	r7, [pc, #280]	; (8025538 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 802541e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025422:	42a3      	cmp	r3, r4
 8025424:	d97c      	bls.n	8025520 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8025426:	9a06      	ldr	r2, [sp, #24]
 8025428:	2a00      	cmp	r2, #0
 802542a:	d054      	beq.n	80254d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 802542c:	7830      	ldrb	r0, [r6, #0]
 802542e:	f000 000f 	and.w	r0, r0, #15
 8025432:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025436:	eb05 0e00 	add.w	lr, r5, r0
 802543a:	5c28      	ldrb	r0, [r5, r0]
 802543c:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8025440:	f89e e001 	ldrb.w	lr, [lr, #1]
 8025444:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025448:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802544c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025450:	ea42 020e 	orr.w	r2, r2, lr
 8025454:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8025458:	f824 2b02 	strh.w	r2, [r4], #2
 802545c:	9a03      	ldr	r2, [sp, #12]
 802545e:	1c71      	adds	r1, r6, #1
 8025460:	f102 3eff 	add.w	lr, r2, #4294967295
 8025464:	f1be 0f01 	cmp.w	lr, #1
 8025468:	4620      	mov	r0, r4
 802546a:	f104 0404 	add.w	r4, r4, #4
 802546e:	dd36      	ble.n	80254de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8025470:	7808      	ldrb	r0, [r1, #0]
 8025472:	0900      	lsrs	r0, r0, #4
 8025474:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025478:	eb05 0a00 	add.w	sl, r5, r0
 802547c:	f1ae 0e02 	sub.w	lr, lr, #2
 8025480:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8025484:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8025488:	00d2      	lsls	r2, r2, #3
 802548a:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 802548e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025492:	ea49 0202 	orr.w	r2, r9, r2
 8025496:	f815 9000 	ldrb.w	r9, [r5, r0]
 802549a:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802549e:	f824 2c04 	strh.w	r2, [r4, #-4]
 80254a2:	f811 0b01 	ldrb.w	r0, [r1], #1
 80254a6:	f000 000f 	and.w	r0, r0, #15
 80254aa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80254ae:	eb05 0a00 	add.w	sl, r5, r0
 80254b2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80254b6:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80254ba:	00d2      	lsls	r2, r2, #3
 80254bc:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80254c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80254c4:	ea49 0202 	orr.w	r2, r9, r2
 80254c8:	f815 9000 	ldrb.w	r9, [r5, r0]
 80254cc:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80254d0:	f824 2c02 	strh.w	r2, [r4, #-2]
 80254d4:	e7c6      	b.n	8025464 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80254d6:	4631      	mov	r1, r6
 80254d8:	f8dd e00c 	ldr.w	lr, [sp, #12]
 80254dc:	e7c2      	b.n	8025464 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80254de:	d111      	bne.n	8025504 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 80254e0:	7809      	ldrb	r1, [r1, #0]
 80254e2:	0909      	lsrs	r1, r1, #4
 80254e4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80254e8:	186c      	adds	r4, r5, r1
 80254ea:	5c69      	ldrb	r1, [r5, r1]
 80254ec:	78a2      	ldrb	r2, [r4, #2]
 80254ee:	7864      	ldrb	r4, [r4, #1]
 80254f0:	00e4      	lsls	r4, r4, #3
 80254f2:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80254f6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80254fa:	4322      	orrs	r2, r4
 80254fc:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8025500:	f820 2b02 	strh.w	r2, [r0], #2
 8025504:	9a03      	ldr	r2, [sp, #12]
 8025506:	f8bc 4000 	ldrh.w	r4, [ip]
 802550a:	9905      	ldr	r1, [sp, #20]
 802550c:	1aa4      	subs	r4, r4, r2
 802550e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8025512:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025516:	440a      	add	r2, r1
 8025518:	fb92 f2f8 	sdiv	r2, r2, r8
 802551c:	4416      	add	r6, r2
 802551e:	e780      	b.n	8025422 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8025520:	4b03      	ldr	r3, [pc, #12]	; (8025530 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8025522:	6818      	ldr	r0, [r3, #0]
 8025524:	6803      	ldr	r3, [r0, #0]
 8025526:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025528:	4798      	blx	r3
 802552a:	b00f      	add	sp, #60	; 0x3c
 802552c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025530:	200137bc 	.word	0x200137bc
 8025534:	200137b6 	.word	0x200137b6
 8025538:	fffff800 	.word	0xfffff800

0802553c <CRC_Lock>:
 802553c:	b530      	push	{r4, r5, lr}
 802553e:	4a20      	ldr	r2, [pc, #128]	; (80255c0 <CRC_Lock+0x84>)
 8025540:	6813      	ldr	r3, [r2, #0]
 8025542:	f023 0301 	bic.w	r3, r3, #1
 8025546:	6013      	str	r3, [r2, #0]
 8025548:	4b1e      	ldr	r3, [pc, #120]	; (80255c4 <CRC_Lock+0x88>)
 802554a:	681a      	ldr	r2, [r3, #0]
 802554c:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8025550:	4022      	ands	r2, r4
 8025552:	f24c 2540 	movw	r5, #49728	; 0xc240
 8025556:	42aa      	cmp	r2, r5
 8025558:	d005      	beq.n	8025566 <CRC_Lock+0x2a>
 802555a:	681b      	ldr	r3, [r3, #0]
 802555c:	f24c 2270 	movw	r2, #49776	; 0xc270
 8025560:	4023      	ands	r3, r4
 8025562:	4293      	cmp	r3, r2
 8025564:	d124      	bne.n	80255b0 <CRC_Lock+0x74>
 8025566:	4b18      	ldr	r3, [pc, #96]	; (80255c8 <CRC_Lock+0x8c>)
 8025568:	681b      	ldr	r3, [r3, #0]
 802556a:	bb0b      	cbnz	r3, 80255b0 <CRC_Lock+0x74>
 802556c:	4b17      	ldr	r3, [pc, #92]	; (80255cc <CRC_Lock+0x90>)
 802556e:	681a      	ldr	r2, [r3, #0]
 8025570:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025574:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8025578:	d00d      	beq.n	8025596 <CRC_Lock+0x5a>
 802557a:	681a      	ldr	r2, [r3, #0]
 802557c:	f240 4483 	movw	r4, #1155	; 0x483
 8025580:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025584:	42a2      	cmp	r2, r4
 8025586:	d006      	beq.n	8025596 <CRC_Lock+0x5a>
 8025588:	681b      	ldr	r3, [r3, #0]
 802558a:	f240 4285 	movw	r2, #1157	; 0x485
 802558e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8025592:	4293      	cmp	r3, r2
 8025594:	d10c      	bne.n	80255b0 <CRC_Lock+0x74>
 8025596:	4b0e      	ldr	r3, [pc, #56]	; (80255d0 <CRC_Lock+0x94>)
 8025598:	2201      	movs	r2, #1
 802559a:	601a      	str	r2, [r3, #0]
 802559c:	681a      	ldr	r2, [r3, #0]
 802559e:	2a00      	cmp	r2, #0
 80255a0:	d1fc      	bne.n	802559c <CRC_Lock+0x60>
 80255a2:	4b0c      	ldr	r3, [pc, #48]	; (80255d4 <CRC_Lock+0x98>)
 80255a4:	6018      	str	r0, [r3, #0]
 80255a6:	6818      	ldr	r0, [r3, #0]
 80255a8:	1a43      	subs	r3, r0, r1
 80255aa:	4258      	negs	r0, r3
 80255ac:	4158      	adcs	r0, r3
 80255ae:	bd30      	pop	{r4, r5, pc}
 80255b0:	4b09      	ldr	r3, [pc, #36]	; (80255d8 <CRC_Lock+0x9c>)
 80255b2:	2201      	movs	r2, #1
 80255b4:	601a      	str	r2, [r3, #0]
 80255b6:	681a      	ldr	r2, [r3, #0]
 80255b8:	2a00      	cmp	r2, #0
 80255ba:	d1fc      	bne.n	80255b6 <CRC_Lock+0x7a>
 80255bc:	4b07      	ldr	r3, [pc, #28]	; (80255dc <CRC_Lock+0xa0>)
 80255be:	e7f1      	b.n	80255a4 <CRC_Lock+0x68>
 80255c0:	e0002000 	.word	0xe0002000
 80255c4:	e000ed00 	.word	0xe000ed00
 80255c8:	e0042000 	.word	0xe0042000
 80255cc:	5c001000 	.word	0x5c001000
 80255d0:	58024c08 	.word	0x58024c08
 80255d4:	58024c00 	.word	0x58024c00
 80255d8:	40023008 	.word	0x40023008
 80255dc:	40023000 	.word	0x40023000

080255e0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 80255e0:	6101      	str	r1, [r0, #16]
 80255e2:	4770      	bx	lr

080255e4 <_ZN8touchgfx8Gestures4tickEv>:
 80255e4:	7b83      	ldrb	r3, [r0, #14]
 80255e6:	b14b      	cbz	r3, 80255fc <_ZN8touchgfx8Gestures4tickEv+0x18>
 80255e8:	8903      	ldrh	r3, [r0, #8]
 80255ea:	3301      	adds	r3, #1
 80255ec:	b29b      	uxth	r3, r3
 80255ee:	2b07      	cmp	r3, #7
 80255f0:	8103      	strh	r3, [r0, #8]
 80255f2:	bf81      	itttt	hi
 80255f4:	2300      	movhi	r3, #0
 80255f6:	8143      	strhhi	r3, [r0, #10]
 80255f8:	8183      	strhhi	r3, [r0, #12]
 80255fa:	7383      	strbhi	r3, [r0, #14]
 80255fc:	4770      	bx	lr
	...

08025600 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8025600:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8025604:	4698      	mov	r8, r3
 8025606:	8883      	ldrh	r3, [r0, #4]
 8025608:	f8ad 3006 	strh.w	r3, [sp, #6]
 802560c:	eba8 0303 	sub.w	r3, r8, r3
 8025610:	b21b      	sxth	r3, r3
 8025612:	4604      	mov	r4, r0
 8025614:	2b00      	cmp	r3, #0
 8025616:	4617      	mov	r7, r2
 8025618:	4a18      	ldr	r2, [pc, #96]	; (802567c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802561a:	9200      	str	r2, [sp, #0]
 802561c:	bfb8      	it	lt
 802561e:	425b      	neglt	r3, r3
 8025620:	8aa2      	ldrh	r2, [r4, #20]
 8025622:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8025626:	f8ad 800a 	strh.w	r8, [sp, #10]
 802562a:	b21b      	sxth	r3, r3
 802562c:	460e      	mov	r6, r1
 802562e:	4293      	cmp	r3, r2
 8025630:	88c1      	ldrh	r1, [r0, #6]
 8025632:	f8ad 1008 	strh.w	r1, [sp, #8]
 8025636:	f04f 0000 	mov.w	r0, #0
 802563a:	f88d 0004 	strb.w	r0, [sp, #4]
 802563e:	f8ad 500c 	strh.w	r5, [sp, #12]
 8025642:	dc07      	bgt.n	8025654 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8025644:	1a69      	subs	r1, r5, r1
 8025646:	b209      	sxth	r1, r1
 8025648:	2900      	cmp	r1, #0
 802564a:	bfb8      	it	lt
 802564c:	4249      	neglt	r1, r1
 802564e:	b209      	sxth	r1, r1
 8025650:	428a      	cmp	r2, r1
 8025652:	da10      	bge.n	8025676 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8025654:	6920      	ldr	r0, [r4, #16]
 8025656:	6803      	ldr	r3, [r0, #0]
 8025658:	4669      	mov	r1, sp
 802565a:	685b      	ldr	r3, [r3, #4]
 802565c:	4798      	blx	r3
 802565e:	eba8 0606 	sub.w	r6, r8, r6
 8025662:	2300      	movs	r3, #0
 8025664:	1bef      	subs	r7, r5, r7
 8025666:	2001      	movs	r0, #1
 8025668:	8123      	strh	r3, [r4, #8]
 802566a:	8166      	strh	r6, [r4, #10]
 802566c:	81a7      	strh	r7, [r4, #12]
 802566e:	f8a4 8004 	strh.w	r8, [r4, #4]
 8025672:	80e5      	strh	r5, [r4, #6]
 8025674:	73a0      	strb	r0, [r4, #14]
 8025676:	b004      	add	sp, #16
 8025678:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802567c:	0802ca74 	.word	0x0802ca74

08025680 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8025680:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025682:	461e      	mov	r6, r3
 8025684:	1e4b      	subs	r3, r1, #1
 8025686:	2b01      	cmp	r3, #1
 8025688:	b085      	sub	sp, #20
 802568a:	4604      	mov	r4, r0
 802568c:	460d      	mov	r5, r1
 802568e:	4617      	mov	r7, r2
 8025690:	d84b      	bhi.n	802572a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8025692:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8025696:	1cd3      	adds	r3, r2, #3
 8025698:	b29b      	uxth	r3, r3
 802569a:	2b06      	cmp	r3, #6
 802569c:	d916      	bls.n	80256cc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 802569e:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8025740 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80256a2:	f8cd c004 	str.w	ip, [sp, #4]
 80256a6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80256aa:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80256ae:	6900      	ldr	r0, [r0, #16]
 80256b0:	f8ad 100c 	strh.w	r1, [sp, #12]
 80256b4:	f04f 0c00 	mov.w	ip, #0
 80256b8:	f88d c008 	strb.w	ip, [sp, #8]
 80256bc:	f8ad 200a 	strh.w	r2, [sp, #10]
 80256c0:	f8ad 300e 	strh.w	r3, [sp, #14]
 80256c4:	6803      	ldr	r3, [r0, #0]
 80256c6:	a901      	add	r1, sp, #4
 80256c8:	689b      	ldr	r3, [r3, #8]
 80256ca:	4798      	blx	r3
 80256cc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80256d0:	1cd3      	adds	r3, r2, #3
 80256d2:	b29b      	uxth	r3, r3
 80256d4:	2b06      	cmp	r3, #6
 80256d6:	d916      	bls.n	8025706 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80256d8:	f8df c064 	ldr.w	ip, [pc, #100]	; 8025740 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80256dc:	f8cd c004 	str.w	ip, [sp, #4]
 80256e0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80256e4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80256e8:	6920      	ldr	r0, [r4, #16]
 80256ea:	f8ad 100c 	strh.w	r1, [sp, #12]
 80256ee:	f04f 0c01 	mov.w	ip, #1
 80256f2:	f88d c008 	strb.w	ip, [sp, #8]
 80256f6:	f8ad 200a 	strh.w	r2, [sp, #10]
 80256fa:	f8ad 300e 	strh.w	r3, [sp, #14]
 80256fe:	6803      	ldr	r3, [r0, #0]
 8025700:	a901      	add	r1, sp, #4
 8025702:	689b      	ldr	r3, [r3, #8]
 8025704:	4798      	blx	r3
 8025706:	4b0d      	ldr	r3, [pc, #52]	; (802573c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8025708:	9301      	str	r3, [sp, #4]
 802570a:	6920      	ldr	r0, [r4, #16]
 802570c:	f88d 5008 	strb.w	r5, [sp, #8]
 8025710:	2300      	movs	r3, #0
 8025712:	f8ad 700a 	strh.w	r7, [sp, #10]
 8025716:	f8ad 600c 	strh.w	r6, [sp, #12]
 802571a:	f8ad 300e 	strh.w	r3, [sp, #14]
 802571e:	6803      	ldr	r3, [r0, #0]
 8025720:	a901      	add	r1, sp, #4
 8025722:	681b      	ldr	r3, [r3, #0]
 8025724:	4798      	blx	r3
 8025726:	b005      	add	sp, #20
 8025728:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802572a:	2900      	cmp	r1, #0
 802572c:	d1eb      	bne.n	8025706 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802572e:	80a2      	strh	r2, [r4, #4]
 8025730:	80c6      	strh	r6, [r0, #6]
 8025732:	60a1      	str	r1, [r4, #8]
 8025734:	81a1      	strh	r1, [r4, #12]
 8025736:	73a1      	strb	r1, [r4, #14]
 8025738:	e7e5      	b.n	8025706 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802573a:	bf00      	nop
 802573c:	0802ca60 	.word	0x0802ca60
 8025740:	0802ca88 	.word	0x0802ca88

08025744 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8025744:	10c9      	asrs	r1, r1, #3
 8025746:	2900      	cmp	r1, #0
 8025748:	bfb8      	it	lt
 802574a:	4249      	neglt	r1, r1
 802574c:	2801      	cmp	r0, #1
 802574e:	d108      	bne.n	8025762 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8025750:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8025754:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8025758:	4601      	mov	r1, r0
 802575a:	dd02      	ble.n	8025762 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 802575c:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8025760:	4770      	bx	lr
 8025762:	29ff      	cmp	r1, #255	; 0xff
 8025764:	bfa8      	it	ge
 8025766:	21ff      	movge	r1, #255	; 0xff
 8025768:	4608      	mov	r0, r1
 802576a:	4770      	bx	lr

0802576c <_ZN8touchgfx10Rasterizer6lineToEii>:
 802576c:	b410      	push	{r4}
 802576e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8025772:	429c      	cmp	r4, r3
 8025774:	d803      	bhi.n	802577e <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8025776:	f85d 4b04 	ldr.w	r4, [sp], #4
 802577a:	f7ed bae3 	b.w	8012d44 <_ZN8touchgfx7Outline6lineToEii>
 802577e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025782:	4770      	bx	lr

08025784 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8025784:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025788:	b08b      	sub	sp, #44	; 0x2c
 802578a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802578e:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8025792:	9308      	str	r3, [sp, #32]
 8025794:	4606      	mov	r6, r0
 8025796:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 802579a:	9309      	str	r3, [sp, #36]	; 0x24
 802579c:	468a      	mov	sl, r1
 802579e:	f7ed fc3e 	bl	801301e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 80257a2:	68b5      	ldr	r5, [r6, #8]
 80257a4:	4604      	mov	r4, r0
 80257a6:	2d00      	cmp	r5, #0
 80257a8:	d044      	beq.n	8025834 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80257aa:	6873      	ldr	r3, [r6, #4]
 80257ac:	42ab      	cmp	r3, r5
 80257ae:	d33d      	bcc.n	802582c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 80257b0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80257b4:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 80257b8:	eb02 0b03 	add.w	fp, r2, r3
 80257bc:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 80257c0:	fb02 1203 	mla	r2, r2, r3, r1
 80257c4:	9205      	str	r2, [sp, #20]
 80257c6:	1e6a      	subs	r2, r5, #1
 80257c8:	9204      	str	r2, [sp, #16]
 80257ca:	f04f 0800 	mov.w	r8, #0
 80257ce:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 80257d2:	f9b4 7000 	ldrsh.w	r7, [r4]
 80257d6:	454b      	cmp	r3, r9
 80257d8:	463a      	mov	r2, r7
 80257da:	d008      	beq.n	80257ee <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 80257dc:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 80257e0:	eb03 0b09 	add.w	fp, r3, r9
 80257e4:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 80257e8:	fb03 1309 	mla	r3, r3, r9, r1
 80257ec:	9305      	str	r3, [sp, #20]
 80257ee:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80257f2:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80257f6:	4498      	add	r8, r3
 80257f8:	9b04      	ldr	r3, [sp, #16]
 80257fa:	3b01      	subs	r3, #1
 80257fc:	9304      	str	r3, [sp, #16]
 80257fe:	9b04      	ldr	r3, [sp, #16]
 8025800:	3301      	adds	r3, #1
 8025802:	d015      	beq.n	8025830 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8025804:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8025808:	42bb      	cmp	r3, r7
 802580a:	d117      	bne.n	802583c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 802580c:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8025810:	9b04      	ldr	r3, [sp, #16]
 8025812:	4548      	cmp	r0, r9
 8025814:	f103 33ff 	add.w	r3, r3, #4294967295
 8025818:	d17f      	bne.n	802591a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802581a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 802581e:	4401      	add	r1, r0
 8025820:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8025824:	4480      	add	r8, r0
 8025826:	e7e9      	b.n	80257fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8025828:	461f      	mov	r7, r3
 802582a:	e044      	b.n	80258b6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 802582c:	2000      	movs	r0, #0
 802582e:	e002      	b.n	8025836 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8025830:	2900      	cmp	r1, #0
 8025832:	d16f      	bne.n	8025914 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8025834:	2001      	movs	r0, #1
 8025836:	b00b      	add	sp, #44	; 0x2c
 8025838:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802583c:	2900      	cmp	r1, #0
 802583e:	d030      	beq.n	80258a2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8025840:	2f00      	cmp	r7, #0
 8025842:	db29      	blt.n	8025898 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8025844:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8025848:	42bb      	cmp	r3, r7
 802584a:	dd25      	ble.n	8025898 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802584c:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8025850:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8025854:	f7ff ff76 	bl	8025744 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8025858:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802585a:	fb10 f003 	smulbb	r0, r0, r3
 802585e:	b280      	uxth	r0, r0
 8025860:	1c41      	adds	r1, r0, #1
 8025862:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025866:	1209      	asrs	r1, r1, #8
 8025868:	f011 0fff 	tst.w	r1, #255	; 0xff
 802586c:	d014      	beq.n	8025898 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802586e:	9808      	ldr	r0, [sp, #32]
 8025870:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8025872:	b2c9      	uxtb	r1, r1
 8025874:	b2ba      	uxth	r2, r7
 8025876:	9102      	str	r1, [sp, #8]
 8025878:	2101      	movs	r1, #1
 802587a:	4413      	add	r3, r2
 802587c:	9101      	str	r1, [sp, #4]
 802587e:	4402      	add	r2, r0
 8025880:	fa0f f18b 	sxth.w	r1, fp
 8025884:	f8da 0000 	ldr.w	r0, [sl]
 8025888:	9100      	str	r1, [sp, #0]
 802588a:	6941      	ldr	r1, [r0, #20]
 802588c:	b21b      	sxth	r3, r3
 802588e:	460d      	mov	r5, r1
 8025890:	b212      	sxth	r2, r2
 8025892:	9905      	ldr	r1, [sp, #20]
 8025894:	4650      	mov	r0, sl
 8025896:	47a8      	blx	r5
 8025898:	9b04      	ldr	r3, [sp, #16]
 802589a:	3301      	adds	r3, #1
 802589c:	f107 0201 	add.w	r2, r7, #1
 80258a0:	d0c8      	beq.n	8025834 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80258a2:	f9b4 7000 	ldrsh.w	r7, [r4]
 80258a6:	1abb      	subs	r3, r7, r2
 80258a8:	2b00      	cmp	r3, #0
 80258aa:	dd31      	ble.n	8025910 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80258ac:	2a00      	cmp	r2, #0
 80258ae:	dabb      	bge.n	8025828 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 80258b0:	2f00      	cmp	r7, #0
 80258b2:	dd2d      	ble.n	8025910 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80258b4:	2200      	movs	r2, #0
 80258b6:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80258ba:	19d1      	adds	r1, r2, r7
 80258bc:	4299      	cmp	r1, r3
 80258be:	db02      	blt.n	80258c6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 80258c0:	1a9f      	subs	r7, r3, r2
 80258c2:	2f00      	cmp	r7, #0
 80258c4:	dd24      	ble.n	8025910 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80258c6:	ea4f 1188 	mov.w	r1, r8, lsl #6
 80258ca:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80258ce:	f7ff ff39 	bl	8025744 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80258d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80258d4:	fb10 f003 	smulbb	r0, r0, r3
 80258d8:	b280      	uxth	r0, r0
 80258da:	1c41      	adds	r1, r0, #1
 80258dc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80258e0:	1209      	asrs	r1, r1, #8
 80258e2:	f011 0fff 	tst.w	r1, #255	; 0xff
 80258e6:	d013      	beq.n	8025910 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80258e8:	9808      	ldr	r0, [sp, #32]
 80258ea:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 80258ec:	b292      	uxth	r2, r2
 80258ee:	b2c9      	uxtb	r1, r1
 80258f0:	4413      	add	r3, r2
 80258f2:	9102      	str	r1, [sp, #8]
 80258f4:	4402      	add	r2, r0
 80258f6:	b23f      	sxth	r7, r7
 80258f8:	f8da 0000 	ldr.w	r0, [sl]
 80258fc:	9701      	str	r7, [sp, #4]
 80258fe:	fa0f f18b 	sxth.w	r1, fp
 8025902:	9100      	str	r1, [sp, #0]
 8025904:	6947      	ldr	r7, [r0, #20]
 8025906:	9905      	ldr	r1, [sp, #20]
 8025908:	b21b      	sxth	r3, r3
 802590a:	b212      	sxth	r2, r2
 802590c:	4650      	mov	r0, sl
 802590e:	47b8      	blx	r7
 8025910:	464b      	mov	r3, r9
 8025912:	e75c      	b.n	80257ce <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8025914:	2f00      	cmp	r7, #0
 8025916:	da95      	bge.n	8025844 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8025918:	e78c      	b.n	8025834 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802591a:	2900      	cmp	r1, #0
 802591c:	d0f8      	beq.n	8025910 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802591e:	e78f      	b.n	8025840 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08025920 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8025920:	4b4b      	ldr	r3, [pc, #300]	; (8025a50 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8025922:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8025926:	2500      	movs	r5, #0
 8025928:	f100 0620 	add.w	r6, r0, #32
 802592c:	4604      	mov	r4, r0
 802592e:	e9c0 3100 	strd	r3, r1, [r0]
 8025932:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8025936:	e9c0 5504 	strd	r5, r5, [r0, #16]
 802593a:	e9c0 5506 	strd	r5, r5, [r0, #24]
 802593e:	f100 0718 	add.w	r7, r0, #24
 8025942:	4630      	mov	r0, r6
 8025944:	4690      	mov	r8, r2
 8025946:	f7ec fd35 	bl	80123b4 <_ZN8touchgfx7OutlineC1Ev>
 802594a:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 802594e:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8025952:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8025956:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 802595a:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 802595e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8025962:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8025966:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 802596a:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 802596e:	f9b8 2000 	ldrsh.w	r2, [r8]
 8025972:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8025976:	f8d4 c004 	ldr.w	ip, [r4, #4]
 802597a:	9500      	str	r5, [sp, #0]
 802597c:	4410      	add	r0, r2
 802597e:	b280      	uxth	r0, r0
 8025980:	fa0f fa80 	sxth.w	sl, r0
 8025984:	45aa      	cmp	sl, r5
 8025986:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 802598a:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 802598e:	dd5c      	ble.n	8025a4a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025990:	4591      	cmp	r9, r2
 8025992:	dd5a      	ble.n	8025a4a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025994:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8025998:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 802599c:	440b      	add	r3, r1
 802599e:	b29b      	uxth	r3, r3
 80259a0:	b21d      	sxth	r5, r3
 80259a2:	2d00      	cmp	r5, #0
 80259a4:	dd51      	ble.n	8025a4a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80259a6:	458e      	cmp	lr, r1
 80259a8:	dd4f      	ble.n	8025a4a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80259aa:	45d1      	cmp	r9, sl
 80259ac:	bfb8      	it	lt
 80259ae:	fa1f f089 	uxthlt.w	r0, r9
 80259b2:	45ae      	cmp	lr, r5
 80259b4:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80259b8:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 80259bc:	bfb8      	it	lt
 80259be:	fa1f f38e 	uxthlt.w	r3, lr
 80259c2:	1a80      	subs	r0, r0, r2
 80259c4:	1a5b      	subs	r3, r3, r1
 80259c6:	f8ad 0004 	strh.w	r0, [sp, #4]
 80259ca:	f8ad 3006 	strh.w	r3, [sp, #6]
 80259ce:	f8ad 2000 	strh.w	r2, [sp]
 80259d2:	f8ad 1002 	strh.w	r1, [sp, #2]
 80259d6:	466d      	mov	r5, sp
 80259d8:	e895 0003 	ldmia.w	r5, {r0, r1}
 80259dc:	e887 0003 	stmia.w	r7, {r0, r1}
 80259e0:	f8dc 3000 	ldr.w	r3, [ip]
 80259e4:	4660      	mov	r0, ip
 80259e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80259e8:	4639      	mov	r1, r7
 80259ea:	4798      	blx	r3
 80259ec:	6861      	ldr	r1, [r4, #4]
 80259ee:	4628      	mov	r0, r5
 80259f0:	3104      	adds	r1, #4
 80259f2:	f7ee fee5 	bl	80147c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80259f6:	4638      	mov	r0, r7
 80259f8:	f7ee fe9e 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80259fc:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8025a00:	f8bd 2000 	ldrh.w	r2, [sp]
 8025a04:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8025a08:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8025a0c:	4630      	mov	r0, r6
 8025a0e:	f7ec fcb5 	bl	801237c <_ZN8touchgfx7Outline5resetEv>
 8025a12:	f9bd 3000 	ldrsh.w	r3, [sp]
 8025a16:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8025a1a:	015b      	lsls	r3, r3, #5
 8025a1c:	60a3      	str	r3, [r4, #8]
 8025a1e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8025a22:	015b      	lsls	r3, r3, #5
 8025a24:	60e3      	str	r3, [r4, #12]
 8025a26:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8025a2a:	015b      	lsls	r3, r3, #5
 8025a2c:	6123      	str	r3, [r4, #16]
 8025a2e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8025a32:	015b      	lsls	r3, r3, #5
 8025a34:	6163      	str	r3, [r4, #20]
 8025a36:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8025a3a:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8025a3e:	4620      	mov	r0, r4
 8025a40:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8025a44:	b002      	add	sp, #8
 8025a46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025a4a:	2300      	movs	r3, #0
 8025a4c:	9301      	str	r3, [sp, #4]
 8025a4e:	e7c2      	b.n	80259d6 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8025a50:	0802cdac 	.word	0x0802cdac

08025a54 <_ZN8touchgfx6Canvas5closeEv>:
 8025a54:	b538      	push	{r3, r4, r5, lr}
 8025a56:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8025a5a:	4604      	mov	r4, r0
 8025a5c:	b193      	cbz	r3, 8025a84 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8025a5e:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8025a62:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8025a66:	4213      	tst	r3, r2
 8025a68:	d10c      	bne.n	8025a84 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8025a6a:	f100 0520 	add.w	r5, r0, #32
 8025a6e:	b123      	cbz	r3, 8025a7a <_ZN8touchgfx6Canvas5closeEv+0x26>
 8025a70:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8025a74:	4628      	mov	r0, r5
 8025a76:	f7ff fe79 	bl	802576c <_ZN8touchgfx10Rasterizer6lineToEii>
 8025a7a:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8025a7e:	4628      	mov	r0, r5
 8025a80:	f7ff fe74 	bl	802576c <_ZN8touchgfx10Rasterizer6lineToEii>
 8025a84:	2300      	movs	r3, #0
 8025a86:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8025a8a:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8025a8e:	4298      	cmp	r0, r3
 8025a90:	bf34      	ite	cc
 8025a92:	2000      	movcc	r0, #0
 8025a94:	2001      	movcs	r0, #1
 8025a96:	bd38      	pop	{r3, r4, r5, pc}

08025a98 <_ZN8touchgfx6Canvas6renderEh>:
 8025a98:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8025a9c:	4604      	mov	r4, r0
 8025a9e:	6840      	ldr	r0, [r0, #4]
 8025aa0:	6803      	ldr	r3, [r0, #0]
 8025aa2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8025aa4:	460d      	mov	r5, r1
 8025aa6:	4798      	blx	r3
 8025aa8:	fb10 f105 	smulbb	r1, r0, r5
 8025aac:	b289      	uxth	r1, r1
 8025aae:	1c4d      	adds	r5, r1, #1
 8025ab0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8025ab4:	122d      	asrs	r5, r5, #8
 8025ab6:	f000 809d 	beq.w	8025bf4 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8025aba:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8025abe:	2b00      	cmp	r3, #0
 8025ac0:	f000 8098 	beq.w	8025bf4 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8025ac4:	4620      	mov	r0, r4
 8025ac6:	f7ff ffc5 	bl	8025a54 <_ZN8touchgfx6Canvas5closeEv>
 8025aca:	4607      	mov	r7, r0
 8025acc:	2800      	cmp	r0, #0
 8025ace:	d048      	beq.n	8025b62 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8025ad0:	6863      	ldr	r3, [r4, #4]
 8025ad2:	4e49      	ldr	r6, [pc, #292]	; (8025bf8 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8025ad4:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8025ad6:	6837      	ldr	r7, [r6, #0]
 8025ad8:	6803      	ldr	r3, [r0, #0]
 8025ada:	689b      	ldr	r3, [r3, #8]
 8025adc:	4798      	blx	r3
 8025ade:	4601      	mov	r1, r0
 8025ae0:	4638      	mov	r0, r7
 8025ae2:	f7ea fdb9 	bl	8010658 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8025ae6:	4607      	mov	r7, r0
 8025ae8:	f7dd fd94 	bl	8003614 <_ZN8touchgfx3HAL3lcdEv>
 8025aec:	6803      	ldr	r3, [r0, #0]
 8025aee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8025af0:	4798      	blx	r3
 8025af2:	4680      	mov	r8, r0
 8025af4:	f7dd fd8e 	bl	8003614 <_ZN8touchgfx3HAL3lcdEv>
 8025af8:	6803      	ldr	r3, [r0, #0]
 8025afa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025afc:	4798      	blx	r3
 8025afe:	280b      	cmp	r0, #11
 8025b00:	d85d      	bhi.n	8025bbe <_ZN8touchgfx6Canvas6renderEh+0x126>
 8025b02:	e8df f000 	tbb	[pc, r0]
 8025b06:	5e53      	.short	0x5e53
 8025b08:	325c066e 	.word	0x325c066e
 8025b0c:	67676742 	.word	0x67676742
 8025b10:	6767      	.short	0x6767
 8025b12:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025b16:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8025b1a:	2208      	movs	r2, #8
 8025b1c:	fb91 f2f2 	sdiv	r2, r1, r2
 8025b20:	fb08 2303 	mla	r3, r8, r3, r2
 8025b24:	441f      	add	r7, r3
 8025b26:	424b      	negs	r3, r1
 8025b28:	f003 0307 	and.w	r3, r3, #7
 8025b2c:	f001 0107 	and.w	r1, r1, #7
 8025b30:	bf58      	it	pl
 8025b32:	4259      	negpl	r1, r3
 8025b34:	b2c9      	uxtb	r1, r1
 8025b36:	b2ed      	uxtb	r5, r5
 8025b38:	e9cd 1500 	strd	r1, r5, [sp]
 8025b3c:	6860      	ldr	r0, [r4, #4]
 8025b3e:	463a      	mov	r2, r7
 8025b40:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8025b42:	fa0f f388 	sxth.w	r3, r8
 8025b46:	f104 0020 	add.w	r0, r4, #32
 8025b4a:	f7ff fe1b 	bl	8025784 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8025b4e:	6863      	ldr	r3, [r4, #4]
 8025b50:	4607      	mov	r7, r0
 8025b52:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8025b54:	6803      	ldr	r3, [r0, #0]
 8025b56:	691b      	ldr	r3, [r3, #16]
 8025b58:	4798      	blx	r3
 8025b5a:	6830      	ldr	r0, [r6, #0]
 8025b5c:	6803      	ldr	r3, [r0, #0]
 8025b5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025b60:	4798      	blx	r3
 8025b62:	4638      	mov	r0, r7
 8025b64:	b002      	add	sp, #8
 8025b66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025b6a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025b6e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8025b72:	2204      	movs	r2, #4
 8025b74:	fb91 f2f2 	sdiv	r2, r1, r2
 8025b78:	fb08 2303 	mla	r3, r8, r3, r2
 8025b7c:	441f      	add	r7, r3
 8025b7e:	424b      	negs	r3, r1
 8025b80:	f003 0303 	and.w	r3, r3, #3
 8025b84:	f001 0103 	and.w	r1, r1, #3
 8025b88:	e7d2      	b.n	8025b30 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8025b8a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8025b8e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025b92:	2900      	cmp	r1, #0
 8025b94:	f04f 0202 	mov.w	r2, #2
 8025b98:	fb91 f2f2 	sdiv	r2, r1, r2
 8025b9c:	f001 0101 	and.w	r1, r1, #1
 8025ba0:	fb08 2303 	mla	r3, r8, r3, r2
 8025ba4:	441f      	add	r7, r3
 8025ba6:	bfb8      	it	lt
 8025ba8:	4249      	neglt	r1, r1
 8025baa:	e7c3      	b.n	8025b34 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8025bac:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025bb0:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8025bb4:	fb08 f303 	mul.w	r3, r8, r3
 8025bb8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8025bbc:	441f      	add	r7, r3
 8025bbe:	2100      	movs	r1, #0
 8025bc0:	e7b9      	b.n	8025b36 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8025bc2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025bc6:	fb08 f203 	mul.w	r2, r8, r3
 8025bca:	8b23      	ldrh	r3, [r4, #24]
 8025bcc:	2103      	movs	r1, #3
 8025bce:	fb13 2301 	smlabb	r3, r3, r1, r2
 8025bd2:	e7f3      	b.n	8025bbc <_ZN8touchgfx6Canvas6renderEh+0x124>
 8025bd4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025bd8:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8025bdc:	fb08 2303 	mla	r3, r8, r3, r2
 8025be0:	e7ec      	b.n	8025bbc <_ZN8touchgfx6Canvas6renderEh+0x124>
 8025be2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8025be6:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8025bea:	fb08 f303 	mul.w	r3, r8, r3
 8025bee:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8025bf2:	e7e3      	b.n	8025bbc <_ZN8touchgfx6Canvas6renderEh+0x124>
 8025bf4:	2701      	movs	r7, #1
 8025bf6:	e7b4      	b.n	8025b62 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8025bf8:	200137bc 	.word	0x200137bc

08025bfc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8025bfc:	b510      	push	{r4, lr}
 8025bfe:	4b07      	ldr	r3, [pc, #28]	; (8025c1c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8025c00:	781b      	ldrb	r3, [r3, #0]
 8025c02:	2b01      	cmp	r3, #1
 8025c04:	d108      	bne.n	8025c18 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8025c06:	6843      	ldr	r3, [r0, #4]
 8025c08:	6814      	ldr	r4, [r2, #0]
 8025c0a:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8025c0e:	680b      	ldr	r3, [r1, #0]
 8025c10:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8025c14:	6013      	str	r3, [r2, #0]
 8025c16:	600c      	str	r4, [r1, #0]
 8025c18:	bd10      	pop	{r4, pc}
 8025c1a:	bf00      	nop
 8025c1c:	200137b4 	.word	0x200137b4

08025c20 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8025c20:	b513      	push	{r0, r1, r4, lr}
 8025c22:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8025c26:	4604      	mov	r4, r0
 8025c28:	e9cd 2100 	strd	r2, r1, [sp]
 8025c2c:	b9a3      	cbnz	r3, 8025c58 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8025c2e:	466a      	mov	r2, sp
 8025c30:	a901      	add	r1, sp, #4
 8025c32:	4620      	mov	r0, r4
 8025c34:	f7ff ffe2 	bl	8025bfc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8025c38:	68a3      	ldr	r3, [r4, #8]
 8025c3a:	9901      	ldr	r1, [sp, #4]
 8025c3c:	9a00      	ldr	r2, [sp, #0]
 8025c3e:	1ac9      	subs	r1, r1, r3
 8025c40:	68e3      	ldr	r3, [r4, #12]
 8025c42:	9101      	str	r1, [sp, #4]
 8025c44:	1ad2      	subs	r2, r2, r3
 8025c46:	2a00      	cmp	r2, #0
 8025c48:	9200      	str	r2, [sp, #0]
 8025c4a:	da0b      	bge.n	8025c64 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8025c4c:	2301      	movs	r3, #1
 8025c4e:	2900      	cmp	r1, #0
 8025c50:	da0e      	bge.n	8025c70 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8025c52:	f043 0304 	orr.w	r3, r3, #4
 8025c56:	e013      	b.n	8025c80 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8025c58:	f7ff fefc 	bl	8025a54 <_ZN8touchgfx6Canvas5closeEv>
 8025c5c:	2800      	cmp	r0, #0
 8025c5e:	d1e6      	bne.n	8025c2e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8025c60:	b002      	add	sp, #8
 8025c62:	bd10      	pop	{r4, pc}
 8025c64:	6963      	ldr	r3, [r4, #20]
 8025c66:	429a      	cmp	r2, r3
 8025c68:	bfac      	ite	ge
 8025c6a:	2302      	movge	r3, #2
 8025c6c:	2300      	movlt	r3, #0
 8025c6e:	e7ee      	b.n	8025c4e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8025c70:	6920      	ldr	r0, [r4, #16]
 8025c72:	4281      	cmp	r1, r0
 8025c74:	bfac      	ite	ge
 8025c76:	2008      	movge	r0, #8
 8025c78:	2000      	movlt	r0, #0
 8025c7a:	4318      	orrs	r0, r3
 8025c7c:	b2c3      	uxtb	r3, r0
 8025c7e:	b158      	cbz	r0, 8025c98 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8025c80:	2200      	movs	r2, #0
 8025c82:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8025c86:	9901      	ldr	r1, [sp, #4]
 8025c88:	9a00      	ldr	r2, [sp, #0]
 8025c8a:	66a1      	str	r1, [r4, #104]	; 0x68
 8025c8c:	66e2      	str	r2, [r4, #108]	; 0x6c
 8025c8e:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8025c92:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8025c96:	e7e3      	b.n	8025c60 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8025c98:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8025c9c:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8025ca0:	4298      	cmp	r0, r3
 8025ca2:	d803      	bhi.n	8025cac <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8025ca4:	f104 0020 	add.w	r0, r4, #32
 8025ca8:	f7ed f866 	bl	8012d78 <_ZN8touchgfx7Outline6moveToEii>
 8025cac:	2301      	movs	r3, #1
 8025cae:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8025cb2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8025cb6:	2300      	movs	r3, #0
 8025cb8:	e7e5      	b.n	8025c86 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08025cba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8025cba:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8025cbc:	ab02      	add	r3, sp, #8
 8025cbe:	4604      	mov	r4, r0
 8025cc0:	f843 2d08 	str.w	r2, [r3, #-8]!
 8025cc4:	9101      	str	r1, [sp, #4]
 8025cc6:	461a      	mov	r2, r3
 8025cc8:	a901      	add	r1, sp, #4
 8025cca:	f7ff ff97 	bl	8025bfc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8025cce:	68a3      	ldr	r3, [r4, #8]
 8025cd0:	9901      	ldr	r1, [sp, #4]
 8025cd2:	9a00      	ldr	r2, [sp, #0]
 8025cd4:	1ac9      	subs	r1, r1, r3
 8025cd6:	68e3      	ldr	r3, [r4, #12]
 8025cd8:	9101      	str	r1, [sp, #4]
 8025cda:	1ad2      	subs	r2, r2, r3
 8025cdc:	2a00      	cmp	r2, #0
 8025cde:	9200      	str	r2, [sp, #0]
 8025ce0:	db1c      	blt.n	8025d1c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8025ce2:	6963      	ldr	r3, [r4, #20]
 8025ce4:	429a      	cmp	r2, r3
 8025ce6:	bfac      	ite	ge
 8025ce8:	2002      	movge	r0, #2
 8025cea:	2000      	movlt	r0, #0
 8025cec:	2900      	cmp	r1, #0
 8025cee:	db17      	blt.n	8025d20 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8025cf0:	6923      	ldr	r3, [r4, #16]
 8025cf2:	4299      	cmp	r1, r3
 8025cf4:	bfac      	ite	ge
 8025cf6:	2308      	movge	r3, #8
 8025cf8:	2300      	movlt	r3, #0
 8025cfa:	4303      	orrs	r3, r0
 8025cfc:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8025d00:	b2dd      	uxtb	r5, r3
 8025d02:	b978      	cbnz	r0, 8025d24 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8025d04:	f104 0020 	add.w	r0, r4, #32
 8025d08:	f7ff fd30 	bl	802576c <_ZN8touchgfx10Rasterizer6lineToEii>
 8025d0c:	9b01      	ldr	r3, [sp, #4]
 8025d0e:	65e3      	str	r3, [r4, #92]	; 0x5c
 8025d10:	9b00      	ldr	r3, [sp, #0]
 8025d12:	6623      	str	r3, [r4, #96]	; 0x60
 8025d14:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8025d18:	b002      	add	sp, #8
 8025d1a:	bd70      	pop	{r4, r5, r6, pc}
 8025d1c:	2001      	movs	r0, #1
 8025d1e:	e7e5      	b.n	8025cec <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8025d20:	2304      	movs	r3, #4
 8025d22:	e7ea      	b.n	8025cfa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8025d24:	b113      	cbz	r3, 8025d2c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8025d26:	ea10 0305 	ands.w	r3, r0, r5
 8025d2a:	d11c      	bne.n	8025d66 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8025d2c:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8025d30:	f104 0620 	add.w	r6, r4, #32
 8025d34:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8025d38:	b98b      	cbnz	r3, 8025d5e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8025d3a:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8025d3e:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8025d42:	4298      	cmp	r0, r3
 8025d44:	d802      	bhi.n	8025d4c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8025d46:	4630      	mov	r0, r6
 8025d48:	f7ed f816 	bl	8012d78 <_ZN8touchgfx7Outline6moveToEii>
 8025d4c:	2301      	movs	r3, #1
 8025d4e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8025d52:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8025d56:	e9dd 2100 	ldrd	r2, r1, [sp]
 8025d5a:	4630      	mov	r0, r6
 8025d5c:	e7d4      	b.n	8025d08 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8025d5e:	4630      	mov	r0, r6
 8025d60:	f7ff fd04 	bl	802576c <_ZN8touchgfx10Rasterizer6lineToEii>
 8025d64:	e7f7      	b.n	8025d56 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8025d66:	461d      	mov	r5, r3
 8025d68:	e7d0      	b.n	8025d0c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08025d6c <_ZN8touchgfx6CanvasD1Ev>:
 8025d6c:	b510      	push	{r4, lr}
 8025d6e:	4b04      	ldr	r3, [pc, #16]	; (8025d80 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8025d70:	4604      	mov	r4, r0
 8025d72:	f840 3b20 	str.w	r3, [r0], #32
 8025d76:	f7ec faf9 	bl	801236c <_ZN8touchgfx7OutlineD1Ev>
 8025d7a:	4620      	mov	r0, r4
 8025d7c:	bd10      	pop	{r4, pc}
 8025d7e:	bf00      	nop
 8025d80:	0802cdac 	.word	0x0802cdac

08025d84 <_ZN8touchgfx6CanvasD0Ev>:
 8025d84:	b510      	push	{r4, lr}
 8025d86:	4604      	mov	r4, r0
 8025d88:	f7ff fff0 	bl	8025d6c <_ZN8touchgfx6CanvasD1Ev>
 8025d8c:	4620      	mov	r0, r4
 8025d8e:	2170      	movs	r1, #112	; 0x70
 8025d90:	f001 fbe5 	bl	802755e <_ZdlPvj>
 8025d94:	4620      	mov	r0, r4
 8025d96:	bd10      	pop	{r4, pc}

08025d98 <_ZN8touchgfx6CircleD1Ev>:
 8025d98:	4770      	bx	lr

08025d9a <_ZN8touchgfx6CircleD0Ev>:
 8025d9a:	b510      	push	{r4, lr}
 8025d9c:	2148      	movs	r1, #72	; 0x48
 8025d9e:	4604      	mov	r4, r0
 8025da0:	f001 fbdd 	bl	802755e <_ZdlPvj>
 8025da4:	4620      	mov	r0, r4
 8025da6:	bd10      	pop	{r4, pc}

08025da8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8025da8:	b508      	push	{r3, lr}
 8025daa:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8025dae:	f7ea ffa9 	bl	8010d04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025db2:	bd08      	pop	{r3, pc}

08025db4 <_ZN8touchgfx6CircleC1Ev>:
 8025db4:	b510      	push	{r4, lr}
 8025db6:	4604      	mov	r4, r0
 8025db8:	f7ea fe40 	bl	8010a3c <_ZN8touchgfx12CanvasWidgetC1Ev>
 8025dbc:	4b08      	ldr	r3, [pc, #32]	; (8025de0 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8025dbe:	6023      	str	r3, [r4, #0]
 8025dc0:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8025dc4:	2300      	movs	r3, #0
 8025dc6:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 8025dca:	f24b 4205 	movw	r2, #46085	; 0xb405
 8025dce:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8025dd2:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8025dd6:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8025dda:	60a3      	str	r3, [r4, #8]
 8025ddc:	4620      	mov	r0, r4
 8025dde:	bd10      	pop	{r4, pc}
 8025de0:	0802cdc0 	.word	0x0802cdc0

08025de4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8025de4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025de8:	428a      	cmp	r2, r1
 8025dea:	4680      	mov	r8, r0
 8025dec:	4610      	mov	r0, r2
 8025dee:	4699      	mov	r9, r3
 8025df0:	bfa6      	itte	ge
 8025df2:	460a      	movge	r2, r1
 8025df4:	4603      	movge	r3, r0
 8025df6:	460b      	movlt	r3, r1
 8025df8:	1a99      	subs	r1, r3, r2
 8025dfa:	b085      	sub	sp, #20
 8025dfc:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8025e00:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 8025e04:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025e06:	bfa4      	itt	ge
 8025e08:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8025e0c:	2200      	movge	r2, #0
 8025e0e:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 8025e12:	9300      	str	r3, [sp, #0]
 8025e14:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 8025e18:	f102 0b01 	add.w	fp, r2, #1
 8025e1c:	2c00      	cmp	r4, #0
 8025e1e:	f040 80af 	bne.w	8025f80 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8025e22:	4610      	mov	r0, r2
 8025e24:	9201      	str	r2, [sp, #4]
 8025e26:	f7ea ff6d 	bl	8010d04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025e2a:	a903      	add	r1, sp, #12
 8025e2c:	9003      	str	r0, [sp, #12]
 8025e2e:	4650      	mov	r0, sl
 8025e30:	f7ea fe30 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025e34:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8025e38:	9a01      	ldr	r2, [sp, #4]
 8025e3a:	4408      	add	r0, r1
 8025e3c:	f8d9 1000 	ldr.w	r1, [r9]
 8025e40:	4281      	cmp	r1, r0
 8025e42:	bfc8      	it	gt
 8025e44:	f8c9 0000 	strgt.w	r0, [r9]
 8025e48:	6839      	ldr	r1, [r7, #0]
 8025e4a:	4288      	cmp	r0, r1
 8025e4c:	bfc8      	it	gt
 8025e4e:	6038      	strgt	r0, [r7, #0]
 8025e50:	4610      	mov	r0, r2
 8025e52:	f7ff ffa9 	bl	8025da8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025e56:	a903      	add	r1, sp, #12
 8025e58:	9003      	str	r0, [sp, #12]
 8025e5a:	4650      	mov	r0, sl
 8025e5c:	f7ea fe1a 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025e60:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8025e64:	1a10      	subs	r0, r2, r0
 8025e66:	6832      	ldr	r2, [r6, #0]
 8025e68:	4282      	cmp	r2, r0
 8025e6a:	bfc8      	it	gt
 8025e6c:	6030      	strgt	r0, [r6, #0]
 8025e6e:	682a      	ldr	r2, [r5, #0]
 8025e70:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8025e74:	4290      	cmp	r0, r2
 8025e76:	fb9b f2f1 	sdiv	r2, fp, r1
 8025e7a:	fb01 b212 	mls	r2, r1, r2, fp
 8025e7e:	eba1 0202 	sub.w	r2, r1, r2
 8025e82:	bfc8      	it	gt
 8025e84:	6028      	strgt	r0, [r5, #0]
 8025e86:	fb92 f0f1 	sdiv	r0, r2, r1
 8025e8a:	fb01 2210 	mls	r2, r1, r0, r2
 8025e8e:	4493      	add	fp, r2
 8025e90:	9b00      	ldr	r3, [sp, #0]
 8025e92:	455b      	cmp	r3, fp
 8025e94:	db2a      	blt.n	8025eec <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 8025e96:	4658      	mov	r0, fp
 8025e98:	f7ea ff34 	bl	8010d04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025e9c:	a903      	add	r1, sp, #12
 8025e9e:	9003      	str	r0, [sp, #12]
 8025ea0:	4650      	mov	r0, sl
 8025ea2:	f7ea fdf7 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025ea6:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8025eaa:	4410      	add	r0, r2
 8025eac:	f8d9 2000 	ldr.w	r2, [r9]
 8025eb0:	4282      	cmp	r2, r0
 8025eb2:	bfc8      	it	gt
 8025eb4:	f8c9 0000 	strgt.w	r0, [r9]
 8025eb8:	683a      	ldr	r2, [r7, #0]
 8025eba:	4290      	cmp	r0, r2
 8025ebc:	bfc8      	it	gt
 8025ebe:	6038      	strgt	r0, [r7, #0]
 8025ec0:	4658      	mov	r0, fp
 8025ec2:	f7ff ff71 	bl	8025da8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025ec6:	a903      	add	r1, sp, #12
 8025ec8:	9003      	str	r0, [sp, #12]
 8025eca:	4650      	mov	r0, sl
 8025ecc:	f7ea fde2 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025ed0:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8025ed4:	1a10      	subs	r0, r2, r0
 8025ed6:	6832      	ldr	r2, [r6, #0]
 8025ed8:	4282      	cmp	r2, r0
 8025eda:	bfc8      	it	gt
 8025edc:	6030      	strgt	r0, [r6, #0]
 8025ede:	682a      	ldr	r2, [r5, #0]
 8025ee0:	4290      	cmp	r0, r2
 8025ee2:	bfc8      	it	gt
 8025ee4:	6028      	strgt	r0, [r5, #0]
 8025ee6:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8025eea:	e7d1      	b.n	8025e90 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8025eec:	9b00      	ldr	r3, [sp, #0]
 8025eee:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8025ef2:	455b      	cmp	r3, fp
 8025ef4:	dd27      	ble.n	8025f46 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 8025ef6:	4618      	mov	r0, r3
 8025ef8:	f7ea ff04 	bl	8010d04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025efc:	a903      	add	r1, sp, #12
 8025efe:	9003      	str	r0, [sp, #12]
 8025f00:	4650      	mov	r0, sl
 8025f02:	f7ea fdc7 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025f06:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8025f0a:	4410      	add	r0, r2
 8025f0c:	f8d9 2000 	ldr.w	r2, [r9]
 8025f10:	4282      	cmp	r2, r0
 8025f12:	bfc8      	it	gt
 8025f14:	f8c9 0000 	strgt.w	r0, [r9]
 8025f18:	683a      	ldr	r2, [r7, #0]
 8025f1a:	4290      	cmp	r0, r2
 8025f1c:	bfc8      	it	gt
 8025f1e:	6038      	strgt	r0, [r7, #0]
 8025f20:	9800      	ldr	r0, [sp, #0]
 8025f22:	f7ff ff41 	bl	8025da8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025f26:	a903      	add	r1, sp, #12
 8025f28:	9003      	str	r0, [sp, #12]
 8025f2a:	4650      	mov	r0, sl
 8025f2c:	f7ea fdb2 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025f30:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8025f34:	1a10      	subs	r0, r2, r0
 8025f36:	6832      	ldr	r2, [r6, #0]
 8025f38:	4282      	cmp	r2, r0
 8025f3a:	bfc8      	it	gt
 8025f3c:	6030      	strgt	r0, [r6, #0]
 8025f3e:	682a      	ldr	r2, [r5, #0]
 8025f40:	4290      	cmp	r0, r2
 8025f42:	bfc8      	it	gt
 8025f44:	6028      	strgt	r0, [r5, #0]
 8025f46:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8025f4a:	f8d9 1000 	ldr.w	r1, [r9]
 8025f4e:	4291      	cmp	r1, r2
 8025f50:	bfc8      	it	gt
 8025f52:	f8c9 2000 	strgt.w	r2, [r9]
 8025f56:	683a      	ldr	r2, [r7, #0]
 8025f58:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 8025f5c:	429a      	cmp	r2, r3
 8025f5e:	bfb8      	it	lt
 8025f60:	603b      	strlt	r3, [r7, #0]
 8025f62:	6832      	ldr	r2, [r6, #0]
 8025f64:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8025f68:	429a      	cmp	r2, r3
 8025f6a:	bfc8      	it	gt
 8025f6c:	6033      	strgt	r3, [r6, #0]
 8025f6e:	682a      	ldr	r2, [r5, #0]
 8025f70:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8025f74:	429a      	cmp	r2, r3
 8025f76:	da00      	bge.n	8025f7a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8025f78:	602b      	str	r3, [r5, #0]
 8025f7a:	b005      	add	sp, #20
 8025f7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025f80:	2002      	movs	r0, #2
 8025f82:	3401      	adds	r4, #1
 8025f84:	fb94 f4f0 	sdiv	r4, r4, r0
 8025f88:	4610      	mov	r0, r2
 8025f8a:	9201      	str	r2, [sp, #4]
 8025f8c:	f7ea feba 	bl	8010d04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8025f90:	a903      	add	r1, sp, #12
 8025f92:	9003      	str	r0, [sp, #12]
 8025f94:	4650      	mov	r0, sl
 8025f96:	f7ea fd7d 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025f9a:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8025f9e:	9a01      	ldr	r2, [sp, #4]
 8025fa0:	4408      	add	r0, r1
 8025fa2:	f8d9 1000 	ldr.w	r1, [r9]
 8025fa6:	1b03      	subs	r3, r0, r4
 8025fa8:	4299      	cmp	r1, r3
 8025faa:	bfc8      	it	gt
 8025fac:	f8c9 3000 	strgt.w	r3, [r9]
 8025fb0:	6839      	ldr	r1, [r7, #0]
 8025fb2:	428b      	cmp	r3, r1
 8025fb4:	bfc8      	it	gt
 8025fb6:	603b      	strgt	r3, [r7, #0]
 8025fb8:	f8d9 1000 	ldr.w	r1, [r9]
 8025fbc:	4420      	add	r0, r4
 8025fbe:	4281      	cmp	r1, r0
 8025fc0:	bfc8      	it	gt
 8025fc2:	f8c9 0000 	strgt.w	r0, [r9]
 8025fc6:	6839      	ldr	r1, [r7, #0]
 8025fc8:	4288      	cmp	r0, r1
 8025fca:	bfc8      	it	gt
 8025fcc:	6038      	strgt	r0, [r7, #0]
 8025fce:	4610      	mov	r0, r2
 8025fd0:	f7ff feea 	bl	8025da8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8025fd4:	a903      	add	r1, sp, #12
 8025fd6:	9003      	str	r0, [sp, #12]
 8025fd8:	4650      	mov	r0, sl
 8025fda:	f7ea fd5b 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8025fde:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8025fe2:	1a10      	subs	r0, r2, r0
 8025fe4:	6832      	ldr	r2, [r6, #0]
 8025fe6:	1b01      	subs	r1, r0, r4
 8025fe8:	428a      	cmp	r2, r1
 8025fea:	bfc8      	it	gt
 8025fec:	6031      	strgt	r1, [r6, #0]
 8025fee:	682a      	ldr	r2, [r5, #0]
 8025ff0:	4291      	cmp	r1, r2
 8025ff2:	bfc8      	it	gt
 8025ff4:	6029      	strgt	r1, [r5, #0]
 8025ff6:	6832      	ldr	r2, [r6, #0]
 8025ff8:	4420      	add	r0, r4
 8025ffa:	4282      	cmp	r2, r0
 8025ffc:	bfc8      	it	gt
 8025ffe:	6030      	strgt	r0, [r6, #0]
 8026000:	682a      	ldr	r2, [r5, #0]
 8026002:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8026006:	4290      	cmp	r0, r2
 8026008:	fb9b f2f1 	sdiv	r2, fp, r1
 802600c:	fb01 b212 	mls	r2, r1, r2, fp
 8026010:	eba1 0202 	sub.w	r2, r1, r2
 8026014:	bfc8      	it	gt
 8026016:	6028      	strgt	r0, [r5, #0]
 8026018:	fb92 f0f1 	sdiv	r0, r2, r1
 802601c:	fb01 2210 	mls	r2, r1, r0, r2
 8026020:	4493      	add	fp, r2
 8026022:	9b00      	ldr	r3, [sp, #0]
 8026024:	455b      	cmp	r3, fp
 8026026:	db40      	blt.n	80260aa <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8026028:	4658      	mov	r0, fp
 802602a:	f7ea fe6b 	bl	8010d04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802602e:	a903      	add	r1, sp, #12
 8026030:	9003      	str	r0, [sp, #12]
 8026032:	4650      	mov	r0, sl
 8026034:	f7ea fd2e 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026038:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802603c:	4410      	add	r0, r2
 802603e:	f8d9 2000 	ldr.w	r2, [r9]
 8026042:	1b01      	subs	r1, r0, r4
 8026044:	428a      	cmp	r2, r1
 8026046:	bfc8      	it	gt
 8026048:	f8c9 1000 	strgt.w	r1, [r9]
 802604c:	683a      	ldr	r2, [r7, #0]
 802604e:	4291      	cmp	r1, r2
 8026050:	bfc8      	it	gt
 8026052:	6039      	strgt	r1, [r7, #0]
 8026054:	f8d9 2000 	ldr.w	r2, [r9]
 8026058:	4420      	add	r0, r4
 802605a:	4282      	cmp	r2, r0
 802605c:	bfc8      	it	gt
 802605e:	f8c9 0000 	strgt.w	r0, [r9]
 8026062:	683a      	ldr	r2, [r7, #0]
 8026064:	4290      	cmp	r0, r2
 8026066:	bfc8      	it	gt
 8026068:	6038      	strgt	r0, [r7, #0]
 802606a:	4658      	mov	r0, fp
 802606c:	f7ff fe9c 	bl	8025da8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026070:	a903      	add	r1, sp, #12
 8026072:	9003      	str	r0, [sp, #12]
 8026074:	4650      	mov	r0, sl
 8026076:	f7ea fd0d 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802607a:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802607e:	1a10      	subs	r0, r2, r0
 8026080:	6832      	ldr	r2, [r6, #0]
 8026082:	1b01      	subs	r1, r0, r4
 8026084:	428a      	cmp	r2, r1
 8026086:	bfc8      	it	gt
 8026088:	6031      	strgt	r1, [r6, #0]
 802608a:	682a      	ldr	r2, [r5, #0]
 802608c:	4291      	cmp	r1, r2
 802608e:	bfc8      	it	gt
 8026090:	6029      	strgt	r1, [r5, #0]
 8026092:	6832      	ldr	r2, [r6, #0]
 8026094:	4420      	add	r0, r4
 8026096:	4282      	cmp	r2, r0
 8026098:	bfc8      	it	gt
 802609a:	6030      	strgt	r0, [r6, #0]
 802609c:	682a      	ldr	r2, [r5, #0]
 802609e:	4290      	cmp	r0, r2
 80260a0:	bfc8      	it	gt
 80260a2:	6028      	strgt	r0, [r5, #0]
 80260a4:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 80260a8:	e7bb      	b.n	8026022 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 80260aa:	9b00      	ldr	r3, [sp, #0]
 80260ac:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 80260b0:	455b      	cmp	r3, fp
 80260b2:	f77f af62 	ble.w	8025f7a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 80260b6:	4618      	mov	r0, r3
 80260b8:	f7ea fe24 	bl	8010d04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80260bc:	a903      	add	r1, sp, #12
 80260be:	9003      	str	r0, [sp, #12]
 80260c0:	4650      	mov	r0, sl
 80260c2:	f7ea fce7 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80260c6:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80260ca:	4410      	add	r0, r2
 80260cc:	f8d9 2000 	ldr.w	r2, [r9]
 80260d0:	1b01      	subs	r1, r0, r4
 80260d2:	428a      	cmp	r2, r1
 80260d4:	bfc8      	it	gt
 80260d6:	f8c9 1000 	strgt.w	r1, [r9]
 80260da:	683a      	ldr	r2, [r7, #0]
 80260dc:	4291      	cmp	r1, r2
 80260de:	bfc8      	it	gt
 80260e0:	6039      	strgt	r1, [r7, #0]
 80260e2:	f8d9 2000 	ldr.w	r2, [r9]
 80260e6:	4420      	add	r0, r4
 80260e8:	4282      	cmp	r2, r0
 80260ea:	bfc8      	it	gt
 80260ec:	f8c9 0000 	strgt.w	r0, [r9]
 80260f0:	683b      	ldr	r3, [r7, #0]
 80260f2:	4298      	cmp	r0, r3
 80260f4:	bfc8      	it	gt
 80260f6:	6038      	strgt	r0, [r7, #0]
 80260f8:	9800      	ldr	r0, [sp, #0]
 80260fa:	f7ff fe55 	bl	8025da8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80260fe:	a903      	add	r1, sp, #12
 8026100:	9003      	str	r0, [sp, #12]
 8026102:	4650      	mov	r0, sl
 8026104:	f7ea fcc6 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026108:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802610c:	6832      	ldr	r2, [r6, #0]
 802610e:	1a18      	subs	r0, r3, r0
 8026110:	1b03      	subs	r3, r0, r4
 8026112:	429a      	cmp	r2, r3
 8026114:	bfc8      	it	gt
 8026116:	6033      	strgt	r3, [r6, #0]
 8026118:	682a      	ldr	r2, [r5, #0]
 802611a:	4293      	cmp	r3, r2
 802611c:	bfc8      	it	gt
 802611e:	602b      	strgt	r3, [r5, #0]
 8026120:	6833      	ldr	r3, [r6, #0]
 8026122:	4404      	add	r4, r0
 8026124:	42a3      	cmp	r3, r4
 8026126:	bfc8      	it	gt
 8026128:	6034      	strgt	r4, [r6, #0]
 802612a:	682b      	ldr	r3, [r5, #0]
 802612c:	429c      	cmp	r4, r3
 802612e:	bfc8      	it	gt
 8026130:	602c      	strgt	r4, [r5, #0]
 8026132:	e722      	b.n	8025f7a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08026134 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8026134:	b530      	push	{r4, r5, lr}
 8026136:	4604      	mov	r4, r0
 8026138:	4608      	mov	r0, r1
 802613a:	4611      	mov	r1, r2
 802613c:	461a      	mov	r2, r3
 802613e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8026142:	b089      	sub	sp, #36	; 0x24
 8026144:	015b      	lsls	r3, r3, #5
 8026146:	9304      	str	r3, [sp, #16]
 8026148:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 802614c:	2500      	movs	r5, #0
 802614e:	015b      	lsls	r3, r3, #5
 8026150:	e9cd 3506 	strd	r3, r5, [sp, #24]
 8026154:	ab07      	add	r3, sp, #28
 8026156:	9302      	str	r3, [sp, #8]
 8026158:	ab06      	add	r3, sp, #24
 802615a:	9301      	str	r3, [sp, #4]
 802615c:	ab05      	add	r3, sp, #20
 802615e:	9300      	str	r3, [sp, #0]
 8026160:	ab04      	add	r3, sp, #16
 8026162:	9505      	str	r5, [sp, #20]
 8026164:	f7ff fe3e 	bl	8025de4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8026168:	2520      	movs	r5, #32
 802616a:	9a04      	ldr	r2, [sp, #16]
 802616c:	9805      	ldr	r0, [sp, #20]
 802616e:	fb92 f2f5 	sdiv	r2, r2, r5
 8026172:	fb90 f0f5 	sdiv	r0, r0, r5
 8026176:	b292      	uxth	r2, r2
 8026178:	3002      	adds	r0, #2
 802617a:	1a80      	subs	r0, r0, r2
 802617c:	9b06      	ldr	r3, [sp, #24]
 802617e:	9907      	ldr	r1, [sp, #28]
 8026180:	fb93 f3f5 	sdiv	r3, r3, r5
 8026184:	fb91 f1f5 	sdiv	r1, r1, r5
 8026188:	b29b      	uxth	r3, r3
 802618a:	3102      	adds	r1, #2
 802618c:	1ac9      	subs	r1, r1, r3
 802618e:	3a01      	subs	r2, #1
 8026190:	3b01      	subs	r3, #1
 8026192:	80a0      	strh	r0, [r4, #4]
 8026194:	4620      	mov	r0, r4
 8026196:	8022      	strh	r2, [r4, #0]
 8026198:	8063      	strh	r3, [r4, #2]
 802619a:	80e1      	strh	r1, [r4, #6]
 802619c:	b009      	add	sp, #36	; 0x24
 802619e:	bd30      	pop	{r4, r5, pc}

080261a0 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 80261a0:	b510      	push	{r4, lr}
 80261a2:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 80261a6:	4604      	mov	r4, r0
 80261a8:	f7ff ffc4 	bl	8026134 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 80261ac:	4620      	mov	r0, r4
 80261ae:	bd10      	pop	{r4, pc}

080261b0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 80261b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80261b2:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 80261b6:	4606      	mov	r6, r0
 80261b8:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 80261bc:	6813      	ldr	r3, [r2, #0]
 80261be:	42a5      	cmp	r5, r4
 80261c0:	ea4f 1040 	mov.w	r0, r0, lsl #5
 80261c4:	da2b      	bge.n	802621e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 80261c6:	42a3      	cmp	r3, r4
 80261c8:	dd14      	ble.n	80261f4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 80261ca:	b168      	cbz	r0, 80261e8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80261cc:	4267      	negs	r7, r4
 80261ce:	fb97 f2f0 	sdiv	r2, r7, r0
 80261d2:	fb00 7212 	mls	r2, r0, r2, r7
 80261d6:	1a82      	subs	r2, r0, r2
 80261d8:	fb92 f7f0 	sdiv	r7, r2, r0
 80261dc:	fb00 2017 	mls	r0, r0, r7, r2
 80261e0:	1a24      	subs	r4, r4, r0
 80261e2:	42ac      	cmp	r4, r5
 80261e4:	bfb8      	it	lt
 80261e6:	462c      	movlt	r4, r5
 80261e8:	4630      	mov	r0, r6
 80261ea:	4622      	mov	r2, r4
 80261ec:	f7ff ffa2 	bl	8026134 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 80261f0:	4630      	mov	r0, r6
 80261f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80261f4:	42ab      	cmp	r3, r5
 80261f6:	dd0e      	ble.n	8026216 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80261f8:	b168      	cbz	r0, 8026216 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80261fa:	425f      	negs	r7, r3
 80261fc:	fb97 f2f0 	sdiv	r2, r7, r0
 8026200:	fb00 7212 	mls	r2, r0, r2, r7
 8026204:	1a82      	subs	r2, r0, r2
 8026206:	fb92 f7f0 	sdiv	r7, r2, r0
 802620a:	fb00 2017 	mls	r0, r0, r7, r2
 802620e:	1a1b      	subs	r3, r3, r0
 8026210:	42ab      	cmp	r3, r5
 8026212:	bfb8      	it	lt
 8026214:	462b      	movlt	r3, r5
 8026216:	4622      	mov	r2, r4
 8026218:	461c      	mov	r4, r3
 802621a:	4613      	mov	r3, r2
 802621c:	e7e4      	b.n	80261e8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802621e:	42a3      	cmp	r3, r4
 8026220:	da10      	bge.n	8026244 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8026222:	b148      	cbz	r0, 8026238 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8026224:	fb94 f2f0 	sdiv	r2, r4, r0
 8026228:	fb00 4212 	mls	r2, r0, r2, r4
 802622c:	1a82      	subs	r2, r0, r2
 802622e:	fb92 f7f0 	sdiv	r7, r2, r0
 8026232:	fb00 2017 	mls	r0, r0, r7, r2
 8026236:	4404      	add	r4, r0
 8026238:	42a5      	cmp	r5, r4
 802623a:	bfa8      	it	ge
 802623c:	4625      	movge	r5, r4
 802623e:	461c      	mov	r4, r3
 8026240:	462b      	mov	r3, r5
 8026242:	e7d1      	b.n	80261e8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026244:	42ab      	cmp	r3, r5
 8026246:	dacf      	bge.n	80261e8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026248:	2800      	cmp	r0, #0
 802624a:	d0cd      	beq.n	80261e8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802624c:	fb93 f2f0 	sdiv	r2, r3, r0
 8026250:	fb00 3212 	mls	r2, r0, r2, r3
 8026254:	1a82      	subs	r2, r0, r2
 8026256:	fb92 f7f0 	sdiv	r7, r2, r0
 802625a:	fb00 2017 	mls	r0, r0, r7, r2
 802625e:	4403      	add	r3, r0
 8026260:	42ab      	cmp	r3, r5
 8026262:	bfa8      	it	ge
 8026264:	462b      	movge	r3, r5
 8026266:	e7bf      	b.n	80261e8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

08026268 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8026268:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802626c:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8026270:	42ae      	cmp	r6, r5
 8026272:	bfa2      	ittt	ge
 8026274:	4633      	movge	r3, r6
 8026276:	462e      	movge	r6, r5
 8026278:	461d      	movge	r5, r3
 802627a:	1bab      	subs	r3, r5, r6
 802627c:	468b      	mov	fp, r1
 802627e:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8026280:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 8026284:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 8026288:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802628c:	f04f 0220 	mov.w	r2, #32
 8026290:	b0ab      	sub	sp, #172	; 0xac
 8026292:	4604      	mov	r4, r0
 8026294:	bfa4      	itt	ge
 8026296:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 802629a:	2600      	movge	r6, #0
 802629c:	fb99 f9f2 	sdiv	r9, r9, r2
 80262a0:	fb9a faf2 	sdiv	sl, sl, r2
 80262a4:	6b43      	ldr	r3, [r0, #52]	; 0x34
 80262a6:	2900      	cmp	r1, #0
 80262a8:	f000 80f5 	beq.w	8026496 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 80262ac:	f9bb 0000 	ldrsh.w	r0, [fp]
 80262b0:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 80262b4:	eba9 0700 	sub.w	r7, r9, r0
 80262b8:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 80262bc:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 80262c0:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 80262c4:	ebaa 0802 	sub.w	r8, sl, r2
 80262c8:	4407      	add	r7, r0
 80262ca:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 80262ce:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 80262d2:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 80262d6:	b23f      	sxth	r7, r7
 80262d8:	4490      	add	r8, r2
 80262da:	eba9 0707 	sub.w	r7, r9, r7
 80262de:	fa0f f888 	sxth.w	r8, r8
 80262e2:	ebaa 0808 	sub.w	r8, sl, r8
 80262e6:	2f00      	cmp	r7, #0
 80262e8:	bfb8      	it	lt
 80262ea:	427f      	neglt	r7, r7
 80262ec:	f1b8 0f00 	cmp.w	r8, #0
 80262f0:	bfb8      	it	lt
 80262f2:	f1c8 0800 	rsblt	r8, r8, #0
 80262f6:	45bc      	cmp	ip, r7
 80262f8:	bfcc      	ite	gt
 80262fa:	f10c 0701 	addgt.w	r7, ip, #1
 80262fe:	3701      	addle	r7, #1
 8026300:	4540      	cmp	r0, r8
 8026302:	bfc8      	it	gt
 8026304:	f100 0801 	addgt.w	r8, r0, #1
 8026308:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 802630c:	f100 0001 	add.w	r0, r0, #1
 8026310:	ea4f 0060 	mov.w	r0, r0, asr #1
 8026314:	f04f 0202 	mov.w	r2, #2
 8026318:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 802631c:	fb91 f1f2 	sdiv	r1, r1, r2
 8026320:	eba3 0301 	sub.w	r3, r3, r1
 8026324:	bfd8      	it	le
 8026326:	f108 0801 	addle.w	r8, r8, #1
 802632a:	9201      	str	r2, [sp, #4]
 802632c:	930d      	str	r3, [sp, #52]	; 0x34
 802632e:	f7ea fcc9 	bl	8010cc4 <_ZN8touchgfx7CWRUtil4sineEi>
 8026332:	a92a      	add	r1, sp, #168	; 0xa8
 8026334:	fb08 f808 	mul.w	r8, r8, r8
 8026338:	f841 0d70 	str.w	r0, [r1, #-112]!
 802633c:	a80d      	add	r0, sp, #52	; 0x34
 802633e:	f7ea fba9 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026342:	fb07 8707 	mla	r7, r7, r7, r8
 8026346:	f04f 0c20 	mov.w	ip, #32
 802634a:	fb90 f0fc 	sdiv	r0, r0, ip
 802634e:	4340      	muls	r0, r0
 8026350:	4287      	cmp	r7, r0
 8026352:	9a01      	ldr	r2, [sp, #4]
 8026354:	da04      	bge.n	8026360 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 8026356:	2401      	movs	r4, #1
 8026358:	4620      	mov	r0, r4
 802635a:	b02b      	add	sp, #172	; 0xac
 802635c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026360:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8026362:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8026364:	fb91 f3f2 	sdiv	r3, r1, r2
 8026368:	4403      	add	r3, r0
 802636a:	fb93 f3fc 	sdiv	r3, r3, ip
 802636e:	f9bb 1000 	ldrsh.w	r1, [fp]
 8026372:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 8026376:	440a      	add	r2, r1
 8026378:	b212      	sxth	r2, r2
 802637a:	454a      	cmp	r2, r9
 802637c:	bfa8      	it	ge
 802637e:	464a      	movge	r2, r9
 8026380:	428a      	cmp	r2, r1
 8026382:	bfac      	ite	ge
 8026384:	eba9 0902 	subge.w	r9, r9, r2
 8026388:	eba9 0901 	sublt.w	r9, r9, r1
 802638c:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8026390:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8026394:	440a      	add	r2, r1
 8026396:	b212      	sxth	r2, r2
 8026398:	4552      	cmp	r2, sl
 802639a:	bfa8      	it	ge
 802639c:	4652      	movge	r2, sl
 802639e:	428a      	cmp	r2, r1
 80263a0:	bfac      	ite	ge
 80263a2:	ebaa 0a02 	subge.w	sl, sl, r2
 80263a6:	ebaa 0a01 	sublt.w	sl, sl, r1
 80263aa:	3301      	adds	r3, #1
 80263ac:	fb0a fa0a 	mul.w	sl, sl, sl
 80263b0:	fb09 a909 	mla	r9, r9, r9, sl
 80263b4:	435b      	muls	r3, r3
 80263b6:	4599      	cmp	r9, r3
 80263b8:	dccd      	bgt.n	8026356 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 80263ba:	465a      	mov	r2, fp
 80263bc:	4621      	mov	r1, r4
 80263be:	a80e      	add	r0, sp, #56	; 0x38
 80263c0:	f7ff faae 	bl	8025920 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 80263c4:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80263c6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80263c8:	9209      	str	r2, [sp, #36]	; 0x24
 80263ca:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 80263ce:	930a      	str	r3, [sp, #40]	; 0x28
 80263d0:	dd07      	ble.n	80263e2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 80263d2:	2102      	movs	r1, #2
 80263d4:	fb93 f3f1 	sdiv	r3, r3, r1
 80263d8:	4413      	add	r3, r2
 80263da:	930a      	str	r3, [sp, #40]	; 0x28
 80263dc:	fb93 f3f1 	sdiv	r3, r3, r1
 80263e0:	9309      	str	r3, [sp, #36]	; 0x24
 80263e2:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80263e6:	4630      	mov	r0, r6
 80263e8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80263ec:	930b      	str	r3, [sp, #44]	; 0x2c
 80263ee:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 80263f2:	f7ea fc87 	bl	8010d04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80263f6:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 80263fa:	f04f 0a02 	mov.w	sl, #2
 80263fe:	f849 0d74 	str.w	r0, [r9, #-116]!
 8026402:	a80b      	add	r0, sp, #44	; 0x2c
 8026404:	4649      	mov	r1, r9
 8026406:	f7ea fb45 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802640a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802640c:	fb90 f0fa 	sdiv	r0, r0, sl
 8026410:	eb00 0b03 	add.w	fp, r0, r3
 8026414:	4630      	mov	r0, r6
 8026416:	f7ff fcc7 	bl	8025da8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802641a:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 802641e:	017f      	lsls	r7, r7, #5
 8026420:	f848 0d78 	str.w	r0, [r8, #-120]!
 8026424:	a80b      	add	r0, sp, #44	; 0x2c
 8026426:	4641      	mov	r1, r8
 8026428:	f7ea fb34 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802642c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802642e:	fb90 f0fa 	sdiv	r0, r0, sl
 8026432:	4659      	mov	r1, fp
 8026434:	1a12      	subs	r2, r2, r0
 8026436:	a80e      	add	r0, sp, #56	; 0x38
 8026438:	f7ff fbf2 	bl	8025c20 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 802643c:	f106 0a20 	add.w	sl, r6, #32
 8026440:	bb67      	cbnz	r7, 802649c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 8026442:	46b3      	mov	fp, r6
 8026444:	45aa      	cmp	sl, r5
 8026446:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8026448:	dc33      	bgt.n	80264b2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 802644a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802644c:	4650      	mov	r0, sl
 802644e:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8026452:	920b      	str	r2, [sp, #44]	; 0x2c
 8026454:	f7ea fc56 	bl	8010d04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026458:	4641      	mov	r1, r8
 802645a:	900c      	str	r0, [sp, #48]	; 0x30
 802645c:	a80b      	add	r0, sp, #44	; 0x2c
 802645e:	f7ea fb19 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026462:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8026464:	2302      	movs	r3, #2
 8026466:	fb90 f0f3 	sdiv	r0, r0, r3
 802646a:	eb00 0b02 	add.w	fp, r0, r2
 802646e:	4650      	mov	r0, sl
 8026470:	f7ff fc9a 	bl	8025da8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026474:	4649      	mov	r1, r9
 8026476:	900d      	str	r0, [sp, #52]	; 0x34
 8026478:	a80b      	add	r0, sp, #44	; 0x2c
 802647a:	f7ea fb0b 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802647e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026480:	2302      	movs	r3, #2
 8026482:	4659      	mov	r1, fp
 8026484:	fb90 f0f3 	sdiv	r0, r0, r3
 8026488:	1a12      	subs	r2, r2, r0
 802648a:	a80e      	add	r0, sp, #56	; 0x38
 802648c:	46d3      	mov	fp, sl
 802648e:	f7ff fc14 	bl	8025cba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026492:	44ba      	add	sl, r7
 8026494:	e7d6      	b.n	8026444 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 8026496:	fb93 f3f2 	sdiv	r3, r3, r2
 802649a:	e768      	b.n	802636e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 802649c:	fb9a f2f7 	sdiv	r2, sl, r7
 80264a0:	fb07 a212 	mls	r2, r7, r2, sl
 80264a4:	1aba      	subs	r2, r7, r2
 80264a6:	fb92 f1f7 	sdiv	r1, r2, r7
 80264aa:	fb07 2211 	mls	r2, r7, r1, r2
 80264ae:	4492      	add	sl, r2
 80264b0:	e7c7      	b.n	8026442 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 80264b2:	45ab      	cmp	fp, r5
 80264b4:	da23      	bge.n	80264fe <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 80264b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80264b8:	4628      	mov	r0, r5
 80264ba:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 80264be:	920b      	str	r2, [sp, #44]	; 0x2c
 80264c0:	f7ea fc20 	bl	8010d04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80264c4:	4641      	mov	r1, r8
 80264c6:	900c      	str	r0, [sp, #48]	; 0x30
 80264c8:	a80b      	add	r0, sp, #44	; 0x2c
 80264ca:	f7ea fae3 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80264ce:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80264d0:	f04f 0a02 	mov.w	sl, #2
 80264d4:	fb90 f0fa 	sdiv	r0, r0, sl
 80264d8:	4403      	add	r3, r0
 80264da:	4628      	mov	r0, r5
 80264dc:	9301      	str	r3, [sp, #4]
 80264de:	f7ff fc63 	bl	8025da8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80264e2:	4649      	mov	r1, r9
 80264e4:	900d      	str	r0, [sp, #52]	; 0x34
 80264e6:	a80b      	add	r0, sp, #44	; 0x2c
 80264e8:	f7ea fad4 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80264ec:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80264ee:	9b01      	ldr	r3, [sp, #4]
 80264f0:	fb90 f0fa 	sdiv	r0, r0, sl
 80264f4:	4619      	mov	r1, r3
 80264f6:	1a12      	subs	r2, r2, r0
 80264f8:	a80e      	add	r0, sp, #56	; 0x38
 80264fa:	f7ff fbde 	bl	8025cba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80264fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026500:	b99b      	cbnz	r3, 802652a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8026502:	1bad      	subs	r5, r5, r6
 8026504:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8026508:	da04      	bge.n	8026514 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802650a:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 802650e:	a80e      	add	r0, sp, #56	; 0x38
 8026510:	f7ff fbd3 	bl	8025cba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026514:	21ff      	movs	r1, #255	; 0xff
 8026516:	a80e      	add	r0, sp, #56	; 0x38
 8026518:	f7ff fabe 	bl	8025a98 <_ZN8touchgfx6Canvas6renderEh>
 802651c:	4604      	mov	r4, r0
 802651e:	4b8a      	ldr	r3, [pc, #552]	; (8026748 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8026520:	930e      	str	r3, [sp, #56]	; 0x38
 8026522:	a816      	add	r0, sp, #88	; 0x58
 8026524:	f7eb ff22 	bl	801236c <_ZN8touchgfx7OutlineD1Ev>
 8026528:	e716      	b.n	8026358 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 802652a:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 802652e:	429a      	cmp	r2, r3
 8026530:	f0c0 8107 	bcc.w	8026742 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8026534:	1bab      	subs	r3, r5, r6
 8026536:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 802653a:	9301      	str	r3, [sp, #4]
 802653c:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8026540:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8026544:	da43      	bge.n	80265ce <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8026546:	4628      	mov	r0, r5
 8026548:	f7ea fbdc 	bl	8010d04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802654c:	4649      	mov	r1, r9
 802654e:	900d      	str	r0, [sp, #52]	; 0x34
 8026550:	a809      	add	r0, sp, #36	; 0x24
 8026552:	f7ea fa9f 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026556:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026558:	18c3      	adds	r3, r0, r3
 802655a:	4628      	mov	r0, r5
 802655c:	9303      	str	r3, [sp, #12]
 802655e:	f7ff fc23 	bl	8025da8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026562:	4649      	mov	r1, r9
 8026564:	900d      	str	r0, [sp, #52]	; 0x34
 8026566:	a809      	add	r0, sp, #36	; 0x24
 8026568:	f7ea fa94 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802656c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802656e:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8026572:	1a1b      	subs	r3, r3, r0
 8026574:	9302      	str	r3, [sp, #8]
 8026576:	9204      	str	r2, [sp, #16]
 8026578:	eb0a 0305 	add.w	r3, sl, r5
 802657c:	9a04      	ldr	r2, [sp, #16]
 802657e:	4293      	cmp	r3, r2
 8026580:	da25      	bge.n	80265ce <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8026582:	4618      	mov	r0, r3
 8026584:	9306      	str	r3, [sp, #24]
 8026586:	f7ea fbbd 	bl	8010d04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802658a:	4649      	mov	r1, r9
 802658c:	900d      	str	r0, [sp, #52]	; 0x34
 802658e:	a80a      	add	r0, sp, #40	; 0x28
 8026590:	f7ea fa80 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026594:	9b03      	ldr	r3, [sp, #12]
 8026596:	2202      	movs	r2, #2
 8026598:	fb90 f0f2 	sdiv	r0, r0, r2
 802659c:	18c3      	adds	r3, r0, r3
 802659e:	9305      	str	r3, [sp, #20]
 80265a0:	9b06      	ldr	r3, [sp, #24]
 80265a2:	9207      	str	r2, [sp, #28]
 80265a4:	4618      	mov	r0, r3
 80265a6:	f7ff fbff 	bl	8025da8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80265aa:	a92a      	add	r1, sp, #168	; 0xa8
 80265ac:	f841 0d78 	str.w	r0, [r1, #-120]!
 80265b0:	a80a      	add	r0, sp, #40	; 0x28
 80265b2:	f7ea fa6f 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80265b6:	9b02      	ldr	r3, [sp, #8]
 80265b8:	9a07      	ldr	r2, [sp, #28]
 80265ba:	9905      	ldr	r1, [sp, #20]
 80265bc:	fb90 f2f2 	sdiv	r2, r0, r2
 80265c0:	a80e      	add	r0, sp, #56	; 0x38
 80265c2:	1a9a      	subs	r2, r3, r2
 80265c4:	f7ff fb79 	bl	8025cba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80265c8:	9b06      	ldr	r3, [sp, #24]
 80265ca:	4453      	add	r3, sl
 80265cc:	e7d6      	b.n	802657c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 80265ce:	45ab      	cmp	fp, r5
 80265d0:	da25      	bge.n	802661e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 80265d2:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80265d6:	4628      	mov	r0, r5
 80265d8:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80265dc:	930b      	str	r3, [sp, #44]	; 0x2c
 80265de:	f7ea fb91 	bl	8010d04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80265e2:	4641      	mov	r1, r8
 80265e4:	900c      	str	r0, [sp, #48]	; 0x30
 80265e6:	a80b      	add	r0, sp, #44	; 0x2c
 80265e8:	f7ea fa54 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80265ec:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80265ee:	2202      	movs	r2, #2
 80265f0:	fb90 f0f2 	sdiv	r0, r0, r2
 80265f4:	eb00 0903 	add.w	r9, r0, r3
 80265f8:	4628      	mov	r0, r5
 80265fa:	9202      	str	r2, [sp, #8]
 80265fc:	f7ff fbd4 	bl	8025da8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026600:	a92a      	add	r1, sp, #168	; 0xa8
 8026602:	f841 0d74 	str.w	r0, [r1, #-116]!
 8026606:	a80b      	add	r0, sp, #44	; 0x2c
 8026608:	f7ea fa44 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802660c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802660e:	9a02      	ldr	r2, [sp, #8]
 8026610:	fb90 f2f2 	sdiv	r2, r0, r2
 8026614:	4649      	mov	r1, r9
 8026616:	1a9a      	subs	r2, r3, r2
 8026618:	a80e      	add	r0, sp, #56	; 0x38
 802661a:	f7ff fb4e 	bl	8025cba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802661e:	46d9      	mov	r9, fp
 8026620:	2502      	movs	r5, #2
 8026622:	45b1      	cmp	r9, r6
 8026624:	db25      	blt.n	8026672 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8026626:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802662a:	4648      	mov	r0, r9
 802662c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8026630:	930b      	str	r3, [sp, #44]	; 0x2c
 8026632:	f7ea fb67 	bl	8010d04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026636:	4641      	mov	r1, r8
 8026638:	900c      	str	r0, [sp, #48]	; 0x30
 802663a:	a80b      	add	r0, sp, #44	; 0x2c
 802663c:	f7ea fa2a 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026640:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026642:	fb90 f0f5 	sdiv	r0, r0, r5
 8026646:	eb00 0b03 	add.w	fp, r0, r3
 802664a:	4648      	mov	r0, r9
 802664c:	f7ff fbac 	bl	8025da8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026650:	a90d      	add	r1, sp, #52	; 0x34
 8026652:	900d      	str	r0, [sp, #52]	; 0x34
 8026654:	a80b      	add	r0, sp, #44	; 0x2c
 8026656:	f7ea fa1d 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802665a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802665c:	fb90 f0f5 	sdiv	r0, r0, r5
 8026660:	4659      	mov	r1, fp
 8026662:	1a12      	subs	r2, r2, r0
 8026664:	a80e      	add	r0, sp, #56	; 0x38
 8026666:	46cb      	mov	fp, r9
 8026668:	f7ff fb27 	bl	8025cba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802666c:	eba9 0907 	sub.w	r9, r9, r7
 8026670:	e7d7      	b.n	8026622 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8026672:	455e      	cmp	r6, fp
 8026674:	da22      	bge.n	80266bc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8026676:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802667a:	4630      	mov	r0, r6
 802667c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8026680:	930b      	str	r3, [sp, #44]	; 0x2c
 8026682:	f7ea fb3f 	bl	8010d04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026686:	4641      	mov	r1, r8
 8026688:	900c      	str	r0, [sp, #48]	; 0x30
 802668a:	a80b      	add	r0, sp, #44	; 0x2c
 802668c:	f7ea fa02 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026690:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8026692:	2502      	movs	r5, #2
 8026694:	fb90 f0f5 	sdiv	r0, r0, r5
 8026698:	4407      	add	r7, r0
 802669a:	4630      	mov	r0, r6
 802669c:	f7ff fb84 	bl	8025da8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80266a0:	a92a      	add	r1, sp, #168	; 0xa8
 80266a2:	f841 0d74 	str.w	r0, [r1, #-116]!
 80266a6:	a80b      	add	r0, sp, #44	; 0x2c
 80266a8:	f7ea f9f4 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80266ac:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80266ae:	fb90 f0f5 	sdiv	r0, r0, r5
 80266b2:	4639      	mov	r1, r7
 80266b4:	1a12      	subs	r2, r2, r0
 80266b6:	a80e      	add	r0, sp, #56	; 0x38
 80266b8:	f7ff faff 	bl	8025cba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80266bc:	9b01      	ldr	r3, [sp, #4]
 80266be:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80266c2:	f6bf af27 	bge.w	8026514 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 80266c6:	4630      	mov	r0, r6
 80266c8:	f7ea fb1c 	bl	8010d04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80266cc:	ad2a      	add	r5, sp, #168	; 0xa8
 80266ce:	f04f 0b02 	mov.w	fp, #2
 80266d2:	f845 0d74 	str.w	r0, [r5, #-116]!
 80266d6:	a809      	add	r0, sp, #36	; 0x24
 80266d8:	4629      	mov	r1, r5
 80266da:	f7ea f9db 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80266de:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80266e0:	eb00 0903 	add.w	r9, r0, r3
 80266e4:	4630      	mov	r0, r6
 80266e6:	f7ff fb5f 	bl	8025da8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80266ea:	4629      	mov	r1, r5
 80266ec:	900d      	str	r0, [sp, #52]	; 0x34
 80266ee:	a809      	add	r0, sp, #36	; 0x24
 80266f0:	f7ea f9d0 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80266f4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80266f6:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 80266fa:	eba3 0800 	sub.w	r8, r3, r0
 80266fe:	4454      	add	r4, sl
 8026700:	42a6      	cmp	r6, r4
 8026702:	f77f af07 	ble.w	8026514 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8026706:	4620      	mov	r0, r4
 8026708:	f7ea fafc 	bl	8010d04 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802670c:	4629      	mov	r1, r5
 802670e:	900d      	str	r0, [sp, #52]	; 0x34
 8026710:	a80a      	add	r0, sp, #40	; 0x28
 8026712:	f7ea f9bf 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026716:	fb90 f0fb 	sdiv	r0, r0, fp
 802671a:	eb00 0709 	add.w	r7, r0, r9
 802671e:	4620      	mov	r0, r4
 8026720:	f7ff fb42 	bl	8025da8 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026724:	a90c      	add	r1, sp, #48	; 0x30
 8026726:	900c      	str	r0, [sp, #48]	; 0x30
 8026728:	a80a      	add	r0, sp, #40	; 0x28
 802672a:	f7ea f9b3 	bl	8010a94 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802672e:	4639      	mov	r1, r7
 8026730:	fb90 f2fb 	sdiv	r2, r0, fp
 8026734:	a80e      	add	r0, sp, #56	; 0x38
 8026736:	eba8 0202 	sub.w	r2, r8, r2
 802673a:	f7ff fabe 	bl	8025cba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802673e:	4454      	add	r4, sl
 8026740:	e7de      	b.n	8026700 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8026742:	2400      	movs	r4, #0
 8026744:	e6eb      	b.n	802651e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8026746:	bf00      	nop
 8026748:	0802cdac 	.word	0x0802cdac

0802674c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 802674c:	b570      	push	{r4, r5, r6, lr}
 802674e:	790b      	ldrb	r3, [r1, #4]
 8026750:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8026754:	2b00      	cmp	r3, #0
 8026756:	bf0c      	ite	eq
 8026758:	2301      	moveq	r3, #1
 802675a:	2300      	movne	r3, #0
 802675c:	4604      	mov	r4, r0
 802675e:	460e      	mov	r6, r1
 8026760:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8026764:	d109      	bne.n	802677a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8026766:	b14d      	cbz	r5, 802677c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8026768:	7933      	ldrb	r3, [r6, #4]
 802676a:	2b01      	cmp	r3, #1
 802676c:	d10c      	bne.n	8026788 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802676e:	6823      	ldr	r3, [r4, #0]
 8026770:	4620      	mov	r0, r4
 8026772:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8026774:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8026778:	4718      	bx	r3
 802677a:	b12d      	cbz	r5, 8026788 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802677c:	6823      	ldr	r3, [r4, #0]
 802677e:	4620      	mov	r0, r4
 8026780:	695b      	ldr	r3, [r3, #20]
 8026782:	4798      	blx	r3
 8026784:	2d00      	cmp	r5, #0
 8026786:	d1ef      	bne.n	8026768 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8026788:	bd70      	pop	{r4, r5, r6, pc}

0802678a <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 802678a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 802678e:	4770      	bx	lr

08026790 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8026790:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8026794:	4770      	bx	lr

08026796 <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8026796:	6802      	ldr	r2, [r0, #0]
 8026798:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802679c:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802679e:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80267a2:	4710      	bx	r2

080267a4 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 80267a4:	6802      	ldr	r2, [r0, #0]
 80267a6:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80267aa:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 80267ac:	eef0 0a40 	vmov.f32	s1, s0
 80267b0:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80267b4:	4710      	bx	r2

080267b6 <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 80267b6:	6802      	ldr	r2, [r0, #0]
 80267b8:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80267bc:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 80267be:	eeb0 1a40 	vmov.f32	s2, s0
 80267c2:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80267c6:	4710      	bx	r2

080267c8 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 80267c8:	6802      	ldr	r2, [r0, #0]
 80267ca:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80267ce:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 80267d0:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80267d4:	4710      	bx	r2

080267d6 <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 80267d6:	6802      	ldr	r2, [r0, #0]
 80267d8:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80267dc:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 80267de:	eef0 0a40 	vmov.f32	s1, s0
 80267e2:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80267e6:	4710      	bx	r2

080267e8 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 80267e8:	6802      	ldr	r2, [r0, #0]
 80267ea:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80267ee:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 80267f0:	eeb0 1a40 	vmov.f32	s2, s0
 80267f4:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80267f8:	4710      	bx	r2

080267fa <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 80267fa:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80267fe:	4770      	bx	lr

08026800 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8026800:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8026804:	4770      	bx	lr

08026806 <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8026806:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 802680a:	4770      	bx	lr

0802680c <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 802680c:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8026810:	4770      	bx	lr

08026812 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8026812:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8026816:	4770      	bx	lr

08026818 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8026818:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 802681c:	4770      	bx	lr

0802681e <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 802681e:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8026822:	4770      	bx	lr

08026824 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8026824:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8026828:	4770      	bx	lr

0802682a <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 802682a:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 802682e:	4770      	bx	lr

08026830 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8026830:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8026834:	4770      	bx	lr

08026836 <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8026836:	ee07 2a90 	vmov	s15, r2
 802683a:	6803      	ldr	r3, [r0, #0]
 802683c:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8026840:	ee07 1a90 	vmov	s15, r1
 8026844:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8026848:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 802684c:	4718      	bx	r3

0802684e <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 802684e:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8026852:	4770      	bx	lr

08026854 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8026854:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8026858:	4770      	bx	lr

0802685a <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 802685a:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 802685e:	4770      	bx	lr

08026860 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8026860:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8026864:	4770      	bx	lr

08026866 <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8026866:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 802686a:	4770      	bx	lr

0802686c <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 802686c:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8026870:	4770      	bx	lr

08026872 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8026872:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8026876:	4770      	bx	lr

08026878 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8026878:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 802687c:	4770      	bx	lr

0802687e <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 802687e:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8026882:	4770      	bx	lr

08026884 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8026884:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8026888:	4770      	bx	lr

0802688a <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 802688a:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 802688e:	4770      	bx	lr

08026890 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8026890:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8026894:	4770      	bx	lr

08026896 <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8026896:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 802689a:	4770      	bx	lr

0802689c <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 802689c:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 80268a0:	4770      	bx	lr

080268a2 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 80268a2:	b510      	push	{r4, lr}
 80268a4:	ed2d 8b04 	vpush	{d8-d9}
 80268a8:	6803      	ldr	r3, [r0, #0]
 80268aa:	4604      	mov	r4, r0
 80268ac:	699b      	ldr	r3, [r3, #24]
 80268ae:	eeb0 8a40 	vmov.f32	s16, s0
 80268b2:	eef0 8a60 	vmov.f32	s17, s1
 80268b6:	eeb0 9a41 	vmov.f32	s18, s2
 80268ba:	4798      	blx	r3
 80268bc:	6823      	ldr	r3, [r4, #0]
 80268be:	4620      	mov	r0, r4
 80268c0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80268c2:	eeb0 1a49 	vmov.f32	s2, s18
 80268c6:	eef0 0a68 	vmov.f32	s1, s17
 80268ca:	eeb0 0a48 	vmov.f32	s0, s16
 80268ce:	4798      	blx	r3
 80268d0:	ecbd 8b04 	vpop	{d8-d9}
 80268d4:	6823      	ldr	r3, [r4, #0]
 80268d6:	4620      	mov	r0, r4
 80268d8:	699b      	ldr	r3, [r3, #24]
 80268da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80268de:	4718      	bx	r3

080268e0 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 80268e0:	b510      	push	{r4, lr}
 80268e2:	ed2d 8b02 	vpush	{d8}
 80268e6:	6803      	ldr	r3, [r0, #0]
 80268e8:	4604      	mov	r4, r0
 80268ea:	699b      	ldr	r3, [r3, #24]
 80268ec:	eeb0 8a40 	vmov.f32	s16, s0
 80268f0:	4798      	blx	r3
 80268f2:	6823      	ldr	r3, [r4, #0]
 80268f4:	4620      	mov	r0, r4
 80268f6:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80268fa:	eeb0 0a48 	vmov.f32	s0, s16
 80268fe:	4798      	blx	r3
 8026900:	ecbd 8b02 	vpop	{d8}
 8026904:	6823      	ldr	r3, [r4, #0]
 8026906:	4620      	mov	r0, r4
 8026908:	699b      	ldr	r3, [r3, #24]
 802690a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802690e:	4718      	bx	r3

08026910 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8026910:	2200      	movs	r2, #0
 8026912:	8002      	strh	r2, [r0, #0]
 8026914:	8042      	strh	r2, [r0, #2]
 8026916:	8082      	strh	r2, [r0, #4]
 8026918:	80c2      	strh	r2, [r0, #6]
 802691a:	4770      	bx	lr

0802691c <_ZN8touchgfx13TextureMapperD1Ev>:
 802691c:	4770      	bx	lr

0802691e <_ZN8touchgfx13TextureMapperD0Ev>:
 802691e:	b510      	push	{r4, lr}
 8026920:	2190      	movs	r1, #144	; 0x90
 8026922:	4604      	mov	r4, r0
 8026924:	f000 fe1b 	bl	802755e <_ZdlPvj>
 8026928:	4620      	mov	r0, r4
 802692a:	bd10      	pop	{r4, pc}

0802692c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 802692c:	b538      	push	{r3, r4, r5, lr}
 802692e:	2500      	movs	r5, #0
 8026930:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8026934:	2301      	movs	r3, #1
 8026936:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 802693a:	4b1f      	ldr	r3, [pc, #124]	; (80269b8 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 802693c:	8085      	strh	r5, [r0, #4]
 802693e:	80c5      	strh	r5, [r0, #6]
 8026940:	8105      	strh	r5, [r0, #8]
 8026942:	8145      	strh	r5, [r0, #10]
 8026944:	8185      	strh	r5, [r0, #12]
 8026946:	81c5      	strh	r5, [r0, #14]
 8026948:	8205      	strh	r5, [r0, #16]
 802694a:	8245      	strh	r5, [r0, #18]
 802694c:	61c5      	str	r5, [r0, #28]
 802694e:	8405      	strh	r5, [r0, #32]
 8026950:	8445      	strh	r5, [r0, #34]	; 0x22
 8026952:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8026956:	6003      	str	r3, [r0, #0]
 8026958:	880b      	ldrh	r3, [r1, #0]
 802695a:	84c3      	strh	r3, [r0, #38]	; 0x26
 802695c:	23ff      	movs	r3, #255	; 0xff
 802695e:	4604      	mov	r4, r0
 8026960:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8026964:	f7eb fb93 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8026968:	4b14      	ldr	r3, [pc, #80]	; (80269bc <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 802696a:	6023      	str	r3, [r4, #0]
 802696c:	2300      	movs	r3, #0
 802696e:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8026972:	4913      	ldr	r1, [pc, #76]	; (80269c0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8026974:	62e3      	str	r3, [r4, #44]	; 0x2c
 8026976:	6323      	str	r3, [r4, #48]	; 0x30
 8026978:	6363      	str	r3, [r4, #52]	; 0x34
 802697a:	63a3      	str	r3, [r4, #56]	; 0x38
 802697c:	63e3      	str	r3, [r4, #60]	; 0x3c
 802697e:	6463      	str	r3, [r4, #68]	; 0x44
 8026980:	64a3      	str	r3, [r4, #72]	; 0x48
 8026982:	6523      	str	r3, [r4, #80]	; 0x50
 8026984:	6563      	str	r3, [r4, #84]	; 0x54
 8026986:	65e3      	str	r3, [r4, #92]	; 0x5c
 8026988:	6623      	str	r3, [r4, #96]	; 0x60
 802698a:	66a3      	str	r3, [r4, #104]	; 0x68
 802698c:	66e3      	str	r3, [r4, #108]	; 0x6c
 802698e:	6763      	str	r3, [r4, #116]	; 0x74
 8026990:	67a3      	str	r3, [r4, #120]	; 0x78
 8026992:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8026996:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 802699a:	230c      	movs	r3, #12
 802699c:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 80269a0:	6422      	str	r2, [r4, #64]	; 0x40
 80269a2:	64e1      	str	r1, [r4, #76]	; 0x4c
 80269a4:	65a1      	str	r1, [r4, #88]	; 0x58
 80269a6:	6662      	str	r2, [r4, #100]	; 0x64
 80269a8:	6722      	str	r2, [r4, #112]	; 0x70
 80269aa:	67e2      	str	r2, [r4, #124]	; 0x7c
 80269ac:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 80269b0:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 80269b4:	4620      	mov	r0, r4
 80269b6:	bd38      	pop	{r3, r4, r5, pc}
 80269b8:	0802c854 	.word	0x0802c854
 80269bc:	0802ce38 	.word	0x0802ce38
 80269c0:	447a0000 	.word	0x447a0000

080269c4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 80269c4:	b570      	push	{r4, r5, r6, lr}
 80269c6:	ed2d 8b04 	vpush	{d8-d9}
 80269ca:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 80269ce:	add0      	add	r5, sp, #832	; 0x340
 80269d0:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 80269d2:	f825 3d40 	strh.w	r3, [r5, #-64]!
 80269d6:	4604      	mov	r4, r0
 80269d8:	4628      	mov	r0, r5
 80269da:	f7f1 fa7f 	bl	8017edc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80269de:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 80269e0:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 80269e4:	4606      	mov	r6, r0
 80269e6:	4628      	mov	r0, r5
 80269e8:	f7f1 faac 	bl	8017f44 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80269ec:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80269f0:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 80269f4:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80269f6:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 80269fa:	9312      	str	r3, [sp, #72]	; 0x48
 80269fc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026a00:	1c72      	adds	r2, r6, #1
 8026a02:	3001      	adds	r0, #1
 8026a04:	ee76 5ac7 	vsub.f32	s11, s13, s14
 8026a08:	ee07 2a90 	vmov	s15, r2
 8026a0c:	ee06 0a90 	vmov	s13, r0
 8026a10:	ee36 6a47 	vsub.f32	s12, s12, s14
 8026a14:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8026a18:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8026a1c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8026a20:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8026a24:	9316      	str	r3, [sp, #88]	; 0x58
 8026a26:	931a      	str	r3, [sp, #104]	; 0x68
 8026a28:	931e      	str	r3, [sp, #120]	; 0x78
 8026a2a:	2300      	movs	r3, #0
 8026a2c:	9320      	str	r3, [sp, #128]	; 0x80
 8026a2e:	9321      	str	r3, [sp, #132]	; 0x84
 8026a30:	9322      	str	r3, [sp, #136]	; 0x88
 8026a32:	9324      	str	r3, [sp, #144]	; 0x90
 8026a34:	9325      	str	r3, [sp, #148]	; 0x94
 8026a36:	9326      	str	r3, [sp, #152]	; 0x98
 8026a38:	9328      	str	r3, [sp, #160]	; 0xa0
 8026a3a:	9329      	str	r3, [sp, #164]	; 0xa4
 8026a3c:	932a      	str	r3, [sp, #168]	; 0xa8
 8026a3e:	932c      	str	r3, [sp, #176]	; 0xb0
 8026a40:	932d      	str	r3, [sp, #180]	; 0xb4
 8026a42:	932e      	str	r3, [sp, #184]	; 0xb8
 8026a44:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8026a48:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8026a4c:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8026a50:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8026a54:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8026a58:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8026a5c:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8026a60:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8026a64:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8026a68:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8026a6c:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8026a70:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8026a74:	a830      	add	r0, sp, #192	; 0xc0
 8026a76:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 8026a7a:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8026a7e:	f000 fc43 	bl	8027308 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026a82:	eeb1 0a49 	vneg.f32	s0, s18
 8026a86:	a830      	add	r0, sp, #192	; 0xc0
 8026a88:	f000 fd12 	bl	80274b0 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8026a8c:	eeb1 0a68 	vneg.f32	s0, s17
 8026a90:	f000 fd1c 	bl	80274cc <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8026a94:	eeb1 0a48 	vneg.f32	s0, s16
 8026a98:	f000 fd27 	bl	80274ea <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8026a9c:	a840      	add	r0, sp, #256	; 0x100
 8026a9e:	f000 fc33 	bl	8027308 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026aa2:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 8026aa6:	a840      	add	r0, sp, #256	; 0x100
 8026aa8:	f000 fc86 	bl	80273b8 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8026aac:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8026ab0:	f000 fcac 	bl	802740c <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 8026ab4:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8026ab8:	f000 fcd1 	bl	802745e <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8026abc:	a850      	add	r0, sp, #320	; 0x140
 8026abe:	f000 fc23 	bl	8027308 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026ac2:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8026ac6:	a850      	add	r0, sp, #320	; 0x140
 8026ac8:	f000 fd1e 	bl	8027508 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8026acc:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8026ad0:	f000 fd26 	bl	8027520 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 8026ad4:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8026ad8:	f000 fd2f 	bl	802753a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8026adc:	a860      	add	r0, sp, #384	; 0x180
 8026ade:	f000 fc13 	bl	8027308 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026ae2:	eeb0 0a49 	vmov.f32	s0, s18
 8026ae6:	a860      	add	r0, sp, #384	; 0x180
 8026ae8:	f000 fce2 	bl	80274b0 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8026aec:	eeb0 0a68 	vmov.f32	s0, s17
 8026af0:	f000 fcec 	bl	80274cc <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8026af4:	eeb0 0a48 	vmov.f32	s0, s16
 8026af8:	f000 fcf7 	bl	80274ea <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8026afc:	aa50      	add	r2, sp, #320	; 0x140
 8026afe:	a960      	add	r1, sp, #384	; 0x180
 8026b00:	a8b0      	add	r0, sp, #704	; 0x2c0
 8026b02:	f000 fc1b 	bl	802733c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026b06:	4628      	mov	r0, r5
 8026b08:	aa40      	add	r2, sp, #256	; 0x100
 8026b0a:	a9b0      	add	r1, sp, #704	; 0x2c0
 8026b0c:	f000 fc16 	bl	802733c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026b10:	4629      	mov	r1, r5
 8026b12:	aa30      	add	r2, sp, #192	; 0xc0
 8026b14:	a870      	add	r0, sp, #448	; 0x1c0
 8026b16:	f000 fc11 	bl	802733c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026b1a:	a880      	add	r0, sp, #512	; 0x200
 8026b1c:	f000 fbf4 	bl	8027308 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026b20:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8026b24:	a880      	add	r0, sp, #512	; 0x200
 8026b26:	eeb1 0a40 	vneg.f32	s0, s0
 8026b2a:	f000 fcc1 	bl	80274b0 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8026b2e:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8026b32:	a880      	add	r0, sp, #512	; 0x200
 8026b34:	eeb1 0a40 	vneg.f32	s0, s0
 8026b38:	f000 fcc8 	bl	80274cc <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8026b3c:	a890      	add	r0, sp, #576	; 0x240
 8026b3e:	f000 fbe3 	bl	8027308 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026b42:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 8026b46:	a890      	add	r0, sp, #576	; 0x240
 8026b48:	f000 fc26 	bl	8027398 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8026b4c:	a8a0      	add	r0, sp, #640	; 0x280
 8026b4e:	f000 fbdb 	bl	8027308 <_ZN8touchgfx9Matrix4x4C1Ev>
 8026b52:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8026b56:	a8a0      	add	r0, sp, #640	; 0x280
 8026b58:	f000 fcaa 	bl	80274b0 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8026b5c:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8026b60:	f000 fcb4 	bl	80274cc <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8026b64:	aa90      	add	r2, sp, #576	; 0x240
 8026b66:	a9a0      	add	r1, sp, #640	; 0x280
 8026b68:	a8b0      	add	r0, sp, #704	; 0x2c0
 8026b6a:	f000 fbe7 	bl	802733c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026b6e:	4628      	mov	r0, r5
 8026b70:	aa80      	add	r2, sp, #512	; 0x200
 8026b72:	a9b0      	add	r1, sp, #704	; 0x2c0
 8026b74:	f000 fbe2 	bl	802733c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026b78:	4629      	mov	r1, r5
 8026b7a:	aa70      	add	r2, sp, #448	; 0x1c0
 8026b7c:	4668      	mov	r0, sp
 8026b7e:	466d      	mov	r5, sp
 8026b80:	f000 fbdc 	bl	802733c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8026b84:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8026b86:	ae70      	add	r6, sp, #448	; 0x1c0
 8026b88:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8026b8a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8026b8c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8026b8e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8026b90:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8026b92:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8026b96:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8026b9a:	2500      	movs	r5, #0
 8026b9c:	0129      	lsls	r1, r5, #4
 8026b9e:	ab20      	add	r3, sp, #128	; 0x80
 8026ba0:	185e      	adds	r6, r3, r1
 8026ba2:	ab10      	add	r3, sp, #64	; 0x40
 8026ba4:	4419      	add	r1, r3
 8026ba6:	a870      	add	r0, sp, #448	; 0x1c0
 8026ba8:	f000 fb7e 	bl	80272a8 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8026bac:	3501      	adds	r5, #1
 8026bae:	2d04      	cmp	r5, #4
 8026bb0:	ed86 0a00 	vstr	s0, [r6]
 8026bb4:	edc6 0a01 	vstr	s1, [r6, #4]
 8026bb8:	ed86 1a02 	vstr	s2, [r6, #8]
 8026bbc:	edc6 1a03 	vstr	s3, [r6, #12]
 8026bc0:	d1ec      	bne.n	8026b9c <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 8026bc2:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 8026bc6:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8026bca:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8026bce:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8026bd2:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 8026bd6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8026bda:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8026bde:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 8026be2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8026be6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8026bea:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 8026bee:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8026bf2:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 8026bf6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8026bfa:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8026bfe:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8026c02:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 8026c06:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 8026c0a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8026c0e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8026c12:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 8026c16:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 8026c1a:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8026c1e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8026c22:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 8026c26:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8026c2a:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 8026c2e:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 8026c32:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8026c36:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8026c3a:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 8026c3e:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 8026c42:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 8026c46:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8026c4a:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 8026c4e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8026c52:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 8026c56:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 8026c5a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8026c5e:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8026c62:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 8026c66:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 8026c6a:	ecbd 8b04 	vpop	{d8-d9}
 8026c6e:	bd70      	pop	{r4, r5, r6, pc}

08026c70 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8026c70:	b510      	push	{r4, lr}
 8026c72:	4604      	mov	r4, r0
 8026c74:	f7eb fa0b 	bl	801208e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8026c78:	4620      	mov	r0, r4
 8026c7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8026c7e:	f7ff bea1 	b.w	80269c4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026c82 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 8026c82:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 8026c86:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 8026c8a:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8026c8e:	f7ff be99 	b.w	80269c4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026c92 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 8026c92:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 8026c96:	f7ff be95 	b.w	80269c4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026c9a <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 8026c9a:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8026c9e:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 8026ca2:	f7ff be8f 	b.w	80269c4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026ca6 <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 8026ca6:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8026caa:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8026cae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026cb2:	bfd8      	it	le
 8026cb4:	eeb0 0a67 	vmovle.f32	s0, s15
 8026cb8:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8026cbc:	f7ff be82 	b.w	80269c4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026cc0 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8026cc0:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 8026cc4:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8026cc8:	f7ff be7c 	b.w	80269c4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026ccc <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8026ccc:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8026cd0:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8026cd4:	f7ff be76 	b.w	80269c4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026cd8 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8026cd8:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8026cdc:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8026ce0:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 8026ce4:	f7ff be6e 	b.w	80269c4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08026ce8 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 8026ce8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026cec:	ed2d 8b04 	vpush	{d8-d9}
 8026cf0:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 8026cf4:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 8026cf8:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8026cfc:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8026d00:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8026d04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026d08:	bf54      	ite	pl
 8026d0a:	eeb0 0a69 	vmovpl.f32	s0, s19
 8026d0e:	eeb0 0a48 	vmovmi.f32	s0, s16
 8026d12:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8026d16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026d1a:	bfd8      	it	le
 8026d1c:	eeb0 0a49 	vmovle.f32	s0, s18
 8026d20:	eef4 8ac0 	vcmpe.f32	s17, s0
 8026d24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026d28:	bfd8      	it	le
 8026d2a:	eeb0 0a68 	vmovle.f32	s0, s17
 8026d2e:	460c      	mov	r4, r1
 8026d30:	4607      	mov	r7, r0
 8026d32:	f000 fd09 	bl	8027748 <floorf>
 8026d36:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8026d3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026d3e:	bf58      	it	pl
 8026d40:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8026d44:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8026d48:	bf56      	itet	pl
 8026d4a:	ee10 3a10 	vmovpl	r3, s0
 8026d4e:	2600      	movmi	r6, #0
 8026d50:	b21e      	sxthpl	r6, r3
 8026d52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026d56:	bfd8      	it	le
 8026d58:	eeb0 8a69 	vmovle.f32	s16, s19
 8026d5c:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8026d60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026d64:	bf58      	it	pl
 8026d66:	eeb0 8a49 	vmovpl.f32	s16, s18
 8026d6a:	eef4 8ac8 	vcmpe.f32	s17, s16
 8026d6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026d72:	bf54      	ite	pl
 8026d74:	eeb0 0a68 	vmovpl.f32	s0, s17
 8026d78:	eeb0 0a48 	vmovmi.f32	s0, s16
 8026d7c:	f000 fca2 	bl	80276c4 <ceilf>
 8026d80:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8026d84:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8026d88:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8026d8c:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8026d90:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 8026d94:	ee07 8a90 	vmov	s15, r8
 8026d98:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8026d9c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8026da0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026da4:	bfd8      	it	le
 8026da6:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8026daa:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8026dae:	bfdc      	itt	le
 8026db0:	ee10 3a10 	vmovle	r3, s0
 8026db4:	fa0f f883 	sxthle.w	r8, r3
 8026db8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026dbc:	bf54      	ite	pl
 8026dbe:	eeb0 0a69 	vmovpl.f32	s0, s19
 8026dc2:	eeb0 0a48 	vmovmi.f32	s0, s16
 8026dc6:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8026dca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026dce:	bfd8      	it	le
 8026dd0:	eeb0 0a49 	vmovle.f32	s0, s18
 8026dd4:	eef4 8ac0 	vcmpe.f32	s17, s0
 8026dd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026ddc:	bfd8      	it	le
 8026dde:	eeb0 0a68 	vmovle.f32	s0, s17
 8026de2:	f000 fcb1 	bl	8027748 <floorf>
 8026de6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8026dea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026dee:	bf58      	it	pl
 8026df0:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8026df4:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8026df8:	bf56      	itet	pl
 8026dfa:	ee10 3a10 	vmovpl	r3, s0
 8026dfe:	2500      	movmi	r5, #0
 8026e00:	b21d      	sxthpl	r5, r3
 8026e02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026e06:	bfd8      	it	le
 8026e08:	eeb0 8a69 	vmovle.f32	s16, s19
 8026e0c:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8026e10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026e14:	bf58      	it	pl
 8026e16:	eeb0 8a49 	vmovpl.f32	s16, s18
 8026e1a:	eef4 8ac8 	vcmpe.f32	s17, s16
 8026e1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026e22:	bf54      	ite	pl
 8026e24:	eeb0 0a68 	vmovpl.f32	s0, s17
 8026e28:	eeb0 0a48 	vmovmi.f32	s0, s16
 8026e2c:	f000 fc4a 	bl	80276c4 <ceilf>
 8026e30:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8026e34:	803e      	strh	r6, [r7, #0]
 8026e36:	ee07 3a90 	vmov	s15, r3
 8026e3a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8026e3e:	807d      	strh	r5, [r7, #2]
 8026e40:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8026e44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8026e48:	bfd8      	it	le
 8026e4a:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8026e4e:	eba8 0606 	sub.w	r6, r8, r6
 8026e52:	bfdc      	itt	le
 8026e54:	ee10 3a10 	vmovle	r3, s0
 8026e58:	b21b      	sxthle	r3, r3
 8026e5a:	1b5d      	subs	r5, r3, r5
 8026e5c:	80be      	strh	r6, [r7, #4]
 8026e5e:	80fd      	strh	r5, [r7, #6]
 8026e60:	ecbd 8b04 	vpop	{d8-d9}
 8026e64:	4638      	mov	r0, r7
 8026e66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08026e6a <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 8026e6a:	b513      	push	{r0, r1, r4, lr}
 8026e6c:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8026e70:	4604      	mov	r4, r0
 8026e72:	b143      	cbz	r3, 8026e86 <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 8026e74:	4601      	mov	r1, r0
 8026e76:	4668      	mov	r0, sp
 8026e78:	f7ff ff36 	bl	8026ce8 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 8026e7c:	6823      	ldr	r3, [r4, #0]
 8026e7e:	4669      	mov	r1, sp
 8026e80:	691b      	ldr	r3, [r3, #16]
 8026e82:	4620      	mov	r0, r4
 8026e84:	4798      	blx	r3
 8026e86:	b002      	add	sp, #8
 8026e88:	bd10      	pop	{r4, pc}

08026e8a <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 8026e8a:	4603      	mov	r3, r0
 8026e8c:	3026      	adds	r0, #38	; 0x26
 8026e8e:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8026e92:	b90b      	cbnz	r3, 8026e98 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 8026e94:	f7ef b82c 	b.w	8015ef0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8026e98:	f7ef b83a 	b.w	8015f10 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08026e9c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8026e9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026ea0:	ed2d 8b04 	vpush	{d8-d9}
 8026ea4:	4604      	mov	r4, r0
 8026ea6:	469b      	mov	fp, r3
 8026ea8:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8026eac:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8026eb0:	f9b1 6000 	ldrsh.w	r6, [r1]
 8026eb4:	8888      	ldrh	r0, [r1, #4]
 8026eb6:	b0b3      	sub	sp, #204	; 0xcc
 8026eb8:	4430      	add	r0, r6
 8026eba:	b280      	uxth	r0, r0
 8026ebc:	9206      	str	r2, [sp, #24]
 8026ebe:	fa0f fe80 	sxth.w	lr, r0
 8026ec2:	2200      	movs	r2, #0
 8026ec4:	4596      	cmp	lr, r2
 8026ec6:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 8026eca:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8026ece:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 8026ed2:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 8026ed4:	9211      	str	r2, [sp, #68]	; 0x44
 8026ed6:	f340 8129 	ble.w	802712c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8026eda:	45b4      	cmp	ip, r6
 8026edc:	f340 8126 	ble.w	802712c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8026ee0:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8026ee4:	88ca      	ldrh	r2, [r1, #6]
 8026ee6:	442a      	add	r2, r5
 8026ee8:	b292      	uxth	r2, r2
 8026eea:	b211      	sxth	r1, r2
 8026eec:	2900      	cmp	r1, #0
 8026eee:	f340 811d 	ble.w	802712c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8026ef2:	42ab      	cmp	r3, r5
 8026ef4:	f340 811a 	ble.w	802712c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8026ef8:	45f4      	cmp	ip, lr
 8026efa:	bfb8      	it	lt
 8026efc:	fa1f f08c 	uxthlt.w	r0, ip
 8026f00:	428b      	cmp	r3, r1
 8026f02:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8026f06:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8026f0a:	bfb8      	it	lt
 8026f0c:	b29a      	uxthlt	r2, r3
 8026f0e:	1b80      	subs	r0, r0, r6
 8026f10:	1b52      	subs	r2, r2, r5
 8026f12:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 8026f16:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 8026f1a:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8026f1e:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 8026f22:	ab11      	add	r3, sp, #68	; 0x44
 8026f24:	e893 0003 	ldmia.w	r3, {r0, r1}
 8026f28:	6822      	ldr	r2, [r4, #0]
 8026f2a:	9307      	str	r3, [sp, #28]
 8026f2c:	ad13      	add	r5, sp, #76	; 0x4c
 8026f2e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8026f30:	e885 0003 	stmia.w	r5, {r0, r1}
 8026f34:	4629      	mov	r1, r5
 8026f36:	4620      	mov	r0, r4
 8026f38:	4790      	blx	r2
 8026f3a:	4621      	mov	r1, r4
 8026f3c:	a815      	add	r0, sp, #84	; 0x54
 8026f3e:	f7ee ff33 	bl	8015da8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8026f42:	a815      	add	r0, sp, #84	; 0x54
 8026f44:	f7ed fbf8 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026f48:	9b07      	ldr	r3, [sp, #28]
 8026f4a:	1d26      	adds	r6, r4, #4
 8026f4c:	4618      	mov	r0, r3
 8026f4e:	4631      	mov	r1, r6
 8026f50:	f7ed fc36 	bl	80147c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026f54:	4628      	mov	r0, r5
 8026f56:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8026f5a:	f7ed fbed 	bl	8014738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026f5e:	4628      	mov	r0, r5
 8026f60:	f7f1 f8a8 	bl	80180b4 <_ZNK8touchgfx6Bitmap7getDataEv>
 8026f64:	9007      	str	r0, [sp, #28]
 8026f66:	2800      	cmp	r0, #0
 8026f68:	f000 80db 	beq.w	8027122 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 8026f6c:	f8db 2000 	ldr.w	r2, [fp]
 8026f70:	9209      	str	r2, [sp, #36]	; 0x24
 8026f72:	f8db 2004 	ldr.w	r2, [fp, #4]
 8026f76:	920a      	str	r2, [sp, #40]	; 0x28
 8026f78:	f8db 2008 	ldr.w	r2, [fp, #8]
 8026f7c:	920b      	str	r2, [sp, #44]	; 0x2c
 8026f7e:	f8db 200c 	ldr.w	r2, [fp, #12]
 8026f82:	920c      	str	r2, [sp, #48]	; 0x30
 8026f84:	f8da 2000 	ldr.w	r2, [sl]
 8026f88:	920d      	str	r2, [sp, #52]	; 0x34
 8026f8a:	f8da 2004 	ldr.w	r2, [sl, #4]
 8026f8e:	920e      	str	r2, [sp, #56]	; 0x38
 8026f90:	f8da 2008 	ldr.w	r2, [sl, #8]
 8026f94:	920f      	str	r2, [sp, #60]	; 0x3c
 8026f96:	f8da 200c 	ldr.w	r2, [sl, #12]
 8026f9a:	9210      	str	r2, [sp, #64]	; 0x40
 8026f9c:	a90d      	add	r1, sp, #52	; 0x34
 8026f9e:	4632      	mov	r2, r6
 8026fa0:	a809      	add	r0, sp, #36	; 0x24
 8026fa2:	f7ed fbf1 	bl	8014788 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8026fa6:	4632      	mov	r2, r6
 8026fa8:	a90e      	add	r1, sp, #56	; 0x38
 8026faa:	a80a      	add	r0, sp, #40	; 0x28
 8026fac:	f7ed fbec 	bl	8014788 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8026fb0:	4632      	mov	r2, r6
 8026fb2:	a90f      	add	r1, sp, #60	; 0x3c
 8026fb4:	a80b      	add	r0, sp, #44	; 0x2c
 8026fb6:	f7ed fbe7 	bl	8014788 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8026fba:	4632      	mov	r2, r6
 8026fbc:	a910      	add	r1, sp, #64	; 0x40
 8026fbe:	a80c      	add	r0, sp, #48	; 0x30
 8026fc0:	f7ed fbe2 	bl	8014788 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8026fc4:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8026fc8:	edd7 4a00 	vldr	s9, [r7]
 8026fcc:	edd7 5a01 	vldr	s11, [r7, #4]
 8026fd0:	ed98 4a00 	vldr	s8, [r8]
 8026fd4:	ed98 5a01 	vldr	s10, [r8, #4]
 8026fd8:	ed99 9a00 	vldr	s18, [r9]
 8026fdc:	ed99 8a01 	vldr	s16, [r9, #4]
 8026fe0:	edd9 8a02 	vldr	s17, [r9, #8]
 8026fe4:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8026fe8:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8026fec:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8026ff0:	eef0 6a67 	vmov.f32	s13, s15
 8026ff4:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8026ff8:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8026ffc:	eeb0 7a67 	vmov.f32	s14, s15
 8027000:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8027004:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 8027008:	eeb0 6a67 	vmov.f32	s12, s15
 802700c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027010:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8027014:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 8027018:	ee16 6a10 	vmov	r6, s12
 802701c:	eeb0 6a67 	vmov.f32	s12, s15
 8027020:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027024:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8027028:	f8d7 a008 	ldr.w	sl, [r7, #8]
 802702c:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8027030:	68ff      	ldr	r7, [r7, #12]
 8027032:	9624      	str	r6, [sp, #144]	; 0x90
 8027034:	ee16 0a10 	vmov	r0, s12
 8027038:	eeb0 6a67 	vmov.f32	s12, s15
 802703c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027040:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8027044:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 8027048:	ee16 1a10 	vmov	r1, s12
 802704c:	eeb0 6a67 	vmov.f32	s12, s15
 8027050:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027054:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8027058:	ee16 2a10 	vmov	r2, s12
 802705c:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8027060:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 8027064:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8027068:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 802706c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027070:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8027074:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8027078:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 802707c:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8027080:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 8027084:	922d      	str	r2, [sp, #180]	; 0xb4
 8027086:	4a2b      	ldr	r2, [pc, #172]	; (8027134 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 8027088:	9b06      	ldr	r3, [sp, #24]
 802708a:	8812      	ldrh	r2, [r2, #0]
 802708c:	9317      	str	r3, [sp, #92]	; 0x5c
 802708e:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8027092:	9b07      	ldr	r3, [sp, #28]
 8027094:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8027098:	4628      	mov	r0, r5
 802709a:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 802709e:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 80270a2:	9218      	str	r2, [sp, #96]	; 0x60
 80270a4:	9319      	str	r3, [sp, #100]	; 0x64
 80270a6:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 80270aa:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 80270ae:	9731      	str	r7, [sp, #196]	; 0xc4
 80270b0:	f7f1 f830 	bl	8018114 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80270b4:	901a      	str	r0, [sp, #104]	; 0x68
 80270b6:	4628      	mov	r0, r5
 80270b8:	f7f0 ff10 	bl	8017edc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80270bc:	901b      	str	r0, [sp, #108]	; 0x6c
 80270be:	4628      	mov	r0, r5
 80270c0:	f7f0 ff40 	bl	8017f44 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80270c4:	901c      	str	r0, [sp, #112]	; 0x70
 80270c6:	4628      	mov	r0, r5
 80270c8:	f7f0 ff08 	bl	8017edc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80270cc:	eeb4 9a48 	vcmp.f32	s18, s16
 80270d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80270d4:	901d      	str	r0, [sp, #116]	; 0x74
 80270d6:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 80270da:	d107      	bne.n	80270ec <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 80270dc:	eeb4 8a68 	vcmp.f32	s16, s17
 80270e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80270e4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80270e8:	bf08      	it	eq
 80270ea:	461e      	moveq	r6, r3
 80270ec:	4b12      	ldr	r3, [pc, #72]	; (8027138 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 80270ee:	681b      	ldr	r3, [r3, #0]
 80270f0:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80270f4:	b10a      	cbz	r2, 80270fa <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 80270f6:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 80270f8:	b905      	cbnz	r5, 80270fc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 80270fa:	689d      	ldr	r5, [r3, #8]
 80270fc:	682b      	ldr	r3, [r5, #0]
 80270fe:	4620      	mov	r0, r4
 8027100:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8027102:	f7ff fec2 	bl	8026e8a <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 8027106:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 802710a:	9604      	str	r6, [sp, #16]
 802710c:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8027110:	ab13      	add	r3, sp, #76	; 0x4c
 8027112:	9301      	str	r3, [sp, #4]
 8027114:	ab15      	add	r3, sp, #84	; 0x54
 8027116:	9300      	str	r3, [sp, #0]
 8027118:	aa1e      	add	r2, sp, #120	; 0x78
 802711a:	ab19      	add	r3, sp, #100	; 0x64
 802711c:	a917      	add	r1, sp, #92	; 0x5c
 802711e:	4628      	mov	r0, r5
 8027120:	47b8      	blx	r7
 8027122:	b033      	add	sp, #204	; 0xcc
 8027124:	ecbd 8b04 	vpop	{d8-d9}
 8027128:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802712c:	2300      	movs	r3, #0
 802712e:	9312      	str	r3, [sp, #72]	; 0x48
 8027130:	e6f7      	b.n	8026f22 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 8027132:	bf00      	nop
 8027134:	200137b6 	.word	0x200137b6
 8027138:	200137bc 	.word	0x200137bc

0802713c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 802713c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027140:	ed2d 8b02 	vpush	{d8}
 8027144:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8027148:	b098      	sub	sp, #96	; 0x60
 802714a:	4604      	mov	r4, r0
 802714c:	4688      	mov	r8, r1
 802714e:	2b00      	cmp	r3, #0
 8027150:	d077      	beq.n	8027242 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 8027152:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8027156:	4628      	mov	r0, r5
 8027158:	f7f0 fec0 	bl	8017edc <_ZNK8touchgfx6Bitmap8getWidthEv>
 802715c:	ee07 0a90 	vmov	s15, r0
 8027160:	4628      	mov	r0, r5
 8027162:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 8027166:	f7f0 feed 	bl	8017f44 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802716a:	4b4e      	ldr	r3, [pc, #312]	; (80272a4 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 802716c:	781b      	ldrb	r3, [r3, #0]
 802716e:	ee07 0a90 	vmov	s15, r0
 8027172:	2b01      	cmp	r3, #1
 8027174:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8027178:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 802717c:	d066      	beq.n	802724c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 802717e:	eeb0 6a47 	vmov.f32	s12, s14
 8027182:	ee17 3a10 	vmov	r3, s14
 8027186:	eeb0 4a48 	vmov.f32	s8, s16
 802718a:	eeb0 7a48 	vmov.f32	s14, s16
 802718e:	eef0 4a67 	vmov.f32	s9, s15
 8027192:	eeb0 8a67 	vmov.f32	s16, s15
 8027196:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 802719a:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 802719e:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 80271a2:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 80271a6:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 80271aa:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 80271ae:	6f25      	ldr	r5, [r4, #112]	; 0x70
 80271b0:	6e66      	ldr	r6, [r4, #100]	; 0x64
 80271b2:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 80271b4:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 80271b8:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 80271bc:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80271c0:	ee73 1a65 	vsub.f32	s3, s6, s11
 80271c4:	ee72 6ac5 	vsub.f32	s13, s5, s10
 80271c8:	ee32 1a45 	vsub.f32	s2, s4, s10
 80271cc:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 80271d0:	ee73 1ae5 	vsub.f32	s3, s7, s11
 80271d4:	eee1 6a21 	vfma.f32	s13, s2, s3
 80271d8:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80271dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80271e0:	dd3d      	ble.n	802725e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 80271e2:	ed8d 5a04 	vstr	s10, [sp, #16]
 80271e6:	ed8d 2a05 	vstr	s4, [sp, #20]
 80271ea:	edcd 2a06 	vstr	s5, [sp, #24]
 80271ee:	f8cd c01c 	str.w	ip, [sp, #28]
 80271f2:	edcd 5a08 	vstr	s11, [sp, #32]
 80271f6:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 80271fa:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 80271fe:	970b      	str	r7, [sp, #44]	; 0x2c
 8027200:	960c      	str	r6, [sp, #48]	; 0x30
 8027202:	950d      	str	r5, [sp, #52]	; 0x34
 8027204:	920e      	str	r2, [sp, #56]	; 0x38
 8027206:	900f      	str	r0, [sp, #60]	; 0x3c
 8027208:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 802720c:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8027210:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 8027214:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 8027218:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 802721c:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8027220:	9316      	str	r3, [sp, #88]	; 0x58
 8027222:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 8027226:	ab14      	add	r3, sp, #80	; 0x50
 8027228:	9303      	str	r3, [sp, #12]
 802722a:	ab10      	add	r3, sp, #64	; 0x40
 802722c:	9302      	str	r3, [sp, #8]
 802722e:	ab0c      	add	r3, sp, #48	; 0x30
 8027230:	9301      	str	r3, [sp, #4]
 8027232:	ab08      	add	r3, sp, #32
 8027234:	9300      	str	r3, [sp, #0]
 8027236:	2200      	movs	r2, #0
 8027238:	ab04      	add	r3, sp, #16
 802723a:	4641      	mov	r1, r8
 802723c:	4620      	mov	r0, r4
 802723e:	f7ff fe2d 	bl	8026e9c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8027242:	b018      	add	sp, #96	; 0x60
 8027244:	ecbd 8b02 	vpop	{d8}
 8027248:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802724c:	eeb0 6a48 	vmov.f32	s12, s16
 8027250:	eef0 4a47 	vmov.f32	s9, s14
 8027254:	ee17 3a90 	vmov	r3, s15
 8027258:	eeb0 4a67 	vmov.f32	s8, s15
 802725c:	e79b      	b.n	8027196 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 802725e:	ed8d 5a05 	vstr	s10, [sp, #20]
 8027262:	ed8d 2a04 	vstr	s4, [sp, #16]
 8027266:	f8cd c018 	str.w	ip, [sp, #24]
 802726a:	edcd 2a07 	vstr	s5, [sp, #28]
 802726e:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 8027272:	ed8d 3a08 	vstr	s6, [sp, #32]
 8027276:	970a      	str	r7, [sp, #40]	; 0x28
 8027278:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 802727c:	960d      	str	r6, [sp, #52]	; 0x34
 802727e:	950c      	str	r5, [sp, #48]	; 0x30
 8027280:	900e      	str	r0, [sp, #56]	; 0x38
 8027282:	920f      	str	r2, [sp, #60]	; 0x3c
 8027284:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 8027288:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 802728c:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8027290:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8027294:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8027298:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 802729c:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 80272a0:	9317      	str	r3, [sp, #92]	; 0x5c
 80272a2:	e7c0      	b.n	8027226 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 80272a4:	200137b4 	.word	0x200137b4

080272a8 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 80272a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80272aa:	b08d      	sub	sp, #52	; 0x34
 80272ac:	2300      	movs	r3, #0
 80272ae:	9304      	str	r3, [sp, #16]
 80272b0:	9305      	str	r3, [sp, #20]
 80272b2:	9306      	str	r3, [sp, #24]
 80272b4:	aa04      	add	r2, sp, #16
 80272b6:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 80272ba:	9307      	str	r3, [sp, #28]
 80272bc:	f100 0640 	add.w	r6, r0, #64	; 0x40
 80272c0:	4613      	mov	r3, r2
 80272c2:	f101 0710 	add.w	r7, r1, #16
 80272c6:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8027304 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 80272ca:	460c      	mov	r4, r1
 80272cc:	4605      	mov	r5, r0
 80272ce:	ecb4 7a01 	vldmia	r4!, {s14}
 80272d2:	ecf5 6a01 	vldmia	r5!, {s13}
 80272d6:	42bc      	cmp	r4, r7
 80272d8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80272dc:	d1f7      	bne.n	80272ce <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 80272de:	3010      	adds	r0, #16
 80272e0:	42b0      	cmp	r0, r6
 80272e2:	ece2 7a01 	vstmia	r2!, {s15}
 80272e6:	d1ee      	bne.n	80272c6 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 80272e8:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80272ea:	ac0c      	add	r4, sp, #48	; 0x30
 80272ec:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 80272f0:	ed9d 0a08 	vldr	s0, [sp, #32]
 80272f4:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 80272f8:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 80272fc:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8027300:	b00d      	add	sp, #52	; 0x34
 8027302:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027304:	00000000 	.word	0x00000000

08027308 <_ZN8touchgfx9Matrix4x4C1Ev>:
 8027308:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8027338 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 802730c:	2300      	movs	r3, #0
 802730e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8027312:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 8027316:	2200      	movs	r2, #0
 8027318:	4293      	cmp	r3, r2
 802731a:	f102 0201 	add.w	r2, r2, #1
 802731e:	bf14      	ite	ne
 8027320:	eef0 6a47 	vmovne.f32	s13, s14
 8027324:	eef0 6a67 	vmoveq.f32	s13, s15
 8027328:	2a04      	cmp	r2, #4
 802732a:	ece1 6a01 	vstmia	r1!, {s13}
 802732e:	d1f3      	bne.n	8027318 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8027330:	3301      	adds	r3, #1
 8027332:	2b04      	cmp	r3, #4
 8027334:	d1ed      	bne.n	8027312 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 8027336:	4770      	bx	lr
 8027338:	00000000 	.word	0x00000000

0802733c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 802733c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027340:	460c      	mov	r4, r1
 8027342:	4605      	mov	r5, r0
 8027344:	4690      	mov	r8, r2
 8027346:	f7ff ffdf 	bl	8027308 <_ZN8touchgfx9Matrix4x4C1Ev>
 802734a:	4628      	mov	r0, r5
 802734c:	4621      	mov	r1, r4
 802734e:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 8027352:	2300      	movs	r3, #0
 8027354:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8027394 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 8027358:	eb08 0603 	add.w	r6, r8, r3
 802735c:	460f      	mov	r7, r1
 802735e:	2400      	movs	r4, #0
 8027360:	4632      	mov	r2, r6
 8027362:	ecf7 6a01 	vldmia	r7!, {s13}
 8027366:	ed92 7a00 	vldr	s14, [r2]
 802736a:	3401      	adds	r4, #1
 802736c:	2c04      	cmp	r4, #4
 802736e:	f106 0610 	add.w	r6, r6, #16
 8027372:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027376:	d1f3      	bne.n	8027360 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 8027378:	18c2      	adds	r2, r0, r3
 802737a:	3304      	adds	r3, #4
 802737c:	2b10      	cmp	r3, #16
 802737e:	edc2 7a00 	vstr	s15, [r2]
 8027382:	d1e7      	bne.n	8027354 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 8027384:	3110      	adds	r1, #16
 8027386:	4561      	cmp	r1, ip
 8027388:	f100 0010 	add.w	r0, r0, #16
 802738c:	d1e1      	bne.n	8027352 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 802738e:	4628      	mov	r0, r5
 8027390:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027394:	00000000 	.word	0x00000000

08027398 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 8027398:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802739c:	ee87 0a80 	vdiv.f32	s0, s15, s0
 80273a0:	f100 0320 	add.w	r3, r0, #32
 80273a4:	3030      	adds	r0, #48	; 0x30
 80273a6:	ecf3 7a01 	vldmia	r3!, {s15}
 80273aa:	ee60 7a27 	vmul.f32	s15, s0, s15
 80273ae:	4283      	cmp	r3, r0
 80273b0:	edc3 7a03 	vstr	s15, [r3, #12]
 80273b4:	d1f7      	bne.n	80273a6 <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 80273b6:	4770      	bx	lr

080273b8 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 80273b8:	b510      	push	{r4, lr}
 80273ba:	ed2d 8b02 	vpush	{d8}
 80273be:	4604      	mov	r4, r0
 80273c0:	eef0 8a40 	vmov.f32	s17, s0
 80273c4:	f000 f938 	bl	8027638 <sinf>
 80273c8:	eeb0 8a40 	vmov.f32	s16, s0
 80273cc:	eeb0 0a68 	vmov.f32	s0, s17
 80273d0:	f000 f8ee 	bl	80275b0 <cosf>
 80273d4:	f104 0310 	add.w	r3, r4, #16
 80273d8:	f104 0220 	add.w	r2, r4, #32
 80273dc:	eeb1 6a48 	vneg.f32	s12, s16
 80273e0:	edd3 7a04 	vldr	s15, [r3, #16]
 80273e4:	edd3 6a00 	vldr	s13, [r3]
 80273e8:	ee26 7a27 	vmul.f32	s14, s12, s15
 80273ec:	ee67 7a80 	vmul.f32	s15, s15, s0
 80273f0:	eea6 7a80 	vfma.f32	s14, s13, s0
 80273f4:	eee6 7a88 	vfma.f32	s15, s13, s16
 80273f8:	eca3 7a01 	vstmia	r3!, {s14}
 80273fc:	429a      	cmp	r2, r3
 80273fe:	edc3 7a03 	vstr	s15, [r3, #12]
 8027402:	d1ed      	bne.n	80273e0 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8027404:	ecbd 8b02 	vpop	{d8}
 8027408:	4620      	mov	r0, r4
 802740a:	bd10      	pop	{r4, pc}

0802740c <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 802740c:	b510      	push	{r4, lr}
 802740e:	ed2d 8b02 	vpush	{d8}
 8027412:	4604      	mov	r4, r0
 8027414:	eef0 8a40 	vmov.f32	s17, s0
 8027418:	f000 f90e 	bl	8027638 <sinf>
 802741c:	eeb0 8a40 	vmov.f32	s16, s0
 8027420:	eeb0 0a68 	vmov.f32	s0, s17
 8027424:	f000 f8c4 	bl	80275b0 <cosf>
 8027428:	4623      	mov	r3, r4
 802742a:	f104 0210 	add.w	r2, r4, #16
 802742e:	eeb1 6a48 	vneg.f32	s12, s16
 8027432:	edd3 7a08 	vldr	s15, [r3, #32]
 8027436:	edd3 6a00 	vldr	s13, [r3]
 802743a:	ee27 7a88 	vmul.f32	s14, s15, s16
 802743e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027442:	eea6 7a80 	vfma.f32	s14, s13, s0
 8027446:	eee6 7a26 	vfma.f32	s15, s12, s13
 802744a:	eca3 7a01 	vstmia	r3!, {s14}
 802744e:	429a      	cmp	r2, r3
 8027450:	edc3 7a07 	vstr	s15, [r3, #28]
 8027454:	d1ed      	bne.n	8027432 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 8027456:	ecbd 8b02 	vpop	{d8}
 802745a:	4620      	mov	r0, r4
 802745c:	bd10      	pop	{r4, pc}

0802745e <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 802745e:	b510      	push	{r4, lr}
 8027460:	ed2d 8b02 	vpush	{d8}
 8027464:	4604      	mov	r4, r0
 8027466:	eef0 8a40 	vmov.f32	s17, s0
 802746a:	f000 f8e5 	bl	8027638 <sinf>
 802746e:	eeb0 8a40 	vmov.f32	s16, s0
 8027472:	eeb0 0a68 	vmov.f32	s0, s17
 8027476:	f000 f89b 	bl	80275b0 <cosf>
 802747a:	4623      	mov	r3, r4
 802747c:	f104 0210 	add.w	r2, r4, #16
 8027480:	eeb1 6a48 	vneg.f32	s12, s16
 8027484:	edd3 7a04 	vldr	s15, [r3, #16]
 8027488:	edd3 6a00 	vldr	s13, [r3]
 802748c:	ee26 7a27 	vmul.f32	s14, s12, s15
 8027490:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027494:	eea6 7a80 	vfma.f32	s14, s13, s0
 8027498:	eee6 7a88 	vfma.f32	s15, s13, s16
 802749c:	eca3 7a01 	vstmia	r3!, {s14}
 80274a0:	429a      	cmp	r2, r3
 80274a2:	edc3 7a03 	vstr	s15, [r3, #12]
 80274a6:	d1ed      	bne.n	8027484 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 80274a8:	ecbd 8b02 	vpop	{d8}
 80274ac:	4620      	mov	r0, r4
 80274ae:	bd10      	pop	{r4, pc}

080274b0 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 80274b0:	4603      	mov	r3, r0
 80274b2:	f100 0210 	add.w	r2, r0, #16
 80274b6:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 80274ba:	edd3 7a00 	vldr	s15, [r3]
 80274be:	eee7 7a00 	vfma.f32	s15, s14, s0
 80274c2:	ece3 7a01 	vstmia	r3!, {s15}
 80274c6:	4293      	cmp	r3, r2
 80274c8:	d1f5      	bne.n	80274b6 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 80274ca:	4770      	bx	lr

080274cc <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 80274cc:	f100 0310 	add.w	r3, r0, #16
 80274d0:	f100 0220 	add.w	r2, r0, #32
 80274d4:	ed93 7a08 	vldr	s14, [r3, #32]
 80274d8:	edd3 7a00 	vldr	s15, [r3]
 80274dc:	eee7 7a00 	vfma.f32	s15, s14, s0
 80274e0:	ece3 7a01 	vstmia	r3!, {s15}
 80274e4:	4293      	cmp	r3, r2
 80274e6:	d1f5      	bne.n	80274d4 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 80274e8:	4770      	bx	lr

080274ea <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 80274ea:	f100 0320 	add.w	r3, r0, #32
 80274ee:	f100 0230 	add.w	r2, r0, #48	; 0x30
 80274f2:	ed93 7a04 	vldr	s14, [r3, #16]
 80274f6:	edd3 7a00 	vldr	s15, [r3]
 80274fa:	eee7 7a00 	vfma.f32	s15, s14, s0
 80274fe:	ece3 7a01 	vstmia	r3!, {s15}
 8027502:	4293      	cmp	r3, r2
 8027504:	d1f5      	bne.n	80274f2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 8027506:	4770      	bx	lr

08027508 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8027508:	4603      	mov	r3, r0
 802750a:	f100 0210 	add.w	r2, r0, #16
 802750e:	edd3 7a00 	vldr	s15, [r3]
 8027512:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027516:	ece3 7a01 	vstmia	r3!, {s15}
 802751a:	4293      	cmp	r3, r2
 802751c:	d1f7      	bne.n	802750e <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 802751e:	4770      	bx	lr

08027520 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8027520:	f100 0310 	add.w	r3, r0, #16
 8027524:	f100 0220 	add.w	r2, r0, #32
 8027528:	edd3 7a00 	vldr	s15, [r3]
 802752c:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027530:	ece3 7a01 	vstmia	r3!, {s15}
 8027534:	4293      	cmp	r3, r2
 8027536:	d1f7      	bne.n	8027528 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8027538:	4770      	bx	lr

0802753a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 802753a:	f100 0320 	add.w	r3, r0, #32
 802753e:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8027542:	edd3 7a00 	vldr	s15, [r3]
 8027546:	ee67 7a80 	vmul.f32	s15, s15, s0
 802754a:	ece3 7a01 	vstmia	r3!, {s15}
 802754e:	4293      	cmp	r3, r2
 8027550:	d1f7      	bne.n	8027542 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8027552:	4770      	bx	lr

08027554 <__aeabi_atexit>:
 8027554:	460b      	mov	r3, r1
 8027556:	4601      	mov	r1, r0
 8027558:	4618      	mov	r0, r3
 802755a:	f000 bed1 	b.w	8028300 <__cxa_atexit>

0802755e <_ZdlPvj>:
 802755e:	f000 b812 	b.w	8027586 <_ZdlPv>

08027562 <__cxa_guard_acquire>:
 8027562:	6803      	ldr	r3, [r0, #0]
 8027564:	07db      	lsls	r3, r3, #31
 8027566:	d406      	bmi.n	8027576 <__cxa_guard_acquire+0x14>
 8027568:	7843      	ldrb	r3, [r0, #1]
 802756a:	b103      	cbz	r3, 802756e <__cxa_guard_acquire+0xc>
 802756c:	deff      	udf	#255	; 0xff
 802756e:	2301      	movs	r3, #1
 8027570:	7043      	strb	r3, [r0, #1]
 8027572:	4618      	mov	r0, r3
 8027574:	4770      	bx	lr
 8027576:	2000      	movs	r0, #0
 8027578:	4770      	bx	lr

0802757a <__cxa_guard_release>:
 802757a:	2301      	movs	r3, #1
 802757c:	6003      	str	r3, [r0, #0]
 802757e:	4770      	bx	lr

08027580 <__cxa_pure_virtual>:
 8027580:	b508      	push	{r3, lr}
 8027582:	f000 f80f 	bl	80275a4 <_ZSt9terminatev>

08027586 <_ZdlPv>:
 8027586:	f000 be07 	b.w	8028198 <free>

0802758a <_ZN10__cxxabiv111__terminateEPFvvE>:
 802758a:	b508      	push	{r3, lr}
 802758c:	4780      	blx	r0
 802758e:	f000 fdcf 	bl	8028130 <abort>
	...

08027594 <_ZSt13get_terminatev>:
 8027594:	4b02      	ldr	r3, [pc, #8]	; (80275a0 <_ZSt13get_terminatev+0xc>)
 8027596:	6818      	ldr	r0, [r3, #0]
 8027598:	f3bf 8f5b 	dmb	ish
 802759c:	4770      	bx	lr
 802759e:	bf00      	nop
 80275a0:	20000104 	.word	0x20000104

080275a4 <_ZSt9terminatev>:
 80275a4:	b508      	push	{r3, lr}
 80275a6:	f7ff fff5 	bl	8027594 <_ZSt13get_terminatev>
 80275aa:	f7ff ffee 	bl	802758a <_ZN10__cxxabiv111__terminateEPFvvE>
	...

080275b0 <cosf>:
 80275b0:	ee10 3a10 	vmov	r3, s0
 80275b4:	b507      	push	{r0, r1, r2, lr}
 80275b6:	4a1e      	ldr	r2, [pc, #120]	; (8027630 <cosf+0x80>)
 80275b8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80275bc:	4293      	cmp	r3, r2
 80275be:	dc06      	bgt.n	80275ce <cosf+0x1e>
 80275c0:	eddf 0a1c 	vldr	s1, [pc, #112]	; 8027634 <cosf+0x84>
 80275c4:	b003      	add	sp, #12
 80275c6:	f85d eb04 	ldr.w	lr, [sp], #4
 80275ca:	f000 b8ff 	b.w	80277cc <__kernel_cosf>
 80275ce:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 80275d2:	db04      	blt.n	80275de <cosf+0x2e>
 80275d4:	ee30 0a40 	vsub.f32	s0, s0, s0
 80275d8:	b003      	add	sp, #12
 80275da:	f85d fb04 	ldr.w	pc, [sp], #4
 80275de:	4668      	mov	r0, sp
 80275e0:	f000 f99a 	bl	8027918 <__ieee754_rem_pio2f>
 80275e4:	f000 0003 	and.w	r0, r0, #3
 80275e8:	2801      	cmp	r0, #1
 80275ea:	d009      	beq.n	8027600 <cosf+0x50>
 80275ec:	2802      	cmp	r0, #2
 80275ee:	d010      	beq.n	8027612 <cosf+0x62>
 80275f0:	b9b0      	cbnz	r0, 8027620 <cosf+0x70>
 80275f2:	eddd 0a01 	vldr	s1, [sp, #4]
 80275f6:	ed9d 0a00 	vldr	s0, [sp]
 80275fa:	f000 f8e7 	bl	80277cc <__kernel_cosf>
 80275fe:	e7eb      	b.n	80275d8 <cosf+0x28>
 8027600:	eddd 0a01 	vldr	s1, [sp, #4]
 8027604:	ed9d 0a00 	vldr	s0, [sp]
 8027608:	f000 f93e 	bl	8027888 <__kernel_sinf>
 802760c:	eeb1 0a40 	vneg.f32	s0, s0
 8027610:	e7e2      	b.n	80275d8 <cosf+0x28>
 8027612:	eddd 0a01 	vldr	s1, [sp, #4]
 8027616:	ed9d 0a00 	vldr	s0, [sp]
 802761a:	f000 f8d7 	bl	80277cc <__kernel_cosf>
 802761e:	e7f5      	b.n	802760c <cosf+0x5c>
 8027620:	eddd 0a01 	vldr	s1, [sp, #4]
 8027624:	ed9d 0a00 	vldr	s0, [sp]
 8027628:	2001      	movs	r0, #1
 802762a:	f000 f92d 	bl	8027888 <__kernel_sinf>
 802762e:	e7d3      	b.n	80275d8 <cosf+0x28>
 8027630:	3f490fd8 	.word	0x3f490fd8
 8027634:	00000000 	.word	0x00000000

08027638 <sinf>:
 8027638:	ee10 3a10 	vmov	r3, s0
 802763c:	b507      	push	{r0, r1, r2, lr}
 802763e:	4a1f      	ldr	r2, [pc, #124]	; (80276bc <sinf+0x84>)
 8027640:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8027644:	4293      	cmp	r3, r2
 8027646:	dc07      	bgt.n	8027658 <sinf+0x20>
 8027648:	eddf 0a1d 	vldr	s1, [pc, #116]	; 80276c0 <sinf+0x88>
 802764c:	2000      	movs	r0, #0
 802764e:	b003      	add	sp, #12
 8027650:	f85d eb04 	ldr.w	lr, [sp], #4
 8027654:	f000 b918 	b.w	8027888 <__kernel_sinf>
 8027658:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802765c:	db04      	blt.n	8027668 <sinf+0x30>
 802765e:	ee30 0a40 	vsub.f32	s0, s0, s0
 8027662:	b003      	add	sp, #12
 8027664:	f85d fb04 	ldr.w	pc, [sp], #4
 8027668:	4668      	mov	r0, sp
 802766a:	f000 f955 	bl	8027918 <__ieee754_rem_pio2f>
 802766e:	f000 0003 	and.w	r0, r0, #3
 8027672:	2801      	cmp	r0, #1
 8027674:	d00a      	beq.n	802768c <sinf+0x54>
 8027676:	2802      	cmp	r0, #2
 8027678:	d00f      	beq.n	802769a <sinf+0x62>
 802767a:	b9c0      	cbnz	r0, 80276ae <sinf+0x76>
 802767c:	eddd 0a01 	vldr	s1, [sp, #4]
 8027680:	ed9d 0a00 	vldr	s0, [sp]
 8027684:	2001      	movs	r0, #1
 8027686:	f000 f8ff 	bl	8027888 <__kernel_sinf>
 802768a:	e7ea      	b.n	8027662 <sinf+0x2a>
 802768c:	eddd 0a01 	vldr	s1, [sp, #4]
 8027690:	ed9d 0a00 	vldr	s0, [sp]
 8027694:	f000 f89a 	bl	80277cc <__kernel_cosf>
 8027698:	e7e3      	b.n	8027662 <sinf+0x2a>
 802769a:	eddd 0a01 	vldr	s1, [sp, #4]
 802769e:	ed9d 0a00 	vldr	s0, [sp]
 80276a2:	2001      	movs	r0, #1
 80276a4:	f000 f8f0 	bl	8027888 <__kernel_sinf>
 80276a8:	eeb1 0a40 	vneg.f32	s0, s0
 80276ac:	e7d9      	b.n	8027662 <sinf+0x2a>
 80276ae:	eddd 0a01 	vldr	s1, [sp, #4]
 80276b2:	ed9d 0a00 	vldr	s0, [sp]
 80276b6:	f000 f889 	bl	80277cc <__kernel_cosf>
 80276ba:	e7f5      	b.n	80276a8 <sinf+0x70>
 80276bc:	3f490fd8 	.word	0x3f490fd8
 80276c0:	00000000 	.word	0x00000000

080276c4 <ceilf>:
 80276c4:	ee10 3a10 	vmov	r3, s0
 80276c8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80276cc:	3a7f      	subs	r2, #127	; 0x7f
 80276ce:	2a16      	cmp	r2, #22
 80276d0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80276d4:	dc2a      	bgt.n	802772c <ceilf+0x68>
 80276d6:	2a00      	cmp	r2, #0
 80276d8:	da11      	bge.n	80276fe <ceilf+0x3a>
 80276da:	eddf 7a19 	vldr	s15, [pc, #100]	; 8027740 <ceilf+0x7c>
 80276de:	ee30 0a27 	vadd.f32	s0, s0, s15
 80276e2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80276e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80276ea:	dd05      	ble.n	80276f8 <ceilf+0x34>
 80276ec:	2b00      	cmp	r3, #0
 80276ee:	db23      	blt.n	8027738 <ceilf+0x74>
 80276f0:	2900      	cmp	r1, #0
 80276f2:	bf18      	it	ne
 80276f4:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 80276f8:	ee00 3a10 	vmov	s0, r3
 80276fc:	4770      	bx	lr
 80276fe:	4911      	ldr	r1, [pc, #68]	; (8027744 <ceilf+0x80>)
 8027700:	4111      	asrs	r1, r2
 8027702:	420b      	tst	r3, r1
 8027704:	d0fa      	beq.n	80276fc <ceilf+0x38>
 8027706:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8027740 <ceilf+0x7c>
 802770a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802770e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027712:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027716:	ddef      	ble.n	80276f8 <ceilf+0x34>
 8027718:	2b00      	cmp	r3, #0
 802771a:	bfc2      	ittt	gt
 802771c:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8027720:	fa40 f202 	asrgt.w	r2, r0, r2
 8027724:	189b      	addgt	r3, r3, r2
 8027726:	ea23 0301 	bic.w	r3, r3, r1
 802772a:	e7e5      	b.n	80276f8 <ceilf+0x34>
 802772c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8027730:	d3e4      	bcc.n	80276fc <ceilf+0x38>
 8027732:	ee30 0a00 	vadd.f32	s0, s0, s0
 8027736:	4770      	bx	lr
 8027738:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802773c:	e7dc      	b.n	80276f8 <ceilf+0x34>
 802773e:	bf00      	nop
 8027740:	7149f2ca 	.word	0x7149f2ca
 8027744:	007fffff 	.word	0x007fffff

08027748 <floorf>:
 8027748:	ee10 3a10 	vmov	r3, s0
 802774c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8027750:	3a7f      	subs	r2, #127	; 0x7f
 8027752:	2a16      	cmp	r2, #22
 8027754:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8027758:	dc2a      	bgt.n	80277b0 <floorf+0x68>
 802775a:	2a00      	cmp	r2, #0
 802775c:	da11      	bge.n	8027782 <floorf+0x3a>
 802775e:	eddf 7a18 	vldr	s15, [pc, #96]	; 80277c0 <floorf+0x78>
 8027762:	ee30 0a27 	vadd.f32	s0, s0, s15
 8027766:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802776a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802776e:	dd05      	ble.n	802777c <floorf+0x34>
 8027770:	2b00      	cmp	r3, #0
 8027772:	da23      	bge.n	80277bc <floorf+0x74>
 8027774:	4a13      	ldr	r2, [pc, #76]	; (80277c4 <floorf+0x7c>)
 8027776:	2900      	cmp	r1, #0
 8027778:	bf18      	it	ne
 802777a:	4613      	movne	r3, r2
 802777c:	ee00 3a10 	vmov	s0, r3
 8027780:	4770      	bx	lr
 8027782:	4911      	ldr	r1, [pc, #68]	; (80277c8 <floorf+0x80>)
 8027784:	4111      	asrs	r1, r2
 8027786:	420b      	tst	r3, r1
 8027788:	d0fa      	beq.n	8027780 <floorf+0x38>
 802778a:	eddf 7a0d 	vldr	s15, [pc, #52]	; 80277c0 <floorf+0x78>
 802778e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8027792:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027796:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802779a:	ddef      	ble.n	802777c <floorf+0x34>
 802779c:	2b00      	cmp	r3, #0
 802779e:	bfbe      	ittt	lt
 80277a0:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 80277a4:	fa40 f202 	asrlt.w	r2, r0, r2
 80277a8:	189b      	addlt	r3, r3, r2
 80277aa:	ea23 0301 	bic.w	r3, r3, r1
 80277ae:	e7e5      	b.n	802777c <floorf+0x34>
 80277b0:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 80277b4:	d3e4      	bcc.n	8027780 <floorf+0x38>
 80277b6:	ee30 0a00 	vadd.f32	s0, s0, s0
 80277ba:	4770      	bx	lr
 80277bc:	2300      	movs	r3, #0
 80277be:	e7dd      	b.n	802777c <floorf+0x34>
 80277c0:	7149f2ca 	.word	0x7149f2ca
 80277c4:	bf800000 	.word	0xbf800000
 80277c8:	007fffff 	.word	0x007fffff

080277cc <__kernel_cosf>:
 80277cc:	ee10 3a10 	vmov	r3, s0
 80277d0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80277d4:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 80277d8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80277dc:	da05      	bge.n	80277ea <__kernel_cosf+0x1e>
 80277de:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80277e2:	ee17 2a90 	vmov	r2, s15
 80277e6:	2a00      	cmp	r2, #0
 80277e8:	d03b      	beq.n	8027862 <__kernel_cosf+0x96>
 80277ea:	ee20 7a00 	vmul.f32	s14, s0, s0
 80277ee:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8027868 <__kernel_cosf+0x9c>
 80277f2:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802786c <__kernel_cosf+0xa0>
 80277f6:	4a1e      	ldr	r2, [pc, #120]	; (8027870 <__kernel_cosf+0xa4>)
 80277f8:	eea7 6a27 	vfma.f32	s12, s14, s15
 80277fc:	4293      	cmp	r3, r2
 80277fe:	eddf 7a1d 	vldr	s15, [pc, #116]	; 8027874 <__kernel_cosf+0xa8>
 8027802:	eee6 7a07 	vfma.f32	s15, s12, s14
 8027806:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 8027878 <__kernel_cosf+0xac>
 802780a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802780e:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802787c <__kernel_cosf+0xb0>
 8027812:	eee6 7a07 	vfma.f32	s15, s12, s14
 8027816:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 8027880 <__kernel_cosf+0xb4>
 802781a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802781e:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 8027822:	ee26 6a07 	vmul.f32	s12, s12, s14
 8027826:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802782a:	eee7 0a06 	vfma.f32	s1, s14, s12
 802782e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8027832:	dc04      	bgt.n	802783e <__kernel_cosf+0x72>
 8027834:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8027838:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802783c:	4770      	bx	lr
 802783e:	4a11      	ldr	r2, [pc, #68]	; (8027884 <__kernel_cosf+0xb8>)
 8027840:	4293      	cmp	r3, r2
 8027842:	bfda      	itte	le
 8027844:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 8027848:	ee07 3a10 	vmovle	s14, r3
 802784c:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 8027850:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027854:	ee36 0ac7 	vsub.f32	s0, s13, s14
 8027858:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802785c:	ee30 0a67 	vsub.f32	s0, s0, s15
 8027860:	4770      	bx	lr
 8027862:	eeb0 0a66 	vmov.f32	s0, s13
 8027866:	4770      	bx	lr
 8027868:	ad47d74e 	.word	0xad47d74e
 802786c:	310f74f6 	.word	0x310f74f6
 8027870:	3e999999 	.word	0x3e999999
 8027874:	b493f27c 	.word	0xb493f27c
 8027878:	37d00d01 	.word	0x37d00d01
 802787c:	bab60b61 	.word	0xbab60b61
 8027880:	3d2aaaab 	.word	0x3d2aaaab
 8027884:	3f480000 	.word	0x3f480000

08027888 <__kernel_sinf>:
 8027888:	ee10 3a10 	vmov	r3, s0
 802788c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8027890:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8027894:	da04      	bge.n	80278a0 <__kernel_sinf+0x18>
 8027896:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802789a:	ee17 3a90 	vmov	r3, s15
 802789e:	b35b      	cbz	r3, 80278f8 <__kernel_sinf+0x70>
 80278a0:	ee20 7a00 	vmul.f32	s14, s0, s0
 80278a4:	eddf 7a15 	vldr	s15, [pc, #84]	; 80278fc <__kernel_sinf+0x74>
 80278a8:	ed9f 6a15 	vldr	s12, [pc, #84]	; 8027900 <__kernel_sinf+0x78>
 80278ac:	eea7 6a27 	vfma.f32	s12, s14, s15
 80278b0:	eddf 7a14 	vldr	s15, [pc, #80]	; 8027904 <__kernel_sinf+0x7c>
 80278b4:	eee6 7a07 	vfma.f32	s15, s12, s14
 80278b8:	ed9f 6a13 	vldr	s12, [pc, #76]	; 8027908 <__kernel_sinf+0x80>
 80278bc:	eea7 6a87 	vfma.f32	s12, s15, s14
 80278c0:	eddf 7a12 	vldr	s15, [pc, #72]	; 802790c <__kernel_sinf+0x84>
 80278c4:	ee60 6a07 	vmul.f32	s13, s0, s14
 80278c8:	eee6 7a07 	vfma.f32	s15, s12, s14
 80278cc:	b930      	cbnz	r0, 80278dc <__kernel_sinf+0x54>
 80278ce:	ed9f 6a10 	vldr	s12, [pc, #64]	; 8027910 <__kernel_sinf+0x88>
 80278d2:	eea7 6a27 	vfma.f32	s12, s14, s15
 80278d6:	eea6 0a26 	vfma.f32	s0, s12, s13
 80278da:	4770      	bx	lr
 80278dc:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 80278e0:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 80278e4:	eee0 7a86 	vfma.f32	s15, s1, s12
 80278e8:	eed7 0a87 	vfnms.f32	s1, s15, s14
 80278ec:	eddf 7a09 	vldr	s15, [pc, #36]	; 8027914 <__kernel_sinf+0x8c>
 80278f0:	eee6 0aa7 	vfma.f32	s1, s13, s15
 80278f4:	ee30 0a60 	vsub.f32	s0, s0, s1
 80278f8:	4770      	bx	lr
 80278fa:	bf00      	nop
 80278fc:	2f2ec9d3 	.word	0x2f2ec9d3
 8027900:	b2d72f34 	.word	0xb2d72f34
 8027904:	3638ef1b 	.word	0x3638ef1b
 8027908:	b9500d01 	.word	0xb9500d01
 802790c:	3c088889 	.word	0x3c088889
 8027910:	be2aaaab 	.word	0xbe2aaaab
 8027914:	3e2aaaab 	.word	0x3e2aaaab

08027918 <__ieee754_rem_pio2f>:
 8027918:	b5f0      	push	{r4, r5, r6, r7, lr}
 802791a:	ee10 6a10 	vmov	r6, s0
 802791e:	4b86      	ldr	r3, [pc, #536]	; (8027b38 <__ieee754_rem_pio2f+0x220>)
 8027920:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 8027924:	429d      	cmp	r5, r3
 8027926:	b087      	sub	sp, #28
 8027928:	4604      	mov	r4, r0
 802792a:	dc05      	bgt.n	8027938 <__ieee754_rem_pio2f+0x20>
 802792c:	2300      	movs	r3, #0
 802792e:	ed80 0a00 	vstr	s0, [r0]
 8027932:	6043      	str	r3, [r0, #4]
 8027934:	2000      	movs	r0, #0
 8027936:	e020      	b.n	802797a <__ieee754_rem_pio2f+0x62>
 8027938:	4b80      	ldr	r3, [pc, #512]	; (8027b3c <__ieee754_rem_pio2f+0x224>)
 802793a:	429d      	cmp	r5, r3
 802793c:	dc38      	bgt.n	80279b0 <__ieee754_rem_pio2f+0x98>
 802793e:	2e00      	cmp	r6, #0
 8027940:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 8027b40 <__ieee754_rem_pio2f+0x228>
 8027944:	4b7f      	ldr	r3, [pc, #508]	; (8027b44 <__ieee754_rem_pio2f+0x22c>)
 8027946:	f025 050f 	bic.w	r5, r5, #15
 802794a:	dd18      	ble.n	802797e <__ieee754_rem_pio2f+0x66>
 802794c:	429d      	cmp	r5, r3
 802794e:	ee70 7a47 	vsub.f32	s15, s0, s14
 8027952:	bf09      	itett	eq
 8027954:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 8027b48 <__ieee754_rem_pio2f+0x230>
 8027958:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 8027b4c <__ieee754_rem_pio2f+0x234>
 802795c:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8027960:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 8027b50 <__ieee754_rem_pio2f+0x238>
 8027964:	ee77 6ac7 	vsub.f32	s13, s15, s14
 8027968:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802796c:	edc0 6a00 	vstr	s13, [r0]
 8027970:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027974:	edc0 7a01 	vstr	s15, [r0, #4]
 8027978:	2001      	movs	r0, #1
 802797a:	b007      	add	sp, #28
 802797c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802797e:	429d      	cmp	r5, r3
 8027980:	ee70 7a07 	vadd.f32	s15, s0, s14
 8027984:	bf09      	itett	eq
 8027986:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 8027b48 <__ieee754_rem_pio2f+0x230>
 802798a:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 8027b4c <__ieee754_rem_pio2f+0x234>
 802798e:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8027992:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 8027b50 <__ieee754_rem_pio2f+0x238>
 8027996:	ee77 6a87 	vadd.f32	s13, s15, s14
 802799a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802799e:	edc0 6a00 	vstr	s13, [r0]
 80279a2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80279a6:	edc0 7a01 	vstr	s15, [r0, #4]
 80279aa:	f04f 30ff 	mov.w	r0, #4294967295
 80279ae:	e7e4      	b.n	802797a <__ieee754_rem_pio2f+0x62>
 80279b0:	4b68      	ldr	r3, [pc, #416]	; (8027b54 <__ieee754_rem_pio2f+0x23c>)
 80279b2:	429d      	cmp	r5, r3
 80279b4:	dc71      	bgt.n	8027a9a <__ieee754_rem_pio2f+0x182>
 80279b6:	f000 f8db 	bl	8027b70 <fabsf>
 80279ba:	ed9f 7a67 	vldr	s14, [pc, #412]	; 8027b58 <__ieee754_rem_pio2f+0x240>
 80279be:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80279c2:	eee0 7a07 	vfma.f32	s15, s0, s14
 80279c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80279ca:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80279ce:	ee17 0a90 	vmov	r0, s15
 80279d2:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8027b40 <__ieee754_rem_pio2f+0x228>
 80279d6:	eea7 0a67 	vfms.f32	s0, s14, s15
 80279da:	281f      	cmp	r0, #31
 80279dc:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8027b4c <__ieee754_rem_pio2f+0x234>
 80279e0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80279e4:	eeb1 6a47 	vneg.f32	s12, s14
 80279e8:	ee70 6a67 	vsub.f32	s13, s0, s15
 80279ec:	ee16 2a90 	vmov	r2, s13
 80279f0:	dc1c      	bgt.n	8027a2c <__ieee754_rem_pio2f+0x114>
 80279f2:	495a      	ldr	r1, [pc, #360]	; (8027b5c <__ieee754_rem_pio2f+0x244>)
 80279f4:	1e47      	subs	r7, r0, #1
 80279f6:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 80279fa:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80279fe:	428b      	cmp	r3, r1
 8027a00:	d014      	beq.n	8027a2c <__ieee754_rem_pio2f+0x114>
 8027a02:	6022      	str	r2, [r4, #0]
 8027a04:	ed94 7a00 	vldr	s14, [r4]
 8027a08:	ee30 0a47 	vsub.f32	s0, s0, s14
 8027a0c:	2e00      	cmp	r6, #0
 8027a0e:	ee30 0a67 	vsub.f32	s0, s0, s15
 8027a12:	ed84 0a01 	vstr	s0, [r4, #4]
 8027a16:	dab0      	bge.n	802797a <__ieee754_rem_pio2f+0x62>
 8027a18:	eeb1 7a47 	vneg.f32	s14, s14
 8027a1c:	eeb1 0a40 	vneg.f32	s0, s0
 8027a20:	ed84 7a00 	vstr	s14, [r4]
 8027a24:	ed84 0a01 	vstr	s0, [r4, #4]
 8027a28:	4240      	negs	r0, r0
 8027a2a:	e7a6      	b.n	802797a <__ieee754_rem_pio2f+0x62>
 8027a2c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8027a30:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 8027a34:	2908      	cmp	r1, #8
 8027a36:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8027a3a:	dde2      	ble.n	8027a02 <__ieee754_rem_pio2f+0xea>
 8027a3c:	eddf 5a42 	vldr	s11, [pc, #264]	; 8027b48 <__ieee754_rem_pio2f+0x230>
 8027a40:	eef0 6a40 	vmov.f32	s13, s0
 8027a44:	eee6 6a25 	vfma.f32	s13, s12, s11
 8027a48:	ee70 7a66 	vsub.f32	s15, s0, s13
 8027a4c:	eee6 7a25 	vfma.f32	s15, s12, s11
 8027a50:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8027b50 <__ieee754_rem_pio2f+0x238>
 8027a54:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8027a58:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8027a5c:	ee15 2a90 	vmov	r2, s11
 8027a60:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8027a64:	1a5b      	subs	r3, r3, r1
 8027a66:	2b19      	cmp	r3, #25
 8027a68:	dc04      	bgt.n	8027a74 <__ieee754_rem_pio2f+0x15c>
 8027a6a:	edc4 5a00 	vstr	s11, [r4]
 8027a6e:	eeb0 0a66 	vmov.f32	s0, s13
 8027a72:	e7c7      	b.n	8027a04 <__ieee754_rem_pio2f+0xec>
 8027a74:	eddf 5a3a 	vldr	s11, [pc, #232]	; 8027b60 <__ieee754_rem_pio2f+0x248>
 8027a78:	eeb0 0a66 	vmov.f32	s0, s13
 8027a7c:	eea6 0a25 	vfma.f32	s0, s12, s11
 8027a80:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8027a84:	eddf 6a37 	vldr	s13, [pc, #220]	; 8027b64 <__ieee754_rem_pio2f+0x24c>
 8027a88:	eee6 7a25 	vfma.f32	s15, s12, s11
 8027a8c:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8027a90:	ee30 7a67 	vsub.f32	s14, s0, s15
 8027a94:	ed84 7a00 	vstr	s14, [r4]
 8027a98:	e7b4      	b.n	8027a04 <__ieee754_rem_pio2f+0xec>
 8027a9a:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 8027a9e:	db06      	blt.n	8027aae <__ieee754_rem_pio2f+0x196>
 8027aa0:	ee70 7a40 	vsub.f32	s15, s0, s0
 8027aa4:	edc0 7a01 	vstr	s15, [r0, #4]
 8027aa8:	edc0 7a00 	vstr	s15, [r0]
 8027aac:	e742      	b.n	8027934 <__ieee754_rem_pio2f+0x1c>
 8027aae:	15ea      	asrs	r2, r5, #23
 8027ab0:	3a86      	subs	r2, #134	; 0x86
 8027ab2:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8027ab6:	ee07 3a90 	vmov	s15, r3
 8027aba:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8027abe:	eddf 6a2a 	vldr	s13, [pc, #168]	; 8027b68 <__ieee754_rem_pio2f+0x250>
 8027ac2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8027ac6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027aca:	ed8d 7a03 	vstr	s14, [sp, #12]
 8027ace:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8027ad2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8027ad6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8027ada:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027ade:	ed8d 7a04 	vstr	s14, [sp, #16]
 8027ae2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8027ae6:	eef5 7a40 	vcmp.f32	s15, #0.0
 8027aea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027aee:	edcd 7a05 	vstr	s15, [sp, #20]
 8027af2:	d11e      	bne.n	8027b32 <__ieee754_rem_pio2f+0x21a>
 8027af4:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8027af8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027afc:	bf14      	ite	ne
 8027afe:	2302      	movne	r3, #2
 8027b00:	2301      	moveq	r3, #1
 8027b02:	491a      	ldr	r1, [pc, #104]	; (8027b6c <__ieee754_rem_pio2f+0x254>)
 8027b04:	9101      	str	r1, [sp, #4]
 8027b06:	2102      	movs	r1, #2
 8027b08:	9100      	str	r1, [sp, #0]
 8027b0a:	a803      	add	r0, sp, #12
 8027b0c:	4621      	mov	r1, r4
 8027b0e:	f000 f89d 	bl	8027c4c <__kernel_rem_pio2f>
 8027b12:	2e00      	cmp	r6, #0
 8027b14:	f6bf af31 	bge.w	802797a <__ieee754_rem_pio2f+0x62>
 8027b18:	edd4 7a00 	vldr	s15, [r4]
 8027b1c:	eef1 7a67 	vneg.f32	s15, s15
 8027b20:	edc4 7a00 	vstr	s15, [r4]
 8027b24:	edd4 7a01 	vldr	s15, [r4, #4]
 8027b28:	eef1 7a67 	vneg.f32	s15, s15
 8027b2c:	edc4 7a01 	vstr	s15, [r4, #4]
 8027b30:	e77a      	b.n	8027a28 <__ieee754_rem_pio2f+0x110>
 8027b32:	2303      	movs	r3, #3
 8027b34:	e7e5      	b.n	8027b02 <__ieee754_rem_pio2f+0x1ea>
 8027b36:	bf00      	nop
 8027b38:	3f490fd8 	.word	0x3f490fd8
 8027b3c:	4016cbe3 	.word	0x4016cbe3
 8027b40:	3fc90f80 	.word	0x3fc90f80
 8027b44:	3fc90fd0 	.word	0x3fc90fd0
 8027b48:	37354400 	.word	0x37354400
 8027b4c:	37354443 	.word	0x37354443
 8027b50:	2e85a308 	.word	0x2e85a308
 8027b54:	43490f80 	.word	0x43490f80
 8027b58:	3f22f984 	.word	0x3f22f984
 8027b5c:	0802cf44 	.word	0x0802cf44
 8027b60:	2e85a300 	.word	0x2e85a300
 8027b64:	248d3132 	.word	0x248d3132
 8027b68:	43800000 	.word	0x43800000
 8027b6c:	0802cfc4 	.word	0x0802cfc4

08027b70 <fabsf>:
 8027b70:	ee10 3a10 	vmov	r3, s0
 8027b74:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8027b78:	ee00 3a10 	vmov	s0, r3
 8027b7c:	4770      	bx	lr
	...

08027b80 <scalbnf>:
 8027b80:	ee10 3a10 	vmov	r3, s0
 8027b84:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 8027b88:	d02b      	beq.n	8027be2 <scalbnf+0x62>
 8027b8a:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 8027b8e:	d302      	bcc.n	8027b96 <scalbnf+0x16>
 8027b90:	ee30 0a00 	vadd.f32	s0, s0, s0
 8027b94:	4770      	bx	lr
 8027b96:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 8027b9a:	d123      	bne.n	8027be4 <scalbnf+0x64>
 8027b9c:	4b24      	ldr	r3, [pc, #144]	; (8027c30 <scalbnf+0xb0>)
 8027b9e:	eddf 7a25 	vldr	s15, [pc, #148]	; 8027c34 <scalbnf+0xb4>
 8027ba2:	4298      	cmp	r0, r3
 8027ba4:	ee20 0a27 	vmul.f32	s0, s0, s15
 8027ba8:	db17      	blt.n	8027bda <scalbnf+0x5a>
 8027baa:	ee10 3a10 	vmov	r3, s0
 8027bae:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8027bb2:	3a19      	subs	r2, #25
 8027bb4:	f24c 3150 	movw	r1, #50000	; 0xc350
 8027bb8:	4288      	cmp	r0, r1
 8027bba:	dd15      	ble.n	8027be8 <scalbnf+0x68>
 8027bbc:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8027c38 <scalbnf+0xb8>
 8027bc0:	eddf 6a1e 	vldr	s13, [pc, #120]	; 8027c3c <scalbnf+0xbc>
 8027bc4:	ee10 3a10 	vmov	r3, s0
 8027bc8:	eeb0 7a67 	vmov.f32	s14, s15
 8027bcc:	2b00      	cmp	r3, #0
 8027bce:	bfb8      	it	lt
 8027bd0:	eef0 7a66 	vmovlt.f32	s15, s13
 8027bd4:	ee27 0a87 	vmul.f32	s0, s15, s14
 8027bd8:	4770      	bx	lr
 8027bda:	eddf 7a19 	vldr	s15, [pc, #100]	; 8027c40 <scalbnf+0xc0>
 8027bde:	ee27 0a80 	vmul.f32	s0, s15, s0
 8027be2:	4770      	bx	lr
 8027be4:	0dd2      	lsrs	r2, r2, #23
 8027be6:	e7e5      	b.n	8027bb4 <scalbnf+0x34>
 8027be8:	4410      	add	r0, r2
 8027bea:	28fe      	cmp	r0, #254	; 0xfe
 8027bec:	dce6      	bgt.n	8027bbc <scalbnf+0x3c>
 8027bee:	2800      	cmp	r0, #0
 8027bf0:	dd06      	ble.n	8027c00 <scalbnf+0x80>
 8027bf2:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8027bf6:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8027bfa:	ee00 3a10 	vmov	s0, r3
 8027bfe:	4770      	bx	lr
 8027c00:	f110 0f16 	cmn.w	r0, #22
 8027c04:	da09      	bge.n	8027c1a <scalbnf+0x9a>
 8027c06:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8027c40 <scalbnf+0xc0>
 8027c0a:	eddf 6a0e 	vldr	s13, [pc, #56]	; 8027c44 <scalbnf+0xc4>
 8027c0e:	ee10 3a10 	vmov	r3, s0
 8027c12:	eeb0 7a67 	vmov.f32	s14, s15
 8027c16:	2b00      	cmp	r3, #0
 8027c18:	e7d9      	b.n	8027bce <scalbnf+0x4e>
 8027c1a:	3019      	adds	r0, #25
 8027c1c:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8027c20:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8027c24:	ed9f 0a08 	vldr	s0, [pc, #32]	; 8027c48 <scalbnf+0xc8>
 8027c28:	ee07 3a90 	vmov	s15, r3
 8027c2c:	e7d7      	b.n	8027bde <scalbnf+0x5e>
 8027c2e:	bf00      	nop
 8027c30:	ffff3cb0 	.word	0xffff3cb0
 8027c34:	4c000000 	.word	0x4c000000
 8027c38:	7149f2ca 	.word	0x7149f2ca
 8027c3c:	f149f2ca 	.word	0xf149f2ca
 8027c40:	0da24260 	.word	0x0da24260
 8027c44:	8da24260 	.word	0x8da24260
 8027c48:	33000000 	.word	0x33000000

08027c4c <__kernel_rem_pio2f>:
 8027c4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027c50:	ed2d 8b04 	vpush	{d8-d9}
 8027c54:	b0d9      	sub	sp, #356	; 0x164
 8027c56:	4688      	mov	r8, r1
 8027c58:	9002      	str	r0, [sp, #8]
 8027c5a:	49b8      	ldr	r1, [pc, #736]	; (8027f3c <__kernel_rem_pio2f+0x2f0>)
 8027c5c:	9866      	ldr	r0, [sp, #408]	; 0x198
 8027c5e:	9301      	str	r3, [sp, #4]
 8027c60:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 8027c64:	9901      	ldr	r1, [sp, #4]
 8027c66:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 8027c68:	f101 3bff 	add.w	fp, r1, #4294967295
 8027c6c:	1d11      	adds	r1, r2, #4
 8027c6e:	db25      	blt.n	8027cbc <__kernel_rem_pio2f+0x70>
 8027c70:	1ed0      	subs	r0, r2, #3
 8027c72:	bf48      	it	mi
 8027c74:	1d10      	addmi	r0, r2, #4
 8027c76:	10c0      	asrs	r0, r0, #3
 8027c78:	1c45      	adds	r5, r0, #1
 8027c7a:	00e9      	lsls	r1, r5, #3
 8027c7c:	eba0 070b 	sub.w	r7, r0, fp
 8027c80:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 8027f4c <__kernel_rem_pio2f+0x300>
 8027c84:	9103      	str	r1, [sp, #12]
 8027c86:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 8027c8a:	eb0a 0c0b 	add.w	ip, sl, fp
 8027c8e:	ae1c      	add	r6, sp, #112	; 0x70
 8027c90:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 8027c94:	2400      	movs	r4, #0
 8027c96:	4564      	cmp	r4, ip
 8027c98:	dd12      	ble.n	8027cc0 <__kernel_rem_pio2f+0x74>
 8027c9a:	9901      	ldr	r1, [sp, #4]
 8027c9c:	ac1c      	add	r4, sp, #112	; 0x70
 8027c9e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8027ca2:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 8027ca6:	f04f 0c00 	mov.w	ip, #0
 8027caa:	45d4      	cmp	ip, sl
 8027cac:	dc27      	bgt.n	8027cfe <__kernel_rem_pio2f+0xb2>
 8027cae:	f8dd e008 	ldr.w	lr, [sp, #8]
 8027cb2:	eddf 7aa6 	vldr	s15, [pc, #664]	; 8027f4c <__kernel_rem_pio2f+0x300>
 8027cb6:	4627      	mov	r7, r4
 8027cb8:	2600      	movs	r6, #0
 8027cba:	e016      	b.n	8027cea <__kernel_rem_pio2f+0x9e>
 8027cbc:	2000      	movs	r0, #0
 8027cbe:	e7db      	b.n	8027c78 <__kernel_rem_pio2f+0x2c>
 8027cc0:	42e7      	cmn	r7, r4
 8027cc2:	bf5d      	ittte	pl
 8027cc4:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 8027cc8:	ee07 1a90 	vmovpl	s15, r1
 8027ccc:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8027cd0:	eef0 7a47 	vmovmi.f32	s15, s14
 8027cd4:	ece6 7a01 	vstmia	r6!, {s15}
 8027cd8:	3401      	adds	r4, #1
 8027cda:	e7dc      	b.n	8027c96 <__kernel_rem_pio2f+0x4a>
 8027cdc:	ecfe 6a01 	vldmia	lr!, {s13}
 8027ce0:	ed97 7a00 	vldr	s14, [r7]
 8027ce4:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027ce8:	3601      	adds	r6, #1
 8027cea:	455e      	cmp	r6, fp
 8027cec:	f1a7 0704 	sub.w	r7, r7, #4
 8027cf0:	ddf4      	ble.n	8027cdc <__kernel_rem_pio2f+0x90>
 8027cf2:	ece9 7a01 	vstmia	r9!, {s15}
 8027cf6:	f10c 0c01 	add.w	ip, ip, #1
 8027cfa:	3404      	adds	r4, #4
 8027cfc:	e7d5      	b.n	8027caa <__kernel_rem_pio2f+0x5e>
 8027cfe:	a908      	add	r1, sp, #32
 8027d00:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8027d04:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 8027d08:	eddf 8a8f 	vldr	s17, [pc, #572]	; 8027f48 <__kernel_rem_pio2f+0x2fc>
 8027d0c:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 8027f44 <__kernel_rem_pio2f+0x2f8>
 8027d10:	9105      	str	r1, [sp, #20]
 8027d12:	9304      	str	r3, [sp, #16]
 8027d14:	4656      	mov	r6, sl
 8027d16:	00b3      	lsls	r3, r6, #2
 8027d18:	9306      	str	r3, [sp, #24]
 8027d1a:	ab58      	add	r3, sp, #352	; 0x160
 8027d1c:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8027d20:	ac08      	add	r4, sp, #32
 8027d22:	ab44      	add	r3, sp, #272	; 0x110
 8027d24:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 8027d28:	46a4      	mov	ip, r4
 8027d2a:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8027d2e:	4637      	mov	r7, r6
 8027d30:	2f00      	cmp	r7, #0
 8027d32:	f1a0 0004 	sub.w	r0, r0, #4
 8027d36:	dc4a      	bgt.n	8027dce <__kernel_rem_pio2f+0x182>
 8027d38:	4628      	mov	r0, r5
 8027d3a:	9207      	str	r2, [sp, #28]
 8027d3c:	f7ff ff20 	bl	8027b80 <scalbnf>
 8027d40:	eeb0 8a40 	vmov.f32	s16, s0
 8027d44:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 8027d48:	ee28 0a00 	vmul.f32	s0, s16, s0
 8027d4c:	f7ff fcfc 	bl	8027748 <floorf>
 8027d50:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 8027d54:	eea0 8a67 	vfms.f32	s16, s0, s15
 8027d58:	2d00      	cmp	r5, #0
 8027d5a:	9a07      	ldr	r2, [sp, #28]
 8027d5c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8027d60:	ee17 9a90 	vmov	r9, s15
 8027d64:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027d68:	ee38 8a67 	vsub.f32	s16, s16, s15
 8027d6c:	dd41      	ble.n	8027df2 <__kernel_rem_pio2f+0x1a6>
 8027d6e:	f106 3cff 	add.w	ip, r6, #4294967295
 8027d72:	ab08      	add	r3, sp, #32
 8027d74:	f1c5 0e08 	rsb	lr, r5, #8
 8027d78:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 8027d7c:	fa47 f00e 	asr.w	r0, r7, lr
 8027d80:	4481      	add	r9, r0
 8027d82:	fa00 f00e 	lsl.w	r0, r0, lr
 8027d86:	1a3f      	subs	r7, r7, r0
 8027d88:	f1c5 0007 	rsb	r0, r5, #7
 8027d8c:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 8027d90:	4107      	asrs	r7, r0
 8027d92:	2f00      	cmp	r7, #0
 8027d94:	dd3c      	ble.n	8027e10 <__kernel_rem_pio2f+0x1c4>
 8027d96:	f04f 0e00 	mov.w	lr, #0
 8027d9a:	f109 0901 	add.w	r9, r9, #1
 8027d9e:	4671      	mov	r1, lr
 8027da0:	4576      	cmp	r6, lr
 8027da2:	dc67      	bgt.n	8027e74 <__kernel_rem_pio2f+0x228>
 8027da4:	2d00      	cmp	r5, #0
 8027da6:	dd03      	ble.n	8027db0 <__kernel_rem_pio2f+0x164>
 8027da8:	2d01      	cmp	r5, #1
 8027daa:	d074      	beq.n	8027e96 <__kernel_rem_pio2f+0x24a>
 8027dac:	2d02      	cmp	r5, #2
 8027dae:	d07b      	beq.n	8027ea8 <__kernel_rem_pio2f+0x25c>
 8027db0:	2f02      	cmp	r7, #2
 8027db2:	d12d      	bne.n	8027e10 <__kernel_rem_pio2f+0x1c4>
 8027db4:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8027db8:	ee30 8a48 	vsub.f32	s16, s0, s16
 8027dbc:	b341      	cbz	r1, 8027e10 <__kernel_rem_pio2f+0x1c4>
 8027dbe:	4628      	mov	r0, r5
 8027dc0:	9207      	str	r2, [sp, #28]
 8027dc2:	f7ff fedd 	bl	8027b80 <scalbnf>
 8027dc6:	9a07      	ldr	r2, [sp, #28]
 8027dc8:	ee38 8a40 	vsub.f32	s16, s16, s0
 8027dcc:	e020      	b.n	8027e10 <__kernel_rem_pio2f+0x1c4>
 8027dce:	ee60 7a28 	vmul.f32	s15, s0, s17
 8027dd2:	3f01      	subs	r7, #1
 8027dd4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8027dd8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027ddc:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8027de0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8027de4:	ecac 0a01 	vstmia	ip!, {s0}
 8027de8:	ed90 0a00 	vldr	s0, [r0]
 8027dec:	ee37 0a80 	vadd.f32	s0, s15, s0
 8027df0:	e79e      	b.n	8027d30 <__kernel_rem_pio2f+0xe4>
 8027df2:	d105      	bne.n	8027e00 <__kernel_rem_pio2f+0x1b4>
 8027df4:	1e70      	subs	r0, r6, #1
 8027df6:	ab08      	add	r3, sp, #32
 8027df8:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 8027dfc:	11ff      	asrs	r7, r7, #7
 8027dfe:	e7c8      	b.n	8027d92 <__kernel_rem_pio2f+0x146>
 8027e00:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8027e04:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8027e08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027e0c:	da30      	bge.n	8027e70 <__kernel_rem_pio2f+0x224>
 8027e0e:	2700      	movs	r7, #0
 8027e10:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8027e14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027e18:	f040 809a 	bne.w	8027f50 <__kernel_rem_pio2f+0x304>
 8027e1c:	1e74      	subs	r4, r6, #1
 8027e1e:	46a4      	mov	ip, r4
 8027e20:	2100      	movs	r1, #0
 8027e22:	45d4      	cmp	ip, sl
 8027e24:	da47      	bge.n	8027eb6 <__kernel_rem_pio2f+0x26a>
 8027e26:	2900      	cmp	r1, #0
 8027e28:	d063      	beq.n	8027ef2 <__kernel_rem_pio2f+0x2a6>
 8027e2a:	ab08      	add	r3, sp, #32
 8027e2c:	3d08      	subs	r5, #8
 8027e2e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8027e32:	2b00      	cmp	r3, #0
 8027e34:	d07f      	beq.n	8027f36 <__kernel_rem_pio2f+0x2ea>
 8027e36:	4628      	mov	r0, r5
 8027e38:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8027e3c:	f7ff fea0 	bl	8027b80 <scalbnf>
 8027e40:	1c63      	adds	r3, r4, #1
 8027e42:	aa44      	add	r2, sp, #272	; 0x110
 8027e44:	ed9f 7a40 	vldr	s14, [pc, #256]	; 8027f48 <__kernel_rem_pio2f+0x2fc>
 8027e48:	0099      	lsls	r1, r3, #2
 8027e4a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8027e4e:	4623      	mov	r3, r4
 8027e50:	2b00      	cmp	r3, #0
 8027e52:	f280 80ad 	bge.w	8027fb0 <__kernel_rem_pio2f+0x364>
 8027e56:	4623      	mov	r3, r4
 8027e58:	2b00      	cmp	r3, #0
 8027e5a:	f2c0 80cb 	blt.w	8027ff4 <__kernel_rem_pio2f+0x3a8>
 8027e5e:	aa44      	add	r2, sp, #272	; 0x110
 8027e60:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8027e64:	4e36      	ldr	r6, [pc, #216]	; (8027f40 <__kernel_rem_pio2f+0x2f4>)
 8027e66:	eddf 7a39 	vldr	s15, [pc, #228]	; 8027f4c <__kernel_rem_pio2f+0x300>
 8027e6a:	2000      	movs	r0, #0
 8027e6c:	1ae2      	subs	r2, r4, r3
 8027e6e:	e0b6      	b.n	8027fde <__kernel_rem_pio2f+0x392>
 8027e70:	2702      	movs	r7, #2
 8027e72:	e790      	b.n	8027d96 <__kernel_rem_pio2f+0x14a>
 8027e74:	6820      	ldr	r0, [r4, #0]
 8027e76:	b949      	cbnz	r1, 8027e8c <__kernel_rem_pio2f+0x240>
 8027e78:	b118      	cbz	r0, 8027e82 <__kernel_rem_pio2f+0x236>
 8027e7a:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8027e7e:	6020      	str	r0, [r4, #0]
 8027e80:	2001      	movs	r0, #1
 8027e82:	f10e 0e01 	add.w	lr, lr, #1
 8027e86:	3404      	adds	r4, #4
 8027e88:	4601      	mov	r1, r0
 8027e8a:	e789      	b.n	8027da0 <__kernel_rem_pio2f+0x154>
 8027e8c:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 8027e90:	6020      	str	r0, [r4, #0]
 8027e92:	4608      	mov	r0, r1
 8027e94:	e7f5      	b.n	8027e82 <__kernel_rem_pio2f+0x236>
 8027e96:	1e74      	subs	r4, r6, #1
 8027e98:	ab08      	add	r3, sp, #32
 8027e9a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8027e9e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8027ea2:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8027ea6:	e783      	b.n	8027db0 <__kernel_rem_pio2f+0x164>
 8027ea8:	1e74      	subs	r4, r6, #1
 8027eaa:	ab08      	add	r3, sp, #32
 8027eac:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8027eb0:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8027eb4:	e7f5      	b.n	8027ea2 <__kernel_rem_pio2f+0x256>
 8027eb6:	ab08      	add	r3, sp, #32
 8027eb8:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 8027ebc:	f10c 3cff 	add.w	ip, ip, #4294967295
 8027ec0:	4301      	orrs	r1, r0
 8027ec2:	e7ae      	b.n	8027e22 <__kernel_rem_pio2f+0x1d6>
 8027ec4:	3001      	adds	r0, #1
 8027ec6:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 8027eca:	2f00      	cmp	r7, #0
 8027ecc:	d0fa      	beq.n	8027ec4 <__kernel_rem_pio2f+0x278>
 8027ece:	9b06      	ldr	r3, [sp, #24]
 8027ed0:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 8027ed4:	eb0d 0403 	add.w	r4, sp, r3
 8027ed8:	9b01      	ldr	r3, [sp, #4]
 8027eda:	18f7      	adds	r7, r6, r3
 8027edc:	ab1c      	add	r3, sp, #112	; 0x70
 8027ede:	f106 0c01 	add.w	ip, r6, #1
 8027ee2:	3c4c      	subs	r4, #76	; 0x4c
 8027ee4:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8027ee8:	4430      	add	r0, r6
 8027eea:	4560      	cmp	r0, ip
 8027eec:	da04      	bge.n	8027ef8 <__kernel_rem_pio2f+0x2ac>
 8027eee:	4606      	mov	r6, r0
 8027ef0:	e711      	b.n	8027d16 <__kernel_rem_pio2f+0xca>
 8027ef2:	9c05      	ldr	r4, [sp, #20]
 8027ef4:	2001      	movs	r0, #1
 8027ef6:	e7e6      	b.n	8027ec6 <__kernel_rem_pio2f+0x27a>
 8027ef8:	9b04      	ldr	r3, [sp, #16]
 8027efa:	f8dd e008 	ldr.w	lr, [sp, #8]
 8027efe:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8027f02:	9306      	str	r3, [sp, #24]
 8027f04:	ee07 3a90 	vmov	s15, r3
 8027f08:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027f0c:	2600      	movs	r6, #0
 8027f0e:	ece7 7a01 	vstmia	r7!, {s15}
 8027f12:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8027f4c <__kernel_rem_pio2f+0x300>
 8027f16:	46b9      	mov	r9, r7
 8027f18:	455e      	cmp	r6, fp
 8027f1a:	dd04      	ble.n	8027f26 <__kernel_rem_pio2f+0x2da>
 8027f1c:	ece4 7a01 	vstmia	r4!, {s15}
 8027f20:	f10c 0c01 	add.w	ip, ip, #1
 8027f24:	e7e1      	b.n	8027eea <__kernel_rem_pio2f+0x29e>
 8027f26:	ecfe 6a01 	vldmia	lr!, {s13}
 8027f2a:	ed39 7a01 	vldmdb	r9!, {s14}
 8027f2e:	3601      	adds	r6, #1
 8027f30:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027f34:	e7f0      	b.n	8027f18 <__kernel_rem_pio2f+0x2cc>
 8027f36:	3c01      	subs	r4, #1
 8027f38:	e777      	b.n	8027e2a <__kernel_rem_pio2f+0x1de>
 8027f3a:	bf00      	nop
 8027f3c:	0802d308 	.word	0x0802d308
 8027f40:	0802d2dc 	.word	0x0802d2dc
 8027f44:	43800000 	.word	0x43800000
 8027f48:	3b800000 	.word	0x3b800000
 8027f4c:	00000000 	.word	0x00000000
 8027f50:	9b03      	ldr	r3, [sp, #12]
 8027f52:	eeb0 0a48 	vmov.f32	s0, s16
 8027f56:	1a98      	subs	r0, r3, r2
 8027f58:	f7ff fe12 	bl	8027b80 <scalbnf>
 8027f5c:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 8027f44 <__kernel_rem_pio2f+0x2f8>
 8027f60:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8027f64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027f68:	db19      	blt.n	8027f9e <__kernel_rem_pio2f+0x352>
 8027f6a:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 8027f48 <__kernel_rem_pio2f+0x2fc>
 8027f6e:	ee60 7a27 	vmul.f32	s15, s0, s15
 8027f72:	aa08      	add	r2, sp, #32
 8027f74:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8027f78:	1c74      	adds	r4, r6, #1
 8027f7a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027f7e:	3508      	adds	r5, #8
 8027f80:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8027f84:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8027f88:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8027f8c:	ee10 3a10 	vmov	r3, s0
 8027f90:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8027f94:	ee17 3a90 	vmov	r3, s15
 8027f98:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8027f9c:	e74b      	b.n	8027e36 <__kernel_rem_pio2f+0x1ea>
 8027f9e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8027fa2:	aa08      	add	r2, sp, #32
 8027fa4:	ee10 3a10 	vmov	r3, s0
 8027fa8:	4634      	mov	r4, r6
 8027faa:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8027fae:	e742      	b.n	8027e36 <__kernel_rem_pio2f+0x1ea>
 8027fb0:	a808      	add	r0, sp, #32
 8027fb2:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8027fb6:	9001      	str	r0, [sp, #4]
 8027fb8:	ee07 0a90 	vmov	s15, r0
 8027fbc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027fc0:	3b01      	subs	r3, #1
 8027fc2:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027fc6:	ee20 0a07 	vmul.f32	s0, s0, s14
 8027fca:	ed62 7a01 	vstmdb	r2!, {s15}
 8027fce:	e73f      	b.n	8027e50 <__kernel_rem_pio2f+0x204>
 8027fd0:	ecf6 6a01 	vldmia	r6!, {s13}
 8027fd4:	ecb5 7a01 	vldmia	r5!, {s14}
 8027fd8:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027fdc:	3001      	adds	r0, #1
 8027fde:	4550      	cmp	r0, sl
 8027fe0:	dc01      	bgt.n	8027fe6 <__kernel_rem_pio2f+0x39a>
 8027fe2:	4290      	cmp	r0, r2
 8027fe4:	ddf4      	ble.n	8027fd0 <__kernel_rem_pio2f+0x384>
 8027fe6:	a858      	add	r0, sp, #352	; 0x160
 8027fe8:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8027fec:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 8027ff0:	3b01      	subs	r3, #1
 8027ff2:	e731      	b.n	8027e58 <__kernel_rem_pio2f+0x20c>
 8027ff4:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8027ff6:	2b02      	cmp	r3, #2
 8027ff8:	dc09      	bgt.n	802800e <__kernel_rem_pio2f+0x3c2>
 8027ffa:	2b00      	cmp	r3, #0
 8027ffc:	dc2b      	bgt.n	8028056 <__kernel_rem_pio2f+0x40a>
 8027ffe:	d044      	beq.n	802808a <__kernel_rem_pio2f+0x43e>
 8028000:	f009 0007 	and.w	r0, r9, #7
 8028004:	b059      	add	sp, #356	; 0x164
 8028006:	ecbd 8b04 	vpop	{d8-d9}
 802800a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802800e:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8028010:	2b03      	cmp	r3, #3
 8028012:	d1f5      	bne.n	8028000 <__kernel_rem_pio2f+0x3b4>
 8028014:	aa30      	add	r2, sp, #192	; 0xc0
 8028016:	1f0b      	subs	r3, r1, #4
 8028018:	4413      	add	r3, r2
 802801a:	461a      	mov	r2, r3
 802801c:	4620      	mov	r0, r4
 802801e:	2800      	cmp	r0, #0
 8028020:	f1a2 0204 	sub.w	r2, r2, #4
 8028024:	dc52      	bgt.n	80280cc <__kernel_rem_pio2f+0x480>
 8028026:	4622      	mov	r2, r4
 8028028:	2a01      	cmp	r2, #1
 802802a:	f1a3 0304 	sub.w	r3, r3, #4
 802802e:	dc5d      	bgt.n	80280ec <__kernel_rem_pio2f+0x4a0>
 8028030:	ab30      	add	r3, sp, #192	; 0xc0
 8028032:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 8027f4c <__kernel_rem_pio2f+0x300>
 8028036:	440b      	add	r3, r1
 8028038:	2c01      	cmp	r4, #1
 802803a:	dc67      	bgt.n	802810c <__kernel_rem_pio2f+0x4c0>
 802803c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8028040:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 8028044:	2f00      	cmp	r7, #0
 8028046:	d167      	bne.n	8028118 <__kernel_rem_pio2f+0x4cc>
 8028048:	edc8 6a00 	vstr	s13, [r8]
 802804c:	ed88 7a01 	vstr	s14, [r8, #4]
 8028050:	edc8 7a02 	vstr	s15, [r8, #8]
 8028054:	e7d4      	b.n	8028000 <__kernel_rem_pio2f+0x3b4>
 8028056:	ab30      	add	r3, sp, #192	; 0xc0
 8028058:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 8027f4c <__kernel_rem_pio2f+0x300>
 802805c:	440b      	add	r3, r1
 802805e:	4622      	mov	r2, r4
 8028060:	2a00      	cmp	r2, #0
 8028062:	da24      	bge.n	80280ae <__kernel_rem_pio2f+0x462>
 8028064:	b34f      	cbz	r7, 80280ba <__kernel_rem_pio2f+0x46e>
 8028066:	eef1 7a47 	vneg.f32	s15, s14
 802806a:	edc8 7a00 	vstr	s15, [r8]
 802806e:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 8028072:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8028076:	aa31      	add	r2, sp, #196	; 0xc4
 8028078:	2301      	movs	r3, #1
 802807a:	429c      	cmp	r4, r3
 802807c:	da20      	bge.n	80280c0 <__kernel_rem_pio2f+0x474>
 802807e:	b10f      	cbz	r7, 8028084 <__kernel_rem_pio2f+0x438>
 8028080:	eef1 7a67 	vneg.f32	s15, s15
 8028084:	edc8 7a01 	vstr	s15, [r8, #4]
 8028088:	e7ba      	b.n	8028000 <__kernel_rem_pio2f+0x3b4>
 802808a:	ab30      	add	r3, sp, #192	; 0xc0
 802808c:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 8027f4c <__kernel_rem_pio2f+0x300>
 8028090:	440b      	add	r3, r1
 8028092:	2c00      	cmp	r4, #0
 8028094:	da05      	bge.n	80280a2 <__kernel_rem_pio2f+0x456>
 8028096:	b10f      	cbz	r7, 802809c <__kernel_rem_pio2f+0x450>
 8028098:	eef1 7a67 	vneg.f32	s15, s15
 802809c:	edc8 7a00 	vstr	s15, [r8]
 80280a0:	e7ae      	b.n	8028000 <__kernel_rem_pio2f+0x3b4>
 80280a2:	ed33 7a01 	vldmdb	r3!, {s14}
 80280a6:	3c01      	subs	r4, #1
 80280a8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80280ac:	e7f1      	b.n	8028092 <__kernel_rem_pio2f+0x446>
 80280ae:	ed73 7a01 	vldmdb	r3!, {s15}
 80280b2:	3a01      	subs	r2, #1
 80280b4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80280b8:	e7d2      	b.n	8028060 <__kernel_rem_pio2f+0x414>
 80280ba:	eef0 7a47 	vmov.f32	s15, s14
 80280be:	e7d4      	b.n	802806a <__kernel_rem_pio2f+0x41e>
 80280c0:	ecb2 7a01 	vldmia	r2!, {s14}
 80280c4:	3301      	adds	r3, #1
 80280c6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80280ca:	e7d6      	b.n	802807a <__kernel_rem_pio2f+0x42e>
 80280cc:	edd2 7a00 	vldr	s15, [r2]
 80280d0:	edd2 6a01 	vldr	s13, [r2, #4]
 80280d4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80280d8:	3801      	subs	r0, #1
 80280da:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80280de:	ed82 7a00 	vstr	s14, [r2]
 80280e2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80280e6:	edc2 7a01 	vstr	s15, [r2, #4]
 80280ea:	e798      	b.n	802801e <__kernel_rem_pio2f+0x3d2>
 80280ec:	edd3 7a00 	vldr	s15, [r3]
 80280f0:	edd3 6a01 	vldr	s13, [r3, #4]
 80280f4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80280f8:	3a01      	subs	r2, #1
 80280fa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80280fe:	ed83 7a00 	vstr	s14, [r3]
 8028102:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8028106:	edc3 7a01 	vstr	s15, [r3, #4]
 802810a:	e78d      	b.n	8028028 <__kernel_rem_pio2f+0x3dc>
 802810c:	ed33 7a01 	vldmdb	r3!, {s14}
 8028110:	3c01      	subs	r4, #1
 8028112:	ee77 7a87 	vadd.f32	s15, s15, s14
 8028116:	e78f      	b.n	8028038 <__kernel_rem_pio2f+0x3ec>
 8028118:	eef1 6a66 	vneg.f32	s13, s13
 802811c:	eeb1 7a47 	vneg.f32	s14, s14
 8028120:	edc8 6a00 	vstr	s13, [r8]
 8028124:	ed88 7a01 	vstr	s14, [r8, #4]
 8028128:	eef1 7a67 	vneg.f32	s15, s15
 802812c:	e790      	b.n	8028050 <__kernel_rem_pio2f+0x404>
 802812e:	bf00      	nop

08028130 <abort>:
 8028130:	b508      	push	{r3, lr}
 8028132:	2006      	movs	r0, #6
 8028134:	f000 fa3a 	bl	80285ac <raise>
 8028138:	2001      	movs	r0, #1
 802813a:	f7da f82b 	bl	8002194 <_exit>
	...

08028140 <__assert_func>:
 8028140:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8028142:	4614      	mov	r4, r2
 8028144:	461a      	mov	r2, r3
 8028146:	4b09      	ldr	r3, [pc, #36]	; (802816c <__assert_func+0x2c>)
 8028148:	681b      	ldr	r3, [r3, #0]
 802814a:	4605      	mov	r5, r0
 802814c:	68d8      	ldr	r0, [r3, #12]
 802814e:	b14c      	cbz	r4, 8028164 <__assert_func+0x24>
 8028150:	4b07      	ldr	r3, [pc, #28]	; (8028170 <__assert_func+0x30>)
 8028152:	9100      	str	r1, [sp, #0]
 8028154:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8028158:	4906      	ldr	r1, [pc, #24]	; (8028174 <__assert_func+0x34>)
 802815a:	462b      	mov	r3, r5
 802815c:	f000 f982 	bl	8028464 <fiprintf>
 8028160:	f7ff ffe6 	bl	8028130 <abort>
 8028164:	4b04      	ldr	r3, [pc, #16]	; (8028178 <__assert_func+0x38>)
 8028166:	461c      	mov	r4, r3
 8028168:	e7f3      	b.n	8028152 <__assert_func+0x12>
 802816a:	bf00      	nop
 802816c:	20000160 	.word	0x20000160
 8028170:	0802d314 	.word	0x0802d314
 8028174:	0802d321 	.word	0x0802d321
 8028178:	0802d34f 	.word	0x0802d34f

0802817c <atexit>:
 802817c:	2300      	movs	r3, #0
 802817e:	4601      	mov	r1, r0
 8028180:	461a      	mov	r2, r3
 8028182:	4618      	mov	r0, r3
 8028184:	f000 bb16 	b.w	80287b4 <__register_exitproc>

08028188 <malloc>:
 8028188:	4b02      	ldr	r3, [pc, #8]	; (8028194 <malloc+0xc>)
 802818a:	4601      	mov	r1, r0
 802818c:	6818      	ldr	r0, [r3, #0]
 802818e:	f000 b82b 	b.w	80281e8 <_malloc_r>
 8028192:	bf00      	nop
 8028194:	20000160 	.word	0x20000160

08028198 <free>:
 8028198:	4b02      	ldr	r3, [pc, #8]	; (80281a4 <free+0xc>)
 802819a:	4601      	mov	r1, r0
 802819c:	6818      	ldr	r0, [r3, #0]
 802819e:	f000 bb67 	b.w	8028870 <_free_r>
 80281a2:	bf00      	nop
 80281a4:	20000160 	.word	0x20000160

080281a8 <sbrk_aligned>:
 80281a8:	b570      	push	{r4, r5, r6, lr}
 80281aa:	4e0e      	ldr	r6, [pc, #56]	; (80281e4 <sbrk_aligned+0x3c>)
 80281ac:	460c      	mov	r4, r1
 80281ae:	6831      	ldr	r1, [r6, #0]
 80281b0:	4605      	mov	r5, r0
 80281b2:	b911      	cbnz	r1, 80281ba <sbrk_aligned+0x12>
 80281b4:	f000 faa0 	bl	80286f8 <_sbrk_r>
 80281b8:	6030      	str	r0, [r6, #0]
 80281ba:	4621      	mov	r1, r4
 80281bc:	4628      	mov	r0, r5
 80281be:	f000 fa9b 	bl	80286f8 <_sbrk_r>
 80281c2:	1c43      	adds	r3, r0, #1
 80281c4:	d00a      	beq.n	80281dc <sbrk_aligned+0x34>
 80281c6:	1cc4      	adds	r4, r0, #3
 80281c8:	f024 0403 	bic.w	r4, r4, #3
 80281cc:	42a0      	cmp	r0, r4
 80281ce:	d007      	beq.n	80281e0 <sbrk_aligned+0x38>
 80281d0:	1a21      	subs	r1, r4, r0
 80281d2:	4628      	mov	r0, r5
 80281d4:	f000 fa90 	bl	80286f8 <_sbrk_r>
 80281d8:	3001      	adds	r0, #1
 80281da:	d101      	bne.n	80281e0 <sbrk_aligned+0x38>
 80281dc:	f04f 34ff 	mov.w	r4, #4294967295
 80281e0:	4620      	mov	r0, r4
 80281e2:	bd70      	pop	{r4, r5, r6, pc}
 80281e4:	20014114 	.word	0x20014114

080281e8 <_malloc_r>:
 80281e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80281ec:	1ccd      	adds	r5, r1, #3
 80281ee:	f025 0503 	bic.w	r5, r5, #3
 80281f2:	3508      	adds	r5, #8
 80281f4:	2d0c      	cmp	r5, #12
 80281f6:	bf38      	it	cc
 80281f8:	250c      	movcc	r5, #12
 80281fa:	2d00      	cmp	r5, #0
 80281fc:	4607      	mov	r7, r0
 80281fe:	db01      	blt.n	8028204 <_malloc_r+0x1c>
 8028200:	42a9      	cmp	r1, r5
 8028202:	d905      	bls.n	8028210 <_malloc_r+0x28>
 8028204:	230c      	movs	r3, #12
 8028206:	603b      	str	r3, [r7, #0]
 8028208:	2600      	movs	r6, #0
 802820a:	4630      	mov	r0, r6
 802820c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8028210:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80282e4 <_malloc_r+0xfc>
 8028214:	f000 f868 	bl	80282e8 <__malloc_lock>
 8028218:	f8d8 3000 	ldr.w	r3, [r8]
 802821c:	461c      	mov	r4, r3
 802821e:	bb5c      	cbnz	r4, 8028278 <_malloc_r+0x90>
 8028220:	4629      	mov	r1, r5
 8028222:	4638      	mov	r0, r7
 8028224:	f7ff ffc0 	bl	80281a8 <sbrk_aligned>
 8028228:	1c43      	adds	r3, r0, #1
 802822a:	4604      	mov	r4, r0
 802822c:	d155      	bne.n	80282da <_malloc_r+0xf2>
 802822e:	f8d8 4000 	ldr.w	r4, [r8]
 8028232:	4626      	mov	r6, r4
 8028234:	2e00      	cmp	r6, #0
 8028236:	d145      	bne.n	80282c4 <_malloc_r+0xdc>
 8028238:	2c00      	cmp	r4, #0
 802823a:	d048      	beq.n	80282ce <_malloc_r+0xe6>
 802823c:	6823      	ldr	r3, [r4, #0]
 802823e:	4631      	mov	r1, r6
 8028240:	4638      	mov	r0, r7
 8028242:	eb04 0903 	add.w	r9, r4, r3
 8028246:	f000 fa57 	bl	80286f8 <_sbrk_r>
 802824a:	4581      	cmp	r9, r0
 802824c:	d13f      	bne.n	80282ce <_malloc_r+0xe6>
 802824e:	6821      	ldr	r1, [r4, #0]
 8028250:	1a6d      	subs	r5, r5, r1
 8028252:	4629      	mov	r1, r5
 8028254:	4638      	mov	r0, r7
 8028256:	f7ff ffa7 	bl	80281a8 <sbrk_aligned>
 802825a:	3001      	adds	r0, #1
 802825c:	d037      	beq.n	80282ce <_malloc_r+0xe6>
 802825e:	6823      	ldr	r3, [r4, #0]
 8028260:	442b      	add	r3, r5
 8028262:	6023      	str	r3, [r4, #0]
 8028264:	f8d8 3000 	ldr.w	r3, [r8]
 8028268:	2b00      	cmp	r3, #0
 802826a:	d038      	beq.n	80282de <_malloc_r+0xf6>
 802826c:	685a      	ldr	r2, [r3, #4]
 802826e:	42a2      	cmp	r2, r4
 8028270:	d12b      	bne.n	80282ca <_malloc_r+0xe2>
 8028272:	2200      	movs	r2, #0
 8028274:	605a      	str	r2, [r3, #4]
 8028276:	e00f      	b.n	8028298 <_malloc_r+0xb0>
 8028278:	6822      	ldr	r2, [r4, #0]
 802827a:	1b52      	subs	r2, r2, r5
 802827c:	d41f      	bmi.n	80282be <_malloc_r+0xd6>
 802827e:	2a0b      	cmp	r2, #11
 8028280:	d917      	bls.n	80282b2 <_malloc_r+0xca>
 8028282:	1961      	adds	r1, r4, r5
 8028284:	42a3      	cmp	r3, r4
 8028286:	6025      	str	r5, [r4, #0]
 8028288:	bf18      	it	ne
 802828a:	6059      	strne	r1, [r3, #4]
 802828c:	6863      	ldr	r3, [r4, #4]
 802828e:	bf08      	it	eq
 8028290:	f8c8 1000 	streq.w	r1, [r8]
 8028294:	5162      	str	r2, [r4, r5]
 8028296:	604b      	str	r3, [r1, #4]
 8028298:	4638      	mov	r0, r7
 802829a:	f104 060b 	add.w	r6, r4, #11
 802829e:	f000 f829 	bl	80282f4 <__malloc_unlock>
 80282a2:	f026 0607 	bic.w	r6, r6, #7
 80282a6:	1d23      	adds	r3, r4, #4
 80282a8:	1af2      	subs	r2, r6, r3
 80282aa:	d0ae      	beq.n	802820a <_malloc_r+0x22>
 80282ac:	1b9b      	subs	r3, r3, r6
 80282ae:	50a3      	str	r3, [r4, r2]
 80282b0:	e7ab      	b.n	802820a <_malloc_r+0x22>
 80282b2:	42a3      	cmp	r3, r4
 80282b4:	6862      	ldr	r2, [r4, #4]
 80282b6:	d1dd      	bne.n	8028274 <_malloc_r+0x8c>
 80282b8:	f8c8 2000 	str.w	r2, [r8]
 80282bc:	e7ec      	b.n	8028298 <_malloc_r+0xb0>
 80282be:	4623      	mov	r3, r4
 80282c0:	6864      	ldr	r4, [r4, #4]
 80282c2:	e7ac      	b.n	802821e <_malloc_r+0x36>
 80282c4:	4634      	mov	r4, r6
 80282c6:	6876      	ldr	r6, [r6, #4]
 80282c8:	e7b4      	b.n	8028234 <_malloc_r+0x4c>
 80282ca:	4613      	mov	r3, r2
 80282cc:	e7cc      	b.n	8028268 <_malloc_r+0x80>
 80282ce:	230c      	movs	r3, #12
 80282d0:	603b      	str	r3, [r7, #0]
 80282d2:	4638      	mov	r0, r7
 80282d4:	f000 f80e 	bl	80282f4 <__malloc_unlock>
 80282d8:	e797      	b.n	802820a <_malloc_r+0x22>
 80282da:	6025      	str	r5, [r4, #0]
 80282dc:	e7dc      	b.n	8028298 <_malloc_r+0xb0>
 80282de:	605b      	str	r3, [r3, #4]
 80282e0:	deff      	udf	#255	; 0xff
 80282e2:	bf00      	nop
 80282e4:	20014110 	.word	0x20014110

080282e8 <__malloc_lock>:
 80282e8:	4801      	ldr	r0, [pc, #4]	; (80282f0 <__malloc_lock+0x8>)
 80282ea:	f000 ba52 	b.w	8028792 <__retarget_lock_acquire_recursive>
 80282ee:	bf00      	nop
 80282f0:	20014259 	.word	0x20014259

080282f4 <__malloc_unlock>:
 80282f4:	4801      	ldr	r0, [pc, #4]	; (80282fc <__malloc_unlock+0x8>)
 80282f6:	f000 ba4d 	b.w	8028794 <__retarget_lock_release_recursive>
 80282fa:	bf00      	nop
 80282fc:	20014259 	.word	0x20014259

08028300 <__cxa_atexit>:
 8028300:	b510      	push	{r4, lr}
 8028302:	4c05      	ldr	r4, [pc, #20]	; (8028318 <__cxa_atexit+0x18>)
 8028304:	4613      	mov	r3, r2
 8028306:	b12c      	cbz	r4, 8028314 <__cxa_atexit+0x14>
 8028308:	460a      	mov	r2, r1
 802830a:	4601      	mov	r1, r0
 802830c:	2002      	movs	r0, #2
 802830e:	f000 fa51 	bl	80287b4 <__register_exitproc>
 8028312:	bd10      	pop	{r4, pc}
 8028314:	4620      	mov	r0, r4
 8028316:	e7fc      	b.n	8028312 <__cxa_atexit+0x12>
 8028318:	080287b5 	.word	0x080287b5

0802831c <std>:
 802831c:	2300      	movs	r3, #0
 802831e:	b510      	push	{r4, lr}
 8028320:	4604      	mov	r4, r0
 8028322:	e9c0 3300 	strd	r3, r3, [r0]
 8028326:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802832a:	6083      	str	r3, [r0, #8]
 802832c:	8181      	strh	r1, [r0, #12]
 802832e:	6643      	str	r3, [r0, #100]	; 0x64
 8028330:	81c2      	strh	r2, [r0, #14]
 8028332:	6183      	str	r3, [r0, #24]
 8028334:	4619      	mov	r1, r3
 8028336:	2208      	movs	r2, #8
 8028338:	305c      	adds	r0, #92	; 0x5c
 802833a:	f000 f906 	bl	802854a <memset>
 802833e:	4b0d      	ldr	r3, [pc, #52]	; (8028374 <std+0x58>)
 8028340:	6263      	str	r3, [r4, #36]	; 0x24
 8028342:	4b0d      	ldr	r3, [pc, #52]	; (8028378 <std+0x5c>)
 8028344:	62a3      	str	r3, [r4, #40]	; 0x28
 8028346:	4b0d      	ldr	r3, [pc, #52]	; (802837c <std+0x60>)
 8028348:	62e3      	str	r3, [r4, #44]	; 0x2c
 802834a:	4b0d      	ldr	r3, [pc, #52]	; (8028380 <std+0x64>)
 802834c:	6323      	str	r3, [r4, #48]	; 0x30
 802834e:	4b0d      	ldr	r3, [pc, #52]	; (8028384 <std+0x68>)
 8028350:	6224      	str	r4, [r4, #32]
 8028352:	429c      	cmp	r4, r3
 8028354:	d006      	beq.n	8028364 <std+0x48>
 8028356:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802835a:	4294      	cmp	r4, r2
 802835c:	d002      	beq.n	8028364 <std+0x48>
 802835e:	33d0      	adds	r3, #208	; 0xd0
 8028360:	429c      	cmp	r4, r3
 8028362:	d105      	bne.n	8028370 <std+0x54>
 8028364:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8028368:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802836c:	f000 ba10 	b.w	8028790 <__retarget_lock_init_recursive>
 8028370:	bd10      	pop	{r4, pc}
 8028372:	bf00      	nop
 8028374:	080284c5 	.word	0x080284c5
 8028378:	080284e7 	.word	0x080284e7
 802837c:	0802851f 	.word	0x0802851f
 8028380:	08028543 	.word	0x08028543
 8028384:	20014118 	.word	0x20014118

08028388 <stdio_exit_handler>:
 8028388:	4a02      	ldr	r2, [pc, #8]	; (8028394 <stdio_exit_handler+0xc>)
 802838a:	4903      	ldr	r1, [pc, #12]	; (8028398 <stdio_exit_handler+0x10>)
 802838c:	4803      	ldr	r0, [pc, #12]	; (802839c <stdio_exit_handler+0x14>)
 802838e:	f000 b87b 	b.w	8028488 <_fwalk_sglue>
 8028392:	bf00      	nop
 8028394:	20000108 	.word	0x20000108
 8028398:	08028fbd 	.word	0x08028fbd
 802839c:	20000114 	.word	0x20000114

080283a0 <cleanup_stdio>:
 80283a0:	6841      	ldr	r1, [r0, #4]
 80283a2:	4b0c      	ldr	r3, [pc, #48]	; (80283d4 <cleanup_stdio+0x34>)
 80283a4:	4299      	cmp	r1, r3
 80283a6:	b510      	push	{r4, lr}
 80283a8:	4604      	mov	r4, r0
 80283aa:	d001      	beq.n	80283b0 <cleanup_stdio+0x10>
 80283ac:	f000 fe06 	bl	8028fbc <_fflush_r>
 80283b0:	68a1      	ldr	r1, [r4, #8]
 80283b2:	4b09      	ldr	r3, [pc, #36]	; (80283d8 <cleanup_stdio+0x38>)
 80283b4:	4299      	cmp	r1, r3
 80283b6:	d002      	beq.n	80283be <cleanup_stdio+0x1e>
 80283b8:	4620      	mov	r0, r4
 80283ba:	f000 fdff 	bl	8028fbc <_fflush_r>
 80283be:	68e1      	ldr	r1, [r4, #12]
 80283c0:	4b06      	ldr	r3, [pc, #24]	; (80283dc <cleanup_stdio+0x3c>)
 80283c2:	4299      	cmp	r1, r3
 80283c4:	d004      	beq.n	80283d0 <cleanup_stdio+0x30>
 80283c6:	4620      	mov	r0, r4
 80283c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80283cc:	f000 bdf6 	b.w	8028fbc <_fflush_r>
 80283d0:	bd10      	pop	{r4, pc}
 80283d2:	bf00      	nop
 80283d4:	20014118 	.word	0x20014118
 80283d8:	20014180 	.word	0x20014180
 80283dc:	200141e8 	.word	0x200141e8

080283e0 <global_stdio_init.part.0>:
 80283e0:	b510      	push	{r4, lr}
 80283e2:	4b0b      	ldr	r3, [pc, #44]	; (8028410 <global_stdio_init.part.0+0x30>)
 80283e4:	4c0b      	ldr	r4, [pc, #44]	; (8028414 <global_stdio_init.part.0+0x34>)
 80283e6:	4a0c      	ldr	r2, [pc, #48]	; (8028418 <global_stdio_init.part.0+0x38>)
 80283e8:	601a      	str	r2, [r3, #0]
 80283ea:	4620      	mov	r0, r4
 80283ec:	2200      	movs	r2, #0
 80283ee:	2104      	movs	r1, #4
 80283f0:	f7ff ff94 	bl	802831c <std>
 80283f4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80283f8:	2201      	movs	r2, #1
 80283fa:	2109      	movs	r1, #9
 80283fc:	f7ff ff8e 	bl	802831c <std>
 8028400:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8028404:	2202      	movs	r2, #2
 8028406:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802840a:	2112      	movs	r1, #18
 802840c:	f7ff bf86 	b.w	802831c <std>
 8028410:	20014250 	.word	0x20014250
 8028414:	20014118 	.word	0x20014118
 8028418:	08028389 	.word	0x08028389

0802841c <__sfp_lock_acquire>:
 802841c:	4801      	ldr	r0, [pc, #4]	; (8028424 <__sfp_lock_acquire+0x8>)
 802841e:	f000 b9b8 	b.w	8028792 <__retarget_lock_acquire_recursive>
 8028422:	bf00      	nop
 8028424:	2001425a 	.word	0x2001425a

08028428 <__sfp_lock_release>:
 8028428:	4801      	ldr	r0, [pc, #4]	; (8028430 <__sfp_lock_release+0x8>)
 802842a:	f000 b9b3 	b.w	8028794 <__retarget_lock_release_recursive>
 802842e:	bf00      	nop
 8028430:	2001425a 	.word	0x2001425a

08028434 <__sinit>:
 8028434:	b510      	push	{r4, lr}
 8028436:	4604      	mov	r4, r0
 8028438:	f7ff fff0 	bl	802841c <__sfp_lock_acquire>
 802843c:	6a23      	ldr	r3, [r4, #32]
 802843e:	b11b      	cbz	r3, 8028448 <__sinit+0x14>
 8028440:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028444:	f7ff bff0 	b.w	8028428 <__sfp_lock_release>
 8028448:	4b04      	ldr	r3, [pc, #16]	; (802845c <__sinit+0x28>)
 802844a:	6223      	str	r3, [r4, #32]
 802844c:	4b04      	ldr	r3, [pc, #16]	; (8028460 <__sinit+0x2c>)
 802844e:	681b      	ldr	r3, [r3, #0]
 8028450:	2b00      	cmp	r3, #0
 8028452:	d1f5      	bne.n	8028440 <__sinit+0xc>
 8028454:	f7ff ffc4 	bl	80283e0 <global_stdio_init.part.0>
 8028458:	e7f2      	b.n	8028440 <__sinit+0xc>
 802845a:	bf00      	nop
 802845c:	080283a1 	.word	0x080283a1
 8028460:	20014250 	.word	0x20014250

08028464 <fiprintf>:
 8028464:	b40e      	push	{r1, r2, r3}
 8028466:	b503      	push	{r0, r1, lr}
 8028468:	4601      	mov	r1, r0
 802846a:	ab03      	add	r3, sp, #12
 802846c:	4805      	ldr	r0, [pc, #20]	; (8028484 <fiprintf+0x20>)
 802846e:	f853 2b04 	ldr.w	r2, [r3], #4
 8028472:	6800      	ldr	r0, [r0, #0]
 8028474:	9301      	str	r3, [sp, #4]
 8028476:	f000 fa71 	bl	802895c <_vfiprintf_r>
 802847a:	b002      	add	sp, #8
 802847c:	f85d eb04 	ldr.w	lr, [sp], #4
 8028480:	b003      	add	sp, #12
 8028482:	4770      	bx	lr
 8028484:	20000160 	.word	0x20000160

08028488 <_fwalk_sglue>:
 8028488:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802848c:	4607      	mov	r7, r0
 802848e:	4688      	mov	r8, r1
 8028490:	4614      	mov	r4, r2
 8028492:	2600      	movs	r6, #0
 8028494:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8028498:	f1b9 0901 	subs.w	r9, r9, #1
 802849c:	d505      	bpl.n	80284aa <_fwalk_sglue+0x22>
 802849e:	6824      	ldr	r4, [r4, #0]
 80284a0:	2c00      	cmp	r4, #0
 80284a2:	d1f7      	bne.n	8028494 <_fwalk_sglue+0xc>
 80284a4:	4630      	mov	r0, r6
 80284a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80284aa:	89ab      	ldrh	r3, [r5, #12]
 80284ac:	2b01      	cmp	r3, #1
 80284ae:	d907      	bls.n	80284c0 <_fwalk_sglue+0x38>
 80284b0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80284b4:	3301      	adds	r3, #1
 80284b6:	d003      	beq.n	80284c0 <_fwalk_sglue+0x38>
 80284b8:	4629      	mov	r1, r5
 80284ba:	4638      	mov	r0, r7
 80284bc:	47c0      	blx	r8
 80284be:	4306      	orrs	r6, r0
 80284c0:	3568      	adds	r5, #104	; 0x68
 80284c2:	e7e9      	b.n	8028498 <_fwalk_sglue+0x10>

080284c4 <__sread>:
 80284c4:	b510      	push	{r4, lr}
 80284c6:	460c      	mov	r4, r1
 80284c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80284cc:	f000 f8ee 	bl	80286ac <_read_r>
 80284d0:	2800      	cmp	r0, #0
 80284d2:	bfab      	itete	ge
 80284d4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80284d6:	89a3      	ldrhlt	r3, [r4, #12]
 80284d8:	181b      	addge	r3, r3, r0
 80284da:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80284de:	bfac      	ite	ge
 80284e0:	6563      	strge	r3, [r4, #84]	; 0x54
 80284e2:	81a3      	strhlt	r3, [r4, #12]
 80284e4:	bd10      	pop	{r4, pc}

080284e6 <__swrite>:
 80284e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80284ea:	461f      	mov	r7, r3
 80284ec:	898b      	ldrh	r3, [r1, #12]
 80284ee:	05db      	lsls	r3, r3, #23
 80284f0:	4605      	mov	r5, r0
 80284f2:	460c      	mov	r4, r1
 80284f4:	4616      	mov	r6, r2
 80284f6:	d505      	bpl.n	8028504 <__swrite+0x1e>
 80284f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80284fc:	2302      	movs	r3, #2
 80284fe:	2200      	movs	r2, #0
 8028500:	f000 f8c2 	bl	8028688 <_lseek_r>
 8028504:	89a3      	ldrh	r3, [r4, #12]
 8028506:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802850a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802850e:	81a3      	strh	r3, [r4, #12]
 8028510:	4632      	mov	r2, r6
 8028512:	463b      	mov	r3, r7
 8028514:	4628      	mov	r0, r5
 8028516:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802851a:	f000 b8fd 	b.w	8028718 <_write_r>

0802851e <__sseek>:
 802851e:	b510      	push	{r4, lr}
 8028520:	460c      	mov	r4, r1
 8028522:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8028526:	f000 f8af 	bl	8028688 <_lseek_r>
 802852a:	1c43      	adds	r3, r0, #1
 802852c:	89a3      	ldrh	r3, [r4, #12]
 802852e:	bf15      	itete	ne
 8028530:	6560      	strne	r0, [r4, #84]	; 0x54
 8028532:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8028536:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802853a:	81a3      	strheq	r3, [r4, #12]
 802853c:	bf18      	it	ne
 802853e:	81a3      	strhne	r3, [r4, #12]
 8028540:	bd10      	pop	{r4, pc}

08028542 <__sclose>:
 8028542:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8028546:	f000 b839 	b.w	80285bc <_close_r>

0802854a <memset>:
 802854a:	4402      	add	r2, r0
 802854c:	4603      	mov	r3, r0
 802854e:	4293      	cmp	r3, r2
 8028550:	d100      	bne.n	8028554 <memset+0xa>
 8028552:	4770      	bx	lr
 8028554:	f803 1b01 	strb.w	r1, [r3], #1
 8028558:	e7f9      	b.n	802854e <memset+0x4>

0802855a <_raise_r>:
 802855a:	291f      	cmp	r1, #31
 802855c:	b538      	push	{r3, r4, r5, lr}
 802855e:	4604      	mov	r4, r0
 8028560:	460d      	mov	r5, r1
 8028562:	d904      	bls.n	802856e <_raise_r+0x14>
 8028564:	2316      	movs	r3, #22
 8028566:	6003      	str	r3, [r0, #0]
 8028568:	f04f 30ff 	mov.w	r0, #4294967295
 802856c:	bd38      	pop	{r3, r4, r5, pc}
 802856e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8028570:	b112      	cbz	r2, 8028578 <_raise_r+0x1e>
 8028572:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8028576:	b94b      	cbnz	r3, 802858c <_raise_r+0x32>
 8028578:	4620      	mov	r0, r4
 802857a:	f000 f8bb 	bl	80286f4 <_getpid_r>
 802857e:	462a      	mov	r2, r5
 8028580:	4601      	mov	r1, r0
 8028582:	4620      	mov	r0, r4
 8028584:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8028588:	f000 b8a2 	b.w	80286d0 <_kill_r>
 802858c:	2b01      	cmp	r3, #1
 802858e:	d00a      	beq.n	80285a6 <_raise_r+0x4c>
 8028590:	1c59      	adds	r1, r3, #1
 8028592:	d103      	bne.n	802859c <_raise_r+0x42>
 8028594:	2316      	movs	r3, #22
 8028596:	6003      	str	r3, [r0, #0]
 8028598:	2001      	movs	r0, #1
 802859a:	e7e7      	b.n	802856c <_raise_r+0x12>
 802859c:	2400      	movs	r4, #0
 802859e:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80285a2:	4628      	mov	r0, r5
 80285a4:	4798      	blx	r3
 80285a6:	2000      	movs	r0, #0
 80285a8:	e7e0      	b.n	802856c <_raise_r+0x12>
	...

080285ac <raise>:
 80285ac:	4b02      	ldr	r3, [pc, #8]	; (80285b8 <raise+0xc>)
 80285ae:	4601      	mov	r1, r0
 80285b0:	6818      	ldr	r0, [r3, #0]
 80285b2:	f7ff bfd2 	b.w	802855a <_raise_r>
 80285b6:	bf00      	nop
 80285b8:	20000160 	.word	0x20000160

080285bc <_close_r>:
 80285bc:	b538      	push	{r3, r4, r5, lr}
 80285be:	4d06      	ldr	r5, [pc, #24]	; (80285d8 <_close_r+0x1c>)
 80285c0:	2300      	movs	r3, #0
 80285c2:	4604      	mov	r4, r0
 80285c4:	4608      	mov	r0, r1
 80285c6:	602b      	str	r3, [r5, #0]
 80285c8:	f7d9 fe06 	bl	80021d8 <_close>
 80285cc:	1c43      	adds	r3, r0, #1
 80285ce:	d102      	bne.n	80285d6 <_close_r+0x1a>
 80285d0:	682b      	ldr	r3, [r5, #0]
 80285d2:	b103      	cbz	r3, 80285d6 <_close_r+0x1a>
 80285d4:	6023      	str	r3, [r4, #0]
 80285d6:	bd38      	pop	{r3, r4, r5, pc}
 80285d8:	20014254 	.word	0x20014254

080285dc <_reclaim_reent>:
 80285dc:	4b29      	ldr	r3, [pc, #164]	; (8028684 <_reclaim_reent+0xa8>)
 80285de:	681b      	ldr	r3, [r3, #0]
 80285e0:	4283      	cmp	r3, r0
 80285e2:	b570      	push	{r4, r5, r6, lr}
 80285e4:	4604      	mov	r4, r0
 80285e6:	d04b      	beq.n	8028680 <_reclaim_reent+0xa4>
 80285e8:	69c3      	ldr	r3, [r0, #28]
 80285ea:	b143      	cbz	r3, 80285fe <_reclaim_reent+0x22>
 80285ec:	68db      	ldr	r3, [r3, #12]
 80285ee:	2b00      	cmp	r3, #0
 80285f0:	d144      	bne.n	802867c <_reclaim_reent+0xa0>
 80285f2:	69e3      	ldr	r3, [r4, #28]
 80285f4:	6819      	ldr	r1, [r3, #0]
 80285f6:	b111      	cbz	r1, 80285fe <_reclaim_reent+0x22>
 80285f8:	4620      	mov	r0, r4
 80285fa:	f000 f939 	bl	8028870 <_free_r>
 80285fe:	6961      	ldr	r1, [r4, #20]
 8028600:	b111      	cbz	r1, 8028608 <_reclaim_reent+0x2c>
 8028602:	4620      	mov	r0, r4
 8028604:	f000 f934 	bl	8028870 <_free_r>
 8028608:	69e1      	ldr	r1, [r4, #28]
 802860a:	b111      	cbz	r1, 8028612 <_reclaim_reent+0x36>
 802860c:	4620      	mov	r0, r4
 802860e:	f000 f92f 	bl	8028870 <_free_r>
 8028612:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8028614:	b111      	cbz	r1, 802861c <_reclaim_reent+0x40>
 8028616:	4620      	mov	r0, r4
 8028618:	f000 f92a 	bl	8028870 <_free_r>
 802861c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802861e:	b111      	cbz	r1, 8028626 <_reclaim_reent+0x4a>
 8028620:	4620      	mov	r0, r4
 8028622:	f000 f925 	bl	8028870 <_free_r>
 8028626:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8028628:	b111      	cbz	r1, 8028630 <_reclaim_reent+0x54>
 802862a:	4620      	mov	r0, r4
 802862c:	f000 f920 	bl	8028870 <_free_r>
 8028630:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8028632:	b111      	cbz	r1, 802863a <_reclaim_reent+0x5e>
 8028634:	4620      	mov	r0, r4
 8028636:	f000 f91b 	bl	8028870 <_free_r>
 802863a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802863c:	b111      	cbz	r1, 8028644 <_reclaim_reent+0x68>
 802863e:	4620      	mov	r0, r4
 8028640:	f000 f916 	bl	8028870 <_free_r>
 8028644:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8028646:	b111      	cbz	r1, 802864e <_reclaim_reent+0x72>
 8028648:	4620      	mov	r0, r4
 802864a:	f000 f911 	bl	8028870 <_free_r>
 802864e:	6a23      	ldr	r3, [r4, #32]
 8028650:	b1b3      	cbz	r3, 8028680 <_reclaim_reent+0xa4>
 8028652:	4620      	mov	r0, r4
 8028654:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8028658:	4718      	bx	r3
 802865a:	5949      	ldr	r1, [r1, r5]
 802865c:	b941      	cbnz	r1, 8028670 <_reclaim_reent+0x94>
 802865e:	3504      	adds	r5, #4
 8028660:	69e3      	ldr	r3, [r4, #28]
 8028662:	2d80      	cmp	r5, #128	; 0x80
 8028664:	68d9      	ldr	r1, [r3, #12]
 8028666:	d1f8      	bne.n	802865a <_reclaim_reent+0x7e>
 8028668:	4620      	mov	r0, r4
 802866a:	f000 f901 	bl	8028870 <_free_r>
 802866e:	e7c0      	b.n	80285f2 <_reclaim_reent+0x16>
 8028670:	680e      	ldr	r6, [r1, #0]
 8028672:	4620      	mov	r0, r4
 8028674:	f000 f8fc 	bl	8028870 <_free_r>
 8028678:	4631      	mov	r1, r6
 802867a:	e7ef      	b.n	802865c <_reclaim_reent+0x80>
 802867c:	2500      	movs	r5, #0
 802867e:	e7ef      	b.n	8028660 <_reclaim_reent+0x84>
 8028680:	bd70      	pop	{r4, r5, r6, pc}
 8028682:	bf00      	nop
 8028684:	20000160 	.word	0x20000160

08028688 <_lseek_r>:
 8028688:	b538      	push	{r3, r4, r5, lr}
 802868a:	4d07      	ldr	r5, [pc, #28]	; (80286a8 <_lseek_r+0x20>)
 802868c:	4604      	mov	r4, r0
 802868e:	4608      	mov	r0, r1
 8028690:	4611      	mov	r1, r2
 8028692:	2200      	movs	r2, #0
 8028694:	602a      	str	r2, [r5, #0]
 8028696:	461a      	mov	r2, r3
 8028698:	f7d9 fdaa 	bl	80021f0 <_lseek>
 802869c:	1c43      	adds	r3, r0, #1
 802869e:	d102      	bne.n	80286a6 <_lseek_r+0x1e>
 80286a0:	682b      	ldr	r3, [r5, #0]
 80286a2:	b103      	cbz	r3, 80286a6 <_lseek_r+0x1e>
 80286a4:	6023      	str	r3, [r4, #0]
 80286a6:	bd38      	pop	{r3, r4, r5, pc}
 80286a8:	20014254 	.word	0x20014254

080286ac <_read_r>:
 80286ac:	b538      	push	{r3, r4, r5, lr}
 80286ae:	4d07      	ldr	r5, [pc, #28]	; (80286cc <_read_r+0x20>)
 80286b0:	4604      	mov	r4, r0
 80286b2:	4608      	mov	r0, r1
 80286b4:	4611      	mov	r1, r2
 80286b6:	2200      	movs	r2, #0
 80286b8:	602a      	str	r2, [r5, #0]
 80286ba:	461a      	mov	r2, r3
 80286bc:	f7d9 fd70 	bl	80021a0 <_read>
 80286c0:	1c43      	adds	r3, r0, #1
 80286c2:	d102      	bne.n	80286ca <_read_r+0x1e>
 80286c4:	682b      	ldr	r3, [r5, #0]
 80286c6:	b103      	cbz	r3, 80286ca <_read_r+0x1e>
 80286c8:	6023      	str	r3, [r4, #0]
 80286ca:	bd38      	pop	{r3, r4, r5, pc}
 80286cc:	20014254 	.word	0x20014254

080286d0 <_kill_r>:
 80286d0:	b538      	push	{r3, r4, r5, lr}
 80286d2:	4d07      	ldr	r5, [pc, #28]	; (80286f0 <_kill_r+0x20>)
 80286d4:	2300      	movs	r3, #0
 80286d6:	4604      	mov	r4, r0
 80286d8:	4608      	mov	r0, r1
 80286da:	4611      	mov	r1, r2
 80286dc:	602b      	str	r3, [r5, #0]
 80286de:	f7d9 fd51 	bl	8002184 <_kill>
 80286e2:	1c43      	adds	r3, r0, #1
 80286e4:	d102      	bne.n	80286ec <_kill_r+0x1c>
 80286e6:	682b      	ldr	r3, [r5, #0]
 80286e8:	b103      	cbz	r3, 80286ec <_kill_r+0x1c>
 80286ea:	6023      	str	r3, [r4, #0]
 80286ec:	bd38      	pop	{r3, r4, r5, pc}
 80286ee:	bf00      	nop
 80286f0:	20014254 	.word	0x20014254

080286f4 <_getpid_r>:
 80286f4:	f7d9 bd44 	b.w	8002180 <_getpid>

080286f8 <_sbrk_r>:
 80286f8:	b538      	push	{r3, r4, r5, lr}
 80286fa:	4d06      	ldr	r5, [pc, #24]	; (8028714 <_sbrk_r+0x1c>)
 80286fc:	2300      	movs	r3, #0
 80286fe:	4604      	mov	r4, r0
 8028700:	4608      	mov	r0, r1
 8028702:	602b      	str	r3, [r5, #0]
 8028704:	f7d9 fd76 	bl	80021f4 <_sbrk>
 8028708:	1c43      	adds	r3, r0, #1
 802870a:	d102      	bne.n	8028712 <_sbrk_r+0x1a>
 802870c:	682b      	ldr	r3, [r5, #0]
 802870e:	b103      	cbz	r3, 8028712 <_sbrk_r+0x1a>
 8028710:	6023      	str	r3, [r4, #0]
 8028712:	bd38      	pop	{r3, r4, r5, pc}
 8028714:	20014254 	.word	0x20014254

08028718 <_write_r>:
 8028718:	b538      	push	{r3, r4, r5, lr}
 802871a:	4d07      	ldr	r5, [pc, #28]	; (8028738 <_write_r+0x20>)
 802871c:	4604      	mov	r4, r0
 802871e:	4608      	mov	r0, r1
 8028720:	4611      	mov	r1, r2
 8028722:	2200      	movs	r2, #0
 8028724:	602a      	str	r2, [r5, #0]
 8028726:	461a      	mov	r2, r3
 8028728:	f7d9 fd48 	bl	80021bc <_write>
 802872c:	1c43      	adds	r3, r0, #1
 802872e:	d102      	bne.n	8028736 <_write_r+0x1e>
 8028730:	682b      	ldr	r3, [r5, #0]
 8028732:	b103      	cbz	r3, 8028736 <_write_r+0x1e>
 8028734:	6023      	str	r3, [r4, #0]
 8028736:	bd38      	pop	{r3, r4, r5, pc}
 8028738:	20014254 	.word	0x20014254

0802873c <__errno>:
 802873c:	4b01      	ldr	r3, [pc, #4]	; (8028744 <__errno+0x8>)
 802873e:	6818      	ldr	r0, [r3, #0]
 8028740:	4770      	bx	lr
 8028742:	bf00      	nop
 8028744:	20000160 	.word	0x20000160

08028748 <__libc_init_array>:
 8028748:	b570      	push	{r4, r5, r6, lr}
 802874a:	4d0d      	ldr	r5, [pc, #52]	; (8028780 <__libc_init_array+0x38>)
 802874c:	4c0d      	ldr	r4, [pc, #52]	; (8028784 <__libc_init_array+0x3c>)
 802874e:	1b64      	subs	r4, r4, r5
 8028750:	10a4      	asrs	r4, r4, #2
 8028752:	2600      	movs	r6, #0
 8028754:	42a6      	cmp	r6, r4
 8028756:	d109      	bne.n	802876c <__libc_init_array+0x24>
 8028758:	4d0b      	ldr	r5, [pc, #44]	; (8028788 <__libc_init_array+0x40>)
 802875a:	4c0c      	ldr	r4, [pc, #48]	; (802878c <__libc_init_array+0x44>)
 802875c:	f000 fd70 	bl	8029240 <_init>
 8028760:	1b64      	subs	r4, r4, r5
 8028762:	10a4      	asrs	r4, r4, #2
 8028764:	2600      	movs	r6, #0
 8028766:	42a6      	cmp	r6, r4
 8028768:	d105      	bne.n	8028776 <__libc_init_array+0x2e>
 802876a:	bd70      	pop	{r4, r5, r6, pc}
 802876c:	f855 3b04 	ldr.w	r3, [r5], #4
 8028770:	4798      	blx	r3
 8028772:	3601      	adds	r6, #1
 8028774:	e7ee      	b.n	8028754 <__libc_init_array+0xc>
 8028776:	f855 3b04 	ldr.w	r3, [r5], #4
 802877a:	4798      	blx	r3
 802877c:	3601      	adds	r6, #1
 802877e:	e7f2      	b.n	8028766 <__libc_init_array+0x1e>
 8028780:	08148d28 	.word	0x08148d28
 8028784:	08148d28 	.word	0x08148d28
 8028788:	08148d28 	.word	0x08148d28
 802878c:	08148d3c 	.word	0x08148d3c

08028790 <__retarget_lock_init_recursive>:
 8028790:	4770      	bx	lr

08028792 <__retarget_lock_acquire_recursive>:
 8028792:	4770      	bx	lr

08028794 <__retarget_lock_release_recursive>:
 8028794:	4770      	bx	lr

08028796 <memcpy>:
 8028796:	440a      	add	r2, r1
 8028798:	4291      	cmp	r1, r2
 802879a:	f100 33ff 	add.w	r3, r0, #4294967295
 802879e:	d100      	bne.n	80287a2 <memcpy+0xc>
 80287a0:	4770      	bx	lr
 80287a2:	b510      	push	{r4, lr}
 80287a4:	f811 4b01 	ldrb.w	r4, [r1], #1
 80287a8:	f803 4f01 	strb.w	r4, [r3, #1]!
 80287ac:	4291      	cmp	r1, r2
 80287ae:	d1f9      	bne.n	80287a4 <memcpy+0xe>
 80287b0:	bd10      	pop	{r4, pc}
	...

080287b4 <__register_exitproc>:
 80287b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80287b8:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802886c <__register_exitproc+0xb8>
 80287bc:	4606      	mov	r6, r0
 80287be:	f8d8 0000 	ldr.w	r0, [r8]
 80287c2:	461f      	mov	r7, r3
 80287c4:	460d      	mov	r5, r1
 80287c6:	4691      	mov	r9, r2
 80287c8:	f7ff ffe3 	bl	8028792 <__retarget_lock_acquire_recursive>
 80287cc:	4b23      	ldr	r3, [pc, #140]	; (802885c <__register_exitproc+0xa8>)
 80287ce:	681c      	ldr	r4, [r3, #0]
 80287d0:	b934      	cbnz	r4, 80287e0 <__register_exitproc+0x2c>
 80287d2:	4c23      	ldr	r4, [pc, #140]	; (8028860 <__register_exitproc+0xac>)
 80287d4:	601c      	str	r4, [r3, #0]
 80287d6:	4b23      	ldr	r3, [pc, #140]	; (8028864 <__register_exitproc+0xb0>)
 80287d8:	b113      	cbz	r3, 80287e0 <__register_exitproc+0x2c>
 80287da:	681b      	ldr	r3, [r3, #0]
 80287dc:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 80287e0:	6863      	ldr	r3, [r4, #4]
 80287e2:	2b1f      	cmp	r3, #31
 80287e4:	dd07      	ble.n	80287f6 <__register_exitproc+0x42>
 80287e6:	f8d8 0000 	ldr.w	r0, [r8]
 80287ea:	f7ff ffd3 	bl	8028794 <__retarget_lock_release_recursive>
 80287ee:	f04f 30ff 	mov.w	r0, #4294967295
 80287f2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80287f6:	b32e      	cbz	r6, 8028844 <__register_exitproc+0x90>
 80287f8:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80287fc:	b968      	cbnz	r0, 802881a <__register_exitproc+0x66>
 80287fe:	4b1a      	ldr	r3, [pc, #104]	; (8028868 <__register_exitproc+0xb4>)
 8028800:	2b00      	cmp	r3, #0
 8028802:	d0f0      	beq.n	80287e6 <__register_exitproc+0x32>
 8028804:	f44f 7084 	mov.w	r0, #264	; 0x108
 8028808:	f7ff fcbe 	bl	8028188 <malloc>
 802880c:	2800      	cmp	r0, #0
 802880e:	d0ea      	beq.n	80287e6 <__register_exitproc+0x32>
 8028810:	2300      	movs	r3, #0
 8028812:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8028816:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802881a:	6863      	ldr	r3, [r4, #4]
 802881c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8028820:	2201      	movs	r2, #1
 8028822:	409a      	lsls	r2, r3
 8028824:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8028828:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802882c:	4313      	orrs	r3, r2
 802882e:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8028832:	2e02      	cmp	r6, #2
 8028834:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8028838:	bf02      	ittt	eq
 802883a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802883e:	4313      	orreq	r3, r2
 8028840:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8028844:	6863      	ldr	r3, [r4, #4]
 8028846:	f8d8 0000 	ldr.w	r0, [r8]
 802884a:	1c5a      	adds	r2, r3, #1
 802884c:	3302      	adds	r3, #2
 802884e:	6062      	str	r2, [r4, #4]
 8028850:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8028854:	f7ff ff9e 	bl	8028794 <__retarget_lock_release_recursive>
 8028858:	2000      	movs	r0, #0
 802885a:	e7ca      	b.n	80287f2 <__register_exitproc+0x3e>
 802885c:	200142e8 	.word	0x200142e8
 8028860:	2001425c 	.word	0x2001425c
 8028864:	0802d350 	.word	0x0802d350
 8028868:	08028189 	.word	0x08028189
 802886c:	20000164 	.word	0x20000164

08028870 <_free_r>:
 8028870:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8028872:	2900      	cmp	r1, #0
 8028874:	d044      	beq.n	8028900 <_free_r+0x90>
 8028876:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802887a:	9001      	str	r0, [sp, #4]
 802887c:	2b00      	cmp	r3, #0
 802887e:	f1a1 0404 	sub.w	r4, r1, #4
 8028882:	bfb8      	it	lt
 8028884:	18e4      	addlt	r4, r4, r3
 8028886:	f7ff fd2f 	bl	80282e8 <__malloc_lock>
 802888a:	4a1e      	ldr	r2, [pc, #120]	; (8028904 <_free_r+0x94>)
 802888c:	9801      	ldr	r0, [sp, #4]
 802888e:	6813      	ldr	r3, [r2, #0]
 8028890:	b933      	cbnz	r3, 80288a0 <_free_r+0x30>
 8028892:	6063      	str	r3, [r4, #4]
 8028894:	6014      	str	r4, [r2, #0]
 8028896:	b003      	add	sp, #12
 8028898:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802889c:	f7ff bd2a 	b.w	80282f4 <__malloc_unlock>
 80288a0:	42a3      	cmp	r3, r4
 80288a2:	d908      	bls.n	80288b6 <_free_r+0x46>
 80288a4:	6825      	ldr	r5, [r4, #0]
 80288a6:	1961      	adds	r1, r4, r5
 80288a8:	428b      	cmp	r3, r1
 80288aa:	bf01      	itttt	eq
 80288ac:	6819      	ldreq	r1, [r3, #0]
 80288ae:	685b      	ldreq	r3, [r3, #4]
 80288b0:	1949      	addeq	r1, r1, r5
 80288b2:	6021      	streq	r1, [r4, #0]
 80288b4:	e7ed      	b.n	8028892 <_free_r+0x22>
 80288b6:	461a      	mov	r2, r3
 80288b8:	685b      	ldr	r3, [r3, #4]
 80288ba:	b10b      	cbz	r3, 80288c0 <_free_r+0x50>
 80288bc:	42a3      	cmp	r3, r4
 80288be:	d9fa      	bls.n	80288b6 <_free_r+0x46>
 80288c0:	6811      	ldr	r1, [r2, #0]
 80288c2:	1855      	adds	r5, r2, r1
 80288c4:	42a5      	cmp	r5, r4
 80288c6:	d10b      	bne.n	80288e0 <_free_r+0x70>
 80288c8:	6824      	ldr	r4, [r4, #0]
 80288ca:	4421      	add	r1, r4
 80288cc:	1854      	adds	r4, r2, r1
 80288ce:	42a3      	cmp	r3, r4
 80288d0:	6011      	str	r1, [r2, #0]
 80288d2:	d1e0      	bne.n	8028896 <_free_r+0x26>
 80288d4:	681c      	ldr	r4, [r3, #0]
 80288d6:	685b      	ldr	r3, [r3, #4]
 80288d8:	6053      	str	r3, [r2, #4]
 80288da:	440c      	add	r4, r1
 80288dc:	6014      	str	r4, [r2, #0]
 80288de:	e7da      	b.n	8028896 <_free_r+0x26>
 80288e0:	d902      	bls.n	80288e8 <_free_r+0x78>
 80288e2:	230c      	movs	r3, #12
 80288e4:	6003      	str	r3, [r0, #0]
 80288e6:	e7d6      	b.n	8028896 <_free_r+0x26>
 80288e8:	6825      	ldr	r5, [r4, #0]
 80288ea:	1961      	adds	r1, r4, r5
 80288ec:	428b      	cmp	r3, r1
 80288ee:	bf04      	itt	eq
 80288f0:	6819      	ldreq	r1, [r3, #0]
 80288f2:	685b      	ldreq	r3, [r3, #4]
 80288f4:	6063      	str	r3, [r4, #4]
 80288f6:	bf04      	itt	eq
 80288f8:	1949      	addeq	r1, r1, r5
 80288fa:	6021      	streq	r1, [r4, #0]
 80288fc:	6054      	str	r4, [r2, #4]
 80288fe:	e7ca      	b.n	8028896 <_free_r+0x26>
 8028900:	b003      	add	sp, #12
 8028902:	bd30      	pop	{r4, r5, pc}
 8028904:	20014110 	.word	0x20014110

08028908 <__sfputc_r>:
 8028908:	6893      	ldr	r3, [r2, #8]
 802890a:	3b01      	subs	r3, #1
 802890c:	2b00      	cmp	r3, #0
 802890e:	b410      	push	{r4}
 8028910:	6093      	str	r3, [r2, #8]
 8028912:	da08      	bge.n	8028926 <__sfputc_r+0x1e>
 8028914:	6994      	ldr	r4, [r2, #24]
 8028916:	42a3      	cmp	r3, r4
 8028918:	db01      	blt.n	802891e <__sfputc_r+0x16>
 802891a:	290a      	cmp	r1, #10
 802891c:	d103      	bne.n	8028926 <__sfputc_r+0x1e>
 802891e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028922:	f000 bb73 	b.w	802900c <__swbuf_r>
 8028926:	6813      	ldr	r3, [r2, #0]
 8028928:	1c58      	adds	r0, r3, #1
 802892a:	6010      	str	r0, [r2, #0]
 802892c:	7019      	strb	r1, [r3, #0]
 802892e:	4608      	mov	r0, r1
 8028930:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028934:	4770      	bx	lr

08028936 <__sfputs_r>:
 8028936:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028938:	4606      	mov	r6, r0
 802893a:	460f      	mov	r7, r1
 802893c:	4614      	mov	r4, r2
 802893e:	18d5      	adds	r5, r2, r3
 8028940:	42ac      	cmp	r4, r5
 8028942:	d101      	bne.n	8028948 <__sfputs_r+0x12>
 8028944:	2000      	movs	r0, #0
 8028946:	e007      	b.n	8028958 <__sfputs_r+0x22>
 8028948:	f814 1b01 	ldrb.w	r1, [r4], #1
 802894c:	463a      	mov	r2, r7
 802894e:	4630      	mov	r0, r6
 8028950:	f7ff ffda 	bl	8028908 <__sfputc_r>
 8028954:	1c43      	adds	r3, r0, #1
 8028956:	d1f3      	bne.n	8028940 <__sfputs_r+0xa>
 8028958:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802895c <_vfiprintf_r>:
 802895c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028960:	460d      	mov	r5, r1
 8028962:	b09d      	sub	sp, #116	; 0x74
 8028964:	4614      	mov	r4, r2
 8028966:	4698      	mov	r8, r3
 8028968:	4606      	mov	r6, r0
 802896a:	b118      	cbz	r0, 8028974 <_vfiprintf_r+0x18>
 802896c:	6a03      	ldr	r3, [r0, #32]
 802896e:	b90b      	cbnz	r3, 8028974 <_vfiprintf_r+0x18>
 8028970:	f7ff fd60 	bl	8028434 <__sinit>
 8028974:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8028976:	07d9      	lsls	r1, r3, #31
 8028978:	d405      	bmi.n	8028986 <_vfiprintf_r+0x2a>
 802897a:	89ab      	ldrh	r3, [r5, #12]
 802897c:	059a      	lsls	r2, r3, #22
 802897e:	d402      	bmi.n	8028986 <_vfiprintf_r+0x2a>
 8028980:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8028982:	f7ff ff06 	bl	8028792 <__retarget_lock_acquire_recursive>
 8028986:	89ab      	ldrh	r3, [r5, #12]
 8028988:	071b      	lsls	r3, r3, #28
 802898a:	d501      	bpl.n	8028990 <_vfiprintf_r+0x34>
 802898c:	692b      	ldr	r3, [r5, #16]
 802898e:	b99b      	cbnz	r3, 80289b8 <_vfiprintf_r+0x5c>
 8028990:	4629      	mov	r1, r5
 8028992:	4630      	mov	r0, r6
 8028994:	f000 fb78 	bl	8029088 <__swsetup_r>
 8028998:	b170      	cbz	r0, 80289b8 <_vfiprintf_r+0x5c>
 802899a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802899c:	07dc      	lsls	r4, r3, #31
 802899e:	d504      	bpl.n	80289aa <_vfiprintf_r+0x4e>
 80289a0:	f04f 30ff 	mov.w	r0, #4294967295
 80289a4:	b01d      	add	sp, #116	; 0x74
 80289a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80289aa:	89ab      	ldrh	r3, [r5, #12]
 80289ac:	0598      	lsls	r0, r3, #22
 80289ae:	d4f7      	bmi.n	80289a0 <_vfiprintf_r+0x44>
 80289b0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80289b2:	f7ff feef 	bl	8028794 <__retarget_lock_release_recursive>
 80289b6:	e7f3      	b.n	80289a0 <_vfiprintf_r+0x44>
 80289b8:	2300      	movs	r3, #0
 80289ba:	9309      	str	r3, [sp, #36]	; 0x24
 80289bc:	2320      	movs	r3, #32
 80289be:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80289c2:	f8cd 800c 	str.w	r8, [sp, #12]
 80289c6:	2330      	movs	r3, #48	; 0x30
 80289c8:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8028b7c <_vfiprintf_r+0x220>
 80289cc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80289d0:	f04f 0901 	mov.w	r9, #1
 80289d4:	4623      	mov	r3, r4
 80289d6:	469a      	mov	sl, r3
 80289d8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80289dc:	b10a      	cbz	r2, 80289e2 <_vfiprintf_r+0x86>
 80289de:	2a25      	cmp	r2, #37	; 0x25
 80289e0:	d1f9      	bne.n	80289d6 <_vfiprintf_r+0x7a>
 80289e2:	ebba 0b04 	subs.w	fp, sl, r4
 80289e6:	d00b      	beq.n	8028a00 <_vfiprintf_r+0xa4>
 80289e8:	465b      	mov	r3, fp
 80289ea:	4622      	mov	r2, r4
 80289ec:	4629      	mov	r1, r5
 80289ee:	4630      	mov	r0, r6
 80289f0:	f7ff ffa1 	bl	8028936 <__sfputs_r>
 80289f4:	3001      	adds	r0, #1
 80289f6:	f000 80a9 	beq.w	8028b4c <_vfiprintf_r+0x1f0>
 80289fa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80289fc:	445a      	add	r2, fp
 80289fe:	9209      	str	r2, [sp, #36]	; 0x24
 8028a00:	f89a 3000 	ldrb.w	r3, [sl]
 8028a04:	2b00      	cmp	r3, #0
 8028a06:	f000 80a1 	beq.w	8028b4c <_vfiprintf_r+0x1f0>
 8028a0a:	2300      	movs	r3, #0
 8028a0c:	f04f 32ff 	mov.w	r2, #4294967295
 8028a10:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8028a14:	f10a 0a01 	add.w	sl, sl, #1
 8028a18:	9304      	str	r3, [sp, #16]
 8028a1a:	9307      	str	r3, [sp, #28]
 8028a1c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8028a20:	931a      	str	r3, [sp, #104]	; 0x68
 8028a22:	4654      	mov	r4, sl
 8028a24:	2205      	movs	r2, #5
 8028a26:	f814 1b01 	ldrb.w	r1, [r4], #1
 8028a2a:	4854      	ldr	r0, [pc, #336]	; (8028b7c <_vfiprintf_r+0x220>)
 8028a2c:	f7d7 fbe0 	bl	80001f0 <memchr>
 8028a30:	9a04      	ldr	r2, [sp, #16]
 8028a32:	b9d8      	cbnz	r0, 8028a6c <_vfiprintf_r+0x110>
 8028a34:	06d1      	lsls	r1, r2, #27
 8028a36:	bf44      	itt	mi
 8028a38:	2320      	movmi	r3, #32
 8028a3a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8028a3e:	0713      	lsls	r3, r2, #28
 8028a40:	bf44      	itt	mi
 8028a42:	232b      	movmi	r3, #43	; 0x2b
 8028a44:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8028a48:	f89a 3000 	ldrb.w	r3, [sl]
 8028a4c:	2b2a      	cmp	r3, #42	; 0x2a
 8028a4e:	d015      	beq.n	8028a7c <_vfiprintf_r+0x120>
 8028a50:	9a07      	ldr	r2, [sp, #28]
 8028a52:	4654      	mov	r4, sl
 8028a54:	2000      	movs	r0, #0
 8028a56:	f04f 0c0a 	mov.w	ip, #10
 8028a5a:	4621      	mov	r1, r4
 8028a5c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8028a60:	3b30      	subs	r3, #48	; 0x30
 8028a62:	2b09      	cmp	r3, #9
 8028a64:	d94d      	bls.n	8028b02 <_vfiprintf_r+0x1a6>
 8028a66:	b1b0      	cbz	r0, 8028a96 <_vfiprintf_r+0x13a>
 8028a68:	9207      	str	r2, [sp, #28]
 8028a6a:	e014      	b.n	8028a96 <_vfiprintf_r+0x13a>
 8028a6c:	eba0 0308 	sub.w	r3, r0, r8
 8028a70:	fa09 f303 	lsl.w	r3, r9, r3
 8028a74:	4313      	orrs	r3, r2
 8028a76:	9304      	str	r3, [sp, #16]
 8028a78:	46a2      	mov	sl, r4
 8028a7a:	e7d2      	b.n	8028a22 <_vfiprintf_r+0xc6>
 8028a7c:	9b03      	ldr	r3, [sp, #12]
 8028a7e:	1d19      	adds	r1, r3, #4
 8028a80:	681b      	ldr	r3, [r3, #0]
 8028a82:	9103      	str	r1, [sp, #12]
 8028a84:	2b00      	cmp	r3, #0
 8028a86:	bfbb      	ittet	lt
 8028a88:	425b      	neglt	r3, r3
 8028a8a:	f042 0202 	orrlt.w	r2, r2, #2
 8028a8e:	9307      	strge	r3, [sp, #28]
 8028a90:	9307      	strlt	r3, [sp, #28]
 8028a92:	bfb8      	it	lt
 8028a94:	9204      	strlt	r2, [sp, #16]
 8028a96:	7823      	ldrb	r3, [r4, #0]
 8028a98:	2b2e      	cmp	r3, #46	; 0x2e
 8028a9a:	d10c      	bne.n	8028ab6 <_vfiprintf_r+0x15a>
 8028a9c:	7863      	ldrb	r3, [r4, #1]
 8028a9e:	2b2a      	cmp	r3, #42	; 0x2a
 8028aa0:	d134      	bne.n	8028b0c <_vfiprintf_r+0x1b0>
 8028aa2:	9b03      	ldr	r3, [sp, #12]
 8028aa4:	1d1a      	adds	r2, r3, #4
 8028aa6:	681b      	ldr	r3, [r3, #0]
 8028aa8:	9203      	str	r2, [sp, #12]
 8028aaa:	2b00      	cmp	r3, #0
 8028aac:	bfb8      	it	lt
 8028aae:	f04f 33ff 	movlt.w	r3, #4294967295
 8028ab2:	3402      	adds	r4, #2
 8028ab4:	9305      	str	r3, [sp, #20]
 8028ab6:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8028b8c <_vfiprintf_r+0x230>
 8028aba:	7821      	ldrb	r1, [r4, #0]
 8028abc:	2203      	movs	r2, #3
 8028abe:	4650      	mov	r0, sl
 8028ac0:	f7d7 fb96 	bl	80001f0 <memchr>
 8028ac4:	b138      	cbz	r0, 8028ad6 <_vfiprintf_r+0x17a>
 8028ac6:	9b04      	ldr	r3, [sp, #16]
 8028ac8:	eba0 000a 	sub.w	r0, r0, sl
 8028acc:	2240      	movs	r2, #64	; 0x40
 8028ace:	4082      	lsls	r2, r0
 8028ad0:	4313      	orrs	r3, r2
 8028ad2:	3401      	adds	r4, #1
 8028ad4:	9304      	str	r3, [sp, #16]
 8028ad6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8028ada:	4829      	ldr	r0, [pc, #164]	; (8028b80 <_vfiprintf_r+0x224>)
 8028adc:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8028ae0:	2206      	movs	r2, #6
 8028ae2:	f7d7 fb85 	bl	80001f0 <memchr>
 8028ae6:	2800      	cmp	r0, #0
 8028ae8:	d03f      	beq.n	8028b6a <_vfiprintf_r+0x20e>
 8028aea:	4b26      	ldr	r3, [pc, #152]	; (8028b84 <_vfiprintf_r+0x228>)
 8028aec:	bb1b      	cbnz	r3, 8028b36 <_vfiprintf_r+0x1da>
 8028aee:	9b03      	ldr	r3, [sp, #12]
 8028af0:	3307      	adds	r3, #7
 8028af2:	f023 0307 	bic.w	r3, r3, #7
 8028af6:	3308      	adds	r3, #8
 8028af8:	9303      	str	r3, [sp, #12]
 8028afa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028afc:	443b      	add	r3, r7
 8028afe:	9309      	str	r3, [sp, #36]	; 0x24
 8028b00:	e768      	b.n	80289d4 <_vfiprintf_r+0x78>
 8028b02:	fb0c 3202 	mla	r2, ip, r2, r3
 8028b06:	460c      	mov	r4, r1
 8028b08:	2001      	movs	r0, #1
 8028b0a:	e7a6      	b.n	8028a5a <_vfiprintf_r+0xfe>
 8028b0c:	2300      	movs	r3, #0
 8028b0e:	3401      	adds	r4, #1
 8028b10:	9305      	str	r3, [sp, #20]
 8028b12:	4619      	mov	r1, r3
 8028b14:	f04f 0c0a 	mov.w	ip, #10
 8028b18:	4620      	mov	r0, r4
 8028b1a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8028b1e:	3a30      	subs	r2, #48	; 0x30
 8028b20:	2a09      	cmp	r2, #9
 8028b22:	d903      	bls.n	8028b2c <_vfiprintf_r+0x1d0>
 8028b24:	2b00      	cmp	r3, #0
 8028b26:	d0c6      	beq.n	8028ab6 <_vfiprintf_r+0x15a>
 8028b28:	9105      	str	r1, [sp, #20]
 8028b2a:	e7c4      	b.n	8028ab6 <_vfiprintf_r+0x15a>
 8028b2c:	fb0c 2101 	mla	r1, ip, r1, r2
 8028b30:	4604      	mov	r4, r0
 8028b32:	2301      	movs	r3, #1
 8028b34:	e7f0      	b.n	8028b18 <_vfiprintf_r+0x1bc>
 8028b36:	ab03      	add	r3, sp, #12
 8028b38:	9300      	str	r3, [sp, #0]
 8028b3a:	462a      	mov	r2, r5
 8028b3c:	4b12      	ldr	r3, [pc, #72]	; (8028b88 <_vfiprintf_r+0x22c>)
 8028b3e:	a904      	add	r1, sp, #16
 8028b40:	4630      	mov	r0, r6
 8028b42:	f3af 8000 	nop.w
 8028b46:	4607      	mov	r7, r0
 8028b48:	1c78      	adds	r0, r7, #1
 8028b4a:	d1d6      	bne.n	8028afa <_vfiprintf_r+0x19e>
 8028b4c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8028b4e:	07d9      	lsls	r1, r3, #31
 8028b50:	d405      	bmi.n	8028b5e <_vfiprintf_r+0x202>
 8028b52:	89ab      	ldrh	r3, [r5, #12]
 8028b54:	059a      	lsls	r2, r3, #22
 8028b56:	d402      	bmi.n	8028b5e <_vfiprintf_r+0x202>
 8028b58:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8028b5a:	f7ff fe1b 	bl	8028794 <__retarget_lock_release_recursive>
 8028b5e:	89ab      	ldrh	r3, [r5, #12]
 8028b60:	065b      	lsls	r3, r3, #25
 8028b62:	f53f af1d 	bmi.w	80289a0 <_vfiprintf_r+0x44>
 8028b66:	9809      	ldr	r0, [sp, #36]	; 0x24
 8028b68:	e71c      	b.n	80289a4 <_vfiprintf_r+0x48>
 8028b6a:	ab03      	add	r3, sp, #12
 8028b6c:	9300      	str	r3, [sp, #0]
 8028b6e:	462a      	mov	r2, r5
 8028b70:	4b05      	ldr	r3, [pc, #20]	; (8028b88 <_vfiprintf_r+0x22c>)
 8028b72:	a904      	add	r1, sp, #16
 8028b74:	4630      	mov	r0, r6
 8028b76:	f000 f879 	bl	8028c6c <_printf_i>
 8028b7a:	e7e4      	b.n	8028b46 <_vfiprintf_r+0x1ea>
 8028b7c:	0802d354 	.word	0x0802d354
 8028b80:	0802d35e 	.word	0x0802d35e
 8028b84:	00000000 	.word	0x00000000
 8028b88:	08028937 	.word	0x08028937
 8028b8c:	0802d35a 	.word	0x0802d35a

08028b90 <_printf_common>:
 8028b90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028b94:	4616      	mov	r6, r2
 8028b96:	4699      	mov	r9, r3
 8028b98:	688a      	ldr	r2, [r1, #8]
 8028b9a:	690b      	ldr	r3, [r1, #16]
 8028b9c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8028ba0:	4293      	cmp	r3, r2
 8028ba2:	bfb8      	it	lt
 8028ba4:	4613      	movlt	r3, r2
 8028ba6:	6033      	str	r3, [r6, #0]
 8028ba8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8028bac:	4607      	mov	r7, r0
 8028bae:	460c      	mov	r4, r1
 8028bb0:	b10a      	cbz	r2, 8028bb6 <_printf_common+0x26>
 8028bb2:	3301      	adds	r3, #1
 8028bb4:	6033      	str	r3, [r6, #0]
 8028bb6:	6823      	ldr	r3, [r4, #0]
 8028bb8:	0699      	lsls	r1, r3, #26
 8028bba:	bf42      	ittt	mi
 8028bbc:	6833      	ldrmi	r3, [r6, #0]
 8028bbe:	3302      	addmi	r3, #2
 8028bc0:	6033      	strmi	r3, [r6, #0]
 8028bc2:	6825      	ldr	r5, [r4, #0]
 8028bc4:	f015 0506 	ands.w	r5, r5, #6
 8028bc8:	d106      	bne.n	8028bd8 <_printf_common+0x48>
 8028bca:	f104 0a19 	add.w	sl, r4, #25
 8028bce:	68e3      	ldr	r3, [r4, #12]
 8028bd0:	6832      	ldr	r2, [r6, #0]
 8028bd2:	1a9b      	subs	r3, r3, r2
 8028bd4:	42ab      	cmp	r3, r5
 8028bd6:	dc26      	bgt.n	8028c26 <_printf_common+0x96>
 8028bd8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8028bdc:	1e13      	subs	r3, r2, #0
 8028bde:	6822      	ldr	r2, [r4, #0]
 8028be0:	bf18      	it	ne
 8028be2:	2301      	movne	r3, #1
 8028be4:	0692      	lsls	r2, r2, #26
 8028be6:	d42b      	bmi.n	8028c40 <_printf_common+0xb0>
 8028be8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8028bec:	4649      	mov	r1, r9
 8028bee:	4638      	mov	r0, r7
 8028bf0:	47c0      	blx	r8
 8028bf2:	3001      	adds	r0, #1
 8028bf4:	d01e      	beq.n	8028c34 <_printf_common+0xa4>
 8028bf6:	6823      	ldr	r3, [r4, #0]
 8028bf8:	6922      	ldr	r2, [r4, #16]
 8028bfa:	f003 0306 	and.w	r3, r3, #6
 8028bfe:	2b04      	cmp	r3, #4
 8028c00:	bf02      	ittt	eq
 8028c02:	68e5      	ldreq	r5, [r4, #12]
 8028c04:	6833      	ldreq	r3, [r6, #0]
 8028c06:	1aed      	subeq	r5, r5, r3
 8028c08:	68a3      	ldr	r3, [r4, #8]
 8028c0a:	bf0c      	ite	eq
 8028c0c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8028c10:	2500      	movne	r5, #0
 8028c12:	4293      	cmp	r3, r2
 8028c14:	bfc4      	itt	gt
 8028c16:	1a9b      	subgt	r3, r3, r2
 8028c18:	18ed      	addgt	r5, r5, r3
 8028c1a:	2600      	movs	r6, #0
 8028c1c:	341a      	adds	r4, #26
 8028c1e:	42b5      	cmp	r5, r6
 8028c20:	d11a      	bne.n	8028c58 <_printf_common+0xc8>
 8028c22:	2000      	movs	r0, #0
 8028c24:	e008      	b.n	8028c38 <_printf_common+0xa8>
 8028c26:	2301      	movs	r3, #1
 8028c28:	4652      	mov	r2, sl
 8028c2a:	4649      	mov	r1, r9
 8028c2c:	4638      	mov	r0, r7
 8028c2e:	47c0      	blx	r8
 8028c30:	3001      	adds	r0, #1
 8028c32:	d103      	bne.n	8028c3c <_printf_common+0xac>
 8028c34:	f04f 30ff 	mov.w	r0, #4294967295
 8028c38:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028c3c:	3501      	adds	r5, #1
 8028c3e:	e7c6      	b.n	8028bce <_printf_common+0x3e>
 8028c40:	18e1      	adds	r1, r4, r3
 8028c42:	1c5a      	adds	r2, r3, #1
 8028c44:	2030      	movs	r0, #48	; 0x30
 8028c46:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8028c4a:	4422      	add	r2, r4
 8028c4c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8028c50:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8028c54:	3302      	adds	r3, #2
 8028c56:	e7c7      	b.n	8028be8 <_printf_common+0x58>
 8028c58:	2301      	movs	r3, #1
 8028c5a:	4622      	mov	r2, r4
 8028c5c:	4649      	mov	r1, r9
 8028c5e:	4638      	mov	r0, r7
 8028c60:	47c0      	blx	r8
 8028c62:	3001      	adds	r0, #1
 8028c64:	d0e6      	beq.n	8028c34 <_printf_common+0xa4>
 8028c66:	3601      	adds	r6, #1
 8028c68:	e7d9      	b.n	8028c1e <_printf_common+0x8e>
	...

08028c6c <_printf_i>:
 8028c6c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8028c70:	7e0f      	ldrb	r7, [r1, #24]
 8028c72:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8028c74:	2f78      	cmp	r7, #120	; 0x78
 8028c76:	4691      	mov	r9, r2
 8028c78:	4680      	mov	r8, r0
 8028c7a:	460c      	mov	r4, r1
 8028c7c:	469a      	mov	sl, r3
 8028c7e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8028c82:	d807      	bhi.n	8028c94 <_printf_i+0x28>
 8028c84:	2f62      	cmp	r7, #98	; 0x62
 8028c86:	d80a      	bhi.n	8028c9e <_printf_i+0x32>
 8028c88:	2f00      	cmp	r7, #0
 8028c8a:	f000 80d4 	beq.w	8028e36 <_printf_i+0x1ca>
 8028c8e:	2f58      	cmp	r7, #88	; 0x58
 8028c90:	f000 80c0 	beq.w	8028e14 <_printf_i+0x1a8>
 8028c94:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8028c98:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8028c9c:	e03a      	b.n	8028d14 <_printf_i+0xa8>
 8028c9e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8028ca2:	2b15      	cmp	r3, #21
 8028ca4:	d8f6      	bhi.n	8028c94 <_printf_i+0x28>
 8028ca6:	a101      	add	r1, pc, #4	; (adr r1, 8028cac <_printf_i+0x40>)
 8028ca8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8028cac:	08028d05 	.word	0x08028d05
 8028cb0:	08028d19 	.word	0x08028d19
 8028cb4:	08028c95 	.word	0x08028c95
 8028cb8:	08028c95 	.word	0x08028c95
 8028cbc:	08028c95 	.word	0x08028c95
 8028cc0:	08028c95 	.word	0x08028c95
 8028cc4:	08028d19 	.word	0x08028d19
 8028cc8:	08028c95 	.word	0x08028c95
 8028ccc:	08028c95 	.word	0x08028c95
 8028cd0:	08028c95 	.word	0x08028c95
 8028cd4:	08028c95 	.word	0x08028c95
 8028cd8:	08028e1d 	.word	0x08028e1d
 8028cdc:	08028d45 	.word	0x08028d45
 8028ce0:	08028dd7 	.word	0x08028dd7
 8028ce4:	08028c95 	.word	0x08028c95
 8028ce8:	08028c95 	.word	0x08028c95
 8028cec:	08028e3f 	.word	0x08028e3f
 8028cf0:	08028c95 	.word	0x08028c95
 8028cf4:	08028d45 	.word	0x08028d45
 8028cf8:	08028c95 	.word	0x08028c95
 8028cfc:	08028c95 	.word	0x08028c95
 8028d00:	08028ddf 	.word	0x08028ddf
 8028d04:	682b      	ldr	r3, [r5, #0]
 8028d06:	1d1a      	adds	r2, r3, #4
 8028d08:	681b      	ldr	r3, [r3, #0]
 8028d0a:	602a      	str	r2, [r5, #0]
 8028d0c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8028d10:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8028d14:	2301      	movs	r3, #1
 8028d16:	e09f      	b.n	8028e58 <_printf_i+0x1ec>
 8028d18:	6820      	ldr	r0, [r4, #0]
 8028d1a:	682b      	ldr	r3, [r5, #0]
 8028d1c:	0607      	lsls	r7, r0, #24
 8028d1e:	f103 0104 	add.w	r1, r3, #4
 8028d22:	6029      	str	r1, [r5, #0]
 8028d24:	d501      	bpl.n	8028d2a <_printf_i+0xbe>
 8028d26:	681e      	ldr	r6, [r3, #0]
 8028d28:	e003      	b.n	8028d32 <_printf_i+0xc6>
 8028d2a:	0646      	lsls	r6, r0, #25
 8028d2c:	d5fb      	bpl.n	8028d26 <_printf_i+0xba>
 8028d2e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8028d32:	2e00      	cmp	r6, #0
 8028d34:	da03      	bge.n	8028d3e <_printf_i+0xd2>
 8028d36:	232d      	movs	r3, #45	; 0x2d
 8028d38:	4276      	negs	r6, r6
 8028d3a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8028d3e:	485a      	ldr	r0, [pc, #360]	; (8028ea8 <_printf_i+0x23c>)
 8028d40:	230a      	movs	r3, #10
 8028d42:	e012      	b.n	8028d6a <_printf_i+0xfe>
 8028d44:	682b      	ldr	r3, [r5, #0]
 8028d46:	6820      	ldr	r0, [r4, #0]
 8028d48:	1d19      	adds	r1, r3, #4
 8028d4a:	6029      	str	r1, [r5, #0]
 8028d4c:	0605      	lsls	r5, r0, #24
 8028d4e:	d501      	bpl.n	8028d54 <_printf_i+0xe8>
 8028d50:	681e      	ldr	r6, [r3, #0]
 8028d52:	e002      	b.n	8028d5a <_printf_i+0xee>
 8028d54:	0641      	lsls	r1, r0, #25
 8028d56:	d5fb      	bpl.n	8028d50 <_printf_i+0xe4>
 8028d58:	881e      	ldrh	r6, [r3, #0]
 8028d5a:	4853      	ldr	r0, [pc, #332]	; (8028ea8 <_printf_i+0x23c>)
 8028d5c:	2f6f      	cmp	r7, #111	; 0x6f
 8028d5e:	bf0c      	ite	eq
 8028d60:	2308      	moveq	r3, #8
 8028d62:	230a      	movne	r3, #10
 8028d64:	2100      	movs	r1, #0
 8028d66:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8028d6a:	6865      	ldr	r5, [r4, #4]
 8028d6c:	60a5      	str	r5, [r4, #8]
 8028d6e:	2d00      	cmp	r5, #0
 8028d70:	bfa2      	ittt	ge
 8028d72:	6821      	ldrge	r1, [r4, #0]
 8028d74:	f021 0104 	bicge.w	r1, r1, #4
 8028d78:	6021      	strge	r1, [r4, #0]
 8028d7a:	b90e      	cbnz	r6, 8028d80 <_printf_i+0x114>
 8028d7c:	2d00      	cmp	r5, #0
 8028d7e:	d04b      	beq.n	8028e18 <_printf_i+0x1ac>
 8028d80:	4615      	mov	r5, r2
 8028d82:	fbb6 f1f3 	udiv	r1, r6, r3
 8028d86:	fb03 6711 	mls	r7, r3, r1, r6
 8028d8a:	5dc7      	ldrb	r7, [r0, r7]
 8028d8c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8028d90:	4637      	mov	r7, r6
 8028d92:	42bb      	cmp	r3, r7
 8028d94:	460e      	mov	r6, r1
 8028d96:	d9f4      	bls.n	8028d82 <_printf_i+0x116>
 8028d98:	2b08      	cmp	r3, #8
 8028d9a:	d10b      	bne.n	8028db4 <_printf_i+0x148>
 8028d9c:	6823      	ldr	r3, [r4, #0]
 8028d9e:	07de      	lsls	r6, r3, #31
 8028da0:	d508      	bpl.n	8028db4 <_printf_i+0x148>
 8028da2:	6923      	ldr	r3, [r4, #16]
 8028da4:	6861      	ldr	r1, [r4, #4]
 8028da6:	4299      	cmp	r1, r3
 8028da8:	bfde      	ittt	le
 8028daa:	2330      	movle	r3, #48	; 0x30
 8028dac:	f805 3c01 	strble.w	r3, [r5, #-1]
 8028db0:	f105 35ff 	addle.w	r5, r5, #4294967295
 8028db4:	1b52      	subs	r2, r2, r5
 8028db6:	6122      	str	r2, [r4, #16]
 8028db8:	f8cd a000 	str.w	sl, [sp]
 8028dbc:	464b      	mov	r3, r9
 8028dbe:	aa03      	add	r2, sp, #12
 8028dc0:	4621      	mov	r1, r4
 8028dc2:	4640      	mov	r0, r8
 8028dc4:	f7ff fee4 	bl	8028b90 <_printf_common>
 8028dc8:	3001      	adds	r0, #1
 8028dca:	d14a      	bne.n	8028e62 <_printf_i+0x1f6>
 8028dcc:	f04f 30ff 	mov.w	r0, #4294967295
 8028dd0:	b004      	add	sp, #16
 8028dd2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028dd6:	6823      	ldr	r3, [r4, #0]
 8028dd8:	f043 0320 	orr.w	r3, r3, #32
 8028ddc:	6023      	str	r3, [r4, #0]
 8028dde:	4833      	ldr	r0, [pc, #204]	; (8028eac <_printf_i+0x240>)
 8028de0:	2778      	movs	r7, #120	; 0x78
 8028de2:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8028de6:	6823      	ldr	r3, [r4, #0]
 8028de8:	6829      	ldr	r1, [r5, #0]
 8028dea:	061f      	lsls	r7, r3, #24
 8028dec:	f851 6b04 	ldr.w	r6, [r1], #4
 8028df0:	d402      	bmi.n	8028df8 <_printf_i+0x18c>
 8028df2:	065f      	lsls	r7, r3, #25
 8028df4:	bf48      	it	mi
 8028df6:	b2b6      	uxthmi	r6, r6
 8028df8:	07df      	lsls	r7, r3, #31
 8028dfa:	bf48      	it	mi
 8028dfc:	f043 0320 	orrmi.w	r3, r3, #32
 8028e00:	6029      	str	r1, [r5, #0]
 8028e02:	bf48      	it	mi
 8028e04:	6023      	strmi	r3, [r4, #0]
 8028e06:	b91e      	cbnz	r6, 8028e10 <_printf_i+0x1a4>
 8028e08:	6823      	ldr	r3, [r4, #0]
 8028e0a:	f023 0320 	bic.w	r3, r3, #32
 8028e0e:	6023      	str	r3, [r4, #0]
 8028e10:	2310      	movs	r3, #16
 8028e12:	e7a7      	b.n	8028d64 <_printf_i+0xf8>
 8028e14:	4824      	ldr	r0, [pc, #144]	; (8028ea8 <_printf_i+0x23c>)
 8028e16:	e7e4      	b.n	8028de2 <_printf_i+0x176>
 8028e18:	4615      	mov	r5, r2
 8028e1a:	e7bd      	b.n	8028d98 <_printf_i+0x12c>
 8028e1c:	682b      	ldr	r3, [r5, #0]
 8028e1e:	6826      	ldr	r6, [r4, #0]
 8028e20:	6961      	ldr	r1, [r4, #20]
 8028e22:	1d18      	adds	r0, r3, #4
 8028e24:	6028      	str	r0, [r5, #0]
 8028e26:	0635      	lsls	r5, r6, #24
 8028e28:	681b      	ldr	r3, [r3, #0]
 8028e2a:	d501      	bpl.n	8028e30 <_printf_i+0x1c4>
 8028e2c:	6019      	str	r1, [r3, #0]
 8028e2e:	e002      	b.n	8028e36 <_printf_i+0x1ca>
 8028e30:	0670      	lsls	r0, r6, #25
 8028e32:	d5fb      	bpl.n	8028e2c <_printf_i+0x1c0>
 8028e34:	8019      	strh	r1, [r3, #0]
 8028e36:	2300      	movs	r3, #0
 8028e38:	6123      	str	r3, [r4, #16]
 8028e3a:	4615      	mov	r5, r2
 8028e3c:	e7bc      	b.n	8028db8 <_printf_i+0x14c>
 8028e3e:	682b      	ldr	r3, [r5, #0]
 8028e40:	1d1a      	adds	r2, r3, #4
 8028e42:	602a      	str	r2, [r5, #0]
 8028e44:	681d      	ldr	r5, [r3, #0]
 8028e46:	6862      	ldr	r2, [r4, #4]
 8028e48:	2100      	movs	r1, #0
 8028e4a:	4628      	mov	r0, r5
 8028e4c:	f7d7 f9d0 	bl	80001f0 <memchr>
 8028e50:	b108      	cbz	r0, 8028e56 <_printf_i+0x1ea>
 8028e52:	1b40      	subs	r0, r0, r5
 8028e54:	6060      	str	r0, [r4, #4]
 8028e56:	6863      	ldr	r3, [r4, #4]
 8028e58:	6123      	str	r3, [r4, #16]
 8028e5a:	2300      	movs	r3, #0
 8028e5c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8028e60:	e7aa      	b.n	8028db8 <_printf_i+0x14c>
 8028e62:	6923      	ldr	r3, [r4, #16]
 8028e64:	462a      	mov	r2, r5
 8028e66:	4649      	mov	r1, r9
 8028e68:	4640      	mov	r0, r8
 8028e6a:	47d0      	blx	sl
 8028e6c:	3001      	adds	r0, #1
 8028e6e:	d0ad      	beq.n	8028dcc <_printf_i+0x160>
 8028e70:	6823      	ldr	r3, [r4, #0]
 8028e72:	079b      	lsls	r3, r3, #30
 8028e74:	d413      	bmi.n	8028e9e <_printf_i+0x232>
 8028e76:	68e0      	ldr	r0, [r4, #12]
 8028e78:	9b03      	ldr	r3, [sp, #12]
 8028e7a:	4298      	cmp	r0, r3
 8028e7c:	bfb8      	it	lt
 8028e7e:	4618      	movlt	r0, r3
 8028e80:	e7a6      	b.n	8028dd0 <_printf_i+0x164>
 8028e82:	2301      	movs	r3, #1
 8028e84:	4632      	mov	r2, r6
 8028e86:	4649      	mov	r1, r9
 8028e88:	4640      	mov	r0, r8
 8028e8a:	47d0      	blx	sl
 8028e8c:	3001      	adds	r0, #1
 8028e8e:	d09d      	beq.n	8028dcc <_printf_i+0x160>
 8028e90:	3501      	adds	r5, #1
 8028e92:	68e3      	ldr	r3, [r4, #12]
 8028e94:	9903      	ldr	r1, [sp, #12]
 8028e96:	1a5b      	subs	r3, r3, r1
 8028e98:	42ab      	cmp	r3, r5
 8028e9a:	dcf2      	bgt.n	8028e82 <_printf_i+0x216>
 8028e9c:	e7eb      	b.n	8028e76 <_printf_i+0x20a>
 8028e9e:	2500      	movs	r5, #0
 8028ea0:	f104 0619 	add.w	r6, r4, #25
 8028ea4:	e7f5      	b.n	8028e92 <_printf_i+0x226>
 8028ea6:	bf00      	nop
 8028ea8:	0802d365 	.word	0x0802d365
 8028eac:	0802d376 	.word	0x0802d376

08028eb0 <__sflush_r>:
 8028eb0:	898a      	ldrh	r2, [r1, #12]
 8028eb2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028eb6:	4605      	mov	r5, r0
 8028eb8:	0710      	lsls	r0, r2, #28
 8028eba:	460c      	mov	r4, r1
 8028ebc:	d458      	bmi.n	8028f70 <__sflush_r+0xc0>
 8028ebe:	684b      	ldr	r3, [r1, #4]
 8028ec0:	2b00      	cmp	r3, #0
 8028ec2:	dc05      	bgt.n	8028ed0 <__sflush_r+0x20>
 8028ec4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8028ec6:	2b00      	cmp	r3, #0
 8028ec8:	dc02      	bgt.n	8028ed0 <__sflush_r+0x20>
 8028eca:	2000      	movs	r0, #0
 8028ecc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028ed0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8028ed2:	2e00      	cmp	r6, #0
 8028ed4:	d0f9      	beq.n	8028eca <__sflush_r+0x1a>
 8028ed6:	2300      	movs	r3, #0
 8028ed8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8028edc:	682f      	ldr	r7, [r5, #0]
 8028ede:	6a21      	ldr	r1, [r4, #32]
 8028ee0:	602b      	str	r3, [r5, #0]
 8028ee2:	d032      	beq.n	8028f4a <__sflush_r+0x9a>
 8028ee4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8028ee6:	89a3      	ldrh	r3, [r4, #12]
 8028ee8:	075a      	lsls	r2, r3, #29
 8028eea:	d505      	bpl.n	8028ef8 <__sflush_r+0x48>
 8028eec:	6863      	ldr	r3, [r4, #4]
 8028eee:	1ac0      	subs	r0, r0, r3
 8028ef0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8028ef2:	b10b      	cbz	r3, 8028ef8 <__sflush_r+0x48>
 8028ef4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8028ef6:	1ac0      	subs	r0, r0, r3
 8028ef8:	2300      	movs	r3, #0
 8028efa:	4602      	mov	r2, r0
 8028efc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8028efe:	6a21      	ldr	r1, [r4, #32]
 8028f00:	4628      	mov	r0, r5
 8028f02:	47b0      	blx	r6
 8028f04:	1c43      	adds	r3, r0, #1
 8028f06:	89a3      	ldrh	r3, [r4, #12]
 8028f08:	d106      	bne.n	8028f18 <__sflush_r+0x68>
 8028f0a:	6829      	ldr	r1, [r5, #0]
 8028f0c:	291d      	cmp	r1, #29
 8028f0e:	d82b      	bhi.n	8028f68 <__sflush_r+0xb8>
 8028f10:	4a29      	ldr	r2, [pc, #164]	; (8028fb8 <__sflush_r+0x108>)
 8028f12:	410a      	asrs	r2, r1
 8028f14:	07d6      	lsls	r6, r2, #31
 8028f16:	d427      	bmi.n	8028f68 <__sflush_r+0xb8>
 8028f18:	2200      	movs	r2, #0
 8028f1a:	6062      	str	r2, [r4, #4]
 8028f1c:	04d9      	lsls	r1, r3, #19
 8028f1e:	6922      	ldr	r2, [r4, #16]
 8028f20:	6022      	str	r2, [r4, #0]
 8028f22:	d504      	bpl.n	8028f2e <__sflush_r+0x7e>
 8028f24:	1c42      	adds	r2, r0, #1
 8028f26:	d101      	bne.n	8028f2c <__sflush_r+0x7c>
 8028f28:	682b      	ldr	r3, [r5, #0]
 8028f2a:	b903      	cbnz	r3, 8028f2e <__sflush_r+0x7e>
 8028f2c:	6560      	str	r0, [r4, #84]	; 0x54
 8028f2e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8028f30:	602f      	str	r7, [r5, #0]
 8028f32:	2900      	cmp	r1, #0
 8028f34:	d0c9      	beq.n	8028eca <__sflush_r+0x1a>
 8028f36:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8028f3a:	4299      	cmp	r1, r3
 8028f3c:	d002      	beq.n	8028f44 <__sflush_r+0x94>
 8028f3e:	4628      	mov	r0, r5
 8028f40:	f7ff fc96 	bl	8028870 <_free_r>
 8028f44:	2000      	movs	r0, #0
 8028f46:	6360      	str	r0, [r4, #52]	; 0x34
 8028f48:	e7c0      	b.n	8028ecc <__sflush_r+0x1c>
 8028f4a:	2301      	movs	r3, #1
 8028f4c:	4628      	mov	r0, r5
 8028f4e:	47b0      	blx	r6
 8028f50:	1c41      	adds	r1, r0, #1
 8028f52:	d1c8      	bne.n	8028ee6 <__sflush_r+0x36>
 8028f54:	682b      	ldr	r3, [r5, #0]
 8028f56:	2b00      	cmp	r3, #0
 8028f58:	d0c5      	beq.n	8028ee6 <__sflush_r+0x36>
 8028f5a:	2b1d      	cmp	r3, #29
 8028f5c:	d001      	beq.n	8028f62 <__sflush_r+0xb2>
 8028f5e:	2b16      	cmp	r3, #22
 8028f60:	d101      	bne.n	8028f66 <__sflush_r+0xb6>
 8028f62:	602f      	str	r7, [r5, #0]
 8028f64:	e7b1      	b.n	8028eca <__sflush_r+0x1a>
 8028f66:	89a3      	ldrh	r3, [r4, #12]
 8028f68:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8028f6c:	81a3      	strh	r3, [r4, #12]
 8028f6e:	e7ad      	b.n	8028ecc <__sflush_r+0x1c>
 8028f70:	690f      	ldr	r7, [r1, #16]
 8028f72:	2f00      	cmp	r7, #0
 8028f74:	d0a9      	beq.n	8028eca <__sflush_r+0x1a>
 8028f76:	0793      	lsls	r3, r2, #30
 8028f78:	680e      	ldr	r6, [r1, #0]
 8028f7a:	bf08      	it	eq
 8028f7c:	694b      	ldreq	r3, [r1, #20]
 8028f7e:	600f      	str	r7, [r1, #0]
 8028f80:	bf18      	it	ne
 8028f82:	2300      	movne	r3, #0
 8028f84:	eba6 0807 	sub.w	r8, r6, r7
 8028f88:	608b      	str	r3, [r1, #8]
 8028f8a:	f1b8 0f00 	cmp.w	r8, #0
 8028f8e:	dd9c      	ble.n	8028eca <__sflush_r+0x1a>
 8028f90:	6a21      	ldr	r1, [r4, #32]
 8028f92:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8028f94:	4643      	mov	r3, r8
 8028f96:	463a      	mov	r2, r7
 8028f98:	4628      	mov	r0, r5
 8028f9a:	47b0      	blx	r6
 8028f9c:	2800      	cmp	r0, #0
 8028f9e:	dc06      	bgt.n	8028fae <__sflush_r+0xfe>
 8028fa0:	89a3      	ldrh	r3, [r4, #12]
 8028fa2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8028fa6:	81a3      	strh	r3, [r4, #12]
 8028fa8:	f04f 30ff 	mov.w	r0, #4294967295
 8028fac:	e78e      	b.n	8028ecc <__sflush_r+0x1c>
 8028fae:	4407      	add	r7, r0
 8028fb0:	eba8 0800 	sub.w	r8, r8, r0
 8028fb4:	e7e9      	b.n	8028f8a <__sflush_r+0xda>
 8028fb6:	bf00      	nop
 8028fb8:	dfbffffe 	.word	0xdfbffffe

08028fbc <_fflush_r>:
 8028fbc:	b538      	push	{r3, r4, r5, lr}
 8028fbe:	690b      	ldr	r3, [r1, #16]
 8028fc0:	4605      	mov	r5, r0
 8028fc2:	460c      	mov	r4, r1
 8028fc4:	b913      	cbnz	r3, 8028fcc <_fflush_r+0x10>
 8028fc6:	2500      	movs	r5, #0
 8028fc8:	4628      	mov	r0, r5
 8028fca:	bd38      	pop	{r3, r4, r5, pc}
 8028fcc:	b118      	cbz	r0, 8028fd6 <_fflush_r+0x1a>
 8028fce:	6a03      	ldr	r3, [r0, #32]
 8028fd0:	b90b      	cbnz	r3, 8028fd6 <_fflush_r+0x1a>
 8028fd2:	f7ff fa2f 	bl	8028434 <__sinit>
 8028fd6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8028fda:	2b00      	cmp	r3, #0
 8028fdc:	d0f3      	beq.n	8028fc6 <_fflush_r+0xa>
 8028fde:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8028fe0:	07d0      	lsls	r0, r2, #31
 8028fe2:	d404      	bmi.n	8028fee <_fflush_r+0x32>
 8028fe4:	0599      	lsls	r1, r3, #22
 8028fe6:	d402      	bmi.n	8028fee <_fflush_r+0x32>
 8028fe8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8028fea:	f7ff fbd2 	bl	8028792 <__retarget_lock_acquire_recursive>
 8028fee:	4628      	mov	r0, r5
 8028ff0:	4621      	mov	r1, r4
 8028ff2:	f7ff ff5d 	bl	8028eb0 <__sflush_r>
 8028ff6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8028ff8:	07da      	lsls	r2, r3, #31
 8028ffa:	4605      	mov	r5, r0
 8028ffc:	d4e4      	bmi.n	8028fc8 <_fflush_r+0xc>
 8028ffe:	89a3      	ldrh	r3, [r4, #12]
 8029000:	059b      	lsls	r3, r3, #22
 8029002:	d4e1      	bmi.n	8028fc8 <_fflush_r+0xc>
 8029004:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8029006:	f7ff fbc5 	bl	8028794 <__retarget_lock_release_recursive>
 802900a:	e7dd      	b.n	8028fc8 <_fflush_r+0xc>

0802900c <__swbuf_r>:
 802900c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802900e:	460e      	mov	r6, r1
 8029010:	4614      	mov	r4, r2
 8029012:	4605      	mov	r5, r0
 8029014:	b118      	cbz	r0, 802901e <__swbuf_r+0x12>
 8029016:	6a03      	ldr	r3, [r0, #32]
 8029018:	b90b      	cbnz	r3, 802901e <__swbuf_r+0x12>
 802901a:	f7ff fa0b 	bl	8028434 <__sinit>
 802901e:	69a3      	ldr	r3, [r4, #24]
 8029020:	60a3      	str	r3, [r4, #8]
 8029022:	89a3      	ldrh	r3, [r4, #12]
 8029024:	071a      	lsls	r2, r3, #28
 8029026:	d525      	bpl.n	8029074 <__swbuf_r+0x68>
 8029028:	6923      	ldr	r3, [r4, #16]
 802902a:	b31b      	cbz	r3, 8029074 <__swbuf_r+0x68>
 802902c:	6823      	ldr	r3, [r4, #0]
 802902e:	6922      	ldr	r2, [r4, #16]
 8029030:	1a98      	subs	r0, r3, r2
 8029032:	6963      	ldr	r3, [r4, #20]
 8029034:	b2f6      	uxtb	r6, r6
 8029036:	4283      	cmp	r3, r0
 8029038:	4637      	mov	r7, r6
 802903a:	dc04      	bgt.n	8029046 <__swbuf_r+0x3a>
 802903c:	4621      	mov	r1, r4
 802903e:	4628      	mov	r0, r5
 8029040:	f7ff ffbc 	bl	8028fbc <_fflush_r>
 8029044:	b9e0      	cbnz	r0, 8029080 <__swbuf_r+0x74>
 8029046:	68a3      	ldr	r3, [r4, #8]
 8029048:	3b01      	subs	r3, #1
 802904a:	60a3      	str	r3, [r4, #8]
 802904c:	6823      	ldr	r3, [r4, #0]
 802904e:	1c5a      	adds	r2, r3, #1
 8029050:	6022      	str	r2, [r4, #0]
 8029052:	701e      	strb	r6, [r3, #0]
 8029054:	6962      	ldr	r2, [r4, #20]
 8029056:	1c43      	adds	r3, r0, #1
 8029058:	429a      	cmp	r2, r3
 802905a:	d004      	beq.n	8029066 <__swbuf_r+0x5a>
 802905c:	89a3      	ldrh	r3, [r4, #12]
 802905e:	07db      	lsls	r3, r3, #31
 8029060:	d506      	bpl.n	8029070 <__swbuf_r+0x64>
 8029062:	2e0a      	cmp	r6, #10
 8029064:	d104      	bne.n	8029070 <__swbuf_r+0x64>
 8029066:	4621      	mov	r1, r4
 8029068:	4628      	mov	r0, r5
 802906a:	f7ff ffa7 	bl	8028fbc <_fflush_r>
 802906e:	b938      	cbnz	r0, 8029080 <__swbuf_r+0x74>
 8029070:	4638      	mov	r0, r7
 8029072:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8029074:	4621      	mov	r1, r4
 8029076:	4628      	mov	r0, r5
 8029078:	f000 f806 	bl	8029088 <__swsetup_r>
 802907c:	2800      	cmp	r0, #0
 802907e:	d0d5      	beq.n	802902c <__swbuf_r+0x20>
 8029080:	f04f 37ff 	mov.w	r7, #4294967295
 8029084:	e7f4      	b.n	8029070 <__swbuf_r+0x64>
	...

08029088 <__swsetup_r>:
 8029088:	b538      	push	{r3, r4, r5, lr}
 802908a:	4b2a      	ldr	r3, [pc, #168]	; (8029134 <__swsetup_r+0xac>)
 802908c:	4605      	mov	r5, r0
 802908e:	6818      	ldr	r0, [r3, #0]
 8029090:	460c      	mov	r4, r1
 8029092:	b118      	cbz	r0, 802909c <__swsetup_r+0x14>
 8029094:	6a03      	ldr	r3, [r0, #32]
 8029096:	b90b      	cbnz	r3, 802909c <__swsetup_r+0x14>
 8029098:	f7ff f9cc 	bl	8028434 <__sinit>
 802909c:	89a3      	ldrh	r3, [r4, #12]
 802909e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80290a2:	0718      	lsls	r0, r3, #28
 80290a4:	d422      	bmi.n	80290ec <__swsetup_r+0x64>
 80290a6:	06d9      	lsls	r1, r3, #27
 80290a8:	d407      	bmi.n	80290ba <__swsetup_r+0x32>
 80290aa:	2309      	movs	r3, #9
 80290ac:	602b      	str	r3, [r5, #0]
 80290ae:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80290b2:	81a3      	strh	r3, [r4, #12]
 80290b4:	f04f 30ff 	mov.w	r0, #4294967295
 80290b8:	e034      	b.n	8029124 <__swsetup_r+0x9c>
 80290ba:	0758      	lsls	r0, r3, #29
 80290bc:	d512      	bpl.n	80290e4 <__swsetup_r+0x5c>
 80290be:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80290c0:	b141      	cbz	r1, 80290d4 <__swsetup_r+0x4c>
 80290c2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80290c6:	4299      	cmp	r1, r3
 80290c8:	d002      	beq.n	80290d0 <__swsetup_r+0x48>
 80290ca:	4628      	mov	r0, r5
 80290cc:	f7ff fbd0 	bl	8028870 <_free_r>
 80290d0:	2300      	movs	r3, #0
 80290d2:	6363      	str	r3, [r4, #52]	; 0x34
 80290d4:	89a3      	ldrh	r3, [r4, #12]
 80290d6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80290da:	81a3      	strh	r3, [r4, #12]
 80290dc:	2300      	movs	r3, #0
 80290de:	6063      	str	r3, [r4, #4]
 80290e0:	6923      	ldr	r3, [r4, #16]
 80290e2:	6023      	str	r3, [r4, #0]
 80290e4:	89a3      	ldrh	r3, [r4, #12]
 80290e6:	f043 0308 	orr.w	r3, r3, #8
 80290ea:	81a3      	strh	r3, [r4, #12]
 80290ec:	6923      	ldr	r3, [r4, #16]
 80290ee:	b94b      	cbnz	r3, 8029104 <__swsetup_r+0x7c>
 80290f0:	89a3      	ldrh	r3, [r4, #12]
 80290f2:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80290f6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80290fa:	d003      	beq.n	8029104 <__swsetup_r+0x7c>
 80290fc:	4621      	mov	r1, r4
 80290fe:	4628      	mov	r0, r5
 8029100:	f000 f840 	bl	8029184 <__smakebuf_r>
 8029104:	89a0      	ldrh	r0, [r4, #12]
 8029106:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802910a:	f010 0301 	ands.w	r3, r0, #1
 802910e:	d00a      	beq.n	8029126 <__swsetup_r+0x9e>
 8029110:	2300      	movs	r3, #0
 8029112:	60a3      	str	r3, [r4, #8]
 8029114:	6963      	ldr	r3, [r4, #20]
 8029116:	425b      	negs	r3, r3
 8029118:	61a3      	str	r3, [r4, #24]
 802911a:	6923      	ldr	r3, [r4, #16]
 802911c:	b943      	cbnz	r3, 8029130 <__swsetup_r+0xa8>
 802911e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8029122:	d1c4      	bne.n	80290ae <__swsetup_r+0x26>
 8029124:	bd38      	pop	{r3, r4, r5, pc}
 8029126:	0781      	lsls	r1, r0, #30
 8029128:	bf58      	it	pl
 802912a:	6963      	ldrpl	r3, [r4, #20]
 802912c:	60a3      	str	r3, [r4, #8]
 802912e:	e7f4      	b.n	802911a <__swsetup_r+0x92>
 8029130:	2000      	movs	r0, #0
 8029132:	e7f7      	b.n	8029124 <__swsetup_r+0x9c>
 8029134:	20000160 	.word	0x20000160

08029138 <__swhatbuf_r>:
 8029138:	b570      	push	{r4, r5, r6, lr}
 802913a:	460c      	mov	r4, r1
 802913c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8029140:	2900      	cmp	r1, #0
 8029142:	b096      	sub	sp, #88	; 0x58
 8029144:	4615      	mov	r5, r2
 8029146:	461e      	mov	r6, r3
 8029148:	da0d      	bge.n	8029166 <__swhatbuf_r+0x2e>
 802914a:	89a3      	ldrh	r3, [r4, #12]
 802914c:	f013 0f80 	tst.w	r3, #128	; 0x80
 8029150:	f04f 0100 	mov.w	r1, #0
 8029154:	bf0c      	ite	eq
 8029156:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802915a:	2340      	movne	r3, #64	; 0x40
 802915c:	2000      	movs	r0, #0
 802915e:	6031      	str	r1, [r6, #0]
 8029160:	602b      	str	r3, [r5, #0]
 8029162:	b016      	add	sp, #88	; 0x58
 8029164:	bd70      	pop	{r4, r5, r6, pc}
 8029166:	466a      	mov	r2, sp
 8029168:	f000 f848 	bl	80291fc <_fstat_r>
 802916c:	2800      	cmp	r0, #0
 802916e:	dbec      	blt.n	802914a <__swhatbuf_r+0x12>
 8029170:	9901      	ldr	r1, [sp, #4]
 8029172:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8029176:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802917a:	4259      	negs	r1, r3
 802917c:	4159      	adcs	r1, r3
 802917e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8029182:	e7eb      	b.n	802915c <__swhatbuf_r+0x24>

08029184 <__smakebuf_r>:
 8029184:	898b      	ldrh	r3, [r1, #12]
 8029186:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8029188:	079d      	lsls	r5, r3, #30
 802918a:	4606      	mov	r6, r0
 802918c:	460c      	mov	r4, r1
 802918e:	d507      	bpl.n	80291a0 <__smakebuf_r+0x1c>
 8029190:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8029194:	6023      	str	r3, [r4, #0]
 8029196:	6123      	str	r3, [r4, #16]
 8029198:	2301      	movs	r3, #1
 802919a:	6163      	str	r3, [r4, #20]
 802919c:	b002      	add	sp, #8
 802919e:	bd70      	pop	{r4, r5, r6, pc}
 80291a0:	ab01      	add	r3, sp, #4
 80291a2:	466a      	mov	r2, sp
 80291a4:	f7ff ffc8 	bl	8029138 <__swhatbuf_r>
 80291a8:	9900      	ldr	r1, [sp, #0]
 80291aa:	4605      	mov	r5, r0
 80291ac:	4630      	mov	r0, r6
 80291ae:	f7ff f81b 	bl	80281e8 <_malloc_r>
 80291b2:	b948      	cbnz	r0, 80291c8 <__smakebuf_r+0x44>
 80291b4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80291b8:	059a      	lsls	r2, r3, #22
 80291ba:	d4ef      	bmi.n	802919c <__smakebuf_r+0x18>
 80291bc:	f023 0303 	bic.w	r3, r3, #3
 80291c0:	f043 0302 	orr.w	r3, r3, #2
 80291c4:	81a3      	strh	r3, [r4, #12]
 80291c6:	e7e3      	b.n	8029190 <__smakebuf_r+0xc>
 80291c8:	89a3      	ldrh	r3, [r4, #12]
 80291ca:	6020      	str	r0, [r4, #0]
 80291cc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80291d0:	81a3      	strh	r3, [r4, #12]
 80291d2:	9b00      	ldr	r3, [sp, #0]
 80291d4:	6163      	str	r3, [r4, #20]
 80291d6:	9b01      	ldr	r3, [sp, #4]
 80291d8:	6120      	str	r0, [r4, #16]
 80291da:	b15b      	cbz	r3, 80291f4 <__smakebuf_r+0x70>
 80291dc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80291e0:	4630      	mov	r0, r6
 80291e2:	f000 f81d 	bl	8029220 <_isatty_r>
 80291e6:	b128      	cbz	r0, 80291f4 <__smakebuf_r+0x70>
 80291e8:	89a3      	ldrh	r3, [r4, #12]
 80291ea:	f023 0303 	bic.w	r3, r3, #3
 80291ee:	f043 0301 	orr.w	r3, r3, #1
 80291f2:	81a3      	strh	r3, [r4, #12]
 80291f4:	89a3      	ldrh	r3, [r4, #12]
 80291f6:	431d      	orrs	r5, r3
 80291f8:	81a5      	strh	r5, [r4, #12]
 80291fa:	e7cf      	b.n	802919c <__smakebuf_r+0x18>

080291fc <_fstat_r>:
 80291fc:	b538      	push	{r3, r4, r5, lr}
 80291fe:	4d07      	ldr	r5, [pc, #28]	; (802921c <_fstat_r+0x20>)
 8029200:	2300      	movs	r3, #0
 8029202:	4604      	mov	r4, r0
 8029204:	4608      	mov	r0, r1
 8029206:	4611      	mov	r1, r2
 8029208:	602b      	str	r3, [r5, #0]
 802920a:	f7d8 ffe9 	bl	80021e0 <_fstat>
 802920e:	1c43      	adds	r3, r0, #1
 8029210:	d102      	bne.n	8029218 <_fstat_r+0x1c>
 8029212:	682b      	ldr	r3, [r5, #0]
 8029214:	b103      	cbz	r3, 8029218 <_fstat_r+0x1c>
 8029216:	6023      	str	r3, [r4, #0]
 8029218:	bd38      	pop	{r3, r4, r5, pc}
 802921a:	bf00      	nop
 802921c:	20014254 	.word	0x20014254

08029220 <_isatty_r>:
 8029220:	b538      	push	{r3, r4, r5, lr}
 8029222:	4d06      	ldr	r5, [pc, #24]	; (802923c <_isatty_r+0x1c>)
 8029224:	2300      	movs	r3, #0
 8029226:	4604      	mov	r4, r0
 8029228:	4608      	mov	r0, r1
 802922a:	602b      	str	r3, [r5, #0]
 802922c:	f7d8 ffde 	bl	80021ec <_isatty>
 8029230:	1c43      	adds	r3, r0, #1
 8029232:	d102      	bne.n	802923a <_isatty_r+0x1a>
 8029234:	682b      	ldr	r3, [r5, #0]
 8029236:	b103      	cbz	r3, 802923a <_isatty_r+0x1a>
 8029238:	6023      	str	r3, [r4, #0]
 802923a:	bd38      	pop	{r3, r4, r5, pc}
 802923c:	20014254 	.word	0x20014254

08029240 <_init>:
 8029240:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8029242:	bf00      	nop
 8029244:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8029246:	bc08      	pop	{r3}
 8029248:	469e      	mov	lr, r3
 802924a:	4770      	bx	lr

0802924c <_fini>:
 802924c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802924e:	bf00      	nop
 8029250:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8029252:	bc08      	pop	{r3}
 8029254:	469e      	mov	lr, r3
 8029256:	4770      	bx	lr

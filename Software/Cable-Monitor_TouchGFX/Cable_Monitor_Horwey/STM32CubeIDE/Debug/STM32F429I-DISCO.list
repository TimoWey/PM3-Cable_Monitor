
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002ea60  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000171d4  0802ec10  0802ec10  0003ec10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  08045de4  08045de4  00055de4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  08049adc  08049adc  00059adc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000734  08049d28  08049d28  00059d28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000850f0  0804a45c  0804a45c  0005a45c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080cf54c  080cf54c  000e0168  2**0
                  CONTENTS
  8 .ARM          00000008  080cf54c  080cf54c  000df54c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080cf554  080cf554  000e0168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080cf554  080cf554  000df554  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  080cf568  080cf568  000df568  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  080cf56c  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0001431c  20000168  080cf6d4  000e0168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  20014484  080cf6d4  000e4484  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e0168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  000e0198  2**0
                  CONTENTS, READONLY
 18 .debug_line   000975c2  00000000  00000000  000e02ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  0017788c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   0025120d  00000000  00000000  0017791f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0002cc51  00000000  00000000  003c8b2c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 000044b0  00000000  00000000  003f5780  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    00120a4d  00000000  00000000  003f9c30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00008816  00000000  00000000  0051a67d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 000358b7  00000000  00000000  00522e93  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003b885  00000000  00000000  0055874a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000ce30  00000000  00000000  00593fd0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003866  00000000  00000000  005a0e00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000180  00000000  00000000  005a4666  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802ebf8 	.word	0x0802ebf8

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	0802ebf8 	.word	0x0802ebf8

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_dmul>:
 8000350:	b570      	push	{r4, r5, r6, lr}
 8000352:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000356:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800035a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800035e:	bf1d      	ittte	ne
 8000360:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000364:	ea94 0f0c 	teqne	r4, ip
 8000368:	ea95 0f0c 	teqne	r5, ip
 800036c:	f000 f8de 	bleq	800052c <__aeabi_dmul+0x1dc>
 8000370:	442c      	add	r4, r5
 8000372:	ea81 0603 	eor.w	r6, r1, r3
 8000376:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800037a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800037e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000382:	bf18      	it	ne
 8000384:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000388:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800038c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000390:	d038      	beq.n	8000404 <__aeabi_dmul+0xb4>
 8000392:	fba0 ce02 	umull	ip, lr, r0, r2
 8000396:	f04f 0500 	mov.w	r5, #0
 800039a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800039e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80003a2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80003a6:	f04f 0600 	mov.w	r6, #0
 80003aa:	fbe1 5603 	umlal	r5, r6, r1, r3
 80003ae:	f09c 0f00 	teq	ip, #0
 80003b2:	bf18      	it	ne
 80003b4:	f04e 0e01 	orrne.w	lr, lr, #1
 80003b8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80003bc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80003c0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80003c4:	d204      	bcs.n	80003d0 <__aeabi_dmul+0x80>
 80003c6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80003ca:	416d      	adcs	r5, r5
 80003cc:	eb46 0606 	adc.w	r6, r6, r6
 80003d0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80003d4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80003d8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80003dc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80003e0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80003e4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80003e8:	bf88      	it	hi
 80003ea:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80003ee:	d81e      	bhi.n	800042e <__aeabi_dmul+0xde>
 80003f0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80003f4:	bf08      	it	eq
 80003f6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80003fa:	f150 0000 	adcs.w	r0, r0, #0
 80003fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000402:	bd70      	pop	{r4, r5, r6, pc}
 8000404:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000408:	ea46 0101 	orr.w	r1, r6, r1
 800040c:	ea40 0002 	orr.w	r0, r0, r2
 8000410:	ea81 0103 	eor.w	r1, r1, r3
 8000414:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000418:	bfc2      	ittt	gt
 800041a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800041e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000422:	bd70      	popgt	{r4, r5, r6, pc}
 8000424:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000428:	f04f 0e00 	mov.w	lr, #0
 800042c:	3c01      	subs	r4, #1
 800042e:	f300 80ab 	bgt.w	8000588 <__aeabi_dmul+0x238>
 8000432:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000436:	bfde      	ittt	le
 8000438:	2000      	movle	r0, #0
 800043a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800043e:	bd70      	pople	{r4, r5, r6, pc}
 8000440:	f1c4 0400 	rsb	r4, r4, #0
 8000444:	3c20      	subs	r4, #32
 8000446:	da35      	bge.n	80004b4 <__aeabi_dmul+0x164>
 8000448:	340c      	adds	r4, #12
 800044a:	dc1b      	bgt.n	8000484 <__aeabi_dmul+0x134>
 800044c:	f104 0414 	add.w	r4, r4, #20
 8000450:	f1c4 0520 	rsb	r5, r4, #32
 8000454:	fa00 f305 	lsl.w	r3, r0, r5
 8000458:	fa20 f004 	lsr.w	r0, r0, r4
 800045c:	fa01 f205 	lsl.w	r2, r1, r5
 8000460:	ea40 0002 	orr.w	r0, r0, r2
 8000464:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000468:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800046c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000470:	fa21 f604 	lsr.w	r6, r1, r4
 8000474:	eb42 0106 	adc.w	r1, r2, r6
 8000478:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800047c:	bf08      	it	eq
 800047e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000482:	bd70      	pop	{r4, r5, r6, pc}
 8000484:	f1c4 040c 	rsb	r4, r4, #12
 8000488:	f1c4 0520 	rsb	r5, r4, #32
 800048c:	fa00 f304 	lsl.w	r3, r0, r4
 8000490:	fa20 f005 	lsr.w	r0, r0, r5
 8000494:	fa01 f204 	lsl.w	r2, r1, r4
 8000498:	ea40 0002 	orr.w	r0, r0, r2
 800049c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004a0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80004a4:	f141 0100 	adc.w	r1, r1, #0
 80004a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80004ac:	bf08      	it	eq
 80004ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80004b2:	bd70      	pop	{r4, r5, r6, pc}
 80004b4:	f1c4 0520 	rsb	r5, r4, #32
 80004b8:	fa00 f205 	lsl.w	r2, r0, r5
 80004bc:	ea4e 0e02 	orr.w	lr, lr, r2
 80004c0:	fa20 f304 	lsr.w	r3, r0, r4
 80004c4:	fa01 f205 	lsl.w	r2, r1, r5
 80004c8:	ea43 0302 	orr.w	r3, r3, r2
 80004cc:	fa21 f004 	lsr.w	r0, r1, r4
 80004d0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004d4:	fa21 f204 	lsr.w	r2, r1, r4
 80004d8:	ea20 0002 	bic.w	r0, r0, r2
 80004dc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80004e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80004e4:	bf08      	it	eq
 80004e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80004ea:	bd70      	pop	{r4, r5, r6, pc}
 80004ec:	f094 0f00 	teq	r4, #0
 80004f0:	d10f      	bne.n	8000512 <__aeabi_dmul+0x1c2>
 80004f2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80004f6:	0040      	lsls	r0, r0, #1
 80004f8:	eb41 0101 	adc.w	r1, r1, r1
 80004fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000500:	bf08      	it	eq
 8000502:	3c01      	subeq	r4, #1
 8000504:	d0f7      	beq.n	80004f6 <__aeabi_dmul+0x1a6>
 8000506:	ea41 0106 	orr.w	r1, r1, r6
 800050a:	f095 0f00 	teq	r5, #0
 800050e:	bf18      	it	ne
 8000510:	4770      	bxne	lr
 8000512:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000516:	0052      	lsls	r2, r2, #1
 8000518:	eb43 0303 	adc.w	r3, r3, r3
 800051c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000520:	bf08      	it	eq
 8000522:	3d01      	subeq	r5, #1
 8000524:	d0f7      	beq.n	8000516 <__aeabi_dmul+0x1c6>
 8000526:	ea43 0306 	orr.w	r3, r3, r6
 800052a:	4770      	bx	lr
 800052c:	ea94 0f0c 	teq	r4, ip
 8000530:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000534:	bf18      	it	ne
 8000536:	ea95 0f0c 	teqne	r5, ip
 800053a:	d00c      	beq.n	8000556 <__aeabi_dmul+0x206>
 800053c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000540:	bf18      	it	ne
 8000542:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000546:	d1d1      	bne.n	80004ec <__aeabi_dmul+0x19c>
 8000548:	ea81 0103 	eor.w	r1, r1, r3
 800054c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000550:	f04f 0000 	mov.w	r0, #0
 8000554:	bd70      	pop	{r4, r5, r6, pc}
 8000556:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800055a:	bf06      	itte	eq
 800055c:	4610      	moveq	r0, r2
 800055e:	4619      	moveq	r1, r3
 8000560:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000564:	d019      	beq.n	800059a <__aeabi_dmul+0x24a>
 8000566:	ea94 0f0c 	teq	r4, ip
 800056a:	d102      	bne.n	8000572 <__aeabi_dmul+0x222>
 800056c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000570:	d113      	bne.n	800059a <__aeabi_dmul+0x24a>
 8000572:	ea95 0f0c 	teq	r5, ip
 8000576:	d105      	bne.n	8000584 <__aeabi_dmul+0x234>
 8000578:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800057c:	bf1c      	itt	ne
 800057e:	4610      	movne	r0, r2
 8000580:	4619      	movne	r1, r3
 8000582:	d10a      	bne.n	800059a <__aeabi_dmul+0x24a>
 8000584:	ea81 0103 	eor.w	r1, r1, r3
 8000588:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800058c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000590:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000594:	f04f 0000 	mov.w	r0, #0
 8000598:	bd70      	pop	{r4, r5, r6, pc}
 800059a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800059e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80005a2:	bd70      	pop	{r4, r5, r6, pc}

080005a4 <__aeabi_drsub>:
 80005a4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e002      	b.n	80005b0 <__adddf3>
 80005aa:	bf00      	nop

080005ac <__aeabi_dsub>:
 80005ac:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080005b0 <__adddf3>:
 80005b0:	b530      	push	{r4, r5, lr}
 80005b2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80005b6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80005ba:	ea94 0f05 	teq	r4, r5
 80005be:	bf08      	it	eq
 80005c0:	ea90 0f02 	teqeq	r0, r2
 80005c4:	bf1f      	itttt	ne
 80005c6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80005ca:	ea55 0c02 	orrsne.w	ip, r5, r2
 80005ce:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80005d2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80005d6:	f000 80e2 	beq.w	800079e <__adddf3+0x1ee>
 80005da:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80005de:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80005e2:	bfb8      	it	lt
 80005e4:	426d      	neglt	r5, r5
 80005e6:	dd0c      	ble.n	8000602 <__adddf3+0x52>
 80005e8:	442c      	add	r4, r5
 80005ea:	ea80 0202 	eor.w	r2, r0, r2
 80005ee:	ea81 0303 	eor.w	r3, r1, r3
 80005f2:	ea82 0000 	eor.w	r0, r2, r0
 80005f6:	ea83 0101 	eor.w	r1, r3, r1
 80005fa:	ea80 0202 	eor.w	r2, r0, r2
 80005fe:	ea81 0303 	eor.w	r3, r1, r3
 8000602:	2d36      	cmp	r5, #54	; 0x36
 8000604:	bf88      	it	hi
 8000606:	bd30      	pophi	{r4, r5, pc}
 8000608:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800060c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000610:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000614:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000618:	d002      	beq.n	8000620 <__adddf3+0x70>
 800061a:	4240      	negs	r0, r0
 800061c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000620:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000624:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000628:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800062c:	d002      	beq.n	8000634 <__adddf3+0x84>
 800062e:	4252      	negs	r2, r2
 8000630:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000634:	ea94 0f05 	teq	r4, r5
 8000638:	f000 80a7 	beq.w	800078a <__adddf3+0x1da>
 800063c:	f1a4 0401 	sub.w	r4, r4, #1
 8000640:	f1d5 0e20 	rsbs	lr, r5, #32
 8000644:	db0d      	blt.n	8000662 <__adddf3+0xb2>
 8000646:	fa02 fc0e 	lsl.w	ip, r2, lr
 800064a:	fa22 f205 	lsr.w	r2, r2, r5
 800064e:	1880      	adds	r0, r0, r2
 8000650:	f141 0100 	adc.w	r1, r1, #0
 8000654:	fa03 f20e 	lsl.w	r2, r3, lr
 8000658:	1880      	adds	r0, r0, r2
 800065a:	fa43 f305 	asr.w	r3, r3, r5
 800065e:	4159      	adcs	r1, r3
 8000660:	e00e      	b.n	8000680 <__adddf3+0xd0>
 8000662:	f1a5 0520 	sub.w	r5, r5, #32
 8000666:	f10e 0e20 	add.w	lr, lr, #32
 800066a:	2a01      	cmp	r2, #1
 800066c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000670:	bf28      	it	cs
 8000672:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000676:	fa43 f305 	asr.w	r3, r3, r5
 800067a:	18c0      	adds	r0, r0, r3
 800067c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000680:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000684:	d507      	bpl.n	8000696 <__adddf3+0xe6>
 8000686:	f04f 0e00 	mov.w	lr, #0
 800068a:	f1dc 0c00 	rsbs	ip, ip, #0
 800068e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000692:	eb6e 0101 	sbc.w	r1, lr, r1
 8000696:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800069a:	d31b      	bcc.n	80006d4 <__adddf3+0x124>
 800069c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80006a0:	d30c      	bcc.n	80006bc <__adddf3+0x10c>
 80006a2:	0849      	lsrs	r1, r1, #1
 80006a4:	ea5f 0030 	movs.w	r0, r0, rrx
 80006a8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80006ac:	f104 0401 	add.w	r4, r4, #1
 80006b0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80006b4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80006b8:	f080 809a 	bcs.w	80007f0 <__adddf3+0x240>
 80006bc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80006c0:	bf08      	it	eq
 80006c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80006c6:	f150 0000 	adcs.w	r0, r0, #0
 80006ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ce:	ea41 0105 	orr.w	r1, r1, r5
 80006d2:	bd30      	pop	{r4, r5, pc}
 80006d4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80006d8:	4140      	adcs	r0, r0
 80006da:	eb41 0101 	adc.w	r1, r1, r1
 80006de:	3c01      	subs	r4, #1
 80006e0:	bf28      	it	cs
 80006e2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80006e6:	d2e9      	bcs.n	80006bc <__adddf3+0x10c>
 80006e8:	f091 0f00 	teq	r1, #0
 80006ec:	bf04      	itt	eq
 80006ee:	4601      	moveq	r1, r0
 80006f0:	2000      	moveq	r0, #0
 80006f2:	fab1 f381 	clz	r3, r1
 80006f6:	bf08      	it	eq
 80006f8:	3320      	addeq	r3, #32
 80006fa:	f1a3 030b 	sub.w	r3, r3, #11
 80006fe:	f1b3 0220 	subs.w	r2, r3, #32
 8000702:	da0c      	bge.n	800071e <__adddf3+0x16e>
 8000704:	320c      	adds	r2, #12
 8000706:	dd08      	ble.n	800071a <__adddf3+0x16a>
 8000708:	f102 0c14 	add.w	ip, r2, #20
 800070c:	f1c2 020c 	rsb	r2, r2, #12
 8000710:	fa01 f00c 	lsl.w	r0, r1, ip
 8000714:	fa21 f102 	lsr.w	r1, r1, r2
 8000718:	e00c      	b.n	8000734 <__adddf3+0x184>
 800071a:	f102 0214 	add.w	r2, r2, #20
 800071e:	bfd8      	it	le
 8000720:	f1c2 0c20 	rsble	ip, r2, #32
 8000724:	fa01 f102 	lsl.w	r1, r1, r2
 8000728:	fa20 fc0c 	lsr.w	ip, r0, ip
 800072c:	bfdc      	itt	le
 800072e:	ea41 010c 	orrle.w	r1, r1, ip
 8000732:	4090      	lslle	r0, r2
 8000734:	1ae4      	subs	r4, r4, r3
 8000736:	bfa2      	ittt	ge
 8000738:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800073c:	4329      	orrge	r1, r5
 800073e:	bd30      	popge	{r4, r5, pc}
 8000740:	ea6f 0404 	mvn.w	r4, r4
 8000744:	3c1f      	subs	r4, #31
 8000746:	da1c      	bge.n	8000782 <__adddf3+0x1d2>
 8000748:	340c      	adds	r4, #12
 800074a:	dc0e      	bgt.n	800076a <__adddf3+0x1ba>
 800074c:	f104 0414 	add.w	r4, r4, #20
 8000750:	f1c4 0220 	rsb	r2, r4, #32
 8000754:	fa20 f004 	lsr.w	r0, r0, r4
 8000758:	fa01 f302 	lsl.w	r3, r1, r2
 800075c:	ea40 0003 	orr.w	r0, r0, r3
 8000760:	fa21 f304 	lsr.w	r3, r1, r4
 8000764:	ea45 0103 	orr.w	r1, r5, r3
 8000768:	bd30      	pop	{r4, r5, pc}
 800076a:	f1c4 040c 	rsb	r4, r4, #12
 800076e:	f1c4 0220 	rsb	r2, r4, #32
 8000772:	fa20 f002 	lsr.w	r0, r0, r2
 8000776:	fa01 f304 	lsl.w	r3, r1, r4
 800077a:	ea40 0003 	orr.w	r0, r0, r3
 800077e:	4629      	mov	r1, r5
 8000780:	bd30      	pop	{r4, r5, pc}
 8000782:	fa21 f004 	lsr.w	r0, r1, r4
 8000786:	4629      	mov	r1, r5
 8000788:	bd30      	pop	{r4, r5, pc}
 800078a:	f094 0f00 	teq	r4, #0
 800078e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000792:	bf06      	itte	eq
 8000794:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000798:	3401      	addeq	r4, #1
 800079a:	3d01      	subne	r5, #1
 800079c:	e74e      	b.n	800063c <__adddf3+0x8c>
 800079e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80007a2:	bf18      	it	ne
 80007a4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80007a8:	d029      	beq.n	80007fe <__adddf3+0x24e>
 80007aa:	ea94 0f05 	teq	r4, r5
 80007ae:	bf08      	it	eq
 80007b0:	ea90 0f02 	teqeq	r0, r2
 80007b4:	d005      	beq.n	80007c2 <__adddf3+0x212>
 80007b6:	ea54 0c00 	orrs.w	ip, r4, r0
 80007ba:	bf04      	itt	eq
 80007bc:	4619      	moveq	r1, r3
 80007be:	4610      	moveq	r0, r2
 80007c0:	bd30      	pop	{r4, r5, pc}
 80007c2:	ea91 0f03 	teq	r1, r3
 80007c6:	bf1e      	ittt	ne
 80007c8:	2100      	movne	r1, #0
 80007ca:	2000      	movne	r0, #0
 80007cc:	bd30      	popne	{r4, r5, pc}
 80007ce:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80007d2:	d105      	bne.n	80007e0 <__adddf3+0x230>
 80007d4:	0040      	lsls	r0, r0, #1
 80007d6:	4149      	adcs	r1, r1
 80007d8:	bf28      	it	cs
 80007da:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80007de:	bd30      	pop	{r4, r5, pc}
 80007e0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80007e4:	bf3c      	itt	cc
 80007e6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80007ea:	bd30      	popcc	{r4, r5, pc}
 80007ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80007f0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80007f4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd30      	pop	{r4, r5, pc}
 80007fe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000802:	bf1a      	itte	ne
 8000804:	4619      	movne	r1, r3
 8000806:	4610      	movne	r0, r2
 8000808:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800080c:	bf1c      	itt	ne
 800080e:	460b      	movne	r3, r1
 8000810:	4602      	movne	r2, r0
 8000812:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000816:	bf06      	itte	eq
 8000818:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800081c:	ea91 0f03 	teqeq	r1, r3
 8000820:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000824:	bd30      	pop	{r4, r5, pc}
 8000826:	bf00      	nop

08000828 <__aeabi_ui2d>:
 8000828:	f090 0f00 	teq	r0, #0
 800082c:	bf04      	itt	eq
 800082e:	2100      	moveq	r1, #0
 8000830:	4770      	bxeq	lr
 8000832:	b530      	push	{r4, r5, lr}
 8000834:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000838:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800083c:	f04f 0500 	mov.w	r5, #0
 8000840:	f04f 0100 	mov.w	r1, #0
 8000844:	e750      	b.n	80006e8 <__adddf3+0x138>
 8000846:	bf00      	nop

08000848 <__aeabi_i2d>:
 8000848:	f090 0f00 	teq	r0, #0
 800084c:	bf04      	itt	eq
 800084e:	2100      	moveq	r1, #0
 8000850:	4770      	bxeq	lr
 8000852:	b530      	push	{r4, r5, lr}
 8000854:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000858:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800085c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000860:	bf48      	it	mi
 8000862:	4240      	negmi	r0, r0
 8000864:	f04f 0100 	mov.w	r1, #0
 8000868:	e73e      	b.n	80006e8 <__adddf3+0x138>
 800086a:	bf00      	nop

0800086c <__aeabi_f2d>:
 800086c:	0042      	lsls	r2, r0, #1
 800086e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000872:	ea4f 0131 	mov.w	r1, r1, rrx
 8000876:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800087a:	bf1f      	itttt	ne
 800087c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000880:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000884:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000888:	4770      	bxne	lr
 800088a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800088e:	bf08      	it	eq
 8000890:	4770      	bxeq	lr
 8000892:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000896:	bf04      	itt	eq
 8000898:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800089c:	4770      	bxeq	lr
 800089e:	b530      	push	{r4, r5, lr}
 80008a0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80008a4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80008a8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80008ac:	e71c      	b.n	80006e8 <__adddf3+0x138>
 80008ae:	bf00      	nop

080008b0 <__aeabi_ul2d>:
 80008b0:	ea50 0201 	orrs.w	r2, r0, r1
 80008b4:	bf08      	it	eq
 80008b6:	4770      	bxeq	lr
 80008b8:	b530      	push	{r4, r5, lr}
 80008ba:	f04f 0500 	mov.w	r5, #0
 80008be:	e00a      	b.n	80008d6 <__aeabi_l2d+0x16>

080008c0 <__aeabi_l2d>:
 80008c0:	ea50 0201 	orrs.w	r2, r0, r1
 80008c4:	bf08      	it	eq
 80008c6:	4770      	bxeq	lr
 80008c8:	b530      	push	{r4, r5, lr}
 80008ca:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80008ce:	d502      	bpl.n	80008d6 <__aeabi_l2d+0x16>
 80008d0:	4240      	negs	r0, r0
 80008d2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80008d6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80008da:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80008de:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80008e2:	f43f aed8 	beq.w	8000696 <__adddf3+0xe6>
 80008e6:	f04f 0203 	mov.w	r2, #3
 80008ea:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80008ee:	bf18      	it	ne
 80008f0:	3203      	addne	r2, #3
 80008f2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80008f6:	bf18      	it	ne
 80008f8:	3203      	addne	r2, #3
 80008fa:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80008fe:	f1c2 0320 	rsb	r3, r2, #32
 8000902:	fa00 fc03 	lsl.w	ip, r0, r3
 8000906:	fa20 f002 	lsr.w	r0, r0, r2
 800090a:	fa01 fe03 	lsl.w	lr, r1, r3
 800090e:	ea40 000e 	orr.w	r0, r0, lr
 8000912:	fa21 f102 	lsr.w	r1, r1, r2
 8000916:	4414      	add	r4, r2
 8000918:	e6bd      	b.n	8000696 <__adddf3+0xe6>
 800091a:	bf00      	nop

0800091c <__aeabi_d2f>:
 800091c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000920:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000924:	bf24      	itt	cs
 8000926:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 800092a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 800092e:	d90d      	bls.n	800094c <__aeabi_d2f+0x30>
 8000930:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000934:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000938:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 800093c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000940:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000944:	bf08      	it	eq
 8000946:	f020 0001 	biceq.w	r0, r0, #1
 800094a:	4770      	bx	lr
 800094c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000950:	d121      	bne.n	8000996 <__aeabi_d2f+0x7a>
 8000952:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000956:	bfbc      	itt	lt
 8000958:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 800095c:	4770      	bxlt	lr
 800095e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000962:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000966:	f1c2 0218 	rsb	r2, r2, #24
 800096a:	f1c2 0c20 	rsb	ip, r2, #32
 800096e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000972:	fa20 f002 	lsr.w	r0, r0, r2
 8000976:	bf18      	it	ne
 8000978:	f040 0001 	orrne.w	r0, r0, #1
 800097c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000980:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000984:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000988:	ea40 000c 	orr.w	r0, r0, ip
 800098c:	fa23 f302 	lsr.w	r3, r3, r2
 8000990:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000994:	e7cc      	b.n	8000930 <__aeabi_d2f+0x14>
 8000996:	ea7f 5362 	mvns.w	r3, r2, asr #21
 800099a:	d107      	bne.n	80009ac <__aeabi_d2f+0x90>
 800099c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 80009a0:	bf1e      	ittt	ne
 80009a2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 80009a6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 80009aa:	4770      	bxne	lr
 80009ac:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 80009b0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80009b4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80009b8:	4770      	bx	lr
 80009ba:	bf00      	nop

080009bc <__aeabi_uldivmod>:
 80009bc:	b953      	cbnz	r3, 80009d4 <__aeabi_uldivmod+0x18>
 80009be:	b94a      	cbnz	r2, 80009d4 <__aeabi_uldivmod+0x18>
 80009c0:	2900      	cmp	r1, #0
 80009c2:	bf08      	it	eq
 80009c4:	2800      	cmpeq	r0, #0
 80009c6:	bf1c      	itt	ne
 80009c8:	f04f 31ff 	movne.w	r1, #4294967295
 80009cc:	f04f 30ff 	movne.w	r0, #4294967295
 80009d0:	f000 b970 	b.w	8000cb4 <__aeabi_idiv0>
 80009d4:	f1ad 0c08 	sub.w	ip, sp, #8
 80009d8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80009dc:	f000 f806 	bl	80009ec <__udivmoddi4>
 80009e0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80009e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80009e8:	b004      	add	sp, #16
 80009ea:	4770      	bx	lr

080009ec <__udivmoddi4>:
 80009ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80009f0:	9e08      	ldr	r6, [sp, #32]
 80009f2:	460d      	mov	r5, r1
 80009f4:	4604      	mov	r4, r0
 80009f6:	460f      	mov	r7, r1
 80009f8:	2b00      	cmp	r3, #0
 80009fa:	d14a      	bne.n	8000a92 <__udivmoddi4+0xa6>
 80009fc:	428a      	cmp	r2, r1
 80009fe:	4694      	mov	ip, r2
 8000a00:	d965      	bls.n	8000ace <__udivmoddi4+0xe2>
 8000a02:	fab2 f382 	clz	r3, r2
 8000a06:	b143      	cbz	r3, 8000a1a <__udivmoddi4+0x2e>
 8000a08:	fa02 fc03 	lsl.w	ip, r2, r3
 8000a0c:	f1c3 0220 	rsb	r2, r3, #32
 8000a10:	409f      	lsls	r7, r3
 8000a12:	fa20 f202 	lsr.w	r2, r0, r2
 8000a16:	4317      	orrs	r7, r2
 8000a18:	409c      	lsls	r4, r3
 8000a1a:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000a1e:	fa1f f58c 	uxth.w	r5, ip
 8000a22:	fbb7 f1fe 	udiv	r1, r7, lr
 8000a26:	0c22      	lsrs	r2, r4, #16
 8000a28:	fb0e 7711 	mls	r7, lr, r1, r7
 8000a2c:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000a30:	fb01 f005 	mul.w	r0, r1, r5
 8000a34:	4290      	cmp	r0, r2
 8000a36:	d90a      	bls.n	8000a4e <__udivmoddi4+0x62>
 8000a38:	eb1c 0202 	adds.w	r2, ip, r2
 8000a3c:	f101 37ff 	add.w	r7, r1, #4294967295
 8000a40:	f080 811c 	bcs.w	8000c7c <__udivmoddi4+0x290>
 8000a44:	4290      	cmp	r0, r2
 8000a46:	f240 8119 	bls.w	8000c7c <__udivmoddi4+0x290>
 8000a4a:	3902      	subs	r1, #2
 8000a4c:	4462      	add	r2, ip
 8000a4e:	1a12      	subs	r2, r2, r0
 8000a50:	b2a4      	uxth	r4, r4
 8000a52:	fbb2 f0fe 	udiv	r0, r2, lr
 8000a56:	fb0e 2210 	mls	r2, lr, r0, r2
 8000a5a:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000a5e:	fb00 f505 	mul.w	r5, r0, r5
 8000a62:	42a5      	cmp	r5, r4
 8000a64:	d90a      	bls.n	8000a7c <__udivmoddi4+0x90>
 8000a66:	eb1c 0404 	adds.w	r4, ip, r4
 8000a6a:	f100 32ff 	add.w	r2, r0, #4294967295
 8000a6e:	f080 8107 	bcs.w	8000c80 <__udivmoddi4+0x294>
 8000a72:	42a5      	cmp	r5, r4
 8000a74:	f240 8104 	bls.w	8000c80 <__udivmoddi4+0x294>
 8000a78:	4464      	add	r4, ip
 8000a7a:	3802      	subs	r0, #2
 8000a7c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000a80:	1b64      	subs	r4, r4, r5
 8000a82:	2100      	movs	r1, #0
 8000a84:	b11e      	cbz	r6, 8000a8e <__udivmoddi4+0xa2>
 8000a86:	40dc      	lsrs	r4, r3
 8000a88:	2300      	movs	r3, #0
 8000a8a:	e9c6 4300 	strd	r4, r3, [r6]
 8000a8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000a92:	428b      	cmp	r3, r1
 8000a94:	d908      	bls.n	8000aa8 <__udivmoddi4+0xbc>
 8000a96:	2e00      	cmp	r6, #0
 8000a98:	f000 80ed 	beq.w	8000c76 <__udivmoddi4+0x28a>
 8000a9c:	2100      	movs	r1, #0
 8000a9e:	e9c6 0500 	strd	r0, r5, [r6]
 8000aa2:	4608      	mov	r0, r1
 8000aa4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000aa8:	fab3 f183 	clz	r1, r3
 8000aac:	2900      	cmp	r1, #0
 8000aae:	d149      	bne.n	8000b44 <__udivmoddi4+0x158>
 8000ab0:	42ab      	cmp	r3, r5
 8000ab2:	d302      	bcc.n	8000aba <__udivmoddi4+0xce>
 8000ab4:	4282      	cmp	r2, r0
 8000ab6:	f200 80f8 	bhi.w	8000caa <__udivmoddi4+0x2be>
 8000aba:	1a84      	subs	r4, r0, r2
 8000abc:	eb65 0203 	sbc.w	r2, r5, r3
 8000ac0:	2001      	movs	r0, #1
 8000ac2:	4617      	mov	r7, r2
 8000ac4:	2e00      	cmp	r6, #0
 8000ac6:	d0e2      	beq.n	8000a8e <__udivmoddi4+0xa2>
 8000ac8:	e9c6 4700 	strd	r4, r7, [r6]
 8000acc:	e7df      	b.n	8000a8e <__udivmoddi4+0xa2>
 8000ace:	b902      	cbnz	r2, 8000ad2 <__udivmoddi4+0xe6>
 8000ad0:	deff      	udf	#255	; 0xff
 8000ad2:	fab2 f382 	clz	r3, r2
 8000ad6:	2b00      	cmp	r3, #0
 8000ad8:	f040 8090 	bne.w	8000bfc <__udivmoddi4+0x210>
 8000adc:	1a8a      	subs	r2, r1, r2
 8000ade:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ae2:	fa1f fe8c 	uxth.w	lr, ip
 8000ae6:	2101      	movs	r1, #1
 8000ae8:	fbb2 f5f7 	udiv	r5, r2, r7
 8000aec:	fb07 2015 	mls	r0, r7, r5, r2
 8000af0:	0c22      	lsrs	r2, r4, #16
 8000af2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000af6:	fb0e f005 	mul.w	r0, lr, r5
 8000afa:	4290      	cmp	r0, r2
 8000afc:	d908      	bls.n	8000b10 <__udivmoddi4+0x124>
 8000afe:	eb1c 0202 	adds.w	r2, ip, r2
 8000b02:	f105 38ff 	add.w	r8, r5, #4294967295
 8000b06:	d202      	bcs.n	8000b0e <__udivmoddi4+0x122>
 8000b08:	4290      	cmp	r0, r2
 8000b0a:	f200 80cb 	bhi.w	8000ca4 <__udivmoddi4+0x2b8>
 8000b0e:	4645      	mov	r5, r8
 8000b10:	1a12      	subs	r2, r2, r0
 8000b12:	b2a4      	uxth	r4, r4
 8000b14:	fbb2 f0f7 	udiv	r0, r2, r7
 8000b18:	fb07 2210 	mls	r2, r7, r0, r2
 8000b1c:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000b20:	fb0e fe00 	mul.w	lr, lr, r0
 8000b24:	45a6      	cmp	lr, r4
 8000b26:	d908      	bls.n	8000b3a <__udivmoddi4+0x14e>
 8000b28:	eb1c 0404 	adds.w	r4, ip, r4
 8000b2c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000b30:	d202      	bcs.n	8000b38 <__udivmoddi4+0x14c>
 8000b32:	45a6      	cmp	lr, r4
 8000b34:	f200 80bb 	bhi.w	8000cae <__udivmoddi4+0x2c2>
 8000b38:	4610      	mov	r0, r2
 8000b3a:	eba4 040e 	sub.w	r4, r4, lr
 8000b3e:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000b42:	e79f      	b.n	8000a84 <__udivmoddi4+0x98>
 8000b44:	f1c1 0720 	rsb	r7, r1, #32
 8000b48:	408b      	lsls	r3, r1
 8000b4a:	fa22 fc07 	lsr.w	ip, r2, r7
 8000b4e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000b52:	fa05 f401 	lsl.w	r4, r5, r1
 8000b56:	fa20 f307 	lsr.w	r3, r0, r7
 8000b5a:	40fd      	lsrs	r5, r7
 8000b5c:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000b60:	4323      	orrs	r3, r4
 8000b62:	fbb5 f8f9 	udiv	r8, r5, r9
 8000b66:	fa1f fe8c 	uxth.w	lr, ip
 8000b6a:	fb09 5518 	mls	r5, r9, r8, r5
 8000b6e:	0c1c      	lsrs	r4, r3, #16
 8000b70:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000b74:	fb08 f50e 	mul.w	r5, r8, lr
 8000b78:	42a5      	cmp	r5, r4
 8000b7a:	fa02 f201 	lsl.w	r2, r2, r1
 8000b7e:	fa00 f001 	lsl.w	r0, r0, r1
 8000b82:	d90b      	bls.n	8000b9c <__udivmoddi4+0x1b0>
 8000b84:	eb1c 0404 	adds.w	r4, ip, r4
 8000b88:	f108 3aff 	add.w	sl, r8, #4294967295
 8000b8c:	f080 8088 	bcs.w	8000ca0 <__udivmoddi4+0x2b4>
 8000b90:	42a5      	cmp	r5, r4
 8000b92:	f240 8085 	bls.w	8000ca0 <__udivmoddi4+0x2b4>
 8000b96:	f1a8 0802 	sub.w	r8, r8, #2
 8000b9a:	4464      	add	r4, ip
 8000b9c:	1b64      	subs	r4, r4, r5
 8000b9e:	b29d      	uxth	r5, r3
 8000ba0:	fbb4 f3f9 	udiv	r3, r4, r9
 8000ba4:	fb09 4413 	mls	r4, r9, r3, r4
 8000ba8:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000bac:	fb03 fe0e 	mul.w	lr, r3, lr
 8000bb0:	45a6      	cmp	lr, r4
 8000bb2:	d908      	bls.n	8000bc6 <__udivmoddi4+0x1da>
 8000bb4:	eb1c 0404 	adds.w	r4, ip, r4
 8000bb8:	f103 35ff 	add.w	r5, r3, #4294967295
 8000bbc:	d26c      	bcs.n	8000c98 <__udivmoddi4+0x2ac>
 8000bbe:	45a6      	cmp	lr, r4
 8000bc0:	d96a      	bls.n	8000c98 <__udivmoddi4+0x2ac>
 8000bc2:	3b02      	subs	r3, #2
 8000bc4:	4464      	add	r4, ip
 8000bc6:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000bca:	fba3 9502 	umull	r9, r5, r3, r2
 8000bce:	eba4 040e 	sub.w	r4, r4, lr
 8000bd2:	42ac      	cmp	r4, r5
 8000bd4:	46c8      	mov	r8, r9
 8000bd6:	46ae      	mov	lr, r5
 8000bd8:	d356      	bcc.n	8000c88 <__udivmoddi4+0x29c>
 8000bda:	d053      	beq.n	8000c84 <__udivmoddi4+0x298>
 8000bdc:	b156      	cbz	r6, 8000bf4 <__udivmoddi4+0x208>
 8000bde:	ebb0 0208 	subs.w	r2, r0, r8
 8000be2:	eb64 040e 	sbc.w	r4, r4, lr
 8000be6:	fa04 f707 	lsl.w	r7, r4, r7
 8000bea:	40ca      	lsrs	r2, r1
 8000bec:	40cc      	lsrs	r4, r1
 8000bee:	4317      	orrs	r7, r2
 8000bf0:	e9c6 7400 	strd	r7, r4, [r6]
 8000bf4:	4618      	mov	r0, r3
 8000bf6:	2100      	movs	r1, #0
 8000bf8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bfc:	f1c3 0120 	rsb	r1, r3, #32
 8000c00:	fa02 fc03 	lsl.w	ip, r2, r3
 8000c04:	fa20 f201 	lsr.w	r2, r0, r1
 8000c08:	fa25 f101 	lsr.w	r1, r5, r1
 8000c0c:	409d      	lsls	r5, r3
 8000c0e:	432a      	orrs	r2, r5
 8000c10:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c14:	fa1f fe8c 	uxth.w	lr, ip
 8000c18:	fbb1 f0f7 	udiv	r0, r1, r7
 8000c1c:	fb07 1510 	mls	r5, r7, r0, r1
 8000c20:	0c11      	lsrs	r1, r2, #16
 8000c22:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000c26:	fb00 f50e 	mul.w	r5, r0, lr
 8000c2a:	428d      	cmp	r5, r1
 8000c2c:	fa04 f403 	lsl.w	r4, r4, r3
 8000c30:	d908      	bls.n	8000c44 <__udivmoddi4+0x258>
 8000c32:	eb1c 0101 	adds.w	r1, ip, r1
 8000c36:	f100 38ff 	add.w	r8, r0, #4294967295
 8000c3a:	d22f      	bcs.n	8000c9c <__udivmoddi4+0x2b0>
 8000c3c:	428d      	cmp	r5, r1
 8000c3e:	d92d      	bls.n	8000c9c <__udivmoddi4+0x2b0>
 8000c40:	3802      	subs	r0, #2
 8000c42:	4461      	add	r1, ip
 8000c44:	1b49      	subs	r1, r1, r5
 8000c46:	b292      	uxth	r2, r2
 8000c48:	fbb1 f5f7 	udiv	r5, r1, r7
 8000c4c:	fb07 1115 	mls	r1, r7, r5, r1
 8000c50:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000c54:	fb05 f10e 	mul.w	r1, r5, lr
 8000c58:	4291      	cmp	r1, r2
 8000c5a:	d908      	bls.n	8000c6e <__udivmoddi4+0x282>
 8000c5c:	eb1c 0202 	adds.w	r2, ip, r2
 8000c60:	f105 38ff 	add.w	r8, r5, #4294967295
 8000c64:	d216      	bcs.n	8000c94 <__udivmoddi4+0x2a8>
 8000c66:	4291      	cmp	r1, r2
 8000c68:	d914      	bls.n	8000c94 <__udivmoddi4+0x2a8>
 8000c6a:	3d02      	subs	r5, #2
 8000c6c:	4462      	add	r2, ip
 8000c6e:	1a52      	subs	r2, r2, r1
 8000c70:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000c74:	e738      	b.n	8000ae8 <__udivmoddi4+0xfc>
 8000c76:	4631      	mov	r1, r6
 8000c78:	4630      	mov	r0, r6
 8000c7a:	e708      	b.n	8000a8e <__udivmoddi4+0xa2>
 8000c7c:	4639      	mov	r1, r7
 8000c7e:	e6e6      	b.n	8000a4e <__udivmoddi4+0x62>
 8000c80:	4610      	mov	r0, r2
 8000c82:	e6fb      	b.n	8000a7c <__udivmoddi4+0x90>
 8000c84:	4548      	cmp	r0, r9
 8000c86:	d2a9      	bcs.n	8000bdc <__udivmoddi4+0x1f0>
 8000c88:	ebb9 0802 	subs.w	r8, r9, r2
 8000c8c:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000c90:	3b01      	subs	r3, #1
 8000c92:	e7a3      	b.n	8000bdc <__udivmoddi4+0x1f0>
 8000c94:	4645      	mov	r5, r8
 8000c96:	e7ea      	b.n	8000c6e <__udivmoddi4+0x282>
 8000c98:	462b      	mov	r3, r5
 8000c9a:	e794      	b.n	8000bc6 <__udivmoddi4+0x1da>
 8000c9c:	4640      	mov	r0, r8
 8000c9e:	e7d1      	b.n	8000c44 <__udivmoddi4+0x258>
 8000ca0:	46d0      	mov	r8, sl
 8000ca2:	e77b      	b.n	8000b9c <__udivmoddi4+0x1b0>
 8000ca4:	3d02      	subs	r5, #2
 8000ca6:	4462      	add	r2, ip
 8000ca8:	e732      	b.n	8000b10 <__udivmoddi4+0x124>
 8000caa:	4608      	mov	r0, r1
 8000cac:	e70a      	b.n	8000ac4 <__udivmoddi4+0xd8>
 8000cae:	4464      	add	r4, ip
 8000cb0:	3802      	subs	r0, #2
 8000cb2:	e742      	b.n	8000b3a <__udivmoddi4+0x14e>

08000cb4 <__aeabi_idiv0>:
 8000cb4:	4770      	bx	lr
 8000cb6:	bf00      	nop

08000cb8 <Reset_Handler>:
    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 

  ldr   sp, =_estack       /* set stack pointer */
 8000cb8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000cf0 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000cbc:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000cbe:	e003      	b.n	8000cc8 <LoopCopyDataInit>

08000cc0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000cc0:	4b0c      	ldr	r3, [pc, #48]	; (8000cf4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000cc2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000cc4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000cc6:	3104      	adds	r1, #4

08000cc8 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000cc8:	480b      	ldr	r0, [pc, #44]	; (8000cf8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000cca:	4b0c      	ldr	r3, [pc, #48]	; (8000cfc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000ccc:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000cce:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000cd0:	d3f6      	bcc.n	8000cc0 <CopyDataInit>
  ldr  r2, =_sbss
 8000cd2:	4a0b      	ldr	r2, [pc, #44]	; (8000d00 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000cd4:	e002      	b.n	8000cdc <LoopFillZerobss>

08000cd6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000cd6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000cd8:	f842 3b04 	str.w	r3, [r2], #4

08000cdc <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000cdc:	4b09      	ldr	r3, [pc, #36]	; (8000d04 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000cde:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000ce0:	d3f9      	bcc.n	8000cd6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000ce2:	f00a fceb 	bl	800b6bc <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000ce6:	f02d fa0b 	bl	802e100 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000cea:	f000 fd97 	bl	800181c <main>
  bx  lr    
 8000cee:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000cf0:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000cf4:	080cf56c 	.word	0x080cf56c
  ldr  r0, =_sdata
 8000cf8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000cfc:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 8000d00:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 8000d04:	20014484 	.word	0x20014484

08000d08 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000d08:	e7fe      	b.n	8000d08 <ADC_IRQHandler>
	...

08000d0c <GetSector>:

static uint32_t GetSector(uint32_t Address)
{
  uint32_t sector = 0;

  if((Address < 0x08003FFF) && (Address >= 0x08000000))
 8000d0c:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 8000d10:	f643 72fe 	movw	r2, #16382	; 0x3ffe
 8000d14:	4293      	cmp	r3, r2
 8000d16:	d905      	bls.n	8000d24 <GetSector+0x18>
  {
    sector = FLASH_SECTOR_0;
  }
  else if((Address < 0x08007FFF) && (Address >= 0x08004000))
 8000d18:	f5a3 4180 	sub.w	r1, r3, #16384	; 0x4000
 8000d1c:	4291      	cmp	r1, r2
 8000d1e:	d803      	bhi.n	8000d28 <GetSector+0x1c>
  {
    sector = FLASH_SECTOR_1;
 8000d20:	2001      	movs	r0, #1
 8000d22:	4770      	bx	lr
    sector = FLASH_SECTOR_0;
 8000d24:	2000      	movs	r0, #0
 8000d26:	4770      	bx	lr
  }
  else if((Address < 0x0800BFFF) && (Address >= 0x08008000))
 8000d28:	f5a3 4100 	sub.w	r1, r3, #32768	; 0x8000
 8000d2c:	4291      	cmp	r1, r2
 8000d2e:	d960      	bls.n	8000df2 <GetSector+0xe6>
  {
    sector = FLASH_SECTOR_2;
  }
  else if((Address < 0x0800FFFF) && (Address >= 0x0800C000))
 8000d30:	f5a3 4340 	sub.w	r3, r3, #49152	; 0xc000
 8000d34:	4293      	cmp	r3, r2
 8000d36:	d95e      	bls.n	8000df6 <GetSector+0xea>
  {
    sector = FLASH_SECTOR_3;
  }
  else if((Address < 0x0801FFFF) && (Address >= 0x08010000))
 8000d38:	f100 4377 	add.w	r3, r0, #4143972352	; 0xf7000000
 8000d3c:	f503 017f 	add.w	r1, r3, #16711680	; 0xff0000
 8000d40:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8000d44:	4291      	cmp	r1, r2
 8000d46:	d95a      	bls.n	8000dfe <GetSector+0xf2>
  {
    sector = FLASH_SECTOR_4;
  }
  else if((Address < 0x0803FFFF) && (Address >= 0x08020000))
 8000d48:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 8000d4c:	f503 017e 	add.w	r1, r3, #16646144	; 0xfe0000
 8000d50:	4291      	cmp	r1, r2
 8000d52:	d952      	bls.n	8000dfa <GetSector+0xee>
  {
    sector = FLASH_SECTOR_5;
  }
  else if((Address < 0x0805FFFF) && (Address >= 0x08040000))
 8000d54:	f503 017c 	add.w	r1, r3, #16515072	; 0xfc0000
 8000d58:	4291      	cmp	r1, r2
 8000d5a:	d952      	bls.n	8000e02 <GetSector+0xf6>
  {
    sector = FLASH_SECTOR_6;
  }
  else if((Address < 0x0807FFFF) && (Address >= 0x08060000))
 8000d5c:	f503 017a 	add.w	r1, r3, #16384000	; 0xfa0000
 8000d60:	4291      	cmp	r1, r2
 8000d62:	d950      	bls.n	8000e06 <GetSector+0xfa>
  {
    sector = FLASH_SECTOR_7;
  }
  else if((Address < 0x0809FFFF) && (Address >= 0x08080000))
 8000d64:	f503 0178 	add.w	r1, r3, #16252928	; 0xf80000
 8000d68:	4291      	cmp	r1, r2
 8000d6a:	d94e      	bls.n	8000e0a <GetSector+0xfe>
  {
    sector = FLASH_SECTOR_8;
  }
  else if((Address < 0x080BFFFF) && (Address >= 0x080A0000))
 8000d6c:	f503 0176 	add.w	r1, r3, #16121856	; 0xf60000
 8000d70:	4291      	cmp	r1, r2
 8000d72:	d94c      	bls.n	8000e0e <GetSector+0x102>
  {
    sector = FLASH_SECTOR_9;
  }
  else if((Address < 0x080DFFFF) && (Address >= 0x080C0000))
 8000d74:	f503 0174 	add.w	r1, r3, #15990784	; 0xf40000
 8000d78:	4291      	cmp	r1, r2
 8000d7a:	d94a      	bls.n	8000e12 <GetSector+0x106>
  {
    sector = FLASH_SECTOR_10;
  }
  else if((Address < 0x080FFFFF) && (Address >= 0x080E0000))
 8000d7c:	f503 0172 	add.w	r1, r3, #15859712	; 0xf20000
 8000d80:	4291      	cmp	r1, r2
 8000d82:	d948      	bls.n	8000e16 <GetSector+0x10a>
  {
    sector = FLASH_SECTOR_11;
  }
  else if((Address < 0x08103FFF) && (Address >= 0x08100000))
 8000d84:	f1a0 6001 	sub.w	r0, r0, #135266304	; 0x8100000
 8000d88:	f643 71fe 	movw	r1, #16382	; 0x3ffe
 8000d8c:	4288      	cmp	r0, r1
 8000d8e:	d944      	bls.n	8000e1a <GetSector+0x10e>
  {
    sector = FLASH_SECTOR_12;
  }
  else if((Address < 0x08107FFF) && (Address >= 0x08104000))
 8000d90:	f5a0 4c80 	sub.w	ip, r0, #16384	; 0x4000
 8000d94:	458c      	cmp	ip, r1
 8000d96:	d942      	bls.n	8000e1e <GetSector+0x112>
  {
    sector = FLASH_SECTOR_13;
  }
  else if((Address < 0x0810BFFF) && (Address >= 0x08108000))
 8000d98:	f5a0 4c00 	sub.w	ip, r0, #32768	; 0x8000
 8000d9c:	458c      	cmp	ip, r1
 8000d9e:	d940      	bls.n	8000e22 <GetSector+0x116>
  {
    sector = FLASH_SECTOR_14;
  }
  else if((Address < 0x0810FFFF) && (Address >= 0x0810C000))
 8000da0:	f5a0 4040 	sub.w	r0, r0, #49152	; 0xc000
 8000da4:	4288      	cmp	r0, r1
 8000da6:	d93e      	bls.n	8000e26 <GetSector+0x11a>
  {
    sector = FLASH_SECTOR_15;
  }
  else if((Address < 0x0811FFFF) && (Address >= 0x08110000))
 8000da8:	f503 006f 	add.w	r0, r3, #15663104	; 0xef0000
 8000dac:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8000db0:	4288      	cmp	r0, r1
 8000db2:	d93a      	bls.n	8000e2a <GetSector+0x11e>
  {
    sector = FLASH_SECTOR_16;
  }
  else if((Address < 0x0813FFFF) && (Address >= 0x08120000))
 8000db4:	f503 016e 	add.w	r1, r3, #15597568	; 0xee0000
 8000db8:	4291      	cmp	r1, r2
 8000dba:	d938      	bls.n	8000e2e <GetSector+0x122>
  {
    sector = FLASH_SECTOR_17;
  }
  else if((Address < 0x0815FFFF) && (Address >= 0x08140000))
 8000dbc:	f503 016c 	add.w	r1, r3, #15466496	; 0xec0000
 8000dc0:	4291      	cmp	r1, r2
 8000dc2:	d938      	bls.n	8000e36 <GetSector+0x12a>
  {
    sector = FLASH_SECTOR_18;
  }
  else if((Address < 0x0817FFFF) && (Address >= 0x08160000))
 8000dc4:	f503 016a 	add.w	r1, r3, #15335424	; 0xea0000
 8000dc8:	4291      	cmp	r1, r2
 8000dca:	d932      	bls.n	8000e32 <GetSector+0x126>
  {
    sector = FLASH_SECTOR_19;
  }
  else if((Address < 0x0819FFFF) && (Address >= 0x08180000))
 8000dcc:	f503 0168 	add.w	r1, r3, #15204352	; 0xe80000
 8000dd0:	4291      	cmp	r1, r2
 8000dd2:	d936      	bls.n	8000e42 <GetSector+0x136>
  {
    sector = FLASH_SECTOR_20;
  }
  else if((Address < 0x081BFFFF) && (Address >= 0x081A0000))
 8000dd4:	f503 0166 	add.w	r1, r3, #15073280	; 0xe60000
 8000dd8:	4291      	cmp	r1, r2
 8000dda:	d930      	bls.n	8000e3e <GetSector+0x132>
  {
    sector = FLASH_SECTOR_21;
  }
  else if((Address < 0x081DFFFF) && (Address >= 0x081C0000))
 8000ddc:	f503 0164 	add.w	r1, r3, #14942208	; 0xe40000
 8000de0:	4291      	cmp	r1, r2
 8000de2:	d92a      	bls.n	8000e3a <GetSector+0x12e>
  {
    sector = FLASH_SECTOR_22;
  }
  else if((Address < 0x081FFFFF) && (Address >= 0x081E0000))
 8000de4:	f503 0362 	add.w	r3, r3, #14811136	; 0xe20000
  {
    sector = FLASH_SECTOR_23;
 8000de8:	4293      	cmp	r3, r2
 8000dea:	bf94      	ite	ls
 8000dec:	2017      	movls	r0, #23
 8000dee:	2000      	movhi	r0, #0
 8000df0:	4770      	bx	lr
    sector = FLASH_SECTOR_2;
 8000df2:	2002      	movs	r0, #2
 8000df4:	4770      	bx	lr
    sector = FLASH_SECTOR_3;
 8000df6:	2003      	movs	r0, #3
 8000df8:	4770      	bx	lr
    sector = FLASH_SECTOR_5;
 8000dfa:	2005      	movs	r0, #5
 8000dfc:	4770      	bx	lr
    sector = FLASH_SECTOR_4;
 8000dfe:	2004      	movs	r0, #4
 8000e00:	4770      	bx	lr
    sector = FLASH_SECTOR_6;
 8000e02:	2006      	movs	r0, #6
 8000e04:	4770      	bx	lr
    sector = FLASH_SECTOR_7;
 8000e06:	2007      	movs	r0, #7
 8000e08:	4770      	bx	lr
    sector = FLASH_SECTOR_8;
 8000e0a:	2008      	movs	r0, #8
 8000e0c:	4770      	bx	lr
    sector = FLASH_SECTOR_9;
 8000e0e:	2009      	movs	r0, #9
 8000e10:	4770      	bx	lr
    sector = FLASH_SECTOR_10;
 8000e12:	200a      	movs	r0, #10
 8000e14:	4770      	bx	lr
    sector = FLASH_SECTOR_11;
 8000e16:	200b      	movs	r0, #11
 8000e18:	4770      	bx	lr
    sector = FLASH_SECTOR_12;
 8000e1a:	200c      	movs	r0, #12
 8000e1c:	4770      	bx	lr
    sector = FLASH_SECTOR_13;
 8000e1e:	200d      	movs	r0, #13
 8000e20:	4770      	bx	lr
    sector = FLASH_SECTOR_14;
 8000e22:	200e      	movs	r0, #14
 8000e24:	4770      	bx	lr
    sector = FLASH_SECTOR_15;
 8000e26:	200f      	movs	r0, #15
 8000e28:	4770      	bx	lr
    sector = FLASH_SECTOR_16;
 8000e2a:	2010      	movs	r0, #16
 8000e2c:	4770      	bx	lr
    sector = FLASH_SECTOR_17;
 8000e2e:	2011      	movs	r0, #17
 8000e30:	4770      	bx	lr
    sector = FLASH_SECTOR_19;
 8000e32:	2013      	movs	r0, #19
 8000e34:	4770      	bx	lr
    sector = FLASH_SECTOR_18;
 8000e36:	2012      	movs	r0, #18
 8000e38:	4770      	bx	lr
    sector = FLASH_SECTOR_22;
 8000e3a:	2016      	movs	r0, #22
  }
  return sector;
}
 8000e3c:	4770      	bx	lr
    sector = FLASH_SECTOR_21;
 8000e3e:	2015      	movs	r0, #21
 8000e40:	4770      	bx	lr
    sector = FLASH_SECTOR_20;
 8000e42:	2014      	movs	r0, #20
 8000e44:	4770      	bx	lr
 8000e46:	bf00      	nop

08000e48 <Flash_Write_Data>:
   return float_variable;
}


uint32_t Flash_Write_Data (uint32_t StartSectorAddress, uint32_t *Data, uint16_t numberofwords)
{
 8000e48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e4a:	4607      	mov	r7, r0
 8000e4c:	b083      	sub	sp, #12
 8000e4e:	4616      	mov	r6, r2
 8000e50:	460d      	mov	r5, r1
	uint32_t SECTORError;
	int sofar=0;


	 /* Unlock the Flash to enable the flash control register access *************/
	  HAL_FLASH_Unlock();
 8000e52:	f00a fdf1 	bl	800ba38 <HAL_FLASH_Unlock>

	  /* Erase the user Flash area */

	  /* Get the number of sector to erase from 1st sector */

	  uint32_t StartSector = GetSector(StartSectorAddress);
 8000e56:	4638      	mov	r0, r7
 8000e58:	f7ff ff58 	bl	8000d0c <GetSector>
 8000e5c:	4604      	mov	r4, r0
	  uint32_t EndSectorAddress = StartSectorAddress + numberofwords*4;
	  uint32_t EndSector = GetSector(EndSectorAddress);
 8000e5e:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 8000e62:	f7ff ff53 	bl	8000d0c <GetSector>

	  /* Fill EraseInit structure*/
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
	  EraseInitStruct.Sector        = StartSector;
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 8000e66:	1c43      	adds	r3, r0, #1
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8000e68:	4813      	ldr	r0, [pc, #76]	; (8000eb8 <Flash_Write_Data+0x70>)
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 8000e6a:	1b1b      	subs	r3, r3, r4
 8000e6c:	e9c0 4302 	strd	r4, r3, [r0, #8]
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8000e70:	2300      	movs	r3, #0
 8000e72:	6003      	str	r3, [r0, #0]

	  /* Note: If an erase operation in Flash memory also concerns data in the data or instruction cache,
	     you have to make sure that these data are rewritten before they are accessed during code
	     execution. If this cannot be done safely, it is recommended to flush the caches by setting the
	     DCRST and ICRST bits in the FLASH_CR register. */
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8000e74:	a901      	add	r1, sp, #4
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
 8000e76:	2302      	movs	r3, #2
 8000e78:	6103      	str	r3, [r0, #16]
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8000e7a:	f00a fe5b 	bl	800bb34 <HAL_FLASHEx_Erase>
 8000e7e:	b988      	cbnz	r0, 8000ea4 <Flash_Write_Data+0x5c>
	  }

	  /* Program the user Flash area word by word
	    (area defined by FLASH_USER_START_ADDR and FLASH_USER_END_ADDR) ***********/

	   while (sofar<numberofwords)
 8000e80:	b1a6      	cbz	r6, 8000eac <Flash_Write_Data+0x64>
 8000e82:	1b7f      	subs	r7, r7, r5
 8000e84:	4604      	mov	r4, r0
 8000e86:	3d04      	subs	r5, #4
 8000e88:	3704      	adds	r7, #4
 8000e8a:	e001      	b.n	8000e90 <Flash_Write_Data+0x48>
 8000e8c:	42a6      	cmp	r6, r4
 8000e8e:	d00d      	beq.n	8000eac <Flash_Write_Data+0x64>
 8000e90:	1979      	adds	r1, r7, r5
	   {
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000e92:	2300      	movs	r3, #0
 8000e94:	f855 2f04 	ldr.w	r2, [r5, #4]!
 8000e98:	2002      	movs	r0, #2
	     {
	    	 StartSectorAddress += 4;  // use StartPageAddress += 2 for half word and 8 for double word
	    	 sofar++;
 8000e9a:	3401      	adds	r4, #1
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000e9c:	f00a fd2a 	bl	800b8f4 <HAL_FLASH_Program>
 8000ea0:	2800      	cmp	r0, #0
 8000ea2:	d0f3      	beq.n	8000e8c <Flash_Write_Data+0x44>
	     }
	     else
	     {
	       /* Error occurred while writing data in Flash memory*/
	    	 return HAL_FLASH_GetError ();
 8000ea4:	f00a fde6 	bl	800ba74 <HAL_FLASH_GetError>
	  /* Lock the Flash to disable the flash control register access (recommended
	     to protect the FLASH memory against possible unwanted operation) *********/
	  HAL_FLASH_Lock();

	   return 0;
}
 8000ea8:	b003      	add	sp, #12
 8000eaa:	bdf0      	pop	{r4, r5, r6, r7, pc}
	  HAL_FLASH_Lock();
 8000eac:	f00a fdd8 	bl	800ba60 <HAL_FLASH_Lock>
	   return 0;
 8000eb0:	2000      	movs	r0, #0
}
 8000eb2:	b003      	add	sp, #12
 8000eb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000eb6:	bf00      	nop
 8000eb8:	20000184 	.word	0x20000184

08000ebc <Flash_Read_Data>:


void Flash_Read_Data (uint32_t StartSectorAddress, uint32_t *RxBuf, uint16_t numberofwords)
{
 8000ebc:	460b      	mov	r3, r1
 8000ebe:	3201      	adds	r2, #1
 8000ec0:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8000ec4:	1ac0      	subs	r0, r0, r3
	while (1)
	{

		*RxBuf = *(__IO uint32_t *)StartSectorAddress;
 8000ec6:	581a      	ldr	r2, [r3, r0]
 8000ec8:	f843 2b04 	str.w	r2, [r3], #4
		StartSectorAddress += 4;
		RxBuf++;
		if (!(numberofwords--)) break;
 8000ecc:	428b      	cmp	r3, r1
 8000ece:	d1fa      	bne.n	8000ec6 <Flash_Read_Data+0xa>
	}
}
 8000ed0:	4770      	bx	lr
 8000ed2:	bf00      	nop

08000ed4 <calculate_freq_and_signalstrength>:
 *are calculated.
 * @param samples Pointer to the array of input samples.
 * @return FFT structure containing the calculated main frequency and signal
 *strength.
 **/
FFT calculate_freq_and_signalstrength(float32_t input_samples[]) {
 8000ed4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ed8:	ed2d 8b02 	vpush	{d8}
 8000edc:	b088      	sub	sp, #32
 8000ede:	af00      	add	r7, sp, #0
 8000ee0:	4605      	mov	r5, r0
 8000ee2:	460e      	mov	r6, r1
    // Perform FFT using CMSIS-DSP library
    const uint8_t fft_size = MEAS_get_num_of_samples();
 8000ee4:	f001 f9fc 	bl	80022e0 <MEAS_get_num_of_samples>
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
 8000ee8:	4604      	mov	r4, r0
 8000eea:	2800      	cmp	r0, #0
 8000eec:	f000 8089 	beq.w	8001002 <calculate_freq_and_signalstrength+0x12e>
 8000ef0:	2204      	movs	r2, #4
        input_samples[i] -= 2047.5;
 8000ef2:	ed9f 7a45 	vldr	s14, [pc, #276]	; 8001008 <calculate_freq_and_signalstrength+0x134>
 8000ef6:	4633      	mov	r3, r6
 8000ef8:	fb12 6200 	smlabb	r2, r2, r0, r6
 8000efc:	edd3 7a00 	vldr	s15, [r3]
 8000f00:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000f04:	ece3 7a01 	vstmia	r3!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 8000f08:	429a      	cmp	r2, r3
 8000f0a:	d1f7      	bne.n	8000efc <calculate_freq_and_signalstrength+0x28>
    }
    // Create an array for the FFT output
    float32_t fft_complex_output[2 * fft_size];
 8000f0c:	b223      	sxth	r3, r4
 8000f0e:	00db      	lsls	r3, r3, #3
 8000f10:	ebad 0d03 	sub.w	sp, sp, r3
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
    // Create an instance of the FFT structure
    FFT fft;
    // Calculate the main frequency
    float main_frequency =
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000f14:	ee07 4a90 	vmov	s15, r4
    float32_t fft_complex_output[2 * fft_size];
 8000f18:	46e8      	mov	r8, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8000f1a:	b2a1      	uxth	r1, r4
 8000f1c:	f107 0008 	add.w	r0, r7, #8
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000f20:	eef8 8ae7 	vcvt.f32.s32	s17, s15
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8000f24:	f02a fe40 	bl	802bba8 <arm_rfft_fast_init_f32>
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8000f28:	2300      	movs	r3, #0
 8000f2a:	4631      	mov	r1, r6
 8000f2c:	f107 0008 	add.w	r0, r7, #8
 8000f30:	4642      	mov	r2, r8
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000f32:	f3c4 0647 	ubfx	r6, r4, #1, #8
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8000f36:	f02a febb 	bl	802bcb0 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000f3a:	4632      	mov	r2, r6
 8000f3c:	4641      	mov	r1, r8
 8000f3e:	4640      	mov	r0, r8
 8000f40:	f02b fb24 	bl	802c58c <arm_cmplx_mag_f32>
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8000f44:	463b      	mov	r3, r7
 8000f46:	1d3a      	adds	r2, r7, #4
 8000f48:	4631      	mov	r1, r6
 8000f4a:	4640      	mov	r0, r8
 8000f4c:	f02a fdc4 	bl	802bad8 <arm_max_f32>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000f50:	edd7 7a00 	vldr	s15, [r7]
 8000f54:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8000f58:	f001 f9c4 	bl	80022e4 <MEAS_get_samp_freq>
 8000f5c:	ee07 0a90 	vmov	s15, r0
 8000f60:	eef8 7a67 	vcvt.f32.u32	s15, s15
    uint8_t given_frequency = 0;
    // Check if the main frequency is in the range of 45-55 Hz
    if (main_frequency <= 55 && main_frequency >= 45) {
 8000f64:	ed9f 7a29 	vldr	s14, [pc, #164]	; 800100c <calculate_freq_and_signalstrength+0x138>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000f68:	ee67 7a88 	vmul.f32	s15, s15, s16
    float main_frequency =
 8000f6c:	ee87 8aa8 	vdiv.f32	s16, s15, s17
    if (main_frequency <= 55 && main_frequency >= 45) {
 8000f70:	eeb4 8ac7 	vcmpe.f32	s16, s14
 8000f74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000f78:	d817      	bhi.n	8000faa <calculate_freq_and_signalstrength+0xd6>
 8000f7a:	eddf 7a25 	vldr	s15, [pc, #148]	; 8001010 <calculate_freq_and_signalstrength+0x13c>
 8000f7e:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000f82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000f86:	db28      	blt.n	8000fda <calculate_freq_and_signalstrength+0x106>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
        // If yes, round the given frequency to 60 Hz
        given_frequency = 60;
    } else given_frequency = 0;
    // calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000f88:	f001 f9ac 	bl	80022e4 <MEAS_get_samp_freq>
 8000f8c:	2332      	movs	r3, #50	; 0x32
 8000f8e:	fb04 f303 	mul.w	r3, r4, r3
 8000f92:	fbb3 f0f0 	udiv	r0, r3, r0
    // set the signal strength to 0
    float signal_strength = 0;
    // check if the given frequency is 50 or 60 Hz
    if (given_frequency != 0) {
        // calculate the signal strength
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 8000f96:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 8000f9a:	edd0 7a00 	vldr	s15, [r0]
 8000f9e:	ee77 7aa7 	vadd.f32	s15, s15, s15
        fft.error = CALC_ERROR_NONE;
 8000fa2:	2301      	movs	r3, #1
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 8000fa4:	ee87 7aa8 	vdiv.f32	s14, s15, s17
        fft.error = CALC_ERROR_NONE;
 8000fa8:	e00b      	b.n	8000fc2 <calculate_freq_and_signalstrength+0xee>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 8000faa:	eddf 7a1a 	vldr	s15, [pc, #104]	; 8001014 <calculate_freq_and_signalstrength+0x140>
 8000fae:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000fb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000fb6:	d91c      	bls.n	8000ff2 <calculate_freq_and_signalstrength+0x11e>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000fb8:	f001 f994 	bl	80022e4 <MEAS_get_samp_freq>
    float signal_strength = 0;
 8000fbc:	ed9f 7a16 	vldr	s14, [pc, #88]	; 8001018 <calculate_freq_and_signalstrength+0x144>
    } else fft.error = CALC_ERROR_FREQUENCY;  // if the given frequency is not 50 or 60 Hz
 8000fc0:	2300      	movs	r3, #0
    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
}
 8000fc2:	4628      	mov	r0, r5
 8000fc4:	3720      	adds	r7, #32
    return fft;
 8000fc6:	ed85 8a00 	vstr	s16, [r5]
 8000fca:	ed85 7a01 	vstr	s14, [r5, #4]
 8000fce:	722b      	strb	r3, [r5, #8]
}
 8000fd0:	46bd      	mov	sp, r7
 8000fd2:	ecbd 8b02 	vpop	{d8}
 8000fd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 8000fda:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8001014 <calculate_freq_and_signalstrength+0x140>
 8000fde:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000fe2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000fe6:	d8e7      	bhi.n	8000fb8 <calculate_freq_and_signalstrength+0xe4>
 8000fe8:	eeb4 8a47 	vcmp.f32	s16, s14
 8000fec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000ff0:	d1e2      	bne.n	8000fb8 <calculate_freq_and_signalstrength+0xe4>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000ff2:	f001 f977 	bl	80022e4 <MEAS_get_samp_freq>
 8000ff6:	ebc4 1304 	rsb	r3, r4, r4, lsl #4
 8000ffa:	009b      	lsls	r3, r3, #2
 8000ffc:	fbb3 f0f0 	udiv	r0, r3, r0
    if (given_frequency != 0) {
 8001000:	e7c9      	b.n	8000f96 <calculate_freq_and_signalstrength+0xc2>
    for (uint32_t i = 0; i < fft_size; i++) {
 8001002:	4603      	mov	r3, r0
 8001004:	e784      	b.n	8000f10 <calculate_freq_and_signalstrength+0x3c>
 8001006:	bf00      	nop
 8001008:	44fff000 	.word	0x44fff000
 800100c:	425c0000 	.word	0x425c0000
 8001010:	42340000 	.word	0x42340000
 8001014:	42820000 	.word	0x42820000
 8001018:	00000000 	.word	0x00000000

0800101c <accurate_FFT>:
 * to obtain accurate results and returns the calculated values in an instance of the
 * ACCU_FFT structure.
 *
 * @return The calculated signal strength and main frequency for each channel.
 */
ACCU_FFT accurate_FFT(void){
 800101c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001020:	ed2d 8b04 	vpush	{d8-d9}
 8001024:	b0e3      	sub	sp, #396	; 0x18c
 8001026:	af00      	add	r7, sp, #0
 8001028:	6078      	str	r0, [r7, #4]
    float32_t accu_strength_HSR[ACCURATE_MEASUREMENT_LOOPS];
    float32_t accu_strength_HSL[ACCURATE_MEASUREMENT_LOOPS];

    uint32_t* samples;

    uint8_t buffer_size = MEAS_get_num_of_samples();
 800102a:	f001 f959 	bl	80022e0 <MEAS_get_num_of_samples>
    float32_t samples_PR[buffer_size];
 800102e:	b203      	sxth	r3, r0
 8001030:	009b      	lsls	r3, r3, #2
 8001032:	3307      	adds	r3, #7
 8001034:	f023 0307 	bic.w	r3, r3, #7
 8001038:	ebad 0d03 	sub.w	sp, sp, r3
 800103c:	466a      	mov	r2, sp
    float32_t samples_PL[buffer_size];
 800103e:	ebad 0d03 	sub.w	sp, sp, r3
    float32_t samples_PR[buffer_size];
 8001042:	ee08 2a10 	vmov	s16, r2
    float32_t samples_PL[buffer_size];
 8001046:	466a      	mov	r2, sp
    float32_t samples_HSR[buffer_size];
 8001048:	ebad 0d03 	sub.w	sp, sp, r3
    float32_t samples_PL[buffer_size];
 800104c:	ee08 2a90 	vmov	s17, r2
    float32_t samples_HSR[buffer_size];
 8001050:	466a      	mov	r2, sp
    float32_t samples_HSL[buffer_size];
 8001052:	ebad 0d03 	sub.w	sp, sp, r3
 8001056:	466b      	mov	r3, sp
 8001058:	ee09 3a90 	vmov	s19, r3
 800105c:	f107 0398 	add.w	r3, r7, #152	; 0x98
 8001060:	613b      	str	r3, [r7, #16]
 8001062:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8001066:	617b      	str	r3, [r7, #20]
 8001068:	f107 03e8 	add.w	r3, r7, #232	; 0xe8
 800106c:	60fb      	str	r3, [r7, #12]
    float32_t samples_HSR[buffer_size];
 800106e:	ee09 2a10 	vmov	s18, r2
 8001072:	f507 739c 	add.w	r3, r7, #312	; 0x138
    uint8_t buffer_size = MEAS_get_num_of_samples();
 8001076:	4682      	mov	sl, r0

    for (uint8_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++){
 8001078:	60bb      	str	r3, [r7, #8]
        // Start the measurement
        samples = MEAS_start_measure();
 800107a:	f001 f903 	bl	8002284 <MEAS_start_measure>
 800107e:	4605      	mov	r5, r0

        // Convert the samples to the specific channel
        for (uint32_t j = 0; j < buffer_size; j++) {
 8001080:	f1ba 0f00 	cmp.w	sl, #0
 8001084:	d03e      	beq.n	8001104 <accurate_FFT+0xe8>
 8001086:	ee18 9a10 	vmov	r9, s16
 800108a:	ee18 8a90 	vmov	r8, s17
 800108e:	ee19 6a10 	vmov	r6, s18
 8001092:	ee19 ba90 	vmov	fp, s19
 8001096:	2400      	movs	r4, #0
            samples_PR[j] = (float32_t)samples[j * MEAS_get_num_of_chan()];
 8001098:	f001 f920 	bl	80022dc <MEAS_get_num_of_chan>
 800109c:	fb04 f000 	mul.w	r0, r4, r0
 80010a0:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010a4:	edd3 7a00 	vldr	s15, [r3]
 80010a8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010ac:	ece9 7a01 	vstmia	r9!, {s15}
            samples_PL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 1];
 80010b0:	f001 f914 	bl	80022dc <MEAS_get_num_of_chan>
 80010b4:	fb04 f000 	mul.w	r0, r4, r0
 80010b8:	3001      	adds	r0, #1
 80010ba:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010be:	edd3 7a00 	vldr	s15, [r3]
 80010c2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010c6:	ece8 7a01 	vstmia	r8!, {s15}
            samples_HSR[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 2];
 80010ca:	f001 f907 	bl	80022dc <MEAS_get_num_of_chan>
 80010ce:	fb04 f000 	mul.w	r0, r4, r0
 80010d2:	3002      	adds	r0, #2
 80010d4:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010d8:	edd3 7a00 	vldr	s15, [r3]
 80010dc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010e0:	ece6 7a01 	vstmia	r6!, {s15}
            samples_HSL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 3];
 80010e4:	f001 f8fa 	bl	80022dc <MEAS_get_num_of_chan>
 80010e8:	fb04 f000 	mul.w	r0, r4, r0
 80010ec:	3003      	adds	r0, #3
 80010ee:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010f2:	edd3 7a00 	vldr	s15, [r3]
        for (uint32_t j = 0; j < buffer_size; j++) {
 80010f6:	3401      	adds	r4, #1
            samples_HSL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 3];
 80010f8:	eef8 7a67 	vcvt.f32.u32	s15, s15
        for (uint32_t j = 0; j < buffer_size; j++) {
 80010fc:	45a2      	cmp	sl, r4
            samples_HSL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 3];
 80010fe:	eceb 7a01 	vstmia	fp!, {s15}
        for (uint32_t j = 0; j < buffer_size; j++) {
 8001102:	d1c9      	bne.n	8001098 <accurate_FFT+0x7c>
        }
        // Calculate the Signal Strength and the main frequency for each channel using FFT

        fft = calculate_freq_and_signalstrength(samples_PR);
 8001104:	ee18 1a10 	vmov	r1, s16
 8001108:	f107 001c 	add.w	r0, r7, #28
 800110c:	f7ff fee2 	bl	8000ed4 <calculate_freq_and_signalstrength>
        accu_strength_PR[i] = fft.signal_strength;
 8001110:	697c      	ldr	r4, [r7, #20]
 8001112:	6a3b      	ldr	r3, [r7, #32]
 8001114:	f844 3b04 	str.w	r3, [r4], #4
        fft = calculate_freq_and_signalstrength(samples_PL);
 8001118:	ee18 1a90 	vmov	r1, s17
 800111c:	f107 001c 	add.w	r0, r7, #28
        accu_strength_PR[i] = fft.signal_strength;
 8001120:	617c      	str	r4, [r7, #20]
        fft = calculate_freq_and_signalstrength(samples_PL);
 8001122:	f7ff fed7 	bl	8000ed4 <calculate_freq_and_signalstrength>
        accu_strength_PL[i] = fft.signal_strength;
 8001126:	693a      	ldr	r2, [r7, #16]
 8001128:	6a3b      	ldr	r3, [r7, #32]
 800112a:	f842 3b04 	str.w	r3, [r2], #4
        fft = calculate_freq_and_signalstrength(samples_HSR);
 800112e:	ee19 1a10 	vmov	r1, s18
 8001132:	f107 001c 	add.w	r0, r7, #28
        accu_strength_PL[i] = fft.signal_strength;
 8001136:	613a      	str	r2, [r7, #16]
        fft = calculate_freq_and_signalstrength(samples_HSR);
 8001138:	f7ff fecc 	bl	8000ed4 <calculate_freq_and_signalstrength>
        accu_strength_HSR[i] = fft.signal_strength;
 800113c:	68fa      	ldr	r2, [r7, #12]
 800113e:	6a3b      	ldr	r3, [r7, #32]
 8001140:	f842 3b04 	str.w	r3, [r2], #4
        fft = calculate_freq_and_signalstrength(samples_HSL);
 8001144:	ee19 1a90 	vmov	r1, s19
 8001148:	f107 001c 	add.w	r0, r7, #28
        accu_strength_HSR[i] = fft.signal_strength;
 800114c:	60fa      	str	r2, [r7, #12]
        fft = calculate_freq_and_signalstrength(samples_HSL);
 800114e:	f7ff fec1 	bl	8000ed4 <calculate_freq_and_signalstrength>
        accu_strength_HSL[i] = fft.signal_strength;
 8001152:	68ba      	ldr	r2, [r7, #8]
 8001154:	6a3b      	ldr	r3, [r7, #32]
 8001156:	f842 3b04 	str.w	r3, [r2], #4
    for (uint8_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++){
 800115a:	f107 0398 	add.w	r3, r7, #152	; 0x98
 800115e:	429c      	cmp	r4, r3
        accu_strength_HSL[i] = fft.signal_strength;
 8001160:	60ba      	str	r2, [r7, #8]
    for (uint8_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++){
 8001162:	d18a      	bne.n	800107a <accurate_FFT+0x5e>
        //current[i] = single_meas.current;
    }
    arm_mean_f32(accu_strength_PR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pr);
 8001164:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8001168:	f107 0048 	add.w	r0, r7, #72	; 0x48
 800116c:	2114      	movs	r1, #20
 800116e:	f02a fc7f 	bl	802ba70 <arm_mean_f32>
    arm_std_f32(accu_strength_PR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pr_std_dev);
 8001172:	f107 0048 	add.w	r0, r7, #72	; 0x48
 8001176:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 800117a:	2114      	movs	r1, #20
 800117c:	f02a fc04 	bl	802b988 <arm_std_f32>
    arm_mean_f32(accu_strength_PL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pl);
 8001180:	f107 0230 	add.w	r2, r7, #48	; 0x30
 8001184:	f107 0098 	add.w	r0, r7, #152	; 0x98
 8001188:	2114      	movs	r1, #20
 800118a:	f02a fc71 	bl	802ba70 <arm_mean_f32>
    arm_std_f32(accu_strength_PL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pl_std_dev);
 800118e:	f107 0234 	add.w	r2, r7, #52	; 0x34
 8001192:	f107 0098 	add.w	r0, r7, #152	; 0x98
 8001196:	2114      	movs	r1, #20
 8001198:	f02a fbf6 	bl	802b988 <arm_std_f32>
    arm_mean_f32(accu_strength_HSR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsr);
 800119c:	f107 0238 	add.w	r2, r7, #56	; 0x38
 80011a0:	f107 00e8 	add.w	r0, r7, #232	; 0xe8
 80011a4:	2114      	movs	r1, #20
 80011a6:	f02a fc63 	bl	802ba70 <arm_mean_f32>
    arm_std_f32(accu_strength_HSR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsr_std_dev);
 80011aa:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 80011ae:	f107 00e8 	add.w	r0, r7, #232	; 0xe8
 80011b2:	2114      	movs	r1, #20
 80011b4:	f02a fbe8 	bl	802b988 <arm_std_f32>
    arm_mean_f32(accu_strength_HSL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsl);
 80011b8:	f107 0240 	add.w	r2, r7, #64	; 0x40
 80011bc:	f507 709c 	add.w	r0, r7, #312	; 0x138
 80011c0:	2114      	movs	r1, #20
 80011c2:	f02a fc55 	bl	802ba70 <arm_mean_f32>
    arm_std_f32(accu_strength_HSL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsl_std_dev);

    return accu_fft;
 80011c6:	f107 0428 	add.w	r4, r7, #40	; 0x28
    arm_std_f32(accu_strength_HSL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsl_std_dev);
 80011ca:	f107 0244 	add.w	r2, r7, #68	; 0x44
 80011ce:	f507 709c 	add.w	r0, r7, #312	; 0x138
 80011d2:	2114      	movs	r1, #20
 80011d4:	f02a fbd8 	bl	802b988 <arm_std_f32>
    return accu_fft;
 80011d8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80011da:	687e      	ldr	r6, [r7, #4]
 80011dc:	4635      	mov	r5, r6
 80011de:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80011e0:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
}
 80011e4:	f507 77c6 	add.w	r7, r7, #396	; 0x18c
    return accu_fft;
 80011e8:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
}
 80011ec:	4630      	mov	r0, r6
 80011ee:	46bd      	mov	sp, r7
 80011f0:	ecbd 8b04 	vpop	{d8-d9}
 80011f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080011f8 <single_measurement>:
 * calculate the distance and angle. The current is currently not calculated and is set to 0.
 *
 * @param samples Pointer to the array of samples.
 * @return The SINGLE_MEAS structure containing the calculated values.
 */
SINGLE_MEAS single_measurement(uint32_t* samples) {
 80011f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80011fc:	ed2d 8b08 	vpush	{d8-d11}
 8001200:	b08d      	sub	sp, #52	; 0x34
 8001202:	af00      	add	r7, sp, #0
 8001204:	4605      	mov	r5, r0
    // Create an instance of the SINGLE_MEAS structure
    SINGLE_MEAS single_meas;
    // Create an instance of the FFT structure
    FFT fft;

    uint8_t buffer_size = MEAS_get_num_of_samples();
 8001206:	f001 f86b 	bl	80022e0 <MEAS_get_num_of_samples>
    float32_t samples_PR[buffer_size];
 800120a:	b203      	sxth	r3, r0
 800120c:	009b      	lsls	r3, r3, #2
 800120e:	3307      	adds	r3, #7
 8001210:	f023 0307 	bic.w	r3, r3, #7
 8001214:	ebad 0d03 	sub.w	sp, sp, r3
 8001218:	466a      	mov	r2, sp
    float32_t samples_PL[buffer_size];
 800121a:	ebad 0d03 	sub.w	sp, sp, r3
    float32_t samples_PR[buffer_size];
 800121e:	ee08 2a10 	vmov	s16, r2
    float32_t samples_PL[buffer_size];
 8001222:	466a      	mov	r2, sp
    float32_t samples_HSR[buffer_size];
 8001224:	ebad 0d03 	sub.w	sp, sp, r3
    float32_t samples_PL[buffer_size];
 8001228:	ee08 2a90 	vmov	s17, r2
    float32_t samples_HSR[buffer_size];
 800122c:	466a      	mov	r2, sp
    float32_t samples_HSL[buffer_size];
 800122e:	ebad 0d03 	sub.w	sp, sp, r3
 8001232:	466b      	mov	r3, sp
    float32_t samples_HSR[buffer_size];
 8001234:	ee09 2a90 	vmov	s19, r2
    float32_t samples_HSL[buffer_size];
 8001238:	ee0b 3a10 	vmov	s22, r3

    // Convert the samples to the specific channel
    for (uint32_t i = 0; i < buffer_size; i++) {
 800123c:	b3e8      	cbz	r0, 80012ba <single_measurement+0xc2>
 800123e:	ee18 9a10 	vmov	r9, s16
 8001242:	ee18 8a90 	vmov	r8, s17
 8001246:	4682      	mov	sl, r0
 8001248:	4616      	mov	r6, r2
 800124a:	469b      	mov	fp, r3
 800124c:	2400      	movs	r4, #0
        samples_PR[i] = (float32_t)samples[i * MEAS_get_num_of_chan()];
 800124e:	f001 f845 	bl	80022dc <MEAS_get_num_of_chan>
 8001252:	fb04 f000 	mul.w	r0, r4, r0
 8001256:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 800125a:	edd3 7a00 	vldr	s15, [r3]
 800125e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001262:	ece9 7a01 	vstmia	r9!, {s15}
        samples_PL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 1];
 8001266:	f001 f839 	bl	80022dc <MEAS_get_num_of_chan>
 800126a:	fb04 f000 	mul.w	r0, r4, r0
 800126e:	3001      	adds	r0, #1
 8001270:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 8001274:	edd3 7a00 	vldr	s15, [r3]
 8001278:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800127c:	ece8 7a01 	vstmia	r8!, {s15}
        samples_HSR[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 2];
 8001280:	f001 f82c 	bl	80022dc <MEAS_get_num_of_chan>
 8001284:	fb04 f000 	mul.w	r0, r4, r0
 8001288:	3002      	adds	r0, #2
 800128a:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 800128e:	edd3 7a00 	vldr	s15, [r3]
 8001292:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001296:	ece6 7a01 	vstmia	r6!, {s15}
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 800129a:	f001 f81f 	bl	80022dc <MEAS_get_num_of_chan>
 800129e:	fb04 f000 	mul.w	r0, r4, r0
 80012a2:	3003      	adds	r0, #3
 80012a4:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80012a8:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < buffer_size; i++) {
 80012ac:	3401      	adds	r4, #1
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 80012ae:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < buffer_size; i++) {
 80012b2:	45a2      	cmp	sl, r4
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 80012b4:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < buffer_size; i++) {
 80012b8:	d1c9      	bne.n	800124e <single_measurement+0x56>
    }
    // Calculate the Signal Strength and the main frequency for each channel using FFT
    fft = calculate_freq_and_signalstrength(samples_PR);
 80012ba:	ee18 1a10 	vmov	r1, s16
 80012be:	f107 0014 	add.w	r0, r7, #20
 80012c2:	f7ff fe07 	bl	8000ed4 <calculate_freq_and_signalstrength>
    float32_t signal_strength_PR = fft.signal_strength;
    float32_t main_frequency_PR = fft.main_freq;
    fft = calculate_freq_and_signalstrength(samples_PL);
 80012c6:	ee18 1a90 	vmov	r1, s17
 80012ca:	f107 0014 	add.w	r0, r7, #20
    fft = calculate_freq_and_signalstrength(samples_PR);
 80012ce:	ed97 aa06 	vldr	s20, [r7, #24]
 80012d2:	ed97 9a05 	vldr	s18, [r7, #20]
    fft = calculate_freq_and_signalstrength(samples_PL);
 80012d6:	f7ff fdfd 	bl	8000ed4 <calculate_freq_and_signalstrength>
    float32_t signal_strength_PL = fft.signal_strength;
    float32_t main_frequency_PL = fft.main_freq;
    fft = calculate_freq_and_signalstrength(samples_HSR);
 80012da:	ee19 1a90 	vmov	r1, s19
 80012de:	f107 0014 	add.w	r0, r7, #20
    fft = calculate_freq_and_signalstrength(samples_PL);
 80012e2:	edd7 9a06 	vldr	s19, [r7, #24]
 80012e6:	edd7 aa05 	vldr	s21, [r7, #20]
    fft = calculate_freq_and_signalstrength(samples_HSR);
 80012ea:	f7ff fdf3 	bl	8000ed4 <calculate_freq_and_signalstrength>
    float32_t signal_strength_HSR = fft.signal_strength;
    fft = calculate_freq_and_signalstrength(samples_HSL);
 80012ee:	ee1b 1a10 	vmov	r1, s22
 80012f2:	f107 0014 	add.w	r0, r7, #20
 80012f6:	f7ff fded 	bl	8000ed4 <calculate_freq_and_signalstrength>

    // Create an instance of the DISTANCE_ANGLE structure
    DISTANCE_ANGLE dist_angle;

    // Calculate the distance using the coefficients and the actual signal strength
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 80012fa:	4a29      	ldr	r2, [pc, #164]	; (80013a0 <single_measurement+0x1a8>)
    // Set the calculated values
    dist_angle.distance_r = calc_distance;

    // Calculate the distance using the coefficients and the actual signal strength
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 80012fc:	4b29      	ldr	r3, [pc, #164]	; (80013a4 <single_measurement+0x1ac>)
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 80012fe:	ed92 7a00 	vldr	s14, [r2]
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 8001302:	edd3 7a00 	vldr	s15, [r3]
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 8001306:	4a28      	ldr	r2, [pc, #160]	; (80013a8 <single_measurement+0x1b0>)
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 8001308:	4b28      	ldr	r3, [pc, #160]	; (80013ac <single_measurement+0x1b4>)
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 800130a:	ee87 8a0a 	vdiv.f32	s16, s14, s20
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 800130e:	edd3 6a00 	vldr	s13, [r3]
 8001312:	4b27      	ldr	r3, [pc, #156]	; (80013b0 <single_measurement+0x1b8>)
 8001314:	eec7 8aa9 	vdiv.f32	s17, s15, s19
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 8001318:	ee2a aa0a 	vmul.f32	s20, s20, s20
 800131c:	edd2 7a00 	vldr	s15, [r2]
 8001320:	4a24      	ldr	r2, [pc, #144]	; (80013b4 <single_measurement+0x1bc>)
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 8001322:	ee69 9aa9 	vmul.f32	s19, s19, s19
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 8001326:	ee87 7a8a 	vdiv.f32	s14, s15, s20
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 800132a:	eec6 7aa9 	vdiv.f32	s15, s13, s19
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 800132e:	ed92 6a00 	vldr	s12, [r2]
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 8001332:	edd3 6a00 	vldr	s13, [r3]
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 8001336:	ee38 8a06 	vadd.f32	s16, s16, s12
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 800133a:	ee78 8aa6 	vadd.f32	s17, s17, s13
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 800133e:	ee38 8a07 	vadd.f32	s16, s16, s14
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 8001342:	ee78 8aa7 	vadd.f32	s17, s17, s15

    // Calculate the distance
    dist_angle.distance = (dist_angle.distance_l + dist_angle.distance_r) / 2;

    // Calculate the angle using the trigonometry
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 8001346:	ee78 7ac8 	vsub.f32	s15, s17, s16
    dist_angle.distance = (dist_angle.distance_l + dist_angle.distance_r) / 2;
 800134a:	ee38 8a28 	vadd.f32	s16, s16, s17
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 800134e:	ee17 0a90 	vmov	r0, s15
 8001352:	f7ff fa8b 	bl	800086c <__aeabi_f2d>
 8001356:	a310      	add	r3, pc, #64	; (adr r3, 8001398 <single_measurement+0x1a0>)
 8001358:	e9d3 2300 	ldrd	r2, r3, [r3]
 800135c:	f7fe fff8 	bl	8000350 <__aeabi_dmul>
 8001360:	f7ff fadc 	bl	800091c <__aeabi_d2f>
 8001364:	ee00 0a10 	vmov	s0, r0
 8001368:	f02b fd26 	bl	802cdb8 <atanf>
    dist_angle.distance = (dist_angle.distance_l + dist_angle.distance_r) / 2;
 800136c:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 8001370:	ed9f 7a11 	vldr	s14, [pc, #68]	; 80013b8 <single_measurement+0x1c0>
    return single_meas;
 8001374:	eddf 1a11 	vldr	s3, [pc, #68]	; 80013bc <single_measurement+0x1c4>
    single_meas.frequency = (main_frequency_PR + main_frequency_PL) / 2;
 8001378:	ee39 1a2a 	vadd.f32	s2, s18, s21
    dist_angle.distance = (dist_angle.distance_l + dist_angle.distance_r) / 2;
 800137c:	ee28 8a27 	vmul.f32	s16, s16, s15
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 8001380:	ee60 0a07 	vmul.f32	s1, s0, s14
    single_meas.frequency = (main_frequency_PR + main_frequency_PL) / 2;
 8001384:	ee21 1a27 	vmul.f32	s2, s2, s15
}
 8001388:	eeb0 0a48 	vmov.f32	s0, s16
 800138c:	3734      	adds	r7, #52	; 0x34
 800138e:	46bd      	mov	sp, r7
 8001390:	ecbd 8b08 	vpop	{d8-d11}
 8001394:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001398:	a8ef1b4a 	.word	0xa8ef1b4a
 800139c:	3f99fd66 	.word	0x3f99fd66
 80013a0:	200001a4 	.word	0x200001a4
 80013a4:	200001a0 	.word	0x200001a0
 80013a8:	200001ac 	.word	0x200001ac
 80013ac:	200001a8 	.word	0x200001a8
 80013b0:	20000198 	.word	0x20000198
 80013b4:	2000019c 	.word	0x2000019c
 80013b8:	42652ee0 	.word	0x42652ee0
 80013bc:	00000000 	.word	0x00000000

080013c0 <calculate_coefficients_single_pad>:
    // s = x_0, x_1, x_2 d= y_0, y_1, y_2
    // Calculate the coefficients for the distance approximation from an approximation based on a second degree polynomial
    // a=((x_0^(2)*(x_1-x_2)*y_0-x_0*(x_1^(2)*y_1-x_2^(2)*y_2)+x_1*(x_1*y_1-x_2*y_2)*x_2)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS

    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 80013c0:	ed90 6a02 	vldr	s12, [r0, #8]
 80013c4:	edd0 7a01 	vldr	s15, [r0, #4]
 80013c8:	ed90 5a00 	vldr	s10, [r0]
 80013cc:	ed91 7a02 	vldr	s14, [r1, #8]
 80013d0:	edd1 4a00 	vldr	s9, [r1]
 80013d4:	ed91 4a01 	vldr	s8, [r1, #4]
 80013d8:	ee66 6a06 	vmul.f32	s13, s12, s12
 80013dc:	ee77 5ac6 	vsub.f32	s11, s15, s12
 80013e0:	ee65 4a24 	vmul.f32	s9, s10, s9
 80013e4:	ee66 6a87 	vmul.f32	s13, s13, s14
 80013e8:	ee27 7a46 	vnmul.f32	s14, s14, s12
 80013ec:	eee5 6aa4 	vfma.f32	s13, s11, s9
 80013f0:	eea7 7a84 	vfma.f32	s14, s15, s8
 80013f4:	ee67 3aa7 	vmul.f32	s7, s15, s15
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80013f8:	ee77 4a86 	vadd.f32	s9, s15, s12
 80013fc:	eee4 6a63 	vfms.f32	s13, s8, s7
 8001400:	ee67 7a86 	vmul.f32	s15, s15, s12
 8001404:	ee35 6a64 	vsub.f32	s12, s10, s9
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8001408:	ee27 7a27 	vmul.f32	s14, s14, s15
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800140c:	eee5 7a06 	vfma.f32	s15, s10, s12
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8001410:	eea5 7a26 	vfma.f32	s14, s10, s13
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001414:	ee65 5aa7 	vmul.f32	s11, s11, s15
 8001418:	eec7 7a25 	vdiv.f32	s15, s14, s11
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 800141c:	edc2 7a00 	vstr	s15, [r2]
    // b = ((−(x_0^(2)*(x_1^(2)*(y_0-y_1)-x_2^(2)*(y_0-y_2))+x_1^(2)*x_2^(2)*(y_1-y_2)))/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS

    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001420:	edd0 7a01 	vldr	s15, [r0, #4]
 8001424:	ed91 3a01 	vldr	s6, [r1, #4]
 8001428:	ed91 7a00 	vldr	s14, [r1]
 800142c:	edd0 6a02 	vldr	s13, [r0, #8]
 8001430:	edd1 5a02 	vldr	s11, [r1, #8]
 8001434:	edd0 4a00 	vldr	s9, [r0]
 8001438:	ee67 2aa7 	vmul.f32	s5, s15, s15
 800143c:	ee33 6a47 	vsub.f32	s12, s6, s14
 8001440:	ee26 5aa6 	vmul.f32	s10, s13, s13
 8001444:	ee37 7a65 	vsub.f32	s14, s14, s11
 8001448:	ee26 6a22 	vmul.f32	s12, s12, s5
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800144c:	ee77 3aa6 	vadd.f32	s7, s15, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001450:	eea7 6a05 	vfma.f32	s12, s14, s10
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001454:	ee27 4aa6 	vmul.f32	s8, s15, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001458:	ee24 7aa4 	vmul.f32	s14, s9, s9
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800145c:	ee74 3ae3 	vsub.f32	s7, s9, s7
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001460:	ee25 5a22 	vmul.f32	s10, s10, s5
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001464:	eea4 4aa3 	vfma.f32	s8, s9, s7
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001468:	ee75 5ac3 	vsub.f32	s11, s11, s6
 800146c:	ee27 7a06 	vmul.f32	s14, s14, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001470:	ee77 7ae6 	vsub.f32	s15, s15, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001474:	eea5 7a25 	vfma.f32	s14, s10, s11
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001478:	ee67 7a84 	vmul.f32	s15, s15, s8
 800147c:	eec7 6a27 	vdiv.f32	s13, s14, s15
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001480:	edc3 6a00 	vstr	s13, [r3]

    // c=((x_0*(x_0*(x_1*(y_0-y_1)-x_2*(y_0-y_2))+x_1*x_2*(y_1-y_2))*x_1*x_2)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8001484:	edd1 7a00 	vldr	s15, [r1]
 8001488:	ed91 4a02 	vldr	s8, [r1, #8]
 800148c:	ed90 6a02 	vldr	s12, [r0, #8]
 8001490:	edd1 6a01 	vldr	s13, [r1, #4]
 8001494:	ed90 7a01 	vldr	s14, [r0, #4]
 8001498:	9b00      	ldr	r3, [sp, #0]
 800149a:	ee74 5a67 	vsub.f32	s11, s8, s15
 800149e:	ee77 4ae6 	vsub.f32	s9, s15, s13
 80014a2:	ee65 5a86 	vmul.f32	s11, s11, s12
 80014a6:	edd0 7a00 	vldr	s15, [r0]
 80014aa:	eee7 5a24 	vfma.f32	s11, s14, s9
 80014ae:	ee27 5a06 	vmul.f32	s10, s14, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80014b2:	ee77 4a06 	vadd.f32	s9, s14, s12
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80014b6:	ee76 6ac4 	vsub.f32	s13, s13, s8
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80014ba:	ee77 4ae4 	vsub.f32	s9, s15, s9
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80014be:	ee66 6a85 	vmul.f32	s13, s13, s10
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80014c2:	eea7 5aa4 	vfma.f32	s10, s15, s9
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80014c6:	eee7 6aa5 	vfma.f32	s13, s15, s11
 80014ca:	ee67 7a87 	vmul.f32	s15, s15, s14
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80014ce:	ee37 7a46 	vsub.f32	s14, s14, s12
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80014d2:	ee67 7a86 	vmul.f32	s15, s15, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80014d6:	ee27 7a05 	vmul.f32	s14, s14, s10
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80014da:	ee67 7aa6 	vmul.f32	s15, s15, s13
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80014de:	eec7 6a87 	vdiv.f32	s13, s15, s14
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80014e2:	edc3 6a00 	vstr	s13, [r3]
}
 80014e6:	4770      	bx	lr

080014e8 <start_calibration>:
    float32_t signal_pr[3] = {Calibration_Data[3], Calibration_Data[4], Calibration_Data[5]};
 80014e8:	4b4a      	ldr	r3, [pc, #296]	; (8001614 <start_calibration+0x12c>)
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 80014ea:	eddf 0a4b 	vldr	s1, [pc, #300]	; 8001618 <start_calibration+0x130>
    float32_t signal_pr[3] = {Calibration_Data[3], Calibration_Data[4], Calibration_Data[5]};
 80014ee:	ed93 7a05 	vldr	s14, [r3, #20]
 80014f2:	edd3 7a04 	vldr	s15, [r3, #16]
 80014f6:	ed93 6a03 	vldr	s12, [r3, #12]
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80014fa:	eddf 3a48 	vldr	s7, [pc, #288]	; 800161c <start_calibration+0x134>
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 80014fe:	ed9f 2a48 	vldr	s4, [pc, #288]	; 8001620 <start_calibration+0x138>
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001502:	ed9f 0a48 	vldr	s0, [pc, #288]	; 8001624 <start_calibration+0x13c>
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8001506:	ed9f 4a48 	vldr	s8, [pc, #288]	; 8001628 <start_calibration+0x140>
 800150a:	eddf 1a48 	vldr	s3, [pc, #288]	; 800162c <start_calibration+0x144>
    float32_t distance[3] = {10, 50, 100};
 800150e:	4a48      	ldr	r2, [pc, #288]	; (8001630 <start_calibration+0x148>)
    float32_t signal_pr[3] = {Calibration_Data[3], Calibration_Data[4], Calibration_Data[5]};
 8001510:	eef8 6a47 	vcvt.f32.u32	s13, s14
 8001514:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001518:	eeb8 6a46 	vcvt.f32.u32	s12, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800151c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8001520:	ee27 5aa6 	vmul.f32	s10, s15, s13
 8001524:	ee36 7a47 	vsub.f32	s14, s12, s14
 8001528:	eef0 5a45 	vmov.f32	s11, s10
 800152c:	eee6 5a07 	vfma.f32	s11, s12, s14
{
 8001530:	b510      	push	{r4, lr}
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8001532:	ee37 3ae6 	vsub.f32	s6, s15, s13
 8001536:	ee27 1aa7 	vmul.f32	s2, s15, s15
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800153a:	ee63 5a25 	vmul.f32	s11, s6, s11
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 800153e:	ee20 7ae6 	vnmul.f32	s14, s1, s13
 8001542:	eef7 4a00 	vmov.f32	s9, #112	; 0x3f800000  1.0
 8001546:	eec4 2aa5 	vdiv.f32	s5, s9, s11
    float32_t distance[3] = {10, 50, 100};
 800154a:	ca07      	ldmia	r2, {r0, r1, r2}
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 800154c:	4c39      	ldr	r4, [pc, #228]	; (8001634 <start_calibration+0x14c>)
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 800154e:	ee66 4aa6 	vmul.f32	s9, s13, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001552:	ee61 3a23 	vmul.f32	s7, s2, s7
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8001556:	eea7 7a82 	vfma.f32	s14, s15, s4
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 800155a:	eee4 3a80 	vfma.f32	s7, s9, s0
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 800155e:	ee26 4a84 	vmul.f32	s8, s13, s8
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8001562:	ee66 5a06 	vmul.f32	s11, s12, s12
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8001566:	eea7 4aa1 	vfma.f32	s8, s15, s3
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 800156a:	ee62 1a41 	vnmul.f32	s3, s4, s2
 800156e:	ee25 3a83 	vmul.f32	s6, s11, s6
 8001572:	ee25 7a07 	vmul.f32	s14, s10, s14
{
 8001576:	ed2d 8b02 	vpush	{d8}
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 800157a:	ed9f 0a2f 	vldr	s0, [pc, #188]	; 8001638 <start_calibration+0x150>
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 800157e:	ee65 5aa3 	vmul.f32	s11, s11, s7
 8001582:	eeb2 8a04 	vmov.f32	s16, #36	; 0x41200000  10.0
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8001586:	eef0 3a61 	vmov.f32	s7, s3
 800158a:	eee4 3aa0 	vfma.f32	s7, s9, s1
{
 800158e:	b088      	sub	sp, #32
    float32_t distance[3] = {10, 50, 100};
 8001590:	f10d 0c08 	add.w	ip, sp, #8
 8001594:	eea3 7a08 	vfma.f32	s14, s6, s16
 8001598:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 800159c:	ee25 5a00 	vmul.f32	s10, s10, s0
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80015a0:	ee64 4a81 	vmul.f32	s9, s9, s2
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80015a4:	eea6 5a04 	vfma.f32	s10, s12, s8
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 80015a8:	4a24      	ldr	r2, [pc, #144]	; (800163c <start_calibration+0x154>)
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80015aa:	4825      	ldr	r0, [pc, #148]	; (8001640 <start_calibration+0x158>)
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80015ac:	ee66 7a27 	vmul.f32	s15, s12, s15
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 80015b0:	eea6 7a23 	vfma.f32	s14, s12, s7
    calculate_coefficients_single_pad(signal_pl, distance, &a_l, &b_l, &c_l);
 80015b4:	4661      	mov	r1, ip
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80015b6:	eee4 5a82 	vfma.f32	s11, s9, s4
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80015ba:	ee67 7aa6 	vmul.f32	s15, s15, s13
    float32_t signal_pl[3] = {Calibration_Data[0], Calibration_Data[1], Calibration_Data[2]};
 80015be:	edd3 6a00 	vldr	s13, [r3]
 80015c2:	ed93 6a01 	vldr	s12, [r3, #4]
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80015c6:	ee67 7a85 	vmul.f32	s15, s15, s10
    float32_t signal_pl[3] = {Calibration_Data[0], Calibration_Data[1], Calibration_Data[2]};
 80015ca:	eeb8 5a66 	vcvt.f32.u32	s10, s13
 80015ce:	edd3 6a02 	vldr	s13, [r3, #8]
    calculate_coefficients_single_pad(signal_pl, distance, &a_l, &b_l, &c_l);
 80015d2:	4b1c      	ldr	r3, [pc, #112]	; (8001644 <start_calibration+0x15c>)
 80015d4:	9300      	str	r3, [sp, #0]
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80015d6:	ee27 7a22 	vmul.f32	s14, s14, s5
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80015da:	ee62 5aa5 	vmul.f32	s11, s5, s11
    float32_t signal_pl[3] = {Calibration_Data[0], Calibration_Data[1], Calibration_Data[2]};
 80015de:	eeb8 6a46 	vcvt.f32.u32	s12, s12
 80015e2:	eef8 6a66 	vcvt.f32.u32	s13, s13
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80015e6:	ee67 7aa2 	vmul.f32	s15, s15, s5
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 80015ea:	ed82 7a00 	vstr	s14, [r2]
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 80015ee:	edc0 5a00 	vstr	s11, [r0]
    calculate_coefficients_single_pad(signal_pl, distance, &a_l, &b_l, &c_l);
 80015f2:	4b15      	ldr	r3, [pc, #84]	; (8001648 <start_calibration+0x160>)
 80015f4:	4a15      	ldr	r2, [pc, #84]	; (800164c <start_calibration+0x164>)
    float32_t signal_pl[3] = {Calibration_Data[0], Calibration_Data[1], Calibration_Data[2]};
 80015f6:	ed8d 5a05 	vstr	s10, [sp, #20]
    calculate_coefficients_single_pad(signal_pl, distance, &a_l, &b_l, &c_l);
 80015fa:	a805      	add	r0, sp, #20
    float32_t signal_pl[3] = {Calibration_Data[0], Calibration_Data[1], Calibration_Data[2]};
 80015fc:	ed8d 6a06 	vstr	s12, [sp, #24]
 8001600:	edcd 6a07 	vstr	s13, [sp, #28]
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8001604:	edc4 7a00 	vstr	s15, [r4]
    calculate_coefficients_single_pad(signal_pl, distance, &a_l, &b_l, &c_l);
 8001608:	f7ff feda 	bl	80013c0 <calculate_coefficients_single_pad>
}
 800160c:	b008      	add	sp, #32
 800160e:	ecbd 8b02 	vpop	{d8}
 8001612:	bd10      	pop	{r4, pc}
 8001614:	200001b0 	.word	0x200001b0
 8001618:	42c80000 	.word	0x42c80000
 800161c:	42200000 	.word	0x42200000
 8001620:	42480000 	.word	0x42480000
 8001624:	c2b40000 	.word	0xc2b40000
 8001628:	42b40000 	.word	0x42b40000
 800162c:	c2200000 	.word	0xc2200000
 8001630:	0802ec10 	.word	0x0802ec10
 8001634:	200001ac 	.word	0x200001ac
 8001638:	c2480000 	.word	0xc2480000
 800163c:	2000019c 	.word	0x2000019c
 8001640:	200001a4 	.word	0x200001a4
 8001644:	200001a8 	.word	0x200001a8
 8001648:	200001a0 	.word	0x200001a0
 800164c:	20000198 	.word	0x20000198

08001650 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001650:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001652:	2064      	movs	r0, #100	; 0x64
 8001654:	f00e f9c8 	bl	800f9e8 <osDelay>
  for(;;)
 8001658:	e7fb      	b.n	8001652 <StartDefaultTask+0x2>
 800165a:	bf00      	nop

0800165c <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 800165c:	b580      	push	{r7, lr}
 800165e:	4c10      	ldr	r4, [pc, #64]	; (80016a0 <StartTimeoutTask+0x44>)
 8001660:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80016ac <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001664:	4f0f      	ldr	r7, [pc, #60]	; (80016a4 <StartTimeoutTask+0x48>)
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8001666:	4e10      	ldr	r6, [pc, #64]	; (80016a8 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 8001668:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800166a:	2300      	movs	r3, #0
 800166c:	461a      	mov	r2, r3
 800166e:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 8001670:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8001672:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 8001676:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8001678:	f00e fab2 	bl	800fbe0 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 800167c:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 800167e:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001680:	4638      	mov	r0, r7
 8001682:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 8001684:	b912      	cbnz	r2, 800168c <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 8001686:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001688:	f00a fc28 	bl	800bedc <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800168c:	4630      	mov	r0, r6
 800168e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001692:	f00a fc27 	bl	800bee4 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 8001696:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800169a:	f00e f9a5 	bl	800f9e8 <osDelay>
	  sleep_timeout_value--;
 800169e:	e7e3      	b.n	8001668 <StartTimeoutTask+0xc>
 80016a0:	2000000c 	.word	0x2000000c
 80016a4:	40021000 	.word	0x40021000
 80016a8:	40021800 	.word	0x40021800
 80016ac:	200001e8 	.word	0x200001e8

080016b0 <gyro_disable>:
{
 80016b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80016b2:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80016b4:	4e1f      	ldr	r6, [pc, #124]	; (8001734 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80016b6:	4d20      	ldr	r5, [pc, #128]	; (8001738 <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 80016b8:	4c20      	ldr	r4, [pc, #128]	; (800173c <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80016ba:	2700      	movs	r7, #0
 80016bc:	9700      	str	r7, [sp, #0]
 80016be:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80016c0:	f043 0304 	orr.w	r3, r3, #4
 80016c4:	6333      	str	r3, [r6, #48]	; 0x30
 80016c6:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80016c8:	f003 0304 	and.w	r3, r3, #4
 80016cc:	9300      	str	r3, [sp, #0]
 80016ce:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80016d0:	682b      	ldr	r3, [r5, #0]
 80016d2:	f023 030c 	bic.w	r3, r3, #12
 80016d6:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 80016d8:	682b      	ldr	r3, [r5, #0]
 80016da:	f043 0304 	orr.w	r3, r3, #4
 80016de:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 80016e0:	69ab      	ldr	r3, [r5, #24]
 80016e2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80016e6:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 80016e8:	200a      	movs	r0, #10
 80016ea:	f00a f821 	bl	800b730 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 80016ee:	682b      	ldr	r3, [r5, #0]
 80016f0:	f043 030c 	orr.w	r3, r3, #12
 80016f4:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80016f6:	9701      	str	r7, [sp, #4]
 80016f8:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80016fa:	f043 0320 	orr.w	r3, r3, #32
 80016fe:	6333      	str	r3, [r6, #48]	; 0x30
 8001700:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001702:	f003 0320 	and.w	r3, r3, #32
 8001706:	9301      	str	r3, [sp, #4]
 8001708:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 800170a:	68a3      	ldr	r3, [r4, #8]
 800170c:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001710:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 8001712:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001714:	f023 030f 	bic.w	r3, r3, #15
 8001718:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 800171a:	68e3      	ldr	r3, [r4, #12]
 800171c:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001720:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8001722:	200a      	movs	r0, #10
 8001724:	f00a f804 	bl	800b730 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 8001728:	6823      	ldr	r3, [r4, #0]
 800172a:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 800172e:	6023      	str	r3, [r4, #0]
}
 8001730:	b003      	add	sp, #12
 8001732:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001734:	40023800 	.word	0x40023800
 8001738:	40020800 	.word	0x40020800
 800173c:	40021400 	.word	0x40021400

08001740 <setCalibrationFlashValues>:
{
 8001740:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001744:	461c      	mov	r4, r3
	uint32_t Rx_Data[numberofwords];
 8001746:	009b      	lsls	r3, r3, #2
 8001748:	3307      	adds	r3, #7
 800174a:	466d      	mov	r5, sp
 800174c:	08db      	lsrs	r3, r3, #3
 800174e:	eba5 03c3 	sub.w	r3, r5, r3, lsl #3
{
 8001752:	af00      	add	r7, sp, #0
	uint32_t Rx_Data[numberofwords];
 8001754:	469d      	mov	sp, r3
 8001756:	46e8      	mov	r8, sp
{
 8001758:	4615      	mov	r5, r2
 800175a:	460e      	mov	r6, r1
 800175c:	4681      	mov	r9, r0
	Flash_Read_Data(StartSectorAddress, Rx_Data, numberofwords);
 800175e:	4622      	mov	r2, r4
 8001760:	4641      	mov	r1, r8
 8001762:	f7ff fbab 	bl	8000ebc <Flash_Read_Data>
	Rx_Data[index] = value;
 8001766:	f848 6025 	str.w	r6, [r8, r5, lsl #2]
	Flash_Write_Data(StartSectorAddress, data_addr, numberofwords);
 800176a:	4622      	mov	r2, r4
 800176c:	4641      	mov	r1, r8
 800176e:	4648      	mov	r0, r9
 8001770:	f7ff fb6a 	bl	8000e48 <Flash_Write_Data>
	Calibration_Data[index] = value;
 8001774:	4b02      	ldr	r3, [pc, #8]	; (8001780 <setCalibrationFlashValues+0x40>)
 8001776:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
}
 800177a:	46bd      	mov	sp, r7
 800177c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001780:	200001b0 	.word	0x200001b0

08001784 <SystemClock_Config>:
{
 8001784:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001786:	2400      	movs	r4, #0
{
 8001788:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800178a:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 800178e:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001792:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8001796:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 800179a:	4a1e      	ldr	r2, [pc, #120]	; (8001814 <SystemClock_Config+0x90>)
 800179c:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800179e:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 80017a0:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80017a2:	4b1d      	ldr	r3, [pc, #116]	; (8001818 <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80017a4:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80017a8:	6411      	str	r1, [r2, #64]	; 0x40
 80017aa:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80017ac:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 80017b0:	9201      	str	r2, [sp, #4]
 80017b2:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80017b4:	9402      	str	r4, [sp, #8]
 80017b6:	681a      	ldr	r2, [r3, #0]
 80017b8:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80017bc:	601a      	str	r2, [r3, #0]
 80017be:	681b      	ldr	r3, [r3, #0]
 80017c0:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80017c4:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80017c6:	2201      	movs	r2, #1
 80017c8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80017cc:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 80017d0:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80017d2:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 80017d4:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80017d6:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 80017da:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80017de:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 80017e2:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80017e4:	2202      	movs	r2, #2
 80017e6:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80017e8:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80017ea:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80017ee:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80017f0:	f00c f9b2 	bl	800db58 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80017f4:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80017f6:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80017fa:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80017fe:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001802:	a803      	add	r0, sp, #12
 8001804:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001806:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800180a:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800180c:	f00c fbbc 	bl	800df88 <HAL_RCC_ClockConfig>
}
 8001810:	b015      	add	sp, #84	; 0x54
 8001812:	bd30      	pop	{r4, r5, pc}
 8001814:	40023800 	.word	0x40023800
 8001818:	40007000 	.word	0x40007000

0800181c <main>:
{
 800181c:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001820:	2400      	movs	r4, #0
{
 8001822:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8001824:	f009 ff58 	bl	800b6d8 <HAL_Init>
  SystemClock_Config();
 8001828:	f7ff ffac 	bl	8001784 <SystemClock_Config>
  gyro_disable();
 800182c:	f7ff ff40 	bl	80016b0 <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001830:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001834:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001838:	4bc3      	ldr	r3, [pc, #780]	; (8001b48 <main+0x32c>)
 800183a:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800183c:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800183e:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001840:	48c2      	ldr	r0, [pc, #776]	; (8001b4c <main+0x330>)
  hi2c3.Instance = I2C3;
 8001842:	f8df a33c 	ldr.w	sl, [pc, #828]	; 8001b80 <main+0x364>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001846:	f041 0110 	orr.w	r1, r1, #16
 800184a:	6319      	str	r1, [r3, #48]	; 0x30
 800184c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800184e:	f001 0110 	and.w	r1, r1, #16
 8001852:	9100      	str	r1, [sp, #0]
 8001854:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001856:	9401      	str	r4, [sp, #4]
 8001858:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800185a:	f041 0120 	orr.w	r1, r1, #32
 800185e:	6319      	str	r1, [r3, #48]	; 0x30
 8001860:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001862:	f001 0120 	and.w	r1, r1, #32
 8001866:	9101      	str	r1, [sp, #4]
 8001868:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800186a:	9402      	str	r4, [sp, #8]
 800186c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800186e:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8001872:	6319      	str	r1, [r3, #48]	; 0x30
 8001874:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001876:	f001 0180 	and.w	r1, r1, #128	; 0x80
 800187a:	9102      	str	r1, [sp, #8]
 800187c:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800187e:	9403      	str	r4, [sp, #12]
 8001880:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001882:	f041 0104 	orr.w	r1, r1, #4
 8001886:	6319      	str	r1, [r3, #48]	; 0x30
 8001888:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800188a:	f001 0104 	and.w	r1, r1, #4
 800188e:	9103      	str	r1, [sp, #12]
 8001890:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001892:	9404      	str	r4, [sp, #16]
 8001894:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001896:	f041 0101 	orr.w	r1, r1, #1
 800189a:	6319      	str	r1, [r3, #48]	; 0x30
 800189c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800189e:	f001 0101 	and.w	r1, r1, #1
 80018a2:	9104      	str	r1, [sp, #16]
 80018a4:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80018a6:	9405      	str	r4, [sp, #20]
 80018a8:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80018aa:	f041 0102 	orr.w	r1, r1, #2
 80018ae:	6319      	str	r1, [r3, #48]	; 0x30
 80018b0:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80018b2:	f001 0102 	and.w	r1, r1, #2
 80018b6:	9105      	str	r1, [sp, #20]
 80018b8:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80018ba:	9406      	str	r4, [sp, #24]
 80018bc:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80018be:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 80018c2:	6319      	str	r1, [r3, #48]	; 0x30
 80018c4:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80018c6:	f001 0140 	and.w	r1, r1, #64	; 0x40
 80018ca:	9106      	str	r1, [sp, #24]
 80018cc:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80018ce:	9407      	str	r4, [sp, #28]
 80018d0:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80018d2:	f041 0108 	orr.w	r1, r1, #8
 80018d6:	6319      	str	r1, [r3, #48]	; 0x30
 80018d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018da:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80018de:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80018e0:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80018e2:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80018e4:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80018e6:	f00a faf9 	bl	800bedc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 80018ea:	4898      	ldr	r0, [pc, #608]	; (8001b4c <main+0x330>)
 80018ec:	2120      	movs	r1, #32
 80018ee:	2201      	movs	r2, #1
 80018f0:	f00a faf4 	bl	800bedc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 80018f4:	4896      	ldr	r0, [pc, #600]	; (8001b50 <main+0x334>)
 80018f6:	4622      	mov	r2, r4
 80018f8:	2114      	movs	r1, #20
 80018fa:	f00a faef 	bl	800bedc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 80018fe:	4895      	ldr	r0, [pc, #596]	; (8001b54 <main+0x338>)
 8001900:	4622      	mov	r2, r4
 8001902:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001906:	f00a fae9 	bl	800bedc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 800190a:	4893      	ldr	r0, [pc, #588]	; (8001b58 <main+0x33c>)
 800190c:	4622      	mov	r2, r4
 800190e:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8001912:	f00a fae3 	bl	800bedc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 8001916:	4891      	ldr	r0, [pc, #580]	; (8001b5c <main+0x340>)
 8001918:	4622      	mov	r2, r4
 800191a:	2104      	movs	r1, #4
 800191c:	f00a fade 	bl	800bedc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8001920:	2201      	movs	r2, #1
 8001922:	488e      	ldr	r0, [pc, #568]	; (8001b5c <main+0x340>)
 8001924:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001928:	f00a fad8 	bl	800bedc <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800192c:	f04f 0801 	mov.w	r8, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001930:	f04f 0b03 	mov.w	fp, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8001934:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001936:	4885      	ldr	r0, [pc, #532]	; (8001b4c <main+0x330>)
 8001938:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 800193a:	2608      	movs	r6, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800193c:	e9cd 380f 	strd	r3, r8, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001940:	e9cd 4b11 	strd	r4, fp, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001944:	f00a f986 	bl	800bc54 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001948:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 800194c:	487f      	ldr	r0, [pc, #508]	; (8001b4c <main+0x330>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 800194e:	960f      	str	r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001950:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001952:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001954:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001956:	f00a f97d 	bl	800bc54 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 800195a:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 800195c:	487b      	ldr	r0, [pc, #492]	; (8001b4c <main+0x330>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 800195e:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001960:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001962:	2502      	movs	r5, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001964:	2704      	movs	r7, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001966:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800196a:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 800196c:	f00a f972 	bl	800bc54 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001970:	4877      	ldr	r0, [pc, #476]	; (8001b50 <main+0x334>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001972:	9512      	str	r5, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001974:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8001976:	f04f 0910 	mov.w	r9, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800197a:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800197e:	970f      	str	r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001980:	f00a f968 	bl	800bc54 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001984:	4872      	ldr	r0, [pc, #456]	; (8001b50 <main+0x334>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001986:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001988:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800198a:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 800198e:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001992:	f00a f95f 	bl	800bc54 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001996:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800199a:	486e      	ldr	r0, [pc, #440]	; (8001b54 <main+0x338>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 800199c:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800199e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019a0:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80019a4:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80019a6:	f00a f955 	bl	800bc54 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80019aa:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80019ae:	486a      	ldr	r0, [pc, #424]	; (8001b58 <main+0x33c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80019b0:	9512      	str	r5, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80019b2:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019b4:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80019b8:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80019ba:	f00a f94b 	bl	800bc54 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 80019be:	f242 0304 	movw	r3, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019c2:	4866      	ldr	r0, [pc, #408]	; (8001b5c <main+0x340>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 80019c4:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019c6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019c8:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80019cc:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019ce:	f00a f941 	bl	800bc54 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80019d2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019d6:	4862      	ldr	r0, [pc, #392]	; (8001b60 <main+0x344>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80019d8:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019da:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 80019dc:	230f      	movs	r3, #15
 80019de:	9313      	str	r3, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019e0:	e9cd 5410 	strd	r5, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80019e4:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019e6:	f00a f935 	bl	800bc54 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 80019ea:	2105      	movs	r1, #5
 80019ec:	4622      	mov	r2, r4
 80019ee:	2009      	movs	r0, #9
 80019f0:	f009 fec2 	bl	800b778 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 80019f4:	2009      	movs	r0, #9
 80019f6:	f009 fefd 	bl	800b7f4 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 80019fa:	485a      	ldr	r0, [pc, #360]	; (8001b64 <main+0x348>)
 80019fc:	4a5a      	ldr	r2, [pc, #360]	; (8001b68 <main+0x34c>)
 80019fe:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001a00:	f009 ff06 	bl	800b810 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001a04:	4959      	ldr	r1, [pc, #356]	; (8001b6c <main+0x350>)
 8001a06:	4a5a      	ldr	r2, [pc, #360]	; (8001b70 <main+0x354>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001a08:	4650      	mov	r0, sl
  hi2c3.Init.ClockSpeed = 100000;
 8001a0a:	e9ca 1200 	strd	r1, r2, [sl]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001a0e:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8001a12:	f8ca 2010 	str.w	r2, [sl, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001a16:	e9ca 4402 	strd	r4, r4, [sl, #8]
  hi2c3.Init.OwnAddress2 = 0;
 8001a1a:	e9ca 4405 	strd	r4, r4, [sl, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001a1e:	e9ca 4407 	strd	r4, r4, [sl, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001a22:	f00a fcc1 	bl	800c3a8 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001a26:	4649      	mov	r1, r9
 8001a28:	4650      	mov	r0, sl
 8001a2a:	f00b fe89 	bl	800d740 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001a2e:	4621      	mov	r1, r4
 8001a30:	4650      	mov	r0, sl
 8001a32:	f00b fea5 	bl	800d780 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001a36:	f8df c14c 	ldr.w	ip, [pc, #332]	; 8001b84 <main+0x368>
  hspi5.Instance = SPI5;
 8001a3a:	484e      	ldr	r0, [pc, #312]	; (8001b74 <main+0x358>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001a3c:	f8df a148 	ldr.w	sl, [pc, #328]	; 8001b88 <main+0x36c>
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001a40:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001a42:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001a46:	e9c0 c200 	strd	ip, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001a4a:	f44f 7e00 	mov.w	lr, #512	; 0x200
 8001a4e:	2218      	movs	r2, #24
 8001a50:	e9c0 e206 	strd	lr, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001a54:	220a      	movs	r2, #10
 8001a56:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001a58:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001a5c:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001a60:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001a64:	f00c fd7e 	bl	800e564 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001a68:	2207      	movs	r2, #7
 8001a6a:	9210      	str	r2, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 8001a6c:	9212      	str	r2, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001a6e:	4a42      	ldr	r2, [pc, #264]	; (8001b78 <main+0x35c>)
 8001a70:	f8ca 2000 	str.w	r2, [sl]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001a74:	2040      	movs	r0, #64	; 0x40
 8001a76:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8001a7a:	e9ca 0205 	strd	r0, r2, [sl, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001a7e:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8001a82:	f8ca 2020 	str.w	r2, [sl, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001a86:	a90f      	add	r1, sp, #60	; 0x3c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001a88:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001a8c:	4650      	mov	r0, sl
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8001a8e:	e9ca 8401 	strd	r8, r4, [sl, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8001a92:	e9ca 7903 	strd	r7, r9, [sl, #12]
  SdramTiming.RPDelay = 2;
 8001a96:	e9cd b513 	strd	fp, r5, [sp, #76]	; 0x4c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001a9a:	f8ca 2028 	str.w	r2, [sl, #40]	; 0x28
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001a9e:	f8ca 401c 	str.w	r4, [sl, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001aa2:	f8ca 4024 	str.w	r4, [sl, #36]	; 0x24
  SdramTiming.LoadToActiveDelay = 2;
 8001aa6:	950f      	str	r5, [sp, #60]	; 0x3c
  SdramTiming.SelfRefreshTime = 4;
 8001aa8:	9711      	str	r7, [sp, #68]	; 0x44
  SdramTiming.RCDDelay = 2;
 8001aaa:	9515      	str	r5, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001aac:	f00c fc68 	bl	800e380 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001ab0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001ab4:	a90b      	add	r1, sp, #44	; 0x2c
 8001ab6:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001ab8:	e9cd 860b 	strd	r8, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001abc:	e9cd 840d 	strd	r8, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 8001ac0:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001ac2:	f00c fc7f 	bl	800e3c4 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001ac6:	4640      	mov	r0, r8
 8001ac8:	f009 fe32 	bl	800b730 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001acc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001ad0:	a90b      	add	r1, sp, #44	; 0x2c
 8001ad2:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001ad4:	e9cd 560b 	strd	r5, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001ad8:	e9cd 840d 	strd	r8, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001adc:	f00c fc72 	bl	800e3c4 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001ae0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001ae4:	a90b      	add	r1, sp, #44	; 0x2c
 8001ae6:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001ae8:	e9cd b60b 	strd	fp, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001aec:	e9cd 740d 	strd	r7, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001af0:	f00c fc68 	bl	800e3c4 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001af4:	f44f 720c 	mov.w	r2, #560	; 0x230
 8001af8:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001afa:	9908      	ldr	r1, [sp, #32]
 8001afc:	910e      	str	r1, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001afe:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001b02:	a90b      	add	r1, sp, #44	; 0x2c
 8001b04:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001b06:	e9cd 760b 	strd	r7, r6, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 8001b0a:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b0e:	f00c fc59 	bl	800e3c4 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001b12:	4650      	mov	r0, sl
 8001b14:	f240 516a 	movw	r1, #1386	; 0x56a
 8001b18:	f00c fc72 	bl	800e400 <HAL_SDRAM_ProgramRefreshRate>
  hltdc.Instance = LTDC;
 8001b1c:	f8df a06c 	ldr.w	sl, [pc, #108]	; 8001b8c <main+0x370>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001b20:	2234      	movs	r2, #52	; 0x34
 8001b22:	4621      	mov	r1, r4
 8001b24:	a80f      	add	r0, sp, #60	; 0x3c
 8001b26:	f02c f9ec 	bl	802df02 <memset>
  hltdc.Instance = LTDC;
 8001b2a:	4a14      	ldr	r2, [pc, #80]	; (8001b7c <main+0x360>)
 8001b2c:	f8ca 2000 	str.w	r2, [sl]
  hltdc.Init.HorizontalSync = 9;
 8001b30:	2209      	movs	r2, #9
 8001b32:	f8ca 2014 	str.w	r2, [sl, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001b36:	221d      	movs	r2, #29
 8001b38:	f8ca 201c 	str.w	r2, [sl, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001b3c:	f240 130d 	movw	r3, #269	; 0x10d
 8001b40:	f240 1243 	movw	r2, #323	; 0x143
 8001b44:	e024      	b.n	8001b90 <main+0x374>
 8001b46:	bf00      	nop
 8001b48:	40023800 	.word	0x40023800
 8001b4c:	40021000 	.word	0x40021000
 8001b50:	40020800 	.word	0x40020800
 8001b54:	40020400 	.word	0x40020400
 8001b58:	40020c00 	.word	0x40020c00
 8001b5c:	40021800 	.word	0x40021800
 8001b60:	40020000 	.word	0x40020000
 8001b64:	200001f4 	.word	0x200001f4
 8001b68:	40023000 	.word	0x40023000
 8001b6c:	40005c00 	.word	0x40005c00
 8001b70:	000186a0 	.word	0x000186a0
 8001b74:	2000032c 	.word	0x2000032c
 8001b78:	a0000140 	.word	0xa0000140
 8001b7c:	40016800 	.word	0x40016800
 8001b80:	200001fc 	.word	0x200001fc
 8001b84:	40015000 	.word	0x40015000
 8001b88:	200002f8 	.word	0x200002f8
 8001b8c:	20000250 	.word	0x20000250
 8001b90:	e9ca 3209 	strd	r3, r2, [sl, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 8001b94:	f240 1117 	movw	r1, #279	; 0x117
 8001b98:	f240 1247 	movw	r2, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 8001b9c:	f8aa 4034 	strh.w	r4, [sl, #52]	; 0x34
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001ba0:	4650      	mov	r0, sl
  hltdc.Init.TotalHeigh = 327;
 8001ba2:	e9ca 120b 	strd	r1, r2, [sl, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8001ba6:	f8ca 8018 	str.w	r8, [sl, #24]
  hltdc.Init.AccumulatedVBP = 3;
 8001baa:	f8ca b020 	str.w	fp, [sl, #32]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001bae:	e9ca 4401 	strd	r4, r4, [sl, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001bb2:	e9ca 4403 	strd	r4, r4, [sl, #12]
  hltdc.Init.Backcolor.Red = 0;
 8001bb6:	f88a 4036 	strb.w	r4, [sl, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001bba:	f00b fe05 	bl	800d7c8 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 8001bbe:	23f0      	movs	r3, #240	; 0xf0
 8001bc0:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 8001bc2:	9319      	str	r3, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 8001bc4:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8001bc8:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 8001bca:	931a      	str	r3, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 8001bcc:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001bce:	f44f 6e80 	mov.w	lr, #1024	; 0x400
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001bd2:	4622      	mov	r2, r4
 8001bd4:	a90f      	add	r1, sp, #60	; 0x3c
 8001bd6:	4650      	mov	r0, sl
  pLayerCfg.Alpha = 255;
 8001bd8:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001bda:	2305      	movs	r3, #5
 8001bdc:	e9cd e316 	strd	lr, r3, [sp, #88]	; 0x58
  LcdDrv = &ili9341_drv;
 8001be0:	f8df 826c 	ldr.w	r8, [pc, #620]	; 8001e50 <main+0x634>
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001be4:	9513      	str	r5, [sp, #76]	; 0x4c
  pLayerCfg.WindowX0 = 0;
 8001be6:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.WindowY0 = 0;
 8001be8:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.Alpha0 = 0;
 8001bea:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8001bec:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8001bee:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8001bf2:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001bf6:	f00b febd 	bl	800d974 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001bfa:	4b82      	ldr	r3, [pc, #520]	; (8001e04 <main+0x5e8>)
 8001bfc:	f8c8 3000 	str.w	r3, [r8]
  LcdDrv->Init();
 8001c00:	681b      	ldr	r3, [r3, #0]
  htim2.Instance = TIM2;
 8001c02:	f8df a250 	ldr.w	sl, [pc, #592]	; 8001e54 <main+0x638>
  LcdDrv->Init();
 8001c06:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001c08:	f8d8 3000 	ldr.w	r3, [r8]
  htim3.Instance = TIM3;
 8001c0c:	f8df 8248 	ldr.w	r8, [pc, #584]	; 8001e58 <main+0x63c>
  LcdDrv->DisplayOff();
 8001c10:	68db      	ldr	r3, [r3, #12]
 8001c12:	4798      	blx	r3
  htim3.Instance = TIM3;
 8001c14:	4b7c      	ldr	r3, [pc, #496]	; (8001e08 <main+0x5ec>)
 8001c16:	f8c8 3000 	str.w	r3, [r8]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001c1a:	4640      	mov	r0, r8
  htim3.Init.Period = 65535;
 8001c1c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001c20:	f8c8 300c 	str.w	r3, [r8, #12]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001c24:	e9c8 4401 	strd	r4, r4, [r8, #4]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001c28:	f8c8 4010 	str.w	r4, [r8, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001c2c:	f8c8 4018 	str.w	r4, [r8, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001c30:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8001c34:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001c38:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001c3c:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001c40:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001c44:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001c46:	f00d f87d 	bl	800ed44 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001c4a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001c4e:	a90b      	add	r1, sp, #44	; 0x2c
 8001c50:	4640      	mov	r0, r8
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001c52:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001c54:	f00d fb50 	bl	800f2f8 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8001c58:	a90f      	add	r1, sp, #60	; 0x3c
 8001c5a:	4640      	mov	r0, r8
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8001c5c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8001c60:	f00d fbfa 	bl	800f458 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001c64:	a909      	add	r1, sp, #36	; 0x24
 8001c66:	4640      	mov	r0, r8
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001c68:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001c6c:	f00d fd32 	bl	800f6d4 <HAL_TIMEx_MasterConfigSynchronization>
  htim2.Init.Period = 100-1;
 8001c70:	2363      	movs	r3, #99	; 0x63
  htim2.Instance = TIM2;
 8001c72:	f04f 4b80 	mov.w	fp, #1073741824	; 0x40000000
  htim2.Init.Prescaler = 168-1;
 8001c76:	21a7      	movs	r1, #167	; 0xa7
  htim2.Init.Period = 100-1;
 8001c78:	f8ca 300c 	str.w	r3, [sl, #12]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001c7c:	4650      	mov	r0, sl
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001c7e:	2380      	movs	r3, #128	; 0x80
  htim2.Instance = TIM2;
 8001c80:	f8ca b000 	str.w	fp, [sl]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001c84:	f8ca 3018 	str.w	r3, [sl, #24]
  htim2.Init.Prescaler = 168-1;
 8001c88:	f8ca 1004 	str.w	r1, [sl, #4]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001c8c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001c90:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001c94:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001c98:	f8ca 4008 	str.w	r4, [sl, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001c9c:	f8ca 4010 	str.w	r4, [sl, #16]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001ca0:	f00d f850 	bl	800ed44 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001ca4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001ca8:	a90f      	add	r1, sp, #60	; 0x3c
 8001caa:	4650      	mov	r0, sl
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001cac:	930f      	str	r3, [sp, #60]	; 0x3c
  TIM2->CCR1 = 50;
 8001cae:	f04f 0832 	mov.w	r8, #50	; 0x32
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001cb2:	f00d fb21 	bl	800f2f8 <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001cb6:	a90b      	add	r1, sp, #44	; 0x2c
 8001cb8:	4650      	mov	r0, sl
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001cba:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001cbe:	f00d fd09 	bl	800f6d4 <HAL_TIMEx_MasterConfigSynchronization>
  TIM2->CCR1 = 50;
 8001cc2:	f8cb 8034 	str.w	r8, [fp, #52]	; 0x34
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8001cc6:	4621      	mov	r1, r4
 8001cc8:	4650      	mov	r0, sl
 8001cca:	f00d f995 	bl	800eff8 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8001cce:	4639      	mov	r1, r7
  TIM2->CCR2 = 50;
 8001cd0:	f8cb 8038 	str.w	r8, [fp, #56]	; 0x38
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8001cd4:	4650      	mov	r0, sl
 8001cd6:	f00d f98f 	bl	800eff8 <HAL_TIM_PWM_Start>
  htim14.Instance = TIM14;
 8001cda:	4f4c      	ldr	r7, [pc, #304]	; (8001e0c <main+0x5f0>)
  TIM2->CCR3 = 50;
 8001cdc:	f8cb 803c 	str.w	r8, [fp, #60]	; 0x3c
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);
 8001ce0:	4631      	mov	r1, r6
 8001ce2:	4650      	mov	r0, sl
 8001ce4:	f00d f988 	bl	800eff8 <HAL_TIM_PWM_Start>
  htim14.Init.Prescaler = 210-1;
 8001ce8:	4949      	ldr	r1, [pc, #292]	; (8001e10 <main+0x5f4>)
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001cea:	60bc      	str	r4, [r7, #8]
  htim14.Init.Period = 100-1;
 8001cec:	2363      	movs	r3, #99	; 0x63
  htim14.Init.Prescaler = 210-1;
 8001cee:	22d1      	movs	r2, #209	; 0xd1
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001cf0:	e9c7 3403 	strd	r3, r4, [r7, #12]
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8001cf4:	4638      	mov	r0, r7
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001cf6:	2380      	movs	r3, #128	; 0x80
 8001cf8:	61bb      	str	r3, [r7, #24]
  htim14.Init.Prescaler = 210-1;
 8001cfa:	e9c7 1200 	strd	r1, r2, [r7]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001cfe:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001d02:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001d06:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
 8001d0a:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8001d0c:	f00d f81a 	bl	800ed44 <HAL_TIM_Base_Init>
  if (HAL_TIM_PWM_Init(&htim14) != HAL_OK)
 8001d10:	4638      	mov	r0, r7
 8001d12:	f00d f8e3 	bl	800eedc <HAL_TIM_PWM_Init>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001d16:	f04f 0b60 	mov.w	fp, #96	; 0x60
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001d1a:	4622      	mov	r2, r4
 8001d1c:	a90f      	add	r1, sp, #60	; 0x3c
 8001d1e:	4638      	mov	r0, r7
  htim9.Instance = TIM9;
 8001d20:	4e3c      	ldr	r6, [pc, #240]	; (8001e14 <main+0x5f8>)
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001d22:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001d24:	e9cd 4410 	strd	r4, r4, [sp, #64]	; 0x40
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001d28:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001d2c:	f00d f9d4 	bl	800f0d8 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim14);
 8001d30:	4638      	mov	r0, r7
 8001d32:	f000 fcfd 	bl	8002730 <HAL_TIM_MspPostInit>
  htim9.Init.Period = 100-1;
 8001d36:	2363      	movs	r3, #99	; 0x63
  htim9.Init.Prescaler = 84-1;
 8001d38:	4f37      	ldr	r7, [pc, #220]	; (8001e18 <main+0x5fc>)
  htim9.Init.Period = 100-1;
 8001d3a:	60f3      	str	r3, [r6, #12]
  htim9.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001d3c:	2380      	movs	r3, #128	; 0x80
 8001d3e:	61b3      	str	r3, [r6, #24]
  if (HAL_TIM_Base_Init(&htim9) != HAL_OK)
 8001d40:	4630      	mov	r0, r6
  htim9.Init.Prescaler = 84-1;
 8001d42:	2353      	movs	r3, #83	; 0x53
 8001d44:	e9c6 7300 	strd	r7, r3, [r6]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001d48:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8001d4c:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001d50:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001d54:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001d58:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
 8001d5c:	9415      	str	r4, [sp, #84]	; 0x54
  htim9.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001d5e:	60b4      	str	r4, [r6, #8]
  htim9.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001d60:	6134      	str	r4, [r6, #16]
  if (HAL_TIM_Base_Init(&htim9) != HAL_OK)
 8001d62:	f00c ffef 	bl	800ed44 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001d66:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim9, &sClockSourceConfig) != HAL_OK)
 8001d6a:	a90b      	add	r1, sp, #44	; 0x2c
 8001d6c:	4630      	mov	r0, r6
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001d6e:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim9, &sClockSourceConfig) != HAL_OK)
 8001d70:	f00d fac2 	bl	800f2f8 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim9) != HAL_OK)
 8001d74:	4630      	mov	r0, r6
 8001d76:	f00d f8b1 	bl	800eedc <HAL_TIM_PWM_Init>
  if (HAL_TIM_PWM_ConfigChannel(&htim9, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001d7a:	4622      	mov	r2, r4
 8001d7c:	a90f      	add	r1, sp, #60	; 0x3c
 8001d7e:	4630      	mov	r0, r6
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001d80:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001d84:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001d88:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_PWM_ConfigChannel(&htim9, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001d8a:	f00d f9a5 	bl	800f0d8 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_PWM_Start(&htim9, TIM_CHANNEL_1);
 8001d8e:	4621      	mov	r1, r4
  TIM9->CCR1 = 50;
 8001d90:	f8c7 8034 	str.w	r8, [r7, #52]	; 0x34
  HAL_TIM_PWM_Start(&htim9, TIM_CHANNEL_1);
 8001d94:	4630      	mov	r0, r6
 8001d96:	f00d f92f 	bl	800eff8 <HAL_TIM_PWM_Start>
  HAL_TIM_MspPostInit(&htim9);
 8001d9a:	4630      	mov	r0, r6
 8001d9c:	f000 fcc8 	bl	8002730 <HAL_TIM_MspPostInit>
  MX_TouchGFX_Init();
 8001da0:	f000 fe5c 	bl	8002a5c <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001da4:	f000 fe58 	bl	8002a58 <MX_TouchGFX_PreOSInit>
  gyro_disable();
 8001da8:	f7ff fc82 	bl	80016b0 <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8001dac:	f000 f958 	bl	8002060 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 8001db0:	f000 f98a 	bl	80020c8 <MEAS_timer_init>
  Flash_Read_Data(SECTOR_23_ADDR, Calibration_Data, 12);
 8001db4:	4919      	ldr	r1, [pc, #100]	; (8001e1c <main+0x600>)
 8001db6:	481a      	ldr	r0, [pc, #104]	; (8001e20 <main+0x604>)
 8001db8:	220c      	movs	r2, #12
 8001dba:	f7ff f87f 	bl	8000ebc <Flash_Read_Data>
  osKernelInitialize();
 8001dbe:	f00d fd9b 	bl	800f8f8 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001dc2:	4629      	mov	r1, r5
 8001dc4:	4a17      	ldr	r2, [pc, #92]	; (8001e24 <main+0x608>)
 8001dc6:	4648      	mov	r0, r9
 8001dc8:	f00d fed0 	bl	800fb6c <osMessageQueueNew>
 8001dcc:	4b16      	ldr	r3, [pc, #88]	; (8001e28 <main+0x60c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001dce:	4a17      	ldr	r2, [pc, #92]	; (8001e2c <main+0x610>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001dd0:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001dd2:	4621      	mov	r1, r4
 8001dd4:	4816      	ldr	r0, [pc, #88]	; (8001e30 <main+0x614>)
 8001dd6:	f00d fdbb 	bl	800f950 <osThreadNew>
 8001dda:	4b16      	ldr	r3, [pc, #88]	; (8001e34 <main+0x618>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001ddc:	4a16      	ldr	r2, [pc, #88]	; (8001e38 <main+0x61c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001dde:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001de0:	4621      	mov	r1, r4
 8001de2:	4816      	ldr	r0, [pc, #88]	; (8001e3c <main+0x620>)
 8001de4:	f00d fdb4 	bl	800f950 <osThreadNew>
 8001de8:	4b15      	ldr	r3, [pc, #84]	; (8001e40 <main+0x624>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001dea:	4a16      	ldr	r2, [pc, #88]	; (8001e44 <main+0x628>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001dec:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001dee:	4621      	mov	r1, r4
 8001df0:	4815      	ldr	r0, [pc, #84]	; (8001e48 <main+0x62c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001df2:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001df4:	f00d fdac 	bl	800f950 <osThreadNew>
 8001df8:	4b14      	ldr	r3, [pc, #80]	; (8001e4c <main+0x630>)
 8001dfa:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001dfc:	f00d fd8e 	bl	800f91c <osKernelStart>
  while (1)
 8001e00:	e7fe      	b.n	8001e00 <main+0x5e4>
 8001e02:	bf00      	nop
 8001e04:	20000018 	.word	0x20000018
 8001e08:	40000400 	.word	0x40000400
 8001e0c:	20000384 	.word	0x20000384
 8001e10:	40002000 	.word	0x40002000
 8001e14:	2000045c 	.word	0x2000045c
 8001e18:	40014000 	.word	0x40014000
 8001e1c:	200001b0 	.word	0x200001b0
 8001e20:	081e0000 	.word	0x081e0000
 8001e24:	0802ecb4 	.word	0x0802ecb4
 8001e28:	200001e8 	.word	0x200001e8
 8001e2c:	0802ecf0 	.word	0x0802ecf0
 8001e30:	08001651 	.word	0x08001651
 8001e34:	200001f0 	.word	0x200001f0
 8001e38:	0802ec90 	.word	0x0802ec90
 8001e3c:	08002a6d 	.word	0x08002a6d
 8001e40:	200001e0 	.word	0x200001e0
 8001e44:	0802eccc 	.word	0x0802eccc
 8001e48:	0800165d 	.word	0x0800165d
 8001e4c:	200001ec 	.word	0x200001ec
 8001e50:	200001e4 	.word	0x200001e4
 8001e54:	200003cc 	.word	0x200003cc
 8001e58:	20000414 	.word	0x20000414

08001e5c <IOE_Init>:
 8001e5c:	4770      	bx	lr
 8001e5e:	bf00      	nop

08001e60 <IOE_ITConfig>:
 8001e60:	4770      	bx	lr
 8001e62:	bf00      	nop

08001e64 <IOE_Write>:
{
 8001e64:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001e66:	4c09      	ldr	r4, [pc, #36]	; (8001e8c <IOE_Write+0x28>)
{
 8001e68:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001e6a:	6824      	ldr	r4, [r4, #0]
 8001e6c:	9402      	str	r4, [sp, #8]
{
 8001e6e:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001e70:	2301      	movs	r3, #1
 8001e72:	f88d 4017 	strb.w	r4, [sp, #23]
 8001e76:	f10d 0417 	add.w	r4, sp, #23
 8001e7a:	460a      	mov	r2, r1
 8001e7c:	9301      	str	r3, [sp, #4]
 8001e7e:	4601      	mov	r1, r0
 8001e80:	9400      	str	r4, [sp, #0]
 8001e82:	4803      	ldr	r0, [pc, #12]	; (8001e90 <IOE_Write+0x2c>)
 8001e84:	f00a fb58 	bl	800c538 <HAL_I2C_Mem_Write>
}
 8001e88:	b006      	add	sp, #24
 8001e8a:	bd10      	pop	{r4, pc}
 8001e8c:	20000004 	.word	0x20000004
 8001e90:	200001fc 	.word	0x200001fc

08001e94 <IOE_Read>:
{
 8001e94:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001e96:	4b0b      	ldr	r3, [pc, #44]	; (8001ec4 <IOE_Read+0x30>)
{
 8001e98:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001e9a:	681b      	ldr	r3, [r3, #0]
 8001e9c:	9302      	str	r3, [sp, #8]
{
 8001e9e:	4684      	mov	ip, r0
 8001ea0:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001ea2:	2301      	movs	r3, #1
 8001ea4:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 8001ea8:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001eaa:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 8001eae:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001eb2:	4661      	mov	r1, ip
 8001eb4:	4804      	ldr	r0, [pc, #16]	; (8001ec8 <IOE_Read+0x34>)
 8001eb6:	f00a fc31 	bl	800c71c <HAL_I2C_Mem_Read>
}
 8001eba:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001ebe:	b007      	add	sp, #28
 8001ec0:	f85d fb04 	ldr.w	pc, [sp], #4
 8001ec4:	20000004 	.word	0x20000004
 8001ec8:	200001fc 	.word	0x200001fc

08001ecc <IOE_ReadMultiple>:
{
 8001ecc:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001ece:	4c09      	ldr	r4, [pc, #36]	; (8001ef4 <IOE_ReadMultiple+0x28>)
{
 8001ed0:	b084      	sub	sp, #16
 8001ed2:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001ed4:	6820      	ldr	r0, [r4, #0]
 8001ed6:	9002      	str	r0, [sp, #8]
 8001ed8:	e9cd 2300 	strd	r2, r3, [sp]
 8001edc:	4806      	ldr	r0, [pc, #24]	; (8001ef8 <IOE_ReadMultiple+0x2c>)
 8001ede:	460a      	mov	r2, r1
 8001ee0:	2301      	movs	r3, #1
 8001ee2:	4661      	mov	r1, ip
 8001ee4:	f00a fc1a 	bl	800c71c <HAL_I2C_Mem_Read>
}
 8001ee8:	3800      	subs	r0, #0
 8001eea:	bf18      	it	ne
 8001eec:	2001      	movne	r0, #1
 8001eee:	b004      	add	sp, #16
 8001ef0:	bd10      	pop	{r4, pc}
 8001ef2:	bf00      	nop
 8001ef4:	20000004 	.word	0x20000004
 8001ef8:	200001fc 	.word	0x200001fc

08001efc <IOE_Delay>:
 8001efc:	f009 bc18 	b.w	800b730 <HAL_Delay>

08001f00 <LCD_IO_Init>:
{
 8001f00:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001f02:	4806      	ldr	r0, [pc, #24]	; (8001f1c <LCD_IO_Init+0x1c>)
 8001f04:	2200      	movs	r2, #0
 8001f06:	2104      	movs	r1, #4
 8001f08:	f009 ffe8 	bl	800bedc <HAL_GPIO_WritePin>
}
 8001f0c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001f10:	4802      	ldr	r0, [pc, #8]	; (8001f1c <LCD_IO_Init+0x1c>)
 8001f12:	2201      	movs	r2, #1
 8001f14:	2104      	movs	r1, #4
 8001f16:	f009 bfe1 	b.w	800bedc <HAL_GPIO_WritePin>
 8001f1a:	bf00      	nop
 8001f1c:	40020800 	.word	0x40020800

08001f20 <LCD_IO_WriteData>:
{
 8001f20:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001f22:	4d10      	ldr	r5, [pc, #64]	; (8001f64 <LCD_IO_WriteData+0x44>)
{
 8001f24:	b083      	sub	sp, #12
 8001f26:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001f28:	2201      	movs	r2, #1
 8001f2a:	480f      	ldr	r0, [pc, #60]	; (8001f68 <LCD_IO_WriteData+0x48>)
 8001f2c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001f30:	f009 ffd4 	bl	800bedc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001f34:	4628      	mov	r0, r5
 8001f36:	2200      	movs	r2, #0
 8001f38:	2104      	movs	r1, #4
 8001f3a:	f009 ffcf 	bl	800bedc <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001f3e:	4b0b      	ldr	r3, [pc, #44]	; (8001f6c <LCD_IO_WriteData+0x4c>)
 8001f40:	480b      	ldr	r0, [pc, #44]	; (8001f70 <LCD_IO_WriteData+0x50>)
 8001f42:	681b      	ldr	r3, [r3, #0]
 8001f44:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001f48:	f10d 0106 	add.w	r1, sp, #6
 8001f4c:	2201      	movs	r2, #1
 8001f4e:	f00c fb6b 	bl	800e628 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001f52:	2201      	movs	r2, #1
 8001f54:	2104      	movs	r1, #4
 8001f56:	4628      	mov	r0, r5
}
 8001f58:	b003      	add	sp, #12
 8001f5a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001f5e:	f009 bfbd 	b.w	800bedc <HAL_GPIO_WritePin>
 8001f62:	bf00      	nop
 8001f64:	40020800 	.word	0x40020800
 8001f68:	40020c00 	.word	0x40020c00
 8001f6c:	20000008 	.word	0x20000008
 8001f70:	2000032c 	.word	0x2000032c

08001f74 <LCD_IO_WriteReg>:
{
 8001f74:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001f76:	4d10      	ldr	r5, [pc, #64]	; (8001fb8 <LCD_IO_WriteReg+0x44>)
{
 8001f78:	b083      	sub	sp, #12
 8001f7a:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001f7c:	2200      	movs	r2, #0
 8001f7e:	480f      	ldr	r0, [pc, #60]	; (8001fbc <LCD_IO_WriteReg+0x48>)
 8001f80:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001f84:	f009 ffaa 	bl	800bedc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001f88:	4628      	mov	r0, r5
 8001f8a:	2200      	movs	r2, #0
 8001f8c:	2104      	movs	r1, #4
 8001f8e:	f009 ffa5 	bl	800bedc <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001f92:	4b0b      	ldr	r3, [pc, #44]	; (8001fc0 <LCD_IO_WriteReg+0x4c>)
 8001f94:	480b      	ldr	r0, [pc, #44]	; (8001fc4 <LCD_IO_WriteReg+0x50>)
 8001f96:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001f98:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001f9c:	f10d 0106 	add.w	r1, sp, #6
 8001fa0:	2201      	movs	r2, #1
 8001fa2:	f00c fb41 	bl	800e628 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001fa6:	2201      	movs	r2, #1
 8001fa8:	2104      	movs	r1, #4
 8001faa:	4628      	mov	r0, r5
}
 8001fac:	b003      	add	sp, #12
 8001fae:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001fb2:	f009 bf93 	b.w	800bedc <HAL_GPIO_WritePin>
 8001fb6:	bf00      	nop
 8001fb8:	40020800 	.word	0x40020800
 8001fbc:	40020c00 	.word	0x40020c00
 8001fc0:	20000008 	.word	0x20000008
 8001fc4:	2000032c 	.word	0x2000032c

08001fc8 <LCD_IO_ReadData>:
{
 8001fc8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001fcc:	4e19      	ldr	r6, [pc, #100]	; (8002034 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001fce:	4f1a      	ldr	r7, [pc, #104]	; (8002038 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001fd0:	f8df 9068 	ldr.w	r9, [pc, #104]	; 800203c <LCD_IO_ReadData+0x74>
 8001fd4:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8002040 <LCD_IO_ReadData+0x78>
{
 8001fd8:	b083      	sub	sp, #12
 8001fda:	460c      	mov	r4, r1
 8001fdc:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001fde:	2200      	movs	r2, #0
 8001fe0:	4630      	mov	r0, r6
 8001fe2:	2104      	movs	r1, #4
 8001fe4:	f009 ff7a 	bl	800bedc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001fe8:	4638      	mov	r0, r7
 8001fea:	2200      	movs	r2, #0
 8001fec:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001ff0:	f009 ff74 	bl	800bedc <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001ff4:	f8d9 3000 	ldr.w	r3, [r9]
 8001ff8:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001ffc:	a901      	add	r1, sp, #4
 8001ffe:	2201      	movs	r2, #1
 8002000:	4640      	mov	r0, r8
 8002002:	f00c fb11 	bl	800e628 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8002006:	f8d9 3000 	ldr.w	r3, [r9]
 800200a:	4622      	mov	r2, r4
 800200c:	a901      	add	r1, sp, #4
 800200e:	4640      	mov	r0, r8
 8002010:	f00c fdb2 	bl	800eb78 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002014:	4638      	mov	r0, r7
 8002016:	2201      	movs	r2, #1
 8002018:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 800201c:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800201e:	f009 ff5d 	bl	800bedc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002022:	4630      	mov	r0, r6
 8002024:	2201      	movs	r2, #1
 8002026:	2104      	movs	r1, #4
 8002028:	f009 ff58 	bl	800bedc <HAL_GPIO_WritePin>
}
 800202c:	4620      	mov	r0, r4
 800202e:	b003      	add	sp, #12
 8002030:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002034:	40020800 	.word	0x40020800
 8002038:	40020c00 	.word	0x40020c00
 800203c:	20000008 	.word	0x20000008
 8002040:	2000032c 	.word	0x2000032c

08002044 <LCD_Delay>:
  HAL_Delay(Delay);
 8002044:	f009 bb74 	b.w	800b730 <HAL_Delay>

08002048 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8002048:	4b03      	ldr	r3, [pc, #12]	; (8002058 <HAL_TIM_PeriodElapsedCallback+0x10>)
 800204a:	6802      	ldr	r2, [r0, #0]
 800204c:	429a      	cmp	r2, r3
 800204e:	d000      	beq.n	8002052 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8002050:	4770      	bx	lr
    HAL_IncTick();
 8002052:	f009 bb5b 	b.w	800b70c <HAL_IncTick>
 8002056:	bf00      	nop
 8002058:	40001000 	.word	0x40001000

0800205c <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 800205c:	4770      	bx	lr
 800205e:	bf00      	nop

08002060 <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 8002060:	b410      	push	{r4}
 8002062:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8002064:	4b15      	ldr	r3, [pc, #84]	; (80020bc <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8002066:	4916      	ldr	r1, [pc, #88]	; (80020c0 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8002068:	2400      	movs	r4, #0
 800206a:	9400      	str	r4, [sp, #0]
 800206c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800206e:	f042 0220 	orr.w	r2, r2, #32
 8002072:	631a      	str	r2, [r3, #48]	; 0x30
 8002074:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002076:	f002 0220 	and.w	r2, r2, #32
 800207a:	9200      	str	r2, [sp, #0]
 800207c:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 800207e:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8002080:	4a10      	ldr	r2, [pc, #64]	; (80020c4 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8002082:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 8002086:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 8002088:	6808      	ldr	r0, [r1, #0]
 800208a:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 800208e:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8002090:	9401      	str	r4, [sp, #4]
 8002092:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8002094:	f041 0104 	orr.w	r1, r1, #4
 8002098:	6319      	str	r1, [r3, #48]	; 0x30
 800209a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800209c:	f003 0304 	and.w	r3, r3, #4
 80020a0:	9301      	str	r3, [sp, #4]
 80020a2:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 80020a4:	6813      	ldr	r3, [r2, #0]
 80020a6:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80020aa:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 80020ac:	6813      	ldr	r3, [r2, #0]
 80020ae:	f043 030c 	orr.w	r3, r3, #12
 80020b2:	6013      	str	r3, [r2, #0]
}
 80020b4:	b003      	add	sp, #12
 80020b6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80020ba:	4770      	bx	lr
 80020bc:	40023800 	.word	0x40023800
 80020c0:	40021400 	.word	0x40021400
 80020c4:	40020800 	.word	0x40020800

080020c8 <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 80020c8:	b410      	push	{r4}
 80020ca:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 80020cc:	4a0e      	ldr	r2, [pc, #56]	; (8002108 <MEAS_timer_init+0x40>)
 80020ce:	2000      	movs	r0, #0
 80020d0:	9001      	str	r0, [sp, #4]
 80020d2:	6c11      	ldr	r1, [r2, #64]	; 0x40
 80020d4:	f041 0101 	orr.w	r1, r1, #1
 80020d8:	6411      	str	r1, [r2, #64]	; 0x40
 80020da:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 80020dc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 80020e0:	f002 0201 	and.w	r2, r2, #1
 80020e4:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 80020e6:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 80020ea:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 80020ec:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 80020ee:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 80020f0:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 80020f2:	685a      	ldr	r2, [r3, #4]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80020f4:	4905      	ldr	r1, [pc, #20]	; (800210c <MEAS_timer_init+0x44>)
 80020f6:	f042 0220 	orr.w	r2, r2, #32
 80020fa:	605a      	str	r2, [r3, #4]
 80020fc:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 8002100:	b003      	add	sp, #12
 8002102:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002106:	4770      	bx	lr
 8002108:	40023800 	.word	0x40023800
 800210c:	e000e100 	.word	0xe000e100

08002110 <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 8002110:	b410      	push	{r4}
 8002112:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8002114:	4a36      	ldr	r2, [pc, #216]	; (80021f0 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8002116:	4b37      	ldr	r3, [pc, #220]	; (80021f4 <MEAS_ADC3_scan_init+0xe4>)
 8002118:	4c37      	ldr	r4, [pc, #220]	; (80021f8 <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 800211a:	2100      	movs	r1, #0
 800211c:	9100      	str	r1, [sp, #0]
 800211e:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002120:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 8002124:	6450      	str	r0, [r2, #68]	; 0x44
 8002126:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002128:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 800212c:	9000      	str	r0, [sp, #0]
 800212e:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8002130:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8002132:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 8002136:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 8002138:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800213a:	f040 0004 	orr.w	r0, r0, #4
 800213e:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8002140:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8002142:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 8002146:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 8002148:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800214a:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 800214e:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 8002150:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8002152:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 8002156:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 8002158:	6858      	ldr	r0, [r3, #4]
 800215a:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 800215e:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 8002160:	6898      	ldr	r0, [r3, #8]
 8002162:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8002166:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 8002168:	6898      	ldr	r0, [r3, #8]
 800216a:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 800216e:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 8002170:	6898      	ldr	r0, [r3, #8]
 8002172:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8002176:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8002178:	9101      	str	r1, [sp, #4]
 800217a:	6b10      	ldr	r0, [r2, #48]	; 0x30
 800217c:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 8002180:	6310      	str	r0, [r2, #48]	; 0x30
 8002182:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8002184:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8002188:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 800218a:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 800218e:	9a01      	ldr	r2, [sp, #4]
 8002190:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8002194:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002196:	f022 0201 	bic.w	r2, r2, #1
 800219a:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN)
 800219c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800219e:	07d2      	lsls	r2, r2, #31
 80021a0:	d4fc      	bmi.n	800219c <MEAS_ADC3_scan_init+0x8c>
    {

    }  // Wait for DMA to finish
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 80021a2:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 80021a4:	4815      	ldr	r0, [pc, #84]	; (80021fc <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 80021a6:	4916      	ldr	r1, [pc, #88]	; (8002200 <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 80021a8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80021ac:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 80021ae:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80021b0:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80021b4:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 80021b6:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80021b8:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80021bc:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 80021be:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80021c0:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80021c4:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 80021c6:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80021c8:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80021cc:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 80021ce:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80021d0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80021d4:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 80021d6:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 80021d8:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 80021dc:	f042 0210 	orr.w	r2, r2, #16
 80021e0:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 80021e2:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 80021e4:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 80021e6:	6359      	str	r1, [r3, #52]	; 0x34
}
 80021e8:	b003      	add	sp, #12
 80021ea:	f85d 4b04 	ldr.w	r4, [sp], #4
 80021ee:	4770      	bx	lr
 80021f0:	40023800 	.word	0x40023800
 80021f4:	40012200 	.word	0x40012200
 80021f8:	e000e100 	.word	0xe000e100
 80021fc:	4001224c 	.word	0x4001224c
 8002200:	200004a4 	.word	0x200004a4

08002204 <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8002204:	4b1b      	ldr	r3, [pc, #108]	; (8002274 <DMA2_Stream1_IRQHandler+0x70>)
 8002206:	681a      	ldr	r2, [r3, #0]
 8002208:	0511      	lsls	r1, r2, #20
 800220a:	d400      	bmi.n	800220e <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 800220c:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800220e:	4a1a      	ldr	r2, [pc, #104]	; (8002278 <DMA2_Stream1_IRQHandler+0x74>)
 8002210:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8002214:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8002218:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800221c:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002220:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8002224:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002226:	f022 0201 	bic.w	r2, r2, #1
 800222a:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 800222c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800222e:	07d2      	lsls	r2, r2, #31
 8002230:	d4fc      	bmi.n	800222c <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8002232:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8002234:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8002238:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800223c:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 800223e:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8002240:	490e      	ldr	r1, [pc, #56]	; (800227c <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8002242:	f023 0301 	bic.w	r3, r3, #1
 8002246:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8002248:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 800224a:	4b0d      	ldr	r3, [pc, #52]	; (8002280 <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 800224c:	f020 0001 	bic.w	r0, r0, #1
 8002250:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 8002252:	6888      	ldr	r0, [r1, #8]
 8002254:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 8002258:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 800225a:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800225c:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8002260:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 8002262:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8002264:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 8002268:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 800226a:	6813      	ldr	r3, [r2, #0]
 800226c:	f023 0301 	bic.w	r3, r3, #1
 8002270:	6013      	str	r3, [r2, #0]
}
 8002272:	4770      	bx	lr
 8002274:	40026400 	.word	0x40026400
 8002278:	e000e100 	.word	0xe000e100
 800227c:	40012200 	.word	0x40012200
 8002280:	40023800 	.word	0x40023800

08002284 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 8002284:	b510      	push	{r4, lr}
        buffer[i] = 0;
 8002286:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800228a:	2100      	movs	r1, #0
 800228c:	480f      	ldr	r0, [pc, #60]	; (80022cc <MEAS_start_measure+0x48>)
 800228e:	f02b fe38 	bl	802df02 <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 8002292:	f7ff ff3d 	bl	8002110 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8002296:	4a0e      	ldr	r2, [pc, #56]	; (80022d0 <MEAS_start_measure+0x4c>)
 8002298:	490e      	ldr	r1, [pc, #56]	; (80022d4 <MEAS_start_measure+0x50>)
 800229a:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 800229c:	480e      	ldr	r0, [pc, #56]	; (80022d8 <MEAS_start_measure+0x54>)
 800229e:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 80022a2:	f043 0301 	orr.w	r3, r3, #1
 80022a6:	6293      	str	r3, [r2, #40]	; 0x28
 80022a8:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80022ac:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80022ae:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 80022b0:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80022b4:	f043 0301 	orr.w	r3, r3, #1
 80022b8:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 80022ba:	680b      	ldr	r3, [r1, #0]
 80022bc:	f043 0301 	orr.w	r3, r3, #1
 80022c0:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 80022c2:	6a93      	ldr	r3, [r2, #40]	; 0x28
 80022c4:	07db      	lsls	r3, r3, #31
 80022c6:	d4fc      	bmi.n	80022c2 <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 80022c8:	4800      	ldr	r0, [pc, #0]	; (80022cc <MEAS_start_measure+0x48>)
 80022ca:	bd10      	pop	{r4, pc}
 80022cc:	200004a4 	.word	0x200004a4
 80022d0:	40026400 	.word	0x40026400
 80022d4:	e000e100 	.word	0xe000e100
 80022d8:	40012200 	.word	0x40012200

080022dc <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 80022dc:	2004      	movs	r0, #4
 80022de:	4770      	bx	lr

080022e0 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 80022e0:	2040      	movs	r0, #64	; 0x40
 80022e2:	4770      	bx	lr

080022e4 <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 80022e4:	f44f 7020 	mov.w	r0, #640	; 0x280
 80022e8:	4770      	bx	lr
 80022ea:	bf00      	nop

080022ec <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80022ec:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80022ee:	4b0e      	ldr	r3, [pc, #56]	; (8002328 <HAL_MspInit+0x3c>)
 80022f0:	2200      	movs	r2, #0
 80022f2:	9200      	str	r2, [sp, #0]
 80022f4:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80022f6:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80022fa:	6459      	str	r1, [r3, #68]	; 0x44
 80022fc:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80022fe:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8002302:	9000      	str	r0, [sp, #0]
 8002304:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002306:	9201      	str	r2, [sp, #4]
 8002308:	6c18      	ldr	r0, [r3, #64]	; 0x40
 800230a:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 800230e:	6418      	str	r0, [r3, #64]	; 0x40
 8002310:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002312:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002316:	9301      	str	r3, [sp, #4]
 8002318:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800231a:	210f      	movs	r1, #15
 800231c:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002320:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002322:	f009 ba29 	b.w	800b778 <HAL_NVIC_SetPriority>
 8002326:	bf00      	nop
 8002328:	40023800 	.word	0x40023800

0800232c <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 800232c:	4b0b      	ldr	r3, [pc, #44]	; (800235c <HAL_CRC_MspInit+0x30>)
 800232e:	6802      	ldr	r2, [r0, #0]
 8002330:	429a      	cmp	r2, r3
 8002332:	d000      	beq.n	8002336 <HAL_CRC_MspInit+0xa>
 8002334:	4770      	bx	lr
{
 8002336:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8002338:	2200      	movs	r2, #0
 800233a:	9201      	str	r2, [sp, #4]
 800233c:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8002340:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8002344:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8002348:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800234c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800234e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002352:	9301      	str	r3, [sp, #4]
 8002354:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8002356:	b002      	add	sp, #8
 8002358:	4770      	bx	lr
 800235a:	bf00      	nop
 800235c:	40023000 	.word	0x40023000

08002360 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002360:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8002364:	4b2e      	ldr	r3, [pc, #184]	; (8002420 <HAL_I2C_MspInit+0xc0>)
 8002366:	6802      	ldr	r2, [r0, #0]
{
 8002368:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800236a:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 800236c:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800236e:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8002372:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8002376:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8002378:	d002      	beq.n	8002380 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 800237a:	b00a      	add	sp, #40	; 0x28
 800237c:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002380:	4d28      	ldr	r5, [pc, #160]	; (8002424 <HAL_I2C_MspInit+0xc4>)
 8002382:	9401      	str	r4, [sp, #4]
 8002384:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002386:	4828      	ldr	r0, [pc, #160]	; (8002428 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002388:	f043 0304 	orr.w	r3, r3, #4
 800238c:	632b      	str	r3, [r5, #48]	; 0x30
 800238e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8002390:	f003 0304 	and.w	r3, r3, #4
 8002394:	9301      	str	r3, [sp, #4]
 8002396:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002398:	9402      	str	r4, [sp, #8]
 800239a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800239c:	f043 0301 	orr.w	r3, r3, #1
 80023a0:	632b      	str	r3, [r5, #48]	; 0x30
 80023a2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80023a4:	f003 0301 	and.w	r3, r3, #1
 80023a8:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 80023aa:	f44f 7200 	mov.w	r2, #512	; 0x200
 80023ae:	f04f 0801 	mov.w	r8, #1
 80023b2:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80023b6:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023b8:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 80023ba:	2312      	movs	r3, #18
 80023bc:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80023c0:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80023c4:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80023c6:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80023c8:	f009 fc44 	bl	800bc54 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80023cc:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80023ce:	f44f 7280 	mov.w	r2, #256	; 0x100
 80023d2:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80023d4:	4815      	ldr	r0, [pc, #84]	; (800242c <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80023d6:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80023d8:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80023dc:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80023e0:	f009 fc38 	bl	800bc54 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 80023e4:	9403      	str	r4, [sp, #12]
 80023e6:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80023e8:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80023ec:	642b      	str	r3, [r5, #64]	; 0x40
 80023ee:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80023f0:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 80023f4:	4622      	mov	r2, r4
 80023f6:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 80023f8:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 80023fa:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 80023fc:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 80023fe:	f009 f9bb 	bl	800b778 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8002402:	2048      	movs	r0, #72	; 0x48
 8002404:	f009 f9f6 	bl	800b7f4 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8002408:	6a2b      	ldr	r3, [r5, #32]
 800240a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800240e:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8002410:	6a2b      	ldr	r3, [r5, #32]
 8002412:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8002416:	622b      	str	r3, [r5, #32]
}
 8002418:	b00a      	add	sp, #40	; 0x28
 800241a:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 800241e:	bf00      	nop
 8002420:	40005c00 	.word	0x40005c00
 8002424:	40023800 	.word	0x40023800
 8002428:	40020800 	.word	0x40020800
 800242c:	40020000 	.word	0x40020000

08002430 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002430:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002434:	4604      	mov	r4, r0
 8002436:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002438:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800243a:	2230      	movs	r2, #48	; 0x30
 800243c:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800243e:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8002442:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8002446:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002448:	f02b fd5b 	bl	802df02 <memset>
  if(hltdc->Instance==LTDC)
 800244c:	4b67      	ldr	r3, [pc, #412]	; (80025ec <HAL_LTDC_MspInit+0x1bc>)
 800244e:	6822      	ldr	r2, [r4, #0]
 8002450:	429a      	cmp	r2, r3
 8002452:	d002      	beq.n	800245a <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8002454:	b01a      	add	sp, #104	; 0x68
 8002456:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800245a:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 800245c:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800245e:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8002460:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002462:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8002464:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002468:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800246a:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 800246c:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800246e:	f00b fe5b 	bl	800e128 <HAL_RCCEx_PeriphCLKConfig>
 8002472:	2800      	cmp	r0, #0
 8002474:	f040 80b7 	bne.w	80025e6 <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002478:	4b5d      	ldr	r3, [pc, #372]	; (80025f0 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800247a:	485e      	ldr	r0, [pc, #376]	; (80025f4 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 800247c:	2400      	movs	r4, #0
 800247e:	9401      	str	r4, [sp, #4]
 8002480:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002482:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8002486:	645a      	str	r2, [r3, #68]	; 0x44
 8002488:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800248a:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 800248e:	9201      	str	r2, [sp, #4]
 8002490:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002492:	9402      	str	r4, [sp, #8]
 8002494:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002496:	f042 0220 	orr.w	r2, r2, #32
 800249a:	631a      	str	r2, [r3, #48]	; 0x30
 800249c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800249e:	f002 0220 	and.w	r2, r2, #32
 80024a2:	9202      	str	r2, [sp, #8]
 80024a4:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80024a6:	9403      	str	r4, [sp, #12]
 80024a8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024aa:	f042 0201 	orr.w	r2, r2, #1
 80024ae:	631a      	str	r2, [r3, #48]	; 0x30
 80024b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024b2:	f002 0201 	and.w	r2, r2, #1
 80024b6:	9203      	str	r2, [sp, #12]
 80024b8:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80024ba:	9404      	str	r4, [sp, #16]
 80024bc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024be:	f042 0202 	orr.w	r2, r2, #2
 80024c2:	631a      	str	r2, [r3, #48]	; 0x30
 80024c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024c6:	f002 0202 	and.w	r2, r2, #2
 80024ca:	9204      	str	r2, [sp, #16]
 80024cc:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80024ce:	9405      	str	r4, [sp, #20]
 80024d0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024d2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80024d6:	631a      	str	r2, [r3, #48]	; 0x30
 80024d8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024da:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80024de:	9205      	str	r2, [sp, #20]
 80024e0:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80024e2:	9406      	str	r4, [sp, #24]
 80024e4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024e6:	f042 0204 	orr.w	r2, r2, #4
 80024ea:	631a      	str	r2, [r3, #48]	; 0x30
 80024ec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024ee:	f002 0204 	and.w	r2, r2, #4
 80024f2:	9206      	str	r2, [sp, #24]
 80024f4:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80024f6:	9407      	str	r4, [sp, #28]
 80024f8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024fa:	f042 0208 	orr.w	r2, r2, #8
 80024fe:	631a      	str	r2, [r3, #48]	; 0x30
 8002500:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002502:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8002506:	2600      	movs	r6, #0
 8002508:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800250a:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800250c:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800250e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8002510:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002514:	2302      	movs	r3, #2
 8002516:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800251a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800251e:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002520:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002522:	f009 fb97 	bl	800bc54 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002526:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002528:	f641 0258 	movw	r2, #6232	; 0x1858
 800252c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800252e:	4832      	ldr	r0, [pc, #200]	; (80025f8 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002530:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002532:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002536:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800253a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800253e:	f009 fb89 	bl	800bc54 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002542:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002544:	2203      	movs	r2, #3
 8002546:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002548:	482c      	ldr	r0, [pc, #176]	; (80025fc <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800254a:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800254e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002552:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002556:	f009 fb7d 	bl	800bc54 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800255a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 800255c:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8002560:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002562:	4826      	ldr	r0, [pc, #152]	; (80025fc <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002564:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002566:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800256a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800256e:	f009 fb71 	bl	800bc54 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002572:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002574:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 8002578:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800257a:	4821      	ldr	r0, [pc, #132]	; (8002600 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800257c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 800257e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002582:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002586:	f009 fb65 	bl	800bc54 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800258a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800258c:	22c0      	movs	r2, #192	; 0xc0
 800258e:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002590:	481c      	ldr	r0, [pc, #112]	; (8002604 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002592:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002594:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002598:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800259c:	f009 fb5a 	bl	800bc54 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80025a0:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80025a2:	2208      	movs	r2, #8
 80025a4:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80025a6:	4818      	ldr	r0, [pc, #96]	; (8002608 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80025a8:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80025aa:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80025ae:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80025b2:	f009 fb4f 	bl	800bc54 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80025b6:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80025b8:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80025ba:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80025be:	4810      	ldr	r0, [pc, #64]	; (8002600 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80025c0:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80025c4:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80025c8:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80025cc:	f009 fb42 	bl	800bc54 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 80025d0:	4622      	mov	r2, r4
 80025d2:	2105      	movs	r1, #5
 80025d4:	2058      	movs	r0, #88	; 0x58
 80025d6:	f009 f8cf 	bl	800b778 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80025da:	2058      	movs	r0, #88	; 0x58
 80025dc:	f009 f90a 	bl	800b7f4 <HAL_NVIC_EnableIRQ>
}
 80025e0:	b01a      	add	sp, #104	; 0x68
 80025e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 80025e6:	f7ff fd39 	bl	800205c <Error_Handler>
 80025ea:	e745      	b.n	8002478 <HAL_LTDC_MspInit+0x48>
 80025ec:	40016800 	.word	0x40016800
 80025f0:	40023800 	.word	0x40023800
 80025f4:	40021400 	.word	0x40021400
 80025f8:	40020000 	.word	0x40020000
 80025fc:	40020400 	.word	0x40020400
 8002600:	40021800 	.word	0x40021800
 8002604:	40020800 	.word	0x40020800
 8002608:	40020c00 	.word	0x40020c00
 800260c:	00000000 	.word	0x00000000

08002610 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002610:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 8002612:	4a1b      	ldr	r2, [pc, #108]	; (8002680 <HAL_SPI_MspInit+0x70>)
 8002614:	6801      	ldr	r1, [r0, #0]
{
 8002616:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002618:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 800261a:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800261c:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002620:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8002624:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 8002626:	d001      	beq.n	800262c <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002628:	b008      	add	sp, #32
 800262a:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 800262c:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8002630:	9300      	str	r3, [sp, #0]
 8002632:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002634:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8002638:	6450      	str	r0, [r2, #68]	; 0x44
 800263a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800263c:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8002640:	9000      	str	r0, [sp, #0]
 8002642:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002644:	9301      	str	r3, [sp, #4]
 8002646:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002648:	480e      	ldr	r0, [pc, #56]	; (8002684 <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800264a:	f043 0320 	orr.w	r3, r3, #32
 800264e:	6313      	str	r3, [r2, #48]	; 0x30
 8002650:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8002652:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8002678 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002656:	f003 0320 	and.w	r3, r3, #32
 800265a:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800265c:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800265e:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002660:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8002662:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002666:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800266a:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800266c:	f009 faf2 	bl	800bc54 <HAL_GPIO_Init>
}
 8002670:	b008      	add	sp, #32
 8002672:	bd10      	pop	{r4, pc}
 8002674:	f3af 8000 	nop.w
 8002678:	00000380 	.word	0x00000380
 800267c:	00000002 	.word	0x00000002
 8002680:	40015000 	.word	0x40015000
 8002684:	40021400 	.word	0x40021400

08002688 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM2)
 8002688:	6803      	ldr	r3, [r0, #0]
 800268a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
{
 800268e:	b084      	sub	sp, #16
  if(htim_base->Instance==TIM2)
 8002690:	d018      	beq.n	80026c4 <HAL_TIM_Base_MspInit+0x3c>
    __HAL_RCC_TIM2_CLK_ENABLE();
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8002692:	4a22      	ldr	r2, [pc, #136]	; (800271c <HAL_TIM_Base_MspInit+0x94>)
 8002694:	4293      	cmp	r3, r2
 8002696:	d007      	beq.n	80026a8 <HAL_TIM_Base_MspInit+0x20>
    __HAL_RCC_TIM3_CLK_ENABLE();
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
  else if(htim_base->Instance==TIM9)
 8002698:	4a21      	ldr	r2, [pc, #132]	; (8002720 <HAL_TIM_Base_MspInit+0x98>)
 800269a:	4293      	cmp	r3, r2
 800269c:	d021      	beq.n	80026e2 <HAL_TIM_Base_MspInit+0x5a>
    __HAL_RCC_TIM9_CLK_ENABLE();
  /* USER CODE BEGIN TIM9_MspInit 1 */

  /* USER CODE END TIM9_MspInit 1 */
  }
  else if(htim_base->Instance==TIM14)
 800269e:	4a21      	ldr	r2, [pc, #132]	; (8002724 <HAL_TIM_Base_MspInit+0x9c>)
 80026a0:	4293      	cmp	r3, r2
 80026a2:	d02c      	beq.n	80026fe <HAL_TIM_Base_MspInit+0x76>
  /* USER CODE BEGIN TIM14_MspInit 1 */

  /* USER CODE END TIM14_MspInit 1 */
  }

}
 80026a4:	b004      	add	sp, #16
 80026a6:	4770      	bx	lr
    __HAL_RCC_TIM3_CLK_ENABLE();
 80026a8:	4b1f      	ldr	r3, [pc, #124]	; (8002728 <HAL_TIM_Base_MspInit+0xa0>)
 80026aa:	2200      	movs	r2, #0
 80026ac:	9201      	str	r2, [sp, #4]
 80026ae:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80026b0:	f042 0202 	orr.w	r2, r2, #2
 80026b4:	641a      	str	r2, [r3, #64]	; 0x40
 80026b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80026b8:	f003 0302 	and.w	r3, r3, #2
 80026bc:	9301      	str	r3, [sp, #4]
 80026be:	9b01      	ldr	r3, [sp, #4]
}
 80026c0:	b004      	add	sp, #16
 80026c2:	4770      	bx	lr
    __HAL_RCC_TIM2_CLK_ENABLE();
 80026c4:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 80026c8:	2200      	movs	r2, #0
 80026ca:	9200      	str	r2, [sp, #0]
 80026cc:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80026ce:	f042 0201 	orr.w	r2, r2, #1
 80026d2:	641a      	str	r2, [r3, #64]	; 0x40
 80026d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80026d6:	f003 0301 	and.w	r3, r3, #1
 80026da:	9300      	str	r3, [sp, #0]
 80026dc:	9b00      	ldr	r3, [sp, #0]
}
 80026de:	b004      	add	sp, #16
 80026e0:	4770      	bx	lr
    __HAL_RCC_TIM9_CLK_ENABLE();
 80026e2:	4b11      	ldr	r3, [pc, #68]	; (8002728 <HAL_TIM_Base_MspInit+0xa0>)
 80026e4:	2200      	movs	r2, #0
 80026e6:	9202      	str	r2, [sp, #8]
 80026e8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80026ea:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80026ee:	645a      	str	r2, [r3, #68]	; 0x44
 80026f0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80026f2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80026f6:	9302      	str	r3, [sp, #8]
 80026f8:	9b02      	ldr	r3, [sp, #8]
}
 80026fa:	b004      	add	sp, #16
 80026fc:	4770      	bx	lr
    __HAL_RCC_TIM14_CLK_ENABLE();
 80026fe:	4b0a      	ldr	r3, [pc, #40]	; (8002728 <HAL_TIM_Base_MspInit+0xa0>)
 8002700:	2200      	movs	r2, #0
 8002702:	9203      	str	r2, [sp, #12]
 8002704:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002706:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800270a:	641a      	str	r2, [r3, #64]	; 0x40
 800270c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800270e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002712:	9303      	str	r3, [sp, #12]
 8002714:	9b03      	ldr	r3, [sp, #12]
}
 8002716:	b004      	add	sp, #16
 8002718:	4770      	bx	lr
 800271a:	bf00      	nop
 800271c:	40000400 	.word	0x40000400
 8002720:	40014000 	.word	0x40014000
 8002724:	40002000 	.word	0x40002000
 8002728:	40023800 	.word	0x40023800
 800272c:	00000000 	.word	0x00000000

08002730 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8002730:	b500      	push	{lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(htim->Instance==TIM9)
 8002732:	6802      	ldr	r2, [r0, #0]
 8002734:	4924      	ldr	r1, [pc, #144]	; (80027c8 <HAL_TIM_MspPostInit+0x98>)
{
 8002736:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002738:	2300      	movs	r3, #0
  if(htim->Instance==TIM9)
 800273a:	428a      	cmp	r2, r1
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800273c:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002740:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8002744:	9306      	str	r3, [sp, #24]
  if(htim->Instance==TIM9)
 8002746:	d005      	beq.n	8002754 <HAL_TIM_MspPostInit+0x24>

  /* USER CODE BEGIN TIM9_MspPostInit 1 */

  /* USER CODE END TIM9_MspPostInit 1 */
  }
  else if(htim->Instance==TIM14)
 8002748:	4920      	ldr	r1, [pc, #128]	; (80027cc <HAL_TIM_MspPostInit+0x9c>)
 800274a:	428a      	cmp	r2, r1
 800274c:	d01a      	beq.n	8002784 <HAL_TIM_MspPostInit+0x54>
  /* USER CODE BEGIN TIM14_MspPostInit 1 */

  /* USER CODE END TIM14_MspPostInit 1 */
  }

}
 800274e:	b009      	add	sp, #36	; 0x24
 8002750:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002754:	4a1e      	ldr	r2, [pc, #120]	; (80027d0 <HAL_TIM_MspPostInit+0xa0>)
 8002756:	9300      	str	r3, [sp, #0]
 8002758:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800275a:	481e      	ldr	r0, [pc, #120]	; (80027d4 <HAL_TIM_MspPostInit+0xa4>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800275c:	f043 0301 	orr.w	r3, r3, #1
 8002760:	6313      	str	r3, [r2, #48]	; 0x30
 8002762:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8002764:	ed9f 7b14 	vldr	d7, [pc, #80]	; 80027b8 <HAL_TIM_MspPostInit+0x88>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002768:	f003 0301 	and.w	r3, r3, #1
 800276c:	9300      	str	r3, [sp, #0]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800276e:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM9;
 8002770:	2303      	movs	r3, #3
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8002772:	ed8d 7b02 	vstr	d7, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002776:	9a00      	ldr	r2, [sp, #0]
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM9;
 8002778:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800277a:	f009 fa6b 	bl	800bc54 <HAL_GPIO_Init>
}
 800277e:	b009      	add	sp, #36	; 0x24
 8002780:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002784:	4a12      	ldr	r2, [pc, #72]	; (80027d0 <HAL_TIM_MspPostInit+0xa0>)
 8002786:	9301      	str	r3, [sp, #4]
 8002788:	6b13      	ldr	r3, [r2, #48]	; 0x30
 800278a:	f043 0301 	orr.w	r3, r3, #1
 800278e:	6313      	str	r3, [r2, #48]	; 0x30
 8002790:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = BUZZER_PWM_Pin;
 8002792:	ed9f 7b0b 	vldr	d7, [pc, #44]	; 80027c0 <HAL_TIM_MspPostInit+0x90>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002796:	f003 0301 	and.w	r3, r3, #1
 800279a:	9301      	str	r3, [sp, #4]
 800279c:	9801      	ldr	r0, [sp, #4]
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 800279e:	480d      	ldr	r0, [pc, #52]	; (80027d4 <HAL_TIM_MspPostInit+0xa4>)
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80027a0:	2202      	movs	r2, #2
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 80027a2:	2309      	movs	r3, #9
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 80027a4:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = BUZZER_PWM_Pin;
 80027a6:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80027aa:	9205      	str	r2, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 80027ac:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 80027ae:	f009 fa51 	bl	800bc54 <HAL_GPIO_Init>
}
 80027b2:	b009      	add	sp, #36	; 0x24
 80027b4:	f85d fb04 	ldr.w	pc, [sp], #4
 80027b8:	00000004 	.word	0x00000004
 80027bc:	00000002 	.word	0x00000002
 80027c0:	00000080 	.word	0x00000080
 80027c4:	00000002 	.word	0x00000002
 80027c8:	40014000 	.word	0x40014000
 80027cc:	40002000 	.word	0x40002000
 80027d0:	40023800 	.word	0x40023800
 80027d4:	40020000 	.word	0x40020000

080027d8 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80027d8:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 80027da:	4b2b      	ldr	r3, [pc, #172]	; (8002888 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80027dc:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 80027de:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80027e0:	2200      	movs	r2, #0
 80027e2:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 80027e4:	2c00      	cmp	r4, #0
 80027e6:	d14c      	bne.n	8002882 <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 80027e8:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 80027ea:	4a28      	ldr	r2, [pc, #160]	; (800288c <HAL_SDRAM_MspInit+0xb4>)
 80027ec:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 80027ee:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 80027f0:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80027f2:	4827      	ldr	r0, [pc, #156]	; (8002890 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80027f4:	433b      	orrs	r3, r7
 80027f6:	6393      	str	r3, [r2, #56]	; 0x38
 80027f8:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80027fa:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80027fc:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80027fe:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002800:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8002804:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002806:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002808:	2302      	movs	r3, #2
 800280a:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800280e:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002812:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002814:	f009 fa1e 	bl	800bc54 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002818:	481e      	ldr	r0, [pc, #120]	; (8002894 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 800281a:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800281c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800281e:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002820:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002824:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002828:	f009 fa14 	bl	800bc54 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 800282c:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002830:	4819      	ldr	r0, [pc, #100]	; (8002898 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002832:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002834:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002836:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800283a:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800283e:	f009 fa09 	bl	800bc54 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002842:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002846:	4815      	ldr	r0, [pc, #84]	; (800289c <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002848:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800284a:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800284c:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002850:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002854:	f009 f9fe 	bl	800bc54 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002858:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800285c:	4810      	ldr	r0, [pc, #64]	; (80028a0 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 800285e:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002860:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002862:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002866:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800286a:	f009 f9f3 	bl	800bc54 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 800286e:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002870:	480c      	ldr	r0, [pc, #48]	; (80028a4 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002872:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002874:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002876:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800287a:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 800287c:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800287e:	f009 f9e9 	bl	800bc54 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002882:	b009      	add	sp, #36	; 0x24
 8002884:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002886:	bf00      	nop
 8002888:	200008a4 	.word	0x200008a4
 800288c:	40023800 	.word	0x40023800
 8002890:	40021400 	.word	0x40021400
 8002894:	40020800 	.word	0x40020800
 8002898:	40021800 	.word	0x40021800
 800289c:	40021000 	.word	0x40021000
 80028a0:	40020c00 	.word	0x40020c00
 80028a4:	40020400 	.word	0x40020400

080028a8 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80028a8:	b570      	push	{r4, r5, r6, lr}
 80028aa:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 80028ac:	4b23      	ldr	r3, [pc, #140]	; (800293c <HAL_InitTick+0x94>)
 80028ae:	2200      	movs	r2, #0
 80028b0:	9202      	str	r2, [sp, #8]
 80028b2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80028b4:	f042 0210 	orr.w	r2, r2, #16
 80028b8:	641a      	str	r2, [r3, #64]	; 0x40
 80028ba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80028bc:	f003 0310 	and.w	r3, r3, #16
 80028c0:	9302      	str	r3, [sp, #8]
{
 80028c2:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80028c4:	a901      	add	r1, sp, #4
 80028c6:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80028c8:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80028ca:	f00b fc0b 	bl	800e0e4 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 80028ce:	9b06      	ldr	r3, [sp, #24]
 80028d0:	b9d3      	cbnz	r3, 8002908 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 80028d2:	f00b fbf7 	bl	800e0c4 <HAL_RCC_GetPCLK1Freq>
 80028d6:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80028d8:	4a19      	ldr	r2, [pc, #100]	; (8002940 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80028da:	4c1a      	ldr	r4, [pc, #104]	; (8002944 <HAL_InitTick+0x9c>)
 80028dc:	491a      	ldr	r1, [pc, #104]	; (8002948 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80028de:	fba2 2303 	umull	r2, r3, r2, r3
 80028e2:	0c9b      	lsrs	r3, r3, #18
 80028e4:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 80028e6:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 80028e8:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80028ec:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80028ee:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 80028f2:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80028f4:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80028f6:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80028f8:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 80028fa:	f00c fa23 	bl	800ed44 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80028fe:	4606      	mov	r6, r0
 8002900:	b130      	cbz	r0, 8002910 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 8002902:	4630      	mov	r0, r6
 8002904:	b008      	add	sp, #32
 8002906:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002908:	f00b fbdc 	bl	800e0c4 <HAL_RCC_GetPCLK1Freq>
 800290c:	0043      	lsls	r3, r0, #1
 800290e:	e7e3      	b.n	80028d8 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 8002910:	4620      	mov	r0, r4
 8002912:	f00c faa5 	bl	800ee60 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8002916:	4606      	mov	r6, r0
 8002918:	2800      	cmp	r0, #0
 800291a:	d1f2      	bne.n	8002902 <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 800291c:	2036      	movs	r0, #54	; 0x36
 800291e:	f008 ff69 	bl	800b7f4 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002922:	2d0f      	cmp	r5, #15
 8002924:	d901      	bls.n	800292a <HAL_InitTick+0x82>
        status = HAL_ERROR;
 8002926:	2601      	movs	r6, #1
 8002928:	e7eb      	b.n	8002902 <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 800292a:	4632      	mov	r2, r6
 800292c:	4629      	mov	r1, r5
 800292e:	2036      	movs	r0, #54	; 0x36
 8002930:	f008 ff22 	bl	800b778 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002934:	4b05      	ldr	r3, [pc, #20]	; (800294c <HAL_InitTick+0xa4>)
 8002936:	601d      	str	r5, [r3, #0]
 8002938:	e7e3      	b.n	8002902 <HAL_InitTick+0x5a>
 800293a:	bf00      	nop
 800293c:	40023800 	.word	0x40023800
 8002940:	431bde83 	.word	0x431bde83
 8002944:	200008a8 	.word	0x200008a8
 8002948:	40001000 	.word	0x40001000
 800294c:	20000080 	.word	0x20000080

08002950 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002950:	4770      	bx	lr
 8002952:	bf00      	nop

08002954 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002954:	e7fe      	b.n	8002954 <HardFault_Handler>
 8002956:	bf00      	nop

08002958 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002958:	e7fe      	b.n	8002958 <MemManage_Handler>
 800295a:	bf00      	nop

0800295c <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800295c:	e7fe      	b.n	800295c <BusFault_Handler>
 800295e:	bf00      	nop

08002960 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002960:	e7fe      	b.n	8002960 <UsageFault_Handler>
 8002962:	bf00      	nop

08002964 <DebugMon_Handler>:
 8002964:	4770      	bx	lr
 8002966:	bf00      	nop

08002968 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8002968:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 800296a:	20c8      	movs	r0, #200	; 0xc8
 800296c:	f008 fee0 	bl	800b730 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8002970:	4804      	ldr	r0, [pc, #16]	; (8002984 <EXTI3_IRQHandler+0x1c>)
 8002972:	2200      	movs	r2, #0
 8002974:	2120      	movs	r1, #32
 8002976:	f009 fab1 	bl	800bedc <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 800297a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 800297e:	2008      	movs	r0, #8
 8002980:	f009 babc 	b.w	800befc <HAL_GPIO_EXTI_IRQHandler>
 8002984:	40021000 	.word	0x40021000

08002988 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002988:	4801      	ldr	r0, [pc, #4]	; (8002990 <TIM6_DAC_IRQHandler+0x8>)
 800298a:	f00c bdf9 	b.w	800f580 <HAL_TIM_IRQHandler>
 800298e:	bf00      	nop
 8002990:	200008a8 	.word	0x200008a8

08002994 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8002994:	4801      	ldr	r0, [pc, #4]	; (800299c <I2C3_EV_IRQHandler+0x8>)
 8002996:	f00a ba11 	b.w	800cdbc <HAL_I2C_EV_IRQHandler>
 800299a:	bf00      	nop
 800299c:	200001fc 	.word	0x200001fc

080029a0 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80029a0:	4801      	ldr	r0, [pc, #4]	; (80029a8 <LTDC_IRQHandler+0x8>)
 80029a2:	f00a bf85 	b.w	800d8b0 <HAL_LTDC_IRQHandler>
 80029a6:	bf00      	nop
 80029a8:	20000250 	.word	0x20000250

080029ac <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 80029ac:	2001      	movs	r0, #1
 80029ae:	4770      	bx	lr

080029b0 <_kill>:

int _kill(int pid, int sig)
{
 80029b0:	b508      	push	{r3, lr}
	errno = EINVAL;
 80029b2:	f02b fb9f 	bl	802e0f4 <__errno>
 80029b6:	2316      	movs	r3, #22
 80029b8:	6003      	str	r3, [r0, #0]
	return -1;
}
 80029ba:	f04f 30ff 	mov.w	r0, #4294967295
 80029be:	bd08      	pop	{r3, pc}

080029c0 <_exit>:

void _exit (int status)
{
 80029c0:	b508      	push	{r3, lr}
	errno = EINVAL;
 80029c2:	f02b fb97 	bl	802e0f4 <__errno>
 80029c6:	2316      	movs	r3, #22
 80029c8:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 80029ca:	e7fe      	b.n	80029ca <_exit+0xa>

080029cc <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80029cc:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80029ce:	1e16      	subs	r6, r2, #0
 80029d0:	dd07      	ble.n	80029e2 <_read+0x16>
 80029d2:	460c      	mov	r4, r1
 80029d4:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 80029d6:	f3af 8000 	nop.w
 80029da:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80029de:	42a5      	cmp	r5, r4
 80029e0:	d1f9      	bne.n	80029d6 <_read+0xa>
	}

return len;
}
 80029e2:	4630      	mov	r0, r6
 80029e4:	bd70      	pop	{r4, r5, r6, pc}
 80029e6:	bf00      	nop

080029e8 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80029e8:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80029ea:	1e16      	subs	r6, r2, #0
 80029ec:	dd07      	ble.n	80029fe <_write+0x16>
 80029ee:	460c      	mov	r4, r1
 80029f0:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 80029f2:	f814 0b01 	ldrb.w	r0, [r4], #1
 80029f6:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80029fa:	42ac      	cmp	r4, r5
 80029fc:	d1f9      	bne.n	80029f2 <_write+0xa>
	}
	return len;
}
 80029fe:	4630      	mov	r0, r6
 8002a00:	bd70      	pop	{r4, r5, r6, pc}
 8002a02:	bf00      	nop

08002a04 <_close>:

int _close(int file)
{
	return -1;
}
 8002a04:	f04f 30ff 	mov.w	r0, #4294967295
 8002a08:	4770      	bx	lr
 8002a0a:	bf00      	nop

08002a0c <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002a0c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002a10:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002a12:	2000      	movs	r0, #0
 8002a14:	4770      	bx	lr
 8002a16:	bf00      	nop

08002a18 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002a18:	2001      	movs	r0, #1
 8002a1a:	4770      	bx	lr

08002a1c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002a1c:	2000      	movs	r0, #0
 8002a1e:	4770      	bx	lr

08002a20 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002a20:	4a0b      	ldr	r2, [pc, #44]	; (8002a50 <_sbrk+0x30>)
{
 8002a22:	b508      	push	{r3, lr}
 8002a24:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002a26:	6810      	ldr	r0, [r2, #0]
 8002a28:	b128      	cbz	r0, 8002a36 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8002a2a:	4403      	add	r3, r0
 8002a2c:	4669      	mov	r1, sp
 8002a2e:	428b      	cmp	r3, r1
 8002a30:	d807      	bhi.n	8002a42 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8002a32:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8002a34:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8002a36:	4807      	ldr	r0, [pc, #28]	; (8002a54 <_sbrk+0x34>)
 8002a38:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002a3a:	4403      	add	r3, r0
 8002a3c:	4669      	mov	r1, sp
 8002a3e:	428b      	cmp	r3, r1
 8002a40:	d9f7      	bls.n	8002a32 <_sbrk+0x12>
		errno = ENOMEM;
 8002a42:	f02b fb57 	bl	802e0f4 <__errno>
 8002a46:	230c      	movs	r3, #12
 8002a48:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002a4a:	f04f 30ff 	mov.w	r0, #4294967295
}
 8002a4e:	bd08      	pop	{r3, pc}
 8002a50:	200008f0 	.word	0x200008f0
 8002a54:	20014488 	.word	0x20014488

08002a58 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8002a58:	4770      	bx	lr
 8002a5a:	bf00      	nop

08002a5c <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8002a5c:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8002a5e:	f000 fbab 	bl	80031b8 <touchgfx_components_init>
  touchgfx_init();
}
 8002a62:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8002a66:	f000 bb33 	b.w	80030d0 <touchgfx_init>
 8002a6a:	bf00      	nop

08002a6c <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8002a6c:	f000 bba6 	b.w	80031bc <touchgfx_taskEntry>

08002a70 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8002a70:	4770      	bx	lr

08002a72 <_ZN20STM32TouchControllerD0Ev>:
 8002a72:	b510      	push	{r4, lr}
 8002a74:	2104      	movs	r1, #4
 8002a76:	4604      	mov	r4, r0
 8002a78:	f02a f957 	bl	802cd2a <_ZdlPvj>
 8002a7c:	4620      	mov	r0, r4
 8002a7e:	bd10      	pop	{r4, pc}

08002a80 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8002a80:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8002a82:	4b0c      	ldr	r3, [pc, #48]	; (8002ab4 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8002a84:	4c0c      	ldr	r4, [pc, #48]	; (8002ab8 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8002a86:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8002a88:	4b0c      	ldr	r3, [pc, #48]	; (8002abc <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8002a8a:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8002a8c:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8002a8e:	6863      	ldr	r3, [r4, #4]
 8002a90:	4798      	blx	r3
 8002a92:	f640 0311 	movw	r3, #2065	; 0x811
 8002a96:	4298      	cmp	r0, r3
 8002a98:	d10a      	bne.n	8002ab0 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8002a9a:	4d09      	ldr	r5, [pc, #36]	; (8002ac0 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8002a9c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8002a9e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8002aa0:	2082      	movs	r0, #130	; 0x82
 8002aa2:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8002aa4:	682b      	ldr	r3, [r5, #0]
 8002aa6:	2082      	movs	r0, #130	; 0x82
 8002aa8:	68db      	ldr	r3, [r3, #12]
 8002aaa:	4798      	blx	r3
 8002aac:	2000      	movs	r0, #0
    }

    return ret;
}
 8002aae:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8002ab0:	2001      	movs	r0, #1
 8002ab2:	e7fc      	b.n	8002aae <_Z11BSP_TS_Inittt+0x2e>
 8002ab4:	200008f4 	.word	0x200008f4
 8002ab8:	20000050 	.word	0x20000050
 8002abc:	200008f6 	.word	0x200008f6
 8002ac0:	200008f8 	.word	0x200008f8

08002ac4 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8002ac4:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8002ac8:	20f0      	movs	r0, #240	; 0xf0
 8002aca:	f7ff bfd9 	b.w	8002a80 <_Z11BSP_TS_Inittt>
	...

08002ad0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8002ad0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8002ad2:	4d33      	ldr	r5, [pc, #204]	; (8002ba0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 8002ad4:	682b      	ldr	r3, [r5, #0]
{
 8002ad6:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8002ad8:	691b      	ldr	r3, [r3, #16]
 8002ada:	2082      	movs	r0, #130	; 0x82
 8002adc:	4798      	blx	r3
 8002ade:	b280      	uxth	r0, r0
 8002ae0:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8002ae2:	2800      	cmp	r0, #0
 8002ae4:	d04a      	beq.n	8002b7c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8002ae6:	682b      	ldr	r3, [r5, #0]
 8002ae8:	f10d 0206 	add.w	r2, sp, #6
 8002aec:	695b      	ldr	r3, [r3, #20]
 8002aee:	a901      	add	r1, sp, #4
 8002af0:	2082      	movs	r0, #130	; 0x82
 8002af2:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8002af4:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8002af8:	f640 6274 	movw	r2, #3700	; 0xe74
 8002afc:	4293      	cmp	r3, r2
 8002afe:	d93f      	bls.n	8002b80 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8002b00:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 8002b04:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8002b08:	1ad2      	subs	r2, r2, r3
 8002b0a:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8002b0c:	2a0a      	cmp	r2, #10
 8002b0e:	d93d      	bls.n	8002b8c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8002b10:	230b      	movs	r3, #11
 8002b12:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8002b16:	4b23      	ldr	r3, [pc, #140]	; (8002ba4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8002b18:	881b      	ldrh	r3, [r3, #0]
 8002b1a:	429a      	cmp	r2, r3
 8002b1c:	d901      	bls.n	8002b22 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8002b1e:	3b01      	subs	r3, #1
 8002b20:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8002b22:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8002b26:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8002b2a:	428b      	cmp	r3, r1
 8002b2c:	d830      	bhi.n	8002b90 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8002b2e:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 8002b32:	330e      	adds	r3, #14
 8002b34:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8002b36:	210f      	movs	r1, #15
 8002b38:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8002b3c:	491a      	ldr	r1, [pc, #104]	; (8002ba8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8002b3e:	8809      	ldrh	r1, [r1, #0]
 8002b40:	428b      	cmp	r3, r1
 8002b42:	d901      	bls.n	8002b48 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 8002b44:	3901      	subs	r1, #1
 8002b46:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002b48:	4e18      	ldr	r6, [pc, #96]	; (8002bac <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002b4a:	4d19      	ldr	r5, [pc, #100]	; (8002bb0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002b4c:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002b4e:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002b50:	4283      	cmp	r3, r0
 8002b52:	b281      	uxth	r1, r0
 8002b54:	bf8c      	ite	hi
 8002b56:	1a59      	subhi	r1, r3, r1
 8002b58:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002b5a:	b2b8      	uxth	r0, r7
 8002b5c:	42ba      	cmp	r2, r7
 8002b5e:	bf8c      	ite	hi
 8002b60:	1a10      	subhi	r0, r2, r0
 8002b62:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002b64:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002b66:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8002b68:	4401      	add	r1, r0
 8002b6a:	2905      	cmp	r1, #5
        {
            _x = x;
 8002b6c:	bfc8      	it	gt
 8002b6e:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8002b70:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8002b72:	bfc8      	it	gt
 8002b74:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8002b76:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8002b78:	682b      	ldr	r3, [r5, #0]
 8002b7a:	80a3      	strh	r3, [r4, #4]
    }
}
 8002b7c:	b003      	add	sp, #12
 8002b7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8002b80:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8002b82:	bf9c      	itt	ls
 8002b84:	23b4      	movls	r3, #180	; 0xb4
 8002b86:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8002b8a:	e7bb      	b.n	8002b04 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8002b8c:	2200      	movs	r2, #0
 8002b8e:	e7c8      	b.n	8002b22 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8002b90:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8002b94:	3308      	adds	r3, #8
 8002b96:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8002b98:	2b0e      	cmp	r3, #14
 8002b9a:	d8cc      	bhi.n	8002b36 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8002b9c:	2300      	movs	r3, #0
 8002b9e:	e7d3      	b.n	8002b48 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8002ba0:	200008f8 	.word	0x200008f8
 8002ba4:	200008f6 	.word	0x200008f6
 8002ba8:	200008f4 	.word	0x200008f4
 8002bac:	200008fc 	.word	0x200008fc
 8002bb0:	20000900 	.word	0x20000900

08002bb4 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8002bb4:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8002bb6:	4668      	mov	r0, sp
{
 8002bb8:	460d      	mov	r5, r1
 8002bba:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8002bbc:	f7ff ff88 	bl	8002ad0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8002bc0:	f8bd 0000 	ldrh.w	r0, [sp]
 8002bc4:	b148      	cbz	r0, 8002bda <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 8002bc6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8002bca:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8002bcc:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8002bd0:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 8002bd2:	4b03      	ldr	r3, [pc, #12]	; (8002be0 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8002bd4:	223c      	movs	r2, #60	; 0x3c
 8002bd6:	601a      	str	r2, [r3, #0]
        return true;
 8002bd8:	2001      	movs	r0, #1
}
 8002bda:	b003      	add	sp, #12
 8002bdc:	bd30      	pop	{r4, r5, pc}
 8002bde:	bf00      	nop
 8002be0:	2000000c 	.word	0x2000000c

08002be4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8002be4:	b110      	cbz	r0, 8002bec <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8002be6:	2802      	cmp	r0, #2
 8002be8:	d009      	beq.n	8002bfe <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8002bea:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8002bec:	4b07      	ldr	r3, [pc, #28]	; (8002c0c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8002bee:	681a      	ldr	r2, [r3, #0]
 8002bf0:	fab2 f282 	clz	r2, r2
 8002bf4:	0952      	lsrs	r2, r2, #5
 8002bf6:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8002bf8:	4805      	ldr	r0, [pc, #20]	; (8002c10 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8002bfa:	f009 b96f 	b.w	800bedc <HAL_GPIO_WritePin>
 8002bfe:	4b03      	ldr	r3, [pc, #12]	; (8002c0c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8002c00:	689a      	ldr	r2, [r3, #8]
 8002c02:	fab2 f282 	clz	r2, r2
 8002c06:	0952      	lsrs	r2, r2, #5
 8002c08:	2110      	movs	r1, #16
 8002c0a:	e7f5      	b.n	8002bf8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8002c0c:	20000904 	.word	0x20000904
 8002c10:	40021000 	.word	0x40021000

08002c14 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8002c14:	b110      	cbz	r0, 8002c1c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 8002c16:	2802      	cmp	r0, #2
 8002c18:	d009      	beq.n	8002c2e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8002c1a:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8002c1c:	4b07      	ldr	r3, [pc, #28]	; (8002c3c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8002c1e:	681a      	ldr	r2, [r3, #0]
 8002c20:	3a00      	subs	r2, #0
 8002c22:	bf18      	it	ne
 8002c24:	2201      	movne	r2, #1
 8002c26:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8002c28:	4805      	ldr	r0, [pc, #20]	; (8002c40 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8002c2a:	f009 b957 	b.w	800bedc <HAL_GPIO_WritePin>
 8002c2e:	4b03      	ldr	r3, [pc, #12]	; (8002c3c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8002c30:	689a      	ldr	r2, [r3, #8]
 8002c32:	3a00      	subs	r2, #0
 8002c34:	bf18      	it	ne
 8002c36:	2201      	movne	r2, #1
 8002c38:	2110      	movs	r1, #16
 8002c3a:	e7f5      	b.n	8002c28 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8002c3c:	20000904 	.word	0x20000904
 8002c40:	40021000 	.word	0x40021000

08002c44 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8002c44:	b110      	cbz	r0, 8002c4c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 8002c46:	2802      	cmp	r0, #2
 8002c48:	d004      	beq.n	8002c54 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8002c4a:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8002c4c:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002c4e:	4802      	ldr	r0, [pc, #8]	; (8002c58 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8002c50:	f009 b948 	b.w	800bee4 <HAL_GPIO_TogglePin>
 8002c54:	2110      	movs	r1, #16
 8002c56:	e7fa      	b.n	8002c4e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 8002c58:	40021000 	.word	0x40021000

08002c5c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8002c5c:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8002c5e:	b130      	cbz	r0, 8002c6e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 8002c60:	2802      	cmp	r0, #2
 8002c62:	d009      	beq.n	8002c78 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8002c64:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8002c66:	1e43      	subs	r3, r0, #1
 8002c68:	4258      	negs	r0, r3
 8002c6a:	4158      	adcs	r0, r3
 8002c6c:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8002c6e:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002c70:	4802      	ldr	r0, [pc, #8]	; (8002c7c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 8002c72:	f009 f92d 	bl	800bed0 <HAL_GPIO_ReadPin>
        break;
 8002c76:	e7f6      	b.n	8002c66 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002c78:	2110      	movs	r1, #16
 8002c7a:	e7f9      	b.n	8002c70 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8002c7c:	40021000 	.word	0x40021000

08002c80 <_ZN8touchgfx4GPIO4initEv>:
{
 8002c80:	b570      	push	{r4, r5, r6, lr}
 8002c82:	4d08      	ldr	r5, [pc, #32]	; (8002ca4 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8002c84:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8002c86:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8002c88:	b2e0      	uxtb	r0, r4
 8002c8a:	f7ff ffe7 	bl	8002c5c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8002c8e:	b118      	cbz	r0, 8002c98 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8002c90:	682b      	ldr	r3, [r5, #0]
 8002c92:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8002c94:	bf18      	it	ne
 8002c96:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8002c98:	3401      	adds	r4, #1
 8002c9a:	2c05      	cmp	r4, #5
 8002c9c:	f105 0504 	add.w	r5, r5, #4
 8002ca0:	d1f2      	bne.n	8002c88 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8002ca2:	bd70      	pop	{r4, r5, r6, pc}
 8002ca4:	20000904 	.word	0x20000904

08002ca8 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8002ca8:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8002caa:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8002cae:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8002cb2:	4770      	bx	lr

08002cb4 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8002cb4:	2000      	movs	r0, #0
 8002cb6:	4770      	bx	lr

08002cb8 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8002cb8:	4b03      	ldr	r3, [pc, #12]	; (8002cc8 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8002cba:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8002cbc:	3900      	subs	r1, #0
 8002cbe:	bf18      	it	ne
 8002cc0:	2101      	movne	r1, #1
 8002cc2:	7019      	strb	r1, [r3, #0]
    }
 8002cc4:	4770      	bx	lr
 8002cc6:	bf00      	nop
 8002cc8:	2001384b 	.word	0x2001384b

08002ccc <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8002ccc:	2000      	movs	r0, #0
 8002cce:	4770      	bx	lr

08002cd0 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8002cd0:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8002cd2:	b10b      	cbz	r3, 8002cd8 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8002cd4:	4608      	mov	r0, r1
 8002cd6:	4718      	bx	r3
        }
    }
 8002cd8:	4770      	bx	lr

08002cda <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8002cda:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8002cde:	4770      	bx	lr

08002ce0 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8002ce0:	6840      	ldr	r0, [r0, #4]
 8002ce2:	6803      	ldr	r3, [r0, #0]
 8002ce4:	699b      	ldr	r3, [r3, #24]
 8002ce6:	4718      	bx	r3

08002ce8 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8002ce8:	4770      	bx	lr

08002cea <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8002cea:	4770      	bx	lr

08002cec <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8002cec:	4770      	bx	lr
	...

08002cf0 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8002cf0:	b510      	push	{r4, lr}
 8002cf2:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8002cf4:	f000 fb4e 	bl	8003394 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8002cf8:	6823      	ldr	r3, [r4, #0]
 8002cfa:	4903      	ldr	r1, [pc, #12]	; (8002d08 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8002cfc:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002d00:	4620      	mov	r0, r4
}
 8002d02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8002d06:	4718      	bx	r3
 8002d08:	d0000000 	.word	0xd0000000

08002d0c <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8002d0c:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8002d0e:	6803      	ldr	r3, [r0, #0]
{
 8002d10:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8002d12:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8002d16:	4798      	blx	r3
    enableInterrupts();
 8002d18:	6823      	ldr	r3, [r4, #0]
 8002d1a:	4620      	mov	r0, r4
 8002d1c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8002d1e:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8002d20:	f000 f8ec 	bl	8002efc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8002d24:	6823      	ldr	r3, [r4, #0]
 8002d26:	4620      	mov	r0, r4
 8002d28:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002d2a:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8002d2c:	2029      	movs	r0, #41	; 0x29
 8002d2e:	f7ff f921 	bl	8001f74 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8002d32:	f000 f8e3 	bl	8002efc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8002d36:	6823      	ldr	r3, [r4, #0]
 8002d38:	4620      	mov	r0, r4
 8002d3a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002d3c:	4798      	blx	r3
    for (;;)
 8002d3e:	e7f8      	b.n	8002d32 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08002d40 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8002d40:	b510      	push	{r4, lr}
 8002d42:	4604      	mov	r4, r0
        swapFrameBuffers();
 8002d44:	f011 fa5a 	bl	80141fc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8002d48:	6823      	ldr	r3, [r4, #0]
 8002d4a:	4620      	mov	r0, r4
 8002d4c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8002d50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8002d54:	4718      	bx	r3

08002d56 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8002d56:	f000 bb0f 	b.w	8003378 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08002d5a <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8002d5a:	f000 bb13 	b.w	8003384 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08002d5e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8002d5e:	f000 bb37 	b.w	80033d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08002d62 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8002d62:	f000 badf 	b.w	8003324 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08002d66 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8002d66:	f000 bae5 	b.w	8003334 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08002d6a <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8002d6a:	f000 bb3d 	b.w	80033e8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08002d6e <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8002d6e:	f000 bae9 	b.w	8003344 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08002d72 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8002d72:	f010 bcae 	b.w	80136d2 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08002d76 <_ZN11TouchGFXHALD0Ev>:
 8002d76:	b510      	push	{r4, lr}
 8002d78:	217c      	movs	r1, #124	; 0x7c
 8002d7a:	4604      	mov	r4, r0
 8002d7c:	f029 ffd5 	bl	802cd2a <_ZdlPvj>
 8002d80:	4620      	mov	r0, r4
 8002d82:	bd10      	pop	{r4, pc}

08002d84 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8002d84:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8002d88:	b11b      	cbz	r3, 8002d92 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8002d8a:	6840      	ldr	r0, [r0, #4]
 8002d8c:	6803      	ldr	r3, [r0, #0]
 8002d8e:	681b      	ldr	r3, [r3, #0]
 8002d90:	4718      	bx	r3
    }
 8002d92:	4618      	mov	r0, r3
 8002d94:	4770      	bx	lr
	...

08002d98 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8002d98:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8002d9a:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8002d9e:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8002da2:	4b0c      	ldr	r3, [pc, #48]	; (8002dd4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8002da4:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8002da6:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8002da8:	d009      	beq.n	8002dbe <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8002daa:	b93a      	cbnz	r2, 8002dbc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002dac:	4a0a      	ldr	r2, [pc, #40]	; (8002dd8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002dae:	490b      	ldr	r1, [pc, #44]	; (8002ddc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002db0:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002db2:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8002db4:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002db6:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8002db8:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8002dba:	701a      	strb	r2, [r3, #0]
    }
 8002dbc:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8002dbe:	2a00      	cmp	r2, #0
 8002dc0:	d0fc      	beq.n	8002dbc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002dc2:	4a05      	ldr	r2, [pc, #20]	; (8002dd8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002dc4:	4905      	ldr	r1, [pc, #20]	; (8002ddc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002dc6:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002dc8:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8002dca:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002dcc:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8002dce:	2200      	movs	r2, #0
 8002dd0:	e7f3      	b.n	8002dba <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8002dd2:	bf00      	nop
 8002dd4:	20013844 	.word	0x20013844
 8002dd8:	20013840 	.word	0x20013840
 8002ddc:	20013842 	.word	0x20013842

08002de0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8002de0:	b570      	push	{r4, r5, r6, lr}
 8002de2:	460d      	mov	r5, r1
 8002de4:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8002de6:	b935      	cbnz	r5, 8002df6 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8002de8:	4b09      	ldr	r3, [pc, #36]	; (8002e10 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8002dea:	4a0a      	ldr	r2, [pc, #40]	; (8002e14 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8002dec:	480a      	ldr	r0, [pc, #40]	; (8002e18 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8002dee:	f240 21d2 	movw	r1, #722	; 0x2d2
 8002df2:	f02a fe81 	bl	802daf8 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8002df6:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8002dfa:	4b08      	ldr	r3, [pc, #32]	; (8002e1c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8002dfc:	3a00      	subs	r2, #0
 8002dfe:	bf18      	it	ne
 8002e00:	2201      	movne	r2, #1
 8002e02:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8002e04:	6803      	ldr	r3, [r0, #0]
    }
 8002e06:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8002e0a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002e0e:	4718      	bx	r3
 8002e10:	0802ed2c 	.word	0x0802ed2c
 8002e14:	0802ed64 	.word	0x0802ed64
 8002e18:	0802edb2 	.word	0x0802edb2
 8002e1c:	2001384a 	.word	0x2001384a

08002e20 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8002e20:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8002e22:	4b09      	ldr	r3, [pc, #36]	; (8002e48 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8002e24:	881b      	ldrh	r3, [r3, #0]
 8002e26:	428b      	cmp	r3, r1
 8002e28:	d803      	bhi.n	8002e32 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8002e2a:	4b08      	ldr	r3, [pc, #32]	; (8002e4c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8002e2c:	881b      	ldrh	r3, [r3, #0]
 8002e2e:	4293      	cmp	r3, r2
 8002e30:	d905      	bls.n	8002e3e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8002e32:	4b07      	ldr	r3, [pc, #28]	; (8002e50 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8002e34:	4a07      	ldr	r2, [pc, #28]	; (8002e54 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8002e36:	4808      	ldr	r0, [pc, #32]	; (8002e58 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8002e38:	219e      	movs	r1, #158	; 0x9e
 8002e3a:	f02a fe5d 	bl	802daf8 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8002e3e:	4b07      	ldr	r3, [pc, #28]	; (8002e5c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8002e40:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8002e42:	4b07      	ldr	r3, [pc, #28]	; (8002e60 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8002e44:	801a      	strh	r2, [r3, #0]
    }
 8002e46:	bd08      	pop	{r3, pc}
 8002e48:	20013840 	.word	0x20013840
 8002e4c:	20013842 	.word	0x20013842
 8002e50:	0802edf7 	.word	0x0802edf7
 8002e54:	0802ee5a 	.word	0x0802ee5a
 8002e58:	0802edb2 	.word	0x0802edb2
 8002e5c:	20013846 	.word	0x20013846
 8002e60:	20013848 	.word	0x20013848

08002e64 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002e64:	2101      	movs	r1, #1
{
 8002e66:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002e68:	2200      	movs	r2, #0
 8002e6a:	4608      	mov	r0, r1
 8002e6c:	f00c fdca 	bl	800fa04 <osSemaphoreNew>
 8002e70:	4b0a      	ldr	r3, [pc, #40]	; (8002e9c <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8002e72:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8002e74:	b928      	cbnz	r0, 8002e82 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8002e76:	4b0a      	ldr	r3, [pc, #40]	; (8002ea0 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8002e78:	4a0a      	ldr	r2, [pc, #40]	; (8002ea4 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002e7a:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002e7c:	480a      	ldr	r0, [pc, #40]	; (8002ea8 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8002e7e:	f02a fe3b 	bl	802daf8 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8002e82:	2200      	movs	r2, #0
 8002e84:	2104      	movs	r1, #4
 8002e86:	2001      	movs	r0, #1
 8002e88:	f00c fe70 	bl	800fb6c <osMessageQueueNew>
 8002e8c:	4b07      	ldr	r3, [pc, #28]	; (8002eac <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8002e8e:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002e90:	b918      	cbnz	r0, 8002e9a <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8002e92:	4b07      	ldr	r3, [pc, #28]	; (8002eb0 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8002e94:	4a03      	ldr	r2, [pc, #12]	; (8002ea4 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002e96:	212c      	movs	r1, #44	; 0x2c
 8002e98:	e7f0      	b.n	8002e7c <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8002e9a:	bd08      	pop	{r3, pc}
 8002e9c:	20000918 	.word	0x20000918
 8002ea0:	0802ef78 	.word	0x0802ef78
 8002ea4:	0802efc1 	.word	0x0802efc1
 8002ea8:	0802eff0 	.word	0x0802eff0
 8002eac:	20000914 	.word	0x20000914
 8002eb0:	0802f06a 	.word	0x0802f06a

08002eb4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8002eb4:	4b02      	ldr	r3, [pc, #8]	; (8002ec0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8002eb6:	f04f 31ff 	mov.w	r1, #4294967295
 8002eba:	6818      	ldr	r0, [r3, #0]
 8002ebc:	f00c bdf6 	b.w	800faac <osSemaphoreAcquire>
 8002ec0:	20000918 	.word	0x20000918

08002ec4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8002ec4:	4b01      	ldr	r3, [pc, #4]	; (8002ecc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8002ec6:	6818      	ldr	r0, [r3, #0]
 8002ec8:	f00c be24 	b.w	800fb14 <osSemaphoreRelease>
 8002ecc:	20000918 	.word	0x20000918

08002ed0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8002ed0:	4b02      	ldr	r3, [pc, #8]	; (8002edc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8002ed2:	2100      	movs	r1, #0
 8002ed4:	6818      	ldr	r0, [r3, #0]
 8002ed6:	f00c bde9 	b.w	800faac <osSemaphoreAcquire>
 8002eda:	bf00      	nop
 8002edc:	20000918 	.word	0x20000918

08002ee0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8002ee0:	f7ff bff0 	b.w	8002ec4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08002ee4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8002ee4:	4803      	ldr	r0, [pc, #12]	; (8002ef4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8002ee6:	4904      	ldr	r1, [pc, #16]	; (8002ef8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8002ee8:	6800      	ldr	r0, [r0, #0]
 8002eea:	2300      	movs	r3, #0
 8002eec:	461a      	mov	r2, r3
 8002eee:	f00c be77 	b.w	800fbe0 <osMessageQueuePut>
 8002ef2:	bf00      	nop
 8002ef4:	20000914 	.word	0x20000914
 8002ef8:	20000010 	.word	0x20000010

08002efc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8002efc:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8002efe:	4c08      	ldr	r4, [pc, #32]	; (8002f20 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8002f00:	2300      	movs	r3, #0
 8002f02:	461a      	mov	r2, r3
 8002f04:	a901      	add	r1, sp, #4
 8002f06:	6820      	ldr	r0, [r4, #0]
 8002f08:	f00c fea0 	bl	800fc4c <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8002f0c:	6820      	ldr	r0, [r4, #0]
 8002f0e:	f04f 33ff 	mov.w	r3, #4294967295
 8002f12:	2200      	movs	r2, #0
 8002f14:	a901      	add	r1, sp, #4
 8002f16:	f00c fe99 	bl	800fc4c <osMessageQueueGet>
}
 8002f1a:	b002      	add	sp, #8
 8002f1c:	bd10      	pop	{r4, pc}
 8002f1e:	bf00      	nop
 8002f20:	20000914 	.word	0x20000914

08002f24 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8002f24:	4770      	bx	lr

08002f26 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8002f26:	2000      	movs	r0, #0
 8002f28:	4770      	bx	lr

08002f2a <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8002f2a:	4770      	bx	lr

08002f2c <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8002f2c:	4770      	bx	lr

08002f2e <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 8002f2e:	2000      	movs	r0, #0
 8002f30:	4770      	bx	lr

08002f32 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8002f32:	4770      	bx	lr

08002f34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8002f34:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8002f36:	4a03      	ldr	r2, [pc, #12]	; (8002f44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8002f38:	4b03      	ldr	r3, [pc, #12]	; (8002f48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 8002f3a:	4804      	ldr	r0, [pc, #16]	; (8002f4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8002f3c:	2122      	movs	r1, #34	; 0x22
 8002f3e:	f02a fddb 	bl	802daf8 <__assert_func>
 8002f42:	bf00      	nop
 8002f44:	0802f0cf 	.word	0x0802f0cf
 8002f48:	0802f0ac 	.word	0x0802f0ac
 8002f4c:	0802f10d 	.word	0x0802f10d

08002f50 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8002f50:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8002f52:	4a03      	ldr	r2, [pc, #12]	; (8002f60 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8002f54:	4b03      	ldr	r3, [pc, #12]	; (8002f64 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8002f56:	4804      	ldr	r0, [pc, #16]	; (8002f68 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8002f58:	2127      	movs	r1, #39	; 0x27
 8002f5a:	f02a fdcd 	bl	802daf8 <__assert_func>
 8002f5e:	bf00      	nop
 8002f60:	0802f185 	.word	0x0802f185
 8002f64:	0802f0ac 	.word	0x0802f0ac
 8002f68:	0802f10d 	.word	0x0802f10d

08002f6c <_ZN8STM32DMAD0Ev>:
 8002f6c:	b510      	push	{r4, lr}
 8002f6e:	2144      	movs	r1, #68	; 0x44
 8002f70:	4604      	mov	r4, r0
 8002f72:	f029 feda 	bl	802cd2a <_ZdlPvj>
 8002f76:	4620      	mov	r0, r4
 8002f78:	bd10      	pop	{r4, pc}
	...

08002f7c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8002f7c:	b538      	push	{r3, r4, r5, lr}
 8002f7e:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8002f80:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8002f82:	2500      	movs	r5, #0
 8002f84:	4b06      	ldr	r3, [pc, #24]	; (8002fa0 <_ZN8STM32DMAC1Ev+0x24>)
 8002f86:	7225      	strb	r5, [r4, #8]
 8002f88:	300c      	adds	r0, #12
 8002f8a:	6060      	str	r0, [r4, #4]
 8002f8c:	7265      	strb	r5, [r4, #9]
 8002f8e:	2201      	movs	r2, #1
 8002f90:	f841 3b20 	str.w	r3, [r1], #32
 8002f94:	f011 fa8a 	bl	80144ac <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8002f98:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 8002f9a:	4620      	mov	r0, r4
 8002f9c:	bd38      	pop	{r3, r4, r5, pc}
 8002f9e:	bf00      	nop
 8002fa0:	0802f1cc 	.word	0x0802f1cc

08002fa4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002fa4:	2001      	movs	r0, #1
 8002fa6:	4770      	bx	lr

08002fa8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002fa8:	2038      	movs	r0, #56	; 0x38
 8002faa:	4770      	bx	lr

08002fac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8002fac:	2338      	movs	r3, #56	; 0x38
 8002fae:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002fb2:	3008      	adds	r0, #8
 8002fb4:	4770      	bx	lr

08002fb6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002fb6:	2338      	movs	r3, #56	; 0x38
 8002fb8:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002fbc:	3008      	adds	r0, #8
 8002fbe:	4770      	bx	lr

08002fc0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002fc0:	2001      	movs	r0, #1
 8002fc2:	4770      	bx	lr

08002fc4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002fc4:	f641 5004 	movw	r0, #7428	; 0x1d04
 8002fc8:	4770      	bx	lr

08002fca <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002fca:	f641 5304 	movw	r3, #7428	; 0x1d04
 8002fce:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002fd2:	3008      	adds	r0, #8
 8002fd4:	4770      	bx	lr

08002fd6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002fd6:	f641 5304 	movw	r3, #7428	; 0x1d04
 8002fda:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002fde:	3008      	adds	r0, #8
 8002fe0:	4770      	bx	lr

08002fe2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002fe2:	2001      	movs	r0, #1
 8002fe4:	4770      	bx	lr

08002fe6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002fe6:	2010      	movs	r0, #16
 8002fe8:	4770      	bx	lr

08002fea <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002fea:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002fee:	3008      	adds	r0, #8
 8002ff0:	4770      	bx	lr

08002ff2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002ff2:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002ff6:	3008      	adds	r0, #8
 8002ff8:	4770      	bx	lr

08002ffa <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8002ffa:	4608      	mov	r0, r1
 8002ffc:	f002 bb40 	b.w	8005680 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08003000 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8003000:	b510      	push	{r4, lr}
 8003002:	4b03      	ldr	r3, [pc, #12]	; (8003010 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8003004:	6003      	str	r3, [r0, #0]
 8003006:	4604      	mov	r4, r0
 8003008:	f00f fa79 	bl	80124fe <_ZN8touchgfx17AbstractPartitionD1Ev>
 800300c:	4620      	mov	r0, r4
 800300e:	bd10      	pop	{r4, pc}
 8003010:	0802f284 	.word	0x0802f284

08003014 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8003014:	b510      	push	{r4, lr}
 8003016:	4604      	mov	r4, r0
 8003018:	f7ff fff2 	bl	8003000 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 800301c:	4620      	mov	r0, r4
 800301e:	2140      	movs	r1, #64	; 0x40
 8003020:	f029 fe83 	bl	802cd2a <_ZdlPvj>
 8003024:	4620      	mov	r0, r4
 8003026:	bd10      	pop	{r4, pc}

08003028 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8003028:	b510      	push	{r4, lr}
 800302a:	4b03      	ldr	r3, [pc, #12]	; (8003038 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800302c:	6003      	str	r3, [r0, #0]
 800302e:	4604      	mov	r4, r0
 8003030:	f00f fa65 	bl	80124fe <_ZN8touchgfx17AbstractPartitionD1Ev>
 8003034:	4620      	mov	r0, r4
 8003036:	bd10      	pop	{r4, pc}
 8003038:	0802f250 	.word	0x0802f250

0800303c <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800303c:	b510      	push	{r4, lr}
 800303e:	4604      	mov	r4, r0
 8003040:	f7ff fff2 	bl	8003028 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8003044:	4620      	mov	r0, r4
 8003046:	f641 510c 	movw	r1, #7436	; 0x1d0c
 800304a:	f029 fe6e 	bl	802cd2a <_ZdlPvj>
 800304e:	4620      	mov	r0, r4
 8003050:	bd10      	pop	{r4, pc}
	...

08003054 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8003054:	b510      	push	{r4, lr}
 8003056:	4b03      	ldr	r3, [pc, #12]	; (8003064 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8003058:	6003      	str	r3, [r0, #0]
 800305a:	4604      	mov	r4, r0
 800305c:	f00f fa4f 	bl	80124fe <_ZN8touchgfx17AbstractPartitionD1Ev>
 8003060:	4620      	mov	r0, r4
 8003062:	bd10      	pop	{r4, pc}
 8003064:	0802f21c 	.word	0x0802f21c

08003068 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8003068:	b510      	push	{r4, lr}
 800306a:	4604      	mov	r4, r0
 800306c:	f7ff fff2 	bl	8003054 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8003070:	4620      	mov	r0, r4
 8003072:	2118      	movs	r1, #24
 8003074:	f029 fe59 	bl	802cd2a <_ZdlPvj>
 8003078:	4620      	mov	r0, r4
 800307a:	bd10      	pop	{r4, pc}

0800307c <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 800307c:	b510      	push	{r4, lr}
 800307e:	4b09      	ldr	r3, [pc, #36]	; (80030a4 <_ZN12FrontendHeapD1Ev+0x28>)
 8003080:	6003      	str	r3, [r0, #0]
 8003082:	4604      	mov	r4, r0
 8003084:	f500 50e9 	add.w	r0, r0, #7456	; 0x1d20
 8003088:	3018      	adds	r0, #24
 800308a:	f7ff ffb9 	bl	8003000 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 800308e:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8003092:	f7ff ffc9 	bl	8003028 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8003096:	f104 0014 	add.w	r0, r4, #20
 800309a:	f7ff ffdb 	bl	8003054 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800309e:	4620      	mov	r0, r4
 80030a0:	bd10      	pop	{r4, pc}
 80030a2:	bf00      	nop
 80030a4:	0802f2b8 	.word	0x0802f2b8

080030a8 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80030a8:	b508      	push	{r3, lr}
 80030aa:	4802      	ldr	r0, [pc, #8]	; (80030b4 <__tcf_0+0xc>)
 80030ac:	f7ff ffe6 	bl	800307c <_ZN12FrontendHeapD1Ev>
 80030b0:	bd08      	pop	{r3, pc}
 80030b2:	bf00      	nop
 80030b4:	20000920 	.word	0x20000920

080030b8 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80030b8:	b510      	push	{r4, lr}
 80030ba:	4604      	mov	r4, r0
 80030bc:	f7ff ffde 	bl	800307c <_ZN12FrontendHeapD1Ev>
 80030c0:	4620      	mov	r0, r4
 80030c2:	f641 61dc 	movw	r1, #7900	; 0x1edc
 80030c6:	f029 fe30 	bl	802cd2a <_ZdlPvj>
 80030ca:	4620      	mov	r0, r4
 80030cc:	bd10      	pop	{r4, pc}
	...

080030d0 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 80030d0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80030d4:	f000 fa5c 	bl	8003590 <_ZN14BitmapDatabase11getInstanceEv>
 80030d8:	4605      	mov	r5, r0
 80030da:	f000 fa5d 	bl	8003598 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80030de:	2400      	movs	r4, #0
 80030e0:	4601      	mov	r1, r0
 80030e2:	4623      	mov	r3, r4
 80030e4:	4628      	mov	r0, r5
 80030e6:	4622      	mov	r2, r4
 80030e8:	9400      	str	r4, [sp, #0]
 80030ea:	f019 f8fd 	bl	801c2e8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80030ee:	4b26      	ldr	r3, [pc, #152]	; (8003188 <touchgfx_init+0xb8>)
 80030f0:	4a26      	ldr	r2, [pc, #152]	; (800318c <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 80030f2:	4d27      	ldr	r5, [pc, #156]	; (8003190 <touchgfx_init+0xc0>)
 80030f4:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 80030f6:	4620      	mov	r0, r4
 80030f8:	f007 fb22 	bl	800a740 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 80030fc:	4825      	ldr	r0, [pc, #148]	; (8003194 <touchgfx_init+0xc4>)
 80030fe:	f019 f85b 	bl	801c1b8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8003102:	682b      	ldr	r3, [r5, #0]
 8003104:	f3bf 8f5b 	dmb	ish
 8003108:	07db      	lsls	r3, r3, #31
 800310a:	d436      	bmi.n	800317a <touchgfx_init+0xaa>
 800310c:	4628      	mov	r0, r5
 800310e:	f029 fe0e 	bl	802cd2e <__cxa_guard_acquire>
 8003112:	b390      	cbz	r0, 800317a <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8003114:	4c20      	ldr	r4, [pc, #128]	; (8003198 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8003116:	4b21      	ldr	r3, [pc, #132]	; (800319c <touchgfx_init+0xcc>)
          screenStorage(scr),
          transitionStorage(tra),
 8003118:	4f21      	ldr	r7, [pc, #132]	; (80031a0 <touchgfx_init+0xd0>)
 800311a:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 800311c:	f504 56ec 	add.w	r6, r4, #7552	; 0x1d80
        : presenterStorage(pres),
 8003120:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8003124:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8003128:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 800312a:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 800312e:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8003130:	6126      	str	r6, [r4, #16]
 8003132:	f00f f9e5 	bl	8012500 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8003136:	4b1b      	ldr	r3, [pc, #108]	; (80031a4 <touchgfx_init+0xd4>)
 8003138:	6163      	str	r3, [r4, #20]
 800313a:	4640      	mov	r0, r8
 800313c:	f00f f9e0 	bl	8012500 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8003140:	4b19      	ldr	r3, [pc, #100]	; (80031a8 <touchgfx_init+0xd8>)
 8003142:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003144:	4638      	mov	r0, r7
 8003146:	f00f f9db 	bl	8012500 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800314a:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800314e:	4a17      	ldr	r2, [pc, #92]	; (80031ac <touchgfx_init+0xdc>)
 8003150:	f8c3 2d38 	str.w	r2, [r3, #3384]	; 0xd38
 8003154:	f603 5078 	addw	r0, r3, #3448	; 0xd78
 8003158:	f007 ff70 	bl	800b03c <_ZN5ModelC1Ev>
 800315c:	4622      	mov	r2, r4
 800315e:	f1a6 0108 	sub.w	r1, r6, #8
 8003162:	4630      	mov	r0, r6
 8003164:	f007 fc72 	bl	800aa4c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8003168:	4630      	mov	r0, r6
 800316a:	f002 fa89 	bl	8005680 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 800316e:	4810      	ldr	r0, [pc, #64]	; (80031b0 <touchgfx_init+0xe0>)
 8003170:	f02a fce0 	bl	802db34 <atexit>
 8003174:	4628      	mov	r0, r5
 8003176:	f029 fde6 	bl	802cd46 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800317a:	480e      	ldr	r0, [pc, #56]	; (80031b4 <touchgfx_init+0xe4>)
}
 800317c:	b002      	add	sp, #8
 800317e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8003182:	f7ff bdb5 	b.w	8002cf0 <_ZN11TouchGFXHAL10initializeEv>
 8003186:	bf00      	nop
 8003188:	200138b0 	.word	0x200138b0
 800318c:	200028c0 	.word	0x200028c0
 8003190:	2000091c 	.word	0x2000091c
 8003194:	20000014 	.word	0x20000014
 8003198:	20000920 	.word	0x20000920
 800319c:	0802f2b8 	.word	0x0802f2b8
 80031a0:	20002658 	.word	0x20002658
 80031a4:	0802f21c 	.word	0x0802f21c
 80031a8:	0802f250 	.word	0x0802f250
 80031ac:	0802f284 	.word	0x0802f284
 80031b0:	080030a9 	.word	0x080030a9
 80031b4:	20002844 	.word	0x20002844

080031b8 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 80031b8:	4770      	bx	lr
	...

080031bc <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80031bc:	4801      	ldr	r0, [pc, #4]	; (80031c4 <touchgfx_taskEntry+0x8>)
 80031be:	f7ff bda5 	b.w	8002d0c <_ZN11TouchGFXHAL9taskEntryEv>
 80031c2:	bf00      	nop
 80031c4:	20002844 	.word	0x20002844

080031c8 <_GLOBAL__sub_I_touchgfx_init>:
}
 80031c8:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 80031ca:	4e22      	ldr	r6, [pc, #136]	; (8003254 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 80031cc:	4c22      	ldr	r4, [pc, #136]	; (8003258 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 80031ce:	4d23      	ldr	r5, [pc, #140]	; (800325c <_GLOBAL__sub_I_touchgfx_init+0x94>)
 80031d0:	4b23      	ldr	r3, [pc, #140]	; (8003260 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 80031d2:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 80031d4:	4630      	mov	r0, r6
 80031d6:	f7ff fed1 	bl	8002f7c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 80031da:	4628      	mov	r0, r5
 80031dc:	f01d fb50 	bl	8020880 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 80031e0:	4b20      	ldr	r3, [pc, #128]	; (8003264 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80031e2:	4821      	ldr	r0, [pc, #132]	; (8003268 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 80031e4:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 80031e6:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 80031e8:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 80031ec:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 80031f0:	491e      	ldr	r1, [pc, #120]	; (800326c <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 80031f2:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 80031f4:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 80031f8:	491d      	ldr	r1, [pc, #116]	; (8003270 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 80031fa:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 80031fc:	491d      	ldr	r1, [pc, #116]	; (8003274 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 80031fe:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8003202:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8003204:	21f0      	movs	r1, #240	; 0xf0
 8003206:	8001      	strh	r1, [r0, #0]
 8003208:	481b      	ldr	r0, [pc, #108]	; (8003278 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 800320a:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800320c:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800320e:	481b      	ldr	r0, [pc, #108]	; (800327c <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8003210:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8003214:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 8003218:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800321c:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8003220:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8003224:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8003228:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 800322c:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8003230:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 8003234:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 8003238:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 800323a:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800323e:	8001      	strh	r1, [r0, #0]
 8003240:	480f      	ldr	r0, [pc, #60]	; (8003280 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8003242:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8003244:	490f      	ldr	r1, [pc, #60]	; (8003284 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8003246:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8003248:	2201      	movs	r2, #1
 800324a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800324e:	4a0e      	ldr	r2, [pc, #56]	; (8003288 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8003250:	601a      	str	r2, [r3, #0]
}
 8003252:	bd70      	pop	{r4, r5, r6, pc}
 8003254:	20002800 	.word	0x20002800
 8003258:	200027fc 	.word	0x200027fc
 800325c:	200028c4 	.word	0x200028c4
 8003260:	0802ed1c 	.word	0x0802ed1c
 8003264:	20002844 	.word	0x20002844
 8003268:	20013840 	.word	0x20013840
 800326c:	01000001 	.word	0x01000001
 8003270:	01010000 	.word	0x01010000
 8003274:	2001384c 	.word	0x2001384c
 8003278:	20013846 	.word	0x20013846
 800327c:	20013842 	.word	0x20013842
 8003280:	20013848 	.word	0x20013848
 8003284:	20013844 	.word	0x20013844
 8003288:	0802eea8 	.word	0x0802eea8

0800328c <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 800328c:	2000      	movs	r0, #0
 800328e:	4770      	bx	lr

08003290 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8003290:	8081      	strh	r1, [r0, #4]
    }
 8003292:	4770      	bx	lr

08003294 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8003294:	80c1      	strh	r1, [r0, #6]
    }
 8003296:	4770      	bx	lr

08003298 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8003298:	8101      	strh	r1, [r0, #8]
    }
 800329a:	4770      	bx	lr

0800329c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 800329c:	8141      	strh	r1, [r0, #10]
    }
 800329e:	4770      	bx	lr

080032a0 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80032a0:	4770      	bx	lr

080032a2 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 80032a2:	4770      	bx	lr

080032a4 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 80032a4:	4770      	bx	lr

080032a6 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 80032a6:	4770      	bx	lr

080032a8 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80032a8:	4770      	bx	lr

080032aa <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80032aa:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80032ac:	88c4      	ldrh	r4, [r0, #6]
 80032ae:	6803      	ldr	r3, [r0, #0]
 80032b0:	1b12      	subs	r2, r2, r4
 80032b2:	8884      	ldrh	r4, [r0, #4]
 80032b4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80032b6:	1b09      	subs	r1, r1, r4
 80032b8:	b212      	sxth	r2, r2
    }
 80032ba:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80032be:	b209      	sxth	r1, r1
 80032c0:	4718      	bx	r3

080032c2 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80032c2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80032c6:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80032c8:	f04f 33ff 	mov.w	r3, #4294967295
 80032cc:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80032ce:	6813      	ldr	r3, [r2, #0]
 80032d0:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80032d2:	6010      	str	r0, [r2, #0]
    }
 80032d4:	4770      	bx	lr

080032d6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80032d6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80032da:	b11a      	cbz	r2, 80032e4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80032dc:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80032e0:	b102      	cbz	r2, 80032e4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80032e2:	6018      	str	r0, [r3, #0]
        }
    }
 80032e4:	4770      	bx	lr

080032e6 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 80032e6:	2000      	movs	r0, #0
 80032e8:	4770      	bx	lr

080032ea <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 80032ea:	888b      	ldrh	r3, [r1, #4]
 80032ec:	8083      	strh	r3, [r0, #4]
        return true;
    }
 80032ee:	2001      	movs	r0, #1
 80032f0:	4770      	bx	lr

080032f2 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 80032f2:	4770      	bx	lr

080032f4 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80032f4:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 80032f8:	4770      	bx	lr

080032fa <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80032fa:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 80032fe:	4770      	bx	lr

08003300 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8003300:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003302:	2200      	movs	r2, #0
        return rect.width;
 8003304:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8003308:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800330c:	8002      	strh	r2, [r0, #0]
 800330e:	8042      	strh	r2, [r0, #2]
 8003310:	8084      	strh	r4, [r0, #4]
 8003312:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8003314:	bd10      	pop	{r4, pc}

08003316 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8003316:	2200      	movs	r2, #0
 8003318:	8002      	strh	r2, [r0, #0]
 800331a:	8042      	strh	r2, [r0, #2]
 800331c:	8082      	strh	r2, [r0, #4]
 800331e:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003320:	4770      	bx	lr
	...

08003324 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003324:	4b02      	ldr	r3, [pc, #8]	; (8003330 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8003326:	2290      	movs	r2, #144	; 0x90
 8003328:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800332c:	4770      	bx	lr
 800332e:	bf00      	nop
 8003330:	e000e100 	.word	0xe000e100

08003334 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003334:	4b02      	ldr	r3, [pc, #8]	; (8003340 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8003336:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800333a:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 800333c:	4770      	bx	lr
 800333e:	bf00      	nop
 8003340:	e000e100 	.word	0xe000e100

08003344 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8003344:	4a09      	ldr	r2, [pc, #36]	; (800336c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8003346:	490a      	ldr	r1, [pc, #40]	; (8003370 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8003348:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800334a:	480a      	ldr	r0, [pc, #40]	; (8003374 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800334c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8003350:	3b01      	subs	r3, #1
 8003352:	b29b      	uxth	r3, r3
 8003354:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8003356:	6911      	ldr	r1, [r2, #16]
 8003358:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800335c:	3901      	subs	r1, #1
 800335e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8003360:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8003362:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8003364:	f043 0301 	orr.w	r3, r3, #1
 8003368:	6353      	str	r3, [r2, #52]	; 0x34
}
 800336a:	4770      	bx	lr
 800336c:	40016800 	.word	0x40016800
 8003370:	2000294a 	.word	0x2000294a
 8003374:	20002948 	.word	0x20002948

08003378 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8003378:	4b01      	ldr	r3, [pc, #4]	; (8003380 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800337a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800337e:	4770      	bx	lr
 8003380:	40016800 	.word	0x40016800

08003384 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8003384:	4b02      	ldr	r3, [pc, #8]	; (8003390 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8003386:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8003388:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800338c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800338e:	4770      	bx	lr
 8003390:	40016800 	.word	0x40016800

08003394 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8003394:	b570      	push	{r4, r5, r6, lr}
 8003396:	4604      	mov	r4, r0
    HAL::initialize();
 8003398:	f010 f9f1 	bl	801377e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800339c:	6823      	ldr	r3, [r4, #0]
 800339e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 80033a0:	f015 fb66 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
 80033a4:	4601      	mov	r1, r0
 80033a6:	4620      	mov	r0, r4
 80033a8:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80033aa:	6823      	ldr	r3, [r4, #0]
 80033ac:	4a05      	ldr	r2, [pc, #20]	; (80033c4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 80033ae:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80033b2:	4620      	mov	r0, r4
 80033b4:	46ac      	mov	ip, r5
 80033b6:	2300      	movs	r3, #0
}
 80033b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80033bc:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80033c0:	4760      	bx	ip
 80033c2:	bf00      	nop
 80033c4:	d004b000 	.word	0xd004b000

080033c8 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80033c8:	f010 b9c0 	b.w	801374c <_ZN8touchgfx3HAL10beginFrameEv>

080033cc <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 80033cc:	f010 b9ca 	b.w	8013764 <_ZN8touchgfx3HAL8endFrameEv>

080033d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80033d0:	f010 b985 	b.w	80136de <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080033d4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80033d4:	f010 bae7 	b.w	80139a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080033d8 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80033d8:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80033dc:	b112      	cbz	r2, 80033e4 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80033de:	6803      	ldr	r3, [r0, #0]
 80033e0:	695b      	ldr	r3, [r3, #20]
 80033e2:	4718      	bx	r3
    }
 80033e4:	4770      	bx	lr
	...

080033e8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80033e8:	4b04      	ldr	r3, [pc, #16]	; (80033fc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 80033ea:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80033ee:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80033f2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80033f6:	f3bf 8f6f 	isb	sy
}
 80033fa:	4770      	bx	lr
 80033fc:	e000e100 	.word	0xe000e100

08003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8003400:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8003402:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003404:	4e12      	ldr	r6, [pc, #72]	; (8003450 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8003406:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8003408:	4b12      	ldr	r3, [pc, #72]	; (8003454 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 800340a:	6003      	str	r3, [r0, #0]
 800340c:	6833      	ldr	r3, [r6, #0]
 800340e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 8003412:	4605      	mov	r5, r0
 8003414:	b10a      	cbz	r2, 800341a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8003416:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003418:	b900      	cbnz	r0, 800341c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 800341a:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 800341c:	6803      	ldr	r3, [r0, #0]
 800341e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003420:	4798      	blx	r3
        return auxiliaryLCD;
 8003422:	6833      	ldr	r3, [r6, #0]
 8003424:	fab0 f480 	clz	r4, r0
 8003428:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800342a:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 800342c:	b130      	cbz	r0, 800343c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 800342e:	6803      	ldr	r3, [r0, #0]
 8003430:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003432:	4798      	blx	r3
 8003434:	2800      	cmp	r0, #0
 8003436:	bf08      	it	eq
 8003438:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 800343c:	b92c      	cbnz	r4, 800344a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 800343e:	4b06      	ldr	r3, [pc, #24]	; (8003458 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8003440:	4a06      	ldr	r2, [pc, #24]	; (800345c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8003442:	4807      	ldr	r0, [pc, #28]	; (8003460 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8003444:	212c      	movs	r1, #44	; 0x2c
 8003446:	f02a fb57 	bl	802daf8 <__assert_func>
    }
 800344a:	4628      	mov	r0, r5
 800344c:	bd70      	pop	{r4, r5, r6, pc}
 800344e:	bf00      	nop
 8003450:	2001384c 	.word	0x2001384c
 8003454:	0802f3c8 	.word	0x0802f3c8
 8003458:	0802f2c4 	.word	0x0802f2c4
 800345c:	0802f322 	.word	0x0802f322
 8003460:	0802f35b 	.word	0x0802f35b

08003464 <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 8003464:	4770      	bx	lr
	...

08003468 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8003468:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 800346c:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 800346e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 8003472:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 8003476:	d105      	bne.n	8003484 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 8003478:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 800347c:	4281      	cmp	r1, r0
 800347e:	d8fb      	bhi.n	8003478 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 8003480:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 8003484:	4f17      	ldr	r7, [pc, #92]	; (80034e4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8003486:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800348a:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800348e:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8003492:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8003496:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8003498:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 800349a:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800349c:	b2db      	uxtb	r3, r3
 800349e:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 80034a0:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80034a4:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80034a8:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80034ac:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80034b0:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80034b4:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80034b8:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80034bc:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80034c0:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80034c2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80034c6:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80034ca:	fb03 4e0e 	mla	lr, r3, lr, r4
 80034ce:	fbbe fef5 	udiv	lr, lr, r5
 80034d2:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80034d6:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 80034da:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 80034de:	4281      	cmp	r1, r0
 80034e0:	d8de      	bhi.n	80034a0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 80034e2:	e7cd      	b.n	8003480 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 80034e4:	fffff800 	.word	0xfffff800

080034e8 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 80034e8:	b510      	push	{r4, lr}
        return instance;
 80034ea:	4c14      	ldr	r4, [pc, #80]	; (800353c <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 80034ec:	6823      	ldr	r3, [r4, #0]
 80034ee:	b323      	cbz	r3, 800353a <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 80034f0:	4b13      	ldr	r3, [pc, #76]	; (8003540 <HAL_LTDC_LineEventCallback+0x58>)
 80034f2:	4a14      	ldr	r2, [pc, #80]	; (8003544 <HAL_LTDC_LineEventCallback+0x5c>)
 80034f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80034f6:	8811      	ldrh	r1, [r2, #0]
 80034f8:	428b      	cmp	r3, r1
 80034fa:	d113      	bne.n	8003524 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80034fc:	4b12      	ldr	r3, [pc, #72]	; (8003548 <HAL_LTDC_LineEventCallback+0x60>)
 80034fe:	8819      	ldrh	r1, [r3, #0]
 8003500:	f00a fb08 	bl	800db14 <HAL_LTDC_ProgramLineEvent>
 8003504:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8003506:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 800350a:	3301      	adds	r3, #1
 800350c:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8003510:	f7ff fce8 	bl	8002ee4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8003514:	6820      	ldr	r0, [r4, #0]
 8003516:	f010 fe71 	bl	80141fc <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 800351a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800351e:	2000      	movs	r0, #0
 8003520:	f7ff bb60 	b.w	8002be4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8003524:	f00a faf6 	bl	800db14 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8003528:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 800352a:	6803      	ldr	r3, [r0, #0]
 800352c:	6a1b      	ldr	r3, [r3, #32]
 800352e:	4798      	blx	r3
    }
 8003530:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8003534:	2000      	movs	r0, #0
 8003536:	f7ff bb6d 	b.w	8002c14 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 800353a:	bd10      	pop	{r4, pc}
 800353c:	2001384c 	.word	0x2001384c
 8003540:	40016800 	.word	0x40016800
 8003544:	2000294a 	.word	0x2000294a
 8003548:	20002948 	.word	0x20002948

0800354c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800354c:	4770      	bx	lr

0800354e <_ZN23ApplicationFontProviderD0Ev>:
 800354e:	b510      	push	{r4, lr}
 8003550:	2104      	movs	r1, #4
 8003552:	4604      	mov	r4, r0
 8003554:	f029 fbe9 	bl	802cd2a <_ZdlPvj>
 8003558:	4620      	mov	r0, r4
 800355a:	bd10      	pop	{r4, pc}

0800355c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800355c:	b508      	push	{r3, lr}
    switch (typography)
 800355e:	2903      	cmp	r1, #3
 8003560:	d813      	bhi.n	800358a <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8003562:	e8df f001 	tbb	[pc, r1]
 8003566:	0602      	.short	0x0602
 8003568:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800356a:	f007 f935 	bl	800a7d8 <_ZN17TypedTextDatabase8getFontsEv>
 800356e:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8003570:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8003572:	f007 f931 	bl	800a7d8 <_ZN17TypedTextDatabase8getFontsEv>
 8003576:	6840      	ldr	r0, [r0, #4]
 8003578:	e7fa      	b.n	8003570 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800357a:	f007 f92d 	bl	800a7d8 <_ZN17TypedTextDatabase8getFontsEv>
 800357e:	6880      	ldr	r0, [r0, #8]
 8003580:	e7f6      	b.n	8003570 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8003582:	f007 f929 	bl	800a7d8 <_ZN17TypedTextDatabase8getFontsEv>
 8003586:	68c0      	ldr	r0, [r0, #12]
 8003588:	e7f2      	b.n	8003570 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 800358a:	2000      	movs	r0, #0
 800358c:	e7f0      	b.n	8003570 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08003590 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8003590:	4800      	ldr	r0, [pc, #0]	; (8003594 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8003592:	4770      	bx	lr
 8003594:	0802f3f4 	.word	0x0802f3f4

08003598 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8003598:	200c      	movs	r0, #12
 800359a:	4770      	bx	lr

0800359c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800359c:	b513      	push	{r0, r1, r4, lr}
 800359e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80035a0:	b151      	cbz	r1, 80035b8 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80035a2:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80035a4:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80035a6:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80035aa:	aa01      	add	r2, sp, #4
 80035ac:	689c      	ldr	r4, [r3, #8]
 80035ae:	f10d 0303 	add.w	r3, sp, #3
 80035b2:	47a0      	blx	r4
        return glyph;
    }
 80035b4:	b002      	add	sp, #8
 80035b6:	bd10      	pop	{r4, pc}
            return 0;
 80035b8:	4608      	mov	r0, r1
 80035ba:	e7fb      	b.n	80035b4 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080035bc <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80035bc:	89c0      	ldrh	r0, [r0, #14]
 80035be:	4770      	bx	lr

080035c0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80035c0:	8a00      	ldrh	r0, [r0, #16]
 80035c2:	4770      	bx	lr

080035c4 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 80035c4:	88c0      	ldrh	r0, [r0, #6]
 80035c6:	4770      	bx	lr

080035c8 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 80035c8:	8880      	ldrh	r0, [r0, #4]
 80035ca:	4770      	bx	lr

080035cc <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80035cc:	7a80      	ldrb	r0, [r0, #10]
    }
 80035ce:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80035d2:	4770      	bx	lr

080035d4 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80035d4:	7a80      	ldrb	r0, [r0, #10]
    }
 80035d6:	09c0      	lsrs	r0, r0, #7
 80035d8:	4770      	bx	lr

080035da <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 80035da:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80035dc:	4770      	bx	lr

080035de <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80035de:	4770      	bx	lr

080035e0 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80035e0:	4770      	bx	lr

080035e2 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80035e2:	4770      	bx	lr

080035e4 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80035e4:	4770      	bx	lr

080035e6 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80035e6:	4770      	bx	lr

080035e8 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80035e8:	4770      	bx	lr

080035ea <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 80035ea:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 80035ec:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 80035ee:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 80035f0:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80035f2:	466d      	mov	r5, sp
 80035f4:	4601      	mov	r1, r0
 80035f6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 80035fa:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80035fc:	4628      	mov	r0, r5
 80035fe:	4798      	blx	r3
 8003600:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003604:	343c      	adds	r4, #60	; 0x3c
 8003606:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800360a:	b005      	add	sp, #20
 800360c:	bd30      	pop	{r4, r5, pc}

0800360e <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800360e:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8003610:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8003612:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8003614:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8003616:	466d      	mov	r5, sp
 8003618:	4601      	mov	r1, r0
 800361a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 800361e:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8003620:	4628      	mov	r0, r5
 8003622:	4798      	blx	r3
 8003624:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003628:	343c      	adds	r4, #60	; 0x3c
 800362a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800362e:	b005      	add	sp, #20
 8003630:	bd30      	pop	{r4, r5, pc}

08003632 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8003632:	2200      	movs	r2, #0
 8003634:	8002      	strh	r2, [r0, #0]
 8003636:	8042      	strh	r2, [r0, #2]
 8003638:	8082      	strh	r2, [r0, #4]
 800363a:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 800363c:	4770      	bx	lr

0800363e <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800363e:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8003642:	4770      	bx	lr

08003644 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003644:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8003646:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003648:	4604      	mov	r4, r0
        setX(x);
 800364a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800364c:	4615      	mov	r5, r2
        setX(x);
 800364e:	4798      	blx	r3
        setBaselineY(baselineY);
 8003650:	6823      	ldr	r3, [r4, #0]
 8003652:	4629      	mov	r1, r5
 8003654:	4620      	mov	r0, r4
 8003656:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8003658:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 800365c:	4718      	bx	r3

0800365e <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 800365e:	2000      	movs	r0, #0
 8003660:	4770      	bx	lr

08003662 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8003662:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8003664:	4770      	bx	lr

08003666 <_ZN23Calibration_PadViewBase17Load_FLASH_ValuesEv>:
     * Virtual Action Handlers
     */
    virtual void Load_FLASH_Values()
    {
        // Override and implement this function in Calibration_Pad
    }
 8003666:	4770      	bx	lr

08003668 <_ZN23Calibration_PadViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Calibration_PadViewBase::setupScreen()
{
    transitionBegins();
 8003668:	6803      	ldr	r3, [r0, #0]
 800366a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800366c:	4718      	bx	r3

0800366e <_ZN23Calibration_PadViewBase16transitionBeginsEv>:
void Calibration_PadViewBase::transitionBegins()
{
    //Interaction_begin
    //When screen transition begins call virtual function
    //Call Load_FLASH_Values
    Load_FLASH_Values();
 800366e:	6803      	ldr	r3, [r0, #0]
 8003670:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003672:	4718      	bx	r3

08003674 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003674:	4770      	bx	lr

08003676 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8003676:	4770      	bx	lr

08003678 <_ZN8touchgfx14SwipeContainer13PageIndicatorD1Ev>:
    void animateSwipeCancelledLeft();
    void animateSwipeCancelledRight();
    void animateLeft();
    void animateRight();

    class PageIndicator : public Container
 8003678:	4770      	bx	lr

0800367a <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 800367a:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 800367c:	68c2      	ldr	r2, [r0, #12]
 800367e:	6844      	ldr	r4, [r0, #4]
 8003680:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003682:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003684:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003688:	07d2      	lsls	r2, r2, #31
 800368a:	bf48      	it	mi
 800368c:	5962      	ldrmi	r2, [r4, r5]
 800368e:	689b      	ldr	r3, [r3, #8]
    }
 8003690:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003692:	bf48      	it	mi
 8003694:	58d3      	ldrmi	r3, [r2, r3]
 8003696:	4718      	bx	r3

08003698 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8003698:	6843      	ldr	r3, [r0, #4]
 800369a:	b12b      	cbz	r3, 80036a8 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800369c:	6883      	ldr	r3, [r0, #8]
 800369e:	b92b      	cbnz	r3, 80036ac <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80036a0:	68c0      	ldr	r0, [r0, #12]
 80036a2:	f000 0001 	and.w	r0, r0, #1
 80036a6:	4770      	bx	lr
 80036a8:	4618      	mov	r0, r3
 80036aa:	4770      	bx	lr
 80036ac:	2001      	movs	r0, #1
    }
 80036ae:	4770      	bx	lr

080036b0 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80036b0:	b510      	push	{r4, lr}
    }
 80036b2:	2108      	movs	r1, #8
    virtual ~TypedText()
 80036b4:	4604      	mov	r4, r0
    }
 80036b6:	f029 fb38 	bl	802cd2a <_ZdlPvj>
 80036ba:	4620      	mov	r0, r4
 80036bc:	bd10      	pop	{r4, pc}

080036be <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 80036be:	b510      	push	{r4, lr}
 80036c0:	214c      	movs	r1, #76	; 0x4c
 80036c2:	4604      	mov	r4, r0
 80036c4:	f029 fb31 	bl	802cd2a <_ZdlPvj>
 80036c8:	4620      	mov	r0, r4
 80036ca:	bd10      	pop	{r4, pc}

080036cc <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80036cc:	b510      	push	{r4, lr}
 80036ce:	2110      	movs	r1, #16
 80036d0:	4604      	mov	r4, r0
 80036d2:	f029 fb2a 	bl	802cd2a <_ZdlPvj>
 80036d6:	4620      	mov	r0, r4
 80036d8:	bd10      	pop	{r4, pc}

080036da <_ZN8touchgfx14SwipeContainer13PageIndicatorD0Ev>:
 80036da:	b510      	push	{r4, lr}
 80036dc:	218c      	movs	r1, #140	; 0x8c
 80036de:	4604      	mov	r4, r0
 80036e0:	f029 fb23 	bl	802cd2a <_ZdlPvj>
 80036e4:	4620      	mov	r0, r4
 80036e6:	bd10      	pop	{r4, pc}

080036e8 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 80036e8:	b538      	push	{r3, r4, r5, lr}
 80036ea:	4605      	mov	r5, r0
 80036ec:	4b05      	ldr	r3, [pc, #20]	; (8003704 <_ZN23Calibration_PadViewBaseD1Ev+0x1c>)
 80036ee:	f845 3be0 	str.w	r3, [r5], #224
 80036f2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80036f4:	f013 fcba 	bl	801706c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
Calibration_PadViewBase::~Calibration_PadViewBase()
 80036f8:	4628      	mov	r0, r5
 80036fa:	f00f fb6f 	bl	8012ddc <_ZN8touchgfx14SwipeContainerD1Ev>
}
 80036fe:	4620      	mov	r0, r4
 8003700:	bd38      	pop	{r3, r4, r5, pc}
 8003702:	bf00      	nop
 8003704:	0802f7dc 	.word	0x0802f7dc

08003708 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003708:	b510      	push	{r4, lr}
 800370a:	4604      	mov	r4, r0
}
 800370c:	f7ff ffec 	bl	80036e8 <_ZN23Calibration_PadViewBaseD1Ev>
 8003710:	4620      	mov	r0, r4
 8003712:	f641 5104 	movw	r1, #7428	; 0x1d04
 8003716:	f029 fb08 	bl	802cd2a <_ZdlPvj>
 800371a:	4620      	mov	r0, r4
 800371c:	bd10      	pop	{r4, pc}

0800371e <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 800371e:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8003720:	f7ff fe5a 	bl	80033d8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8003724:	bd08      	pop	{r3, pc}
	...

08003728 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003728:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 800372a:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800372c:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800372e:	4b12      	ldr	r3, [pc, #72]	; (8003778 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8003730:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8003732:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003734:	b28d      	uxth	r5, r1
 8003736:	b92b      	cbnz	r3, 8003744 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8003738:	4b10      	ldr	r3, [pc, #64]	; (800377c <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800373a:	4a11      	ldr	r2, [pc, #68]	; (8003780 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800373c:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800373e:	4811      	ldr	r0, [pc, #68]	; (8003784 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8003740:	f02a f9da 	bl	802daf8 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003744:	4910      	ldr	r1, [pc, #64]	; (8003788 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8003746:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003748:	8809      	ldrh	r1, [r1, #0]
 800374a:	4291      	cmp	r1, r2
 800374c:	d803      	bhi.n	8003756 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800374e:	4b0f      	ldr	r3, [pc, #60]	; (800378c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8003750:	4a0b      	ldr	r2, [pc, #44]	; (8003780 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003752:	216d      	movs	r1, #109	; 0x6d
 8003754:	e7f3      	b.n	800373e <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003756:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800375a:	4b0d      	ldr	r3, [pc, #52]	; (8003790 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800375c:	681b      	ldr	r3, [r3, #0]
 800375e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8003762:	6803      	ldr	r3, [r0, #0]
 8003764:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003766:	4798      	blx	r3
 8003768:	1a28      	subs	r0, r5, r0
 800376a:	b201      	sxth	r1, r0
 800376c:	4633      	mov	r3, r6
 800376e:	4620      	mov	r0, r4
    }
 8003770:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003774:	4718      	bx	r3
 8003776:	bf00      	nop
 8003778:	200138a4 	.word	0x200138a4
 800377c:	0802f4e4 	.word	0x0802f4e4
 8003780:	0802f526 	.word	0x0802f526
 8003784:	0802f561 	.word	0x0802f561
 8003788:	200138a8 	.word	0x200138a8
 800378c:	0802f5a8 	.word	0x0802f5a8
 8003790:	200138ac 	.word	0x200138ac

08003794 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8003794:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8003796:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8003798:	4604      	mov	r4, r0
        setX(x);
 800379a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 800379c:	4615      	mov	r5, r2
        setX(x);
 800379e:	4798      	blx	r3
        setY(y);
 80037a0:	6823      	ldr	r3, [r4, #0]
 80037a2:	4629      	mov	r1, r5
 80037a4:	4620      	mov	r0, r4
 80037a6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 80037a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80037ac:	4718      	bx	r3

080037ae <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80037ae:	b570      	push	{r4, r5, r6, lr}
 80037b0:	4604      	mov	r4, r0
 80037b2:	461d      	mov	r5, r3
 80037b4:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 80037b8:	f7ff ffec 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80037bc:	6823      	ldr	r3, [r4, #0]
 80037be:	4629      	mov	r1, r5
 80037c0:	4620      	mov	r0, r4
 80037c2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80037c4:	4798      	blx	r3
        setHeight(height);
 80037c6:	6823      	ldr	r3, [r4, #0]
 80037c8:	4631      	mov	r1, r6
 80037ca:	4620      	mov	r0, r4
 80037cc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80037ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80037d2:	4718      	bx	r3

080037d4 <_ZN8touchgfx9ContainerC1Ev>:
          touchable(false),
 80037d4:	f44f 7180 	mov.w	r1, #256	; 0x100
 80037d8:	2200      	movs	r2, #0
 80037da:	8481      	strh	r1, [r0, #36]	; 0x24
          firstChild(0)
 80037dc:	4905      	ldr	r1, [pc, #20]	; (80037f4 <_ZN8touchgfx9ContainerC1Ev+0x20>)
 80037de:	6001      	str	r1, [r0, #0]
 80037e0:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80037e4:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80037e8:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80037ec:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80037f0:	6282      	str	r2, [r0, #40]	; 0x28
    }
 80037f2:	4770      	bx	lr
 80037f4:	08031704 	.word	0x08031704

080037f8 <_ZN8touchgfx6WidgetC1Ev>:
 80037f8:	2200      	movs	r2, #0
 80037fa:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80037fe:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8003802:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8003806:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 800380a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800380e:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8003810:	4a01      	ldr	r2, [pc, #4]	; (8003818 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8003812:	6002      	str	r2, [r0, #0]
 8003814:	4770      	bx	lr
 8003816:	bf00      	nop
 8003818:	0802f62c 	.word	0x0802f62c

0800381c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 800381c:	4b1a      	ldr	r3, [pc, #104]	; (8003888 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 800381e:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8003820:	881b      	ldrh	r3, [r3, #0]
 8003822:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8003824:	428b      	cmp	r3, r1
    void updateTextPosition()
 8003826:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8003828:	d92b      	bls.n	8003882 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800382a:	4b18      	ldr	r3, [pc, #96]	; (800388c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 800382c:	681b      	ldr	r3, [r3, #0]
 800382e:	b92b      	cbnz	r3, 800383c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8003830:	4b17      	ldr	r3, [pc, #92]	; (8003890 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8003832:	4a18      	ldr	r2, [pc, #96]	; (8003894 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8003834:	4818      	ldr	r0, [pc, #96]	; (8003898 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8003836:	216c      	movs	r1, #108	; 0x6c
 8003838:	f02a f95e 	bl	802daf8 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 800383c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8003840:	4b16      	ldr	r3, [pc, #88]	; (800389c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8003842:	681b      	ldr	r3, [r3, #0]
 8003844:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8003848:	4b15      	ldr	r3, [pc, #84]	; (80038a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 800384a:	6818      	ldr	r0, [r3, #0]
 800384c:	f006 ffb4 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003850:	682b      	ldr	r3, [r5, #0]
 8003852:	9001      	str	r0, [sp, #4]
 8003854:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003856:	4628      	mov	r0, r5
 8003858:	4798      	blx	r3
 800385a:	682b      	ldr	r3, [r5, #0]
 800385c:	9901      	ldr	r1, [sp, #4]
 800385e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003860:	4604      	mov	r4, r0
 8003862:	4628      	mov	r0, r5
 8003864:	4798      	blx	r3
 8003866:	682b      	ldr	r3, [r5, #0]
 8003868:	9901      	ldr	r1, [sp, #4]
 800386a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800386c:	fb14 f400 	smulbb	r4, r4, r0
 8003870:	4628      	mov	r0, r5
 8003872:	4798      	blx	r3
 8003874:	b2a4      	uxth	r4, r4
 8003876:	1823      	adds	r3, r4, r0
 8003878:	b21b      	sxth	r3, r3
 800387a:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 800387e:	b002      	add	sp, #8
 8003880:	bd70      	pop	{r4, r5, r6, pc}
 8003882:	2300      	movs	r3, #0
 8003884:	e7f9      	b.n	800387a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8003886:	bf00      	nop
 8003888:	200138a8 	.word	0x200138a8
 800388c:	200138a4 	.word	0x200138a4
 8003890:	0802f4e4 	.word	0x0802f4e4
 8003894:	0802f526 	.word	0x0802f526
 8003898:	0802f561 	.word	0x0802f561
 800389c:	200138ac 	.word	0x200138ac
 80038a0:	200138b0 	.word	0x200138b0

080038a4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80038a4:	2200      	movs	r2, #0
 80038a6:	f04f 31ff 	mov.w	r1, #4294967295
 80038aa:	e9c0 2100 	strd	r2, r1, [r0]
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 80038ae:	6082      	str	r2, [r0, #8]
        {
        }
 80038b0:	4770      	bx	lr

080038b2 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 80038b2:	b510      	push	{r4, lr}
 80038b4:	4604      	mov	r4, r0
        return TextArea::BoundingArea();
 80038b6:	f7ff fff5 	bl	80038a4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 80038ba:	4620      	mov	r0, r4
 80038bc:	bd10      	pop	{r4, pc}
	...

080038c0 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 80038c0:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80038c2:	2100      	movs	r1, #0
    TextArea()
 80038c4:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80038c6:	2226      	movs	r2, #38	; 0x26
 80038c8:	f02a fb1b 	bl	802df02 <memset>
 80038cc:	4620      	mov	r0, r4
 80038ce:	f7ff ff93 	bl	80037f8 <_ZN8touchgfx6WidgetC1Ev>
 80038d2:	4b09      	ldr	r3, [pc, #36]	; (80038f8 <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 80038d4:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80038d6:	4b09      	ldr	r3, [pc, #36]	; (80038fc <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80038d8:	62a3      	str	r3, [r4, #40]	; 0x28
 80038da:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80038de:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80038e0:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80038e4:	2300      	movs	r3, #0
 80038e6:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 80038ea:	8723      	strh	r3, [r4, #56]	; 0x38
 80038ec:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 80038f0:	f7ff ffd8 	bl	80038a4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 80038f4:	4620      	mov	r0, r4
 80038f6:	bd10      	pop	{r4, pc}
 80038f8:	08031b5c 	.word	0x08031b5c
 80038fc:	0802f694 	.word	0x0802f694

08003900 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8003900:	b510      	push	{r4, lr}
 8003902:	4604      	mov	r4, r0
        : TextArea()
 8003904:	f7ff ffdc 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8003908:	4b02      	ldr	r3, [pc, #8]	; (8003914 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 800390a:	6023      	str	r3, [r4, #0]
 800390c:	2300      	movs	r3, #0
 800390e:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8003910:	4620      	mov	r0, r4
 8003912:	bd10      	pop	{r4, pc}
 8003914:	0802f734 	.word	0x0802f734

08003918 <_ZN8touchgfx8DrawableC1ERKS0_>:
class Drawable
 8003918:	b510      	push	{r4, lr}
 800391a:	4604      	mov	r4, r0
 800391c:	460b      	mov	r3, r1
 800391e:	490d      	ldr	r1, [pc, #52]	; (8003954 <_ZN8touchgfx8DrawableC1ERKS0_+0x3c>)
 8003920:	f844 1b04 	str.w	r1, [r4], #4
 8003924:	4602      	mov	r2, r0
 8003926:	e9d3 0101 	ldrd	r0, r1, [r3, #4]
 800392a:	e884 0003 	stmia.w	r4, {r0, r1}
 800392e:	e9d3 0103 	ldrd	r0, r1, [r3, #12]
 8003932:	f102 040c 	add.w	r4, r2, #12
 8003936:	e884 0003 	stmia.w	r4, {r0, r1}
 800393a:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 800393e:	695c      	ldr	r4, [r3, #20]
 8003940:	61d1      	str	r1, [r2, #28]
 8003942:	6a19      	ldr	r1, [r3, #32]
 8003944:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8003946:	6211      	str	r1, [r2, #32]
 8003948:	e9c2 4005 	strd	r4, r0, [r2, #20]
 800394c:	8493      	strh	r3, [r2, #36]	; 0x24
 800394e:	4610      	mov	r0, r2
 8003950:	bd10      	pop	{r4, pc}
 8003952:	bf00      	nop
 8003954:	08031f7c 	.word	0x08031f7c

08003958 <_ZN8touchgfx14SwipeContainerC1ERKS0_>:
class SwipeContainer : public Container
 8003958:	b538      	push	{r3, r4, r5, lr}
 800395a:	460d      	mov	r5, r1
 800395c:	4604      	mov	r4, r0
class Container : public Drawable
 800395e:	f7ff ffdb 	bl	8003918 <_ZN8touchgfx8DrawableC1ERKS0_>
 8003962:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8003964:	62a3      	str	r3, [r4, #40]	; 0x28
 8003966:	4b2b      	ldr	r3, [pc, #172]	; (8003a14 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xbc>)
 8003968:	6023      	str	r3, [r4, #0]
 800396a:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800396c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800396e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8003970:	6323      	str	r3, [r4, #48]	; 0x30
 8003972:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8003974:	6363      	str	r3, [r4, #52]	; 0x34
 8003976:	f105 0138 	add.w	r1, r5, #56	; 0x38
 800397a:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800397e:	f7ff ffcb 	bl	8003918 <_ZN8touchgfx8DrawableC1ERKS0_>
 8003982:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8003984:	6623      	str	r3, [r4, #96]	; 0x60
 * dimensions of the physical screen. Place the ListLayout inside e.g. a
 * ScrollableContainer to allow all the children to be viewed.
 *
 * @see ScrollableContainer
 */
class ListLayout : public Container
 8003986:	4b24      	ldr	r3, [pc, #144]	; (8003a18 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc0>)
 8003988:	63a3      	str	r3, [r4, #56]	; 0x38
 800398a:	f895 3064 	ldrb.w	r3, [r5, #100]	; 0x64
 800398e:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8003992:	f8b5 3066 	ldrh.w	r3, [r5, #102]	; 0x66
 8003996:	f8a4 3066 	strh.w	r3, [r4, #102]	; 0x66
 800399a:	f105 0168 	add.w	r1, r5, #104	; 0x68
 800399e:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80039a2:	f7ff ffb9 	bl	8003918 <_ZN8touchgfx8DrawableC1ERKS0_>
 80039a6:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 80039aa:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
    class PageIndicator : public Container
 80039ae:	4b1b      	ldr	r3, [pc, #108]	; (8003a1c <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc4>)
 80039b0:	66a3      	str	r3, [r4, #104]	; 0x68
 80039b2:	f105 0194 	add.w	r1, r5, #148	; 0x94
 80039b6:	f104 0094 	add.w	r0, r4, #148	; 0x94
 80039ba:	f7ff ffad 	bl	8003918 <_ZN8touchgfx8DrawableC1ERKS0_>
 * is handled by the Image Converter as part of compiling the project. Each image is
 * assigned a unique BITMAP identifier which.
 *
 * @see Bitmap
 */
class Image : public Widget
 80039be:	f8b5 30ba 	ldrh.w	r3, [r5, #186]	; 0xba
 80039c2:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 80039c6:	f895 30bc 	ldrb.w	r3, [r5, #188]	; 0xbc
 80039ca:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 * Simple widget capable of showing a bitmap tiled indefinitely horizontally and vertically.
 * This means that when the TiledImage Widget is larger than the provided Bitmap, the
 * Bitmap is repeated over and over horizontally and vertically. The bitmap can be alpha-
 * blended with the background and have areas of transparency.
 */
class TiledImage : public Image
 80039ce:	4b14      	ldr	r3, [pc, #80]	; (8003a20 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc8>)
 80039d0:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 80039d4:	f8b5 30be 	ldrh.w	r3, [r5, #190]	; 0xbe
 80039d8:	f8a4 30be 	strh.w	r3, [r4, #190]	; 0xbe
 80039dc:	f8b5 30c0 	ldrh.w	r3, [r5, #192]	; 0xc0
 80039e0:	f8a4 30c0 	strh.w	r3, [r4, #192]	; 0xc0
 80039e4:	f105 01c4 	add.w	r1, r5, #196	; 0xc4
 80039e8:	f104 00c4 	add.w	r0, r4, #196	; 0xc4
 80039ec:	f7ff ff94 	bl	8003918 <_ZN8touchgfx8DrawableC1ERKS0_>
 80039f0:	4b0c      	ldr	r3, [pc, #48]	; (8003a24 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xcc>)
 80039f2:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 80039f6:	f8b5 30ea 	ldrh.w	r3, [r5, #234]	; 0xea
 80039fa:	f8a4 30ea 	strh.w	r3, [r4, #234]	; 0xea
 80039fe:	f895 30ec 	ldrb.w	r3, [r5, #236]	; 0xec
 8003a02:	f884 30ec 	strb.w	r3, [r4, #236]	; 0xec
 8003a06:	f8b5 30f0 	ldrh.w	r3, [r5, #240]	; 0xf0
 8003a0a:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
class SwipeContainer : public Container
 8003a0e:	4620      	mov	r0, r4
 8003a10:	bd38      	pop	{r3, r4, r5, pc}
 8003a12:	bf00      	nop
 8003a14:	08031794 	.word	0x08031794
 8003a18:	08031858 	.word	0x08031858
 8003a1c:	0802f6a4 	.word	0x0802f6a4
 8003a20:	08031c54 	.word	0x08031c54
 8003a24:	08031e38 	.word	0x08031e38

08003a28 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
{
 8003a28:	b5f0      	push	{r4, r5, r6, r7, lr}
    if (&src == &buttonWithIcon_LP1)
 8003a2a:	f500 731e 	add.w	r3, r0, #632	; 0x278
 8003a2e:	4299      	cmp	r1, r3
{
 8003a30:	b0c7      	sub	sp, #284	; 0x11c
 8003a32:	4604      	mov	r4, r0
 8003a34:	460d      	mov	r5, r1
    if (&src == &buttonWithIcon_LP1)
 8003a36:	d122      	bne.n	8003a7e <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x56>
        SwipeContainer swipeContainer = swipeContainer1;
 8003a38:	f100 06e0 	add.w	r6, r0, #224	; 0xe0
 8003a3c:	4631      	mov	r1, r6
 8003a3e:	a809      	add	r0, sp, #36	; 0x24
 8003a40:	f7ff ff8a 	bl	8003958 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003a44:	a801      	add	r0, sp, #4
 8003a46:	f7fd fae9 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pl, 0, 12);
 8003a4a:	eddd 7a03 	vldr	s15, [sp, #12]
 8003a4e:	48cf      	ldr	r0, [pc, #828]	; (8003d8c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003a50:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003a54:	230c      	movs	r3, #12
 8003a56:	ee17 7a90 	vmov	r7, s15
 8003a5a:	ee17 1a90 	vmov	r1, s15
 8003a5e:	2200      	movs	r2, #0
 8003a60:	f7fd fe6e 	bl	8001740 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pl);
 8003a64:	4aca      	ldr	r2, [pc, #808]	; (8003d90 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003a66:	463b      	mov	r3, r7
 8003a68:	210a      	movs	r1, #10
 8003a6a:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 8003a6e:	f018 f9ad 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003a72:	4630      	mov	r0, r6
 8003a74:	f016 f8e4 	bl	8019c40 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003a78:	a809      	add	r0, sp, #36	; 0x24
 8003a7a:	f00f f9af 	bl	8012ddc <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP2)
 8003a7e:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8003a82:	429d      	cmp	r5, r3
 8003a84:	d122      	bne.n	8003acc <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa4>
        SwipeContainer swipeContainer = swipeContainer1;
 8003a86:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003a8a:	4631      	mov	r1, r6
 8003a8c:	a809      	add	r0, sp, #36	; 0x24
 8003a8e:	f7ff ff63 	bl	8003958 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003a92:	a801      	add	r0, sp, #4
 8003a94:	f7fd fac2 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pl, 1, 12);
 8003a98:	eddd 7a03 	vldr	s15, [sp, #12]
 8003a9c:	48bb      	ldr	r0, [pc, #748]	; (8003d8c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003a9e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003aa2:	230c      	movs	r3, #12
 8003aa4:	ee17 7a90 	vmov	r7, s15
 8003aa8:	ee17 1a90 	vmov	r1, s15
 8003aac:	2201      	movs	r2, #1
 8003aae:	f7fd fe47 	bl	8001740 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pl);
 8003ab2:	4ab7      	ldr	r2, [pc, #732]	; (8003d90 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003ab4:	463b      	mov	r3, r7
 8003ab6:	210a      	movs	r1, #10
 8003ab8:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 8003abc:	f018 f986 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003ac0:	4630      	mov	r0, r6
 8003ac2:	f016 f8bd 	bl	8019c40 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003ac6:	a809      	add	r0, sp, #36	; 0x24
 8003ac8:	f00f f988 	bl	8012ddc <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP3)
 8003acc:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8003ad0:	429d      	cmp	r5, r3
 8003ad2:	d122      	bne.n	8003b1a <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xf2>
        SwipeContainer swipeContainer = swipeContainer1;
 8003ad4:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003ad8:	4631      	mov	r1, r6
 8003ada:	a809      	add	r0, sp, #36	; 0x24
 8003adc:	f7ff ff3c 	bl	8003958 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003ae0:	a801      	add	r0, sp, #4
 8003ae2:	f7fd fa9b 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pl, 2, 12);
 8003ae6:	eddd 7a03 	vldr	s15, [sp, #12]
 8003aea:	48a8      	ldr	r0, [pc, #672]	; (8003d8c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003aec:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003af0:	230c      	movs	r3, #12
 8003af2:	ee17 7a90 	vmov	r7, s15
 8003af6:	ee17 1a90 	vmov	r1, s15
 8003afa:	2202      	movs	r2, #2
 8003afc:	f7fd fe20 	bl	8001740 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pl);
 8003b00:	4aa3      	ldr	r2, [pc, #652]	; (8003d90 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003b02:	463b      	mov	r3, r7
 8003b04:	210a      	movs	r1, #10
 8003b06:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 8003b0a:	f018 f95f 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003b0e:	4630      	mov	r0, r6
 8003b10:	f016 f896 	bl	8019c40 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003b14:	a809      	add	r0, sp, #36	; 0x24
 8003b16:	f00f f961 	bl	8012ddc <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP1)
 8003b1a:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8003b1e:	429d      	cmp	r5, r3
 8003b20:	d122      	bne.n	8003b68 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x140>
        SwipeContainer swipeContainer = swipeContainer1;
 8003b22:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003b26:	4631      	mov	r1, r6
 8003b28:	a809      	add	r0, sp, #36	; 0x24
 8003b2a:	f7ff ff15 	bl	8003958 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003b2e:	a801      	add	r0, sp, #4
 8003b30:	f7fd fa74 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pr, 3, 12);
 8003b34:	eddd 7a01 	vldr	s15, [sp, #4]
 8003b38:	4894      	ldr	r0, [pc, #592]	; (8003d8c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003b3a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003b3e:	230c      	movs	r3, #12
 8003b40:	ee17 7a90 	vmov	r7, s15
 8003b44:	ee17 1a90 	vmov	r1, s15
 8003b48:	2203      	movs	r2, #3
 8003b4a:	f7fd fdf9 	bl	8001740 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pr);
 8003b4e:	4a90      	ldr	r2, [pc, #576]	; (8003d90 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003b50:	463b      	mov	r3, r7
 8003b52:	210a      	movs	r1, #10
 8003b54:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 8003b58:	f018 f938 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003b5c:	4630      	mov	r0, r6
 8003b5e:	f016 f86f 	bl	8019c40 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003b62:	a809      	add	r0, sp, #36	; 0x24
 8003b64:	f00f f93a 	bl	8012ddc <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP2)
 8003b68:	f204 43cc 	addw	r3, r4, #1228	; 0x4cc
 8003b6c:	429d      	cmp	r5, r3
 8003b6e:	d122      	bne.n	8003bb6 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18e>
        SwipeContainer swipeContainer = swipeContainer1;
 8003b70:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003b74:	4631      	mov	r1, r6
 8003b76:	a809      	add	r0, sp, #36	; 0x24
 8003b78:	f7ff feee 	bl	8003958 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003b7c:	a801      	add	r0, sp, #4
 8003b7e:	f7fd fa4d 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pr, 4, 12);
 8003b82:	eddd 7a01 	vldr	s15, [sp, #4]
 8003b86:	4881      	ldr	r0, [pc, #516]	; (8003d8c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003b88:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003b8c:	230c      	movs	r3, #12
 8003b8e:	ee17 7a90 	vmov	r7, s15
 8003b92:	ee17 1a90 	vmov	r1, s15
 8003b96:	2204      	movs	r2, #4
 8003b98:	f7fd fdd2 	bl	8001740 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pr);
 8003b9c:	4a7c      	ldr	r2, [pc, #496]	; (8003d90 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003b9e:	463b      	mov	r3, r7
 8003ba0:	210a      	movs	r1, #10
 8003ba2:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 8003ba6:	f018 f911 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003baa:	4630      	mov	r0, r6
 8003bac:	f016 f848 	bl	8019c40 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003bb0:	a809      	add	r0, sp, #36	; 0x24
 8003bb2:	f00f f913 	bl	8012ddc <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP3)
 8003bb6:	f504 6392 	add.w	r3, r4, #1168	; 0x490
 8003bba:	429d      	cmp	r5, r3
 8003bbc:	d122      	bne.n	8003c04 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1dc>
        SwipeContainer swipeContainer = swipeContainer1;
 8003bbe:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003bc2:	4631      	mov	r1, r6
 8003bc4:	a809      	add	r0, sp, #36	; 0x24
 8003bc6:	f7ff fec7 	bl	8003958 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003bca:	a801      	add	r0, sp, #4
 8003bcc:	f7fd fa26 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pr, 5, 12);
 8003bd0:	eddd 7a01 	vldr	s15, [sp, #4]
 8003bd4:	486d      	ldr	r0, [pc, #436]	; (8003d8c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003bd6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003bda:	230c      	movs	r3, #12
 8003bdc:	ee17 7a90 	vmov	r7, s15
 8003be0:	ee17 1a90 	vmov	r1, s15
 8003be4:	2205      	movs	r2, #5
 8003be6:	f7fd fdab 	bl	8001740 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pr);
 8003bea:	4a69      	ldr	r2, [pc, #420]	; (8003d90 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003bec:	463b      	mov	r3, r7
 8003bee:	210a      	movs	r1, #10
 8003bf0:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 8003bf4:	f018 f8ea 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003bf8:	4630      	mov	r0, r6
 8003bfa:	f016 f821 	bl	8019c40 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003bfe:	a809      	add	r0, sp, #36	; 0x24
 8003c00:	f00f f8ec 	bl	8012ddc <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH1)
 8003c04:	f504 63f3 	add.w	r3, r4, #1944	; 0x798
 8003c08:	429d      	cmp	r5, r3
 8003c0a:	d122      	bne.n	8003c52 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22a>
        SwipeContainer swipeContainer = swipeContainer1;
 8003c0c:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003c10:	4631      	mov	r1, r6
 8003c12:	a809      	add	r0, sp, #36	; 0x24
 8003c14:	f7ff fea0 	bl	8003958 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003c18:	a801      	add	r0, sp, #4
 8003c1a:	f7fd f9ff 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsl, 6, 12);
 8003c1e:	eddd 7a07 	vldr	s15, [sp, #28]
 8003c22:	485a      	ldr	r0, [pc, #360]	; (8003d8c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003c24:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c28:	230c      	movs	r3, #12
 8003c2a:	ee17 7a90 	vmov	r7, s15
 8003c2e:	ee17 1a90 	vmov	r1, s15
 8003c32:	2206      	movs	r2, #6
 8003c34:	f7fd fd84 	bl	8001740 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsl);
 8003c38:	4a55      	ldr	r2, [pc, #340]	; (8003d90 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003c3a:	463b      	mov	r3, r7
 8003c3c:	210a      	movs	r1, #10
 8003c3e:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 8003c42:	f018 f8c3 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003c46:	4630      	mov	r0, r6
 8003c48:	f015 fffa 	bl	8019c40 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003c4c:	a809      	add	r0, sp, #36	; 0x24
 8003c4e:	f00f f8c5 	bl	8012ddc <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH2)
 8003c52:	f204 735c 	addw	r3, r4, #1884	; 0x75c
 8003c56:	429d      	cmp	r5, r3
 8003c58:	d122      	bne.n	8003ca0 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x278>
        SwipeContainer swipeContainer = swipeContainer1;
 8003c5a:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003c5e:	4631      	mov	r1, r6
 8003c60:	a809      	add	r0, sp, #36	; 0x24
 8003c62:	f7ff fe79 	bl	8003958 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003c66:	a801      	add	r0, sp, #4
 8003c68:	f7fd f9d8 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsl, 7, 12);
 8003c6c:	eddd 7a07 	vldr	s15, [sp, #28]
 8003c70:	4846      	ldr	r0, [pc, #280]	; (8003d8c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003c72:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c76:	230c      	movs	r3, #12
 8003c78:	ee17 7a90 	vmov	r7, s15
 8003c7c:	ee17 1a90 	vmov	r1, s15
 8003c80:	2207      	movs	r2, #7
 8003c82:	f7fd fd5d 	bl	8001740 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsl);
 8003c86:	4a42      	ldr	r2, [pc, #264]	; (8003d90 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003c88:	463b      	mov	r3, r7
 8003c8a:	210a      	movs	r1, #10
 8003c8c:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 8003c90:	f018 f89c 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003c94:	4630      	mov	r0, r6
 8003c96:	f015 ffd3 	bl	8019c40 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003c9a:	a809      	add	r0, sp, #36	; 0x24
 8003c9c:	f00f f89e 	bl	8012ddc <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH3)
 8003ca0:	f504 63e4 	add.w	r3, r4, #1824	; 0x720
 8003ca4:	429d      	cmp	r5, r3
 8003ca6:	d122      	bne.n	8003cee <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2c6>
        SwipeContainer swipeContainer = swipeContainer1;
 8003ca8:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003cac:	4631      	mov	r1, r6
 8003cae:	a809      	add	r0, sp, #36	; 0x24
 8003cb0:	f7ff fe52 	bl	8003958 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003cb4:	a801      	add	r0, sp, #4
 8003cb6:	f7fd f9b1 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsl, 8, 12);
 8003cba:	eddd 7a07 	vldr	s15, [sp, #28]
 8003cbe:	4833      	ldr	r0, [pc, #204]	; (8003d8c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003cc0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003cc4:	230c      	movs	r3, #12
 8003cc6:	ee17 7a90 	vmov	r7, s15
 8003cca:	ee17 1a90 	vmov	r1, s15
 8003cce:	2208      	movs	r2, #8
 8003cd0:	f7fd fd36 	bl	8001740 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsl);
 8003cd4:	4a2e      	ldr	r2, [pc, #184]	; (8003d90 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003cd6:	463b      	mov	r3, r7
 8003cd8:	210a      	movs	r1, #10
 8003cda:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 8003cde:	f018 f875 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003ce2:	4630      	mov	r0, r6
 8003ce4:	f015 ffac 	bl	8019c40 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003ce8:	a809      	add	r0, sp, #36	; 0x24
 8003cea:	f00f f877 	bl	8012ddc <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH1)
 8003cee:	f604 2328 	addw	r3, r4, #2600	; 0xa28
 8003cf2:	429d      	cmp	r5, r3
 8003cf4:	d122      	bne.n	8003d3c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x314>
        SwipeContainer swipeContainer = swipeContainer1;
 8003cf6:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003cfa:	4631      	mov	r1, r6
 8003cfc:	a809      	add	r0, sp, #36	; 0x24
 8003cfe:	f7ff fe2b 	bl	8003958 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003d02:	a801      	add	r0, sp, #4
 8003d04:	f7fd f98a 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsr, 9, 12);
 8003d08:	eddd 7a05 	vldr	s15, [sp, #20]
 8003d0c:	481f      	ldr	r0, [pc, #124]	; (8003d8c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003d0e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003d12:	230c      	movs	r3, #12
 8003d14:	ee17 7a90 	vmov	r7, s15
 8003d18:	ee17 1a90 	vmov	r1, s15
 8003d1c:	2209      	movs	r2, #9
 8003d1e:	f7fd fd0f 	bl	8001740 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsr);
 8003d22:	4a1b      	ldr	r2, [pc, #108]	; (8003d90 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003d24:	463b      	mov	r3, r7
 8003d26:	210a      	movs	r1, #10
 8003d28:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 8003d2c:	f018 f84e 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003d30:	4630      	mov	r0, r6
 8003d32:	f015 ff85 	bl	8019c40 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003d36:	a809      	add	r0, sp, #36	; 0x24
 8003d38:	f00f f850 	bl	8012ddc <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH2)
 8003d3c:	f604 13ec 	addw	r3, r4, #2540	; 0x9ec
 8003d40:	429d      	cmp	r5, r3
 8003d42:	d127      	bne.n	8003d94 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36c>
        SwipeContainer swipeContainer = swipeContainer1;
 8003d44:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003d48:	4631      	mov	r1, r6
 8003d4a:	a809      	add	r0, sp, #36	; 0x24
 8003d4c:	f7ff fe04 	bl	8003958 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003d50:	a801      	add	r0, sp, #4
 8003d52:	f7fd f963 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsr, 10, 12);
 8003d56:	eddd 7a05 	vldr	s15, [sp, #20]
 8003d5a:	480c      	ldr	r0, [pc, #48]	; (8003d8c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x364>)
 8003d5c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003d60:	230c      	movs	r3, #12
 8003d62:	ee17 7a90 	vmov	r7, s15
 8003d66:	ee17 1a90 	vmov	r1, s15
 8003d6a:	220a      	movs	r2, #10
 8003d6c:	f7fd fce8 	bl	8001740 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsr);
 8003d70:	4a07      	ldr	r2, [pc, #28]	; (8003d90 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x368>)
 8003d72:	463b      	mov	r3, r7
 8003d74:	210a      	movs	r1, #10
 8003d76:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 8003d7a:	f018 f827 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003d7e:	4630      	mov	r0, r6
 8003d80:	f015 ff5e 	bl	8019c40 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003d84:	a809      	add	r0, sp, #36	; 0x24
 8003d86:	f00f f829 	bl	8012ddc <_ZN8touchgfx14SwipeContainerD1Ev>
 8003d8a:	e003      	b.n	8003d94 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36c>
 8003d8c:	081e0000 	.word	0x081e0000
 8003d90:	0802f5e6 	.word	0x0802f5e6
    if (&src == &buttonWithIcon_RH3)
 8003d94:	f504 631b 	add.w	r3, r4, #2480	; 0x9b0
 8003d98:	429d      	cmp	r5, r3
 8003d9a:	d122      	bne.n	8003de2 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3ba>
        SwipeContainer swipeContainer = swipeContainer1;
 8003d9c:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003da0:	4631      	mov	r1, r6
 8003da2:	a809      	add	r0, sp, #36	; 0x24
 8003da4:	f7ff fdd8 	bl	8003958 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003da8:	a801      	add	r0, sp, #4
 8003daa:	f7fd f937 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsr, 11, 12);
 8003dae:	eddd 7a05 	vldr	s15, [sp, #20]
 8003db2:	4813      	ldr	r0, [pc, #76]	; (8003e00 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3d8>)
 8003db4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003db8:	230c      	movs	r3, #12
 8003dba:	ee17 7a90 	vmov	r7, s15
 8003dbe:	ee17 1a90 	vmov	r1, s15
 8003dc2:	220b      	movs	r2, #11
 8003dc4:	f7fd fcbc 	bl	8001740 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsr);
 8003dc8:	4a0e      	ldr	r2, [pc, #56]	; (8003e04 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3dc>)
 8003dca:	463b      	mov	r3, r7
 8003dcc:	210a      	movs	r1, #10
 8003dce:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 8003dd2:	f017 fffb 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003dd6:	4630      	mov	r0, r6
 8003dd8:	f015 ff32 	bl	8019c40 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003ddc:	a809      	add	r0, sp, #36	; 0x24
 8003dde:	f00e fffd 	bl	8012ddc <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithLabel3)
 8003de2:	3498      	adds	r4, #152	; 0x98
 8003de4:	42a5      	cmp	r5, r4
 8003de6:	d108      	bne.n	8003dfa <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3d2>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003de8:	f014 fe42 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoMain_MenuScreenWipeTransitionWest();
 8003dec:	f001 fc58 	bl	80056a0 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8003df0:	b047      	add	sp, #284	; 0x11c
 8003df2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
        start_calibration();
 8003df6:	f7fd bb77 	b.w	80014e8 <start_calibration>
}
 8003dfa:	b047      	add	sp, #284	; 0x11c
 8003dfc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003dfe:	bf00      	nop
 8003e00:	081e0000 	.word	0x081e0000
 8003e04:	0802f5e6 	.word	0x0802f5e6

08003e08 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003e08:	0152      	lsls	r2, r2, #5
 8003e0a:	0149      	lsls	r1, r1, #5
 8003e0c:	f010 bf3a 	b.w	8014c84 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

08003e10 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003e10:	0152      	lsls	r2, r2, #5
 8003e12:	0149      	lsls	r1, r1, #5
 8003e14:	f010 bf41 	b.w	8014c9a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>

08003e18 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
     * @see updateLineWidth
     *
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setLineWidth(T width)
 8003e18:	b410      	push	{r4}
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8003e1a:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8003e1c:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * Rasterizer::POLY_BASE_SIZE));
 8003e20:	ea4f 1241 	mov.w	r2, r1, lsl #5
 8003e24:	d004      	beq.n	8003e30 <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 8003e26:	f85d 4b04 	ldr.w	r4, [sp], #4
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8003e2a:	63c2      	str	r2, [r0, #60]	; 0x3c

        updateCachedShape();
 8003e2c:	f010 be34 	b.w	8014a98 <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 8003e30:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003e34:	4770      	bx	lr
	...

08003e38 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8003e38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003e3c:	ed2d 8b10 	vpush	{d8-d15}
 8003e40:	4604      	mov	r4, r0
 8003e42:	b0ad      	sub	sp, #180	; 0xb4
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 8003e44:	46a1      	mov	r9, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8003e46:	2500      	movs	r5, #0
 8003e48:	f016 fa92 	bl	801a370 <_ZN8touchgfx6ScreenC1Ev>
 8003e4c:	4be5      	ldr	r3, [pc, #916]	; (80041e4 <_ZN23Calibration_PadViewBaseC1Ev+0x3ac>)
 8003e4e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003e50:	f849 3b40 	str.w	r3, [r9], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8003e54:	2226      	movs	r2, #38	; 0x26
 8003e56:	4629      	mov	r1, r5
 8003e58:	4648      	mov	r0, r9
 8003e5a:	f02a f852 	bl	802df02 <memset>
 8003e5e:	4648      	mov	r0, r9
 8003e60:	f7ff fcca 	bl	80037f8 <_ZN8touchgfx6WidgetC1Ev>
 8003e64:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8003e68:	26ff      	movs	r6, #255	; 0xff
 8003e6a:	4bdf      	ldr	r3, [pc, #892]	; (80041e8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b0>)
 8003e6c:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8003e6e:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003e70:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003e74:	4629      	mov	r1, r5
 8003e76:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8003e7a:	4640      	mov	r0, r8
        : color(col)
 8003e7c:	66a5      	str	r5, [r4, #104]	; 0x68
 8003e7e:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8003e82:	f02a f83e 	bl	802df02 <memset>
 8003e86:	4640      	mov	r0, r8
 8003e88:	f7ff fcb6 	bl	80037f8 <_ZN8touchgfx6WidgetC1Ev>
 8003e8c:	4bd7      	ldr	r3, [pc, #860]	; (80041ec <_ZN23Calibration_PadViewBaseC1Ev+0x3b4>)
 8003e8e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003e90:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
 8003e94:	f8bd 30a4 	ldrh.w	r3, [sp, #164]	; 0xa4
 8003e98:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 8003e9c:	ae29      	add	r6, sp, #164	; 0xa4
 8003e9e:	4631      	mov	r1, r6
 8003ea0:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8003ea4:	4640      	mov	r0, r8
 8003ea6:	f012 f8e4 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003eaa:	4658      	mov	r0, fp
 8003eac:	f012 fa18 	bl	80162e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003eb0:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8003eb4:	4618      	mov	r0, r3
 8003eb6:	ee08 3a10 	vmov	s16, r3
 8003eba:	f00f f8bd 	bl	8013038 <_ZN8touchgfx14SwipeContainerC1Ev>
 8003ebe:	f504 73ea 	add.w	r3, r4, #468	; 0x1d4
 8003ec2:	4618      	mov	r0, r3
 8003ec4:	ee08 3a90 	vmov	s17, r3
 8003ec8:	f7ff fc84 	bl	80037d4 <_ZN8touchgfx9ContainerC1Ev>
 8003ecc:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8003ed0:	4618      	mov	r0, r3
 8003ed2:	9311      	str	r3, [sp, #68]	; 0x44
 8003ed4:	f012 f8a6 	bl	8016024 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003ed8:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8003edc:	f504 771e 	add.w	r7, r4, #632	; 0x278
 8003ee0:	4618      	mov	r0, r3
 8003ee2:	9312      	str	r3, [sp, #72]	; 0x48
 8003ee4:	f012 f89e 	bl	8016024 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003ee8:	4638      	mov	r0, r7
 8003eea:	f012 f89b 	bl	8016024 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003eee:	f504 732d 	add.w	r3, r4, #692	; 0x2b4
 8003ef2:	4618      	mov	r0, r3
 8003ef4:	ee0d 3a90 	vmov	s27, r3
 8003ef8:	f7ff fd02 	bl	8003900 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003efc:	f504 7340 	add.w	r3, r4, #768	; 0x300
 8003f00:	4618      	mov	r0, r3
 8003f02:	ee0e 3a10 	vmov	s28, r3
 8003f06:	f7ff fcfb 	bl	8003900 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f0a:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 8003f0e:	4618      	mov	r0, r3
 8003f10:	ee0e 3a90 	vmov	s29, r3
 8003f14:	f7ff fcf4 	bl	8003900 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f18:	f504 7366 	add.w	r3, r4, #920	; 0x398
 8003f1c:	4618      	mov	r0, r3
 8003f1e:	ee0a 3a90 	vmov	s21, r3
 8003f22:	f010 fd99 	bl	8014a58 <_ZN8touchgfx4LineC1Ev>
 8003f26:	f504 6381 	add.w	r3, r4, #1032	; 0x408
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003f2a:	4618      	mov	r0, r3
 8003f2c:	931c      	str	r3, [sp, #112]	; 0x70
 8003f2e:	f7ff fa67 	bl	8003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003f32:	4baf      	ldr	r3, [pc, #700]	; (80041f0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003f34:	f8c4 3408 	str.w	r3, [r4, #1032]	; 0x408
 8003f38:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003f3c:	f204 411c 	addw	r1, r4, #1052	; 0x41c
 8003f40:	f8c4 2410 	str.w	r2, [r4, #1040]	; 0x410
 8003f44:	4608      	mov	r0, r1
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8003f46:	f8c4 5414 	str.w	r5, [r4, #1044]	; 0x414
 8003f4a:	f204 4a64 	addw	sl, r4, #1124	; 0x464
 8003f4e:	9107      	str	r1, [sp, #28]
 8003f50:	f7ff fcb6 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8003f54:	4650      	mov	r0, sl
 8003f56:	f7ff fc3d 	bl	80037d4 <_ZN8touchgfx9ContainerC1Ev>
 8003f5a:	f504 6192 	add.w	r1, r4, #1168	; 0x490
 8003f5e:	4608      	mov	r0, r1
 8003f60:	9113      	str	r1, [sp, #76]	; 0x4c
 8003f62:	f012 f85f 	bl	8016024 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003f66:	f204 41cc 	addw	r1, r4, #1228	; 0x4cc
 8003f6a:	4608      	mov	r0, r1
 8003f6c:	9114      	str	r1, [sp, #80]	; 0x50
 8003f6e:	f012 f859 	bl	8016024 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003f72:	f504 61a1 	add.w	r1, r4, #1288	; 0x508
 8003f76:	4608      	mov	r0, r1
 8003f78:	9115      	str	r1, [sp, #84]	; 0x54
 8003f7a:	f012 f853 	bl	8016024 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003f7e:	f204 5144 	addw	r1, r4, #1348	; 0x544
 8003f82:	4608      	mov	r0, r1
 8003f84:	9108      	str	r1, [sp, #32]
 8003f86:	f7ff fcbb 	bl	8003900 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f8a:	f504 61b2 	add.w	r1, r4, #1424	; 0x590
 8003f8e:	4608      	mov	r0, r1
 8003f90:	9109      	str	r1, [sp, #36]	; 0x24
 8003f92:	f7ff fcb5 	bl	8003900 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f96:	f204 51dc 	addw	r1, r4, #1500	; 0x5dc
 8003f9a:	4608      	mov	r0, r1
 8003f9c:	910a      	str	r1, [sp, #40]	; 0x28
 8003f9e:	f7ff fcaf 	bl	8003900 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003fa2:	f504 61c5 	add.w	r1, r4, #1576	; 0x628
 8003fa6:	4608      	mov	r0, r1
 8003fa8:	ee0b 1a10 	vmov	s22, r1
 8003fac:	f010 fd54 	bl	8014a58 <_ZN8touchgfx4LineC1Ev>
 8003fb0:	f504 61d3 	add.w	r1, r4, #1688	; 0x698
 8003fb4:	4608      	mov	r0, r1
 8003fb6:	911d      	str	r1, [sp, #116]	; 0x74
 8003fb8:	f7ff fa22 	bl	8003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003fbc:	4b8c      	ldr	r3, [pc, #560]	; (80041f0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003fbe:	f8c4 3698 	str.w	r3, [r4, #1688]	; 0x698
 8003fc2:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003fc6:	f204 61ac 	addw	r1, r4, #1708	; 0x6ac
 8003fca:	f8c4 26a0 	str.w	r2, [r4, #1696]	; 0x6a0
 8003fce:	4608      	mov	r0, r1
 8003fd0:	f8c4 56a4 	str.w	r5, [r4, #1700]	; 0x6a4
 8003fd4:	ee0f 1a10 	vmov	s30, r1
 8003fd8:	f7ff fc72 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8003fdc:	f204 61f4 	addw	r1, r4, #1780	; 0x6f4
 8003fe0:	4608      	mov	r0, r1
 8003fe2:	ee09 1a10 	vmov	s18, r1
 8003fe6:	f7ff fbf5 	bl	80037d4 <_ZN8touchgfx9ContainerC1Ev>
 8003fea:	f504 61e4 	add.w	r1, r4, #1824	; 0x720
 8003fee:	4608      	mov	r0, r1
 8003ff0:	9116      	str	r1, [sp, #88]	; 0x58
 8003ff2:	f012 f817 	bl	8016024 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003ff6:	f204 715c 	addw	r1, r4, #1884	; 0x75c
 8003ffa:	4608      	mov	r0, r1
 8003ffc:	9117      	str	r1, [sp, #92]	; 0x5c
 8003ffe:	f012 f811 	bl	8016024 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8004002:	f504 61f3 	add.w	r1, r4, #1944	; 0x798
 8004006:	4608      	mov	r0, r1
 8004008:	9118      	str	r1, [sp, #96]	; 0x60
 800400a:	f012 f80b 	bl	8016024 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800400e:	f204 71d4 	addw	r1, r4, #2004	; 0x7d4
 8004012:	4608      	mov	r0, r1
 8004014:	910b      	str	r1, [sp, #44]	; 0x2c
 8004016:	f7ff fc73 	bl	8003900 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800401a:	f504 6102 	add.w	r1, r4, #2080	; 0x820
 800401e:	4608      	mov	r0, r1
 8004020:	910c      	str	r1, [sp, #48]	; 0x30
 8004022:	f7ff fc6d 	bl	8003900 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004026:	f604 016c 	addw	r1, r4, #2156	; 0x86c
 800402a:	4608      	mov	r0, r1
 800402c:	910d      	str	r1, [sp, #52]	; 0x34
 800402e:	f7ff fc67 	bl	8003900 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004032:	f604 01b8 	addw	r1, r4, #2232	; 0x8b8
 8004036:	4608      	mov	r0, r1
 8004038:	ee0b 1a90 	vmov	s23, r1
 800403c:	f010 fd0c 	bl	8014a58 <_ZN8touchgfx4LineC1Ev>
 8004040:	f604 1128 	addw	r1, r4, #2344	; 0x928
 8004044:	4608      	mov	r0, r1
 8004046:	911e      	str	r1, [sp, #120]	; 0x78
 8004048:	f7ff f9da 	bl	8003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800404c:	4b68      	ldr	r3, [pc, #416]	; (80041f0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 800404e:	f8c4 3928 	str.w	r3, [r4, #2344]	; 0x928
 8004052:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8004056:	f604 113c 	addw	r1, r4, #2364	; 0x93c
 800405a:	f8c4 2930 	str.w	r2, [r4, #2352]	; 0x930
 800405e:	4608      	mov	r0, r1
 8004060:	f8c4 5934 	str.w	r5, [r4, #2356]	; 0x934
 8004064:	ee0f 1a90 	vmov	s31, r1
 8004068:	f7ff fc2a 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 800406c:	f604 1184 	addw	r1, r4, #2436	; 0x984
 8004070:	4608      	mov	r0, r1
 8004072:	ee09 1a90 	vmov	s19, r1
 8004076:	f7ff fbad 	bl	80037d4 <_ZN8touchgfx9ContainerC1Ev>
 800407a:	f504 611b 	add.w	r1, r4, #2480	; 0x9b0
 800407e:	4608      	mov	r0, r1
 8004080:	9119      	str	r1, [sp, #100]	; 0x64
 8004082:	f011 ffcf 	bl	8016024 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8004086:	f604 11ec 	addw	r1, r4, #2540	; 0x9ec
 800408a:	4608      	mov	r0, r1
 800408c:	911a      	str	r1, [sp, #104]	; 0x68
 800408e:	f011 ffc9 	bl	8016024 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8004092:	f604 2128 	addw	r1, r4, #2600	; 0xa28
 8004096:	4608      	mov	r0, r1
 8004098:	911b      	str	r1, [sp, #108]	; 0x6c
 800409a:	f011 ffc3 	bl	8016024 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800409e:	f604 2164 	addw	r1, r4, #2660	; 0xa64
 80040a2:	4608      	mov	r0, r1
 80040a4:	910e      	str	r1, [sp, #56]	; 0x38
 80040a6:	f7ff fc2b 	bl	8003900 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80040aa:	f504 612b 	add.w	r1, r4, #2736	; 0xab0
 80040ae:	4608      	mov	r0, r1
 80040b0:	910f      	str	r1, [sp, #60]	; 0x3c
 80040b2:	f7ff fc25 	bl	8003900 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80040b6:	f604 21fc 	addw	r1, r4, #2812	; 0xafc
 80040ba:	4608      	mov	r0, r1
 80040bc:	9110      	str	r1, [sp, #64]	; 0x40
 80040be:	f7ff fc1f 	bl	8003900 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80040c2:	f604 3148 	addw	r1, r4, #2888	; 0xb48
 80040c6:	4608      	mov	r0, r1
 80040c8:	ee0c 1a10 	vmov	s24, r1
 80040cc:	f010 fcc4 	bl	8014a58 <_ZN8touchgfx4LineC1Ev>
 80040d0:	f604 31b8 	addw	r1, r4, #3000	; 0xbb8
 80040d4:	4608      	mov	r0, r1
 80040d6:	911f      	str	r1, [sp, #124]	; 0x7c
 80040d8:	f7ff f992 	bl	8003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80040dc:	4b44      	ldr	r3, [pc, #272]	; (80041f0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 80040de:	f8c4 3bb8 	str.w	r3, [r4, #3000]	; 0xbb8
 80040e2:	f103 0224 	add.w	r2, r3, #36	; 0x24
 80040e6:	f604 31cc 	addw	r1, r4, #3020	; 0xbcc
 80040ea:	f8c4 2bc0 	str.w	r2, [r4, #3008]	; 0xbc0
 80040ee:	4608      	mov	r0, r1
 80040f0:	f8c4 5bc4 	str.w	r5, [r4, #3012]	; 0xbc4
 80040f4:	9103      	str	r1, [sp, #12]
 80040f6:	f7ff fbe3 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 80040fa:	f604 4114 	addw	r1, r4, #3092	; 0xc14
 80040fe:	4608      	mov	r0, r1
 8004100:	ee0c 1a90 	vmov	s25, r1
 8004104:	f010 fca8 	bl	8014a58 <_ZN8touchgfx4LineC1Ev>
 8004108:	f604 4184 	addw	r1, r4, #3204	; 0xc84
 800410c:	4608      	mov	r0, r1
 800410e:	9120      	str	r1, [sp, #128]	; 0x80
 8004110:	f7ff f976 	bl	8003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004114:	4b36      	ldr	r3, [pc, #216]	; (80041f0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8004116:	f8c4 3c84 	str.w	r3, [r4, #3204]	; 0xc84
 800411a:	f103 0224 	add.w	r2, r3, #36	; 0x24
 800411e:	f604 4198 	addw	r1, r4, #3224	; 0xc98
 8004122:	f8c4 2c8c 	str.w	r2, [r4, #3212]	; 0xc8c
 8004126:	4608      	mov	r0, r1
 8004128:	f8c4 5c90 	str.w	r5, [r4, #3216]	; 0xc90
 800412c:	9104      	str	r1, [sp, #16]
 800412e:	f7ff fbc7 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8004132:	f504 614e 	add.w	r1, r4, #3296	; 0xce0
 8004136:	4608      	mov	r0, r1
 8004138:	ee0d 1a10 	vmov	s26, r1
 800413c:	f010 fc8c 	bl	8014a58 <_ZN8touchgfx4LineC1Ev>
 8004140:	f504 6155 	add.w	r1, r4, #3408	; 0xd50
 8004144:	4608      	mov	r0, r1
 8004146:	9121      	str	r1, [sp, #132]	; 0x84
 8004148:	f7ff f95a 	bl	8003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800414c:	4b28      	ldr	r3, [pc, #160]	; (80041f0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 800414e:	f8c4 3d50 	str.w	r3, [r4, #3408]	; 0xd50
 8004152:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8004156:	f604 5364 	addw	r3, r4, #3428	; 0xd64
 800415a:	f8c4 2d58 	str.w	r2, [r4, #3416]	; 0xd58
 800415e:	4618      	mov	r0, r3
 8004160:	f8c4 5d5c 	str.w	r5, [r4, #3420]	; 0xd5c
 8004164:	9305      	str	r3, [sp, #20]
 8004166:	f7ff fbab 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 800416a:	f604 53ac 	addw	r3, r4, #3500	; 0xdac
 800416e:	4618      	mov	r0, r3
 8004170:	9306      	str	r3, [sp, #24]
 8004172:	f7ff fba5 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8004176:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800417a:	4a1e      	ldr	r2, [pc, #120]	; (80041f4 <_ZN23Calibration_PadViewBaseC1Ev+0x3bc>)
 800417c:	f8c3 2cf4 	str.w	r2, [r3, #3316]	; 0xcf4
 8004180:	4a1d      	ldr	r2, [pc, #116]	; (80041f8 <_ZN23Calibration_PadViewBaseC1Ev+0x3c0>)
 8004182:	f8c3 2cfc 	str.w	r2, [r3, #3324]	; 0xcfc
 8004186:	f8c3 4cf8 	str.w	r4, [r3, #3320]	; 0xcf8
 800418a:	f8c3 5d00 	str.w	r5, [r3, #3328]	; 0xd00
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800418e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8004192:	f604 60e4 	addw	r0, r4, #3812	; 0xee4
 8004196:	f012 ff5f 	bl	8017058 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800419a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800419e:	462a      	mov	r2, r5
 80041a0:	4648      	mov	r0, r9
 80041a2:	9300      	str	r3, [sp, #0]
 80041a4:	4629      	mov	r1, r5
 80041a6:	23f0      	movs	r3, #240	; 0xf0
 80041a8:	f7ff fb01 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80041ac:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80041b0:	66a3      	str	r3, [r4, #104]	; 0x68
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80041b2:	1d23      	adds	r3, r4, #4
 80041b4:	4618      	mov	r0, r3
 80041b6:	4649      	mov	r1, r9
 80041b8:	ee0a 3a10 	vmov	s20, r3
 80041bc:	f00e fb80 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80041c0:	462a      	mov	r2, r5
 80041c2:	4640      	mov	r0, r8
 80041c4:	4629      	mov	r1, r5
 80041c6:	f7ff fae5 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 80041ca:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80041cc:	4640      	mov	r0, r8
 80041ce:	4631      	mov	r1, r6
 80041d0:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 80041d4:	f011 ff4d 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80041d8:	4641      	mov	r1, r8
 80041da:	ee1a 0a10 	vmov	r0, s20
 80041de:	f00e fb6f 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80041e2:	e00b      	b.n	80041fc <_ZN23Calibration_PadViewBaseC1Ev+0x3c4>
 80041e4:	0802f7dc 	.word	0x0802f7dc
 80041e8:	08031bec 	.word	0x08031bec
 80041ec:	08031e38 	.word	0x08031e38
 80041f0:	08031920 	.word	0x08031920
 80041f4:	0802f7c4 	.word	0x0802f7c4
 80041f8:	08003a29 	.word	0x08003a29
    buttonWithLabel3.setXY(33, 257);
 80041fc:	4658      	mov	r0, fp
 80041fe:	f240 1201 	movw	r2, #257	; 0x101
 8004202:	2121      	movs	r1, #33	; 0x21
 8004204:	f7ff fac6 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8004208:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800420a:	4632      	mov	r2, r6
 800420c:	a928      	add	r1, sp, #160	; 0xa0
 800420e:	4658      	mov	r0, fp
 8004210:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 8004214:	2302      	movs	r3, #2
 8004216:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 800421a:	f011 fd34 	bl	8015c86 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800421e:	233b      	movs	r3, #59	; 0x3b
        updateTextPosition();
 8004220:	4658      	mov	r0, fp
 8004222:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8004226:	f7ff faf9 	bl	800381c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 800422a:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 800422e:	e9c4 3335 	strd	r3, r3, [r4, #212]	; 0xd4
    buttonWithLabel3.setAction(buttonCallback);
 8004232:	f504 53e7 	add.w	r3, r4, #7392	; 0x1ce0
 8004236:	3314      	adds	r3, #20
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8004238:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800423c:	4659      	mov	r1, fp
 800423e:	ee1a 0a10 	vmov	r0, s20
 8004242:	9302      	str	r3, [sp, #8]
 8004244:	f00e fb3c 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.setXY(0, 85);
 8004248:	ee18 0a10 	vmov	r0, s16
 800424c:	2255      	movs	r2, #85	; 0x55
 800424e:	4629      	mov	r1, r5
 8004250:	f7ff faa0 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8004254:	2306      	movs	r3, #6
    swipeContainer1.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_OFF_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_ON_ACTIVE_ID));
 8004256:	ee18 0a10 	vmov	r0, s16
 800425a:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 800425e:	4632      	mov	r2, r6
 8004260:	2307      	movs	r3, #7
 8004262:	a928      	add	r1, sp, #160	; 0xa0
 8004264:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8004268:	f00e ff84 	bl	8013174 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>
    swipeContainer1.setPageIndicatorXY(80, 140);
 800426c:	228c      	movs	r2, #140	; 0x8c
 800426e:	ee18 0a10 	vmov	r0, s16
 8004272:	2150      	movs	r1, #80	; 0x50
 8004274:	f00e fe2c 	bl	8012ed0 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>
    swipeContainer1.setSwipeCutoff(50);
 8004278:	ee18 0a10 	vmov	r0, s16
 800427c:	2132      	movs	r1, #50	; 0x32
 800427e:	f00e fdaa 	bl	8012dd6 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>
    swipeContainer1.setEndSwipeElasticWidth(50);
 8004282:	ee18 0a10 	vmov	r0, s16
 8004286:	2132      	movs	r1, #50	; 0x32
 8004288:	f00e fe20 	bl	8012ecc <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>
        rect.width = width;
 800428c:	4b47      	ldr	r3, [pc, #284]	; (80043ac <_ZN23Calibration_PadViewBaseC1Ev+0x574>)
    buttonWithIcon_LP3.setXY(194, 97);
 800428e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8004290:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
 8004294:	2261      	movs	r2, #97	; 0x61
 8004296:	21c2      	movs	r1, #194	; 0xc2
 8004298:	f7ff fa7c 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 800429c:	f04f 0809 	mov.w	r8, #9
 80042a0:	f04f 0b01 	mov.w	fp, #1
    buttonWithIcon_LP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80042a4:	aa27      	add	r2, sp, #156	; 0x9c
 80042a6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80042a8:	9600      	str	r6, [sp, #0]
 80042aa:	ab28      	add	r3, sp, #160	; 0xa0
 80042ac:	a926      	add	r1, sp, #152	; 0x98
 80042ae:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80042b2:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80042b6:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80042ba:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80042be:	f011 fe1c 	bl	8015efa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80042c2:	9b02      	ldr	r3, [sp, #8]
 80042c4:	f8c4 3228 	str.w	r3, [r4, #552]	; 0x228
    swipeContainerPadLeft.add(buttonWithIcon_LP3);
 80042c8:	9911      	ldr	r1, [sp, #68]	; 0x44
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 80042ca:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 80042ce:	ee18 0a90 	vmov	r0, s17
 80042d2:	f00e faf5 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP2.setXY(194, 61);
 80042d6:	9812      	ldr	r0, [sp, #72]	; 0x48
 80042d8:	223d      	movs	r2, #61	; 0x3d
 80042da:	21c2      	movs	r1, #194	; 0xc2
 80042dc:	f7ff fa5a 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80042e0:	aa27      	add	r2, sp, #156	; 0x9c
 80042e2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80042e4:	9600      	str	r6, [sp, #0]
 80042e6:	ab28      	add	r3, sp, #160	; 0xa0
 80042e8:	a926      	add	r1, sp, #152	; 0x98
 80042ea:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80042ee:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80042f2:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80042f6:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80042fa:	f011 fdfe 	bl	8015efa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80042fe:	9b02      	ldr	r3, [sp, #8]
 8004300:	f8c4 3264 	str.w	r3, [r4, #612]	; 0x264
    swipeContainerPadLeft.add(buttonWithIcon_LP2);
 8004304:	9912      	ldr	r1, [sp, #72]	; 0x48
 8004306:	f8c4 5274 	str.w	r5, [r4, #628]	; 0x274
 800430a:	ee18 0a90 	vmov	r0, s17
 800430e:	f00e fad7 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP1.setXY(194, 25);
 8004312:	4638      	mov	r0, r7
 8004314:	2219      	movs	r2, #25
 8004316:	21c2      	movs	r1, #194	; 0xc2
 8004318:	f7ff fa3c 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800431c:	aa27      	add	r2, sp, #156	; 0x9c
 800431e:	4638      	mov	r0, r7
 8004320:	ab28      	add	r3, sp, #160	; 0xa0
 8004322:	a926      	add	r1, sp, #152	; 0x98
 8004324:	9600      	str	r6, [sp, #0]
 8004326:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 800432a:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 800432e:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8004332:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8004336:	f011 fde0 	bl	8015efa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800433a:	9b02      	ldr	r3, [sp, #8]
 800433c:	f8c4 32a0 	str.w	r3, [r4, #672]	; 0x2a0
    swipeContainerPadLeft.add(buttonWithIcon_LP1);
 8004340:	4639      	mov	r1, r7
 8004342:	ee18 0a90 	vmov	r0, s17
 8004346:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 800434a:	f00e fab9 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP3.setXY(10, 104);
 800434e:	2268      	movs	r2, #104	; 0x68
 8004350:	ee1d 0a90 	vmov	r0, s27
 8004354:	210a      	movs	r1, #10
 8004356:	f7ff fa1d 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800435a:	f04f 33ff 	mov.w	r3, #4294967295
 800435e:	f8c4 32e4 	str.w	r3, [r4, #740]	; 0x2e4
        boundingArea = calculateBoundingArea();
 8004362:	f8d4 32b4 	ldr.w	r3, [r4, #692]	; 0x2b4
        linespace = space;
 8004366:	f8a4 52e8 	strh.w	r5, [r4, #744]	; 0x2e8
        boundingArea = calculateBoundingArea();
 800436a:	af22      	add	r7, sp, #136	; 0x88
 800436c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004370:	ee1d 1a90 	vmov	r1, s27
 8004374:	4638      	mov	r0, r7
 8004376:	4798      	blx	r3
 8004378:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800437c:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 8004380:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004384:	4b0a      	ldr	r3, [pc, #40]	; (80043b0 <_ZN23Calibration_PadViewBaseC1Ev+0x578>)
 8004386:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_12P5).getText());
 8004388:	f604 59f4 	addw	r9, r4, #3572	; 0xdf4
 800438c:	b92b      	cbnz	r3, 800439a <_ZN23Calibration_PadViewBaseC1Ev+0x562>
 800438e:	4b09      	ldr	r3, [pc, #36]	; (80043b4 <_ZN23Calibration_PadViewBaseC1Ev+0x57c>)
 8004390:	4a09      	ldr	r2, [pc, #36]	; (80043b8 <_ZN23Calibration_PadViewBaseC1Ev+0x580>)
 8004392:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004394:	4809      	ldr	r0, [pc, #36]	; (80043bc <_ZN23Calibration_PadViewBaseC1Ev+0x584>)
 8004396:	f029 fbaf 	bl	802daf8 <__assert_func>
 800439a:	4b09      	ldr	r3, [pc, #36]	; (80043c0 <_ZN23Calibration_PadViewBaseC1Ev+0x588>)
 800439c:	881b      	ldrh	r3, [r3, #0]
 800439e:	2b26      	cmp	r3, #38	; 0x26
 80043a0:	d812      	bhi.n	80043c8 <_ZN23Calibration_PadViewBaseC1Ev+0x590>
 80043a2:	4b08      	ldr	r3, [pc, #32]	; (80043c4 <_ZN23Calibration_PadViewBaseC1Ev+0x58c>)
 80043a4:	4a04      	ldr	r2, [pc, #16]	; (80043b8 <_ZN23Calibration_PadViewBaseC1Ev+0x580>)
 80043a6:	2161      	movs	r1, #97	; 0x61
 80043a8:	e7f4      	b.n	8004394 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>
 80043aa:	bf00      	nop
 80043ac:	00ac00f0 	.word	0x00ac00f0
 80043b0:	200138a4 	.word	0x200138a4
 80043b4:	0802f4e4 	.word	0x0802f4e4
 80043b8:	0802f5e9 	.word	0x0802f5e9
 80043bc:	0802f561 	.word	0x0802f561
 80043c0:	200138a8 	.word	0x200138a8
 80043c4:	0802f5a8 	.word	0x0802f5a8
        return texts->getText(typedTextId);
 80043c8:	4bdb      	ldr	r3, [pc, #876]	; (8004738 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 80043ca:	2126      	movs	r1, #38	; 0x26
 80043cc:	6818      	ldr	r0, [r3, #0]
 80043ce:	f006 f9f3 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 80043d2:	4ada      	ldr	r2, [pc, #872]	; (800473c <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 80043d4:	4603      	mov	r3, r0
 80043d6:	210a      	movs	r1, #10
 80043d8:	4648      	mov	r0, r9
 80043da:	f017 fcf7 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP3.resizeToCurrentText();
 80043de:	ee1d 0a90 	vmov	r0, s27
        wc1 = value;
 80043e2:	f8c4 92fc 	str.w	r9, [r4, #764]	; 0x2fc
 80043e6:	f011 f873 	bl	80154d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80043ea:	4bd5      	ldr	r3, [pc, #852]	; (8004740 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 80043ec:	9329      	str	r3, [sp, #164]	; 0xa4
    textAreaCal_LP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 80043ee:	ee1d 0a90 	vmov	r0, s27
 80043f2:	2327      	movs	r3, #39	; 0x27
 80043f4:	4631      	mov	r1, r6
 80043f6:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80043fa:	f011 f889 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP3);
 80043fe:	ee1d 1a90 	vmov	r1, s27
 8004402:	ee18 0a90 	vmov	r0, s17
 8004406:	f00e fa5b 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP2.setXY(22, 68);
 800440a:	ee1e 0a10 	vmov	r0, s28
 800440e:	2244      	movs	r2, #68	; 0x44
 8004410:	2116      	movs	r1, #22
 8004412:	f7ff f9bf 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8004416:	f8d4 3300 	ldr.w	r3, [r4, #768]	; 0x300
        linespace = space;
 800441a:	f8a4 5334 	strh.w	r5, [r4, #820]	; 0x334
        color = newColor;
 800441e:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8004422:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8004426:	f8c4 2330 	str.w	r2, [r4, #816]	; 0x330
        boundingArea = calculateBoundingArea();
 800442a:	ee1e 1a10 	vmov	r1, s28
 800442e:	4638      	mov	r0, r7
 8004430:	4798      	blx	r3
 8004432:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004436:	f504 734f 	add.w	r3, r4, #828	; 0x33c
 800443a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800443e:	4ac1      	ldr	r2, [pc, #772]	; (8004744 <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
 8004440:	6813      	ldr	r3, [r2, #0]
    Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_01G5).getText());
 8004442:	f604 6908 	addw	r9, r4, #3592	; 0xe08
 8004446:	2b00      	cmp	r3, #0
 8004448:	d0a1      	beq.n	800438e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800444a:	4abf      	ldr	r2, [pc, #764]	; (8004748 <_ZN23Calibration_PadViewBaseC1Ev+0x910>)
 800444c:	8813      	ldrh	r3, [r2, #0]
 800444e:	2b28      	cmp	r3, #40	; 0x28
 8004450:	d9a7      	bls.n	80043a2 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004452:	48b9      	ldr	r0, [pc, #740]	; (8004738 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 8004454:	2128      	movs	r1, #40	; 0x28
 8004456:	6800      	ldr	r0, [r0, #0]
 8004458:	f006 f9ae 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 800445c:	4ab7      	ldr	r2, [pc, #732]	; (800473c <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 800445e:	4603      	mov	r3, r0
 8004460:	210a      	movs	r1, #10
 8004462:	4648      	mov	r0, r9
 8004464:	f017 fcb2 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP2.resizeToCurrentText();
 8004468:	ee1e 0a10 	vmov	r0, s28
 800446c:	f8c4 9348 	str.w	r9, [r4, #840]	; 0x348
 8004470:	f011 f82e 	bl	80154d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004474:	4bb2      	ldr	r3, [pc, #712]	; (8004740 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 8004476:	9329      	str	r3, [sp, #164]	; 0xa4
    textAreaCal_LP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 8004478:	ee1e 0a10 	vmov	r0, s28
 800447c:	2329      	movs	r3, #41	; 0x29
 800447e:	4631      	mov	r1, r6
 8004480:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004484:	f011 f844 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP2);
 8004488:	ee1e 1a10 	vmov	r1, s28
 800448c:	ee18 0a90 	vmov	r0, s17
 8004490:	f00e fa16 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP1.setXY(22, 32);
 8004494:	2220      	movs	r2, #32
 8004496:	ee1e 0a90 	vmov	r0, s29
 800449a:	2116      	movs	r1, #22
 800449c:	f7ff f97a 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 80044a0:	f8d4 334c 	ldr.w	r3, [r4, #844]	; 0x34c
        linespace = space;
 80044a4:	f8a4 5380 	strh.w	r5, [r4, #896]	; 0x380
        color = newColor;
 80044a8:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 80044ac:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80044b0:	f8c4 137c 	str.w	r1, [r4, #892]	; 0x37c
        boundingArea = calculateBoundingArea();
 80044b4:	4638      	mov	r0, r7
 80044b6:	ee1e 1a90 	vmov	r1, s29
 80044ba:	4798      	blx	r3
 80044bc:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80044c0:	f504 7362 	add.w	r3, r4, #904	; 0x388
 80044c4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80044c8:	499e      	ldr	r1, [pc, #632]	; (8004744 <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
 80044ca:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TG06).getText());
 80044cc:	f604 691c 	addw	r9, r4, #3612	; 0xe1c
 80044d0:	2b00      	cmp	r3, #0
 80044d2:	f43f af5c 	beq.w	800438e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80044d6:	4a9c      	ldr	r2, [pc, #624]	; (8004748 <_ZN23Calibration_PadViewBaseC1Ev+0x910>)
 80044d8:	8813      	ldrh	r3, [r2, #0]
 80044da:	2b2a      	cmp	r3, #42	; 0x2a
 80044dc:	f67f af61 	bls.w	80043a2 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80044e0:	4895      	ldr	r0, [pc, #596]	; (8004738 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 80044e2:	212a      	movs	r1, #42	; 0x2a
 80044e4:	6800      	ldr	r0, [r0, #0]
 80044e6:	f006 f967 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 80044ea:	4a94      	ldr	r2, [pc, #592]	; (800473c <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 80044ec:	4603      	mov	r3, r0
 80044ee:	210a      	movs	r1, #10
 80044f0:	4648      	mov	r0, r9
 80044f2:	f017 fc6b 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP1.resizeToCurrentText();
 80044f6:	ee1e 0a90 	vmov	r0, s29
 80044fa:	f8c4 9394 	str.w	r9, [r4, #916]	; 0x394
 80044fe:	f010 ffe7 	bl	80154d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004502:	4b8f      	ldr	r3, [pc, #572]	; (8004740 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 8004504:	9329      	str	r3, [sp, #164]	; 0xa4
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004506:	ee1e 0a90 	vmov	r0, s29
 800450a:	2331      	movs	r3, #49	; 0x31
 800450c:	4631      	mov	r1, r6
 800450e:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
    line1_LP.setPosition(0, 15, 240, 10);
 8004512:	f04f 090a 	mov.w	r9, #10
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004516:	f010 fffb 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP1);
 800451a:	ee1e 1a90 	vmov	r1, s29
 800451e:	ee18 0a90 	vmov	r0, s17
 8004522:	f00e f9cd 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LP.setPosition(0, 15, 240, 10);
 8004526:	23f0      	movs	r3, #240	; 0xf0
 8004528:	ee1a 0a90 	vmov	r0, s21
 800452c:	220f      	movs	r2, #15
 800452e:	4629      	mov	r1, r5
 8004530:	f8cd 9000 	str.w	r9, [sp]
 8004534:	f7ff f93b 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8004538:	f04f 3cff 	mov.w	ip, #4294967295
        canvasPainter = &painter;
 800453c:	991c      	ldr	r1, [sp, #112]	; 0x70
 800453e:	f8c4 c414 	str.w	ip, [r4, #1044]	; 0x414
    line1_LP.setStart(5, 5);
 8004542:	2205      	movs	r2, #5
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8004544:	f8a4 c418 	strh.w	ip, [r4, #1048]	; 0x418
 8004548:	ee1a 0a90 	vmov	r0, s21
 800454c:	f8c4 13c0 	str.w	r1, [r4, #960]	; 0x3c0
 8004550:	4611      	mov	r1, r2
 8004552:	f7ff fc59 	bl	8003e08 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LP.setEnd(235, 5);
 8004556:	2205      	movs	r2, #5
 8004558:	ee1a 0a90 	vmov	r0, s21
 800455c:	21eb      	movs	r1, #235	; 0xeb
 800455e:	f7ff fc57 	bl	8003e10 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LP.setLineWidth(1);
 8004562:	ee1a 0a90 	vmov	r0, s21
 8004566:	4659      	mov	r1, fp
 8004568:	f7ff fc56 	bl	8003e18 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800456c:	ee1a 0a90 	vmov	r0, s21
 8004570:	4659      	mov	r1, fp
 8004572:	f010 fb9d 	bl	8014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadLeft.add(line1_LP);
 8004576:	ee1a 1a90 	vmov	r1, s21
 800457a:	ee18 0a90 	vmov	r0, s17
 800457e:	f00e f99f 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LP.setXY(96, 0);
 8004582:	462a      	mov	r2, r5
 8004584:	9807      	ldr	r0, [sp, #28]
 8004586:	2160      	movs	r1, #96	; 0x60
 8004588:	f7ff f904 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800458c:	f04f 3eff 	mov.w	lr, #4294967295
 8004590:	f8c4 e44c 	str.w	lr, [r4, #1100]	; 0x44c
        boundingArea = calculateBoundingArea();
 8004594:	4638      	mov	r0, r7
 8004596:	9907      	ldr	r1, [sp, #28]
        linespace = space;
 8004598:	f8a4 5450 	strh.w	r5, [r4, #1104]	; 0x450
        boundingArea = calculateBoundingArea();
 800459c:	f010 fd1e 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80045a0:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80045a4:	f504 638b 	add.w	r3, r4, #1112	; 0x458
 80045a8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80045ac:	4b64      	ldr	r3, [pc, #400]	; (8004740 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
    textArea1_LP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q2TU));
 80045ae:	9807      	ldr	r0, [sp, #28]
 80045b0:	9329      	str	r3, [sp, #164]	; 0xa4
 80045b2:	4631      	mov	r1, r6
 80045b4:	2325      	movs	r3, #37	; 0x25
 80045b6:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80045ba:	f010 ffa9 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textArea1_LP);
 80045be:	9907      	ldr	r1, [sp, #28]
 80045c0:	ee18 0a90 	vmov	r0, s17
 80045c4:	f00e f97c 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadLeft);
 80045c8:	ee18 1a90 	vmov	r1, s17
 80045cc:	ee18 0a10 	vmov	r0, s16
 80045d0:	f00e fe59 	bl	8013286 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 80045d4:	4b5d      	ldr	r3, [pc, #372]	; (800474c <_ZN23Calibration_PadViewBaseC1Ev+0x914>)
    buttonWithIcon_RP3.setXY(194, 97);
 80045d6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80045d8:	f8c4 346c 	str.w	r3, [r4, #1132]	; 0x46c
 80045dc:	2261      	movs	r2, #97	; 0x61
 80045de:	21c2      	movs	r1, #194	; 0xc2
 80045e0:	f7ff f8d8 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80045e4:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 80045e8:	4673      	mov	r3, lr
 80045ea:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 80045ee:	4672      	mov	r2, lr
 80045f0:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 80045f4:	4671      	mov	r1, lr
 80045f6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80045f8:	9600      	str	r6, [sp, #0]
 80045fa:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80045fe:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8004602:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8004606:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 800460a:	f011 fc76 	bl	8015efa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800460e:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP3);
 8004610:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004612:	f8c4 74b8 	str.w	r7, [r4, #1208]	; 0x4b8
 8004616:	4650      	mov	r0, sl
 8004618:	f8c4 54c8 	str.w	r5, [r4, #1224]	; 0x4c8
 800461c:	f00e f950 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP2.setXY(194, 61);
 8004620:	9814      	ldr	r0, [sp, #80]	; 0x50
 8004622:	223d      	movs	r2, #61	; 0x3d
 8004624:	21c2      	movs	r1, #194	; 0xc2
 8004626:	f7ff f8b5 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800462a:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 800462e:	4673      	mov	r3, lr
 8004630:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 8004634:	4672      	mov	r2, lr
 8004636:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 800463a:	4671      	mov	r1, lr
 800463c:	9814      	ldr	r0, [sp, #80]	; 0x50
 800463e:	9600      	str	r6, [sp, #0]
 8004640:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8004644:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8004648:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 800464c:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8004650:	f011 fc53 	bl	8015efa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004654:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP2);
 8004656:	9914      	ldr	r1, [sp, #80]	; 0x50
 8004658:	f8c4 74f4 	str.w	r7, [r4, #1268]	; 0x4f4
 800465c:	4650      	mov	r0, sl
 800465e:	f8c4 5504 	str.w	r5, [r4, #1284]	; 0x504
 8004662:	f00e f92d 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP1.setXY(194, 25);
 8004666:	9815      	ldr	r0, [sp, #84]	; 0x54
 8004668:	2219      	movs	r2, #25
 800466a:	21c2      	movs	r1, #194	; 0xc2
 800466c:	f7ff f892 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004670:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 8004674:	4673      	mov	r3, lr
 8004676:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 800467a:	4672      	mov	r2, lr
 800467c:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 8004680:	4671      	mov	r1, lr
 8004682:	9815      	ldr	r0, [sp, #84]	; 0x54
 8004684:	9600      	str	r6, [sp, #0]
 8004686:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 800468a:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 800468e:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8004692:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8004696:	f011 fc30 	bl	8015efa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800469a:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP1);
 800469c:	9915      	ldr	r1, [sp, #84]	; 0x54
 800469e:	f8c4 7530 	str.w	r7, [r4, #1328]	; 0x530
 80046a2:	4650      	mov	r0, sl
 80046a4:	f8c4 5540 	str.w	r5, [r4, #1344]	; 0x540
 80046a8:	f00e f90a 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP3.setXY(10, 104);
 80046ac:	2268      	movs	r2, #104	; 0x68
 80046ae:	4649      	mov	r1, r9
 80046b0:	9808      	ldr	r0, [sp, #32]
 80046b2:	f7ff f86f 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80046b6:	f04f 3eff 	mov.w	lr, #4294967295
 80046ba:	f8c4 e574 	str.w	lr, [r4, #1396]	; 0x574
        linespace = space;
 80046be:	f8a4 5578 	strh.w	r5, [r4, #1400]	; 0x578
        return TextArea::BoundingArea();
 80046c2:	4630      	mov	r0, r6
 80046c4:	f7ff f8ee 	bl	80038a4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80046c8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80046cc:	f504 63b0 	add.w	r3, r4, #1408	; 0x580
 80046d0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80046d4:	491b      	ldr	r1, [pc, #108]	; (8004744 <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
 80046d6:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8T3Q).getText());
 80046d8:	f504 6763 	add.w	r7, r4, #3632	; 0xe30
 80046dc:	2b00      	cmp	r3, #0
 80046de:	f43f ae56 	beq.w	800438e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80046e2:	4a19      	ldr	r2, [pc, #100]	; (8004748 <_ZN23Calibration_PadViewBaseC1Ev+0x910>)
 80046e4:	8813      	ldrh	r3, [r2, #0]
 80046e6:	2b2f      	cmp	r3, #47	; 0x2f
 80046e8:	f67f ae5b 	bls.w	80043a2 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80046ec:	4812      	ldr	r0, [pc, #72]	; (8004738 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 80046ee:	212f      	movs	r1, #47	; 0x2f
 80046f0:	6800      	ldr	r0, [r0, #0]
 80046f2:	f006 f861 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 80046f6:	4a11      	ldr	r2, [pc, #68]	; (800473c <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 80046f8:	4603      	mov	r3, r0
 80046fa:	4649      	mov	r1, r9
 80046fc:	4638      	mov	r0, r7
 80046fe:	f017 fb65 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP3.resizeToCurrentText();
 8004702:	9808      	ldr	r0, [sp, #32]
        wc1 = value;
 8004704:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
 8004708:	f010 fee2 	bl	80154d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800470c:	4f0c      	ldr	r7, [pc, #48]	; (8004740 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
    textAreaCal_RP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH3));
 800470e:	9808      	ldr	r0, [sp, #32]
 8004710:	9729      	str	r7, [sp, #164]	; 0xa4
 8004712:	2330      	movs	r3, #48	; 0x30
 8004714:	4631      	mov	r1, r6
 8004716:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 800471a:	f010 fef9 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP3);
 800471e:	9908      	ldr	r1, [sp, #32]
 8004720:	4650      	mov	r0, sl
 8004722:	f00e f8cd 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP2.setXY(22, 68);
 8004726:	2244      	movs	r2, #68	; 0x44
 8004728:	2116      	movs	r1, #22
 800472a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800472c:	f7ff f832 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004730:	f04f 33ff 	mov.w	r3, #4294967295
 8004734:	e00c      	b.n	8004750 <_ZN23Calibration_PadViewBaseC1Ev+0x918>
 8004736:	bf00      	nop
 8004738:	200138b0 	.word	0x200138b0
 800473c:	0802f621 	.word	0x0802f621
 8004740:	0802f694 	.word	0x0802f694
 8004744:	200138a4 	.word	0x200138a4
 8004748:	200138a8 	.word	0x200138a8
 800474c:	00ac00f0 	.word	0x00ac00f0
 8004750:	f8c4 35c0 	str.w	r3, [r4, #1472]	; 0x5c0
        linespace = space;
 8004754:	f8a4 55c4 	strh.w	r5, [r4, #1476]	; 0x5c4
        return TextArea::BoundingArea();
 8004758:	4630      	mov	r0, r6
 800475a:	f7ff f8a3 	bl	80038a4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 800475e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8004762:	f204 53cc 	addw	r3, r4, #1484	; 0x5cc
 8004766:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800476a:	49da      	ldr	r1, [pc, #872]	; (8004ad4 <_ZN23Calibration_PadViewBaseC1Ev+0xc9c>)
 800476c:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NZZI).getText());
 800476e:	f604 6544 	addw	r5, r4, #3652	; 0xe44
 8004772:	2b00      	cmp	r3, #0
 8004774:	f43f ae0b 	beq.w	800438e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004778:	4ad7      	ldr	r2, [pc, #860]	; (8004ad8 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 800477a:	8813      	ldrh	r3, [r2, #0]
 800477c:	2b2d      	cmp	r3, #45	; 0x2d
 800477e:	f67f ae10 	bls.w	80043a2 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004782:	48d6      	ldr	r0, [pc, #856]	; (8004adc <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004784:	f8df b34c 	ldr.w	fp, [pc, #844]	; 8004ad4 <_ZN23Calibration_PadViewBaseC1Ev+0xc9c>
        return texts->getText(typedTextId);
 8004788:	6800      	ldr	r0, [r0, #0]
 800478a:	212d      	movs	r1, #45	; 0x2d
 800478c:	f006 f814 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8004790:	4ad3      	ldr	r2, [pc, #844]	; (8004ae0 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8004792:	4603      	mov	r3, r0
 8004794:	4649      	mov	r1, r9
 8004796:	4628      	mov	r0, r5
 8004798:	f017 fb18 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP2.resizeToCurrentText();
 800479c:	9809      	ldr	r0, [sp, #36]	; 0x24
        wc1 = value;
 800479e:	f8c4 55d8 	str.w	r5, [r4, #1496]	; 0x5d8
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 80047a2:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RP2.resizeToCurrentText();
 80047a4:	f010 fe94 	bl	80154d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80047a8:	232e      	movs	r3, #46	; 0x2e
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 80047aa:	9809      	ldr	r0, [sp, #36]	; 0x24
 80047ac:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80047b0:	4629      	mov	r1, r5
 80047b2:	9729      	str	r7, [sp, #164]	; 0xa4
 80047b4:	f010 feac 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP2);
 80047b8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80047ba:	4650      	mov	r0, sl
 80047bc:	f00e f880 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80047c0:	f04f 36ff 	mov.w	r6, #4294967295
    textAreaCal_RP1.setXY(22, 32);
 80047c4:	2220      	movs	r2, #32
 80047c6:	2116      	movs	r1, #22
 80047c8:	980a      	ldr	r0, [sp, #40]	; 0x28
 80047ca:	f7fe ffe3 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 80047ce:	f8c4 660c 	str.w	r6, [r4, #1548]	; 0x60c
        linespace = space;
 80047d2:	2600      	movs	r6, #0
 80047d4:	f8a4 6610 	strh.w	r6, [r4, #1552]	; 0x610
        return TextArea::BoundingArea();
 80047d8:	4628      	mov	r0, r5
 80047da:	f7ff f863 	bl	80038a4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80047de:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80047e2:	f504 63c3 	add.w	r3, r4, #1560	; 0x618
 80047e6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80047ea:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XVN8).getText());
 80047ee:	f604 6758 	addw	r7, r4, #3672	; 0xe58
 80047f2:	2b00      	cmp	r3, #0
 80047f4:	f43f adcb 	beq.w	800438e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80047f8:	4ab7      	ldr	r2, [pc, #732]	; (8004ad8 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 80047fa:	8813      	ldrh	r3, [r2, #0]
 80047fc:	2b2c      	cmp	r3, #44	; 0x2c
 80047fe:	f67f add0 	bls.w	80043a2 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004802:	48b6      	ldr	r0, [pc, #728]	; (8004adc <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 8004804:	212c      	movs	r1, #44	; 0x2c
 8004806:	6800      	ldr	r0, [r0, #0]
 8004808:	f005 ffd6 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 800480c:	4ab4      	ldr	r2, [pc, #720]	; (8004ae0 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 800480e:	4603      	mov	r3, r0
 8004810:	4649      	mov	r1, r9
 8004812:	4638      	mov	r0, r7
 8004814:	f017 fada 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP1.resizeToCurrentText();
 8004818:	980a      	ldr	r0, [sp, #40]	; 0x28
        wc1 = value;
 800481a:	f8c4 7624 	str.w	r7, [r4, #1572]	; 0x624
 800481e:	f010 fe57 	bl	80154d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004822:	4fb0      	ldr	r7, [pc, #704]	; (8004ae4 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
    textAreaCal_RP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004824:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004826:	9729      	str	r7, [sp, #164]	; 0xa4
 8004828:	f04f 0e31 	mov.w	lr, #49	; 0x31
 800482c:	4629      	mov	r1, r5
 800482e:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 8004832:	f010 fe6d 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP1);
 8004836:	4650      	mov	r0, sl
 8004838:	990a      	ldr	r1, [sp, #40]	; 0x28
 800483a:	f00e f841 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RP.setPosition(0, 15, 240, 10);
 800483e:	ee1b 0a10 	vmov	r0, s22
 8004842:	23f0      	movs	r3, #240	; 0xf0
 8004844:	220f      	movs	r2, #15
 8004846:	4631      	mov	r1, r6
 8004848:	f8cd 9000 	str.w	r9, [sp]
 800484c:	f7fe ffaf 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8004850:	f04f 33ff 	mov.w	r3, #4294967295
 8004854:	f04f 3cff 	mov.w	ip, #4294967295
    line1_RP.setStart(5, 5);
 8004858:	2205      	movs	r2, #5
 800485a:	f8c4 36a4 	str.w	r3, [r4, #1700]	; 0x6a4
 800485e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8004860:	f8a4 c6a8 	strh.w	ip, [r4, #1704]	; 0x6a8
 8004864:	f8c4 3650 	str.w	r3, [r4, #1616]	; 0x650
 8004868:	4611      	mov	r1, r2
 800486a:	ee1b 0a10 	vmov	r0, s22
 800486e:	f7ff facb 	bl	8003e08 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RP.setEnd(235, 5);
 8004872:	2205      	movs	r2, #5
 8004874:	ee1b 0a10 	vmov	r0, s22
 8004878:	21eb      	movs	r1, #235	; 0xeb
 800487a:	f7ff fac9 	bl	8003e10 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RP.setLineWidth(1);
 800487e:	ee1b 0a10 	vmov	r0, s22
 8004882:	2101      	movs	r1, #1
 8004884:	f7ff fac8 	bl	8003e18 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004888:	ee1b 0a10 	vmov	r0, s22
 800488c:	2101      	movs	r1, #1
 800488e:	f010 fa0f 	bl	8014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadRight.add(line1_RP);
 8004892:	4650      	mov	r0, sl
 8004894:	ee1b 1a10 	vmov	r1, s22
 8004898:	f00e f812 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RP.setXY(92, 0);
 800489c:	4632      	mov	r2, r6
 800489e:	ee1f 0a10 	vmov	r0, s30
 80048a2:	215c      	movs	r1, #92	; 0x5c
 80048a4:	f7fe ff76 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80048a8:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80048ac:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 80048b0:	4660      	mov	r0, ip
 80048b2:	ee1f 1a10 	vmov	r1, s30
        color = newColor;
 80048b6:	f8c4 36dc 	str.w	r3, [r4, #1756]	; 0x6dc
        linespace = space;
 80048ba:	f8a4 66e0 	strh.w	r6, [r4, #1760]	; 0x6e0
        boundingArea = calculateBoundingArea();
 80048be:	f010 fb8d 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80048c2:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 80048c6:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 80048ca:	ee1f 3a10 	vmov	r3, s30
 80048ce:	333c      	adds	r3, #60	; 0x3c
 80048d0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80048d4:	232b      	movs	r3, #43	; 0x2b
    textArea1_RP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L8ZM));
 80048d6:	ee1f 0a10 	vmov	r0, s30
 80048da:	4629      	mov	r1, r5
 80048dc:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80048e0:	9729      	str	r7, [sp, #164]	; 0xa4
 80048e2:	f010 fe15 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textArea1_RP);
 80048e6:	4650      	mov	r0, sl
 80048e8:	ee1f 1a10 	vmov	r1, s30
 80048ec:	f00d ffe8 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadRight);
 80048f0:	4651      	mov	r1, sl
 80048f2:	ee18 0a10 	vmov	r0, s16
 80048f6:	f00e fcc6 	bl	8013286 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 80048fa:	497b      	ldr	r1, [pc, #492]	; (8004ae8 <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
    buttonWithIcon_LH3.setXY(194, 97);
 80048fc:	9816      	ldr	r0, [sp, #88]	; 0x58
 80048fe:	f8c4 16fc 	str.w	r1, [r4, #1788]	; 0x6fc
 8004902:	2261      	movs	r2, #97	; 0x61
 8004904:	21c2      	movs	r1, #194	; 0xc2
 8004906:	f7fe ff45 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800490a:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 800490e:	4663      	mov	r3, ip
 8004910:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 8004914:	4662      	mov	r2, ip
 8004916:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 800491a:	2709      	movs	r7, #9
 800491c:	4661      	mov	r1, ip
 800491e:	f04f 0801 	mov.w	r8, #1
 8004922:	9816      	ldr	r0, [sp, #88]	; 0x58
 8004924:	9500      	str	r5, [sp, #0]
 8004926:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 800492a:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 800492e:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004932:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004936:	f011 fae0 	bl	8015efa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800493a:	9b02      	ldr	r3, [sp, #8]
 800493c:	f8c4 3748 	str.w	r3, [r4, #1864]	; 0x748
    swipeContainerHallLeft.add(buttonWithIcon_LH3);
 8004940:	9916      	ldr	r1, [sp, #88]	; 0x58
 8004942:	f8c4 6758 	str.w	r6, [r4, #1880]	; 0x758
 8004946:	ee19 0a10 	vmov	r0, s18
 800494a:	f00d ffb9 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH2.setXY(194, 61);
 800494e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8004950:	223d      	movs	r2, #61	; 0x3d
 8004952:	21c2      	movs	r1, #194	; 0xc2
 8004954:	f7fe ff1e 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004958:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 800495c:	4663      	mov	r3, ip
 800495e:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 8004962:	4662      	mov	r2, ip
 8004964:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8004968:	4661      	mov	r1, ip
 800496a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800496c:	9500      	str	r5, [sp, #0]
 800496e:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004972:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004976:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 800497a:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 800497e:	f011 fabc 	bl	8015efa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004982:	9b02      	ldr	r3, [sp, #8]
 8004984:	f8c4 3784 	str.w	r3, [r4, #1924]	; 0x784
    swipeContainerHallLeft.add(buttonWithIcon_LH2);
 8004988:	9917      	ldr	r1, [sp, #92]	; 0x5c
 800498a:	f8c4 6794 	str.w	r6, [r4, #1940]	; 0x794
 800498e:	ee19 0a10 	vmov	r0, s18
 8004992:	f00d ff95 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH1.setXY(194, 25);
 8004996:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004998:	2219      	movs	r2, #25
 800499a:	21c2      	movs	r1, #194	; 0xc2
 800499c:	f7fe fefa 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80049a0:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 80049a4:	4663      	mov	r3, ip
 80049a6:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 80049aa:	4662      	mov	r2, ip
 80049ac:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 80049b0:	4661      	mov	r1, ip
 80049b2:	9818      	ldr	r0, [sp, #96]	; 0x60
 80049b4:	9500      	str	r5, [sp, #0]
 80049b6:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 80049ba:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 80049be:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 80049c2:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 80049c6:	f011 fa98 	bl	8015efa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80049ca:	9b02      	ldr	r3, [sp, #8]
 80049cc:	f8c4 37c0 	str.w	r3, [r4, #1984]	; 0x7c0
    swipeContainerHallLeft.add(buttonWithIcon_LH1);
 80049d0:	9918      	ldr	r1, [sp, #96]	; 0x60
 80049d2:	f8c4 67d0 	str.w	r6, [r4, #2000]	; 0x7d0
 80049d6:	ee19 0a10 	vmov	r0, s18
 80049da:	f00d ff71 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH3.setXY(10, 104);
 80049de:	2268      	movs	r2, #104	; 0x68
 80049e0:	4649      	mov	r1, r9
 80049e2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80049e4:	f7fe fed6 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80049e8:	f04f 3cff 	mov.w	ip, #4294967295
 80049ec:	f8c4 c804 	str.w	ip, [r4, #2052]	; 0x804
        linespace = space;
 80049f0:	f8a4 6808 	strh.w	r6, [r4, #2056]	; 0x808
        return TextArea::BoundingArea();
 80049f4:	4628      	mov	r0, r5
 80049f6:	f7fe ff55 	bl	80038a4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80049fa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80049fe:	f504 6301 	add.w	r3, r4, #2064	; 0x810
 8004a02:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004a06:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4NSV).getText());
 8004a0a:	f604 6a6c 	addw	sl, r4, #3692	; 0xe6c
 8004a0e:	2b00      	cmp	r3, #0
 8004a10:	f43f acbd 	beq.w	800438e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004a14:	4a30      	ldr	r2, [pc, #192]	; (8004ad8 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 8004a16:	8813      	ldrh	r3, [r2, #0]
 8004a18:	2b24      	cmp	r3, #36	; 0x24
 8004a1a:	f67f acc2 	bls.w	80043a2 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004a1e:	482f      	ldr	r0, [pc, #188]	; (8004adc <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 8004a20:	2124      	movs	r1, #36	; 0x24
 8004a22:	6800      	ldr	r0, [r0, #0]
 8004a24:	f005 fec8 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8004a28:	4a2d      	ldr	r2, [pc, #180]	; (8004ae0 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8004a2a:	4603      	mov	r3, r0
 8004a2c:	4649      	mov	r1, r9
 8004a2e:	4650      	mov	r0, sl
 8004a30:	f017 f9cc 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH3.resizeToCurrentText();
 8004a34:	980b      	ldr	r0, [sp, #44]	; 0x2c
        wc1 = value;
 8004a36:	f8c4 a81c 	str.w	sl, [r4, #2076]	; 0x81c
 8004a3a:	f010 fd49 	bl	80154d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004a3e:	4b29      	ldr	r3, [pc, #164]	; (8004ae4 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
    textAreaCal_LH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004a40:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004a42:	9329      	str	r3, [sp, #164]	; 0xa4
 8004a44:	4629      	mov	r1, r5
 8004a46:	2327      	movs	r3, #39	; 0x27
 8004a48:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004a4c:	f010 fd60 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH3);
 8004a50:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004a52:	ee19 0a10 	vmov	r0, s18
 8004a56:	f00d ff33 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH2.setXY(22, 68);
 8004a5a:	2244      	movs	r2, #68	; 0x44
 8004a5c:	2116      	movs	r1, #22
 8004a5e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004a60:	f7fe fe98 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004a64:	f04f 3cff 	mov.w	ip, #4294967295
 8004a68:	f8c4 c850 	str.w	ip, [r4, #2128]	; 0x850
        linespace = space;
 8004a6c:	f8a4 6854 	strh.w	r6, [r4, #2132]	; 0x854
        return TextArea::BoundingArea();
 8004a70:	4628      	mov	r0, r5
 8004a72:	f7fe ff17 	bl	80038a4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004a76:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004a7a:	f604 035c 	addw	r3, r4, #2140	; 0x85c
 8004a7e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004a82:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_M8NH).getText());
 8004a86:	f504 6a68 	add.w	sl, r4, #3712	; 0xe80
 8004a8a:	2b00      	cmp	r3, #0
 8004a8c:	f43f ac7f 	beq.w	800438e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004a90:	4a11      	ldr	r2, [pc, #68]	; (8004ad8 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 8004a92:	8813      	ldrh	r3, [r2, #0]
 8004a94:	2b23      	cmp	r3, #35	; 0x23
 8004a96:	f67f ac84 	bls.w	80043a2 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004a9a:	4810      	ldr	r0, [pc, #64]	; (8004adc <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 8004a9c:	2123      	movs	r1, #35	; 0x23
 8004a9e:	6800      	ldr	r0, [r0, #0]
 8004aa0:	f005 fe8a 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8004aa4:	4a0e      	ldr	r2, [pc, #56]	; (8004ae0 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8004aa6:	4603      	mov	r3, r0
 8004aa8:	4649      	mov	r1, r9
 8004aaa:	4650      	mov	r0, sl
 8004aac:	f017 f98e 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH2.resizeToCurrentText();
 8004ab0:	980c      	ldr	r0, [sp, #48]	; 0x30
        wc1 = value;
 8004ab2:	f8c4 a868 	str.w	sl, [r4, #2152]	; 0x868
 8004ab6:	f010 fd0b 	bl	80154d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004aba:	4b0a      	ldr	r3, [pc, #40]	; (8004ae4 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
    textAreaCal_LH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 8004abc:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004abe:	9329      	str	r3, [sp, #164]	; 0xa4
 8004ac0:	4629      	mov	r1, r5
 8004ac2:	2329      	movs	r3, #41	; 0x29
 8004ac4:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004ac8:	f010 fd22 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH2);
 8004acc:	990c      	ldr	r1, [sp, #48]	; 0x30
 8004ace:	ee19 0a10 	vmov	r0, s18
 8004ad2:	e00b      	b.n	8004aec <_ZN23Calibration_PadViewBaseC1Ev+0xcb4>
 8004ad4:	200138a4 	.word	0x200138a4
 8004ad8:	200138a8 	.word	0x200138a8
 8004adc:	200138b0 	.word	0x200138b0
 8004ae0:	0802f621 	.word	0x0802f621
 8004ae4:	0802f694 	.word	0x0802f694
 8004ae8:	00ac00f0 	.word	0x00ac00f0
 8004aec:	f00d fee8 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH1.setXY(22, 32);
 8004af0:	2220      	movs	r2, #32
 8004af2:	2116      	movs	r1, #22
 8004af4:	980d      	ldr	r0, [sp, #52]	; 0x34
 8004af6:	f7fe fe4d 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004afa:	f04f 3cff 	mov.w	ip, #4294967295
 8004afe:	f8c4 c89c 	str.w	ip, [r4, #2204]	; 0x89c
        linespace = space;
 8004b02:	f8a4 68a0 	strh.w	r6, [r4, #2208]	; 0x8a0
        return TextArea::BoundingArea();
 8004b06:	4628      	mov	r0, r5
 8004b08:	f7fe fecc 	bl	80038a4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004b0c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004b10:	f604 03a8 	addw	r3, r4, #2216	; 0x8a8
 8004b14:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004b18:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I3S7).getText());
 8004b1c:	f604 6a94 	addw	sl, r4, #3732	; 0xe94
 8004b20:	2b00      	cmp	r3, #0
 8004b22:	f43f ac34 	beq.w	800438e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004b26:	4ada      	ldr	r2, [pc, #872]	; (8004e90 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004b28:	8813      	ldrh	r3, [r2, #0]
 8004b2a:	2b22      	cmp	r3, #34	; 0x22
 8004b2c:	f67f ac39 	bls.w	80043a2 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004b30:	48d8      	ldr	r0, [pc, #864]	; (8004e94 <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 8004b32:	2122      	movs	r1, #34	; 0x22
 8004b34:	6800      	ldr	r0, [r0, #0]
 8004b36:	f005 fe3f 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8004b3a:	4ad7      	ldr	r2, [pc, #860]	; (8004e98 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004b3c:	4603      	mov	r3, r0
 8004b3e:	4649      	mov	r1, r9
 8004b40:	4650      	mov	r0, sl
 8004b42:	f017 f943 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH1.resizeToCurrentText();
 8004b46:	980d      	ldr	r0, [sp, #52]	; 0x34
        wc1 = value;
 8004b48:	f8c4 a8b4 	str.w	sl, [r4, #2228]	; 0x8b4
 8004b4c:	f010 fcc0 	bl	80154d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004b50:	f04f 0e31 	mov.w	lr, #49	; 0x31
 8004b54:	4bd1      	ldr	r3, [pc, #836]	; (8004e9c <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
    textAreaCal_LH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004b56:	980d      	ldr	r0, [sp, #52]	; 0x34
 8004b58:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 8004b5c:	4629      	mov	r1, r5
 8004b5e:	9329      	str	r3, [sp, #164]	; 0xa4
 8004b60:	f010 fcd6 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH1);
 8004b64:	990d      	ldr	r1, [sp, #52]	; 0x34
 8004b66:	ee19 0a10 	vmov	r0, s18
 8004b6a:	f00d fea9 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LH.setPosition(0, 15, 240, 10);
 8004b6e:	ee1b 0a90 	vmov	r0, s23
 8004b72:	23f0      	movs	r3, #240	; 0xf0
 8004b74:	220f      	movs	r2, #15
 8004b76:	4631      	mov	r1, r6
 8004b78:	f8cd 9000 	str.w	r9, [sp]
 8004b7c:	f7fe fe17 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8004b80:	f04f 30ff 	mov.w	r0, #4294967295
 8004b84:	f64f 73ff 	movw	r3, #65535	; 0xffff
    line1_LH.setStart(5, 5);
 8004b88:	2205      	movs	r2, #5
 8004b8a:	f8c4 0934 	str.w	r0, [r4, #2356]	; 0x934
 8004b8e:	981e      	ldr	r0, [sp, #120]	; 0x78
 8004b90:	f8a4 3938 	strh.w	r3, [r4, #2360]	; 0x938
 8004b94:	4611      	mov	r1, r2
 8004b96:	f8c4 08e0 	str.w	r0, [r4, #2272]	; 0x8e0
 8004b9a:	ee1b 0a90 	vmov	r0, s23
 8004b9e:	f7ff f933 	bl	8003e08 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LH.setEnd(235, 5);
 8004ba2:	2205      	movs	r2, #5
 8004ba4:	ee1b 0a90 	vmov	r0, s23
 8004ba8:	21eb      	movs	r1, #235	; 0xeb
 8004baa:	f7ff f931 	bl	8003e10 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LH.setLineWidth(1);
 8004bae:	ee1b 0a90 	vmov	r0, s23
 8004bb2:	4641      	mov	r1, r8
 8004bb4:	f7ff f930 	bl	8003e18 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LH.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004bb8:	ee1b 0a90 	vmov	r0, s23
 8004bbc:	4641      	mov	r1, r8
 8004bbe:	f010 f877 	bl	8014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallLeft.add(line1_LH);
 8004bc2:	ee1b 1a90 	vmov	r1, s23
 8004bc6:	ee19 0a10 	vmov	r0, s18
 8004bca:	f00d fe79 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LH.setXY(73, 0);
 8004bce:	4632      	mov	r2, r6
 8004bd0:	ee1f 0a90 	vmov	r0, s31
 8004bd4:	2149      	movs	r1, #73	; 0x49
 8004bd6:	f7fe fddd 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004bda:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8004bde:	ee1f 1a90 	vmov	r1, s31
        color = newColor;
 8004be2:	f8c4 096c 	str.w	r0, [r4, #2412]	; 0x96c
        linespace = space;
 8004be6:	f8a4 6970 	strh.w	r6, [r4, #2416]	; 0x970
        boundingArea = calculateBoundingArea();
 8004bea:	a822      	add	r0, sp, #136	; 0x88
 8004bec:	f010 f9f6 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004bf0:	ee1f 0a90 	vmov	r0, s31
 8004bf4:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 8004bf8:	a822      	add	r0, sp, #136	; 0x88
 8004bfa:	c807      	ldmia	r0, {r0, r1, r2}
 8004bfc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004c00:	4ba6      	ldr	r3, [pc, #664]	; (8004e9c <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 8004c02:	9329      	str	r3, [sp, #164]	; 0xa4
    textArea1_LH.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F9FQ));
 8004c04:	4629      	mov	r1, r5
 8004c06:	2321      	movs	r3, #33	; 0x21
 8004c08:	ee1f 0a90 	vmov	r0, s31
 8004c0c:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004c10:	f010 fc7e 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textArea1_LH);
 8004c14:	ee1f 1a90 	vmov	r1, s31
 8004c18:	ee19 0a10 	vmov	r0, s18
 8004c1c:	f00d fe50 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallLeft);
 8004c20:	ee19 1a10 	vmov	r1, s18
 8004c24:	ee18 0a10 	vmov	r0, s16
 8004c28:	f00e fb2d 	bl	8013286 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8004c2c:	499c      	ldr	r1, [pc, #624]	; (8004ea0 <_ZN23Calibration_PadViewBaseC1Ev+0x1068>)
    buttonWithIcon_RH3.setXY(194, 97);
 8004c2e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8004c30:	f8c4 198c 	str.w	r1, [r4, #2444]	; 0x98c
 8004c34:	2261      	movs	r2, #97	; 0x61
 8004c36:	21c2      	movs	r1, #194	; 0xc2
 8004c38:	f7fe fdac 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004c3c:	a927      	add	r1, sp, #156	; 0x9c
 8004c3e:	460a      	mov	r2, r1
 8004c40:	9819      	ldr	r0, [sp, #100]	; 0x64
 8004c42:	9500      	str	r5, [sp, #0]
 8004c44:	ab28      	add	r3, sp, #160	; 0xa0
 8004c46:	a926      	add	r1, sp, #152	; 0x98
 8004c48:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004c4c:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004c50:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004c54:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004c58:	f011 f94f 	bl	8015efa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004c5c:	9b02      	ldr	r3, [sp, #8]
 8004c5e:	f8c4 39d8 	str.w	r3, [r4, #2520]	; 0x9d8
    swipeContainerHallRight.add(buttonWithIcon_RH3);
 8004c62:	9919      	ldr	r1, [sp, #100]	; 0x64
 8004c64:	f8c4 69e8 	str.w	r6, [r4, #2536]	; 0x9e8
 8004c68:	ee19 0a90 	vmov	r0, s19
 8004c6c:	f00d fe28 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH2.setXY(194, 61);
 8004c70:	981a      	ldr	r0, [sp, #104]	; 0x68
 8004c72:	223d      	movs	r2, #61	; 0x3d
 8004c74:	21c2      	movs	r1, #194	; 0xc2
 8004c76:	f7fe fd8d 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004c7a:	a927      	add	r1, sp, #156	; 0x9c
 8004c7c:	460a      	mov	r2, r1
 8004c7e:	981a      	ldr	r0, [sp, #104]	; 0x68
 8004c80:	9500      	str	r5, [sp, #0]
 8004c82:	ab28      	add	r3, sp, #160	; 0xa0
 8004c84:	a926      	add	r1, sp, #152	; 0x98
 8004c86:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004c8a:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004c8e:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004c92:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004c96:	f011 f930 	bl	8015efa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004c9a:	9b02      	ldr	r3, [sp, #8]
 8004c9c:	f8c4 3a14 	str.w	r3, [r4, #2580]	; 0xa14
    swipeContainerHallRight.add(buttonWithIcon_RH2);
 8004ca0:	991a      	ldr	r1, [sp, #104]	; 0x68
 8004ca2:	f8c4 6a24 	str.w	r6, [r4, #2596]	; 0xa24
 8004ca6:	ee19 0a90 	vmov	r0, s19
 8004caa:	f00d fe09 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH1.setXY(194, 25);
 8004cae:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8004cb0:	2219      	movs	r2, #25
 8004cb2:	21c2      	movs	r1, #194	; 0xc2
 8004cb4:	f7fe fd6e 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004cb8:	a927      	add	r1, sp, #156	; 0x9c
 8004cba:	460a      	mov	r2, r1
 8004cbc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8004cbe:	9500      	str	r5, [sp, #0]
 8004cc0:	ab28      	add	r3, sp, #160	; 0xa0
 8004cc2:	a926      	add	r1, sp, #152	; 0x98
 8004cc4:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004cc8:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004ccc:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004cd0:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004cd4:	f011 f911 	bl	8015efa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004cd8:	9b02      	ldr	r3, [sp, #8]
 8004cda:	f8c4 3a50 	str.w	r3, [r4, #2640]	; 0xa50
    swipeContainerHallRight.add(buttonWithIcon_RH1);
 8004cde:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8004ce0:	f8c4 6a60 	str.w	r6, [r4, #2656]	; 0xa60
 8004ce4:	ee19 0a90 	vmov	r0, s19
 8004ce8:	f00d fdea 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH3.setXY(10, 104);
 8004cec:	2268      	movs	r2, #104	; 0x68
 8004cee:	4649      	mov	r1, r9
 8004cf0:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004cf2:	f7fe fd4f 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004cf6:	f04f 33ff 	mov.w	r3, #4294967295
 8004cfa:	f8c4 3a94 	str.w	r3, [r4, #2708]	; 0xa94
        return TextArea::BoundingArea();
 8004cfe:	4628      	mov	r0, r5
        linespace = space;
 8004d00:	f8a4 6a98 	strh.w	r6, [r4, #2712]	; 0xa98
 8004d04:	f7fe fdce 	bl	80038a4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004d08:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004d0c:	f504 632a 	add.w	r3, r4, #2720	; 0xaa0
 8004d10:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004d14:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4PQQ).getText());
 8004d18:	f604 65a8 	addw	r5, r4, #3752	; 0xea8
 8004d1c:	2b00      	cmp	r3, #0
 8004d1e:	f43f ab36 	beq.w	800438e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004d22:	4a5b      	ldr	r2, [pc, #364]	; (8004e90 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004d24:	8813      	ldrh	r3, [r2, #0]
 8004d26:	2b20      	cmp	r3, #32
 8004d28:	f67f ab3b 	bls.w	80043a2 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004d2c:	f8df 8164 	ldr.w	r8, [pc, #356]	; 8004e94 <_ZN23Calibration_PadViewBaseC1Ev+0x105c>
        : typedTextId(id)
 8004d30:	f8df a168 	ldr.w	sl, [pc, #360]	; 8004e9c <_ZN23Calibration_PadViewBaseC1Ev+0x1064>
        return texts->getText(typedTextId);
 8004d34:	f8d8 0000 	ldr.w	r0, [r8]
 8004d38:	2120      	movs	r1, #32
 8004d3a:	f005 fd3d 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8004d3e:	4a56      	ldr	r2, [pc, #344]	; (8004e98 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004d40:	4603      	mov	r3, r0
 8004d42:	4649      	mov	r1, r9
 8004d44:	4628      	mov	r0, r5
 8004d46:	f017 f841 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH3.resizeToCurrentText();
 8004d4a:	980e      	ldr	r0, [sp, #56]	; 0x38
        wc1 = value;
 8004d4c:	f8c4 5aac 	str.w	r5, [r4, #2732]	; 0xaac
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004d50:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RH3.resizeToCurrentText();
 8004d52:	f010 fbbd 	bl	80154d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004d56:	2327      	movs	r3, #39	; 0x27
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004d58:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004d5a:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004d5e:	4629      	mov	r1, r5
 8004d60:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004d64:	f010 fbd4 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH3);
 8004d68:	990e      	ldr	r1, [sp, #56]	; 0x38
 8004d6a:	ee19 0a90 	vmov	r0, s19
 8004d6e:	f00d fda7 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8004d72:	f04f 37ff 	mov.w	r7, #4294967295
    textAreaCal_RH2.setXY(22, 68);
 8004d76:	2244      	movs	r2, #68	; 0x44
 8004d78:	2116      	movs	r1, #22
 8004d7a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004d7c:	f7fe fd0a 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8004d80:	f8c4 7ae0 	str.w	r7, [r4, #2784]	; 0xae0
        linespace = space;
 8004d84:	f8a4 6ae4 	strh.w	r6, [r4, #2788]	; 0xae4
        return TextArea::BoundingArea();
 8004d88:	4628      	mov	r0, r5
 8004d8a:	f7fe fd8b 	bl	80038a4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004d8e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004d92:	f604 23ec 	addw	r3, r4, #2796	; 0xaec
 8004d96:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004d9a:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YVQL).getText());
 8004d9e:	f604 69bc 	addw	r9, r4, #3772	; 0xebc
 8004da2:	2b00      	cmp	r3, #0
 8004da4:	f43f aaf3 	beq.w	800438e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004da8:	4a39      	ldr	r2, [pc, #228]	; (8004e90 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004daa:	8813      	ldrh	r3, [r2, #0]
 8004dac:	2b1f      	cmp	r3, #31
 8004dae:	f67f aaf8 	bls.w	80043a2 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004db2:	211f      	movs	r1, #31
 8004db4:	f8d8 0000 	ldr.w	r0, [r8]
 8004db8:	f005 fcfe 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8004dbc:	4a36      	ldr	r2, [pc, #216]	; (8004e98 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004dbe:	4603      	mov	r3, r0
 8004dc0:	210a      	movs	r1, #10
 8004dc2:	4648      	mov	r0, r9
 8004dc4:	f017 f802 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH2.resizeToCurrentText();
 8004dc8:	980f      	ldr	r0, [sp, #60]	; 0x3c
        wc1 = value;
 8004dca:	f8c4 9af8 	str.w	r9, [r4, #2808]	; 0xaf8
 8004dce:	f010 fb7f 	bl	80154d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004dd2:	2329      	movs	r3, #41	; 0x29
    textAreaCal_RH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 8004dd4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004dd6:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004dda:	4629      	mov	r1, r5
 8004ddc:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004de0:	f010 fb96 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH2);
 8004de4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004de6:	ee19 0a90 	vmov	r0, s19
 8004dea:	f00d fd69 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH1.setXY(22, 32);
 8004dee:	2220      	movs	r2, #32
 8004df0:	2116      	movs	r1, #22
 8004df2:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004df4:	f7fe fcce 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004df8:	f8c4 7b2c 	str.w	r7, [r4, #2860]	; 0xb2c
        linespace = space;
 8004dfc:	f8a4 6b30 	strh.w	r6, [r4, #2864]	; 0xb30
        return TextArea::BoundingArea();
 8004e00:	4628      	mov	r0, r5
 8004e02:	f7fe fd4f 	bl	80038a4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004e06:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004e0a:	f604 3338 	addw	r3, r4, #2872	; 0xb38
 8004e0e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004e12:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TIGW).getText());
 8004e16:	f504 696d 	add.w	r9, r4, #3792	; 0xed0
 8004e1a:	2b00      	cmp	r3, #0
 8004e1c:	f43f aab7 	beq.w	800438e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004e20:	4a1b      	ldr	r2, [pc, #108]	; (8004e90 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004e22:	8813      	ldrh	r3, [r2, #0]
 8004e24:	2b1e      	cmp	r3, #30
 8004e26:	f67f aabc 	bls.w	80043a2 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004e2a:	f8d8 0000 	ldr.w	r0, [r8]
 8004e2e:	211e      	movs	r1, #30
 8004e30:	f005 fcc2 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8004e34:	4a18      	ldr	r2, [pc, #96]	; (8004e98 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004e36:	4603      	mov	r3, r0
 8004e38:	210a      	movs	r1, #10
 8004e3a:	4648      	mov	r0, r9
 8004e3c:	f016 ffc6 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH1.resizeToCurrentText();
 8004e40:	9810      	ldr	r0, [sp, #64]	; 0x40
        wc1 = value;
 8004e42:	f8c4 9b44 	str.w	r9, [r4, #2884]	; 0xb44
 8004e46:	f010 fb43 	bl	80154d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004e4a:	2331      	movs	r3, #49	; 0x31
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004e4c:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004e4e:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004e52:	4629      	mov	r1, r5
    line1_RH_1.setPosition(0, 15, 240, 10);
 8004e54:	f04f 090a 	mov.w	r9, #10
 8004e58:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004e5c:	f010 fb58 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH1);
 8004e60:	9910      	ldr	r1, [sp, #64]	; 0x40
 8004e62:	ee19 0a90 	vmov	r0, s19
 8004e66:	f00d fd2b 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RH_1.setPosition(0, 15, 240, 10);
 8004e6a:	ee1c 0a10 	vmov	r0, s24
 8004e6e:	4631      	mov	r1, r6
 8004e70:	f8cd 9000 	str.w	r9, [sp]
 8004e74:	23f0      	movs	r3, #240	; 0xf0
 8004e76:	220f      	movs	r2, #15
 8004e78:	f7fe fc99 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8004e7c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8004e7e:	f8c4 3b70 	str.w	r3, [r4, #2928]	; 0xb70
    line1_RH_1.setStart(5, 5);
 8004e82:	2205      	movs	r2, #5
 8004e84:	ee1c 0a10 	vmov	r0, s24
 8004e88:	4611      	mov	r1, r2
 8004e8a:	f8c4 7bc4 	str.w	r7, [r4, #3012]	; 0xbc4
 8004e8e:	e009      	b.n	8004ea4 <_ZN23Calibration_PadViewBaseC1Ev+0x106c>
 8004e90:	200138a8 	.word	0x200138a8
 8004e94:	200138b0 	.word	0x200138b0
 8004e98:	0802f621 	.word	0x0802f621
 8004e9c:	0802f694 	.word	0x0802f694
 8004ea0:	00ac00f0 	.word	0x00ac00f0
 8004ea4:	f8a4 7bc8 	strh.w	r7, [r4, #3016]	; 0xbc8
 8004ea8:	f7fe ffae 	bl	8003e08 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RH_1.setEnd(235, 5);
 8004eac:	2205      	movs	r2, #5
 8004eae:	ee1c 0a10 	vmov	r0, s24
 8004eb2:	21eb      	movs	r1, #235	; 0xeb
 8004eb4:	f7fe ffac 	bl	8003e10 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RH_1.setLineWidth(1);
 8004eb8:	ee1c 0a10 	vmov	r0, s24
 8004ebc:	2101      	movs	r1, #1
 8004ebe:	f7fe ffab 	bl	8003e18 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RH_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004ec2:	ee1c 0a10 	vmov	r0, s24
 8004ec6:	2101      	movs	r1, #1
 8004ec8:	f00f fef2 	bl	8014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallRight.add(line1_RH_1);
 8004ecc:	ee1c 1a10 	vmov	r1, s24
 8004ed0:	ee19 0a90 	vmov	r0, s19
 8004ed4:	f10d 0888 	add.w	r8, sp, #136	; 0x88
 8004ed8:	f00d fcf2 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RH_1.setXY(73, 0);
 8004edc:	4632      	mov	r2, r6
 8004ede:	9803      	ldr	r0, [sp, #12]
 8004ee0:	2149      	movs	r1, #73	; 0x49
 8004ee2:	f7fe fc57 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8004ee6:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 8004ee8:	f8c4 7bfc 	str.w	r7, [r4, #3068]	; 0xbfc
        boundingArea = calculateBoundingArea();
 8004eec:	4640      	mov	r0, r8
        linespace = space;
 8004eee:	f8a4 6c00 	strh.w	r6, [r4, #3072]	; 0xc00
        boundingArea = calculateBoundingArea();
 8004ef2:	f010 f873 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004ef6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004efa:	9b03      	ldr	r3, [sp, #12]
 8004efc:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004f00:	333c      	adds	r3, #60	; 0x3c
 8004f02:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004f06:	231d      	movs	r3, #29
    textArea1_RH_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IZSY));
 8004f08:	9803      	ldr	r0, [sp, #12]
 8004f0a:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004f0e:	4629      	mov	r1, r5
 8004f10:	f010 fafe 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textArea1_RH_1);
 8004f14:	9903      	ldr	r1, [sp, #12]
 8004f16:	ee19 0a90 	vmov	r0, s19
 8004f1a:	f00d fcd1 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallRight);
 8004f1e:	ee19 1a90 	vmov	r1, s19
 8004f22:	ee18 0a10 	vmov	r0, s16
 8004f26:	f00e f9ae 	bl	8013286 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
    swipeContainer1.setSelectedPage(0);
 8004f2a:	ee18 0a10 	vmov	r0, s16
 8004f2e:	4631      	mov	r1, r6
 8004f30:	f00e f99a 	bl	8013268 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 8004f34:	ee18 1a10 	vmov	r1, s16
 8004f38:	ee1a 0a10 	vmov	r0, s20
 8004f3c:	f00d fcc0 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(0, 75, 240, 10);
 8004f40:	ee1c 0a90 	vmov	r0, s25
 8004f44:	4631      	mov	r1, r6
 8004f46:	f8cd 9000 	str.w	r9, [sp]
 8004f4a:	23f0      	movs	r3, #240	; 0xf0
 8004f4c:	224b      	movs	r2, #75	; 0x4b
 8004f4e:	f7fe fc2e 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8004f52:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004f56:	f8a4 3c94 	strh.w	r3, [r4, #3220]	; 0xc94
    line1_1.setStart(5, 5);
 8004f5a:	2205      	movs	r2, #5
 8004f5c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004f5e:	f8c4 3c3c 	str.w	r3, [r4, #3132]	; 0xc3c
 8004f62:	ee1c 0a90 	vmov	r0, s25
 8004f66:	4611      	mov	r1, r2
 8004f68:	f8c4 7c90 	str.w	r7, [r4, #3216]	; 0xc90
 8004f6c:	f7fe ff4c 	bl	8003e08 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1.setEnd(235, 5);
 8004f70:	2205      	movs	r2, #5
 8004f72:	ee1c 0a90 	vmov	r0, s25
 8004f76:	21eb      	movs	r1, #235	; 0xeb
 8004f78:	f7fe ff4a 	bl	8003e10 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1.setLineWidth(1);
 8004f7c:	ee1c 0a90 	vmov	r0, s25
 8004f80:	2101      	movs	r1, #1
 8004f82:	f7fe ff49 	bl	8003e18 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004f86:	ee1c 0a90 	vmov	r0, s25
 8004f8a:	2101      	movs	r1, #1
 8004f8c:	f00f fe90 	bl	8014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8004f90:	ee1c 1a90 	vmov	r1, s25
 8004f94:	ee1a 0a10 	vmov	r0, s20
 8004f98:	f00d fc92 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(70, 60);
 8004f9c:	9804      	ldr	r0, [sp, #16]
 8004f9e:	223c      	movs	r2, #60	; 0x3c
 8004fa0:	2146      	movs	r1, #70	; 0x46
 8004fa2:	f7fe fbf7 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8004fa6:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 8004fa8:	f8c4 7cc8 	str.w	r7, [r4, #3272]	; 0xcc8
        boundingArea = calculateBoundingArea();
 8004fac:	4640      	mov	r0, r8
        linespace = space;
 8004fae:	f8a4 6ccc 	strh.w	r6, [r4, #3276]	; 0xccc
        boundingArea = calculateBoundingArea();
 8004fb2:	f010 f813 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004fb6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004fba:	9b04      	ldr	r3, [sp, #16]
 8004fbc:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004fc0:	333c      	adds	r3, #60	; 0x3c
 8004fc2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004fc6:	233a      	movs	r3, #58	; 0x3a
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8004fc8:	9804      	ldr	r0, [sp, #16]
 8004fca:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004fce:	4629      	mov	r1, r5
 8004fd0:	f010 fa9e 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004fd4:	9904      	ldr	r1, [sp, #16]
 8004fd6:	ee1a 0a10 	vmov	r0, s20
 8004fda:	f00d fc71 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8004fde:	ee1d 0a10 	vmov	r0, s26
 8004fe2:	4631      	mov	r1, r6
 8004fe4:	f8cd 9000 	str.w	r9, [sp]
 8004fe8:	23f0      	movs	r3, #240	; 0xf0
 8004fea:	2232      	movs	r2, #50	; 0x32
 8004fec:	f7fe fbdf 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8004ff0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004ff2:	f8c4 3d08 	str.w	r3, [r4, #3336]	; 0xd08
    line1.setStart(5, 5);
 8004ff6:	2205      	movs	r2, #5
 8004ff8:	ee1d 0a10 	vmov	r0, s26
 8004ffc:	4611      	mov	r1, r2
 8004ffe:	f8c4 7d5c 	str.w	r7, [r4, #3420]	; 0xd5c
 8005002:	f8a4 7d60 	strh.w	r7, [r4, #3424]	; 0xd60
 8005006:	f7fe feff 	bl	8003e08 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1.setEnd(235, 5);
 800500a:	2205      	movs	r2, #5
 800500c:	ee1d 0a10 	vmov	r0, s26
 8005010:	21eb      	movs	r1, #235	; 0xeb
 8005012:	f7fe fefd 	bl	8003e10 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1.setLineWidth(1);
 8005016:	ee1d 0a10 	vmov	r0, s26
 800501a:	2101      	movs	r1, #1
 800501c:	f7fe fefc 	bl	8003e18 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005020:	ee1d 0a10 	vmov	r0, s26
 8005024:	2101      	movs	r1, #1
 8005026:	f00f fe43 	bl	8014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800502a:	ee1d 1a10 	vmov	r1, s26
 800502e:	ee1a 0a10 	vmov	r0, s20
 8005032:	f00d fc45 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8005036:	9805      	ldr	r0, [sp, #20]
 8005038:	2223      	movs	r2, #35	; 0x23
 800503a:	2145      	movs	r1, #69	; 0x45
 800503c:	f7fe fbaa 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8005040:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8005042:	f8c4 7d94 	str.w	r7, [r4, #3476]	; 0xd94
        boundingArea = calculateBoundingArea();
 8005046:	4640      	mov	r0, r8
        linespace = space;
 8005048:	f8a4 6d98 	strh.w	r6, [r4, #3480]	; 0xd98
        boundingArea = calculateBoundingArea();
 800504c:	f00f ffc6 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005050:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8005054:	9b05      	ldr	r3, [sp, #20]
 8005056:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 800505a:	333c      	adds	r3, #60	; 0x3c
 800505c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005060:	233c      	movs	r3, #60	; 0x3c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 8005062:	9805      	ldr	r0, [sp, #20]
 8005064:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8005068:	4629      	mov	r1, r5
 800506a:	f010 fa51 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800506e:	9905      	ldr	r1, [sp, #20]
 8005070:	ee1a 0a10 	vmov	r0, s20
 8005074:	f00d fc24 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005078:	9806      	ldr	r0, [sp, #24]
 800507a:	220c      	movs	r2, #12
 800507c:	2136      	movs	r1, #54	; 0x36
 800507e:	f7fe fb89 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8005082:	9906      	ldr	r1, [sp, #24]
        color = newColor;
 8005084:	f8c4 7ddc 	str.w	r7, [r4, #3548]	; 0xddc
        boundingArea = calculateBoundingArea();
 8005088:	4640      	mov	r0, r8
        linespace = space;
 800508a:	f8a4 6de0 	strh.w	r6, [r4, #3552]	; 0xde0
        boundingArea = calculateBoundingArea();
 800508e:	f00f ffa5 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005092:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8005096:	9b06      	ldr	r3, [sp, #24]
 8005098:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 800509c:	333c      	adds	r3, #60	; 0x3c
 800509e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80050a2:	233d      	movs	r3, #61	; 0x3d
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 80050a4:	9806      	ldr	r0, [sp, #24]
 80050a6:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80050aa:	4629      	mov	r1, r5
 80050ac:	f010 fa30 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80050b0:	ee1a 0a10 	vmov	r0, s20
 80050b4:	9906      	ldr	r1, [sp, #24]
 80050b6:	f00d fc03 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80050ba:	4620      	mov	r0, r4
 80050bc:	b02d      	add	sp, #180	; 0xb4
 80050be:	ecbd 8b10 	vpop	{d8-d15}
 80050c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80050c6:	bf00      	nop

080050c8 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80050c8:	4770      	bx	lr

080050ca <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80050ca:	4770      	bx	lr

080050cc <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80050cc:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80050d0:	6808      	ldr	r0, [r1, #0]
 80050d2:	6849      	ldr	r1, [r1, #4]
 80050d4:	c303      	stmia	r3!, {r0, r1}
    }
 80050d6:	4770      	bx	lr

080050d8 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80050d8:	4770      	bx	lr

080050da <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80050da:	4770      	bx	lr

080050dc <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80050dc:	6041      	str	r1, [r0, #4]
    }
 80050de:	4770      	bx	lr

080050e0 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 80050e0:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80050e2:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 80050e4:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80050e8:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80050ec:	8002      	strh	r2, [r0, #0]
 80050ee:	8042      	strh	r2, [r0, #2]
 80050f0:	8084      	strh	r4, [r0, #4]
 80050f2:	80c1      	strh	r1, [r0, #6]
        }
 80050f4:	bd10      	pop	{r4, pc}

080050f6 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 80050f6:	4770      	bx	lr

080050f8 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80050f8:	4770      	bx	lr
	...

080050fc <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80050fc:	4b06      	ldr	r3, [pc, #24]	; (8005118 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80050fe:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005102:	2300      	movs	r3, #0
 8005104:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8005108:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800510c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005110:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 8005114:	4770      	bx	lr
 8005116:	bf00      	nop
 8005118:	080054b9 	.word	0x080054b9

0800511c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 800511c:	2301      	movs	r3, #1
 800511e:	7203      	strb	r3, [r0, #8]
    }
 8005120:	4770      	bx	lr

08005122 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8005122:	4770      	bx	lr

08005124 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8005124:	4770      	bx	lr

08005126 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 8005126:	4770      	bx	lr

08005128 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8005128:	4770      	bx	lr

0800512a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 800512a:	4770      	bx	lr

0800512c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 800512c:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 800512e:	6840      	ldr	r0, [r0, #4]
 8005130:	6803      	ldr	r3, [r0, #0]
 8005132:	3110      	adds	r1, #16
 8005134:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8005136:	4718      	bx	r3

08005138 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8005138:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 800513a:	6840      	ldr	r0, [r0, #4]
 800513c:	6803      	ldr	r3, [r0, #0]
 800513e:	3110      	adds	r1, #16
 8005140:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005142:	4718      	bx	r3

08005144 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8005144:	4770      	bx	lr

08005146 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 8005146:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8005148:	6840      	ldr	r0, [r0, #4]
 800514a:	6803      	ldr	r3, [r0, #0]
 800514c:	3110      	adds	r1, #16
 800514e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8005150:	4718      	bx	r3

08005152 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8005152:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8005154:	6840      	ldr	r0, [r0, #4]
 8005156:	6803      	ldr	r3, [r0, #0]
 8005158:	3110      	adds	r1, #16
 800515a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800515c:	4718      	bx	r3

0800515e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 800515e:	4770      	bx	lr

08005160 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8005160:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8005162:	68c2      	ldr	r2, [r0, #12]
 8005164:	6841      	ldr	r1, [r0, #4]
 8005166:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8005168:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800516a:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800516e:	07d2      	lsls	r2, r2, #31
 8005170:	bf48      	it	mi
 8005172:	590a      	ldrmi	r2, [r1, r4]
 8005174:	689b      	ldr	r3, [r3, #8]
    }
 8005176:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800517a:	bf48      	it	mi
 800517c:	58d3      	ldrmi	r3, [r2, r3]
 800517e:	4718      	bx	r3

08005180 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8005180:	6843      	ldr	r3, [r0, #4]
 8005182:	b12b      	cbz	r3, 8005190 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8005184:	6883      	ldr	r3, [r0, #8]
 8005186:	b92b      	cbnz	r3, 8005194 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8005188:	68c0      	ldr	r0, [r0, #12]
 800518a:	f000 0001 	and.w	r0, r0, #1
 800518e:	4770      	bx	lr
 8005190:	4618      	mov	r0, r3
 8005192:	4770      	bx	lr
 8005194:	2001      	movs	r0, #1
    }
 8005196:	4770      	bx	lr

08005198 <_ZN8touchgfx12NoTransitionD0Ev>:
 8005198:	b510      	push	{r4, lr}
 800519a:	210c      	movs	r1, #12
 800519c:	4604      	mov	r4, r0
 800519e:	f027 fdc4 	bl	802cd2a <_ZdlPvj>
 80051a2:	4620      	mov	r0, r4
 80051a4:	bd10      	pop	{r4, pc}

080051a6 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80051a6:	b510      	push	{r4, lr}
 80051a8:	2110      	movs	r1, #16
 80051aa:	4604      	mov	r4, r0
 80051ac:	f027 fdbd 	bl	802cd2a <_ZdlPvj>
 80051b0:	4620      	mov	r0, r4
 80051b2:	bd10      	pop	{r4, pc}

080051b4 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80051b4:	b510      	push	{r4, lr}
 80051b6:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80051ba:	4604      	mov	r4, r0
 80051bc:	f027 fdb5 	bl	802cd2a <_ZdlPvj>
 80051c0:	4620      	mov	r0, r4
 80051c2:	bd10      	pop	{r4, pc}

080051c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 80051c4:	b510      	push	{r4, lr}
 80051c6:	2138      	movs	r1, #56	; 0x38
 80051c8:	4604      	mov	r4, r0
 80051ca:	f027 fdae 	bl	802cd2a <_ZdlPvj>
 80051ce:	4620      	mov	r0, r4
 80051d0:	bd10      	pop	{r4, pc}

080051d2 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80051d2:	b510      	push	{r4, lr}
 80051d4:	2128      	movs	r1, #40	; 0x28
 80051d6:	4604      	mov	r4, r0
 80051d8:	f027 fda7 	bl	802cd2a <_ZdlPvj>
 80051dc:	4620      	mov	r0, r4
 80051de:	bd10      	pop	{r4, pc}

080051e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 80051e0:	b510      	push	{r4, lr}
 80051e2:	2138      	movs	r1, #56	; 0x38
 80051e4:	4604      	mov	r4, r0
 80051e6:	f027 fda0 	bl	802cd2a <_ZdlPvj>
 80051ea:	4620      	mov	r0, r4
 80051ec:	bd10      	pop	{r4, pc}

080051ee <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80051ee:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80051f0:	f013 fc3e 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
 80051f4:	6803      	ldr	r3, [r0, #0]
    }
 80051f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80051fa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80051fc:	4718      	bx	r3
	...

08005200 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8005200:	b513      	push	{r0, r1, r4, lr}
 8005202:	4604      	mov	r4, r0
        animationCounter++;
 8005204:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8005206:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8005208:	3001      	adds	r0, #1
 800520a:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 800520c:	4298      	cmp	r0, r3
        animationCounter++;
 800520e:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8005210:	d905      	bls.n	800521e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 8005212:	2301      	movs	r3, #1
 8005214:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8005216:	2300      	movs	r3, #0
 8005218:	72a3      	strb	r3, [r4, #10]
    }
 800521a:	b002      	add	sp, #8
 800521c:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800521e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8005222:	2100      	movs	r1, #0
 8005224:	f015 fa94 	bl	801a750 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8005228:	f010 0201 	ands.w	r2, r0, #1
 800522c:	b283      	uxth	r3, r0
 800522e:	d12a      	bne.n	8005286 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8005230:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8005232:	4a19      	ldr	r2, [pc, #100]	; (8005298 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8005234:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8005238:	89e3      	ldrh	r3, [r4, #14]
 800523a:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 800523c:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8005240:	82a0      	strh	r0, [r4, #20]
 8005242:	2000      	movs	r0, #0
 8005244:	1ad2      	subs	r2, r2, r3
 8005246:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 800524a:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 800524c:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 800524e:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8005250:	4a12      	ldr	r2, [pc, #72]	; (800529c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8005252:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8005256:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8005258:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 800525c:	691b      	ldr	r3, [r3, #16]
 800525e:	f8ad 1000 	strh.w	r1, [sp]
 8005262:	f8ad 2006 	strh.w	r2, [sp, #6]
 8005266:	4669      	mov	r1, sp
 8005268:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800526a:	7aa3      	ldrb	r3, [r4, #10]
 800526c:	2b01      	cmp	r3, #1
 800526e:	d1d4      	bne.n	800521a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8005270:	4b0b      	ldr	r3, [pc, #44]	; (80052a0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 8005272:	781b      	ldrb	r3, [r3, #0]
 8005274:	2b00      	cmp	r3, #0
 8005276:	d0d0      	beq.n	800521a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8005278:	f013 fbfa 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    }
 800527c:	b002      	add	sp, #8
 800527e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8005282:	f013 bbfb 	b.w	8018a7c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8005286:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800528a:	2800      	cmp	r0, #0
 800528c:	bfd8      	it	le
 800528e:	460a      	movle	r2, r1
 8005290:	4413      	add	r3, r2
 8005292:	81e3      	strh	r3, [r4, #14]
 8005294:	e7cd      	b.n	8005232 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 8005296:	bf00      	nop
 8005298:	20013840 	.word	0x20013840
 800529c:	20013842 	.word	0x20013842
 80052a0:	2001384a 	.word	0x2001384a

080052a4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80052a4:	b510      	push	{r4, lr}
 80052a6:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80052a8:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 80052ac:	b158      	cbz	r0, 80052c6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80052ae:	6803      	ldr	r3, [r0, #0]
 80052b0:	68db      	ldr	r3, [r3, #12]
 80052b2:	4798      	blx	r3
 80052b4:	b138      	cbz	r0, 80052c6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80052b6:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 80052ba:	6803      	ldr	r3, [r0, #0]
 80052bc:	689b      	ldr	r3, [r3, #8]
 80052be:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80052c0:	2300      	movs	r3, #0
 80052c2:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 80052c6:	bd10      	pop	{r4, pc}

080052c8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 80052c8:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80052cc:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80052d0:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80052d2:	68a8      	ldr	r0, [r5, #8]
 80052d4:	6803      	ldr	r3, [r0, #0]
 80052d6:	6a1b      	ldr	r3, [r3, #32]
 80052d8:	4798      	blx	r3
 80052da:	2897      	cmp	r0, #151	; 0x97
 80052dc:	d805      	bhi.n	80052ea <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 80052de:	4b46      	ldr	r3, [pc, #280]	; (80053f8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 80052e0:	4a46      	ldr	r2, [pc, #280]	; (80053fc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80052e2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80052e4:	4846      	ldr	r0, [pc, #280]	; (8005400 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 80052e6:	f028 fc07 	bl	802daf8 <__assert_func>
 80052ea:	6868      	ldr	r0, [r5, #4]
 80052ec:	6803      	ldr	r3, [r0, #0]
 80052ee:	6a1b      	ldr	r3, [r3, #32]
 80052f0:	4798      	blx	r3
 80052f2:	280f      	cmp	r0, #15
 80052f4:	d803      	bhi.n	80052fe <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 80052f6:	4b43      	ldr	r3, [pc, #268]	; (8005404 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 80052f8:	4a40      	ldr	r2, [pc, #256]	; (80053fc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80052fa:	21a4      	movs	r1, #164	; 0xa4
 80052fc:	e7f2      	b.n	80052e4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80052fe:	68e8      	ldr	r0, [r5, #12]
 8005300:	6803      	ldr	r3, [r0, #0]
 8005302:	6a1b      	ldr	r3, [r3, #32]
 8005304:	4798      	blx	r3
 8005306:	280b      	cmp	r0, #11
 8005308:	d803      	bhi.n	8005312 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 800530a:	4b3f      	ldr	r3, [pc, #252]	; (8005408 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 800530c:	4a3b      	ldr	r2, [pc, #236]	; (80053fc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 800530e:	21a5      	movs	r1, #165	; 0xa5
 8005310:	e7e8      	b.n	80052e4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 8005312:	f013 fbad 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005316:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8005410 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 800531a:	3004      	adds	r0, #4
 800531c:	f013 fc0e 	bl	8018b3c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005320:	f8d9 0000 	ldr.w	r0, [r9]
 8005324:	b110      	cbz	r0, 800532c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8005326:	6803      	ldr	r3, [r0, #0]
 8005328:	68db      	ldr	r3, [r3, #12]
 800532a:	4798      	blx	r3
    if (*currentTrans)
 800532c:	f8d9 0000 	ldr.w	r0, [r9]
 8005330:	b110      	cbz	r0, 8005338 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8005332:	6803      	ldr	r3, [r0, #0]
 8005334:	681b      	ldr	r3, [r3, #0]
 8005336:	4798      	blx	r3
    if (*currentScreen)
 8005338:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8005414 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 800533c:	f8d8 0000 	ldr.w	r0, [r8]
 8005340:	b110      	cbz	r0, 8005348 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8005342:	6803      	ldr	r3, [r0, #0]
 8005344:	695b      	ldr	r3, [r3, #20]
 8005346:	4798      	blx	r3
    if (*currentPresenter)
 8005348:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800534c:	b110      	cbz	r0, 8005354 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800534e:	6803      	ldr	r3, [r0, #0]
 8005350:	685b      	ldr	r3, [r3, #4]
 8005352:	4798      	blx	r3
    if (*currentScreen)
 8005354:	f8d8 0000 	ldr.w	r0, [r8]
 8005358:	b110      	cbz	r0, 8005360 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800535a:	6803      	ldr	r3, [r0, #0]
 800535c:	681b      	ldr	r3, [r3, #0]
 800535e:	4798      	blx	r3
    if (*currentPresenter)
 8005360:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005364:	b110      	cbz	r0, 800536c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8005366:	6803      	ldr	r3, [r0, #0]
 8005368:	689b      	ldr	r3, [r3, #8]
 800536a:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800536c:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800536e:	6803      	ldr	r3, [r0, #0]
 8005370:	2100      	movs	r1, #0
 8005372:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005374:	4798      	blx	r3
        : screenContainer(0), done(false)
 8005376:	f04f 0b00 	mov.w	fp, #0
 800537a:	4b24      	ldr	r3, [pc, #144]	; (800540c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 800537c:	6003      	str	r3, [r0, #0]
 800537e:	4604      	mov	r4, r0
 8005380:	f8c0 b004 	str.w	fp, [r0, #4]
 8005384:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005388:	68a8      	ldr	r0, [r5, #8]
 800538a:	6803      	ldr	r3, [r0, #0]
 800538c:	4659      	mov	r1, fp
 800538e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005390:	4798      	blx	r3
 8005392:	4606      	mov	r6, r0
 8005394:	f005 ff04 	bl	800b1a0 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005398:	6868      	ldr	r0, [r5, #4]
 800539a:	6803      	ldr	r3, [r0, #0]
 800539c:	4659      	mov	r1, fp
 800539e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053a0:	4798      	blx	r3
 80053a2:	4631      	mov	r1, r6
 80053a4:	4605      	mov	r5, r0
 80053a6:	f005 fed7 	bl	800b158 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 80053aa:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80053ae:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80053b2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80053b6:	b1e5      	cbz	r5, 80053f2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 80053b8:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80053ba:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80053be:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80053c0:	f8c5 a008 	str.w	sl, [r5, #8]
 80053c4:	4630      	mov	r0, r6
 80053c6:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80053c8:	63f5      	str	r5, [r6, #60]	; 0x3c
 80053ca:	4798      	blx	r3
    newPresenter->activate();
 80053cc:	682b      	ldr	r3, [r5, #0]
 80053ce:	4628      	mov	r0, r5
 80053d0:	681b      	ldr	r3, [r3, #0]
 80053d2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80053d4:	4621      	mov	r1, r4
 80053d6:	4630      	mov	r0, r6
 80053d8:	f015 f976 	bl	801a6c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80053dc:	6823      	ldr	r3, [r4, #0]
 80053de:	4620      	mov	r0, r4
 80053e0:	691b      	ldr	r3, [r3, #16]
 80053e2:	4798      	blx	r3
    newTransition->invalidate();
 80053e4:	6823      	ldr	r3, [r4, #0]
 80053e6:	695b      	ldr	r3, [r3, #20]
 80053e8:	4620      	mov	r0, r4
}
 80053ea:	b001      	add	sp, #4
 80053ec:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80053f0:	4718      	bx	r3
    model->bind(newPresenter);
 80053f2:	462b      	mov	r3, r5
 80053f4:	e7e1      	b.n	80053ba <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 80053f6:	bf00      	nop
 80053f8:	0802f810 	.word	0x0802f810
 80053fc:	0802f89e 	.word	0x0802f89e
 8005400:	0802f9ac 	.word	0x0802f9ac
 8005404:	0802f9f3 	.word	0x0802f9f3
 8005408:	0802fa96 	.word	0x0802fa96
 800540c:	08030b50 	.word	0x08030b50
 8005410:	20013894 	.word	0x20013894
 8005414:	20013890 	.word	0x20013890

08005418 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8005418:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800541a:	4604      	mov	r4, r0
        animationCounter++;
 800541c:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 800541e:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8005420:	3001      	adds	r0, #1
 8005422:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8005424:	4298      	cmp	r0, r3
        animationCounter++;
 8005426:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8005428:	d905      	bls.n	8005436 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 800542a:	2301      	movs	r3, #1
 800542c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800542e:	2300      	movs	r3, #0
 8005430:	72a3      	strb	r3, [r4, #10]
    }
 8005432:	b003      	add	sp, #12
 8005434:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8005436:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800543a:	2100      	movs	r1, #0
 800543c:	f015 f988 	bl	801a750 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8005440:	f010 0201 	ands.w	r2, r0, #1
 8005444:	b283      	uxth	r3, r0
 8005446:	d128      	bne.n	800549a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8005448:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800544a:	4b18      	ldr	r3, [pc, #96]	; (80054ac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800544c:	4818      	ldr	r0, [pc, #96]	; (80054b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800544e:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8005450:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8005452:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8005454:	f9b0 0000 	ldrsh.w	r0, [r0]
 8005458:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800545c:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 800545e:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8005460:	442b      	add	r3, r5
 8005462:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8005464:	b212      	sxth	r2, r2
 8005466:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800546a:	6803      	ldr	r3, [r0, #0]
 800546c:	8322      	strh	r2, [r4, #24]
 800546e:	f8ad 2000 	strh.w	r2, [sp]
 8005472:	2200      	movs	r2, #0
 8005474:	691b      	ldr	r3, [r3, #16]
 8005476:	f8ad 2002 	strh.w	r2, [sp, #2]
 800547a:	4669      	mov	r1, sp
 800547c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800547e:	7aa3      	ldrb	r3, [r4, #10]
 8005480:	2b01      	cmp	r3, #1
 8005482:	d1d6      	bne.n	8005432 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8005484:	4b0b      	ldr	r3, [pc, #44]	; (80054b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 8005486:	781b      	ldrb	r3, [r3, #0]
 8005488:	2b00      	cmp	r3, #0
 800548a:	d0d2      	beq.n	8005432 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800548c:	f013 faf0 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8005490:	b003      	add	sp, #12
 8005492:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8005496:	f013 baf1 	b.w	8018a7c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800549a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800549e:	2800      	cmp	r0, #0
 80054a0:	bfd8      	it	le
 80054a2:	460a      	movle	r2, r1
 80054a4:	4413      	add	r3, r2
 80054a6:	81e3      	strh	r3, [r4, #14]
 80054a8:	e7cf      	b.n	800544a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 80054aa:	bf00      	nop
 80054ac:	20013840 	.word	0x20013840
 80054b0:	20013842 	.word	0x20013842
 80054b4:	2001384a 	.word	0x2001384a

080054b8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 80054b8:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80054bc:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80054c0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80054c2:	68a8      	ldr	r0, [r5, #8]
 80054c4:	6803      	ldr	r3, [r0, #0]
 80054c6:	6a1b      	ldr	r3, [r3, #32]
 80054c8:	4798      	blx	r3
 80054ca:	f5b0 5f90 	cmp.w	r0, #4608	; 0x1200
 80054ce:	d205      	bcs.n	80054dc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x24>
 80054d0:	4b45      	ldr	r3, [pc, #276]	; (80055e8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x130>)
 80054d2:	4a46      	ldr	r2, [pc, #280]	; (80055ec <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80054d4:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80054d6:	4846      	ldr	r0, [pc, #280]	; (80055f0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80054d8:	f028 fb0e 	bl	802daf8 <__assert_func>
 80054dc:	6868      	ldr	r0, [r5, #4]
 80054de:	6803      	ldr	r3, [r0, #0]
 80054e0:	6a1b      	ldr	r3, [r3, #32]
 80054e2:	4798      	blx	r3
 80054e4:	280f      	cmp	r0, #15
 80054e6:	d803      	bhi.n	80054f0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x38>
 80054e8:	4b42      	ldr	r3, [pc, #264]	; (80055f4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 80054ea:	4a40      	ldr	r2, [pc, #256]	; (80055ec <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80054ec:	21a4      	movs	r1, #164	; 0xa4
 80054ee:	e7f2      	b.n	80054d6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80054f0:	68e8      	ldr	r0, [r5, #12]
 80054f2:	6803      	ldr	r3, [r0, #0]
 80054f4:	6a1b      	ldr	r3, [r3, #32]
 80054f6:	4798      	blx	r3
 80054f8:	280b      	cmp	r0, #11
 80054fa:	d803      	bhi.n	8005504 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4c>
 80054fc:	4b3e      	ldr	r3, [pc, #248]	; (80055f8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 80054fe:	4a3b      	ldr	r2, [pc, #236]	; (80055ec <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 8005500:	21a5      	movs	r1, #165	; 0xa5
 8005502:	e7e8      	b.n	80054d6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005504:	f013 fab4 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005508:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 8005600 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>
 800550c:	3004      	adds	r0, #4
 800550e:	f013 fb15 	bl	8018b3c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005512:	f8d9 0000 	ldr.w	r0, [r9]
 8005516:	b110      	cbz	r0, 800551e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8005518:	6803      	ldr	r3, [r0, #0]
 800551a:	68db      	ldr	r3, [r3, #12]
 800551c:	4798      	blx	r3
    if (*currentTrans)
 800551e:	f8d9 0000 	ldr.w	r0, [r9]
 8005522:	b110      	cbz	r0, 800552a <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8005524:	6803      	ldr	r3, [r0, #0]
 8005526:	681b      	ldr	r3, [r3, #0]
 8005528:	4798      	blx	r3
    if (*currentScreen)
 800552a:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8005604 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 800552e:	f8d8 0000 	ldr.w	r0, [r8]
 8005532:	b110      	cbz	r0, 800553a <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005534:	6803      	ldr	r3, [r0, #0]
 8005536:	695b      	ldr	r3, [r3, #20]
 8005538:	4798      	blx	r3
    if (*currentPresenter)
 800553a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800553e:	b110      	cbz	r0, 8005546 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005540:	6803      	ldr	r3, [r0, #0]
 8005542:	685b      	ldr	r3, [r3, #4]
 8005544:	4798      	blx	r3
    if (*currentScreen)
 8005546:	f8d8 0000 	ldr.w	r0, [r8]
 800554a:	b110      	cbz	r0, 8005552 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 800554c:	6803      	ldr	r3, [r0, #0]
 800554e:	681b      	ldr	r3, [r3, #0]
 8005550:	4798      	blx	r3
    if (*currentPresenter)
 8005552:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005556:	b110      	cbz	r0, 800555e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005558:	6803      	ldr	r3, [r0, #0]
 800555a:	689b      	ldr	r3, [r3, #8]
 800555c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800555e:	68e8      	ldr	r0, [r5, #12]
 8005560:	6803      	ldr	r3, [r0, #0]
 8005562:	2100      	movs	r1, #0
 8005564:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005566:	4798      	blx	r3
 8005568:	f04f 0b00 	mov.w	fp, #0
 800556c:	4b23      	ldr	r3, [pc, #140]	; (80055fc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 800556e:	6003      	str	r3, [r0, #0]
 8005570:	4604      	mov	r4, r0
 8005572:	f8c0 b004 	str.w	fp, [r0, #4]
 8005576:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800557a:	68a8      	ldr	r0, [r5, #8]
 800557c:	6803      	ldr	r3, [r0, #0]
 800557e:	4659      	mov	r1, fp
 8005580:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005582:	4798      	blx	r3
 8005584:	4606      	mov	r6, r0
 8005586:	f005 faa7 	bl	800aad8 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800558a:	6868      	ldr	r0, [r5, #4]
 800558c:	6803      	ldr	r3, [r0, #0]
 800558e:	4659      	mov	r1, fp
 8005590:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005592:	4798      	blx	r3
 8005594:	4631      	mov	r1, r6
 8005596:	4605      	mov	r5, r0
 8005598:	f005 fa78 	bl	800aa8c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 800559c:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80055a0:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80055a4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80055a8:	b1e5      	cbz	r5, 80055e4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12c>
 80055aa:	1d2b      	adds	r3, r5, #4
 80055ac:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80055b0:	6833      	ldr	r3, [r6, #0]
 80055b2:	f8c5 a008 	str.w	sl, [r5, #8]
 80055b6:	4630      	mov	r0, r6
 80055b8:	68db      	ldr	r3, [r3, #12]
 80055ba:	63f5      	str	r5, [r6, #60]	; 0x3c
 80055bc:	4798      	blx	r3
    newPresenter->activate();
 80055be:	682b      	ldr	r3, [r5, #0]
 80055c0:	4628      	mov	r0, r5
 80055c2:	681b      	ldr	r3, [r3, #0]
 80055c4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80055c6:	4621      	mov	r1, r4
 80055c8:	4630      	mov	r0, r6
 80055ca:	f015 f87d 	bl	801a6c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80055ce:	6823      	ldr	r3, [r4, #0]
 80055d0:	4620      	mov	r0, r4
 80055d2:	691b      	ldr	r3, [r3, #16]
 80055d4:	4798      	blx	r3
    newTransition->invalidate();
 80055d6:	6823      	ldr	r3, [r4, #0]
 80055d8:	695b      	ldr	r3, [r3, #20]
 80055da:	4620      	mov	r0, r4
}
 80055dc:	b001      	add	sp, #4
 80055de:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80055e2:	4718      	bx	r3
    model->bind(newPresenter);
 80055e4:	462b      	mov	r3, r5
 80055e6:	e7e1      	b.n	80055ac <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf4>
 80055e8:	0802f810 	.word	0x0802f810
 80055ec:	0802fb39 	.word	0x0802fb39
 80055f0:	0802f9ac 	.word	0x0802f9ac
 80055f4:	0802f9f3 	.word	0x0802f9f3
 80055f8:	0802fa96 	.word	0x0802fa96
 80055fc:	08030b50 	.word	0x08030b50
 8005600:	20013894 	.word	0x20013894
 8005604:	20013890 	.word	0x20013890

08005608 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8005608:	4b04      	ldr	r3, [pc, #16]	; (800561c <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800560a:	681b      	ldr	r3, [r3, #0]
 800560c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8005610:	b10a      	cbz	r2, 8005616 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8005612:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8005614:	b900      	cbnz	r0, 8005618 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8005616:	6898      	ldr	r0, [r3, #8]
    }
 8005618:	4770      	bx	lr
 800561a:	bf00      	nop
 800561c:	2001384c 	.word	0x2001384c

08005620 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8005620:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005622:	4604      	mov	r4, r0
 8005624:	4617      	mov	r7, r2
 8005626:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8005628:	f013 fb56 	bl	8018cd8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 800562c:	4b10      	ldr	r3, [pc, #64]	; (8005670 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 800562e:	601c      	str	r4, [r3, #0]
      model(m)
 8005630:	4b10      	ldr	r3, [pc, #64]	; (8005674 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8005632:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8005634:	4b10      	ldr	r3, [pc, #64]	; (8005678 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8005636:	2500      	movs	r5, #0
 8005638:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 800563c:	4b0f      	ldr	r3, [pc, #60]	; (800567c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 800563e:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8005642:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8005644:	6803      	ldr	r3, [r0, #0]
 8005646:	2101      	movs	r1, #1
 8005648:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 800564a:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 800564e:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8005652:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8005654:	4628      	mov	r0, r5
 8005656:	f005 f873 	bl	800a740 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800565a:	f7ff ffd5 	bl	8005608 <_ZN8touchgfx3HAL3lcdEv>
 800565e:	f01c ff3e 	bl	80224de <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8005662:	f7ff ffd1 	bl	8005608 <_ZN8touchgfx3HAL3lcdEv>
 8005666:	f01c ffb5 	bl	80225d4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800566a:	4620      	mov	r0, r4
 800566c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800566e:	bf00      	nop
 8005670:	200138a0 	.word	0x200138a0
 8005674:	08030afc 	.word	0x08030afc
 8005678:	08030ae4 	.word	0x08030ae4
 800567c:	2001384c 	.word	0x2001384c

08005680 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8005680:	4b06      	ldr	r3, [pc, #24]	; (800569c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 8005682:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005686:	2300      	movs	r3, #0
 8005688:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800568c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005690:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005694:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005698:	4770      	bx	lr
 800569a:	bf00      	nop
 800569c:	080054b9 	.word	0x080054b9

080056a0 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 80056a0:	4b06      	ldr	r3, [pc, #24]	; (80056bc <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 80056a2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80056a6:	2300      	movs	r3, #0
 80056a8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80056ac:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80056b0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80056b4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80056b8:	4770      	bx	lr
 80056ba:	bf00      	nop
 80056bc:	08005b25 	.word	0x08005b25

080056c0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 80056c0:	4b06      	ldr	r3, [pc, #24]	; (80056dc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 80056c2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80056c6:	2300      	movs	r3, #0
 80056c8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80056cc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80056d0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80056d4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80056d8:	4770      	bx	lr
 80056da:	bf00      	nop
 80056dc:	080066c9 	.word	0x080066c9

080056e0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 80056e0:	4b06      	ldr	r3, [pc, #24]	; (80056fc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 80056e2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80056e6:	2300      	movs	r3, #0
 80056e8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80056ec:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80056f0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80056f4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80056f8:	4770      	bx	lr
 80056fa:	bf00      	nop
 80056fc:	080059e5 	.word	0x080059e5

08005700 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 8005700:	4b06      	ldr	r3, [pc, #24]	; (800571c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 8005702:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005706:	2300      	movs	r3, #0
 8005708:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800570c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005710:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005714:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005718:	4770      	bx	lr
 800571a:	bf00      	nop
 800571c:	08006589 	.word	0x08006589

08005720 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8005720:	4b06      	ldr	r3, [pc, #24]	; (800573c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 8005722:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005726:	2300      	movs	r3, #0
 8005728:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800572c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005730:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005734:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005738:	4770      	bx	lr
 800573a:	bf00      	nop
 800573c:	08006449 	.word	0x08006449

08005740 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8005740:	4b06      	ldr	r3, [pc, #24]	; (800575c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 8005742:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005746:	2300      	movs	r3, #0
 8005748:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800574c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005750:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005754:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005758:	4770      	bx	lr
 800575a:	bf00      	nop
 800575c:	08006309 	.word	0x08006309

08005760 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8005760:	4b06      	ldr	r3, [pc, #24]	; (800577c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 8005762:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005766:	2300      	movs	r3, #0
 8005768:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800576c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005770:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005774:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005778:	4770      	bx	lr
 800577a:	bf00      	nop
 800577c:	080061c9 	.word	0x080061c9

08005780 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8005780:	4b06      	ldr	r3, [pc, #24]	; (800579c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8005782:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005786:	2300      	movs	r3, #0
 8005788:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800578c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005790:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005794:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005798:	4770      	bx	lr
 800579a:	bf00      	nop
 800579c:	080058a5 	.word	0x080058a5

080057a0 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 80057a0:	4b06      	ldr	r3, [pc, #24]	; (80057bc <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 80057a2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80057a6:	2300      	movs	r3, #0
 80057a8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80057ac:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80057b0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80057b4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80057b8:	4770      	bx	lr
 80057ba:	bf00      	nop
 80057bc:	08006089 	.word	0x08006089

080057c0 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 80057c0:	4b06      	ldr	r3, [pc, #24]	; (80057dc <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 80057c2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80057c6:	2300      	movs	r3, #0
 80057c8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80057cc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80057d0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80057d4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80057d8:	4770      	bx	lr
 80057da:	bf00      	nop
 80057dc:	08005f49 	.word	0x08005f49

080057e0 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 80057e0:	4b06      	ldr	r3, [pc, #24]	; (80057fc <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 80057e2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80057e6:	2300      	movs	r3, #0
 80057e8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80057ec:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80057f0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80057f4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80057f8:	4770      	bx	lr
 80057fa:	bf00      	nop
 80057fc:	08005e09 	.word	0x08005e09

08005800 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8005800:	4b06      	ldr	r3, [pc, #24]	; (800581c <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8005802:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005806:	2300      	movs	r3, #0
 8005808:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800580c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005810:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005814:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005818:	4770      	bx	lr
 800581a:	bf00      	nop
 800581c:	08005cc9 	.word	0x08005cc9

08005820 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8005820:	4b06      	ldr	r3, [pc, #24]	; (800583c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8005822:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005826:	2300      	movs	r3, #0
 8005828:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800582c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005830:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005834:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005838:	4770      	bx	lr
 800583a:	bf00      	nop
 800583c:	080052c9 	.word	0x080052c9

08005840 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8005840:	6803      	ldr	r3, [r0, #0]
 8005842:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005844:	4718      	bx	r3
	...

08005848 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8005848:	4b12      	ldr	r3, [pc, #72]	; (8005894 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 800584a:	b513      	push	{r0, r1, r4, lr}
          solid()
 800584c:	6003      	str	r3, [r0, #0]
 800584e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005852:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8005854:	4b10      	ldr	r3, [pc, #64]	; (8005898 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8005856:	7241      	strb	r1, [r0, #9]
 8005858:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800585a:	4910      	ldr	r1, [pc, #64]	; (800589c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 800585c:	4b10      	ldr	r3, [pc, #64]	; (80058a0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800585e:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8005862:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005866:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8005868:	2200      	movs	r2, #0
 800586a:	6042      	str	r2, [r0, #4]
 800586c:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 800586e:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8005870:	81c2      	strh	r2, [r0, #14]
          solid()
 8005872:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8005876:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800587a:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 800587e:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8005882:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005884:	9100      	str	r1, [sp, #0]
 8005886:	3010      	adds	r0, #16
 8005888:	4611      	mov	r1, r2
 800588a:	f7fd ff90 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800588e:	4620      	mov	r0, r4
 8005890:	b002      	add	sp, #8
 8005892:	bd10      	pop	{r4, pc}
 8005894:	08030b98 	.word	0x08030b98
 8005898:	08030a7c 	.word	0x08030a7c
 800589c:	20013842 	.word	0x20013842
 80058a0:	20013840 	.word	0x20013840

080058a4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 80058a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80058a8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80058ac:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80058ae:	68a0      	ldr	r0, [r4, #8]
 80058b0:	6803      	ldr	r3, [r0, #0]
 80058b2:	6a1b      	ldr	r3, [r3, #32]
 80058b4:	4798      	blx	r3
 80058b6:	f241 13c3 	movw	r3, #4547	; 0x11c3
 80058ba:	4298      	cmp	r0, r3
 80058bc:	d805      	bhi.n	80058ca <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x26>
 80058be:	4b42      	ldr	r3, [pc, #264]	; (80059c8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 80058c0:	4a42      	ldr	r2, [pc, #264]	; (80059cc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 80058c2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80058c4:	4842      	ldr	r0, [pc, #264]	; (80059d0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 80058c6:	f028 f917 	bl	802daf8 <__assert_func>
 80058ca:	6860      	ldr	r0, [r4, #4]
 80058cc:	6803      	ldr	r3, [r0, #0]
 80058ce:	6a1b      	ldr	r3, [r3, #32]
 80058d0:	4798      	blx	r3
 80058d2:	280f      	cmp	r0, #15
 80058d4:	d803      	bhi.n	80058de <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x3a>
 80058d6:	4b3f      	ldr	r3, [pc, #252]	; (80059d4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 80058d8:	4a3c      	ldr	r2, [pc, #240]	; (80059cc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 80058da:	21a4      	movs	r1, #164	; 0xa4
 80058dc:	e7f2      	b.n	80058c4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80058de:	68e0      	ldr	r0, [r4, #12]
 80058e0:	6803      	ldr	r3, [r0, #0]
 80058e2:	6a1b      	ldr	r3, [r3, #32]
 80058e4:	4798      	blx	r3
 80058e6:	2837      	cmp	r0, #55	; 0x37
 80058e8:	d803      	bhi.n	80058f2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4e>
 80058ea:	4b3b      	ldr	r3, [pc, #236]	; (80059d8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 80058ec:	4a37      	ldr	r2, [pc, #220]	; (80059cc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 80058ee:	21a5      	movs	r1, #165	; 0xa5
 80058f0:	e7e8      	b.n	80058c4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80058f2:	f013 f8bd 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80058f6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80059dc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 80058fa:	3004      	adds	r0, #4
 80058fc:	f013 f91e 	bl	8018b3c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005900:	f8d9 0000 	ldr.w	r0, [r9]
 8005904:	b110      	cbz	r0, 800590c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8005906:	6803      	ldr	r3, [r0, #0]
 8005908:	68db      	ldr	r3, [r3, #12]
 800590a:	4798      	blx	r3
    if (*currentTrans)
 800590c:	f8d9 0000 	ldr.w	r0, [r9]
 8005910:	b110      	cbz	r0, 8005918 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8005912:	6803      	ldr	r3, [r0, #0]
 8005914:	681b      	ldr	r3, [r3, #0]
 8005916:	4798      	blx	r3
    if (*currentScreen)
 8005918:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80059e0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 800591c:	f8d8 0000 	ldr.w	r0, [r8]
 8005920:	b110      	cbz	r0, 8005928 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005922:	6803      	ldr	r3, [r0, #0]
 8005924:	695b      	ldr	r3, [r3, #20]
 8005926:	4798      	blx	r3
    if (*currentPresenter)
 8005928:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800592c:	b110      	cbz	r0, 8005934 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 800592e:	6803      	ldr	r3, [r0, #0]
 8005930:	685b      	ldr	r3, [r3, #4]
 8005932:	4798      	blx	r3
    if (*currentScreen)
 8005934:	f8d8 0000 	ldr.w	r0, [r8]
 8005938:	b110      	cbz	r0, 8005940 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 800593a:	6803      	ldr	r3, [r0, #0]
 800593c:	681b      	ldr	r3, [r3, #0]
 800593e:	4798      	blx	r3
    if (*currentPresenter)
 8005940:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005944:	b110      	cbz	r0, 800594c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005946:	6803      	ldr	r3, [r0, #0]
 8005948:	689b      	ldr	r3, [r3, #8]
 800594a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800594c:	68e0      	ldr	r0, [r4, #12]
 800594e:	2100      	movs	r1, #0
 8005950:	f7ff ff76 	bl	8005840 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8005954:	2114      	movs	r1, #20
 8005956:	4605      	mov	r5, r0
 8005958:	f7ff ff76 	bl	8005848 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800595c:	68a0      	ldr	r0, [r4, #8]
 800595e:	6803      	ldr	r3, [r0, #0]
 8005960:	2100      	movs	r1, #0
 8005962:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005964:	4798      	blx	r3
 8005966:	4606      	mov	r6, r0
 8005968:	f005 f976 	bl	800ac58 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800596c:	6860      	ldr	r0, [r4, #4]
 800596e:	6803      	ldr	r3, [r0, #0]
 8005970:	2100      	movs	r1, #0
 8005972:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005974:	4798      	blx	r3
 8005976:	4631      	mov	r1, r6
 8005978:	4604      	mov	r4, r0
 800597a:	f005 f947 	bl	800ac0c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 800597e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005982:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005986:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800598a:	b1dc      	cbz	r4, 80059c4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x120>
 800598c:	1d23      	adds	r3, r4, #4
 800598e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005992:	6833      	ldr	r3, [r6, #0]
 8005994:	f8c4 a008 	str.w	sl, [r4, #8]
 8005998:	4630      	mov	r0, r6
 800599a:	68db      	ldr	r3, [r3, #12]
 800599c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800599e:	4798      	blx	r3
    newPresenter->activate();
 80059a0:	6823      	ldr	r3, [r4, #0]
 80059a2:	4620      	mov	r0, r4
 80059a4:	681b      	ldr	r3, [r3, #0]
 80059a6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80059a8:	4629      	mov	r1, r5
 80059aa:	4630      	mov	r0, r6
 80059ac:	f014 fe8c 	bl	801a6c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80059b0:	682b      	ldr	r3, [r5, #0]
 80059b2:	4628      	mov	r0, r5
 80059b4:	691b      	ldr	r3, [r3, #16]
 80059b6:	4798      	blx	r3
    newTransition->invalidate();
 80059b8:	682b      	ldr	r3, [r5, #0]
 80059ba:	4628      	mov	r0, r5
 80059bc:	695b      	ldr	r3, [r3, #20]
}
 80059be:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80059c2:	4718      	bx	r3
    model->bind(newPresenter);
 80059c4:	4623      	mov	r3, r4
 80059c6:	e7e2      	b.n	800598e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xea>
 80059c8:	0802f810 	.word	0x0802f810
 80059cc:	0802fc41 	.word	0x0802fc41
 80059d0:	0802f9ac 	.word	0x0802f9ac
 80059d4:	0802f9f3 	.word	0x0802f9f3
 80059d8:	0802fa96 	.word	0x0802fa96
 80059dc:	20013894 	.word	0x20013894
 80059e0:	20013890 	.word	0x20013890

080059e4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 80059e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80059e8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80059ec:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80059ee:	68a0      	ldr	r0, [r4, #8]
 80059f0:	6803      	ldr	r3, [r0, #0]
 80059f2:	6a1b      	ldr	r3, [r3, #32]
 80059f4:	4798      	blx	r3
 80059f6:	f241 13c3 	movw	r3, #4547	; 0x11c3
 80059fa:	4298      	cmp	r0, r3
 80059fc:	d805      	bhi.n	8005a0a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x26>
 80059fe:	4b42      	ldr	r3, [pc, #264]	; (8005b08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8005a00:	4a42      	ldr	r2, [pc, #264]	; (8005b0c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8005a02:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005a04:	4842      	ldr	r0, [pc, #264]	; (8005b10 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8005a06:	f028 f877 	bl	802daf8 <__assert_func>
 8005a0a:	6860      	ldr	r0, [r4, #4]
 8005a0c:	6803      	ldr	r3, [r0, #0]
 8005a0e:	6a1b      	ldr	r3, [r3, #32]
 8005a10:	4798      	blx	r3
 8005a12:	280f      	cmp	r0, #15
 8005a14:	d803      	bhi.n	8005a1e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x3a>
 8005a16:	4b3f      	ldr	r3, [pc, #252]	; (8005b14 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8005a18:	4a3c      	ldr	r2, [pc, #240]	; (8005b0c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8005a1a:	21a4      	movs	r1, #164	; 0xa4
 8005a1c:	e7f2      	b.n	8005a04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005a1e:	68e0      	ldr	r0, [r4, #12]
 8005a20:	6803      	ldr	r3, [r0, #0]
 8005a22:	6a1b      	ldr	r3, [r3, #32]
 8005a24:	4798      	blx	r3
 8005a26:	2837      	cmp	r0, #55	; 0x37
 8005a28:	d803      	bhi.n	8005a32 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4e>
 8005a2a:	4b3b      	ldr	r3, [pc, #236]	; (8005b18 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8005a2c:	4a37      	ldr	r2, [pc, #220]	; (8005b0c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8005a2e:	21a5      	movs	r1, #165	; 0xa5
 8005a30:	e7e8      	b.n	8005a04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005a32:	f013 f81d 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005a36:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005b1c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8005a3a:	3004      	adds	r0, #4
 8005a3c:	f013 f87e 	bl	8018b3c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005a40:	f8d9 0000 	ldr.w	r0, [r9]
 8005a44:	b110      	cbz	r0, 8005a4c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8005a46:	6803      	ldr	r3, [r0, #0]
 8005a48:	68db      	ldr	r3, [r3, #12]
 8005a4a:	4798      	blx	r3
    if (*currentTrans)
 8005a4c:	f8d9 0000 	ldr.w	r0, [r9]
 8005a50:	b110      	cbz	r0, 8005a58 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8005a52:	6803      	ldr	r3, [r0, #0]
 8005a54:	681b      	ldr	r3, [r3, #0]
 8005a56:	4798      	blx	r3
    if (*currentScreen)
 8005a58:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005b20 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8005a5c:	f8d8 0000 	ldr.w	r0, [r8]
 8005a60:	b110      	cbz	r0, 8005a68 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005a62:	6803      	ldr	r3, [r0, #0]
 8005a64:	695b      	ldr	r3, [r3, #20]
 8005a66:	4798      	blx	r3
    if (*currentPresenter)
 8005a68:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005a6c:	b110      	cbz	r0, 8005a74 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005a6e:	6803      	ldr	r3, [r0, #0]
 8005a70:	685b      	ldr	r3, [r3, #4]
 8005a72:	4798      	blx	r3
    if (*currentScreen)
 8005a74:	f8d8 0000 	ldr.w	r0, [r8]
 8005a78:	b110      	cbz	r0, 8005a80 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005a7a:	6803      	ldr	r3, [r0, #0]
 8005a7c:	681b      	ldr	r3, [r3, #0]
 8005a7e:	4798      	blx	r3
    if (*currentPresenter)
 8005a80:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005a84:	b110      	cbz	r0, 8005a8c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005a86:	6803      	ldr	r3, [r0, #0]
 8005a88:	689b      	ldr	r3, [r3, #8]
 8005a8a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005a8c:	68e0      	ldr	r0, [r4, #12]
 8005a8e:	2100      	movs	r1, #0
 8005a90:	f7ff fed6 	bl	8005840 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8005a94:	2114      	movs	r1, #20
 8005a96:	4605      	mov	r5, r0
 8005a98:	f7ff fed6 	bl	8005848 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005a9c:	68a0      	ldr	r0, [r4, #8]
 8005a9e:	6803      	ldr	r3, [r0, #0]
 8005aa0:	2100      	movs	r1, #0
 8005aa2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005aa4:	4798      	blx	r3
 8005aa6:	4606      	mov	r6, r0
 8005aa8:	f005 f876 	bl	800ab98 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005aac:	6860      	ldr	r0, [r4, #4]
 8005aae:	6803      	ldr	r3, [r0, #0]
 8005ab0:	2100      	movs	r1, #0
 8005ab2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ab4:	4798      	blx	r3
 8005ab6:	4631      	mov	r1, r6
 8005ab8:	4604      	mov	r4, r0
 8005aba:	f005 f847 	bl	800ab4c <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8005abe:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005ac2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005ac6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005aca:	b1dc      	cbz	r4, 8005b04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x120>
 8005acc:	1d23      	adds	r3, r4, #4
 8005ace:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005ad2:	6833      	ldr	r3, [r6, #0]
 8005ad4:	f8c4 a008 	str.w	sl, [r4, #8]
 8005ad8:	4630      	mov	r0, r6
 8005ada:	68db      	ldr	r3, [r3, #12]
 8005adc:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005ade:	4798      	blx	r3
    newPresenter->activate();
 8005ae0:	6823      	ldr	r3, [r4, #0]
 8005ae2:	4620      	mov	r0, r4
 8005ae4:	681b      	ldr	r3, [r3, #0]
 8005ae6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005ae8:	4629      	mov	r1, r5
 8005aea:	4630      	mov	r0, r6
 8005aec:	f014 fdec 	bl	801a6c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005af0:	682b      	ldr	r3, [r5, #0]
 8005af2:	4628      	mov	r0, r5
 8005af4:	691b      	ldr	r3, [r3, #16]
 8005af6:	4798      	blx	r3
    newTransition->invalidate();
 8005af8:	682b      	ldr	r3, [r5, #0]
 8005afa:	4628      	mov	r0, r5
 8005afc:	695b      	ldr	r3, [r3, #20]
}
 8005afe:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005b02:	4718      	bx	r3
    model->bind(newPresenter);
 8005b04:	4623      	mov	r3, r4
 8005b06:	e7e2      	b.n	8005ace <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xea>
 8005b08:	0802f810 	.word	0x0802f810
 8005b0c:	0802fd71 	.word	0x0802fd71
 8005b10:	0802f9ac 	.word	0x0802f9ac
 8005b14:	0802f9f3 	.word	0x0802f9f3
 8005b18:	0802fa96 	.word	0x0802fa96
 8005b1c:	20013894 	.word	0x20013894
 8005b20:	20013890 	.word	0x20013890

08005b24 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8005b24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005b28:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005b2c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005b2e:	68a0      	ldr	r0, [r4, #8]
 8005b30:	6803      	ldr	r3, [r0, #0]
 8005b32:	6a1b      	ldr	r3, [r3, #32]
 8005b34:	4798      	blx	r3
 8005b36:	f5b0 5f90 	cmp.w	r0, #4608	; 0x1200
 8005b3a:	d205      	bcs.n	8005b48 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x24>
 8005b3c:	4b42      	ldr	r3, [pc, #264]	; (8005c48 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8005b3e:	4a43      	ldr	r2, [pc, #268]	; (8005c4c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8005b40:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005b42:	4843      	ldr	r0, [pc, #268]	; (8005c50 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8005b44:	f027 ffd8 	bl	802daf8 <__assert_func>
 8005b48:	6860      	ldr	r0, [r4, #4]
 8005b4a:	6803      	ldr	r3, [r0, #0]
 8005b4c:	6a1b      	ldr	r3, [r3, #32]
 8005b4e:	4798      	blx	r3
 8005b50:	280f      	cmp	r0, #15
 8005b52:	d803      	bhi.n	8005b5c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x38>
 8005b54:	4b3f      	ldr	r3, [pc, #252]	; (8005c54 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8005b56:	4a3d      	ldr	r2, [pc, #244]	; (8005c4c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8005b58:	21a4      	movs	r1, #164	; 0xa4
 8005b5a:	e7f2      	b.n	8005b42 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005b5c:	68e0      	ldr	r0, [r4, #12]
 8005b5e:	6803      	ldr	r3, [r0, #0]
 8005b60:	6a1b      	ldr	r3, [r3, #32]
 8005b62:	4798      	blx	r3
 8005b64:	2837      	cmp	r0, #55	; 0x37
 8005b66:	d803      	bhi.n	8005b70 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4c>
 8005b68:	4b3b      	ldr	r3, [pc, #236]	; (8005c58 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8005b6a:	4a38      	ldr	r2, [pc, #224]	; (8005c4c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8005b6c:	21a5      	movs	r1, #165	; 0xa5
 8005b6e:	e7e8      	b.n	8005b42 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005b70:	f012 ff7e 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005b74:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005c5c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8005b78:	3004      	adds	r0, #4
 8005b7a:	f012 ffdf 	bl	8018b3c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005b7e:	f8d9 0000 	ldr.w	r0, [r9]
 8005b82:	b110      	cbz	r0, 8005b8a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8005b84:	6803      	ldr	r3, [r0, #0]
 8005b86:	68db      	ldr	r3, [r3, #12]
 8005b88:	4798      	blx	r3
    if (*currentTrans)
 8005b8a:	f8d9 0000 	ldr.w	r0, [r9]
 8005b8e:	b110      	cbz	r0, 8005b96 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8005b90:	6803      	ldr	r3, [r0, #0]
 8005b92:	681b      	ldr	r3, [r3, #0]
 8005b94:	4798      	blx	r3
    if (*currentScreen)
 8005b96:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005c60 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8005b9a:	f8d8 0000 	ldr.w	r0, [r8]
 8005b9e:	b110      	cbz	r0, 8005ba6 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005ba0:	6803      	ldr	r3, [r0, #0]
 8005ba2:	695b      	ldr	r3, [r3, #20]
 8005ba4:	4798      	blx	r3
    if (*currentPresenter)
 8005ba6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005baa:	b110      	cbz	r0, 8005bb2 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005bac:	6803      	ldr	r3, [r0, #0]
 8005bae:	685b      	ldr	r3, [r3, #4]
 8005bb0:	4798      	blx	r3
    if (*currentScreen)
 8005bb2:	f8d8 0000 	ldr.w	r0, [r8]
 8005bb6:	b110      	cbz	r0, 8005bbe <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005bb8:	6803      	ldr	r3, [r0, #0]
 8005bba:	681b      	ldr	r3, [r3, #0]
 8005bbc:	4798      	blx	r3
    if (*currentPresenter)
 8005bbe:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005bc2:	b110      	cbz	r0, 8005bca <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005bc4:	6803      	ldr	r3, [r0, #0]
 8005bc6:	689b      	ldr	r3, [r3, #8]
 8005bc8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005bca:	68e0      	ldr	r0, [r4, #12]
 8005bcc:	2100      	movs	r1, #0
 8005bce:	f7ff fe37 	bl	8005840 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8005bd2:	2114      	movs	r1, #20
 8005bd4:	4605      	mov	r5, r0
 8005bd6:	f7ff fe37 	bl	8005848 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005bda:	68a0      	ldr	r0, [r4, #8]
 8005bdc:	6803      	ldr	r3, [r0, #0]
 8005bde:	2100      	movs	r1, #0
 8005be0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005be2:	4798      	blx	r3
 8005be4:	4606      	mov	r6, r0
 8005be6:	f004 ff77 	bl	800aad8 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005bea:	6860      	ldr	r0, [r4, #4]
 8005bec:	6803      	ldr	r3, [r0, #0]
 8005bee:	2100      	movs	r1, #0
 8005bf0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005bf2:	4798      	blx	r3
 8005bf4:	4631      	mov	r1, r6
 8005bf6:	4604      	mov	r4, r0
 8005bf8:	f004 ff48 	bl	800aa8c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8005bfc:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005c00:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005c04:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005c08:	b1dc      	cbz	r4, 8005c42 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x11e>
 8005c0a:	1d23      	adds	r3, r4, #4
 8005c0c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005c10:	6833      	ldr	r3, [r6, #0]
 8005c12:	f8c4 a008 	str.w	sl, [r4, #8]
 8005c16:	4630      	mov	r0, r6
 8005c18:	68db      	ldr	r3, [r3, #12]
 8005c1a:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005c1c:	4798      	blx	r3
    newPresenter->activate();
 8005c1e:	6823      	ldr	r3, [r4, #0]
 8005c20:	4620      	mov	r0, r4
 8005c22:	681b      	ldr	r3, [r3, #0]
 8005c24:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005c26:	4629      	mov	r1, r5
 8005c28:	4630      	mov	r0, r6
 8005c2a:	f014 fd4d 	bl	801a6c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005c2e:	682b      	ldr	r3, [r5, #0]
 8005c30:	4628      	mov	r0, r5
 8005c32:	691b      	ldr	r3, [r3, #16]
 8005c34:	4798      	blx	r3
    newTransition->invalidate();
 8005c36:	682b      	ldr	r3, [r5, #0]
 8005c38:	4628      	mov	r0, r5
 8005c3a:	695b      	ldr	r3, [r3, #20]
}
 8005c3c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005c40:	4718      	bx	r3
    model->bind(newPresenter);
 8005c42:	4623      	mov	r3, r4
 8005c44:	e7e2      	b.n	8005c0c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xe8>
 8005c46:	bf00      	nop
 8005c48:	0802f810 	.word	0x0802f810
 8005c4c:	0802fe8f 	.word	0x0802fe8f
 8005c50:	0802f9ac 	.word	0x0802f9ac
 8005c54:	0802f9f3 	.word	0x0802f9f3
 8005c58:	0802fa96 	.word	0x0802fa96
 8005c5c:	20013894 	.word	0x20013894
 8005c60:	20013890 	.word	0x20013890

08005c64 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8005c64:	6803      	ldr	r3, [r0, #0]
 8005c66:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c68:	4718      	bx	r3
	...

08005c6c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8005c6c:	4b12      	ldr	r3, [pc, #72]	; (8005cb8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8005c6e:	b513      	push	{r0, r1, r4, lr}
          solid()
 8005c70:	6003      	str	r3, [r0, #0]
 8005c72:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005c76:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8005c78:	4b10      	ldr	r3, [pc, #64]	; (8005cbc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8005c7a:	7241      	strb	r1, [r0, #9]
 8005c7c:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005c7e:	4910      	ldr	r1, [pc, #64]	; (8005cc0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8005c80:	4b10      	ldr	r3, [pc, #64]	; (8005cc4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005c82:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8005c86:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005c8a:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8005c8c:	2200      	movs	r2, #0
 8005c8e:	6042      	str	r2, [r0, #4]
 8005c90:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8005c92:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8005c94:	81c2      	strh	r2, [r0, #14]
          solid()
 8005c96:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8005c9a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8005c9e:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8005ca2:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8005ca6:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005ca8:	9100      	str	r1, [sp, #0]
 8005caa:	3010      	adds	r0, #16
 8005cac:	4611      	mov	r1, r2
 8005cae:	f7fd fd7e 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8005cb2:	4620      	mov	r0, r4
 8005cb4:	b002      	add	sp, #8
 8005cb6:	bd10      	pop	{r4, pc}
 8005cb8:	08030b74 	.word	0x08030b74
 8005cbc:	08030a7c 	.word	0x08030a7c
 8005cc0:	20013842 	.word	0x20013842
 8005cc4:	20013840 	.word	0x20013840

08005cc8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8005cc8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005ccc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005cd0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005cd2:	68a0      	ldr	r0, [r4, #8]
 8005cd4:	6803      	ldr	r3, [r0, #0]
 8005cd6:	6a1b      	ldr	r3, [r3, #32]
 8005cd8:	4798      	blx	r3
 8005cda:	f241 137b 	movw	r3, #4475	; 0x117b
 8005cde:	4298      	cmp	r0, r3
 8005ce0:	d805      	bhi.n	8005cee <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8005ce2:	4b42      	ldr	r3, [pc, #264]	; (8005dec <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8005ce4:	4a42      	ldr	r2, [pc, #264]	; (8005df0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005ce6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005ce8:	4842      	ldr	r0, [pc, #264]	; (8005df4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8005cea:	f027 ff05 	bl	802daf8 <__assert_func>
 8005cee:	6860      	ldr	r0, [r4, #4]
 8005cf0:	6803      	ldr	r3, [r0, #0]
 8005cf2:	6a1b      	ldr	r3, [r3, #32]
 8005cf4:	4798      	blx	r3
 8005cf6:	280f      	cmp	r0, #15
 8005cf8:	d803      	bhi.n	8005d02 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8005cfa:	4b3f      	ldr	r3, [pc, #252]	; (8005df8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8005cfc:	4a3c      	ldr	r2, [pc, #240]	; (8005df0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005cfe:	21a4      	movs	r1, #164	; 0xa4
 8005d00:	e7f2      	b.n	8005ce8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005d02:	68e0      	ldr	r0, [r4, #12]
 8005d04:	6803      	ldr	r3, [r0, #0]
 8005d06:	6a1b      	ldr	r3, [r3, #32]
 8005d08:	4798      	blx	r3
 8005d0a:	2837      	cmp	r0, #55	; 0x37
 8005d0c:	d803      	bhi.n	8005d16 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8005d0e:	4b3b      	ldr	r3, [pc, #236]	; (8005dfc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8005d10:	4a37      	ldr	r2, [pc, #220]	; (8005df0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005d12:	21a5      	movs	r1, #165	; 0xa5
 8005d14:	e7e8      	b.n	8005ce8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005d16:	f012 feab 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005d1a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005e00 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8005d1e:	3004      	adds	r0, #4
 8005d20:	f012 ff0c 	bl	8018b3c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005d24:	f8d9 0000 	ldr.w	r0, [r9]
 8005d28:	b110      	cbz	r0, 8005d30 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005d2a:	6803      	ldr	r3, [r0, #0]
 8005d2c:	68db      	ldr	r3, [r3, #12]
 8005d2e:	4798      	blx	r3
    if (*currentTrans)
 8005d30:	f8d9 0000 	ldr.w	r0, [r9]
 8005d34:	b110      	cbz	r0, 8005d3c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005d36:	6803      	ldr	r3, [r0, #0]
 8005d38:	681b      	ldr	r3, [r3, #0]
 8005d3a:	4798      	blx	r3
    if (*currentScreen)
 8005d3c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005e04 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8005d40:	f8d8 0000 	ldr.w	r0, [r8]
 8005d44:	b110      	cbz	r0, 8005d4c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005d46:	6803      	ldr	r3, [r0, #0]
 8005d48:	695b      	ldr	r3, [r3, #20]
 8005d4a:	4798      	blx	r3
    if (*currentPresenter)
 8005d4c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005d50:	b110      	cbz	r0, 8005d58 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005d52:	6803      	ldr	r3, [r0, #0]
 8005d54:	685b      	ldr	r3, [r3, #4]
 8005d56:	4798      	blx	r3
    if (*currentScreen)
 8005d58:	f8d8 0000 	ldr.w	r0, [r8]
 8005d5c:	b110      	cbz	r0, 8005d64 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005d5e:	6803      	ldr	r3, [r0, #0]
 8005d60:	681b      	ldr	r3, [r3, #0]
 8005d62:	4798      	blx	r3
    if (*currentPresenter)
 8005d64:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005d68:	b110      	cbz	r0, 8005d70 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005d6a:	6803      	ldr	r3, [r0, #0]
 8005d6c:	689b      	ldr	r3, [r3, #8]
 8005d6e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005d70:	68e0      	ldr	r0, [r4, #12]
 8005d72:	2100      	movs	r1, #0
 8005d74:	f7ff ff76 	bl	8005c64 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005d78:	2114      	movs	r1, #20
 8005d7a:	4605      	mov	r5, r0
 8005d7c:	f7ff ff76 	bl	8005c6c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005d80:	68a0      	ldr	r0, [r4, #8]
 8005d82:	6803      	ldr	r3, [r0, #0]
 8005d84:	2100      	movs	r1, #0
 8005d86:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d88:	4798      	blx	r3
 8005d8a:	4606      	mov	r6, r0
 8005d8c:	f005 f9b0 	bl	800b0f0 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005d90:	6860      	ldr	r0, [r4, #4]
 8005d92:	6803      	ldr	r3, [r0, #0]
 8005d94:	2100      	movs	r1, #0
 8005d96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d98:	4798      	blx	r3
 8005d9a:	4631      	mov	r1, r6
 8005d9c:	4604      	mov	r4, r0
 8005d9e:	f005 f981 	bl	800b0a4 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8005da2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005da6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005daa:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005dae:	b1dc      	cbz	r4, 8005de8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8005db0:	1d23      	adds	r3, r4, #4
 8005db2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005db6:	6833      	ldr	r3, [r6, #0]
 8005db8:	f8c4 a008 	str.w	sl, [r4, #8]
 8005dbc:	4630      	mov	r0, r6
 8005dbe:	68db      	ldr	r3, [r3, #12]
 8005dc0:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005dc2:	4798      	blx	r3
    newPresenter->activate();
 8005dc4:	6823      	ldr	r3, [r4, #0]
 8005dc6:	4620      	mov	r0, r4
 8005dc8:	681b      	ldr	r3, [r3, #0]
 8005dca:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005dcc:	4629      	mov	r1, r5
 8005dce:	4630      	mov	r0, r6
 8005dd0:	f014 fc7a 	bl	801a6c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005dd4:	682b      	ldr	r3, [r5, #0]
 8005dd6:	4628      	mov	r0, r5
 8005dd8:	691b      	ldr	r3, [r3, #16]
 8005dda:	4798      	blx	r3
    newTransition->invalidate();
 8005ddc:	682b      	ldr	r3, [r5, #0]
 8005dde:	4628      	mov	r0, r5
 8005de0:	695b      	ldr	r3, [r3, #20]
}
 8005de2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005de6:	4718      	bx	r3
    model->bind(newPresenter);
 8005de8:	4623      	mov	r3, r4
 8005dea:	e7e2      	b.n	8005db2 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8005dec:	0802f810 	.word	0x0802f810
 8005df0:	0802ffa9 	.word	0x0802ffa9
 8005df4:	0802f9ac 	.word	0x0802f9ac
 8005df8:	0802f9f3 	.word	0x0802f9f3
 8005dfc:	0802fa96 	.word	0x0802fa96
 8005e00:	20013894 	.word	0x20013894
 8005e04:	20013890 	.word	0x20013890

08005e08 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 8005e08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005e0c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005e10:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005e12:	68a0      	ldr	r0, [r4, #8]
 8005e14:	6803      	ldr	r3, [r0, #0]
 8005e16:	6a1b      	ldr	r3, [r3, #32]
 8005e18:	4798      	blx	r3
 8005e1a:	f641 5303 	movw	r3, #7427	; 0x1d03
 8005e1e:	4298      	cmp	r0, r3
 8005e20:	d805      	bhi.n	8005e2e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 8005e22:	4b42      	ldr	r3, [pc, #264]	; (8005f2c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 8005e24:	4a42      	ldr	r2, [pc, #264]	; (8005f30 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005e26:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005e28:	4842      	ldr	r0, [pc, #264]	; (8005f34 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8005e2a:	f027 fe65 	bl	802daf8 <__assert_func>
 8005e2e:	6860      	ldr	r0, [r4, #4]
 8005e30:	6803      	ldr	r3, [r0, #0]
 8005e32:	6a1b      	ldr	r3, [r3, #32]
 8005e34:	4798      	blx	r3
 8005e36:	280f      	cmp	r0, #15
 8005e38:	d803      	bhi.n	8005e42 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 8005e3a:	4b3f      	ldr	r3, [pc, #252]	; (8005f38 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8005e3c:	4a3c      	ldr	r2, [pc, #240]	; (8005f30 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005e3e:	21a4      	movs	r1, #164	; 0xa4
 8005e40:	e7f2      	b.n	8005e28 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005e42:	68e0      	ldr	r0, [r4, #12]
 8005e44:	6803      	ldr	r3, [r0, #0]
 8005e46:	6a1b      	ldr	r3, [r3, #32]
 8005e48:	4798      	blx	r3
 8005e4a:	2837      	cmp	r0, #55	; 0x37
 8005e4c:	d803      	bhi.n	8005e56 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8005e4e:	4b3b      	ldr	r3, [pc, #236]	; (8005f3c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8005e50:	4a37      	ldr	r2, [pc, #220]	; (8005f30 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005e52:	21a5      	movs	r1, #165	; 0xa5
 8005e54:	e7e8      	b.n	8005e28 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005e56:	f012 fe0b 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005e5a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005f40 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8005e5e:	3004      	adds	r0, #4
 8005e60:	f012 fe6c 	bl	8018b3c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005e64:	f8d9 0000 	ldr.w	r0, [r9]
 8005e68:	b110      	cbz	r0, 8005e70 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005e6a:	6803      	ldr	r3, [r0, #0]
 8005e6c:	68db      	ldr	r3, [r3, #12]
 8005e6e:	4798      	blx	r3
    if (*currentTrans)
 8005e70:	f8d9 0000 	ldr.w	r0, [r9]
 8005e74:	b110      	cbz	r0, 8005e7c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005e76:	6803      	ldr	r3, [r0, #0]
 8005e78:	681b      	ldr	r3, [r3, #0]
 8005e7a:	4798      	blx	r3
    if (*currentScreen)
 8005e7c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005f44 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8005e80:	f8d8 0000 	ldr.w	r0, [r8]
 8005e84:	b110      	cbz	r0, 8005e8c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005e86:	6803      	ldr	r3, [r0, #0]
 8005e88:	695b      	ldr	r3, [r3, #20]
 8005e8a:	4798      	blx	r3
    if (*currentPresenter)
 8005e8c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005e90:	b110      	cbz	r0, 8005e98 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005e92:	6803      	ldr	r3, [r0, #0]
 8005e94:	685b      	ldr	r3, [r3, #4]
 8005e96:	4798      	blx	r3
    if (*currentScreen)
 8005e98:	f8d8 0000 	ldr.w	r0, [r8]
 8005e9c:	b110      	cbz	r0, 8005ea4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005e9e:	6803      	ldr	r3, [r0, #0]
 8005ea0:	681b      	ldr	r3, [r3, #0]
 8005ea2:	4798      	blx	r3
    if (*currentPresenter)
 8005ea4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005ea8:	b110      	cbz	r0, 8005eb0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005eaa:	6803      	ldr	r3, [r0, #0]
 8005eac:	689b      	ldr	r3, [r3, #8]
 8005eae:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005eb0:	68e0      	ldr	r0, [r4, #12]
 8005eb2:	2100      	movs	r1, #0
 8005eb4:	f7ff fed6 	bl	8005c64 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005eb8:	2114      	movs	r1, #20
 8005eba:	4605      	mov	r5, r0
 8005ebc:	f7ff fed6 	bl	8005c6c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005ec0:	68a0      	ldr	r0, [r4, #8]
 8005ec2:	6803      	ldr	r3, [r0, #0]
 8005ec4:	2100      	movs	r1, #0
 8005ec6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ec8:	4798      	blx	r3
 8005eca:	4606      	mov	r6, r0
 8005ecc:	f004 fcd0 	bl	800a870 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005ed0:	6860      	ldr	r0, [r4, #4]
 8005ed2:	6803      	ldr	r3, [r0, #0]
 8005ed4:	2100      	movs	r1, #0
 8005ed6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ed8:	4798      	blx	r3
 8005eda:	4631      	mov	r1, r6
 8005edc:	4604      	mov	r4, r0
 8005ede:	f004 fca1 	bl	800a824 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 8005ee2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005ee6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005eea:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005eee:	b1dc      	cbz	r4, 8005f28 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 8005ef0:	1d23      	adds	r3, r4, #4
 8005ef2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005ef6:	6833      	ldr	r3, [r6, #0]
 8005ef8:	f8c4 a008 	str.w	sl, [r4, #8]
 8005efc:	4630      	mov	r0, r6
 8005efe:	68db      	ldr	r3, [r3, #12]
 8005f00:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005f02:	4798      	blx	r3
    newPresenter->activate();
 8005f04:	6823      	ldr	r3, [r4, #0]
 8005f06:	4620      	mov	r0, r4
 8005f08:	681b      	ldr	r3, [r3, #0]
 8005f0a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005f0c:	4629      	mov	r1, r5
 8005f0e:	4630      	mov	r0, r6
 8005f10:	f014 fbda 	bl	801a6c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005f14:	682b      	ldr	r3, [r5, #0]
 8005f16:	4628      	mov	r0, r5
 8005f18:	691b      	ldr	r3, [r3, #16]
 8005f1a:	4798      	blx	r3
    newTransition->invalidate();
 8005f1c:	682b      	ldr	r3, [r5, #0]
 8005f1e:	4628      	mov	r0, r5
 8005f20:	695b      	ldr	r3, [r3, #20]
}
 8005f22:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005f26:	4718      	bx	r3
    model->bind(newPresenter);
 8005f28:	4623      	mov	r3, r4
 8005f2a:	e7e2      	b.n	8005ef2 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8005f2c:	0802f810 	.word	0x0802f810
 8005f30:	080300c9 	.word	0x080300c9
 8005f34:	0802f9ac 	.word	0x0802f9ac
 8005f38:	0802f9f3 	.word	0x0802f9f3
 8005f3c:	0802fa96 	.word	0x0802fa96
 8005f40:	20013894 	.word	0x20013894
 8005f44:	20013890 	.word	0x20013890

08005f48 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8005f48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005f4c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005f50:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005f52:	68a0      	ldr	r0, [r4, #8]
 8005f54:	6803      	ldr	r3, [r0, #0]
 8005f56:	6a1b      	ldr	r3, [r3, #32]
 8005f58:	4798      	blx	r3
 8005f5a:	f241 4377 	movw	r3, #5239	; 0x1477
 8005f5e:	4298      	cmp	r0, r3
 8005f60:	d805      	bhi.n	8005f6e <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 8005f62:	4b42      	ldr	r3, [pc, #264]	; (800606c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8005f64:	4a42      	ldr	r2, [pc, #264]	; (8006070 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005f66:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005f68:	4842      	ldr	r0, [pc, #264]	; (8006074 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 8005f6a:	f027 fdc5 	bl	802daf8 <__assert_func>
 8005f6e:	6860      	ldr	r0, [r4, #4]
 8005f70:	6803      	ldr	r3, [r0, #0]
 8005f72:	6a1b      	ldr	r3, [r3, #32]
 8005f74:	4798      	blx	r3
 8005f76:	280f      	cmp	r0, #15
 8005f78:	d803      	bhi.n	8005f82 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 8005f7a:	4b3f      	ldr	r3, [pc, #252]	; (8006078 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8005f7c:	4a3c      	ldr	r2, [pc, #240]	; (8006070 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005f7e:	21a4      	movs	r1, #164	; 0xa4
 8005f80:	e7f2      	b.n	8005f68 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005f82:	68e0      	ldr	r0, [r4, #12]
 8005f84:	6803      	ldr	r3, [r0, #0]
 8005f86:	6a1b      	ldr	r3, [r3, #32]
 8005f88:	4798      	blx	r3
 8005f8a:	2837      	cmp	r0, #55	; 0x37
 8005f8c:	d803      	bhi.n	8005f96 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8005f8e:	4b3b      	ldr	r3, [pc, #236]	; (800607c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8005f90:	4a37      	ldr	r2, [pc, #220]	; (8006070 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005f92:	21a5      	movs	r1, #165	; 0xa5
 8005f94:	e7e8      	b.n	8005f68 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005f96:	f012 fd6b 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005f9a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006080 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 8005f9e:	3004      	adds	r0, #4
 8005fa0:	f012 fdcc 	bl	8018b3c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005fa4:	f8d9 0000 	ldr.w	r0, [r9]
 8005fa8:	b110      	cbz	r0, 8005fb0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005faa:	6803      	ldr	r3, [r0, #0]
 8005fac:	68db      	ldr	r3, [r3, #12]
 8005fae:	4798      	blx	r3
    if (*currentTrans)
 8005fb0:	f8d9 0000 	ldr.w	r0, [r9]
 8005fb4:	b110      	cbz	r0, 8005fbc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005fb6:	6803      	ldr	r3, [r0, #0]
 8005fb8:	681b      	ldr	r3, [r3, #0]
 8005fba:	4798      	blx	r3
    if (*currentScreen)
 8005fbc:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8006084 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 8005fc0:	f8d8 0000 	ldr.w	r0, [r8]
 8005fc4:	b110      	cbz	r0, 8005fcc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005fc6:	6803      	ldr	r3, [r0, #0]
 8005fc8:	695b      	ldr	r3, [r3, #20]
 8005fca:	4798      	blx	r3
    if (*currentPresenter)
 8005fcc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005fd0:	b110      	cbz	r0, 8005fd8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005fd2:	6803      	ldr	r3, [r0, #0]
 8005fd4:	685b      	ldr	r3, [r3, #4]
 8005fd6:	4798      	blx	r3
    if (*currentScreen)
 8005fd8:	f8d8 0000 	ldr.w	r0, [r8]
 8005fdc:	b110      	cbz	r0, 8005fe4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005fde:	6803      	ldr	r3, [r0, #0]
 8005fe0:	681b      	ldr	r3, [r3, #0]
 8005fe2:	4798      	blx	r3
    if (*currentPresenter)
 8005fe4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005fe8:	b110      	cbz	r0, 8005ff0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005fea:	6803      	ldr	r3, [r0, #0]
 8005fec:	689b      	ldr	r3, [r3, #8]
 8005fee:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005ff0:	68e0      	ldr	r0, [r4, #12]
 8005ff2:	2100      	movs	r1, #0
 8005ff4:	f7ff fe36 	bl	8005c64 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005ff8:	2114      	movs	r1, #20
 8005ffa:	4605      	mov	r5, r0
 8005ffc:	f7ff fe36 	bl	8005c6c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006000:	68a0      	ldr	r0, [r4, #8]
 8006002:	6803      	ldr	r3, [r0, #0]
 8006004:	2100      	movs	r1, #0
 8006006:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006008:	4798      	blx	r3
 800600a:	4606      	mov	r6, r0
 800600c:	f004 fec0 	bl	800ad90 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006010:	6860      	ldr	r0, [r4, #4]
 8006012:	6803      	ldr	r3, [r0, #0]
 8006014:	2100      	movs	r1, #0
 8006016:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006018:	4798      	blx	r3
 800601a:	4631      	mov	r1, r6
 800601c:	4604      	mov	r4, r0
 800601e:	f004 fe91 	bl	800ad44 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 8006022:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8006026:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800602a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800602e:	b1dc      	cbz	r4, 8006068 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8006030:	1d23      	adds	r3, r4, #4
 8006032:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006036:	6833      	ldr	r3, [r6, #0]
 8006038:	f8c4 a008 	str.w	sl, [r4, #8]
 800603c:	4630      	mov	r0, r6
 800603e:	68db      	ldr	r3, [r3, #12]
 8006040:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006042:	4798      	blx	r3
    newPresenter->activate();
 8006044:	6823      	ldr	r3, [r4, #0]
 8006046:	4620      	mov	r0, r4
 8006048:	681b      	ldr	r3, [r3, #0]
 800604a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800604c:	4629      	mov	r1, r5
 800604e:	4630      	mov	r0, r6
 8006050:	f014 fb3a 	bl	801a6c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8006054:	682b      	ldr	r3, [r5, #0]
 8006056:	4628      	mov	r0, r5
 8006058:	691b      	ldr	r3, [r3, #16]
 800605a:	4798      	blx	r3
    newTransition->invalidate();
 800605c:	682b      	ldr	r3, [r5, #0]
 800605e:	4628      	mov	r0, r5
 8006060:	695b      	ldr	r3, [r3, #20]
}
 8006062:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006066:	4718      	bx	r3
    model->bind(newPresenter);
 8006068:	4623      	mov	r3, r4
 800606a:	e7e2      	b.n	8006032 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 800606c:	0802f810 	.word	0x0802f810
 8006070:	080301ef 	.word	0x080301ef
 8006074:	0802f9ac 	.word	0x0802f9ac
 8006078:	0802f9f3 	.word	0x0802f9f3
 800607c:	0802fa96 	.word	0x0802fa96
 8006080:	20013894 	.word	0x20013894
 8006084:	20013890 	.word	0x20013890

08006088 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 8006088:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800608c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8006090:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8006092:	68a0      	ldr	r0, [r4, #8]
 8006094:	6803      	ldr	r3, [r0, #0]
 8006096:	6a1b      	ldr	r3, [r3, #32]
 8006098:	4798      	blx	r3
 800609a:	f241 4377 	movw	r3, #5239	; 0x1477
 800609e:	4298      	cmp	r0, r3
 80060a0:	d805      	bhi.n	80060ae <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 80060a2:	4b42      	ldr	r3, [pc, #264]	; (80061ac <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 80060a4:	4a42      	ldr	r2, [pc, #264]	; (80061b0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80060a6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80060a8:	4842      	ldr	r0, [pc, #264]	; (80061b4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 80060aa:	f027 fd25 	bl	802daf8 <__assert_func>
 80060ae:	6860      	ldr	r0, [r4, #4]
 80060b0:	6803      	ldr	r3, [r0, #0]
 80060b2:	6a1b      	ldr	r3, [r3, #32]
 80060b4:	4798      	blx	r3
 80060b6:	280f      	cmp	r0, #15
 80060b8:	d803      	bhi.n	80060c2 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 80060ba:	4b3f      	ldr	r3, [pc, #252]	; (80061b8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 80060bc:	4a3c      	ldr	r2, [pc, #240]	; (80061b0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80060be:	21a4      	movs	r1, #164	; 0xa4
 80060c0:	e7f2      	b.n	80060a8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80060c2:	68e0      	ldr	r0, [r4, #12]
 80060c4:	6803      	ldr	r3, [r0, #0]
 80060c6:	6a1b      	ldr	r3, [r3, #32]
 80060c8:	4798      	blx	r3
 80060ca:	2837      	cmp	r0, #55	; 0x37
 80060cc:	d803      	bhi.n	80060d6 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 80060ce:	4b3b      	ldr	r3, [pc, #236]	; (80061bc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 80060d0:	4a37      	ldr	r2, [pc, #220]	; (80061b0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80060d2:	21a5      	movs	r1, #165	; 0xa5
 80060d4:	e7e8      	b.n	80060a8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80060d6:	f012 fccb 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80060da:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80061c0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 80060de:	3004      	adds	r0, #4
 80060e0:	f012 fd2c 	bl	8018b3c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80060e4:	f8d9 0000 	ldr.w	r0, [r9]
 80060e8:	b110      	cbz	r0, 80060f0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80060ea:	6803      	ldr	r3, [r0, #0]
 80060ec:	68db      	ldr	r3, [r3, #12]
 80060ee:	4798      	blx	r3
    if (*currentTrans)
 80060f0:	f8d9 0000 	ldr.w	r0, [r9]
 80060f4:	b110      	cbz	r0, 80060fc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80060f6:	6803      	ldr	r3, [r0, #0]
 80060f8:	681b      	ldr	r3, [r3, #0]
 80060fa:	4798      	blx	r3
    if (*currentScreen)
 80060fc:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80061c4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 8006100:	f8d8 0000 	ldr.w	r0, [r8]
 8006104:	b110      	cbz	r0, 800610c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8006106:	6803      	ldr	r3, [r0, #0]
 8006108:	695b      	ldr	r3, [r3, #20]
 800610a:	4798      	blx	r3
    if (*currentPresenter)
 800610c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006110:	b110      	cbz	r0, 8006118 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8006112:	6803      	ldr	r3, [r0, #0]
 8006114:	685b      	ldr	r3, [r3, #4]
 8006116:	4798      	blx	r3
    if (*currentScreen)
 8006118:	f8d8 0000 	ldr.w	r0, [r8]
 800611c:	b110      	cbz	r0, 8006124 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800611e:	6803      	ldr	r3, [r0, #0]
 8006120:	681b      	ldr	r3, [r3, #0]
 8006122:	4798      	blx	r3
    if (*currentPresenter)
 8006124:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006128:	b110      	cbz	r0, 8006130 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800612a:	6803      	ldr	r3, [r0, #0]
 800612c:	689b      	ldr	r3, [r3, #8]
 800612e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006130:	68e0      	ldr	r0, [r4, #12]
 8006132:	2100      	movs	r1, #0
 8006134:	f7ff fd96 	bl	8005c64 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006138:	2114      	movs	r1, #20
 800613a:	4605      	mov	r5, r0
 800613c:	f7ff fd96 	bl	8005c6c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006140:	68a0      	ldr	r0, [r4, #8]
 8006142:	6803      	ldr	r3, [r0, #0]
 8006144:	2100      	movs	r1, #0
 8006146:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006148:	4798      	blx	r3
 800614a:	4606      	mov	r6, r0
 800614c:	f004 fdde 	bl	800ad0c <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006150:	6860      	ldr	r0, [r4, #4]
 8006152:	6803      	ldr	r3, [r0, #0]
 8006154:	2100      	movs	r1, #0
 8006156:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006158:	4798      	blx	r3
 800615a:	4631      	mov	r1, r6
 800615c:	4604      	mov	r4, r0
 800615e:	f004 fdaf 	bl	800acc0 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 8006162:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8006166:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800616a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800616e:	b1dc      	cbz	r4, 80061a8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8006170:	1d23      	adds	r3, r4, #4
 8006172:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006176:	6833      	ldr	r3, [r6, #0]
 8006178:	f8c4 a008 	str.w	sl, [r4, #8]
 800617c:	4630      	mov	r0, r6
 800617e:	68db      	ldr	r3, [r3, #12]
 8006180:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006182:	4798      	blx	r3
    newPresenter->activate();
 8006184:	6823      	ldr	r3, [r4, #0]
 8006186:	4620      	mov	r0, r4
 8006188:	681b      	ldr	r3, [r3, #0]
 800618a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800618c:	4629      	mov	r1, r5
 800618e:	4630      	mov	r0, r6
 8006190:	f014 fa9a 	bl	801a6c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8006194:	682b      	ldr	r3, [r5, #0]
 8006196:	4628      	mov	r0, r5
 8006198:	691b      	ldr	r3, [r3, #16]
 800619a:	4798      	blx	r3
    newTransition->invalidate();
 800619c:	682b      	ldr	r3, [r5, #0]
 800619e:	4628      	mov	r0, r5
 80061a0:	695b      	ldr	r3, [r3, #20]
}
 80061a2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80061a6:	4718      	bx	r3
    model->bind(newPresenter);
 80061a8:	4623      	mov	r3, r4
 80061aa:	e7e2      	b.n	8006172 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 80061ac:	0802f810 	.word	0x0802f810
 80061b0:	08030333 	.word	0x08030333
 80061b4:	0802f9ac 	.word	0x0802f9ac
 80061b8:	0802f9f3 	.word	0x0802f9f3
 80061bc:	0802fa96 	.word	0x0802fa96
 80061c0:	20013894 	.word	0x20013894
 80061c4:	20013890 	.word	0x20013890

080061c8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 80061c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80061cc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80061d0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80061d2:	68a0      	ldr	r0, [r4, #8]
 80061d4:	6803      	ldr	r3, [r0, #0]
 80061d6:	6a1b      	ldr	r3, [r3, #32]
 80061d8:	4798      	blx	r3
 80061da:	f241 13c3 	movw	r3, #4547	; 0x11c3
 80061de:	4298      	cmp	r0, r3
 80061e0:	d805      	bhi.n	80061ee <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x26>
 80061e2:	4b42      	ldr	r3, [pc, #264]	; (80062ec <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 80061e4:	4a42      	ldr	r2, [pc, #264]	; (80062f0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80061e6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80061e8:	4842      	ldr	r0, [pc, #264]	; (80062f4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 80061ea:	f027 fc85 	bl	802daf8 <__assert_func>
 80061ee:	6860      	ldr	r0, [r4, #4]
 80061f0:	6803      	ldr	r3, [r0, #0]
 80061f2:	6a1b      	ldr	r3, [r3, #32]
 80061f4:	4798      	blx	r3
 80061f6:	280f      	cmp	r0, #15
 80061f8:	d803      	bhi.n	8006202 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x3a>
 80061fa:	4b3f      	ldr	r3, [pc, #252]	; (80062f8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 80061fc:	4a3c      	ldr	r2, [pc, #240]	; (80062f0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80061fe:	21a4      	movs	r1, #164	; 0xa4
 8006200:	e7f2      	b.n	80061e8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8006202:	68e0      	ldr	r0, [r4, #12]
 8006204:	6803      	ldr	r3, [r0, #0]
 8006206:	6a1b      	ldr	r3, [r3, #32]
 8006208:	4798      	blx	r3
 800620a:	2837      	cmp	r0, #55	; 0x37
 800620c:	d803      	bhi.n	8006216 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4e>
 800620e:	4b3b      	ldr	r3, [pc, #236]	; (80062fc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 8006210:	4a37      	ldr	r2, [pc, #220]	; (80062f0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8006212:	21a5      	movs	r1, #165	; 0xa5
 8006214:	e7e8      	b.n	80061e8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8006216:	f012 fc2b 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800621a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006300 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 800621e:	3004      	adds	r0, #4
 8006220:	f012 fc8c 	bl	8018b3c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8006224:	f8d9 0000 	ldr.w	r0, [r9]
 8006228:	b110      	cbz	r0, 8006230 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800622a:	6803      	ldr	r3, [r0, #0]
 800622c:	68db      	ldr	r3, [r3, #12]
 800622e:	4798      	blx	r3
    if (*currentTrans)
 8006230:	f8d9 0000 	ldr.w	r0, [r9]
 8006234:	b110      	cbz	r0, 800623c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8006236:	6803      	ldr	r3, [r0, #0]
 8006238:	681b      	ldr	r3, [r3, #0]
 800623a:	4798      	blx	r3
    if (*currentScreen)
 800623c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8006304 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8006240:	f8d8 0000 	ldr.w	r0, [r8]
 8006244:	b110      	cbz	r0, 800624c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8006246:	6803      	ldr	r3, [r0, #0]
 8006248:	695b      	ldr	r3, [r3, #20]
 800624a:	4798      	blx	r3
    if (*currentPresenter)
 800624c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006250:	b110      	cbz	r0, 8006258 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8006252:	6803      	ldr	r3, [r0, #0]
 8006254:	685b      	ldr	r3, [r3, #4]
 8006256:	4798      	blx	r3
    if (*currentScreen)
 8006258:	f8d8 0000 	ldr.w	r0, [r8]
 800625c:	b110      	cbz	r0, 8006264 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800625e:	6803      	ldr	r3, [r0, #0]
 8006260:	681b      	ldr	r3, [r3, #0]
 8006262:	4798      	blx	r3
    if (*currentPresenter)
 8006264:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006268:	b110      	cbz	r0, 8006270 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800626a:	6803      	ldr	r3, [r0, #0]
 800626c:	689b      	ldr	r3, [r3, #8]
 800626e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006270:	68e0      	ldr	r0, [r4, #12]
 8006272:	2100      	movs	r1, #0
 8006274:	f7ff fcf6 	bl	8005c64 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006278:	2114      	movs	r1, #20
 800627a:	4605      	mov	r5, r0
 800627c:	f7ff fcf6 	bl	8005c6c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006280:	68a0      	ldr	r0, [r4, #8]
 8006282:	6803      	ldr	r3, [r0, #0]
 8006284:	2100      	movs	r1, #0
 8006286:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006288:	4798      	blx	r3
 800628a:	4606      	mov	r6, r0
 800628c:	f004 fce4 	bl	800ac58 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006290:	6860      	ldr	r0, [r4, #4]
 8006292:	6803      	ldr	r3, [r0, #0]
 8006294:	2100      	movs	r1, #0
 8006296:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006298:	4798      	blx	r3
 800629a:	4631      	mov	r1, r6
 800629c:	4604      	mov	r4, r0
 800629e:	f004 fcb5 	bl	800ac0c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 80062a2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80062a6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80062aa:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80062ae:	b1dc      	cbz	r4, 80062e8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x120>
 80062b0:	1d23      	adds	r3, r4, #4
 80062b2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80062b6:	6833      	ldr	r3, [r6, #0]
 80062b8:	f8c4 a008 	str.w	sl, [r4, #8]
 80062bc:	4630      	mov	r0, r6
 80062be:	68db      	ldr	r3, [r3, #12]
 80062c0:	63f4      	str	r4, [r6, #60]	; 0x3c
 80062c2:	4798      	blx	r3
    newPresenter->activate();
 80062c4:	6823      	ldr	r3, [r4, #0]
 80062c6:	4620      	mov	r0, r4
 80062c8:	681b      	ldr	r3, [r3, #0]
 80062ca:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80062cc:	4629      	mov	r1, r5
 80062ce:	4630      	mov	r0, r6
 80062d0:	f014 f9fa 	bl	801a6c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80062d4:	682b      	ldr	r3, [r5, #0]
 80062d6:	4628      	mov	r0, r5
 80062d8:	691b      	ldr	r3, [r3, #16]
 80062da:	4798      	blx	r3
    newTransition->invalidate();
 80062dc:	682b      	ldr	r3, [r5, #0]
 80062de:	4628      	mov	r0, r5
 80062e0:	695b      	ldr	r3, [r3, #20]
}
 80062e2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80062e6:	4718      	bx	r3
    model->bind(newPresenter);
 80062e8:	4623      	mov	r3, r4
 80062ea:	e7e2      	b.n	80062b2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xea>
 80062ec:	0802f810 	.word	0x0802f810
 80062f0:	08030473 	.word	0x08030473
 80062f4:	0802f9ac 	.word	0x0802f9ac
 80062f8:	0802f9f3 	.word	0x0802f9f3
 80062fc:	0802fa96 	.word	0x0802fa96
 8006300:	20013894 	.word	0x20013894
 8006304:	20013890 	.word	0x20013890

08006308 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 8006308:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800630c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8006310:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8006312:	68a0      	ldr	r0, [r4, #8]
 8006314:	6803      	ldr	r3, [r0, #0]
 8006316:	6a1b      	ldr	r3, [r3, #32]
 8006318:	4798      	blx	r3
 800631a:	f241 4377 	movw	r3, #5239	; 0x1477
 800631e:	4298      	cmp	r0, r3
 8006320:	d805      	bhi.n	800632e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 8006322:	4b42      	ldr	r3, [pc, #264]	; (800642c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8006324:	4a42      	ldr	r2, [pc, #264]	; (8006430 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8006326:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8006328:	4842      	ldr	r0, [pc, #264]	; (8006434 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 800632a:	f027 fbe5 	bl	802daf8 <__assert_func>
 800632e:	6860      	ldr	r0, [r4, #4]
 8006330:	6803      	ldr	r3, [r0, #0]
 8006332:	6a1b      	ldr	r3, [r3, #32]
 8006334:	4798      	blx	r3
 8006336:	280f      	cmp	r0, #15
 8006338:	d803      	bhi.n	8006342 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 800633a:	4b3f      	ldr	r3, [pc, #252]	; (8006438 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 800633c:	4a3c      	ldr	r2, [pc, #240]	; (8006430 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800633e:	21a4      	movs	r1, #164	; 0xa4
 8006340:	e7f2      	b.n	8006328 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8006342:	68e0      	ldr	r0, [r4, #12]
 8006344:	6803      	ldr	r3, [r0, #0]
 8006346:	6a1b      	ldr	r3, [r3, #32]
 8006348:	4798      	blx	r3
 800634a:	2837      	cmp	r0, #55	; 0x37
 800634c:	d803      	bhi.n	8006356 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 800634e:	4b3b      	ldr	r3, [pc, #236]	; (800643c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8006350:	4a37      	ldr	r2, [pc, #220]	; (8006430 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8006352:	21a5      	movs	r1, #165	; 0xa5
 8006354:	e7e8      	b.n	8006328 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8006356:	f012 fb8b 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800635a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006440 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 800635e:	3004      	adds	r0, #4
 8006360:	f012 fbec 	bl	8018b3c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8006364:	f8d9 0000 	ldr.w	r0, [r9]
 8006368:	b110      	cbz	r0, 8006370 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800636a:	6803      	ldr	r3, [r0, #0]
 800636c:	68db      	ldr	r3, [r3, #12]
 800636e:	4798      	blx	r3
    if (*currentTrans)
 8006370:	f8d9 0000 	ldr.w	r0, [r9]
 8006374:	b110      	cbz	r0, 800637c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8006376:	6803      	ldr	r3, [r0, #0]
 8006378:	681b      	ldr	r3, [r3, #0]
 800637a:	4798      	blx	r3
    if (*currentScreen)
 800637c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8006444 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8006380:	f8d8 0000 	ldr.w	r0, [r8]
 8006384:	b110      	cbz	r0, 800638c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8006386:	6803      	ldr	r3, [r0, #0]
 8006388:	695b      	ldr	r3, [r3, #20]
 800638a:	4798      	blx	r3
    if (*currentPresenter)
 800638c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006390:	b110      	cbz	r0, 8006398 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8006392:	6803      	ldr	r3, [r0, #0]
 8006394:	685b      	ldr	r3, [r3, #4]
 8006396:	4798      	blx	r3
    if (*currentScreen)
 8006398:	f8d8 0000 	ldr.w	r0, [r8]
 800639c:	b110      	cbz	r0, 80063a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800639e:	6803      	ldr	r3, [r0, #0]
 80063a0:	681b      	ldr	r3, [r3, #0]
 80063a2:	4798      	blx	r3
    if (*currentPresenter)
 80063a4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80063a8:	b110      	cbz	r0, 80063b0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80063aa:	6803      	ldr	r3, [r0, #0]
 80063ac:	689b      	ldr	r3, [r3, #8]
 80063ae:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80063b0:	68e0      	ldr	r0, [r4, #12]
 80063b2:	2100      	movs	r1, #0
 80063b4:	f7ff fc56 	bl	8005c64 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80063b8:	2114      	movs	r1, #20
 80063ba:	4605      	mov	r5, r0
 80063bc:	f7ff fc56 	bl	8005c6c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80063c0:	68a0      	ldr	r0, [r4, #8]
 80063c2:	6803      	ldr	r3, [r0, #0]
 80063c4:	2100      	movs	r1, #0
 80063c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80063c8:	4798      	blx	r3
 80063ca:	4606      	mov	r6, r0
 80063cc:	f004 fe2a 	bl	800b024 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80063d0:	6860      	ldr	r0, [r4, #4]
 80063d2:	6803      	ldr	r3, [r0, #0]
 80063d4:	2100      	movs	r1, #0
 80063d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80063d8:	4798      	blx	r3
 80063da:	4631      	mov	r1, r6
 80063dc:	4604      	mov	r4, r0
 80063de:	f004 fdfb 	bl	800afd8 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 80063e2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80063e6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80063ea:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80063ee:	b1dc      	cbz	r4, 8006428 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 80063f0:	1d23      	adds	r3, r4, #4
 80063f2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80063f6:	6833      	ldr	r3, [r6, #0]
 80063f8:	f8c4 a008 	str.w	sl, [r4, #8]
 80063fc:	4630      	mov	r0, r6
 80063fe:	68db      	ldr	r3, [r3, #12]
 8006400:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006402:	4798      	blx	r3
    newPresenter->activate();
 8006404:	6823      	ldr	r3, [r4, #0]
 8006406:	4620      	mov	r0, r4
 8006408:	681b      	ldr	r3, [r3, #0]
 800640a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800640c:	4629      	mov	r1, r5
 800640e:	4630      	mov	r0, r6
 8006410:	f014 f95a 	bl	801a6c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8006414:	682b      	ldr	r3, [r5, #0]
 8006416:	4628      	mov	r0, r5
 8006418:	691b      	ldr	r3, [r3, #16]
 800641a:	4798      	blx	r3
    newTransition->invalidate();
 800641c:	682b      	ldr	r3, [r5, #0]
 800641e:	4628      	mov	r0, r5
 8006420:	695b      	ldr	r3, [r3, #20]
}
 8006422:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006426:	4718      	bx	r3
    model->bind(newPresenter);
 8006428:	4623      	mov	r3, r4
 800642a:	e7e2      	b.n	80063f2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 800642c:	0802f810 	.word	0x0802f810
 8006430:	080305a3 	.word	0x080305a3
 8006434:	0802f9ac 	.word	0x0802f9ac
 8006438:	0802f9f3 	.word	0x0802f9f3
 800643c:	0802fa96 	.word	0x0802fa96
 8006440:	20013894 	.word	0x20013894
 8006444:	20013890 	.word	0x20013890

08006448 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8006448:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800644c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8006450:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8006452:	68a0      	ldr	r0, [r4, #8]
 8006454:	6803      	ldr	r3, [r0, #0]
 8006456:	6a1b      	ldr	r3, [r3, #32]
 8006458:	4798      	blx	r3
 800645a:	f241 437b 	movw	r3, #5243	; 0x147b
 800645e:	4298      	cmp	r0, r3
 8006460:	d805      	bhi.n	800646e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8006462:	4b42      	ldr	r3, [pc, #264]	; (800656c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8006464:	4a42      	ldr	r2, [pc, #264]	; (8006570 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8006466:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8006468:	4842      	ldr	r0, [pc, #264]	; (8006574 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 800646a:	f027 fb45 	bl	802daf8 <__assert_func>
 800646e:	6860      	ldr	r0, [r4, #4]
 8006470:	6803      	ldr	r3, [r0, #0]
 8006472:	6a1b      	ldr	r3, [r3, #32]
 8006474:	4798      	blx	r3
 8006476:	280f      	cmp	r0, #15
 8006478:	d803      	bhi.n	8006482 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 800647a:	4b3f      	ldr	r3, [pc, #252]	; (8006578 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 800647c:	4a3c      	ldr	r2, [pc, #240]	; (8006570 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 800647e:	21a4      	movs	r1, #164	; 0xa4
 8006480:	e7f2      	b.n	8006468 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8006482:	68e0      	ldr	r0, [r4, #12]
 8006484:	6803      	ldr	r3, [r0, #0]
 8006486:	6a1b      	ldr	r3, [r3, #32]
 8006488:	4798      	blx	r3
 800648a:	2837      	cmp	r0, #55	; 0x37
 800648c:	d803      	bhi.n	8006496 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 800648e:	4b3b      	ldr	r3, [pc, #236]	; (800657c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8006490:	4a37      	ldr	r2, [pc, #220]	; (8006570 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8006492:	21a5      	movs	r1, #165	; 0xa5
 8006494:	e7e8      	b.n	8006468 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8006496:	f012 faeb 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800649a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006580 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 800649e:	3004      	adds	r0, #4
 80064a0:	f012 fb4c 	bl	8018b3c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80064a4:	f8d9 0000 	ldr.w	r0, [r9]
 80064a8:	b110      	cbz	r0, 80064b0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80064aa:	6803      	ldr	r3, [r0, #0]
 80064ac:	68db      	ldr	r3, [r3, #12]
 80064ae:	4798      	blx	r3
    if (*currentTrans)
 80064b0:	f8d9 0000 	ldr.w	r0, [r9]
 80064b4:	b110      	cbz	r0, 80064bc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80064b6:	6803      	ldr	r3, [r0, #0]
 80064b8:	681b      	ldr	r3, [r3, #0]
 80064ba:	4798      	blx	r3
    if (*currentScreen)
 80064bc:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8006584 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 80064c0:	f8d8 0000 	ldr.w	r0, [r8]
 80064c4:	b110      	cbz	r0, 80064cc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80064c6:	6803      	ldr	r3, [r0, #0]
 80064c8:	695b      	ldr	r3, [r3, #20]
 80064ca:	4798      	blx	r3
    if (*currentPresenter)
 80064cc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80064d0:	b110      	cbz	r0, 80064d8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80064d2:	6803      	ldr	r3, [r0, #0]
 80064d4:	685b      	ldr	r3, [r3, #4]
 80064d6:	4798      	blx	r3
    if (*currentScreen)
 80064d8:	f8d8 0000 	ldr.w	r0, [r8]
 80064dc:	b110      	cbz	r0, 80064e4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80064de:	6803      	ldr	r3, [r0, #0]
 80064e0:	681b      	ldr	r3, [r3, #0]
 80064e2:	4798      	blx	r3
    if (*currentPresenter)
 80064e4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80064e8:	b110      	cbz	r0, 80064f0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80064ea:	6803      	ldr	r3, [r0, #0]
 80064ec:	689b      	ldr	r3, [r3, #8]
 80064ee:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80064f0:	68e0      	ldr	r0, [r4, #12]
 80064f2:	2100      	movs	r1, #0
 80064f4:	f7ff fbb6 	bl	8005c64 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80064f8:	2114      	movs	r1, #20
 80064fa:	4605      	mov	r5, r0
 80064fc:	f7ff fbb6 	bl	8005c6c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006500:	68a0      	ldr	r0, [r4, #8]
 8006502:	6803      	ldr	r3, [r0, #0]
 8006504:	2100      	movs	r1, #0
 8006506:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006508:	4798      	blx	r3
 800650a:	4606      	mov	r6, r0
 800650c:	f004 fce2 	bl	800aed4 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006510:	6860      	ldr	r0, [r4, #4]
 8006512:	6803      	ldr	r3, [r0, #0]
 8006514:	2100      	movs	r1, #0
 8006516:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006518:	4798      	blx	r3
 800651a:	4631      	mov	r1, r6
 800651c:	4604      	mov	r4, r0
 800651e:	f004 fcb3 	bl	800ae88 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8006522:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8006526:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800652a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800652e:	b1dc      	cbz	r4, 8006568 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8006530:	1d23      	adds	r3, r4, #4
 8006532:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006536:	6833      	ldr	r3, [r6, #0]
 8006538:	f8c4 a008 	str.w	sl, [r4, #8]
 800653c:	4630      	mov	r0, r6
 800653e:	68db      	ldr	r3, [r3, #12]
 8006540:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006542:	4798      	blx	r3
    newPresenter->activate();
 8006544:	6823      	ldr	r3, [r4, #0]
 8006546:	4620      	mov	r0, r4
 8006548:	681b      	ldr	r3, [r3, #0]
 800654a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800654c:	4629      	mov	r1, r5
 800654e:	4630      	mov	r0, r6
 8006550:	f014 f8ba 	bl	801a6c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8006554:	682b      	ldr	r3, [r5, #0]
 8006556:	4628      	mov	r0, r5
 8006558:	691b      	ldr	r3, [r3, #16]
 800655a:	4798      	blx	r3
    newTransition->invalidate();
 800655c:	682b      	ldr	r3, [r5, #0]
 800655e:	4628      	mov	r0, r5
 8006560:	695b      	ldr	r3, [r3, #20]
}
 8006562:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006566:	4718      	bx	r3
    model->bind(newPresenter);
 8006568:	4623      	mov	r3, r4
 800656a:	e7e2      	b.n	8006532 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 800656c:	0802f810 	.word	0x0802f810
 8006570:	080306e5 	.word	0x080306e5
 8006574:	0802f9ac 	.word	0x0802f9ac
 8006578:	0802f9f3 	.word	0x0802f9f3
 800657c:	0802fa96 	.word	0x0802fa96
 8006580:	20013894 	.word	0x20013894
 8006584:	20013890 	.word	0x20013890

08006588 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8006588:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800658c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8006590:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8006592:	68a0      	ldr	r0, [r4, #8]
 8006594:	6803      	ldr	r3, [r0, #0]
 8006596:	6a1b      	ldr	r3, [r3, #32]
 8006598:	4798      	blx	r3
 800659a:	f241 13c3 	movw	r3, #4547	; 0x11c3
 800659e:	4298      	cmp	r0, r3
 80065a0:	d805      	bhi.n	80065ae <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x26>
 80065a2:	4b42      	ldr	r3, [pc, #264]	; (80066ac <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 80065a4:	4a42      	ldr	r2, [pc, #264]	; (80066b0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80065a6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80065a8:	4842      	ldr	r0, [pc, #264]	; (80066b4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 80065aa:	f027 faa5 	bl	802daf8 <__assert_func>
 80065ae:	6860      	ldr	r0, [r4, #4]
 80065b0:	6803      	ldr	r3, [r0, #0]
 80065b2:	6a1b      	ldr	r3, [r3, #32]
 80065b4:	4798      	blx	r3
 80065b6:	280f      	cmp	r0, #15
 80065b8:	d803      	bhi.n	80065c2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x3a>
 80065ba:	4b3f      	ldr	r3, [pc, #252]	; (80066b8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 80065bc:	4a3c      	ldr	r2, [pc, #240]	; (80066b0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80065be:	21a4      	movs	r1, #164	; 0xa4
 80065c0:	e7f2      	b.n	80065a8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80065c2:	68e0      	ldr	r0, [r4, #12]
 80065c4:	6803      	ldr	r3, [r0, #0]
 80065c6:	6a1b      	ldr	r3, [r3, #32]
 80065c8:	4798      	blx	r3
 80065ca:	2837      	cmp	r0, #55	; 0x37
 80065cc:	d803      	bhi.n	80065d6 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4e>
 80065ce:	4b3b      	ldr	r3, [pc, #236]	; (80066bc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 80065d0:	4a37      	ldr	r2, [pc, #220]	; (80066b0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80065d2:	21a5      	movs	r1, #165	; 0xa5
 80065d4:	e7e8      	b.n	80065a8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80065d6:	f012 fa4b 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80065da:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80066c0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 80065de:	3004      	adds	r0, #4
 80065e0:	f012 faac 	bl	8018b3c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80065e4:	f8d9 0000 	ldr.w	r0, [r9]
 80065e8:	b110      	cbz	r0, 80065f0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80065ea:	6803      	ldr	r3, [r0, #0]
 80065ec:	68db      	ldr	r3, [r3, #12]
 80065ee:	4798      	blx	r3
    if (*currentTrans)
 80065f0:	f8d9 0000 	ldr.w	r0, [r9]
 80065f4:	b110      	cbz	r0, 80065fc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80065f6:	6803      	ldr	r3, [r0, #0]
 80065f8:	681b      	ldr	r3, [r3, #0]
 80065fa:	4798      	blx	r3
    if (*currentScreen)
 80065fc:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80066c4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8006600:	f8d8 0000 	ldr.w	r0, [r8]
 8006604:	b110      	cbz	r0, 800660c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8006606:	6803      	ldr	r3, [r0, #0]
 8006608:	695b      	ldr	r3, [r3, #20]
 800660a:	4798      	blx	r3
    if (*currentPresenter)
 800660c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006610:	b110      	cbz	r0, 8006618 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8006612:	6803      	ldr	r3, [r0, #0]
 8006614:	685b      	ldr	r3, [r3, #4]
 8006616:	4798      	blx	r3
    if (*currentScreen)
 8006618:	f8d8 0000 	ldr.w	r0, [r8]
 800661c:	b110      	cbz	r0, 8006624 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800661e:	6803      	ldr	r3, [r0, #0]
 8006620:	681b      	ldr	r3, [r3, #0]
 8006622:	4798      	blx	r3
    if (*currentPresenter)
 8006624:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006628:	b110      	cbz	r0, 8006630 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800662a:	6803      	ldr	r3, [r0, #0]
 800662c:	689b      	ldr	r3, [r3, #8]
 800662e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006630:	68e0      	ldr	r0, [r4, #12]
 8006632:	2100      	movs	r1, #0
 8006634:	f7ff fb16 	bl	8005c64 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006638:	2114      	movs	r1, #20
 800663a:	4605      	mov	r5, r0
 800663c:	f7ff fb16 	bl	8005c6c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006640:	68a0      	ldr	r0, [r4, #8]
 8006642:	6803      	ldr	r3, [r0, #0]
 8006644:	2100      	movs	r1, #0
 8006646:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006648:	4798      	blx	r3
 800664a:	4606      	mov	r6, r0
 800664c:	f004 fbe8 	bl	800ae20 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006650:	6860      	ldr	r0, [r4, #4]
 8006652:	6803      	ldr	r3, [r0, #0]
 8006654:	2100      	movs	r1, #0
 8006656:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006658:	4798      	blx	r3
 800665a:	4631      	mov	r1, r6
 800665c:	4604      	mov	r4, r0
 800665e:	f004 fbb9 	bl	800add4 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8006662:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8006666:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800666a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800666e:	b1dc      	cbz	r4, 80066a8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x120>
 8006670:	1d23      	adds	r3, r4, #4
 8006672:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006676:	6833      	ldr	r3, [r6, #0]
 8006678:	f8c4 a008 	str.w	sl, [r4, #8]
 800667c:	4630      	mov	r0, r6
 800667e:	68db      	ldr	r3, [r3, #12]
 8006680:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006682:	4798      	blx	r3
    newPresenter->activate();
 8006684:	6823      	ldr	r3, [r4, #0]
 8006686:	4620      	mov	r0, r4
 8006688:	681b      	ldr	r3, [r3, #0]
 800668a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800668c:	4629      	mov	r1, r5
 800668e:	4630      	mov	r0, r6
 8006690:	f014 f81a 	bl	801a6c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8006694:	682b      	ldr	r3, [r5, #0]
 8006696:	4628      	mov	r0, r5
 8006698:	691b      	ldr	r3, [r3, #16]
 800669a:	4798      	blx	r3
    newTransition->invalidate();
 800669c:	682b      	ldr	r3, [r5, #0]
 800669e:	4628      	mov	r0, r5
 80066a0:	695b      	ldr	r3, [r3, #20]
}
 80066a2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80066a6:	4718      	bx	r3
    model->bind(newPresenter);
 80066a8:	4623      	mov	r3, r4
 80066aa:	e7e2      	b.n	8006672 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xea>
 80066ac:	0802f810 	.word	0x0802f810
 80066b0:	08030827 	.word	0x08030827
 80066b4:	0802f9ac 	.word	0x0802f9ac
 80066b8:	0802f9f3 	.word	0x0802f9f3
 80066bc:	0802fa96 	.word	0x0802fa96
 80066c0:	20013894 	.word	0x20013894
 80066c4:	20013890 	.word	0x20013890

080066c8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 80066c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80066cc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80066d0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80066d2:	68a0      	ldr	r0, [r4, #8]
 80066d4:	6803      	ldr	r3, [r0, #0]
 80066d6:	6a1b      	ldr	r3, [r3, #32]
 80066d8:	4798      	blx	r3
 80066da:	f241 13c3 	movw	r3, #4547	; 0x11c3
 80066de:	4298      	cmp	r0, r3
 80066e0:	d805      	bhi.n	80066ee <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x26>
 80066e2:	4b42      	ldr	r3, [pc, #264]	; (80067ec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 80066e4:	4a42      	ldr	r2, [pc, #264]	; (80067f0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 80066e6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80066e8:	4842      	ldr	r0, [pc, #264]	; (80067f4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 80066ea:	f027 fa05 	bl	802daf8 <__assert_func>
 80066ee:	6860      	ldr	r0, [r4, #4]
 80066f0:	6803      	ldr	r3, [r0, #0]
 80066f2:	6a1b      	ldr	r3, [r3, #32]
 80066f4:	4798      	blx	r3
 80066f6:	280f      	cmp	r0, #15
 80066f8:	d803      	bhi.n	8006702 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x3a>
 80066fa:	4b3f      	ldr	r3, [pc, #252]	; (80067f8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 80066fc:	4a3c      	ldr	r2, [pc, #240]	; (80067f0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 80066fe:	21a4      	movs	r1, #164	; 0xa4
 8006700:	e7f2      	b.n	80066e8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8006702:	68e0      	ldr	r0, [r4, #12]
 8006704:	6803      	ldr	r3, [r0, #0]
 8006706:	6a1b      	ldr	r3, [r3, #32]
 8006708:	4798      	blx	r3
 800670a:	2837      	cmp	r0, #55	; 0x37
 800670c:	d803      	bhi.n	8006716 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4e>
 800670e:	4b3b      	ldr	r3, [pc, #236]	; (80067fc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8006710:	4a37      	ldr	r2, [pc, #220]	; (80067f0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8006712:	21a5      	movs	r1, #165	; 0xa5
 8006714:	e7e8      	b.n	80066e8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8006716:	f012 f9ab 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800671a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006800 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 800671e:	3004      	adds	r0, #4
 8006720:	f012 fa0c 	bl	8018b3c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8006724:	f8d9 0000 	ldr.w	r0, [r9]
 8006728:	b110      	cbz	r0, 8006730 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800672a:	6803      	ldr	r3, [r0, #0]
 800672c:	68db      	ldr	r3, [r3, #12]
 800672e:	4798      	blx	r3
    if (*currentTrans)
 8006730:	f8d9 0000 	ldr.w	r0, [r9]
 8006734:	b110      	cbz	r0, 800673c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8006736:	6803      	ldr	r3, [r0, #0]
 8006738:	681b      	ldr	r3, [r3, #0]
 800673a:	4798      	blx	r3
    if (*currentScreen)
 800673c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8006804 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8006740:	f8d8 0000 	ldr.w	r0, [r8]
 8006744:	b110      	cbz	r0, 800674c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8006746:	6803      	ldr	r3, [r0, #0]
 8006748:	695b      	ldr	r3, [r3, #20]
 800674a:	4798      	blx	r3
    if (*currentPresenter)
 800674c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006750:	b110      	cbz	r0, 8006758 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8006752:	6803      	ldr	r3, [r0, #0]
 8006754:	685b      	ldr	r3, [r3, #4]
 8006756:	4798      	blx	r3
    if (*currentScreen)
 8006758:	f8d8 0000 	ldr.w	r0, [r8]
 800675c:	b110      	cbz	r0, 8006764 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800675e:	6803      	ldr	r3, [r0, #0]
 8006760:	681b      	ldr	r3, [r3, #0]
 8006762:	4798      	blx	r3
    if (*currentPresenter)
 8006764:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006768:	b110      	cbz	r0, 8006770 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800676a:	6803      	ldr	r3, [r0, #0]
 800676c:	689b      	ldr	r3, [r3, #8]
 800676e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006770:	68e0      	ldr	r0, [r4, #12]
 8006772:	2100      	movs	r1, #0
 8006774:	f7ff fa76 	bl	8005c64 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006778:	2114      	movs	r1, #20
 800677a:	4605      	mov	r5, r0
 800677c:	f7ff fa76 	bl	8005c6c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006780:	68a0      	ldr	r0, [r4, #8]
 8006782:	6803      	ldr	r3, [r0, #0]
 8006784:	2100      	movs	r1, #0
 8006786:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006788:	4798      	blx	r3
 800678a:	4606      	mov	r6, r0
 800678c:	f004 fa04 	bl	800ab98 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006790:	6860      	ldr	r0, [r4, #4]
 8006792:	6803      	ldr	r3, [r0, #0]
 8006794:	2100      	movs	r1, #0
 8006796:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006798:	4798      	blx	r3
 800679a:	4631      	mov	r1, r6
 800679c:	4604      	mov	r4, r0
 800679e:	f004 f9d5 	bl	800ab4c <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 80067a2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80067a6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80067aa:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80067ae:	b1dc      	cbz	r4, 80067e8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x120>
 80067b0:	1d23      	adds	r3, r4, #4
 80067b2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80067b6:	6833      	ldr	r3, [r6, #0]
 80067b8:	f8c4 a008 	str.w	sl, [r4, #8]
 80067bc:	4630      	mov	r0, r6
 80067be:	68db      	ldr	r3, [r3, #12]
 80067c0:	63f4      	str	r4, [r6, #60]	; 0x3c
 80067c2:	4798      	blx	r3
    newPresenter->activate();
 80067c4:	6823      	ldr	r3, [r4, #0]
 80067c6:	4620      	mov	r0, r4
 80067c8:	681b      	ldr	r3, [r3, #0]
 80067ca:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80067cc:	4629      	mov	r1, r5
 80067ce:	4630      	mov	r0, r6
 80067d0:	f013 ff7a 	bl	801a6c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80067d4:	682b      	ldr	r3, [r5, #0]
 80067d6:	4628      	mov	r0, r5
 80067d8:	691b      	ldr	r3, [r3, #16]
 80067da:	4798      	blx	r3
    newTransition->invalidate();
 80067dc:	682b      	ldr	r3, [r5, #0]
 80067de:	4628      	mov	r0, r5
 80067e0:	695b      	ldr	r3, [r3, #20]
}
 80067e2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80067e6:	4718      	bx	r3
    model->bind(newPresenter);
 80067e8:	4623      	mov	r3, r4
 80067ea:	e7e2      	b.n	80067b2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xea>
 80067ec:	0802f810 	.word	0x0802f810
 80067f0:	08030953 	.word	0x08030953
 80067f4:	0802f9ac 	.word	0x0802f9ac
 80067f8:	0802f9f3 	.word	0x0802f9f3
 80067fc:	0802fa96 	.word	0x0802fa96
 8006800:	20013894 	.word	0x20013894
 8006804:	20013890 	.word	0x20013890

08006808 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8006808:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800680a:	4770      	bx	lr

0800680c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 800680c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800680e:	4770      	bx	lr

08006810 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8006810:	4770      	bx	lr

08006812 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8006812:	888b      	ldrh	r3, [r1, #4]
 8006814:	69c0      	ldr	r0, [r0, #28]
 8006816:	680a      	ldr	r2, [r1, #0]
 8006818:	0adb      	lsrs	r3, r3, #11
 800681a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800681e:	4410      	add	r0, r2
 8006820:	4770      	bx	lr

08006822 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8006822:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8006824:	b1c2      	cbz	r2, 8006858 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8006826:	7b13      	ldrb	r3, [r2, #12]
 8006828:	b1b3      	cbz	r3, 8006858 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800682a:	7b54      	ldrb	r4, [r2, #13]
 800682c:	7ad2      	ldrb	r2, [r2, #11]
 800682e:	0224      	lsls	r4, r4, #8
 8006830:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8006834:	4314      	orrs	r4, r2
 8006836:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8006838:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800683a:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800683e:	8813      	ldrh	r3, [r2, #0]
 8006840:	428b      	cmp	r3, r1
 8006842:	d102      	bne.n	800684a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8006844:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8006848:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800684a:	d805      	bhi.n	8006858 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800684c:	3801      	subs	r0, #1
 800684e:	b280      	uxth	r0, r0
 8006850:	3204      	adds	r2, #4
 8006852:	2800      	cmp	r0, #0
 8006854:	d1f3      	bne.n	800683e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8006856:	e7f7      	b.n	8006848 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8006858:	2000      	movs	r0, #0
 800685a:	e7f5      	b.n	8006848 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

0800685c <_ZN8touchgfx13GeneratedFontD0Ev>:
 800685c:	b510      	push	{r4, lr}
 800685e:	212c      	movs	r1, #44	; 0x2c
 8006860:	4604      	mov	r4, r0
 8006862:	f026 fa62 	bl	802cd2a <_ZdlPvj>
 8006866:	4620      	mov	r0, r4
 8006868:	bd10      	pop	{r4, pc}
	...

0800686c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800686c:	b530      	push	{r4, r5, lr}
 800686e:	b08b      	sub	sp, #44	; 0x2c
 8006870:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8006872:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8006876:	9508      	str	r5, [sp, #32]
 8006878:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 800687c:	9507      	str	r5, [sp, #28]
 800687e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8006882:	9506      	str	r5, [sp, #24]
 8006884:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8006888:	9505      	str	r5, [sp, #20]
 800688a:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800688e:	9504      	str	r5, [sp, #16]
 8006890:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8006894:	9503      	str	r5, [sp, #12]
 8006896:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800689a:	9502      	str	r5, [sp, #8]
 800689c:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80068a0:	9501      	str	r5, [sp, #4]
 80068a2:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80068a6:	9500      	str	r5, [sp, #0]
 80068a8:	f013 fa78 	bl	8019d9c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80068ac:	4b06      	ldr	r3, [pc, #24]	; (80068c8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 80068ae:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80068b0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80068b2:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80068b4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80068b6:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80068b8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80068ba:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 80068bc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80068be:	62a3      	str	r3, [r4, #40]	; 0x28
}
 80068c0:	4620      	mov	r0, r4
 80068c2:	b00b      	add	sp, #44	; 0x2c
 80068c4:	bd30      	pop	{r4, r5, pc}
 80068c6:	bf00      	nop
 80068c8:	08030bbc 	.word	0x08030bbc

080068cc <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 80068cc:	4770      	bx	lr

080068ce <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80068ce:	4770      	bx	lr

080068d0 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80068d0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80068d2:	68c2      	ldr	r2, [r0, #12]
 80068d4:	6844      	ldr	r4, [r0, #4]
 80068d6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80068d8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80068da:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80068de:	07d2      	lsls	r2, r2, #31
 80068e0:	bf48      	it	mi
 80068e2:	5962      	ldrmi	r2, [r4, r5]
 80068e4:	689b      	ldr	r3, [r3, #8]
    }
 80068e6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80068e8:	bf48      	it	mi
 80068ea:	58d3      	ldrmi	r3, [r2, r3]
 80068ec:	4718      	bx	r3

080068ee <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80068ee:	6843      	ldr	r3, [r0, #4]
 80068f0:	b12b      	cbz	r3, 80068fe <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80068f2:	6883      	ldr	r3, [r0, #8]
 80068f4:	b92b      	cbnz	r3, 8006902 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80068f6:	68c0      	ldr	r0, [r0, #12]
 80068f8:	f000 0001 	and.w	r0, r0, #1
 80068fc:	4770      	bx	lr
 80068fe:	4618      	mov	r0, r3
 8006900:	4770      	bx	lr
 8006902:	2001      	movs	r0, #1
    }
 8006904:	4770      	bx	lr

08006906 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006906:	b510      	push	{r4, lr}
 8006908:	2110      	movs	r1, #16
 800690a:	4604      	mov	r4, r0
 800690c:	f026 fa0d 	bl	802cd2a <_ZdlPvj>
 8006910:	4620      	mov	r0, r4
 8006912:	bd10      	pop	{r4, pc}

08006914 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8006914:	b510      	push	{r4, lr}
 8006916:	4b03      	ldr	r3, [pc, #12]	; (8006924 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8006918:	6003      	str	r3, [r0, #0]
 800691a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800691c:	f010 fba6 	bl	801706c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006920:	4620      	mov	r0, r4
 8006922:	bd10      	pop	{r4, pc}
 8006924:	08030c34 	.word	0x08030c34

08006928 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8006928:	b507      	push	{r0, r1, r2, lr}
 800692a:	4b07      	ldr	r3, [pc, #28]	; (8006948 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 800692c:	6003      	str	r3, [r0, #0]
 800692e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006930:	f010 fb9c 	bl	801706c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006934:	9801      	ldr	r0, [sp, #4]
 8006936:	f44f 5190 	mov.w	r1, #4608	; 0x1200
 800693a:	f026 f9f6 	bl	802cd2a <_ZdlPvj>
 800693e:	9801      	ldr	r0, [sp, #4]
 8006940:	b003      	add	sp, #12
 8006942:	f85d fb04 	ldr.w	pc, [sp], #4
 8006946:	bf00      	nop
 8006948:	08030c34 	.word	0x08030c34

0800694c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800694c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Measure)
 800694e:	f500 73ba 	add.w	r3, r0, #372	; 0x174
 8006952:	4299      	cmp	r1, r3
{
 8006954:	4604      	mov	r4, r0
 8006956:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Measure)
 8006958:	d103      	bne.n	8006962 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800695a:	f012 f889 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Measure clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 800695e:	f7fe feaf 	bl	80056c0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_Calibration)
 8006962:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8006966:	429d      	cmp	r5, r3
 8006968:	d103      	bne.n	8006972 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800696a:	f012 f881 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_Calibration clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 800696e:	f7fe ff37 	bl	80057e0 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_ProjectInfo)
 8006972:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006976:	429d      	cmp	r5, r3
 8006978:	d103      	bne.n	8006982 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 800697a:	f012 f879 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel_ProjectInfo clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 800697e:	f7fe ff3f 	bl	8005800 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon_turn_off)
 8006982:	f504 7467 	add.w	r4, r4, #924	; 0x39c
 8006986:	42a5      	cmp	r5, r4
 8006988:	d10a      	bne.n	80069a0 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon_turn_off clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 800698a:	4806      	ldr	r0, [pc, #24]	; (80069a4 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 800698c:	2200      	movs	r2, #0
 800698e:	2120      	movs	r1, #32
 8006990:	f005 faa4 	bl	800bedc <HAL_GPIO_WritePin>
 8006994:	f012 f86c 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon_turn_off clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8006998:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 800699c:	f7fe bf40 	b.w	8005820 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80069a0:	bd38      	pop	{r3, r4, r5, pc}
 80069a2:	bf00      	nop
 80069a4:	40021000 	.word	0x40021000

080069a8 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 80069a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80069ac:	ed2d 8b08 	vpush	{d8-d11}
 80069b0:	4604      	mov	r4, r0
 80069b2:	b091      	sub	sp, #68	; 0x44
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 80069b4:	46a2      	mov	sl, r4
        : presenter(0)
 80069b6:	2500      	movs	r5, #0
 80069b8:	f013 fcda 	bl	801a370 <_ZN8touchgfx6ScreenC1Ev>
 80069bc:	4b75      	ldr	r3, [pc, #468]	; (8006b94 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
 80069be:	63e5      	str	r5, [r4, #60]	; 0x3c
 80069c0:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 80069c4:	2226      	movs	r2, #38	; 0x26
 80069c6:	4629      	mov	r1, r5
 80069c8:	4650      	mov	r0, sl
 80069ca:	f027 fa9a 	bl	802df02 <memset>
 80069ce:	4650      	mov	r0, sl
 80069d0:	f7fc ff12 	bl	80037f8 <_ZN8touchgfx6WidgetC1Ev>
 80069d4:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 80069d8:	26ff      	movs	r6, #255	; 0xff
 80069da:	4b6f      	ldr	r3, [pc, #444]	; (8006b98 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 80069dc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80069de:	2226      	movs	r2, #38	; 0x26
 80069e0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80069e4:	4629      	mov	r1, r5
 80069e6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80069ea:	4648      	mov	r0, r9
        : color(col)
 80069ec:	66a5      	str	r5, [r4, #104]	; 0x68
 80069ee:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80069f2:	f027 fa86 	bl	802df02 <memset>
 80069f6:	4648      	mov	r0, r9
 80069f8:	f7fc fefe 	bl	80037f8 <_ZN8touchgfx6WidgetC1Ev>
 80069fc:	4b67      	ldr	r3, [pc, #412]	; (8006b9c <_ZN17Main_MenuViewBaseC1Ev+0x1f4>)
 80069fe:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006a00:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8006a04:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006a08:	a90e      	add	r1, sp, #56	; 0x38
 8006a0a:	4648      	mov	r0, r9
 8006a0c:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006a10:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006a14:	f00f fb2d 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006a18:	4640      	mov	r0, r8
 8006a1a:	f7fc ff51 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006a1e:	4b60      	ldr	r3, [pc, #384]	; (8006ba0 <_ZN17Main_MenuViewBaseC1Ev+0x1f8>)
 8006a20:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006a24:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006a28:	4618      	mov	r0, r3
 8006a2a:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006a2e:	ee09 3a90 	vmov	s19, r3
 8006a32:	f00f fc55 	bl	80162e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006a36:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8006a3a:	4618      	mov	r0, r3
 8006a3c:	ee0a 3a10 	vmov	s20, r3
 8006a40:	f00f fc4e 	bl	80162e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006a44:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8006a48:	4618      	mov	r0, r3
 8006a4a:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 8006a4e:	ee0a 3a90 	vmov	s21, r3
 8006a52:	f00f fc45 	bl	80162e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006a56:	4638      	mov	r0, r7
 8006a58:	f00d fffe 	bl	8014a58 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006a5c:	4e51      	ldr	r6, [pc, #324]	; (8006ba4 <_ZN17Main_MenuViewBaseC1Ev+0x1fc>)
 8006a5e:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 8006a62:	4618      	mov	r0, r3
 8006a64:	9304      	str	r3, [sp, #16]
 8006a66:	f7fc fccb 	bl	8003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006a6a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8006a6e:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 8006a72:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006a76:	4618      	mov	r0, r3
 8006a78:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 8006a7c:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 8006a80:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 8006a84:	ee08 3a10 	vmov	s16, r3
 8006a88:	f7fc ff1a 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8006a8c:	4658      	mov	r0, fp
 8006a8e:	f00d ffe3 	bl	8014a58 <_ZN8touchgfx4LineC1Ev>
 8006a92:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 8006a96:	4618      	mov	r0, r3
 8006a98:	9305      	str	r3, [sp, #20]
 8006a9a:	f7fc fcb1 	bl	8003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006a9e:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8006aa2:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8006aa6:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 8006aaa:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 8006aae:	4618      	mov	r0, r3
 8006ab0:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8006ab4:	ee08 3a90 	vmov	s17, r3
 8006ab8:	f7fc ff02 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8006abc:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8006ac0:	4618      	mov	r0, r3
 8006ac2:	ee09 3a10 	vmov	s18, r3
 8006ac6:	f7fc fefb 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8006aca:	f504 7367 	add.w	r3, r4, #924	; 0x39c
 8006ace:	4618      	mov	r0, r3
 8006ad0:	ee0b 3a10 	vmov	s22, r3
 8006ad4:	f00f faa6 	bl	8016024 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006ad8:	4a33      	ldr	r2, [pc, #204]	; (8006ba8 <_ZN17Main_MenuViewBaseC1Ev+0x200>)
 8006ada:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006ade:	e9c3 247c 	strd	r2, r4, [r3, #496]	; 0x1f0
 8006ae2:	4a32      	ldr	r2, [pc, #200]	; (8006bac <_ZN17Main_MenuViewBaseC1Ev+0x204>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006ae4:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006ae8:	e9c3 257e 	strd	r2, r5, [r3, #504]	; 0x1f8
 8006aec:	f504 7078 	add.w	r0, r4, #992	; 0x3e0
 8006af0:	f010 fab2 	bl	8017058 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006af4:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006af8:	462a      	mov	r2, r5
 8006afa:	4650      	mov	r0, sl
 8006afc:	9300      	str	r3, [sp, #0]
 8006afe:	4629      	mov	r1, r5
 8006b00:	23f0      	movs	r3, #240	; 0xf0
 8006b02:	f7fc fe54 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8006b06:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006b08:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006b0c:	66a3      	str	r3, [r4, #104]	; 0x68
 8006b0e:	4651      	mov	r1, sl
 8006b10:	4630      	mov	r0, r6
 8006b12:	f00b fed5 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8006b16:	462a      	mov	r2, r5
 8006b18:	4648      	mov	r0, r9
 8006b1a:	4629      	mov	r1, r5
 8006b1c:	f7fc fe3a 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8006b20:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006b22:	4648      	mov	r0, r9
 8006b24:	a90e      	add	r1, sp, #56	; 0x38
 8006b26:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8006b2a:	f00f faa2 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006b2e:	4649      	mov	r1, r9
 8006b30:	4630      	mov	r0, r6
 8006b32:	f00b fec5 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8006b36:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006b3a:	2156      	movs	r1, #86	; 0x56
 8006b3c:	4640      	mov	r0, r8
 8006b3e:	f7fc fe29 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8006b42:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006b46:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006b4a:	f10d 0918 	add.w	r9, sp, #24
        color = newColor;
 8006b4e:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 8006b52:	4648      	mov	r0, r9
 8006b54:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006b58:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006b5c:	4641      	mov	r1, r8
 8006b5e:	4798      	blx	r3
 8006b60:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8006b64:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006b68:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006b6c:	4b10      	ldr	r3, [pc, #64]	; (8006bb0 <_ZN17Main_MenuViewBaseC1Ev+0x208>)
 8006b6e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8006b70:	f504 7976 	add.w	r9, r4, #984	; 0x3d8
 8006b74:	b92b      	cbnz	r3, 8006b82 <_ZN17Main_MenuViewBaseC1Ev+0x1da>
 8006b76:	4b0f      	ldr	r3, [pc, #60]	; (8006bb4 <_ZN17Main_MenuViewBaseC1Ev+0x20c>)
 8006b78:	4a0f      	ldr	r2, [pc, #60]	; (8006bb8 <_ZN17Main_MenuViewBaseC1Ev+0x210>)
 8006b7a:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006b7c:	480f      	ldr	r0, [pc, #60]	; (8006bbc <_ZN17Main_MenuViewBaseC1Ev+0x214>)
 8006b7e:	f026 ffbb 	bl	802daf8 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006b82:	4b0f      	ldr	r3, [pc, #60]	; (8006bc0 <_ZN17Main_MenuViewBaseC1Ev+0x218>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006b84:	881b      	ldrh	r3, [r3, #0]
 8006b86:	2b54      	cmp	r3, #84	; 0x54
 8006b88:	d81e      	bhi.n	8006bc8 <_ZN17Main_MenuViewBaseC1Ev+0x220>
 8006b8a:	4b0e      	ldr	r3, [pc, #56]	; (8006bc4 <_ZN17Main_MenuViewBaseC1Ev+0x21c>)
 8006b8c:	4a0a      	ldr	r2, [pc, #40]	; (8006bb8 <_ZN17Main_MenuViewBaseC1Ev+0x210>)
 8006b8e:	2161      	movs	r1, #97	; 0x61
 8006b90:	e7f4      	b.n	8006b7c <_ZN17Main_MenuViewBaseC1Ev+0x1d4>
 8006b92:	bf00      	nop
 8006b94:	08030c34 	.word	0x08030c34
 8006b98:	08031bec 	.word	0x08031bec
 8006b9c:	08031e38 	.word	0x08031e38
 8006ba0:	0802f734 	.word	0x0802f734
 8006ba4:	08031920 	.word	0x08031920
 8006ba8:	08030c1c 	.word	0x08030c1c
 8006bac:	0800694d 	.word	0x0800694d
 8006bb0:	200138a4 	.word	0x200138a4
 8006bb4:	0802f4e4 	.word	0x0802f4e4
 8006bb8:	0802f5e9 	.word	0x0802f5e9
 8006bbc:	0802f561 	.word	0x0802f561
 8006bc0:	200138a8 	.word	0x200138a8
 8006bc4:	0802f5a8 	.word	0x0802f5a8
        return texts->getText(typedTextId);
 8006bc8:	4bc1      	ldr	r3, [pc, #772]	; (8006ed0 <_ZN17Main_MenuViewBaseC1Ev+0x528>)
 8006bca:	2154      	movs	r1, #84	; 0x54
 8006bcc:	6818      	ldr	r0, [r3, #0]
 8006bce:	f003 fdf3 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8006bd2:	4ac0      	ldr	r2, [pc, #768]	; (8006ed4 <_ZN17Main_MenuViewBaseC1Ev+0x52c>)
 8006bd4:	4603      	mov	r3, r0
 8006bd6:	2104      	movs	r1, #4
 8006bd8:	4648      	mov	r0, r9
 8006bda:	f015 f8f7 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 8006bde:	4640      	mov	r0, r8
        wc1 = value;
 8006be0:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 8006be4:	f00e fc74 	bl	80154d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006be8:	4bbb      	ldr	r3, [pc, #748]	; (8006ed8 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006bea:	930e      	str	r3, [sp, #56]	; 0x38
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8006bec:	4640      	mov	r0, r8
 8006bee:	2355      	movs	r3, #85	; 0x55
 8006bf0:	a90e      	add	r1, sp, #56	; 0x38
 8006bf2:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006bf6:	f00e fc8b 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006bfa:	4641      	mov	r1, r8
 8006bfc:	4630      	mov	r0, r6
 8006bfe:	f00b fe5f 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_ProjectInfo.setXY(33, 240);
 8006c02:	ee19 0a90 	vmov	r0, s19
 8006c06:	22f0      	movs	r2, #240	; 0xf0
 8006c08:	2121      	movs	r1, #33	; 0x21
 8006c0a:	f7fc fdc3 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8006c0e:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel_ProjectInfo.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006c12:	aa0e      	add	r2, sp, #56	; 0x38
 8006c14:	f04f 0802 	mov.w	r8, #2
 8006c18:	a90d      	add	r1, sp, #52	; 0x34
 8006c1a:	ee19 0a90 	vmov	r0, s19
 8006c1e:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8006c22:	f8ad 8038 	strh.w	r8, [sp, #56]	; 0x38
 8006c26:	f00f f82e 	bl	8015c86 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006c2a:	236f      	movs	r3, #111	; 0x6f
        updateTextPosition();
 8006c2c:	ee19 0a90 	vmov	r0, s19
 8006c30:	f8a4 311c 	strh.w	r3, [r4, #284]	; 0x11c
 8006c34:	f7fc fdf2 	bl	800381c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_ProjectInfo.setAction(buttonCallback);
 8006c38:	f504 538f 	add.w	r3, r4, #4576	; 0x11e0
 8006c3c:	3310      	adds	r3, #16
 8006c3e:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8006c42:	ee19 1a90 	vmov	r1, s19
 8006c46:	4630      	mov	r0, r6
        colorPressed = col;
 8006c48:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 8006c4c:	9303      	str	r3, [sp, #12]
 8006c4e:	f00b fe37 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Calibration.setXY(33, 170);
 8006c52:	ee1a 0a10 	vmov	r0, s20
 8006c56:	22aa      	movs	r2, #170	; 0xaa
 8006c58:	2121      	movs	r1, #33	; 0x21
 8006c5a:	f7fc fd9b 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_Calibration.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006c5e:	aa0e      	add	r2, sp, #56	; 0x38
 8006c60:	a90d      	add	r1, sp, #52	; 0x34
 8006c62:	ee1a 0a10 	vmov	r0, s20
 8006c66:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8006c6a:	f8ad 8038 	strh.w	r8, [sp, #56]	; 0x38
 8006c6e:	f00f f80a 	bl	8015c86 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006c72:	2370      	movs	r3, #112	; 0x70
        updateTextPosition();
 8006c74:	ee1a 0a10 	vmov	r0, s20
 8006c78:	f8a4 3164 	strh.w	r3, [r4, #356]	; 0x164
 8006c7c:	f7fc fdce 	bl	800381c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006c80:	9b03      	ldr	r3, [sp, #12]
 8006c82:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006c86:	ee1a 1a10 	vmov	r1, s20
 8006c8a:	4630      	mov	r0, r6
        colorPressed = col;
 8006c8c:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 8006c90:	f00b fe16 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Measure.setXY(33, 100);
 8006c94:	ee1a 0a90 	vmov	r0, s21
 8006c98:	2264      	movs	r2, #100	; 0x64
 8006c9a:	2121      	movs	r1, #33	; 0x21
 8006c9c:	f7fc fd7a 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_Measure.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006ca0:	aa0e      	add	r2, sp, #56	; 0x38
 8006ca2:	a90d      	add	r1, sp, #52	; 0x34
 8006ca4:	ee1a 0a90 	vmov	r0, s21
 8006ca8:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8006cac:	f8ad 8038 	strh.w	r8, [sp, #56]	; 0x38
 8006cb0:	f00e ffe9 	bl	8015c86 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006cb4:	2371      	movs	r3, #113	; 0x71
        updateTextPosition();
 8006cb6:	ee1a 0a90 	vmov	r0, s21
 8006cba:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006cbe:	f7fc fdad 	bl	800381c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006cc2:	9b03      	ldr	r3, [sp, #12]
 8006cc4:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006cc8:	ee1a 1a90 	vmov	r1, s21
 8006ccc:	4630      	mov	r0, r6
        colorPressed = col;
 8006cce:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 8006cd2:	f00b fdf5 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8006cd6:	230a      	movs	r3, #10
 8006cd8:	9300      	str	r3, [sp, #0]
 8006cda:	224b      	movs	r2, #75	; 0x4b
 8006cdc:	23f0      	movs	r3, #240	; 0xf0
 8006cde:	4629      	mov	r1, r5
 8006ce0:	4638      	mov	r0, r7
 8006ce2:	f7fc fd64 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8006ce6:	9b04      	ldr	r3, [sp, #16]
 8006ce8:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006cec:	22a0      	movs	r2, #160	; 0xa0
 8006cee:	4611      	mov	r1, r2
 8006cf0:	4638      	mov	r0, r7
 8006cf2:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006cf6:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 8006cfa:	f00d ffc3 	bl	8014c84 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006cfe:	22a0      	movs	r2, #160	; 0xa0
 8006d00:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006d04:	4638      	mov	r0, r7
 8006d06:	f00d ffc8 	bl	8014c9a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006d0a:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 8006d0e:	2b20      	cmp	r3, #32
 8006d10:	d005      	beq.n	8006d1e <_ZN17Main_MenuViewBaseC1Ev+0x376>
        lineWidthQ5 = widthQ5;
 8006d12:	2320      	movs	r3, #32
 8006d14:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 8006d18:	4638      	mov	r0, r7
 8006d1a:	f00d febd 	bl	8014a98 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006d1e:	4638      	mov	r0, r7
 8006d20:	2101      	movs	r1, #1
 8006d22:	f00d ffc5 	bl	8014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006d26:	4639      	mov	r1, r7
 8006d28:	4630      	mov	r0, r6
 8006d2a:	f00b fdc9 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006d2e:	f04f 35ff 	mov.w	r5, #4294967295
    textArea_menu.setXY(88, 60);
 8006d32:	223c      	movs	r2, #60	; 0x3c
 8006d34:	ee18 0a10 	vmov	r0, s16
 8006d38:	2158      	movs	r1, #88	; 0x58
        linespace = space;
 8006d3a:	2700      	movs	r7, #0
        boundingArea = calculateBoundingArea();
 8006d3c:	f10d 0818 	add.w	r8, sp, #24
 8006d40:	f7fc fd28 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8006d44:	ee18 1a10 	vmov	r1, s16
 8006d48:	4640      	mov	r0, r8
        color = newColor;
 8006d4a:	f8c4 5270 	str.w	r5, [r4, #624]	; 0x270
        linespace = space;
 8006d4e:	f8a4 7274 	strh.w	r7, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8006d52:	f00e f943 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d56:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006d5a:	ee18 3a10 	vmov	r3, s16
 8006d5e:	333c      	adds	r3, #60	; 0x3c
 8006d60:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006d64:	4b5c      	ldr	r3, [pc, #368]	; (8006ed8 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006d66:	930e      	str	r3, [sp, #56]	; 0x38
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8006d68:	ee18 0a10 	vmov	r0, s16
 8006d6c:	2344      	movs	r3, #68	; 0x44
 8006d6e:	a90e      	add	r1, sp, #56	; 0x38
 8006d70:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006d74:	f00e fbcc 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d78:	ee18 1a10 	vmov	r1, s16
 8006d7c:	4630      	mov	r0, r6
 8006d7e:	f00b fd9f 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006d82:	230a      	movs	r3, #10
 8006d84:	9300      	str	r3, [sp, #0]
 8006d86:	2232      	movs	r2, #50	; 0x32
 8006d88:	23f0      	movs	r3, #240	; 0xf0
 8006d8a:	4639      	mov	r1, r7
 8006d8c:	4658      	mov	r0, fp
 8006d8e:	f7fc fd0e 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8006d92:	9b05      	ldr	r3, [sp, #20]
 8006d94:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006d98:	22a0      	movs	r2, #160	; 0xa0
 8006d9a:	4611      	mov	r1, r2
 8006d9c:	4658      	mov	r0, fp
 8006d9e:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8006da2:	f8a4 5308 	strh.w	r5, [r4, #776]	; 0x308
 8006da6:	f00d ff6d 	bl	8014c84 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006daa:	22a0      	movs	r2, #160	; 0xa0
 8006dac:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006db0:	4658      	mov	r0, fp
 8006db2:	f00d ff72 	bl	8014c9a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006db6:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 8006dba:	2b20      	cmp	r3, #32
 8006dbc:	d005      	beq.n	8006dca <_ZN17Main_MenuViewBaseC1Ev+0x422>
        lineWidthQ5 = widthQ5;
 8006dbe:	2320      	movs	r3, #32
 8006dc0:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 8006dc4:	4658      	mov	r0, fp
 8006dc6:	f00d fe67 	bl	8014a98 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006dca:	4658      	mov	r0, fp
 8006dcc:	2101      	movs	r1, #1
 8006dce:	f00d ff6f 	bl	8014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006dd2:	4659      	mov	r1, fp
 8006dd4:	4630      	mov	r0, r6
 8006dd6:	f00b fd73 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006dda:	2700      	movs	r7, #0
        boundingArea = calculateBoundingArea();
 8006ddc:	ad06      	add	r5, sp, #24
    textArea_name.setXY(69, 35);
 8006dde:	ee18 0a90 	vmov	r0, s17
 8006de2:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 8006de4:	f04f 39ff 	mov.w	r9, #4294967295
 8006de8:	2145      	movs	r1, #69	; 0x45
 8006dea:	f7fc fcd3 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006dee:	ee18 1a90 	vmov	r1, s17
 8006df2:	4628      	mov	r0, r5
        color = newColor;
 8006df4:	f8c4 933c 	str.w	r9, [r4, #828]	; 0x33c
        linespace = space;
 8006df8:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8006dfc:	f00e f8ee 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e00:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006e04:	ee18 3a90 	vmov	r3, s17
 8006e08:	333c      	adds	r3, #60	; 0x3c
 8006e0a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8006e0e:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8006e12:	4b31      	ldr	r3, [pc, #196]	; (8006ed8 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006e14:	930e      	str	r3, [sp, #56]	; 0x38
 8006e16:	ee18 0a90 	vmov	r0, s17
 8006e1a:	236d      	movs	r3, #109	; 0x6d
 8006e1c:	4641      	mov	r1, r8
 8006e1e:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006e22:	f00e fb75 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e26:	ee18 1a90 	vmov	r1, s17
 8006e2a:	4630      	mov	r0, r6
 8006e2c:	f00b fd48 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8006e30:	ee19 0a10 	vmov	r0, s18
 8006e34:	220c      	movs	r2, #12
 8006e36:	2136      	movs	r1, #54	; 0x36
 8006e38:	f7fc fcac 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8006e3c:	ee19 1a10 	vmov	r1, s18
 8006e40:	4628      	mov	r0, r5
        color = newColor;
 8006e42:	f8c4 9384 	str.w	r9, [r4, #900]	; 0x384
        linespace = space;
 8006e46:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 8006e4a:	f00e f8c7 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e4e:	ee19 2a10 	vmov	r2, s18
 8006e52:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 8006e56:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006e5a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e5e:	4b1e      	ldr	r3, [pc, #120]	; (8006ed8 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006e60:	930e      	str	r3, [sp, #56]	; 0x38
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 8006e62:	ee19 0a10 	vmov	r0, s18
 8006e66:	236e      	movs	r3, #110	; 0x6e
 8006e68:	4641      	mov	r1, r8
 8006e6a:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006e6e:	f00e fb4f 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e72:	ee19 1a10 	vmov	r1, s18
 8006e76:	4630      	mov	r0, r6
 8006e78:	f00b fd22 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_turn_off.setXY(198, 5);
 8006e7c:	ee1b 0a10 	vmov	r0, s22
 8006e80:	2205      	movs	r2, #5
 8006e82:	21c6      	movs	r1, #198	; 0xc6
 8006e84:	f7fc fc86 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8006e88:	2301      	movs	r3, #1
 8006e8a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8006e8e:	230a      	movs	r3, #10
    buttonWithIcon_turn_off.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 8006e90:	ee1b 0a10 	vmov	r0, s22
 8006e94:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006e98:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8006e9c:	aa0c      	add	r2, sp, #48	; 0x30
 8006e9e:	ab0d      	add	r3, sp, #52	; 0x34
 8006ea0:	a90b      	add	r1, sp, #44	; 0x2c
 8006ea2:	f8cd 8000 	str.w	r8, [sp]
 8006ea6:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
 8006eaa:	f00f f826 	bl	8015efa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8006eae:	9b03      	ldr	r3, [sp, #12]
 8006eb0:	f8c4 73d4 	str.w	r7, [r4, #980]	; 0x3d4
 8006eb4:	4630      	mov	r0, r6
 8006eb6:	ee1b 1a10 	vmov	r1, s22
 8006eba:	f8c4 33c4 	str.w	r3, [r4, #964]	; 0x3c4
 8006ebe:	f00b fcff 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006ec2:	4620      	mov	r0, r4
 8006ec4:	b011      	add	sp, #68	; 0x44
 8006ec6:	ecbd 8b08 	vpop	{d8-d11}
 8006eca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006ece:	bf00      	nop
 8006ed0:	200138b0 	.word	0x200138b0
 8006ed4:	0802f621 	.word	0x0802f621
 8006ed8:	0802f694 	.word	0x0802f694

08006edc <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8006edc:	4770      	bx	lr

08006ede <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006ede:	4770      	bx	lr

08006ee0 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006ee0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006ee2:	68c2      	ldr	r2, [r0, #12]
 8006ee4:	6844      	ldr	r4, [r0, #4]
 8006ee6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006ee8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006eea:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006eee:	07d2      	lsls	r2, r2, #31
 8006ef0:	bf48      	it	mi
 8006ef2:	5962      	ldrmi	r2, [r4, r5]
 8006ef4:	689b      	ldr	r3, [r3, #8]
    }
 8006ef6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006ef8:	bf48      	it	mi
 8006efa:	58d3      	ldrmi	r3, [r2, r3]
 8006efc:	4718      	bx	r3

08006efe <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006efe:	6843      	ldr	r3, [r0, #4]
 8006f00:	b12b      	cbz	r3, 8006f0e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006f02:	6883      	ldr	r3, [r0, #8]
 8006f04:	b92b      	cbnz	r3, 8006f12 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006f06:	68c0      	ldr	r0, [r0, #12]
 8006f08:	f000 0001 	and.w	r0, r0, #1
 8006f0c:	4770      	bx	lr
 8006f0e:	4618      	mov	r0, r3
 8006f10:	4770      	bx	lr
 8006f12:	2001      	movs	r0, #1
    }
 8006f14:	4770      	bx	lr

08006f16 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006f16:	b510      	push	{r4, lr}
 8006f18:	2110      	movs	r1, #16
 8006f1a:	4604      	mov	r4, r0
 8006f1c:	f025 ff05 	bl	802cd2a <_ZdlPvj>
 8006f20:	4620      	mov	r0, r4
 8006f22:	bd10      	pop	{r4, pc}

08006f24 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006f24:	b510      	push	{r4, lr}
 8006f26:	4b03      	ldr	r3, [pc, #12]	; (8006f34 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8006f28:	6003      	str	r3, [r0, #0]
 8006f2a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006f2c:	f010 f89e 	bl	801706c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006f30:	4620      	mov	r0, r4
 8006f32:	bd10      	pop	{r4, pc}
 8006f34:	08030c80 	.word	0x08030c80

08006f38 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006f38:	b507      	push	{r0, r1, r2, lr}
 8006f3a:	4b07      	ldr	r3, [pc, #28]	; (8006f58 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8006f3c:	6003      	str	r3, [r0, #0]
 8006f3e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006f40:	f010 f894 	bl	801706c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006f44:	9801      	ldr	r0, [sp, #4]
 8006f46:	f241 11c4 	movw	r1, #4548	; 0x11c4
 8006f4a:	f025 feee 	bl	802cd2a <_ZdlPvj>
 8006f4e:	9801      	ldr	r0, [sp, #4]
 8006f50:	b003      	add	sp, #12
 8006f52:	f85d fb04 	ldr.w	pc, [sp], #4
 8006f56:	bf00      	nop
 8006f58:	08030c80 	.word	0x08030c80

08006f5c <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006f5c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Return)
 8006f5e:	f100 03e4 	add.w	r3, r0, #228	; 0xe4
 8006f62:	4299      	cmp	r1, r3
{
 8006f64:	4604      	mov	r4, r0
 8006f66:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Return)
 8006f68:	d103      	bne.n	8006f72 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006f6a:	f011 fd81 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8006f6e:	f7fe fb97 	bl	80056a0 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel_Single)
 8006f72:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8006f76:	429d      	cmp	r5, r3
 8006f78:	d103      	bne.n	8006f82 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006f7a:	f011 fd79 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_Single clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006f7e:	f7fe fbbf 	bl	8005700 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_Accurate)
 8006f82:	f504 7496 	add.w	r4, r4, #300	; 0x12c
 8006f86:	42a5      	cmp	r5, r4
 8006f88:	d105      	bne.n	8006f96 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006f8a:	f011 fd71 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel_Accurate clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 8006f8e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 8006f92:	f7fe bbe5 	b.w	8005760 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 8006f96:	bd38      	pop	{r3, r4, r5, pc}

08006f98 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8006f98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006f9c:	ed2d 8b06 	vpush	{d8-d10}
 8006fa0:	4604      	mov	r4, r0
 8006fa2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8006fa4:	46a2      	mov	sl, r4
 8006fa6:	2500      	movs	r5, #0
 8006fa8:	f013 f9e2 	bl	801a370 <_ZN8touchgfx6ScreenC1Ev>
 8006fac:	4b71      	ldr	r3, [pc, #452]	; (8007174 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
 8006fae:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006fb0:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8006fb4:	2226      	movs	r2, #38	; 0x26
 8006fb6:	4629      	mov	r1, r5
 8006fb8:	4650      	mov	r0, sl
 8006fba:	f026 ffa2 	bl	802df02 <memset>
 8006fbe:	4650      	mov	r0, sl
 8006fc0:	f7fc fc1a 	bl	80037f8 <_ZN8touchgfx6WidgetC1Ev>
 8006fc4:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8006fc8:	26ff      	movs	r6, #255	; 0xff
 8006fca:	4b6b      	ldr	r3, [pc, #428]	; (8007178 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8006fcc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006fce:	2226      	movs	r2, #38	; 0x26
 8006fd0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006fd4:	4629      	mov	r1, r5
 8006fd6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006fda:	4648      	mov	r0, r9
 8006fdc:	66a5      	str	r5, [r4, #104]	; 0x68
 8006fde:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006fe2:	f026 ff8e 	bl	802df02 <memset>
 8006fe6:	4648      	mov	r0, r9
 8006fe8:	f7fc fc06 	bl	80037f8 <_ZN8touchgfx6WidgetC1Ev>
 8006fec:	4b63      	ldr	r3, [pc, #396]	; (800717c <_ZN19MeasurementViewBaseC1Ev+0x1e4>)
 8006fee:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006ff0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006ff4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006ff8:	a90a      	add	r1, sp, #40	; 0x28
 8006ffa:	4648      	mov	r0, r9
 8006ffc:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007000:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007004:	f00f f835 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007008:	4640      	mov	r0, r8
 800700a:	f7fc fc59 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800700e:	4b5c      	ldr	r3, [pc, #368]	; (8007180 <_ZN19MeasurementViewBaseC1Ev+0x1e8>)
 8007010:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007014:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8007018:	4618      	mov	r0, r3
 800701a:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800701e:	ee09 3a90 	vmov	s19, r3
 8007022:	f00f f95d 	bl	80162e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007026:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 800702a:	4618      	mov	r0, r3
 800702c:	ee0a 3a10 	vmov	s20, r3
 8007030:	f00f f956 	bl	80162e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007034:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8007038:	4618      	mov	r0, r3
 800703a:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 800703e:	ee0a 3a90 	vmov	s21, r3
 8007042:	f00f f94d 	bl	80162e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007046:	4638      	mov	r0, r7
 8007048:	f00d fd06 	bl	8014a58 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800704c:	4e4d      	ldr	r6, [pc, #308]	; (8007184 <_ZN19MeasurementViewBaseC1Ev+0x1ec>)
 800704e:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 8007052:	4618      	mov	r0, r3
 8007054:	9302      	str	r3, [sp, #8]
 8007056:	f7fc f9d3 	bl	8003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800705a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800705e:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 8007062:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007066:	4618      	mov	r0, r3
 8007068:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 800706c:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 8007070:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 8007074:	ee08 3a10 	vmov	s16, r3
 8007078:	f7fc fc22 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 800707c:	4658      	mov	r0, fp
 800707e:	f00d fceb 	bl	8014a58 <_ZN8touchgfx4LineC1Ev>
 8007082:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 8007086:	4618      	mov	r0, r3
 8007088:	9303      	str	r3, [sp, #12]
 800708a:	f7fc f9b9 	bl	8003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800708e:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8007092:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8007096:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 800709a:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 800709e:	4618      	mov	r0, r3
 80070a0:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 80070a4:	ee08 3a90 	vmov	s17, r3
 80070a8:	f7fc fc0a 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 80070ac:	f504 7355 	add.w	r3, r4, #852	; 0x354
 80070b0:	4618      	mov	r0, r3
 80070b2:	ee09 3a10 	vmov	s18, r3
 80070b6:	f7fc fc03 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80070ba:	4a33      	ldr	r2, [pc, #204]	; (8007188 <_ZN19MeasurementViewBaseC1Ev+0x1f0>)
 80070bc:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80070c0:	e9c3 246d 	strd	r2, r4, [r3, #436]	; 0x1b4
 80070c4:	4a31      	ldr	r2, [pc, #196]	; (800718c <_ZN19MeasurementViewBaseC1Ev+0x1f4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80070c6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80070ca:	e9c3 256f 	strd	r2, r5, [r3, #444]	; 0x1bc
 80070ce:	f504 7069 	add.w	r0, r4, #932	; 0x3a4
 80070d2:	f00f ffc1 	bl	8017058 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80070d6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80070da:	462a      	mov	r2, r5
 80070dc:	4650      	mov	r0, sl
 80070de:	9300      	str	r3, [sp, #0]
 80070e0:	4629      	mov	r1, r5
 80070e2:	23f0      	movs	r3, #240	; 0xf0
 80070e4:	f7fc fb63 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 80070e8:	1d26      	adds	r6, r4, #4
        color = newColor;
 80070ea:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80070ee:	66a3      	str	r3, [r4, #104]	; 0x68
 80070f0:	4651      	mov	r1, sl
 80070f2:	4630      	mov	r0, r6
 80070f4:	f00b fbe4 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 80070f8:	462a      	mov	r2, r5
 80070fa:	4648      	mov	r0, r9
 80070fc:	4629      	mov	r1, r5
 80070fe:	f7fc fb49 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8007102:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007104:	4648      	mov	r0, r9
 8007106:	a90a      	add	r1, sp, #40	; 0x28
 8007108:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800710c:	f00e ffb1 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007110:	4649      	mov	r1, r9
 8007112:	4630      	mov	r0, r6
 8007114:	f00b fbd4 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8007118:	f44f 729a 	mov.w	r2, #308	; 0x134
 800711c:	2156      	movs	r1, #86	; 0x56
 800711e:	4640      	mov	r0, r8
 8007120:	f7fc fb38 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8007124:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007128:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800712c:	f10d 0910 	add.w	r9, sp, #16
        color = newColor;
 8007130:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 8007134:	4648      	mov	r0, r9
 8007136:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800713a:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800713e:	4641      	mov	r1, r8
 8007140:	4798      	blx	r3
 8007142:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8007146:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800714a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800714e:	4b10      	ldr	r3, [pc, #64]	; (8007190 <_ZN19MeasurementViewBaseC1Ev+0x1f8>)
 8007150:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 8007152:	f504 7967 	add.w	r9, r4, #924	; 0x39c
 8007156:	b92b      	cbnz	r3, 8007164 <_ZN19MeasurementViewBaseC1Ev+0x1cc>
 8007158:	4b0e      	ldr	r3, [pc, #56]	; (8007194 <_ZN19MeasurementViewBaseC1Ev+0x1fc>)
 800715a:	4a0f      	ldr	r2, [pc, #60]	; (8007198 <_ZN19MeasurementViewBaseC1Ev+0x200>)
 800715c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800715e:	480f      	ldr	r0, [pc, #60]	; (800719c <_ZN19MeasurementViewBaseC1Ev+0x204>)
 8007160:	f026 fcca 	bl	802daf8 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007164:	4b0e      	ldr	r3, [pc, #56]	; (80071a0 <_ZN19MeasurementViewBaseC1Ev+0x208>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007166:	881b      	ldrh	r3, [r3, #0]
 8007168:	2b45      	cmp	r3, #69	; 0x45
 800716a:	d81d      	bhi.n	80071a8 <_ZN19MeasurementViewBaseC1Ev+0x210>
 800716c:	4b0d      	ldr	r3, [pc, #52]	; (80071a4 <_ZN19MeasurementViewBaseC1Ev+0x20c>)
 800716e:	4a0a      	ldr	r2, [pc, #40]	; (8007198 <_ZN19MeasurementViewBaseC1Ev+0x200>)
 8007170:	2161      	movs	r1, #97	; 0x61
 8007172:	e7f4      	b.n	800715e <_ZN19MeasurementViewBaseC1Ev+0x1c6>
 8007174:	08030c80 	.word	0x08030c80
 8007178:	08031bec 	.word	0x08031bec
 800717c:	08031e38 	.word	0x08031e38
 8007180:	0802f734 	.word	0x0802f734
 8007184:	08031920 	.word	0x08031920
 8007188:	08030c68 	.word	0x08030c68
 800718c:	08006f5d 	.word	0x08006f5d
 8007190:	200138a4 	.word	0x200138a4
 8007194:	0802f4e4 	.word	0x0802f4e4
 8007198:	0802f5e9 	.word	0x0802f5e9
 800719c:	0802f561 	.word	0x0802f561
 80071a0:	200138a8 	.word	0x200138a8
 80071a4:	0802f5a8 	.word	0x0802f5a8
        return texts->getText(typedTextId);
 80071a8:	4bad      	ldr	r3, [pc, #692]	; (8007460 <_ZN19MeasurementViewBaseC1Ev+0x4c8>)
 80071aa:	2145      	movs	r1, #69	; 0x45
 80071ac:	6818      	ldr	r0, [r3, #0]
 80071ae:	f003 fb03 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 80071b2:	4aac      	ldr	r2, [pc, #688]	; (8007464 <_ZN19MeasurementViewBaseC1Ev+0x4cc>)
 80071b4:	4603      	mov	r3, r0
 80071b6:	2104      	movs	r1, #4
 80071b8:	4648      	mov	r0, r9
 80071ba:	f014 fe07 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 80071be:	4640      	mov	r0, r8
        wc1 = value;
 80071c0:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 80071c4:	f00e f984 	bl	80154d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80071c8:	4ba7      	ldr	r3, [pc, #668]	; (8007468 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 80071ca:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 80071cc:	4640      	mov	r0, r8
 80071ce:	2346      	movs	r3, #70	; 0x46
 80071d0:	a90a      	add	r1, sp, #40	; 0x28
 80071d2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80071d6:	f00e f99b 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80071da:	4641      	mov	r1, r8
 80071dc:	4630      	mov	r0, r6
 80071de:	f00b fb6f 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 80071e2:	ee19 0a90 	vmov	r0, s19
 80071e6:	22f0      	movs	r2, #240	; 0xf0
 80071e8:	2121      	movs	r1, #33	; 0x21
 80071ea:	f7fc fad3 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 80071ee:	f04f 0802 	mov.w	r8, #2
 80071f2:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80071f4:	a909      	add	r1, sp, #36	; 0x24
 80071f6:	ee19 0a90 	vmov	r0, s19
 80071fa:	aa0a      	add	r2, sp, #40	; 0x28
 80071fc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007200:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel_Return.setAction(buttonCallback);
 8007204:	f504 598d 	add.w	r9, r4, #4512	; 0x11a0
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007208:	f00e fd3d 	bl	8015c86 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800720c:	226a      	movs	r2, #106	; 0x6a
 800720e:	f8a4 211c 	strh.w	r2, [r4, #284]	; 0x11c
    buttonWithLabel_Return.setAction(buttonCallback);
 8007212:	f109 0914 	add.w	r9, r9, #20
        updateTextPosition();
 8007216:	ee19 0a90 	vmov	r0, s19
 800721a:	f7fc faff 	bl	800381c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800721e:	ee19 1a90 	vmov	r1, s19
 8007222:	4630      	mov	r0, r6
        colorPressed = col;
 8007224:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 8007228:	f8c4 910c 	str.w	r9, [r4, #268]	; 0x10c
 800722c:	f00b fb48 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Accurate.setXY(33, 170);
 8007230:	ee1a 0a10 	vmov	r0, s20
 8007234:	22aa      	movs	r2, #170	; 0xaa
 8007236:	2121      	movs	r1, #33	; 0x21
 8007238:	f7fc faac 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 800723c:	2303      	movs	r3, #3
    buttonWithLabel_Accurate.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800723e:	a909      	add	r1, sp, #36	; 0x24
 8007240:	ee1a 0a10 	vmov	r0, s20
 8007244:	aa0a      	add	r2, sp, #40	; 0x28
 8007246:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800724a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800724e:	f00e fd1a 	bl	8015c86 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007252:	2269      	movs	r2, #105	; 0x69
 8007254:	f8a4 2164 	strh.w	r2, [r4, #356]	; 0x164
        updateTextPosition();
 8007258:	ee1a 0a10 	vmov	r0, s20
 800725c:	f7fc fade 	bl	800381c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007260:	ee1a 1a10 	vmov	r1, s20
 8007264:	4630      	mov	r0, r6
        colorPressed = col;
 8007266:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 800726a:	f8c4 9154 	str.w	r9, [r4, #340]	; 0x154
 800726e:	f00b fb27 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Single.setXY(33, 100);
 8007272:	ee1a 0a90 	vmov	r0, s21
 8007276:	2264      	movs	r2, #100	; 0x64
 8007278:	2121      	movs	r1, #33	; 0x21
 800727a:	f7fc fa8b 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_Single.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800727e:	aa0a      	add	r2, sp, #40	; 0x28
 8007280:	2303      	movs	r3, #3
 8007282:	a909      	add	r1, sp, #36	; 0x24
 8007284:	ee1a 0a90 	vmov	r0, s21
 8007288:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800728c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007290:	f00e fcf9 	bl	8015c86 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007294:	2368      	movs	r3, #104	; 0x68
 8007296:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
        updateTextPosition();
 800729a:	ee1a 0a90 	vmov	r0, s21
 800729e:	f7fc fabd 	bl	800381c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80072a2:	ee1a 1a90 	vmov	r1, s21
 80072a6:	4630      	mov	r0, r6
        colorPressed = col;
 80072a8:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 80072ac:	f8c4 919c 	str.w	r9, [r4, #412]	; 0x19c
 80072b0:	f00b fb06 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 80072b4:	230a      	movs	r3, #10
 80072b6:	9300      	str	r3, [sp, #0]
 80072b8:	224b      	movs	r2, #75	; 0x4b
 80072ba:	23f0      	movs	r3, #240	; 0xf0
 80072bc:	4629      	mov	r1, r5
 80072be:	4638      	mov	r0, r7
 80072c0:	f7fc fa75 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 80072c4:	9b02      	ldr	r3, [sp, #8]
 80072c6:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80072ca:	22a0      	movs	r2, #160	; 0xa0
 80072cc:	4611      	mov	r1, r2
 80072ce:	4638      	mov	r0, r7
 80072d0:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 80072d4:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 80072d8:	f00d fcd4 	bl	8014c84 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80072dc:	22a0      	movs	r2, #160	; 0xa0
 80072de:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80072e2:	4638      	mov	r0, r7
 80072e4:	f00d fcd9 	bl	8014c9a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80072e8:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 80072ec:	2b20      	cmp	r3, #32
 80072ee:	d005      	beq.n	80072fc <_ZN19MeasurementViewBaseC1Ev+0x364>
        lineWidthQ5 = widthQ5;
 80072f0:	2320      	movs	r3, #32
 80072f2:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 80072f6:	4638      	mov	r0, r7
 80072f8:	f00d fbce 	bl	8014a98 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80072fc:	4638      	mov	r0, r7
 80072fe:	2101      	movs	r1, #1
 8007300:	f00d fcd6 	bl	8014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007304:	4639      	mov	r1, r7
 8007306:	4630      	mov	r0, r6
 8007308:	f00b fada 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800730c:	f04f 37ff 	mov.w	r7, #4294967295
    textArea_menu.setXY(61, 60);
 8007310:	223c      	movs	r2, #60	; 0x3c
 8007312:	ee18 0a10 	vmov	r0, s16
 8007316:	213d      	movs	r1, #61	; 0x3d
        linespace = space;
 8007318:	f04f 0800 	mov.w	r8, #0
        boundingArea = calculateBoundingArea();
 800731c:	ad04      	add	r5, sp, #16
 800731e:	f7fc fa39 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8007322:	ee18 1a10 	vmov	r1, s16
 8007326:	4628      	mov	r0, r5
        color = newColor;
 8007328:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 800732c:	f8a4 8274 	strh.w	r8, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8007330:	f00d fe54 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007334:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007338:	ee18 3a10 	vmov	r3, s16
 800733c:	333c      	adds	r3, #60	; 0x3c
 800733e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007342:	4b49      	ldr	r3, [pc, #292]	; (8007468 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 8007344:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8007346:	ee18 0a10 	vmov	r0, s16
 800734a:	2353      	movs	r3, #83	; 0x53
 800734c:	a90a      	add	r1, sp, #40	; 0x28
 800734e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007352:	f00e f8dd 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007356:	ee18 1a10 	vmov	r1, s16
 800735a:	4630      	mov	r0, r6
 800735c:	f00b fab0 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007360:	230a      	movs	r3, #10
 8007362:	9300      	str	r3, [sp, #0]
 8007364:	2232      	movs	r2, #50	; 0x32
 8007366:	23f0      	movs	r3, #240	; 0xf0
 8007368:	4641      	mov	r1, r8
 800736a:	4658      	mov	r0, fp
 800736c:	f7fc fa1f 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8007370:	9b03      	ldr	r3, [sp, #12]
 8007372:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007376:	22a0      	movs	r2, #160	; 0xa0
 8007378:	4611      	mov	r1, r2
 800737a:	4658      	mov	r0, fp
 800737c:	f8c4 7304 	str.w	r7, [r4, #772]	; 0x304
 8007380:	f8a4 7308 	strh.w	r7, [r4, #776]	; 0x308
 8007384:	f00d fc7e 	bl	8014c84 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007388:	22a0      	movs	r2, #160	; 0xa0
 800738a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800738e:	4658      	mov	r0, fp
 8007390:	f00d fc83 	bl	8014c9a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007394:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 8007398:	2b20      	cmp	r3, #32
 800739a:	d005      	beq.n	80073a8 <_ZN19MeasurementViewBaseC1Ev+0x410>
        lineWidthQ5 = widthQ5;
 800739c:	2320      	movs	r3, #32
 800739e:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 80073a2:	4658      	mov	r0, fp
 80073a4:	f00d fb78 	bl	8014a98 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80073a8:	4658      	mov	r0, fp
 80073aa:	2101      	movs	r1, #1
 80073ac:	f00d fc80 	bl	8014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80073b0:	4659      	mov	r1, fp
 80073b2:	4630      	mov	r0, r6
 80073b4:	f00b fa84 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80073b8:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 80073bc:	ee18 0a90 	vmov	r0, s17
 80073c0:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80073c2:	2700      	movs	r7, #0
 80073c4:	2145      	movs	r1, #69	; 0x45
 80073c6:	f7fc f9e5 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80073ca:	ee18 1a90 	vmov	r1, s17
 80073ce:	4628      	mov	r0, r5
        color = newColor;
 80073d0:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 80073d4:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 80073d8:	f00d fe00 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80073dc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80073e0:	ee18 3a90 	vmov	r3, s17
 80073e4:	333c      	adds	r3, #60	; 0x3c
 80073e6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80073ea:	4b1f      	ldr	r3, [pc, #124]	; (8007468 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 80073ec:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 80073ee:	ee18 0a90 	vmov	r0, s17
 80073f2:	236b      	movs	r3, #107	; 0x6b
 80073f4:	a90a      	add	r1, sp, #40	; 0x28
 80073f6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80073fa:	f00e f889 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80073fe:	ee18 1a90 	vmov	r1, s17
 8007402:	4630      	mov	r0, r6
 8007404:	f00b fa5c 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8007408:	ee19 0a10 	vmov	r0, s18
 800740c:	220c      	movs	r2, #12
 800740e:	2136      	movs	r1, #54	; 0x36
 8007410:	f7fc f9c0 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8007414:	ee19 1a10 	vmov	r1, s18
 8007418:	4628      	mov	r0, r5
        color = newColor;
 800741a:	f8c4 8384 	str.w	r8, [r4, #900]	; 0x384
        linespace = space;
 800741e:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 8007422:	f00d fddb 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007426:	ee19 2a10 	vmov	r2, s18
 800742a:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 800742e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007432:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007436:	4b0c      	ldr	r3, [pc, #48]	; (8007468 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 8007438:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 800743a:	ee19 0a10 	vmov	r0, s18
 800743e:	236c      	movs	r3, #108	; 0x6c
 8007440:	a90a      	add	r1, sp, #40	; 0x28
 8007442:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007446:	f00e f863 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800744a:	4630      	mov	r0, r6
 800744c:	ee19 1a10 	vmov	r1, s18
 8007450:	f00b fa36 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007454:	4620      	mov	r0, r4
 8007456:	b00d      	add	sp, #52	; 0x34
 8007458:	ecbd 8b06 	vpop	{d8-d10}
 800745c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007460:	200138b0 	.word	0x200138b0
 8007464:	0802f621 	.word	0x0802f621
 8007468:	0802f694 	.word	0x0802f694

0800746c <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 800746c:	4770      	bx	lr

0800746e <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800746e:	4770      	bx	lr

08007470 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007470:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007472:	68c2      	ldr	r2, [r0, #12]
 8007474:	6844      	ldr	r4, [r0, #4]
 8007476:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007478:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800747a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800747e:	07d2      	lsls	r2, r2, #31
 8007480:	bf48      	it	mi
 8007482:	5962      	ldrmi	r2, [r4, r5]
 8007484:	689b      	ldr	r3, [r3, #8]
    }
 8007486:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007488:	bf48      	it	mi
 800748a:	58d3      	ldrmi	r3, [r2, r3]
 800748c:	4718      	bx	r3

0800748e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800748e:	6843      	ldr	r3, [r0, #4]
 8007490:	b12b      	cbz	r3, 800749e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007492:	6883      	ldr	r3, [r0, #8]
 8007494:	b92b      	cbnz	r3, 80074a2 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007496:	68c0      	ldr	r0, [r0, #12]
 8007498:	f000 0001 	and.w	r0, r0, #1
 800749c:	4770      	bx	lr
 800749e:	4618      	mov	r0, r3
 80074a0:	4770      	bx	lr
 80074a2:	2001      	movs	r0, #1
    }
 80074a4:	4770      	bx	lr

080074a6 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80074a6:	b510      	push	{r4, lr}
 80074a8:	2110      	movs	r1, #16
 80074aa:	4604      	mov	r4, r0
 80074ac:	f025 fc3d 	bl	802cd2a <_ZdlPvj>
 80074b0:	4620      	mov	r0, r4
 80074b2:	bd10      	pop	{r4, pc}

080074b4 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 80074b4:	b510      	push	{r4, lr}
 80074b6:	4b03      	ldr	r3, [pc, #12]	; (80074c4 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 80074b8:	6003      	str	r3, [r0, #0]
 80074ba:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80074bc:	f00f fdd6 	bl	801706c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80074c0:	4620      	mov	r0, r4
 80074c2:	bd10      	pop	{r4, pc}
 80074c4:	08030ccc 	.word	0x08030ccc

080074c8 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 80074c8:	b507      	push	{r0, r1, r2, lr}
 80074ca:	4b07      	ldr	r3, [pc, #28]	; (80074e8 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 80074cc:	6003      	str	r3, [r0, #0]
 80074ce:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80074d0:	f00f fdcc 	bl	801706c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80074d4:	9801      	ldr	r0, [sp, #4]
 80074d6:	f241 11c4 	movw	r1, #4548	; 0x11c4
 80074da:	f025 fc26 	bl	802cd2a <_ZdlPvj>
 80074de:	9801      	ldr	r0, [sp, #4]
 80074e0:	b003      	add	sp, #12
 80074e2:	f85d fb04 	ldr.w	pc, [sp], #4
 80074e6:	bf00      	nop
 80074e8:	08030ccc 	.word	0x08030ccc

080074ec <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80074ec:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Return)
 80074ee:	f100 03e4 	add.w	r3, r0, #228	; 0xe4
 80074f2:	4299      	cmp	r1, r3
{
 80074f4:	4604      	mov	r4, r0
 80074f6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Return)
 80074f8:	d103      	bne.n	8007502 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80074fa:	f011 fab9 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80074fe:	f7fe f8ef 	bl	80056e0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel_3Phase)
 8007502:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8007506:	429d      	cmp	r5, r3
 8007508:	d103      	bne.n	8007512 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800750a:	f011 fab1 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_3Phase clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 800750e:	f7fe f957 	bl	80057c0 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_1Phase)
 8007512:	f504 74ba 	add.w	r4, r4, #372	; 0x174
 8007516:	42a5      	cmp	r5, r4
 8007518:	d105      	bne.n	8007526 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800751a:	f011 faa9 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel_1Phase clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 800751e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8007522:	f7fe b93d 	b.w	80057a0 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8007526:	bd38      	pop	{r3, r4, r5, pc}

08007528 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8007528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800752c:	ed2d 8b06 	vpush	{d8-d10}
 8007530:	4604      	mov	r4, r0
 8007532:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8007534:	46a2      	mov	sl, r4
 8007536:	2500      	movs	r5, #0
 8007538:	f012 ff1a 	bl	801a370 <_ZN8touchgfx6ScreenC1Ev>
 800753c:	4b71      	ldr	r3, [pc, #452]	; (8007704 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
 800753e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007540:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8007544:	2226      	movs	r2, #38	; 0x26
 8007546:	4629      	mov	r1, r5
 8007548:	4650      	mov	r0, sl
 800754a:	f026 fcda 	bl	802df02 <memset>
 800754e:	4650      	mov	r0, sl
 8007550:	f7fc f952 	bl	80037f8 <_ZN8touchgfx6WidgetC1Ev>
 8007554:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8007558:	26ff      	movs	r6, #255	; 0xff
 800755a:	4b6b      	ldr	r3, [pc, #428]	; (8007708 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 800755c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800755e:	2226      	movs	r2, #38	; 0x26
 8007560:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007564:	4629      	mov	r1, r5
 8007566:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800756a:	4648      	mov	r0, r9
 800756c:	66a5      	str	r5, [r4, #104]	; 0x68
 800756e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007572:	f026 fcc6 	bl	802df02 <memset>
 8007576:	4648      	mov	r0, r9
 8007578:	f7fc f93e 	bl	80037f8 <_ZN8touchgfx6WidgetC1Ev>
 800757c:	4b63      	ldr	r3, [pc, #396]	; (800770c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>)
 800757e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007580:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007584:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007588:	a90a      	add	r1, sp, #40	; 0x28
 800758a:	4648      	mov	r0, r9
 800758c:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007590:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007594:	f00e fd6d 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007598:	4640      	mov	r0, r8
 800759a:	f7fc f991 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800759e:	4b5c      	ldr	r3, [pc, #368]	; (8007710 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e8>)
 80075a0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80075a4:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 80075a8:	4618      	mov	r0, r3
 80075aa:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80075ae:	ee09 3a90 	vmov	s19, r3
 80075b2:	f00e fe95 	bl	80162e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80075b6:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 80075ba:	4618      	mov	r0, r3
 80075bc:	ee0a 3a10 	vmov	s20, r3
 80075c0:	f00e fe8e 	bl	80162e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80075c4:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 80075c8:	4618      	mov	r0, r3
 80075ca:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 80075ce:	ee0a 3a90 	vmov	s21, r3
 80075d2:	f00e fe85 	bl	80162e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80075d6:	4638      	mov	r0, r7
 80075d8:	f00d fa3e 	bl	8014a58 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80075dc:	4e4d      	ldr	r6, [pc, #308]	; (8007714 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1ec>)
 80075de:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 80075e2:	4618      	mov	r0, r3
 80075e4:	9302      	str	r3, [sp, #8]
 80075e6:	f7fb ff0b 	bl	8003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80075ea:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80075ee:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 80075f2:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80075f6:	4618      	mov	r0, r3
 80075f8:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 80075fc:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 8007600:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 8007604:	ee08 3a10 	vmov	s16, r3
 8007608:	f7fc f95a 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 800760c:	4658      	mov	r0, fp
 800760e:	f00d fa23 	bl	8014a58 <_ZN8touchgfx4LineC1Ev>
 8007612:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 8007616:	4618      	mov	r0, r3
 8007618:	9303      	str	r3, [sp, #12]
 800761a:	f7fb fef1 	bl	8003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800761e:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8007622:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8007626:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 800762a:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 800762e:	4618      	mov	r0, r3
 8007630:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8007634:	ee08 3a90 	vmov	s17, r3
 8007638:	f7fc f942 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 800763c:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8007640:	4618      	mov	r0, r3
 8007642:	ee09 3a10 	vmov	s18, r3
 8007646:	f7fc f93b 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800764a:	4a33      	ldr	r2, [pc, #204]	; (8007718 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1f0>)
 800764c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007650:	e9c3 246d 	strd	r2, r4, [r3, #436]	; 0x1b4
 8007654:	4a31      	ldr	r2, [pc, #196]	; (800771c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1f4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007656:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800765a:	e9c3 256f 	strd	r2, r5, [r3, #444]	; 0x1bc
 800765e:	f504 7069 	add.w	r0, r4, #932	; 0x3a4
 8007662:	f00f fcf9 	bl	8017058 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007666:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800766a:	462a      	mov	r2, r5
 800766c:	4650      	mov	r0, sl
 800766e:	9300      	str	r3, [sp, #0]
 8007670:	4629      	mov	r1, r5
 8007672:	23f0      	movs	r3, #240	; 0xf0
 8007674:	f7fc f89b 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8007678:	1d26      	adds	r6, r4, #4
        color = newColor;
 800767a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800767e:	66a3      	str	r3, [r4, #104]	; 0x68
 8007680:	4651      	mov	r1, sl
 8007682:	4630      	mov	r0, r6
 8007684:	f00b f91c 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_return.setXY(0, 0);
 8007688:	462a      	mov	r2, r5
 800768a:	4648      	mov	r0, r9
 800768c:	4629      	mov	r1, r5
 800768e:	f7fc f881 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8007692:	2308      	movs	r3, #8
    image_return.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007694:	4648      	mov	r0, r9
 8007696:	a90a      	add	r1, sp, #40	; 0x28
 8007698:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800769c:	f00e fce9 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80076a0:	4649      	mov	r1, r9
 80076a2:	4630      	mov	r0, r6
 80076a4:	f00b f90c 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 80076a8:	f44f 729a 	mov.w	r2, #308	; 0x134
 80076ac:	2156      	movs	r1, #86	; 0x56
 80076ae:	4640      	mov	r0, r8
 80076b0:	f7fc f870 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 80076b4:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80076b8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80076bc:	f10d 0910 	add.w	r9, sp, #16
        color = newColor;
 80076c0:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 80076c4:	4648      	mov	r0, r9
 80076c6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80076ca:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80076ce:	4641      	mov	r1, r8
 80076d0:	4798      	blx	r3
 80076d2:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80076d6:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80076da:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80076de:	4b10      	ldr	r3, [pc, #64]	; (8007720 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1f8>)
 80076e0:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 80076e2:	f504 7967 	add.w	r9, r4, #924	; 0x39c
 80076e6:	b92b      	cbnz	r3, 80076f4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>
 80076e8:	4b0e      	ldr	r3, [pc, #56]	; (8007724 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1fc>)
 80076ea:	4a0f      	ldr	r2, [pc, #60]	; (8007728 <_ZN28Measurement_AccurateViewBaseC1Ev+0x200>)
 80076ec:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80076ee:	480f      	ldr	r0, [pc, #60]	; (800772c <_ZN28Measurement_AccurateViewBaseC1Ev+0x204>)
 80076f0:	f026 fa02 	bl	802daf8 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80076f4:	4b0e      	ldr	r3, [pc, #56]	; (8007730 <_ZN28Measurement_AccurateViewBaseC1Ev+0x208>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80076f6:	881b      	ldrh	r3, [r3, #0]
 80076f8:	2b40      	cmp	r3, #64	; 0x40
 80076fa:	d81d      	bhi.n	8007738 <_ZN28Measurement_AccurateViewBaseC1Ev+0x210>
 80076fc:	4b0d      	ldr	r3, [pc, #52]	; (8007734 <_ZN28Measurement_AccurateViewBaseC1Ev+0x20c>)
 80076fe:	4a0a      	ldr	r2, [pc, #40]	; (8007728 <_ZN28Measurement_AccurateViewBaseC1Ev+0x200>)
 8007700:	2161      	movs	r1, #97	; 0x61
 8007702:	e7f4      	b.n	80076ee <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c6>
 8007704:	08030ccc 	.word	0x08030ccc
 8007708:	08031bec 	.word	0x08031bec
 800770c:	08031e38 	.word	0x08031e38
 8007710:	0802f734 	.word	0x0802f734
 8007714:	08031920 	.word	0x08031920
 8007718:	08030cb4 	.word	0x08030cb4
 800771c:	080074ed 	.word	0x080074ed
 8007720:	200138a4 	.word	0x200138a4
 8007724:	0802f4e4 	.word	0x0802f4e4
 8007728:	0802f5e9 	.word	0x0802f5e9
 800772c:	0802f561 	.word	0x0802f561
 8007730:	200138a8 	.word	0x200138a8
 8007734:	0802f5a8 	.word	0x0802f5a8
        return texts->getText(typedTextId);
 8007738:	4bad      	ldr	r3, [pc, #692]	; (80079f0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4c8>)
 800773a:	2140      	movs	r1, #64	; 0x40
 800773c:	6818      	ldr	r0, [r3, #0]
 800773e:	f003 f83b 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8007742:	4aac      	ldr	r2, [pc, #688]	; (80079f4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4cc>)
 8007744:	4603      	mov	r3, r0
 8007746:	2104      	movs	r1, #4
 8007748:	4648      	mov	r0, r9
 800774a:	f014 fb3f 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 800774e:	4640      	mov	r0, r8
        wc1 = value;
 8007750:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 8007754:	f00d febc 	bl	80154d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007758:	4ba7      	ldr	r3, [pc, #668]	; (80079f8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 800775a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 800775c:	4640      	mov	r0, r8
 800775e:	2341      	movs	r3, #65	; 0x41
 8007760:	a90a      	add	r1, sp, #40	; 0x28
 8007762:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007766:	f00d fed3 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800776a:	4641      	mov	r1, r8
 800776c:	4630      	mov	r0, r6
 800776e:	f00b f8a7 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 8007772:	ee19 0a90 	vmov	r0, s19
 8007776:	22f0      	movs	r2, #240	; 0xf0
 8007778:	2121      	movs	r1, #33	; 0x21
 800777a:	f7fc f80b 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 800777e:	f04f 0802 	mov.w	r8, #2
 8007782:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007784:	a909      	add	r1, sp, #36	; 0x24
 8007786:	ee19 0a90 	vmov	r0, s19
 800778a:	aa0a      	add	r2, sp, #40	; 0x28
 800778c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007790:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel_Return.setAction(buttonCallback);
 8007794:	f504 598d 	add.w	r9, r4, #4512	; 0x11a0
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007798:	f00e fa75 	bl	8015c86 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800779c:	225e      	movs	r2, #94	; 0x5e
 800779e:	f8a4 211c 	strh.w	r2, [r4, #284]	; 0x11c
    buttonWithLabel_Return.setAction(buttonCallback);
 80077a2:	f109 0914 	add.w	r9, r9, #20
        updateTextPosition();
 80077a6:	ee19 0a90 	vmov	r0, s19
 80077aa:	f7fc f837 	bl	800381c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80077ae:	ee19 1a90 	vmov	r1, s19
 80077b2:	4630      	mov	r0, r6
        colorPressed = col;
 80077b4:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 80077b8:	f8c4 910c 	str.w	r9, [r4, #268]	; 0x10c
 80077bc:	f00b f880 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_3Phase.setXY(33, 170);
 80077c0:	ee1a 0a10 	vmov	r0, s20
 80077c4:	22aa      	movs	r2, #170	; 0xaa
 80077c6:	2121      	movs	r1, #33	; 0x21
 80077c8:	f7fb ffe4 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 80077cc:	2303      	movs	r3, #3
    buttonWithLabel_3Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80077ce:	a909      	add	r1, sp, #36	; 0x24
 80077d0:	ee1a 0a10 	vmov	r0, s20
 80077d4:	aa0a      	add	r2, sp, #40	; 0x28
 80077d6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80077da:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80077de:	f00e fa52 	bl	8015c86 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80077e2:	225d      	movs	r2, #93	; 0x5d
 80077e4:	f8a4 2164 	strh.w	r2, [r4, #356]	; 0x164
        updateTextPosition();
 80077e8:	ee1a 0a10 	vmov	r0, s20
 80077ec:	f7fc f816 	bl	800381c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80077f0:	ee1a 1a10 	vmov	r1, s20
 80077f4:	4630      	mov	r0, r6
        colorPressed = col;
 80077f6:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 80077fa:	f8c4 9154 	str.w	r9, [r4, #340]	; 0x154
 80077fe:	f00b f85f 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_1Phase.setXY(33, 100);
 8007802:	ee1a 0a90 	vmov	r0, s21
 8007806:	2264      	movs	r2, #100	; 0x64
 8007808:	2121      	movs	r1, #33	; 0x21
 800780a:	f7fb ffc3 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_1Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800780e:	aa0a      	add	r2, sp, #40	; 0x28
 8007810:	2303      	movs	r3, #3
 8007812:	a909      	add	r1, sp, #36	; 0x24
 8007814:	ee1a 0a90 	vmov	r0, s21
 8007818:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800781c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007820:	f00e fa31 	bl	8015c86 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007824:	235c      	movs	r3, #92	; 0x5c
 8007826:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
        updateTextPosition();
 800782a:	ee1a 0a90 	vmov	r0, s21
 800782e:	f7fb fff5 	bl	800381c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007832:	ee1a 1a90 	vmov	r1, s21
 8007836:	4630      	mov	r0, r6
        colorPressed = col;
 8007838:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 800783c:	f8c4 919c 	str.w	r9, [r4, #412]	; 0x19c
 8007840:	f00b f83e 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8007844:	230a      	movs	r3, #10
 8007846:	9300      	str	r3, [sp, #0]
 8007848:	224b      	movs	r2, #75	; 0x4b
 800784a:	23f0      	movs	r3, #240	; 0xf0
 800784c:	4629      	mov	r1, r5
 800784e:	4638      	mov	r0, r7
 8007850:	f7fb ffad 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8007854:	9b02      	ldr	r3, [sp, #8]
 8007856:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800785a:	22a0      	movs	r2, #160	; 0xa0
 800785c:	4611      	mov	r1, r2
 800785e:	4638      	mov	r0, r7
 8007860:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007864:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 8007868:	f00d fa0c 	bl	8014c84 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800786c:	22a0      	movs	r2, #160	; 0xa0
 800786e:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007872:	4638      	mov	r0, r7
 8007874:	f00d fa11 	bl	8014c9a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007878:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 800787c:	2b20      	cmp	r3, #32
 800787e:	d005      	beq.n	800788c <_ZN28Measurement_AccurateViewBaseC1Ev+0x364>
        lineWidthQ5 = widthQ5;
 8007880:	2320      	movs	r3, #32
 8007882:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 8007886:	4638      	mov	r0, r7
 8007888:	f00d f906 	bl	8014a98 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800788c:	4638      	mov	r0, r7
 800788e:	2101      	movs	r1, #1
 8007890:	f00d fa0e 	bl	8014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007894:	4639      	mov	r1, r7
 8007896:	4630      	mov	r0, r6
 8007898:	f00b f812 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800789c:	f04f 37ff 	mov.w	r7, #4294967295
    textArea_menu.setXY(33, 60);
 80078a0:	223c      	movs	r2, #60	; 0x3c
 80078a2:	ee18 0a10 	vmov	r0, s16
 80078a6:	2121      	movs	r1, #33	; 0x21
        linespace = space;
 80078a8:	f04f 0800 	mov.w	r8, #0
        boundingArea = calculateBoundingArea();
 80078ac:	ad04      	add	r5, sp, #16
 80078ae:	f7fb ff71 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 80078b2:	ee18 1a10 	vmov	r1, s16
 80078b6:	4628      	mov	r0, r5
        color = newColor;
 80078b8:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 80078bc:	f8a4 8274 	strh.w	r8, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 80078c0:	f00d fb8c 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80078c4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80078c8:	ee18 3a10 	vmov	r3, s16
 80078cc:	333c      	adds	r3, #60	; 0x3c
 80078ce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80078d2:	4b49      	ldr	r3, [pc, #292]	; (80079f8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 80078d4:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 80078d6:	ee18 0a10 	vmov	r0, s16
 80078da:	234f      	movs	r3, #79	; 0x4f
 80078dc:	a90a      	add	r1, sp, #40	; 0x28
 80078de:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80078e2:	f00d fe15 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80078e6:	ee18 1a10 	vmov	r1, s16
 80078ea:	4630      	mov	r0, r6
 80078ec:	f00a ffe8 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80078f0:	230a      	movs	r3, #10
 80078f2:	9300      	str	r3, [sp, #0]
 80078f4:	2232      	movs	r2, #50	; 0x32
 80078f6:	23f0      	movs	r3, #240	; 0xf0
 80078f8:	4641      	mov	r1, r8
 80078fa:	4658      	mov	r0, fp
 80078fc:	f7fb ff57 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8007900:	9b03      	ldr	r3, [sp, #12]
 8007902:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007906:	22a0      	movs	r2, #160	; 0xa0
 8007908:	4611      	mov	r1, r2
 800790a:	4658      	mov	r0, fp
 800790c:	f8c4 7304 	str.w	r7, [r4, #772]	; 0x304
 8007910:	f8a4 7308 	strh.w	r7, [r4, #776]	; 0x308
 8007914:	f00d f9b6 	bl	8014c84 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007918:	22a0      	movs	r2, #160	; 0xa0
 800791a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800791e:	4658      	mov	r0, fp
 8007920:	f00d f9bb 	bl	8014c9a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007924:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 8007928:	2b20      	cmp	r3, #32
 800792a:	d005      	beq.n	8007938 <_ZN28Measurement_AccurateViewBaseC1Ev+0x410>
        lineWidthQ5 = widthQ5;
 800792c:	2320      	movs	r3, #32
 800792e:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 8007932:	4658      	mov	r0, fp
 8007934:	f00d f8b0 	bl	8014a98 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007938:	4658      	mov	r0, fp
 800793a:	2101      	movs	r1, #1
 800793c:	f00d f9b8 	bl	8014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007940:	4659      	mov	r1, fp
 8007942:	4630      	mov	r0, r6
 8007944:	f00a ffbc 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007948:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 800794c:	ee18 0a90 	vmov	r0, s17
 8007950:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007952:	2700      	movs	r7, #0
 8007954:	2145      	movs	r1, #69	; 0x45
 8007956:	f7fb ff1d 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800795a:	ee18 1a90 	vmov	r1, s17
 800795e:	4628      	mov	r0, r5
        color = newColor;
 8007960:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 8007964:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8007968:	f00d fb38 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800796c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007970:	ee18 3a90 	vmov	r3, s17
 8007974:	333c      	adds	r3, #60	; 0x3c
 8007976:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800797a:	4b1f      	ldr	r3, [pc, #124]	; (80079f8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 800797c:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 800797e:	ee18 0a90 	vmov	r0, s17
 8007982:	2360      	movs	r3, #96	; 0x60
 8007984:	a90a      	add	r1, sp, #40	; 0x28
 8007986:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800798a:	f00d fdc1 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800798e:	ee18 1a90 	vmov	r1, s17
 8007992:	4630      	mov	r0, r6
 8007994:	f00a ff94 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8007998:	ee19 0a10 	vmov	r0, s18
 800799c:	220c      	movs	r2, #12
 800799e:	2136      	movs	r1, #54	; 0x36
 80079a0:	f7fb fef8 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 80079a4:	ee19 1a10 	vmov	r1, s18
 80079a8:	4628      	mov	r0, r5
        color = newColor;
 80079aa:	f8c4 8384 	str.w	r8, [r4, #900]	; 0x384
        linespace = space;
 80079ae:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 80079b2:	f00d fb13 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80079b6:	ee19 2a10 	vmov	r2, s18
 80079ba:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 80079be:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80079c2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80079c6:	4b0c      	ldr	r3, [pc, #48]	; (80079f8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 80079c8:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 80079ca:	ee19 0a10 	vmov	r0, s18
 80079ce:	235f      	movs	r3, #95	; 0x5f
 80079d0:	a90a      	add	r1, sp, #40	; 0x28
 80079d2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80079d6:	f00d fd9b 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80079da:	4630      	mov	r0, r6
 80079dc:	ee19 1a10 	vmov	r1, s18
 80079e0:	f00a ff6e 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80079e4:	4620      	mov	r0, r4
 80079e6:	b00d      	add	sp, #52	; 0x34
 80079e8:	ecbd 8b06 	vpop	{d8-d10}
 80079ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80079f0:	200138b0 	.word	0x200138b0
 80079f4:	0802f621 	.word	0x0802f621
 80079f8:	0802f694 	.word	0x0802f694

080079fc <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{

}
 80079fc:	4770      	bx	lr

080079fe <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80079fe:	4770      	bx	lr

08007a00 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007a00:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007a02:	68c2      	ldr	r2, [r0, #12]
 8007a04:	6844      	ldr	r4, [r0, #4]
 8007a06:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007a08:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007a0a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007a0e:	07d2      	lsls	r2, r2, #31
 8007a10:	bf48      	it	mi
 8007a12:	5962      	ldrmi	r2, [r4, r5]
 8007a14:	689b      	ldr	r3, [r3, #8]
    }
 8007a16:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007a18:	bf48      	it	mi
 8007a1a:	58d3      	ldrmi	r3, [r2, r3]
 8007a1c:	4718      	bx	r3

08007a1e <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007a1e:	6843      	ldr	r3, [r0, #4]
 8007a20:	b12b      	cbz	r3, 8007a2e <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007a22:	6883      	ldr	r3, [r0, #8]
 8007a24:	b92b      	cbnz	r3, 8007a32 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007a26:	68c0      	ldr	r0, [r0, #12]
 8007a28:	f000 0001 	and.w	r0, r0, #1
 8007a2c:	4770      	bx	lr
 8007a2e:	4618      	mov	r0, r3
 8007a30:	4770      	bx	lr
 8007a32:	2001      	movs	r0, #1
    }
 8007a34:	4770      	bx	lr

08007a36 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007a36:	b510      	push	{r4, lr}
 8007a38:	2110      	movs	r1, #16
 8007a3a:	4604      	mov	r4, r0
 8007a3c:	f025 f975 	bl	802cd2a <_ZdlPvj>
 8007a40:	4620      	mov	r0, r4
 8007a42:	bd10      	pop	{r4, pc}

08007a44 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8007a44:	b510      	push	{r4, lr}
 8007a46:	4b03      	ldr	r3, [pc, #12]	; (8007a54 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x10>)
 8007a48:	6003      	str	r3, [r0, #0]
 8007a4a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007a4c:	f00f fb0e 	bl	801706c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007a50:	4620      	mov	r0, r4
 8007a52:	bd10      	pop	{r4, pc}
 8007a54:	08030d18 	.word	0x08030d18

08007a58 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8007a58:	b507      	push	{r0, r1, r2, lr}
 8007a5a:	4b07      	ldr	r3, [pc, #28]	; (8007a78 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev+0x20>)
 8007a5c:	6003      	str	r3, [r0, #0]
 8007a5e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007a60:	f00f fb04 	bl	801706c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007a64:	9801      	ldr	r0, [sp, #4]
 8007a66:	f241 4178 	movw	r1, #5240	; 0x1478
 8007a6a:	f025 f95e 	bl	802cd2a <_ZdlPvj>
 8007a6e:	9801      	ldr	r0, [sp, #4]
 8007a70:	b003      	add	sp, #12
 8007a72:	f85d fb04 	ldr.w	pc, [sp], #4
 8007a76:	bf00      	nop
 8007a78:	08030d18 	.word	0x08030d18

08007a7c <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_Return)
 8007a7c:	3098      	adds	r0, #152	; 0x98
 8007a7e:	4288      	cmp	r0, r1
{
 8007a80:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_Return)
 8007a82:	d105      	bne.n	8007a90 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007a84:	f010 fff4 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8007a88:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8007a8c:	f7fd be78 	b.w	8005780 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8007a90:	bd08      	pop	{r3, pc}
	...

08007a94 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 8007a94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007a98:	ed2d 8b0a 	vpush	{d8-d12}
 8007a9c:	4604      	mov	r4, r0
 8007a9e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8007aa0:	46a0      	mov	r8, r4
 8007aa2:	2500      	movs	r5, #0
 8007aa4:	f012 fc64 	bl	801a370 <_ZN8touchgfx6ScreenC1Ev>
 8007aa8:	4bce      	ldr	r3, [pc, #824]	; (8007de4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x350>)
 8007aaa:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007aac:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8007ab0:	2226      	movs	r2, #38	; 0x26
 8007ab2:	4629      	mov	r1, r5
 8007ab4:	4640      	mov	r0, r8
 8007ab6:	f026 fa24 	bl	802df02 <memset>
 8007aba:	4640      	mov	r0, r8
 8007abc:	f7fb fe9c 	bl	80037f8 <_ZN8touchgfx6WidgetC1Ev>
 8007ac0:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8007ac4:	26ff      	movs	r6, #255	; 0xff
 8007ac6:	4bc8      	ldr	r3, [pc, #800]	; (8007de8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x354>)
 8007ac8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007aca:	2226      	movs	r2, #38	; 0x26
 8007acc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007ad0:	4629      	mov	r1, r5
 8007ad2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007ad6:	4638      	mov	r0, r7
 8007ad8:	66a5      	str	r5, [r4, #104]	; 0x68
 8007ada:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007ade:	f026 fa10 	bl	802df02 <memset>
 8007ae2:	4638      	mov	r0, r7
 8007ae4:	f7fb fe88 	bl	80037f8 <_ZN8touchgfx6WidgetC1Ev>
 8007ae8:	4bc0      	ldr	r3, [pc, #768]	; (8007dec <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x358>)
 8007aea:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007aec:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007af0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007af4:	a90a      	add	r1, sp, #40	; 0x28
 8007af6:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8007afa:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 8007afc:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007b00:	f00e fab7 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007b04:	4658      	mov	r0, fp
 8007b06:	f00e fbeb 	bl	80162e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007b0a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8007b0e:	f504 7994 	add.w	r9, r4, #296	; 0x128
 8007b12:	4618      	mov	r0, r3
 8007b14:	ee0a 3a90 	vmov	s21, r3
 8007b18:	f7fb fed2 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8007b1c:	4648      	mov	r0, r9
 8007b1e:	f7fb fecf 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8007b22:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 8007b26:	4618      	mov	r0, r3
 8007b28:	ee0b 3a10 	vmov	s22, r3
 8007b2c:	f7fb fec8 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8007b30:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 8007b34:	4618      	mov	r0, r3
 8007b36:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007b3a:	4ead      	ldr	r6, [pc, #692]	; (8007df0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x35c>)
        : TextArea()
 8007b3c:	f7fb fec0 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8007b40:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 8007b44:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 8007b48:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007b4a:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 8007b4e:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 8007b52:	f7fb feb5 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8007b56:	f504 7314 	add.w	r3, r4, #592	; 0x250
 8007b5a:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007b5c:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 8007b60:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 8007b64:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 8007b68:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 8007b6c:	f7fb fea8 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8007b70:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 8007b74:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8007b78:	4650      	mov	r0, sl
 8007b7a:	f00d ff3d 	bl	80159f8 <_ZN8touchgfx5GaugeC1Ev>
 8007b7e:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 8007b82:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007b84:	4e9b      	ldr	r6, [pc, #620]	; (8007df4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x360>)
 8007b86:	ee08 3a10 	vmov	s16, r3
 8007b8a:	f00c ff65 	bl	8014a58 <_ZN8touchgfx4LineC1Ev>
 8007b8e:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 8007b92:	4618      	mov	r0, r3
 8007b94:	9302      	str	r3, [sp, #8]
 8007b96:	f7fb fc33 	bl	8003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007b9a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8007b9e:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8007ba2:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8007ba6:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 8007baa:	4618      	mov	r0, r3
 8007bac:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8007bb0:	ee09 3a10 	vmov	s18, r3
 8007bb4:	f7fb fe84 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8007bb8:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8007bbc:	4618      	mov	r0, r3
 8007bbe:	ee08 3a90 	vmov	s17, r3
 8007bc2:	f00c ff49 	bl	8014a58 <_ZN8touchgfx4LineC1Ev>
 8007bc6:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 8007bca:	4618      	mov	r0, r3
 8007bcc:	9303      	str	r3, [sp, #12]
 8007bce:	f7fb fc17 	bl	8003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007bd2:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8007bd6:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 8007bda:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 8007bde:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 8007be2:	4618      	mov	r0, r3
 8007be4:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8007be8:	ee09 3a90 	vmov	s19, r3
 8007bec:	f7fb fe68 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8007bf0:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 8007bf4:	4618      	mov	r0, r3
 8007bf6:	ee0a 3a10 	vmov	s20, r3
 8007bfa:	f7fb fe61 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007bfe:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007c02:	4a7d      	ldr	r2, [pc, #500]	; (8007df8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x364>)
 8007c04:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 8007c08:	4a7c      	ldr	r2, [pc, #496]	; (8007dfc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x368>)
 8007c0a:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 8007c0e:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 8007c12:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007c16:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007c1a:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 8007c1e:	f00f fa1b 	bl	8017058 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007c22:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007c26:	462a      	mov	r2, r5
 8007c28:	4640      	mov	r0, r8
 8007c2a:	9300      	str	r3, [sp, #0]
 8007c2c:	4629      	mov	r1, r5
 8007c2e:	23f0      	movs	r3, #240	; 0xf0
 8007c30:	f7fb fdbd 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8007c34:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007c36:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007c3a:	66a3      	str	r3, [r4, #104]	; 0x68
 8007c3c:	4641      	mov	r1, r8
 8007c3e:	4630      	mov	r0, r6
 8007c40:	f00a fe3e 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8007c44:	462a      	mov	r2, r5
 8007c46:	4638      	mov	r0, r7
 8007c48:	4629      	mov	r1, r5
 8007c4a:	f7fb fda3 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8007c4e:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007c52:	4638      	mov	r0, r7
 8007c54:	a90a      	add	r1, sp, #40	; 0x28
 8007c56:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007c5a:	f00e fa0a 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007c5e:	4639      	mov	r1, r7
 8007c60:	4630      	mov	r0, r6
 8007c62:	f00a fe2d 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 257);
 8007c66:	4658      	mov	r0, fp
 8007c68:	f240 1201 	movw	r2, #257	; 0x101
 8007c6c:	2121      	movs	r1, #33	; 0x21
 8007c6e:	f7fb fd91 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8007c72:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007c74:	a909      	add	r1, sp, #36	; 0x24
 8007c76:	4658      	mov	r0, fp
 8007c78:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007c7c:	aa0a      	add	r2, sp, #40	; 0x28
 8007c7e:	2302      	movs	r3, #2
 8007c80:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007c84:	f00d ffff 	bl	8015c86 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007c88:	f04f 024b 	mov.w	r2, #75	; 0x4b
 8007c8c:	f8a4 20d0 	strh.w	r2, [r4, #208]	; 0xd0
        updateTextPosition();
 8007c90:	4658      	mov	r0, fp
 8007c92:	f7fb fdc3 	bl	800381c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_Return.setAction(buttonCallback);
 8007c96:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 8007c9a:	f04f 38ff 	mov.w	r8, #4294967295
 8007c9e:	3308      	adds	r3, #8
 8007ca0:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007ca4:	4659      	mov	r1, fp
 8007ca6:	4630      	mov	r0, r6
        colorPressed = col;
 8007ca8:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 8007cac:	af04      	add	r7, sp, #16
 8007cae:	f00a fe07 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 8007cb2:	22c2      	movs	r2, #194	; 0xc2
 8007cb4:	ee1a 0a90 	vmov	r0, s21
 8007cb8:	4629      	mov	r1, r5
 8007cba:	f7fb fd6b 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8007cbe:	ee1a 1a90 	vmov	r1, s21
 8007cc2:	4638      	mov	r0, r7
        color = newColor;
 8007cc4:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 8007cc8:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8007ccc:	f00d f986 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007cd0:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007cd4:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8007cd8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007cdc:	f04f 0b0a 	mov.w	fp, #10
 8007ce0:	4b47      	ldr	r3, [pc, #284]	; (8007e00 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x36c>)
 8007ce2:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HYQ8));
 8007ce4:	ee1a 0a90 	vmov	r0, s21
 8007ce8:	a90a      	add	r1, sp, #40	; 0x28
 8007cea:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8007cee:	f00d fc0f 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007cf2:	ee1a 1a90 	vmov	r1, s21
 8007cf6:	4630      	mov	r0, r6
 8007cf8:	f00a fde2 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 8007cfc:	22c2      	movs	r2, #194	; 0xc2
 8007cfe:	4648      	mov	r0, r9
 8007d00:	21d9      	movs	r1, #217	; 0xd9
 8007d02:	f7fb fd47 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8007d06:	4649      	mov	r1, r9
 8007d08:	4638      	mov	r0, r7
        color = newColor;
 8007d0a:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 8007d0e:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 8007d12:	f00d f963 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d16:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007d1a:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 8007d1e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007d22:	4b37      	ldr	r3, [pc, #220]	; (8007e00 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x36c>)
 8007d24:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MW1V));
 8007d26:	4648      	mov	r0, r9
 8007d28:	2309      	movs	r3, #9
 8007d2a:	a90a      	add	r1, sp, #40	; 0x28
 8007d2c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007d30:	f00d fbee 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d34:	4649      	mov	r1, r9
 8007d36:	4630      	mov	r0, r6
 8007d38:	f00a fdc2 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 8007d3c:	2255      	movs	r2, #85	; 0x55
 8007d3e:	ee1b 0a10 	vmov	r0, s22
 8007d42:	2171      	movs	r1, #113	; 0x71
 8007d44:	f7fb fd26 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8007d48:	ee1b 1a10 	vmov	r1, s22
 8007d4c:	4638      	mov	r0, r7
        color = newColor;
 8007d4e:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 8007d52:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 8007d56:	f00d f941 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d5a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007d5e:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8007d62:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007d66:	4b26      	ldr	r3, [pc, #152]	; (8007e00 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x36c>)
 8007d68:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H3VA));
 8007d6a:	ee1b 0a10 	vmov	r0, s22
 8007d6e:	f04f 0308 	mov.w	r3, #8
 8007d72:	a90a      	add	r1, sp, #40	; 0x28
 8007d74:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007d78:	f00d fbca 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d7c:	ee1b 1a10 	vmov	r1, s22
 8007d80:	4630      	mov	r0, r6
 8007d82:	f00a fd9d 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD1_Current.setPosition(0, 239, 240, 15);
 8007d86:	230f      	movs	r3, #15
 8007d88:	22ef      	movs	r2, #239	; 0xef
 8007d8a:	ee1b 0a90 	vmov	r0, s23
 8007d8e:	9300      	str	r3, [sp, #0]
 8007d90:	4629      	mov	r1, r5
 8007d92:	23f0      	movs	r3, #240	; 0xf0
 8007d94:	f7fb fd0b 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8007d98:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 8007d9c:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 8007da0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007da4:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 8007da8:	ee1b 1a90 	vmov	r1, s23
 8007dac:	4638      	mov	r0, r7
 8007dae:	4798      	blx	r3
 8007db0:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007db4:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8007db8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007dbc:	4b11      	ldr	r3, [pc, #68]	; (8007e04 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x370>)
 8007dbe:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(AMD1_CurrentBuffer, AMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DKHH).getText());
 8007dc0:	f204 691c 	addw	r9, r4, #1564	; 0x61c
 8007dc4:	b92b      	cbnz	r3, 8007dd2 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x33e>
 8007dc6:	4b10      	ldr	r3, [pc, #64]	; (8007e08 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x374>)
 8007dc8:	4a10      	ldr	r2, [pc, #64]	; (8007e0c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x378>)
 8007dca:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007dcc:	4810      	ldr	r0, [pc, #64]	; (8007e10 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x37c>)
 8007dce:	f025 fe93 	bl	802daf8 <__assert_func>
 8007dd2:	4b10      	ldr	r3, [pc, #64]	; (8007e14 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x380>)
 8007dd4:	881b      	ldrh	r3, [r3, #0]
 8007dd6:	2b0e      	cmp	r3, #14
 8007dd8:	d820      	bhi.n	8007e1c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x388>
 8007dda:	4b0f      	ldr	r3, [pc, #60]	; (8007e18 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x384>)
 8007ddc:	4a0b      	ldr	r2, [pc, #44]	; (8007e0c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x378>)
 8007dde:	2161      	movs	r1, #97	; 0x61
 8007de0:	e7f4      	b.n	8007dcc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x338>
 8007de2:	bf00      	nop
 8007de4:	08030d18 	.word	0x08030d18
 8007de8:	08031bec 	.word	0x08031bec
 8007dec:	08031e38 	.word	0x08031e38
 8007df0:	0802f734 	.word	0x0802f734
 8007df4:	08031920 	.word	0x08031920
 8007df8:	08030d00 	.word	0x08030d00
 8007dfc:	08007a7d 	.word	0x08007a7d
 8007e00:	0802f694 	.word	0x0802f694
 8007e04:	200138a4 	.word	0x200138a4
 8007e08:	0802f4e4 	.word	0x0802f4e4
 8007e0c:	0802f5e9 	.word	0x0802f5e9
 8007e10:	0802f561 	.word	0x0802f561
 8007e14:	200138a8 	.word	0x200138a8
 8007e18:	0802f5a8 	.word	0x0802f5a8
        return texts->getText(typedTextId);
 8007e1c:	4bde      	ldr	r3, [pc, #888]	; (8008198 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x704>)
 8007e1e:	210e      	movs	r1, #14
 8007e20:	6818      	ldr	r0, [r3, #0]
 8007e22:	f002 fcc9 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8007e26:	4add      	ldr	r2, [pc, #884]	; (800819c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x708>)
 8007e28:	4603      	mov	r3, r0
 8007e2a:	4659      	mov	r1, fp
 8007e2c:	4648      	mov	r0, r9
 8007e2e:	f013 ffcd 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007e32:	f04f 010f 	mov.w	r1, #15
 8007e36:	4ada      	ldr	r2, [pc, #872]	; (80081a0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
        wc1 = value;
 8007e38:	f8c4 9200 	str.w	r9, [r4, #512]	; 0x200
    AMD1_Current.setTypedText(touchgfx::TypedText(T_AMD3_CURRENTAMD1_CURRENT));
 8007e3c:	ee1b 0a90 	vmov	r0, s23
 8007e40:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8007e44:	a90a      	add	r1, sp, #40	; 0x28
 8007e46:	920a      	str	r2, [sp, #40]	; 0x28
 8007e48:	f00d fb62 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007e4c:	ee1b 1a90 	vmov	r1, s23
 8007e50:	4630      	mov	r0, r6
 8007e52:	f00a fd35 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD1_Frequency.setPosition(0, 224, 240, 15);
 8007e56:	210f      	movs	r1, #15
 8007e58:	22e0      	movs	r2, #224	; 0xe0
 8007e5a:	ee1c 0a10 	vmov	r0, s24
 8007e5e:	9100      	str	r1, [sp, #0]
 8007e60:	23f0      	movs	r3, #240	; 0xf0
 8007e62:	4629      	mov	r1, r5
 8007e64:	f7fb fca3 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8007e68:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 8007e6c:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 8007e70:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007e74:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 8007e78:	ee1c 1a10 	vmov	r1, s24
 8007e7c:	4638      	mov	r0, r7
 8007e7e:	4798      	blx	r3
 8007e80:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007e84:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007e88:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007e8c:	49c5      	ldr	r1, [pc, #788]	; (80081a4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x710>)
 8007e8e:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(AMD1_FrequencyBuffer, AMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_23ZO).getText());
 8007e90:	f504 69c6 	add.w	r9, r4, #1584	; 0x630
 8007e94:	2b00      	cmp	r3, #0
 8007e96:	d096      	beq.n	8007dc6 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x332>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007e98:	48c3      	ldr	r0, [pc, #780]	; (80081a8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x714>)
 8007e9a:	8803      	ldrh	r3, [r0, #0]
 8007e9c:	2b0c      	cmp	r3, #12
 8007e9e:	d99c      	bls.n	8007dda <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x346>
        return texts->getText(typedTextId);
 8007ea0:	4bbd      	ldr	r3, [pc, #756]	; (8008198 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x704>)
 8007ea2:	210c      	movs	r1, #12
 8007ea4:	6818      	ldr	r0, [r3, #0]
 8007ea6:	f002 fc87 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8007eaa:	4abc      	ldr	r2, [pc, #752]	; (800819c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x708>)
 8007eac:	4603      	mov	r3, r0
 8007eae:	4659      	mov	r1, fp
 8007eb0:	4648      	mov	r0, r9
 8007eb2:	f013 ff8b 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    AMD1_Frequency.setTypedText(touchgfx::TypedText(T_AMD3_FREQUENCY));
 8007eb6:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 8007eba:	4ab9      	ldr	r2, [pc, #740]	; (80081a0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
 8007ebc:	f8c4 924c 	str.w	r9, [r4, #588]	; 0x24c
 8007ec0:	230d      	movs	r3, #13
 8007ec2:	4661      	mov	r1, ip
 8007ec4:	ee1c 0a10 	vmov	r0, s24
 8007ec8:	920a      	str	r2, [sp, #40]	; 0x28
 8007eca:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007ece:	f00d fb1f 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007ed2:	ee1c 1a10 	vmov	r1, s24
 8007ed6:	4630      	mov	r0, r6
 8007ed8:	f00a fcf2 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD1_Distance.setPosition(0, 209, 240, 15);
 8007edc:	f04f 0c0f 	mov.w	ip, #15
 8007ee0:	22d1      	movs	r2, #209	; 0xd1
 8007ee2:	ee1c 0a90 	vmov	r0, s25
 8007ee6:	f8cd c000 	str.w	ip, [sp]
 8007eea:	23f0      	movs	r3, #240	; 0xf0
 8007eec:	4629      	mov	r1, r5
 8007eee:	f7fb fc5e 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8007ef2:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 8007ef6:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 8007efa:	4638      	mov	r0, r7
 8007efc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007f00:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 8007f04:	ee1c 1a90 	vmov	r1, s25
 8007f08:	4798      	blx	r3
 8007f0a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007f0e:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 8007f12:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007f16:	49a3      	ldr	r1, [pc, #652]	; (80081a4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x710>)
 8007f18:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(AMD1_DistanceBuffer, AMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_7DZL).getText());
 8007f1a:	f204 6744 	addw	r7, r4, #1604	; 0x644
 8007f1e:	2b00      	cmp	r3, #0
 8007f20:	f43f af51 	beq.w	8007dc6 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x332>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007f24:	48a0      	ldr	r0, [pc, #640]	; (80081a8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x714>)
 8007f26:	8803      	ldrh	r3, [r0, #0]
 8007f28:	2b0b      	cmp	r3, #11
 8007f2a:	f67f af56 	bls.w	8007dda <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x346>
        return texts->getText(typedTextId);
 8007f2e:	4b9a      	ldr	r3, [pc, #616]	; (8008198 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x704>)
 8007f30:	210b      	movs	r1, #11
 8007f32:	6818      	ldr	r0, [r3, #0]
 8007f34:	f002 fc40 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8007f38:	4a98      	ldr	r2, [pc, #608]	; (800819c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x708>)
 8007f3a:	4603      	mov	r3, r0
 8007f3c:	4659      	mov	r1, fp
 8007f3e:	4638      	mov	r0, r7
 8007f40:	f013 ff44 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007f44:	4a96      	ldr	r2, [pc, #600]	; (80081a0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
 8007f46:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 8007f4a:	2336      	movs	r3, #54	; 0x36
    AMD1_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 8007f4c:	ee1c 0a90 	vmov	r0, s25
 8007f50:	a90a      	add	r1, sp, #40	; 0x28
 8007f52:	920a      	str	r2, [sp, #40]	; 0x28
 8007f54:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007f58:	f00d fada 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007f5c:	ee1c 1a90 	vmov	r1, s25
 8007f60:	4630      	mov	r0, r6
 8007f62:	f00a fcad 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007f66:	2304      	movs	r3, #4
    AMD1_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8007f68:	a90a      	add	r1, sp, #40	; 0x28
 8007f6a:	4650      	mov	r0, sl
 8007f6c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007f70:	f00a fc38 	bl	80127e4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    AMD1_Gauge.setPosition(28, 103, 184, 106);
 8007f74:	236a      	movs	r3, #106	; 0x6a
 8007f76:	9300      	str	r3, [sp, #0]
 8007f78:	2267      	movs	r2, #103	; 0x67
 8007f7a:	23b8      	movs	r3, #184	; 0xb8
 8007f7c:	211c      	movs	r1, #28
 8007f7e:	4650      	mov	r0, sl
 8007f80:	f7fb fc15 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
    AMD1_Gauge.setCenter(92, 92);
 8007f84:	225c      	movs	r2, #92	; 0x5c
 8007f86:	4611      	mov	r1, r2
 8007f88:	4650      	mov	r0, sl
 8007f8a:	f00d fde0 	bl	8015b4e <_ZN8touchgfx5Gauge9setCenterEii>
    AMD1_Gauge.setStartEndAngle(-90, 90);
 8007f8e:	225a      	movs	r2, #90	; 0x5a
 8007f90:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007f94:	4650      	mov	r0, sl
 8007f96:	f00d fe5f 	bl	8015c58 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    AMD1_Gauge.setRange(-90, 90);
 8007f9a:	462b      	mov	r3, r5
 8007f9c:	225a      	movs	r2, #90	; 0x5a
 8007f9e:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007fa2:	4650      	mov	r0, sl
 8007fa4:	9500      	str	r5, [sp, #0]
 8007fa6:	f00a faca 	bl	801253e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    AMD1_Gauge.setValue(0);
 8007faa:	4629      	mov	r1, r5
 8007fac:	4650      	mov	r0, sl
 8007fae:	f00d fdfd 	bl	8015bac <_ZN8touchgfx5Gauge8setValueEi>
    AMD1_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8007fb2:	2335      	movs	r3, #53	; 0x35
 8007fb4:	2208      	movs	r2, #8
 8007fb6:	2105      	movs	r1, #5
 8007fb8:	4650      	mov	r0, sl
 8007fba:	f00d fdb3 	bl	8015b24 <_ZN8touchgfx5Gauge9setNeedleEtss>
    AMD1_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007fbe:	2101      	movs	r1, #1
 8007fc0:	4650      	mov	r0, sl
 8007fc2:	f00d fd51 	bl	8015a68 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    AMD1_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007fc6:	2101      	movs	r1, #1
 8007fc8:	4650      	mov	r0, sl
 8007fca:	f00d fd50 	bl	8015a6e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8007fce:	4651      	mov	r1, sl
 8007fd0:	4630      	mov	r0, r6
 8007fd2:	f00a fc75 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8007fd6:	ee18 0a10 	vmov	r0, s16
 8007fda:	23f0      	movs	r3, #240	; 0xf0
 8007fdc:	224b      	movs	r2, #75	; 0x4b
 8007fde:	4629      	mov	r1, r5
 8007fe0:	f8cd b000 	str.w	fp, [sp]
 8007fe4:	f7fb fbe3 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8007fe8:	9b02      	ldr	r3, [sp, #8]
 8007fea:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007fee:	22a0      	movs	r2, #160	; 0xa0
 8007ff0:	4611      	mov	r1, r2
 8007ff2:	ee18 0a10 	vmov	r0, s16
 8007ff6:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007ffa:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 8007ffe:	f00c fe41 	bl	8014c84 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008002:	ee18 0a10 	vmov	r0, s16
 8008006:	22a0      	movs	r2, #160	; 0xa0
 8008008:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800800c:	f00c fe45 	bl	8014c9a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008010:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8008014:	2b20      	cmp	r3, #32
 8008016:	d006      	beq.n	8008026 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x592>
        lineWidthQ5 = widthQ5;
 8008018:	2320      	movs	r3, #32
        updateCachedShape();
 800801a:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 800801e:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8008022:	f00c fd39 	bl	8014a98 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008026:	ee18 0a10 	vmov	r0, s16
 800802a:	2101      	movs	r1, #1
 800802c:	f00c fe40 	bl	8014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008030:	ee18 1a10 	vmov	r1, s16
 8008034:	4630      	mov	r0, r6
 8008036:	f00a fc43 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800803a:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(23, 60);
 800803e:	223c      	movs	r2, #60	; 0x3c
 8008040:	ee19 0a10 	vmov	r0, s18
 8008044:	2117      	movs	r1, #23
        linespace = space;
 8008046:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 800804a:	ad04      	add	r5, sp, #16
 800804c:	f7fb fba2 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8008050:	ee19 1a10 	vmov	r1, s18
 8008054:	4628      	mov	r0, r5
        color = newColor;
 8008056:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 800805a:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 800805e:	f00c ffbd 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008062:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008066:	ee19 3a10 	vmov	r3, s18
 800806a:	333c      	adds	r3, #60	; 0x3c
 800806c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008070:	4f4b      	ldr	r7, [pc, #300]	; (80081a0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
 8008072:	970a      	str	r7, [sp, #40]	; 0x28
 8008074:	234c      	movs	r3, #76	; 0x4c
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8008076:	ee19 0a10 	vmov	r0, s18
 800807a:	a90a      	add	r1, sp, #40	; 0x28
 800807c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008080:	f00d fa46 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008084:	ee19 1a10 	vmov	r1, s18
 8008088:	4630      	mov	r0, r6
 800808a:	f00a fc19 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800808e:	230a      	movs	r3, #10
 8008090:	ee18 0a90 	vmov	r0, s17
 8008094:	9300      	str	r3, [sp, #0]
 8008096:	2232      	movs	r2, #50	; 0x32
 8008098:	23f0      	movs	r3, #240	; 0xf0
 800809a:	4649      	mov	r1, r9
 800809c:	f7fb fb87 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 80080a0:	9b03      	ldr	r3, [sp, #12]
 80080a2:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80080a6:	22a0      	movs	r2, #160	; 0xa0
 80080a8:	4611      	mov	r1, r2
 80080aa:	ee18 0a90 	vmov	r0, s17
 80080ae:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 80080b2:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 80080b6:	f00c fde5 	bl	8014c84 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80080ba:	ee18 0a90 	vmov	r0, s17
 80080be:	22a0      	movs	r2, #160	; 0xa0
 80080c0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80080c4:	f00c fde9 	bl	8014c9a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80080c8:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 80080cc:	2b20      	cmp	r3, #32
 80080ce:	d006      	beq.n	80080de <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x64a>
        lineWidthQ5 = widthQ5;
 80080d0:	2320      	movs	r3, #32
        updateCachedShape();
 80080d2:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 80080d6:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 80080da:	f00c fcdd 	bl	8014a98 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80080de:	ee18 0a90 	vmov	r0, s17
 80080e2:	2101      	movs	r1, #1
 80080e4:	f00c fde4 	bl	8014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80080e8:	ee18 1a90 	vmov	r1, s17
 80080ec:	4630      	mov	r0, r6
 80080ee:	f00a fbe7 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80080f2:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 80080f6:	ee19 0a90 	vmov	r0, s19
 80080fa:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80080fc:	f04f 0800 	mov.w	r8, #0
 8008100:	2145      	movs	r1, #69	; 0x45
 8008102:	f7fb fb47 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008106:	ee19 1a90 	vmov	r1, s19
 800810a:	4628      	mov	r0, r5
        color = newColor;
 800810c:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 8008110:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 8008114:	f00c ff62 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008118:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800811c:	ee19 3a90 	vmov	r3, s19
 8008120:	333c      	adds	r3, #60	; 0x3c
 8008122:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008126:	234d      	movs	r3, #77	; 0x4d
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8008128:	ee19 0a90 	vmov	r0, s19
 800812c:	a90a      	add	r1, sp, #40	; 0x28
 800812e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008132:	970a      	str	r7, [sp, #40]	; 0x28
 8008134:	f00d f9ec 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008138:	ee19 1a90 	vmov	r1, s19
 800813c:	4630      	mov	r0, r6
 800813e:	f00a fbbf 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8008142:	ee1a 0a10 	vmov	r0, s20
 8008146:	220c      	movs	r2, #12
 8008148:	2136      	movs	r1, #54	; 0x36
 800814a:	f7fb fb23 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 800814e:	ee1a 1a10 	vmov	r1, s20
 8008152:	4628      	mov	r0, r5
        color = newColor;
 8008154:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 8008158:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 800815c:	f00c ff3e 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008160:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008164:	ee1a 3a10 	vmov	r3, s20
 8008168:	333c      	adds	r3, #60	; 0x3c
 800816a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800816e:	234e      	movs	r3, #78	; 0x4e
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8008170:	ee1a 0a10 	vmov	r0, s20
 8008174:	a90a      	add	r1, sp, #40	; 0x28
 8008176:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800817a:	970a      	str	r7, [sp, #40]	; 0x28
 800817c:	f00d f9c8 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008180:	4630      	mov	r0, r6
 8008182:	ee1a 1a10 	vmov	r1, s20
 8008186:	f00a fb9b 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800818a:	4620      	mov	r0, r4
 800818c:	b00d      	add	sp, #52	; 0x34
 800818e:	ecbd 8b0a 	vpop	{d8-d12}
 8008192:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008196:	bf00      	nop
 8008198:	200138b0 	.word	0x200138b0
 800819c:	0802f621 	.word	0x0802f621
 80081a0:	0802f694 	.word	0x0802f694
 80081a4:	200138a4 	.word	0x200138a4
 80081a8:	200138a8 	.word	0x200138a8

080081ac <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{

}
 80081ac:	4770      	bx	lr

080081ae <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80081ae:	4770      	bx	lr

080081b0 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80081b0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80081b2:	68c2      	ldr	r2, [r0, #12]
 80081b4:	6844      	ldr	r4, [r0, #4]
 80081b6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80081b8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80081ba:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80081be:	07d2      	lsls	r2, r2, #31
 80081c0:	bf48      	it	mi
 80081c2:	5962      	ldrmi	r2, [r4, r5]
 80081c4:	689b      	ldr	r3, [r3, #8]
    }
 80081c6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80081c8:	bf48      	it	mi
 80081ca:	58d3      	ldrmi	r3, [r2, r3]
 80081cc:	4718      	bx	r3

080081ce <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80081ce:	6843      	ldr	r3, [r0, #4]
 80081d0:	b12b      	cbz	r3, 80081de <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80081d2:	6883      	ldr	r3, [r0, #8]
 80081d4:	b92b      	cbnz	r3, 80081e2 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80081d6:	68c0      	ldr	r0, [r0, #12]
 80081d8:	f000 0001 	and.w	r0, r0, #1
 80081dc:	4770      	bx	lr
 80081de:	4618      	mov	r0, r3
 80081e0:	4770      	bx	lr
 80081e2:	2001      	movs	r0, #1
    }
 80081e4:	4770      	bx	lr

080081e6 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80081e6:	b510      	push	{r4, lr}
 80081e8:	2110      	movs	r1, #16
 80081ea:	4604      	mov	r4, r0
 80081ec:	f024 fd9d 	bl	802cd2a <_ZdlPvj>
 80081f0:	4620      	mov	r0, r4
 80081f2:	bd10      	pop	{r4, pc}

080081f4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 80081f4:	b510      	push	{r4, lr}
 80081f6:	4b03      	ldr	r3, [pc, #12]	; (8008204 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x10>)
 80081f8:	6003      	str	r3, [r0, #0]
 80081fa:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80081fc:	f00e ff36 	bl	801706c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008200:	4620      	mov	r0, r4
 8008202:	bd10      	pop	{r4, pc}
 8008204:	08030d64 	.word	0x08030d64

08008208 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8008208:	b507      	push	{r0, r1, r2, lr}
 800820a:	4b07      	ldr	r3, [pc, #28]	; (8008228 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev+0x20>)
 800820c:	6003      	str	r3, [r0, #0]
 800820e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008210:	f00e ff2c 	bl	801706c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008214:	9801      	ldr	r0, [sp, #4]
 8008216:	f241 4178 	movw	r1, #5240	; 0x1478
 800821a:	f024 fd86 	bl	802cd2a <_ZdlPvj>
 800821e:	9801      	ldr	r0, [sp, #4]
 8008220:	b003      	add	sp, #12
 8008222:	f85d fb04 	ldr.w	pc, [sp], #4
 8008226:	bf00      	nop
 8008228:	08030d64 	.word	0x08030d64

0800822c <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_Return)
 800822c:	3098      	adds	r0, #152	; 0x98
 800822e:	4288      	cmp	r0, r1
{
 8008230:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_Return)
 8008232:	d105      	bne.n	8008240 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008234:	f010 fc1c 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8008238:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 800823c:	f7fd baa0 	b.w	8005780 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8008240:	bd08      	pop	{r3, pc}
	...

08008244 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8008244:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008248:	ed2d 8b0a 	vpush	{d8-d12}
 800824c:	4604      	mov	r4, r0
 800824e:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8008250:	46a0      	mov	r8, r4
 8008252:	2500      	movs	r5, #0
 8008254:	f012 f88c 	bl	801a370 <_ZN8touchgfx6ScreenC1Ev>
 8008258:	4bcf      	ldr	r3, [pc, #828]	; (8008598 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x354>)
 800825a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800825c:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8008260:	2226      	movs	r2, #38	; 0x26
 8008262:	4629      	mov	r1, r5
 8008264:	4640      	mov	r0, r8
 8008266:	f025 fe4c 	bl	802df02 <memset>
 800826a:	4640      	mov	r0, r8
 800826c:	f7fb fac4 	bl	80037f8 <_ZN8touchgfx6WidgetC1Ev>
 8008270:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8008274:	26ff      	movs	r6, #255	; 0xff
 8008276:	4bc9      	ldr	r3, [pc, #804]	; (800859c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x358>)
 8008278:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800827a:	2226      	movs	r2, #38	; 0x26
 800827c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008280:	4629      	mov	r1, r5
 8008282:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008286:	4638      	mov	r0, r7
 8008288:	66a5      	str	r5, [r4, #104]	; 0x68
 800828a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800828e:	f025 fe38 	bl	802df02 <memset>
 8008292:	4638      	mov	r0, r7
 8008294:	f7fb fab0 	bl	80037f8 <_ZN8touchgfx6WidgetC1Ev>
 8008298:	4bc1      	ldr	r3, [pc, #772]	; (80085a0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x35c>)
 800829a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800829c:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 80082a0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80082a4:	a90c      	add	r1, sp, #48	; 0x30
 80082a6:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 80082aa:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 80082ac:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80082b0:	f00d fedf 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80082b4:	4658      	mov	r0, fp
 80082b6:	f00e f813 	bl	80162e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80082ba:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80082be:	f504 7994 	add.w	r9, r4, #296	; 0x128
 80082c2:	4618      	mov	r0, r3
 80082c4:	ee0a 3a90 	vmov	s21, r3
 80082c8:	f7fb fafa 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 80082cc:	4648      	mov	r0, r9
 80082ce:	f7fb faf7 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 80082d2:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 80082d6:	4618      	mov	r0, r3
 80082d8:	ee0b 3a10 	vmov	s22, r3
 80082dc:	f7fb faf0 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 80082e0:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 80082e4:	4618      	mov	r0, r3
 80082e6:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80082ea:	4eae      	ldr	r6, [pc, #696]	; (80085a4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x360>)
        : TextArea()
 80082ec:	f7fb fae8 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 80082f0:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 80082f4:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 80082f8:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80082fa:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 80082fe:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 8008302:	f7fb fadd 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8008306:	f504 7314 	add.w	r3, r4, #592	; 0x250
 800830a:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800830c:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 8008310:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 8008314:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 8008318:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 800831c:	f7fb fad0 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8008320:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 8008324:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8008328:	4650      	mov	r0, sl
 800832a:	f00d fb65 	bl	80159f8 <_ZN8touchgfx5GaugeC1Ev>
 800832e:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 8008332:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008334:	4e9c      	ldr	r6, [pc, #624]	; (80085a8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x364>)
 8008336:	ee08 3a10 	vmov	s16, r3
 800833a:	f00c fb8d 	bl	8014a58 <_ZN8touchgfx4LineC1Ev>
 800833e:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 8008342:	4618      	mov	r0, r3
 8008344:	9303      	str	r3, [sp, #12]
 8008346:	f7fb f85b 	bl	8003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800834a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800834e:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8008352:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8008356:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 800835a:	4618      	mov	r0, r3
 800835c:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8008360:	ee09 3a10 	vmov	s18, r3
 8008364:	f7fb faac 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8008368:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 800836c:	4618      	mov	r0, r3
 800836e:	ee08 3a90 	vmov	s17, r3
 8008372:	f00c fb71 	bl	8014a58 <_ZN8touchgfx4LineC1Ev>
 8008376:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 800837a:	4618      	mov	r0, r3
 800837c:	9304      	str	r3, [sp, #16]
 800837e:	f7fb f83f 	bl	8003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008382:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8008386:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 800838a:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 800838e:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 8008392:	4618      	mov	r0, r3
 8008394:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8008398:	ee09 3a90 	vmov	s19, r3
 800839c:	f7fb fa90 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 80083a0:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 80083a4:	4618      	mov	r0, r3
 80083a6:	ee0a 3a10 	vmov	s20, r3
 80083aa:	f7fb fa89 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80083ae:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80083b2:	4a7e      	ldr	r2, [pc, #504]	; (80085ac <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x368>)
 80083b4:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 80083b8:	4a7d      	ldr	r2, [pc, #500]	; (80085b0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x36c>)
 80083ba:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 80083be:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 80083c2:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80083c6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80083ca:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 80083ce:	f00e fe43 	bl	8017058 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80083d2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80083d6:	462a      	mov	r2, r5
 80083d8:	4640      	mov	r0, r8
 80083da:	9300      	str	r3, [sp, #0]
 80083dc:	4629      	mov	r1, r5
 80083de:	23f0      	movs	r3, #240	; 0xf0
 80083e0:	f7fb f9e5 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 80083e4:	1d26      	adds	r6, r4, #4
        color = newColor;
 80083e6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80083ea:	66a3      	str	r3, [r4, #104]	; 0x68
 80083ec:	4641      	mov	r1, r8
 80083ee:	4630      	mov	r0, r6
 80083f0:	f00a fa66 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 80083f4:	462a      	mov	r2, r5
 80083f6:	4638      	mov	r0, r7
 80083f8:	4629      	mov	r1, r5
 80083fa:	f7fb f9cb 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 80083fe:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8008402:	4638      	mov	r0, r7
 8008404:	a90c      	add	r1, sp, #48	; 0x30
 8008406:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800840a:	f00d fe32 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800840e:	4639      	mov	r1, r7
 8008410:	4630      	mov	r0, r6
 8008412:	f00a fa55 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 257);
 8008416:	4658      	mov	r0, fp
 8008418:	f240 1201 	movw	r2, #257	; 0x101
 800841c:	2121      	movs	r1, #33	; 0x21
 800841e:	f7fb f9b9 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8008422:	f04f 0303 	mov.w	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008426:	aa0c      	add	r2, sp, #48	; 0x30
 8008428:	a90b      	add	r1, sp, #44	; 0x2c
 800842a:	4658      	mov	r0, fp
 800842c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008430:	f04f 0302 	mov.w	r3, #2
 8008434:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8008438:	f00d fc25 	bl	8015c86 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800843c:	2347      	movs	r3, #71	; 0x47
        updateTextPosition();
 800843e:	4658      	mov	r0, fp
 8008440:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8008444:	f7fb f9ea 	bl	800381c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_Return.setAction(buttonCallback);
 8008448:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 800844c:	f04f 38ff 	mov.w	r8, #4294967295
 8008450:	3308      	adds	r3, #8
 8008452:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8008456:	4659      	mov	r1, fp
 8008458:	4630      	mov	r0, r6
        colorPressed = col;
 800845a:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 800845e:	af06      	add	r7, sp, #24
 8008460:	f00a fa2e 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 8008464:	22c2      	movs	r2, #194	; 0xc2
 8008466:	ee1a 0a90 	vmov	r0, s21
 800846a:	4629      	mov	r1, r5
 800846c:	f7fb f992 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8008470:	ee1a 1a90 	vmov	r1, s21
 8008474:	4638      	mov	r0, r7
        color = newColor;
 8008476:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 800847a:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800847e:	f00c fdad 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008482:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8008486:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 800848a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800848e:	4b49      	ldr	r3, [pc, #292]	; (80085b4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x370>)
 8008490:	930c      	str	r3, [sp, #48]	; 0x30
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TIF0));
 8008492:	ee1a 0a90 	vmov	r0, s21
 8008496:	2307      	movs	r3, #7
 8008498:	a90c      	add	r1, sp, #48	; 0x30
 800849a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800849e:	f00d f837 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80084a2:	ee1a 1a90 	vmov	r1, s21
 80084a6:	4630      	mov	r0, r6
 80084a8:	f00a fa0a 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 80084ac:	22c2      	movs	r2, #194	; 0xc2
 80084ae:	4648      	mov	r0, r9
 80084b0:	21d9      	movs	r1, #217	; 0xd9
 80084b2:	f7fb f96f 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 80084b6:	4649      	mov	r1, r9
 80084b8:	4638      	mov	r0, r7
        color = newColor;
 80084ba:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 80084be:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 80084c2:	f00c fd8b 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80084c6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80084ca:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 80084ce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80084d2:	4b38      	ldr	r3, [pc, #224]	; (80085b4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x370>)
 80084d4:	930c      	str	r3, [sp, #48]	; 0x30
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H7OA));
 80084d6:	4648      	mov	r0, r9
 80084d8:	2306      	movs	r3, #6
 80084da:	a90c      	add	r1, sp, #48	; 0x30
 80084dc:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80084e0:	f00d f816 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80084e4:	4649      	mov	r1, r9
 80084e6:	4630      	mov	r0, r6
 80084e8:	f00a f9ea 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 80084ec:	2255      	movs	r2, #85	; 0x55
 80084ee:	ee1b 0a10 	vmov	r0, s22
 80084f2:	2171      	movs	r1, #113	; 0x71
 80084f4:	f7fb f94e 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 80084f8:	ee1b 1a10 	vmov	r1, s22
 80084fc:	4638      	mov	r0, r7
        color = newColor;
 80084fe:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 8008502:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 8008506:	f00c fd69 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800850a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800850e:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8008512:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008516:	4b27      	ldr	r3, [pc, #156]	; (80085b4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x370>)
 8008518:	930c      	str	r3, [sp, #48]	; 0x30
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_61VS));
 800851a:	ee1b 0a10 	vmov	r0, s22
 800851e:	f04f 0305 	mov.w	r3, #5
 8008522:	a90c      	add	r1, sp, #48	; 0x30
 8008524:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8008528:	f00c fff2 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800852c:	ee1b 1a10 	vmov	r1, s22
 8008530:	4630      	mov	r0, r6
 8008532:	f00a f9c5 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD3_Current.setPosition(0, 239, 240, 15);
 8008536:	230f      	movs	r3, #15
 8008538:	22ef      	movs	r2, #239	; 0xef
 800853a:	ee1b 0a90 	vmov	r0, s23
 800853e:	9300      	str	r3, [sp, #0]
 8008540:	4629      	mov	r1, r5
 8008542:	23f0      	movs	r3, #240	; 0xf0
 8008544:	f7fb f933 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8008548:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 800854c:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 8008550:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8008554:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 8008558:	ee1b 1a90 	vmov	r1, s23
 800855c:	4638      	mov	r0, r7
 800855e:	4798      	blx	r3
 8008560:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008564:	f8df 9064 	ldr.w	r9, [pc, #100]	; 80085cc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x388>
 8008568:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 800856c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008570:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(AMD3_CurrentBuffer, AMD3_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VDGC).getText());
 8008574:	f204 6b1c 	addw	fp, r4, #1564	; 0x61c
 8008578:	b92b      	cbnz	r3, 8008586 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x342>
 800857a:	4b0f      	ldr	r3, [pc, #60]	; (80085b8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x374>)
 800857c:	4a0f      	ldr	r2, [pc, #60]	; (80085bc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x378>)
 800857e:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008580:	480f      	ldr	r0, [pc, #60]	; (80085c0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x37c>)
 8008582:	f025 fab9 	bl	802daf8 <__assert_func>
 8008586:	4b0f      	ldr	r3, [pc, #60]	; (80085c4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x380>)
 8008588:	881b      	ldrh	r3, [r3, #0]
 800858a:	2b04      	cmp	r3, #4
 800858c:	d820      	bhi.n	80085d0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x38c>
 800858e:	4b0e      	ldr	r3, [pc, #56]	; (80085c8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x384>)
 8008590:	4a0a      	ldr	r2, [pc, #40]	; (80085bc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x378>)
 8008592:	2161      	movs	r1, #97	; 0x61
 8008594:	e7f4      	b.n	8008580 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x33c>
 8008596:	bf00      	nop
 8008598:	08030d64 	.word	0x08030d64
 800859c:	08031bec 	.word	0x08031bec
 80085a0:	08031e38 	.word	0x08031e38
 80085a4:	0802f734 	.word	0x0802f734
 80085a8:	08031920 	.word	0x08031920
 80085ac:	08030d4c 	.word	0x08030d4c
 80085b0:	0800822d 	.word	0x0800822d
 80085b4:	0802f694 	.word	0x0802f694
 80085b8:	0802f4e4 	.word	0x0802f4e4
 80085bc:	0802f5e9 	.word	0x0802f5e9
 80085c0:	0802f561 	.word	0x0802f561
 80085c4:	200138a8 	.word	0x200138a8
 80085c8:	0802f5a8 	.word	0x0802f5a8
 80085cc:	200138a4 	.word	0x200138a4
        return texts->getText(typedTextId);
 80085d0:	4bdd      	ldr	r3, [pc, #884]	; (8008948 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x704>)
 80085d2:	2104      	movs	r1, #4
 80085d4:	6818      	ldr	r0, [r3, #0]
 80085d6:	f002 f8ef 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 80085da:	4adc      	ldr	r2, [pc, #880]	; (800894c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x708>)
 80085dc:	4603      	mov	r3, r0
 80085de:	210a      	movs	r1, #10
 80085e0:	4658      	mov	r0, fp
 80085e2:	f013 fbf3 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80085e6:	4ada      	ldr	r2, [pc, #872]	; (8008950 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
        wc1 = value;
 80085e8:	f8c4 b200 	str.w	fp, [r4, #512]	; 0x200
    AMD3_Current.setTypedText(touchgfx::TypedText(T_AMD3_CURRENT));
 80085ec:	ee1b 0a90 	vmov	r0, s23
 80085f0:	a90c      	add	r1, sp, #48	; 0x30
 80085f2:	f04f 0b01 	mov.w	fp, #1
 80085f6:	920c      	str	r2, [sp, #48]	; 0x30
 80085f8:	f8ad b034 	strh.w	fp, [sp, #52]	; 0x34
 80085fc:	f00c ff88 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008600:	ee1b 1a90 	vmov	r1, s23
 8008604:	4630      	mov	r0, r6
 8008606:	f00a f95b 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD3_Frequency.setPosition(0, 224, 240, 15);
 800860a:	210f      	movs	r1, #15
 800860c:	22e0      	movs	r2, #224	; 0xe0
 800860e:	ee1c 0a10 	vmov	r0, s24
 8008612:	9100      	str	r1, [sp, #0]
 8008614:	23f0      	movs	r3, #240	; 0xf0
 8008616:	4629      	mov	r1, r5
 8008618:	f7fb f8c9 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 800861c:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 8008620:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 8008624:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8008628:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 800862c:	ee1c 1a10 	vmov	r1, s24
 8008630:	4638      	mov	r0, r7
 8008632:	4798      	blx	r3
 8008634:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8008638:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800863c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008640:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(AMD3_FrequencyBuffer, AMD3_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_RCRP).getText());
 8008644:	f504 61c6 	add.w	r1, r4, #1584	; 0x630
 8008648:	9105      	str	r1, [sp, #20]
 800864a:	2b00      	cmp	r3, #0
 800864c:	d095      	beq.n	800857a <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x336>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800864e:	49c1      	ldr	r1, [pc, #772]	; (8008954 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x710>)
 8008650:	880b      	ldrh	r3, [r1, #0]
 8008652:	2b03      	cmp	r3, #3
 8008654:	d99b      	bls.n	800858e <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x34a>
        return texts->getText(typedTextId);
 8008656:	4bbc      	ldr	r3, [pc, #752]	; (8008948 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x704>)
 8008658:	2103      	movs	r1, #3
 800865a:	6818      	ldr	r0, [r3, #0]
 800865c:	f002 f8ac 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8008660:	4aba      	ldr	r2, [pc, #744]	; (800894c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x708>)
 8008662:	4603      	mov	r3, r0
 8008664:	210a      	movs	r1, #10
 8008666:	9805      	ldr	r0, [sp, #20]
 8008668:	f013 fbb0 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800866c:	9805      	ldr	r0, [sp, #20]
 800866e:	f8c4 024c 	str.w	r0, [r4, #588]	; 0x24c
    AMD3_Frequency.setTypedText(touchgfx::TypedText(T_AMD3_FREQUENCY));
 8008672:	a80c      	add	r0, sp, #48	; 0x30
        : typedTextId(id)
 8008674:	4ab6      	ldr	r2, [pc, #728]	; (8008950 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
 8008676:	920c      	str	r2, [sp, #48]	; 0x30
 8008678:	230d      	movs	r3, #13
 800867a:	4601      	mov	r1, r0
 800867c:	ee1c 0a10 	vmov	r0, s24
 8008680:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8008684:	f00c ff44 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008688:	ee1c 1a10 	vmov	r1, s24
 800868c:	4630      	mov	r0, r6
 800868e:	f00a f917 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD3_Distance.setPosition(0, 209, 240, 15);
 8008692:	200f      	movs	r0, #15
 8008694:	22d1      	movs	r2, #209	; 0xd1
 8008696:	9000      	str	r0, [sp, #0]
 8008698:	23f0      	movs	r3, #240	; 0xf0
 800869a:	ee1c 0a90 	vmov	r0, s25
 800869e:	4629      	mov	r1, r5
 80086a0:	f7fb f885 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 80086a4:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 80086a8:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 80086ac:	4638      	mov	r0, r7
 80086ae:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80086b2:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 80086b6:	ee1c 1a90 	vmov	r1, s25
 80086ba:	4798      	blx	r3
 80086bc:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80086c0:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 80086c4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80086c8:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(AMD3_DistanceBuffer, AMD3_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VKRM).getText());
 80086cc:	f204 6744 	addw	r7, r4, #1604	; 0x644
 80086d0:	2b00      	cmp	r3, #0
 80086d2:	f43f af52 	beq.w	800857a <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x336>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80086d6:	499f      	ldr	r1, [pc, #636]	; (8008954 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x710>)
 80086d8:	880b      	ldrh	r3, [r1, #0]
 80086da:	2b02      	cmp	r3, #2
 80086dc:	f67f af57 	bls.w	800858e <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x34a>
        return texts->getText(typedTextId);
 80086e0:	4b99      	ldr	r3, [pc, #612]	; (8008948 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x704>)
 80086e2:	2102      	movs	r1, #2
 80086e4:	6818      	ldr	r0, [r3, #0]
 80086e6:	f002 f867 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 80086ea:	4a98      	ldr	r2, [pc, #608]	; (800894c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x708>)
 80086ec:	4603      	mov	r3, r0
 80086ee:	210a      	movs	r1, #10
 80086f0:	4638      	mov	r0, r7
 80086f2:	f013 fb6b 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80086f6:	4a96      	ldr	r2, [pc, #600]	; (8008950 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
 80086f8:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 80086fc:	2336      	movs	r3, #54	; 0x36
    AMD3_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 80086fe:	ee1c 0a90 	vmov	r0, s25
 8008702:	a90c      	add	r1, sp, #48	; 0x30
 8008704:	920c      	str	r2, [sp, #48]	; 0x30
 8008706:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800870a:	f00c ff01 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800870e:	ee1c 1a90 	vmov	r1, s25
 8008712:	4630      	mov	r0, r6
 8008714:	f00a f8d4 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008718:	2304      	movs	r3, #4
    AMD3_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 800871a:	a90c      	add	r1, sp, #48	; 0x30
 800871c:	4650      	mov	r0, sl
 800871e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8008722:	f00a f85f 	bl	80127e4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    AMD3_Gauge.setPosition(28, 103, 184, 106);
 8008726:	236a      	movs	r3, #106	; 0x6a
 8008728:	9300      	str	r3, [sp, #0]
 800872a:	2267      	movs	r2, #103	; 0x67
 800872c:	23b8      	movs	r3, #184	; 0xb8
 800872e:	211c      	movs	r1, #28
 8008730:	4650      	mov	r0, sl
 8008732:	f7fb f83c 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
    AMD3_Gauge.setCenter(92, 92);
 8008736:	225c      	movs	r2, #92	; 0x5c
 8008738:	4611      	mov	r1, r2
 800873a:	4650      	mov	r0, sl
 800873c:	f00d fa07 	bl	8015b4e <_ZN8touchgfx5Gauge9setCenterEii>
    AMD3_Gauge.setStartEndAngle(-90, 90);
 8008740:	225a      	movs	r2, #90	; 0x5a
 8008742:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8008746:	4650      	mov	r0, sl
 8008748:	f00d fa86 	bl	8015c58 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    AMD3_Gauge.setRange(-90, 90);
 800874c:	462b      	mov	r3, r5
 800874e:	225a      	movs	r2, #90	; 0x5a
 8008750:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8008754:	4650      	mov	r0, sl
 8008756:	9500      	str	r5, [sp, #0]
 8008758:	f009 fef1 	bl	801253e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    AMD3_Gauge.setValue(0);
 800875c:	4629      	mov	r1, r5
 800875e:	4650      	mov	r0, sl
 8008760:	f00d fa24 	bl	8015bac <_ZN8touchgfx5Gauge8setValueEi>
    AMD3_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8008764:	2335      	movs	r3, #53	; 0x35
 8008766:	2208      	movs	r2, #8
 8008768:	2105      	movs	r1, #5
 800876a:	4650      	mov	r0, sl
 800876c:	f00d f9da 	bl	8015b24 <_ZN8touchgfx5Gauge9setNeedleEtss>
    AMD3_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8008770:	4659      	mov	r1, fp
 8008772:	4650      	mov	r0, sl
 8008774:	f00d f978 	bl	8015a68 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    AMD3_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8008778:	4659      	mov	r1, fp
 800877a:	4650      	mov	r0, sl
 800877c:	f00d f977 	bl	8015a6e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8008780:	4651      	mov	r1, sl
 8008782:	4630      	mov	r0, r6
 8008784:	f00a f89c 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8008788:	230a      	movs	r3, #10
 800878a:	ee18 0a10 	vmov	r0, s16
 800878e:	9300      	str	r3, [sp, #0]
 8008790:	224b      	movs	r2, #75	; 0x4b
 8008792:	23f0      	movs	r3, #240	; 0xf0
 8008794:	4629      	mov	r1, r5
 8008796:	f7fb f80a 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 800879a:	9b03      	ldr	r3, [sp, #12]
 800879c:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80087a0:	22a0      	movs	r2, #160	; 0xa0
 80087a2:	4611      	mov	r1, r2
 80087a4:	ee18 0a10 	vmov	r0, s16
 80087a8:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80087ac:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 80087b0:	f00c fa68 	bl	8014c84 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80087b4:	ee18 0a10 	vmov	r0, s16
 80087b8:	22a0      	movs	r2, #160	; 0xa0
 80087ba:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80087be:	f00c fa6c 	bl	8014c9a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80087c2:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 80087c6:	2b20      	cmp	r3, #32
 80087c8:	d006      	beq.n	80087d8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x594>
        lineWidthQ5 = widthQ5;
 80087ca:	2320      	movs	r3, #32
        updateCachedShape();
 80087cc:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 80087d0:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 80087d4:	f00c f960 	bl	8014a98 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80087d8:	ee18 0a10 	vmov	r0, s16
 80087dc:	2101      	movs	r1, #1
 80087de:	f00c fa67 	bl	8014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80087e2:	ee18 1a10 	vmov	r1, s16
 80087e6:	4630      	mov	r0, r6
 80087e8:	f00a f86a 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80087ec:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(23, 60);
 80087f0:	223c      	movs	r2, #60	; 0x3c
 80087f2:	ee19 0a10 	vmov	r0, s18
 80087f6:	2117      	movs	r1, #23
        linespace = space;
 80087f8:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 80087fc:	ad06      	add	r5, sp, #24
 80087fe:	f7fa ffc9 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8008802:	ee19 1a10 	vmov	r1, s18
 8008806:	4628      	mov	r0, r5
        color = newColor;
 8008808:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 800880c:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8008810:	f00c fbe4 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008814:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008818:	ee19 3a10 	vmov	r3, s18
 800881c:	333c      	adds	r3, #60	; 0x3c
 800881e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008822:	4f4b      	ldr	r7, [pc, #300]	; (8008950 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
 8008824:	970c      	str	r7, [sp, #48]	; 0x30
 8008826:	2348      	movs	r3, #72	; 0x48
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 8008828:	ee19 0a10 	vmov	r0, s18
 800882c:	a90c      	add	r1, sp, #48	; 0x30
 800882e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8008832:	f00c fe6d 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008836:	ee19 1a10 	vmov	r1, s18
 800883a:	4630      	mov	r0, r6
 800883c:	f00a f840 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008840:	230a      	movs	r3, #10
 8008842:	ee18 0a90 	vmov	r0, s17
 8008846:	9300      	str	r3, [sp, #0]
 8008848:	2232      	movs	r2, #50	; 0x32
 800884a:	23f0      	movs	r3, #240	; 0xf0
 800884c:	4649      	mov	r1, r9
 800884e:	f7fa ffae 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8008852:	9b04      	ldr	r3, [sp, #16]
 8008854:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008858:	22a0      	movs	r2, #160	; 0xa0
 800885a:	4611      	mov	r1, r2
 800885c:	ee18 0a90 	vmov	r0, s17
 8008860:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 8008864:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 8008868:	f00c fa0c 	bl	8014c84 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800886c:	ee18 0a90 	vmov	r0, s17
 8008870:	22a0      	movs	r2, #160	; 0xa0
 8008872:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008876:	f00c fa10 	bl	8014c9a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800887a:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 800887e:	2b20      	cmp	r3, #32
 8008880:	d006      	beq.n	8008890 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x64c>
        lineWidthQ5 = widthQ5;
 8008882:	2320      	movs	r3, #32
        updateCachedShape();
 8008884:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 8008888:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 800888c:	f00c f904 	bl	8014a98 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008890:	ee18 0a90 	vmov	r0, s17
 8008894:	2101      	movs	r1, #1
 8008896:	f00c fa0b 	bl	8014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800889a:	ee18 1a90 	vmov	r1, s17
 800889e:	4630      	mov	r0, r6
 80088a0:	f00a f80e 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80088a4:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 80088a8:	ee19 0a90 	vmov	r0, s19
 80088ac:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80088ae:	f04f 0800 	mov.w	r8, #0
 80088b2:	2145      	movs	r1, #69	; 0x45
 80088b4:	f7fa ff6e 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80088b8:	ee19 1a90 	vmov	r1, s19
 80088bc:	4628      	mov	r0, r5
        color = newColor;
 80088be:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 80088c2:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 80088c6:	f00c fb89 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80088ca:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80088ce:	ee19 3a90 	vmov	r3, s19
 80088d2:	333c      	adds	r3, #60	; 0x3c
 80088d4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80088d8:	2349      	movs	r3, #73	; 0x49
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 80088da:	ee19 0a90 	vmov	r0, s19
 80088de:	a90c      	add	r1, sp, #48	; 0x30
 80088e0:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80088e4:	970c      	str	r7, [sp, #48]	; 0x30
 80088e6:	f00c fe13 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80088ea:	ee19 1a90 	vmov	r1, s19
 80088ee:	4630      	mov	r0, r6
 80088f0:	f009 ffe6 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 80088f4:	ee1a 0a10 	vmov	r0, s20
 80088f8:	220c      	movs	r2, #12
 80088fa:	2136      	movs	r1, #54	; 0x36
 80088fc:	f7fa ff4a 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8008900:	ee1a 1a10 	vmov	r1, s20
 8008904:	4628      	mov	r0, r5
        color = newColor;
 8008906:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 800890a:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 800890e:	f00c fb65 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008912:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008916:	ee1a 3a10 	vmov	r3, s20
 800891a:	333c      	adds	r3, #60	; 0x3c
 800891c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008920:	234a      	movs	r3, #74	; 0x4a
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 8008922:	ee1a 0a10 	vmov	r0, s20
 8008926:	a90c      	add	r1, sp, #48	; 0x30
 8008928:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800892c:	970c      	str	r7, [sp, #48]	; 0x30
 800892e:	f00c fdef 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008932:	4630      	mov	r0, r6
 8008934:	ee1a 1a10 	vmov	r1, s20
 8008938:	f009 ffc2 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800893c:	4620      	mov	r0, r4
 800893e:	b00f      	add	sp, #60	; 0x3c
 8008940:	ecbd 8b0a 	vpop	{d8-d12}
 8008944:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008948:	200138b0 	.word	0x200138b0
 800894c:	0802f621 	.word	0x0802f621
 8008950:	0802f694 	.word	0x0802f694
 8008954:	200138a8 	.word	0x200138a8

08008958 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8008958:	4770      	bx	lr

0800895a <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800895a:	4770      	bx	lr

0800895c <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800895c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800895e:	68c2      	ldr	r2, [r0, #12]
 8008960:	6844      	ldr	r4, [r0, #4]
 8008962:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8008964:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8008966:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800896a:	07d2      	lsls	r2, r2, #31
 800896c:	bf48      	it	mi
 800896e:	5962      	ldrmi	r2, [r4, r5]
 8008970:	689b      	ldr	r3, [r3, #8]
    }
 8008972:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008974:	bf48      	it	mi
 8008976:	58d3      	ldrmi	r3, [r2, r3]
 8008978:	4718      	bx	r3

0800897a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800897a:	6843      	ldr	r3, [r0, #4]
 800897c:	b12b      	cbz	r3, 800898a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800897e:	6883      	ldr	r3, [r0, #8]
 8008980:	b92b      	cbnz	r3, 800898e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8008982:	68c0      	ldr	r0, [r0, #12]
 8008984:	f000 0001 	and.w	r0, r0, #1
 8008988:	4770      	bx	lr
 800898a:	4618      	mov	r0, r3
 800898c:	4770      	bx	lr
 800898e:	2001      	movs	r0, #1
    }
 8008990:	4770      	bx	lr

08008992 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008992:	b510      	push	{r4, lr}
 8008994:	2110      	movs	r1, #16
 8008996:	4604      	mov	r4, r0
 8008998:	f024 f9c7 	bl	802cd2a <_ZdlPvj>
 800899c:	4620      	mov	r0, r4
 800899e:	bd10      	pop	{r4, pc}

080089a0 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 80089a0:	b510      	push	{r4, lr}
 80089a2:	4b03      	ldr	r3, [pc, #12]	; (80089b0 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 80089a4:	6003      	str	r3, [r0, #0]
 80089a6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80089a8:	f00e fb60 	bl	801706c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80089ac:	4620      	mov	r0, r4
 80089ae:	bd10      	pop	{r4, pc}
 80089b0:	08030db0 	.word	0x08030db0

080089b4 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 80089b4:	b507      	push	{r0, r1, r2, lr}
 80089b6:	4b07      	ldr	r3, [pc, #28]	; (80089d4 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 80089b8:	6003      	str	r3, [r0, #0]
 80089ba:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80089bc:	f00e fb56 	bl	801706c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80089c0:	9801      	ldr	r0, [sp, #4]
 80089c2:	f241 11c4 	movw	r1, #4548	; 0x11c4
 80089c6:	f024 f9b0 	bl	802cd2a <_ZdlPvj>
 80089ca:	9801      	ldr	r0, [sp, #4]
 80089cc:	b003      	add	sp, #12
 80089ce:	f85d fb04 	ldr.w	pc, [sp], #4
 80089d2:	bf00      	nop
 80089d4:	08030db0 	.word	0x08030db0

080089d8 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80089d8:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Return)
 80089da:	f100 03e4 	add.w	r3, r0, #228	; 0xe4
 80089de:	4299      	cmp	r1, r3
{
 80089e0:	4604      	mov	r4, r0
 80089e2:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Return)
 80089e4:	d103      	bne.n	80089ee <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80089e6:	f010 f843 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80089ea:	f7fc fe79 	bl	80056e0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel_1Phase)
 80089ee:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 80089f2:	429d      	cmp	r5, r3
 80089f4:	d103      	bne.n	80089fe <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80089f6:	f010 f83b 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_1Phase clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 80089fa:	f7fc fe91 	bl	8005720 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_3Phase)
 80089fe:	f504 7496 	add.w	r4, r4, #300	; 0x12c
 8008a02:	42a5      	cmp	r5, r4
 8008a04:	d105      	bne.n	8008a12 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8008a06:	f010 f833 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel_3Phase clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 8008a0a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 8008a0e:	f7fc be97 	b.w	8005740 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 8008a12:	bd38      	pop	{r3, r4, r5, pc}

08008a14 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 8008a14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008a18:	ed2d 8b06 	vpush	{d8-d10}
 8008a1c:	4604      	mov	r4, r0
 8008a1e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8008a20:	46a2      	mov	sl, r4
 8008a22:	2500      	movs	r5, #0
 8008a24:	f011 fca4 	bl	801a370 <_ZN8touchgfx6ScreenC1Ev>
 8008a28:	4b71      	ldr	r3, [pc, #452]	; (8008bf0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
 8008a2a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008a2c:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8008a30:	2226      	movs	r2, #38	; 0x26
 8008a32:	4629      	mov	r1, r5
 8008a34:	4650      	mov	r0, sl
 8008a36:	f025 fa64 	bl	802df02 <memset>
 8008a3a:	4650      	mov	r0, sl
 8008a3c:	f7fa fedc 	bl	80037f8 <_ZN8touchgfx6WidgetC1Ev>
 8008a40:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8008a44:	26ff      	movs	r6, #255	; 0xff
 8008a46:	4b6b      	ldr	r3, [pc, #428]	; (8008bf4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8008a48:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8008a4a:	2226      	movs	r2, #38	; 0x26
 8008a4c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008a50:	4629      	mov	r1, r5
 8008a52:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008a56:	4648      	mov	r0, r9
 8008a58:	66a5      	str	r5, [r4, #104]	; 0x68
 8008a5a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008a5e:	f025 fa50 	bl	802df02 <memset>
 8008a62:	4648      	mov	r0, r9
 8008a64:	f7fa fec8 	bl	80037f8 <_ZN8touchgfx6WidgetC1Ev>
 8008a68:	4b63      	ldr	r3, [pc, #396]	; (8008bf8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>)
 8008a6a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008a6c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8008a70:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8008a74:	a90a      	add	r1, sp, #40	; 0x28
 8008a76:	4648      	mov	r0, r9
 8008a78:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8008a7c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008a80:	f00d faf7 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8008a84:	4640      	mov	r0, r8
 8008a86:	f7fa ff1b 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8008a8a:	4b5c      	ldr	r3, [pc, #368]	; (8008bfc <_ZN26Measurement_SingleViewBaseC1Ev+0x1e8>)
 8008a8c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8008a90:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8008a94:	4618      	mov	r0, r3
 8008a96:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8008a9a:	ee09 3a90 	vmov	s19, r3
 8008a9e:	f00d fc1f 	bl	80162e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008aa2:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8008aa6:	4618      	mov	r0, r3
 8008aa8:	ee0a 3a10 	vmov	s20, r3
 8008aac:	f00d fc18 	bl	80162e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008ab0:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8008ab4:	4618      	mov	r0, r3
 8008ab6:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 8008aba:	ee0a 3a90 	vmov	s21, r3
 8008abe:	f00d fc0f 	bl	80162e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008ac2:	4638      	mov	r0, r7
 8008ac4:	f00b ffc8 	bl	8014a58 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008ac8:	4e4d      	ldr	r6, [pc, #308]	; (8008c00 <_ZN26Measurement_SingleViewBaseC1Ev+0x1ec>)
 8008aca:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 8008ace:	4618      	mov	r0, r3
 8008ad0:	9302      	str	r3, [sp, #8]
 8008ad2:	f7fa fc95 	bl	8003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008ad6:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8008ada:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 8008ade:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8008ae2:	4618      	mov	r0, r3
 8008ae4:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 8008ae8:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 8008aec:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 8008af0:	ee08 3a10 	vmov	s16, r3
 8008af4:	f7fa fee4 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8008af8:	4658      	mov	r0, fp
 8008afa:	f00b ffad 	bl	8014a58 <_ZN8touchgfx4LineC1Ev>
 8008afe:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 8008b02:	4618      	mov	r0, r3
 8008b04:	9303      	str	r3, [sp, #12]
 8008b06:	f7fa fc7b 	bl	8003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008b0a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8008b0e:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8008b12:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 8008b16:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 8008b1a:	4618      	mov	r0, r3
 8008b1c:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8008b20:	ee08 3a90 	vmov	s17, r3
 8008b24:	f7fa fecc 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8008b28:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8008b2c:	4618      	mov	r0, r3
 8008b2e:	ee09 3a10 	vmov	s18, r3
 8008b32:	f7fa fec5 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008b36:	4a33      	ldr	r2, [pc, #204]	; (8008c04 <_ZN26Measurement_SingleViewBaseC1Ev+0x1f0>)
 8008b38:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008b3c:	e9c3 246d 	strd	r2, r4, [r3, #436]	; 0x1b4
 8008b40:	4a31      	ldr	r2, [pc, #196]	; (8008c08 <_ZN26Measurement_SingleViewBaseC1Ev+0x1f4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008b42:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8008b46:	e9c3 256f 	strd	r2, r5, [r3, #444]	; 0x1bc
 8008b4a:	f504 7069 	add.w	r0, r4, #932	; 0x3a4
 8008b4e:	f00e fa83 	bl	8017058 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8008b52:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008b56:	462a      	mov	r2, r5
 8008b58:	4650      	mov	r0, sl
 8008b5a:	9300      	str	r3, [sp, #0]
 8008b5c:	4629      	mov	r1, r5
 8008b5e:	23f0      	movs	r3, #240	; 0xf0
 8008b60:	f7fa fe25 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8008b64:	1d26      	adds	r6, r4, #4
        color = newColor;
 8008b66:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008b6a:	66a3      	str	r3, [r4, #104]	; 0x68
 8008b6c:	4651      	mov	r1, sl
 8008b6e:	4630      	mov	r0, r6
 8008b70:	f009 fea6 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8008b74:	462a      	mov	r2, r5
 8008b76:	4648      	mov	r0, r9
 8008b78:	4629      	mov	r1, r5
 8008b7a:	f7fa fe0b 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8008b7e:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8008b80:	4648      	mov	r0, r9
 8008b82:	a90a      	add	r1, sp, #40	; 0x28
 8008b84:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008b88:	f00d fa73 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008b8c:	4649      	mov	r1, r9
 8008b8e:	4630      	mov	r0, r6
 8008b90:	f009 fe96 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8008b94:	f44f 729a 	mov.w	r2, #308	; 0x134
 8008b98:	2156      	movs	r1, #86	; 0x56
 8008b9a:	4640      	mov	r0, r8
 8008b9c:	f7fa fdfa 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8008ba0:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8008ba4:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8008ba8:	f10d 0910 	add.w	r9, sp, #16
        color = newColor;
 8008bac:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 8008bb0:	4648      	mov	r0, r9
 8008bb2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8008bb6:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8008bba:	4641      	mov	r1, r8
 8008bbc:	4798      	blx	r3
 8008bbe:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8008bc2:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8008bc6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008bca:	4b10      	ldr	r3, [pc, #64]	; (8008c0c <_ZN26Measurement_SingleViewBaseC1Ev+0x1f8>)
 8008bcc:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8008bce:	f504 7967 	add.w	r9, r4, #924	; 0x39c
 8008bd2:	b92b      	cbnz	r3, 8008be0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>
 8008bd4:	4b0e      	ldr	r3, [pc, #56]	; (8008c10 <_ZN26Measurement_SingleViewBaseC1Ev+0x1fc>)
 8008bd6:	4a0f      	ldr	r2, [pc, #60]	; (8008c14 <_ZN26Measurement_SingleViewBaseC1Ev+0x200>)
 8008bd8:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008bda:	480f      	ldr	r0, [pc, #60]	; (8008c18 <_ZN26Measurement_SingleViewBaseC1Ev+0x204>)
 8008bdc:	f024 ff8c 	bl	802daf8 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8008be0:	4b0e      	ldr	r3, [pc, #56]	; (8008c1c <_ZN26Measurement_SingleViewBaseC1Ev+0x208>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008be2:	881b      	ldrh	r3, [r3, #0]
 8008be4:	2b42      	cmp	r3, #66	; 0x42
 8008be6:	d81d      	bhi.n	8008c24 <_ZN26Measurement_SingleViewBaseC1Ev+0x210>
 8008be8:	4b0d      	ldr	r3, [pc, #52]	; (8008c20 <_ZN26Measurement_SingleViewBaseC1Ev+0x20c>)
 8008bea:	4a0a      	ldr	r2, [pc, #40]	; (8008c14 <_ZN26Measurement_SingleViewBaseC1Ev+0x200>)
 8008bec:	2161      	movs	r1, #97	; 0x61
 8008bee:	e7f4      	b.n	8008bda <_ZN26Measurement_SingleViewBaseC1Ev+0x1c6>
 8008bf0:	08030db0 	.word	0x08030db0
 8008bf4:	08031bec 	.word	0x08031bec
 8008bf8:	08031e38 	.word	0x08031e38
 8008bfc:	0802f734 	.word	0x0802f734
 8008c00:	08031920 	.word	0x08031920
 8008c04:	08030d98 	.word	0x08030d98
 8008c08:	080089d9 	.word	0x080089d9
 8008c0c:	200138a4 	.word	0x200138a4
 8008c10:	0802f4e4 	.word	0x0802f4e4
 8008c14:	0802f5e9 	.word	0x0802f5e9
 8008c18:	0802f561 	.word	0x0802f561
 8008c1c:	200138a8 	.word	0x200138a8
 8008c20:	0802f5a8 	.word	0x0802f5a8
        return texts->getText(typedTextId);
 8008c24:	4bad      	ldr	r3, [pc, #692]	; (8008edc <_ZN26Measurement_SingleViewBaseC1Ev+0x4c8>)
 8008c26:	2142      	movs	r1, #66	; 0x42
 8008c28:	6818      	ldr	r0, [r3, #0]
 8008c2a:	f001 fdc5 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8008c2e:	4aac      	ldr	r2, [pc, #688]	; (8008ee0 <_ZN26Measurement_SingleViewBaseC1Ev+0x4cc>)
 8008c30:	4603      	mov	r3, r0
 8008c32:	2104      	movs	r1, #4
 8008c34:	4648      	mov	r0, r9
 8008c36:	f013 f8c9 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 8008c3a:	4640      	mov	r0, r8
        wc1 = value;
 8008c3c:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 8008c40:	f00c fc46 	bl	80154d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8008c44:	4ba7      	ldr	r3, [pc, #668]	; (8008ee4 <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008c46:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8008c48:	4640      	mov	r0, r8
 8008c4a:	2343      	movs	r3, #67	; 0x43
 8008c4c:	a90a      	add	r1, sp, #40	; 0x28
 8008c4e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008c52:	f00c fc5d 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008c56:	4641      	mov	r1, r8
 8008c58:	4630      	mov	r0, r6
 8008c5a:	f009 fe31 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 8008c5e:	ee19 0a90 	vmov	r0, s19
 8008c62:	22f0      	movs	r2, #240	; 0xf0
 8008c64:	2121      	movs	r1, #33	; 0x21
 8008c66:	f7fa fd95 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8008c6a:	f04f 0802 	mov.w	r8, #2
 8008c6e:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008c70:	a909      	add	r1, sp, #36	; 0x24
 8008c72:	ee19 0a90 	vmov	r0, s19
 8008c76:	aa0a      	add	r2, sp, #40	; 0x28
 8008c78:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008c7c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel_Return.setAction(buttonCallback);
 8008c80:	f504 598d 	add.w	r9, r4, #4512	; 0x11a0
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008c84:	f00c ffff 	bl	8015c86 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008c88:	2263      	movs	r2, #99	; 0x63
 8008c8a:	f8a4 211c 	strh.w	r2, [r4, #284]	; 0x11c
    buttonWithLabel_Return.setAction(buttonCallback);
 8008c8e:	f109 0914 	add.w	r9, r9, #20
        updateTextPosition();
 8008c92:	ee19 0a90 	vmov	r0, s19
 8008c96:	f7fa fdc1 	bl	800381c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8008c9a:	ee19 1a90 	vmov	r1, s19
 8008c9e:	4630      	mov	r0, r6
        colorPressed = col;
 8008ca0:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 8008ca4:	f8c4 910c 	str.w	r9, [r4, #268]	; 0x10c
 8008ca8:	f009 fe0a 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_3Phase.setXY(33, 170);
 8008cac:	ee1a 0a10 	vmov	r0, s20
 8008cb0:	22aa      	movs	r2, #170	; 0xaa
 8008cb2:	2121      	movs	r1, #33	; 0x21
 8008cb4:	f7fa fd6e 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8008cb8:	2303      	movs	r3, #3
    buttonWithLabel_3Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008cba:	a909      	add	r1, sp, #36	; 0x24
 8008cbc:	ee1a 0a10 	vmov	r0, s20
 8008cc0:	aa0a      	add	r2, sp, #40	; 0x28
 8008cc2:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008cc6:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8008cca:	f00c ffdc 	bl	8015c86 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8008cce:	2262      	movs	r2, #98	; 0x62
 8008cd0:	f8a4 2164 	strh.w	r2, [r4, #356]	; 0x164
        updateTextPosition();
 8008cd4:	ee1a 0a10 	vmov	r0, s20
 8008cd8:	f7fa fda0 	bl	800381c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8008cdc:	ee1a 1a10 	vmov	r1, s20
 8008ce0:	4630      	mov	r0, r6
        colorPressed = col;
 8008ce2:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 8008ce6:	f8c4 9154 	str.w	r9, [r4, #340]	; 0x154
 8008cea:	f009 fde9 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_1Phase.setXY(33, 100);
 8008cee:	ee1a 0a90 	vmov	r0, s21
 8008cf2:	2264      	movs	r2, #100	; 0x64
 8008cf4:	2121      	movs	r1, #33	; 0x21
 8008cf6:	f7fa fd4d 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_1Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008cfa:	aa0a      	add	r2, sp, #40	; 0x28
 8008cfc:	2303      	movs	r3, #3
 8008cfe:	a909      	add	r1, sp, #36	; 0x24
 8008d00:	ee1a 0a90 	vmov	r0, s21
 8008d04:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008d08:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8008d0c:	f00c ffbb 	bl	8015c86 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8008d10:	2361      	movs	r3, #97	; 0x61
 8008d12:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
        updateTextPosition();
 8008d16:	ee1a 0a90 	vmov	r0, s21
 8008d1a:	f7fa fd7f 	bl	800381c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8008d1e:	ee1a 1a90 	vmov	r1, s21
 8008d22:	4630      	mov	r0, r6
        colorPressed = col;
 8008d24:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 8008d28:	f8c4 919c 	str.w	r9, [r4, #412]	; 0x19c
 8008d2c:	f009 fdc8 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8008d30:	230a      	movs	r3, #10
 8008d32:	9300      	str	r3, [sp, #0]
 8008d34:	224b      	movs	r2, #75	; 0x4b
 8008d36:	23f0      	movs	r3, #240	; 0xf0
 8008d38:	4629      	mov	r1, r5
 8008d3a:	4638      	mov	r0, r7
 8008d3c:	f7fa fd37 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8008d40:	9b02      	ldr	r3, [sp, #8]
 8008d42:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008d46:	22a0      	movs	r2, #160	; 0xa0
 8008d48:	4611      	mov	r1, r2
 8008d4a:	4638      	mov	r0, r7
 8008d4c:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008d50:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 8008d54:	f00b ff96 	bl	8014c84 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008d58:	22a0      	movs	r2, #160	; 0xa0
 8008d5a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008d5e:	4638      	mov	r0, r7
 8008d60:	f00b ff9b 	bl	8014c9a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008d64:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 8008d68:	2b20      	cmp	r3, #32
 8008d6a:	d005      	beq.n	8008d78 <_ZN26Measurement_SingleViewBaseC1Ev+0x364>
        lineWidthQ5 = widthQ5;
 8008d6c:	2320      	movs	r3, #32
 8008d6e:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 8008d72:	4638      	mov	r0, r7
 8008d74:	f00b fe90 	bl	8014a98 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008d78:	4638      	mov	r0, r7
 8008d7a:	2101      	movs	r1, #1
 8008d7c:	f00b ff98 	bl	8014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008d80:	4639      	mov	r1, r7
 8008d82:	4630      	mov	r0, r6
 8008d84:	f009 fd9c 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8008d88:	f04f 37ff 	mov.w	r7, #4294967295
    textArea_menu.setXY(41, 60);
 8008d8c:	223c      	movs	r2, #60	; 0x3c
 8008d8e:	ee18 0a10 	vmov	r0, s16
 8008d92:	2129      	movs	r1, #41	; 0x29
        linespace = space;
 8008d94:	f04f 0800 	mov.w	r8, #0
        boundingArea = calculateBoundingArea();
 8008d98:	ad04      	add	r5, sp, #16
 8008d9a:	f7fa fcfb 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8008d9e:	ee18 1a10 	vmov	r1, s16
 8008da2:	4628      	mov	r0, r5
        color = newColor;
 8008da4:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8008da8:	f8a4 8274 	strh.w	r8, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8008dac:	f00c f916 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008db0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008db4:	ee18 3a10 	vmov	r3, s16
 8008db8:	333c      	adds	r3, #60	; 0x3c
 8008dba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008dbe:	4b49      	ldr	r3, [pc, #292]	; (8008ee4 <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008dc0:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8008dc2:	ee18 0a10 	vmov	r0, s16
 8008dc6:	2352      	movs	r3, #82	; 0x52
 8008dc8:	a90a      	add	r1, sp, #40	; 0x28
 8008dca:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008dce:	f00c fb9f 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008dd2:	ee18 1a10 	vmov	r1, s16
 8008dd6:	4630      	mov	r0, r6
 8008dd8:	f009 fd72 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008ddc:	230a      	movs	r3, #10
 8008dde:	9300      	str	r3, [sp, #0]
 8008de0:	2232      	movs	r2, #50	; 0x32
 8008de2:	23f0      	movs	r3, #240	; 0xf0
 8008de4:	4641      	mov	r1, r8
 8008de6:	4658      	mov	r0, fp
 8008de8:	f7fa fce1 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8008dec:	9b03      	ldr	r3, [sp, #12]
 8008dee:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008df2:	22a0      	movs	r2, #160	; 0xa0
 8008df4:	4611      	mov	r1, r2
 8008df6:	4658      	mov	r0, fp
 8008df8:	f8c4 7304 	str.w	r7, [r4, #772]	; 0x304
 8008dfc:	f8a4 7308 	strh.w	r7, [r4, #776]	; 0x308
 8008e00:	f00b ff40 	bl	8014c84 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008e04:	22a0      	movs	r2, #160	; 0xa0
 8008e06:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008e0a:	4658      	mov	r0, fp
 8008e0c:	f00b ff45 	bl	8014c9a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008e10:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 8008e14:	2b20      	cmp	r3, #32
 8008e16:	d005      	beq.n	8008e24 <_ZN26Measurement_SingleViewBaseC1Ev+0x410>
        lineWidthQ5 = widthQ5;
 8008e18:	2320      	movs	r3, #32
 8008e1a:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 8008e1e:	4658      	mov	r0, fp
 8008e20:	f00b fe3a 	bl	8014a98 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008e24:	4658      	mov	r0, fp
 8008e26:	2101      	movs	r1, #1
 8008e28:	f00b ff42 	bl	8014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008e2c:	4659      	mov	r1, fp
 8008e2e:	4630      	mov	r0, r6
 8008e30:	f009 fd46 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8008e34:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 8008e38:	ee18 0a90 	vmov	r0, s17
 8008e3c:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8008e3e:	2700      	movs	r7, #0
 8008e40:	2145      	movs	r1, #69	; 0x45
 8008e42:	f7fa fca7 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008e46:	ee18 1a90 	vmov	r1, s17
 8008e4a:	4628      	mov	r0, r5
        color = newColor;
 8008e4c:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 8008e50:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8008e54:	f00c f8c2 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008e58:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008e5c:	ee18 3a90 	vmov	r3, s17
 8008e60:	333c      	adds	r3, #60	; 0x3c
 8008e62:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008e66:	4b1f      	ldr	r3, [pc, #124]	; (8008ee4 <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008e68:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8008e6a:	ee18 0a90 	vmov	r0, s17
 8008e6e:	2311      	movs	r3, #17
 8008e70:	a90a      	add	r1, sp, #40	; 0x28
 8008e72:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008e76:	f00c fb4b 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008e7a:	ee18 1a90 	vmov	r1, s17
 8008e7e:	4630      	mov	r0, r6
 8008e80:	f009 fd1e 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8008e84:	ee19 0a10 	vmov	r0, s18
 8008e88:	220c      	movs	r2, #12
 8008e8a:	2136      	movs	r1, #54	; 0x36
 8008e8c:	f7fa fc82 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8008e90:	ee19 1a10 	vmov	r1, s18
 8008e94:	4628      	mov	r0, r5
        color = newColor;
 8008e96:	f8c4 8384 	str.w	r8, [r4, #900]	; 0x384
        linespace = space;
 8008e9a:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 8008e9e:	f00c f89d 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008ea2:	ee19 2a10 	vmov	r2, s18
 8008ea6:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 8008eaa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008eae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008eb2:	4b0c      	ldr	r3, [pc, #48]	; (8008ee4 <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008eb4:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8008eb6:	ee19 0a10 	vmov	r0, s18
 8008eba:	2310      	movs	r3, #16
 8008ebc:	a90a      	add	r1, sp, #40	; 0x28
 8008ebe:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008ec2:	f00c fb25 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008ec6:	4630      	mov	r0, r6
 8008ec8:	ee19 1a10 	vmov	r1, s18
 8008ecc:	f009 fcf8 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008ed0:	4620      	mov	r0, r4
 8008ed2:	b00d      	add	sp, #52	; 0x34
 8008ed4:	ecbd 8b06 	vpop	{d8-d10}
 8008ed8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008edc:	200138b0 	.word	0x200138b0
 8008ee0:	0802f621 	.word	0x0802f621
 8008ee4:	0802f694 	.word	0x0802f694

08008ee8 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8008ee8:	4770      	bx	lr

08008eea <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8008eea:	4770      	bx	lr

08008eec <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008eec:	4770      	bx	lr

08008eee <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008eee:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008ef0:	68c2      	ldr	r2, [r0, #12]
 8008ef2:	6844      	ldr	r4, [r0, #4]
 8008ef4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8008ef6:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8008ef8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008efc:	07d2      	lsls	r2, r2, #31
 8008efe:	bf48      	it	mi
 8008f00:	5962      	ldrmi	r2, [r4, r5]
 8008f02:	689b      	ldr	r3, [r3, #8]
    }
 8008f04:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008f06:	bf48      	it	mi
 8008f08:	58d3      	ldrmi	r3, [r2, r3]
 8008f0a:	4718      	bx	r3

08008f0c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8008f0c:	6843      	ldr	r3, [r0, #4]
 8008f0e:	b12b      	cbz	r3, 8008f1c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8008f10:	6883      	ldr	r3, [r0, #8]
 8008f12:	b92b      	cbnz	r3, 8008f20 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8008f14:	68c0      	ldr	r0, [r0, #12]
 8008f16:	f000 0001 	and.w	r0, r0, #1
 8008f1a:	4770      	bx	lr
 8008f1c:	4618      	mov	r0, r3
 8008f1e:	4770      	bx	lr
 8008f20:	2001      	movs	r0, #1
    }
 8008f22:	4770      	bx	lr

08008f24 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008f24:	b510      	push	{r4, lr}
 8008f26:	2110      	movs	r1, #16
 8008f28:	4604      	mov	r4, r0
 8008f2a:	f023 fefe 	bl	802cd2a <_ZdlPvj>
 8008f2e:	4620      	mov	r0, r4
 8008f30:	bd10      	pop	{r4, pc}
	...

08008f34 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8008f34:	b510      	push	{r4, lr}
 8008f36:	4b03      	ldr	r3, [pc, #12]	; (8008f44 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8008f38:	6003      	str	r3, [r0, #0]
 8008f3a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008f3c:	f00e f896 	bl	801706c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008f40:	4620      	mov	r0, r4
 8008f42:	bd10      	pop	{r4, pc}
 8008f44:	08030dfc 	.word	0x08030dfc

08008f48 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8008f48:	b507      	push	{r0, r1, r2, lr}
 8008f4a:	4b07      	ldr	r3, [pc, #28]	; (8008f68 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8008f4c:	6003      	str	r3, [r0, #0]
 8008f4e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008f50:	f00e f88c 	bl	801706c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008f54:	9801      	ldr	r0, [sp, #4]
 8008f56:	f241 417c 	movw	r1, #5244	; 0x147c
 8008f5a:	f023 fee6 	bl	802cd2a <_ZdlPvj>
 8008f5e:	9801      	ldr	r0, [sp, #4]
 8008f60:	b003      	add	sp, #12
 8008f62:	f85d fb04 	ldr.w	pc, [sp], #4
 8008f66:	bf00      	nop
 8008f68:	08030dfc 	.word	0x08030dfc

08008f6c <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8008f6c:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8008f6e:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8008f72:	f8d4 2478 	ldr.w	r2, [r4, #1144]	; 0x478
 8008f76:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8008f78:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8008f7a:	f8c4 2478 	str.w	r2, [r4, #1144]	; 0x478
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8008f7e:	d105      	bne.n	8008f8c <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8008f80:	6803      	ldr	r3, [r0, #0]
 8008f82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008f84:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8008f86:	2300      	movs	r3, #0
 8008f88:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
    }
}
 8008f8c:	bd10      	pop	{r4, pc}

08008f8e <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel_return)
 8008f8e:	3098      	adds	r0, #152	; 0x98
 8008f90:	4288      	cmp	r0, r1
{
 8008f92:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_return)
 8008f94:	d105      	bne.n	8008fa2 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008f96:	f00f fd6b 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
}
 8008f9a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8008f9e:	f7fc bbaf 	b.w	8005700 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8008fa2:	bd08      	pop	{r3, pc}

08008fa4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8008fa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008fa8:	ed2d 8b0a 	vpush	{d8-d12}
 8008fac:	4604      	mov	r4, r0
 8008fae:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8008fb0:	46a0      	mov	r8, r4
 8008fb2:	2500      	movs	r5, #0
 8008fb4:	f011 f9dc 	bl	801a370 <_ZN8touchgfx6ScreenC1Ev>
 8008fb8:	4bce      	ldr	r3, [pc, #824]	; (80092f4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x350>)
 8008fba:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008fbc:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8008fc0:	2226      	movs	r2, #38	; 0x26
 8008fc2:	4629      	mov	r1, r5
 8008fc4:	4640      	mov	r0, r8
 8008fc6:	f024 ff9c 	bl	802df02 <memset>
 8008fca:	4640      	mov	r0, r8
 8008fcc:	f7fa fc14 	bl	80037f8 <_ZN8touchgfx6WidgetC1Ev>
 8008fd0:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8008fd4:	26ff      	movs	r6, #255	; 0xff
 8008fd6:	4bc8      	ldr	r3, [pc, #800]	; (80092f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x354>)
 8008fd8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8008fda:	2226      	movs	r2, #38	; 0x26
 8008fdc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008fe0:	4629      	mov	r1, r5
 8008fe2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008fe6:	4638      	mov	r0, r7
 8008fe8:	66a5      	str	r5, [r4, #104]	; 0x68
 8008fea:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008fee:	f024 ff88 	bl	802df02 <memset>
 8008ff2:	4638      	mov	r0, r7
 8008ff4:	f7fa fc00 	bl	80037f8 <_ZN8touchgfx6WidgetC1Ev>
 8008ff8:	4bc0      	ldr	r3, [pc, #768]	; (80092fc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x358>)
 8008ffa:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008ffc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8009000:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8009004:	a90a      	add	r1, sp, #40	; 0x28
 8009006:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 800900a:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 800900c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8009010:	f00d f82f 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8009014:	4658      	mov	r0, fp
 8009016:	f00d f963 	bl	80162e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800901a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800901e:	f504 7994 	add.w	r9, r4, #296	; 0x128
 8009022:	4618      	mov	r0, r3
 8009024:	ee0a 3a90 	vmov	s21, r3
 8009028:	f7fa fc4a 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 800902c:	4648      	mov	r0, r9
 800902e:	f7fa fc47 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8009032:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 8009036:	4618      	mov	r0, r3
 8009038:	ee0b 3a10 	vmov	s22, r3
 800903c:	f7fa fc40 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8009040:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 8009044:	4618      	mov	r0, r3
 8009046:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800904a:	4ead      	ldr	r6, [pc, #692]	; (8009300 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x35c>)
        : TextArea()
 800904c:	f7fa fc38 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8009050:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 8009054:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 8009058:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800905a:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 800905e:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 8009062:	f7fa fc2d 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8009066:	f504 7314 	add.w	r3, r4, #592	; 0x250
 800906a:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800906c:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 8009070:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 8009074:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 8009078:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 800907c:	f7fa fc20 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8009080:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 8009084:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8009088:	4650      	mov	r0, sl
 800908a:	f00c fcb5 	bl	80159f8 <_ZN8touchgfx5GaugeC1Ev>
 800908e:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 8009092:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8009094:	4e9b      	ldr	r6, [pc, #620]	; (8009304 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x360>)
 8009096:	ee08 3a10 	vmov	s16, r3
 800909a:	f00b fcdd 	bl	8014a58 <_ZN8touchgfx4LineC1Ev>
 800909e:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 80090a2:	4618      	mov	r0, r3
 80090a4:	9302      	str	r3, [sp, #8]
 80090a6:	f7fa f9ab 	bl	8003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80090aa:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80090ae:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 80090b2:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 80090b6:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 80090ba:	4618      	mov	r0, r3
 80090bc:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 80090c0:	ee09 3a10 	vmov	s18, r3
 80090c4:	f7fa fbfc 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 80090c8:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 80090cc:	4618      	mov	r0, r3
 80090ce:	ee08 3a90 	vmov	s17, r3
 80090d2:	f00b fcc1 	bl	8014a58 <_ZN8touchgfx4LineC1Ev>
 80090d6:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 80090da:	4618      	mov	r0, r3
 80090dc:	9303      	str	r3, [sp, #12]
 80090de:	f7fa f98f 	bl	8003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80090e2:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80090e6:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 80090ea:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 80090ee:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 80090f2:	4618      	mov	r0, r3
 80090f4:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 80090f8:	ee09 3a90 	vmov	s19, r3
 80090fc:	f7fa fbe0 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8009100:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 8009104:	4618      	mov	r0, r3
 8009106:	ee0a 3a10 	vmov	s20, r3
 800910a:	f7fa fbd9 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800910e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8009112:	4a7d      	ldr	r2, [pc, #500]	; (8009308 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x364>)
 8009114:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 8009118:	4a7c      	ldr	r2, [pc, #496]	; (800930c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x368>)
 800911a:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 800911e:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 8009122:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
 8009126:	f8c3 5478 	str.w	r5, [r3, #1144]	; 0x478
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800912a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800912e:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 8009132:	f00d ff91 	bl	8017058 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8009136:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800913a:	462a      	mov	r2, r5
 800913c:	4640      	mov	r0, r8
 800913e:	9300      	str	r3, [sp, #0]
 8009140:	4629      	mov	r1, r5
 8009142:	23f0      	movs	r3, #240	; 0xf0
 8009144:	f7fa fb33 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8009148:	1d26      	adds	r6, r4, #4
        color = newColor;
 800914a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800914e:	66a3      	str	r3, [r4, #104]	; 0x68
 8009150:	4641      	mov	r1, r8
 8009152:	4630      	mov	r0, r6
 8009154:	f009 fbb4 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8009158:	462a      	mov	r2, r5
 800915a:	4638      	mov	r0, r7
 800915c:	4629      	mov	r1, r5
 800915e:	f7fa fb19 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8009162:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8009166:	4638      	mov	r0, r7
 8009168:	a90a      	add	r1, sp, #40	; 0x28
 800916a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800916e:	f00c ff80 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8009172:	4639      	mov	r1, r7
 8009174:	4630      	mov	r0, r6
 8009176:	f009 fba3 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_return.setXY(33, 256);
 800917a:	4658      	mov	r0, fp
 800917c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8009180:	2121      	movs	r1, #33	; 0x21
 8009182:	f7fa fb07 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8009186:	2303      	movs	r3, #3
    buttonWithLabel_return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8009188:	aa0a      	add	r2, sp, #40	; 0x28
 800918a:	a909      	add	r1, sp, #36	; 0x24
 800918c:	4658      	mov	r0, fp
 800918e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8009192:	2302      	movs	r3, #2
 8009194:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009198:	f00c fd75 	bl	8015c86 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800919c:	2356      	movs	r3, #86	; 0x56
        updateTextPosition();
 800919e:	4658      	mov	r0, fp
 80091a0:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80091a4:	f7fa fb3a 	bl	800381c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_return.setAction(buttonCallback);
 80091a8:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 80091ac:	f04f 38ff 	mov.w	r8, #4294967295
 80091b0:	3308      	adds	r3, #8
 80091b2:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80091b6:	4659      	mov	r1, fp
 80091b8:	4630      	mov	r0, r6
        colorPressed = col;
 80091ba:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 80091be:	af04      	add	r7, sp, #16
 80091c0:	f009 fb7e 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 80091c4:	22c2      	movs	r2, #194	; 0xc2
 80091c6:	ee1a 0a90 	vmov	r0, s21
 80091ca:	4629      	mov	r1, r5
 80091cc:	f7fa fae2 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 80091d0:	ee1a 1a90 	vmov	r1, s21
 80091d4:	4638      	mov	r0, r7
        color = newColor;
 80091d6:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 80091da:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80091de:	f00b fefd 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80091e2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80091e6:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80091ea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80091ee:	4b48      	ldr	r3, [pc, #288]	; (8009310 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x36c>)
 80091f0:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 80091f2:	ee1a 0a90 	vmov	r0, s21
 80091f6:	2338      	movs	r3, #56	; 0x38
 80091f8:	a90a      	add	r1, sp, #40	; 0x28
 80091fa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80091fe:	f00c f987 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009202:	ee1a 1a90 	vmov	r1, s21
 8009206:	4630      	mov	r0, r6
 8009208:	f009 fb5a 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 800920c:	22c2      	movs	r2, #194	; 0xc2
 800920e:	4648      	mov	r0, r9
 8009210:	21d9      	movs	r1, #217	; 0xd9
 8009212:	f7fa fabf 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8009216:	4649      	mov	r1, r9
 8009218:	4638      	mov	r0, r7
        color = newColor;
 800921a:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 800921e:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 8009222:	f00b fedb 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009226:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800922a:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 800922e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009232:	4b37      	ldr	r3, [pc, #220]	; (8009310 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x36c>)
 8009234:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 8009236:	4648      	mov	r0, r9
 8009238:	2339      	movs	r3, #57	; 0x39
 800923a:	a90a      	add	r1, sp, #40	; 0x28
 800923c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009240:	f00c f966 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009244:	4649      	mov	r1, r9
 8009246:	4630      	mov	r0, r6
 8009248:	f009 fb3a 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 800924c:	2255      	movs	r2, #85	; 0x55
 800924e:	ee1b 0a10 	vmov	r0, s22
 8009252:	2171      	movs	r1, #113	; 0x71
 8009254:	f7fa fa9e 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8009258:	ee1b 1a10 	vmov	r1, s22
 800925c:	4638      	mov	r0, r7
        color = newColor;
 800925e:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 8009262:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 8009266:	f00b feb9 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800926a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800926e:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8009272:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009276:	4b26      	ldr	r3, [pc, #152]	; (8009310 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x36c>)
 8009278:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 800927a:	ee1b 0a10 	vmov	r0, s22
 800927e:	2337      	movs	r3, #55	; 0x37
 8009280:	a90a      	add	r1, sp, #40	; 0x28
 8009282:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009286:	f00c f943 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800928a:	ee1b 1a10 	vmov	r1, s22
 800928e:	4630      	mov	r0, r6
 8009290:	f009 fb16 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 239, 240, 15);
 8009294:	230f      	movs	r3, #15
 8009296:	22ef      	movs	r2, #239	; 0xef
 8009298:	ee1b 0a90 	vmov	r0, s23
 800929c:	9300      	str	r3, [sp, #0]
 800929e:	4629      	mov	r1, r5
 80092a0:	23f0      	movs	r3, #240	; 0xf0
 80092a2:	f7fa fa84 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 80092a6:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 80092aa:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 80092ae:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80092b2:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 80092b6:	ee1b 1a90 	vmov	r1, s23
 80092ba:	4638      	mov	r0, r7
 80092bc:	4798      	blx	r3
 80092be:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80092c2:	f8df b064 	ldr.w	fp, [pc, #100]	; 8009328 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x384>
 80092c6:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 80092ca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80092ce:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LFLK).getText());
 80092d2:	f204 691c 	addw	r9, r4, #1564	; 0x61c
 80092d6:	b92b      	cbnz	r3, 80092e4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x340>
 80092d8:	4b0e      	ldr	r3, [pc, #56]	; (8009314 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x370>)
 80092da:	4a0f      	ldr	r2, [pc, #60]	; (8009318 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x374>)
 80092dc:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80092de:	480f      	ldr	r0, [pc, #60]	; (800931c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x378>)
 80092e0:	f024 fc0a 	bl	802daf8 <__assert_func>
 80092e4:	4b0e      	ldr	r3, [pc, #56]	; (8009320 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x37c>)
 80092e6:	881b      	ldrh	r3, [r3, #0]
 80092e8:	2b1b      	cmp	r3, #27
 80092ea:	d81f      	bhi.n	800932c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x388>
 80092ec:	4b0d      	ldr	r3, [pc, #52]	; (8009324 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x380>)
 80092ee:	4a0a      	ldr	r2, [pc, #40]	; (8009318 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x374>)
 80092f0:	2161      	movs	r1, #97	; 0x61
 80092f2:	e7f4      	b.n	80092de <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x33a>
 80092f4:	08030dfc 	.word	0x08030dfc
 80092f8:	08031bec 	.word	0x08031bec
 80092fc:	08031e38 	.word	0x08031e38
 8009300:	0802f734 	.word	0x0802f734
 8009304:	08031920 	.word	0x08031920
 8009308:	08030de4 	.word	0x08030de4
 800930c:	08008f8f 	.word	0x08008f8f
 8009310:	0802f694 	.word	0x0802f694
 8009314:	0802f4e4 	.word	0x0802f4e4
 8009318:	0802f5e9 	.word	0x0802f5e9
 800931c:	0802f561 	.word	0x0802f561
 8009320:	200138a8 	.word	0x200138a8
 8009324:	0802f5a8 	.word	0x0802f5a8
 8009328:	200138a4 	.word	0x200138a4
        return texts->getText(typedTextId);
 800932c:	4bdd      	ldr	r3, [pc, #884]	; (80096a4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x700>)
 800932e:	211b      	movs	r1, #27
 8009330:	6818      	ldr	r0, [r3, #0]
 8009332:	f001 fa41 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8009336:	4adc      	ldr	r2, [pc, #880]	; (80096a8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x704>)
 8009338:	4603      	mov	r3, r0
 800933a:	210a      	movs	r1, #10
 800933c:	4648      	mov	r0, r9
 800933e:	f012 fd45 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8009342:	f04f 011c 	mov.w	r1, #28
 8009346:	4ad9      	ldr	r2, [pc, #868]	; (80096ac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
        wc1 = value;
 8009348:	f8c4 9200 	str.w	r9, [r4, #512]	; 0x200
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G8ED));
 800934c:	ee1b 0a90 	vmov	r0, s23
 8009350:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8009354:	a90a      	add	r1, sp, #40	; 0x28
 8009356:	920a      	str	r2, [sp, #40]	; 0x28
 8009358:	f00c f8da 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800935c:	ee1b 1a90 	vmov	r1, s23
 8009360:	4630      	mov	r0, r6
 8009362:	f009 faad 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 224, 240, 15);
 8009366:	210f      	movs	r1, #15
 8009368:	22e0      	movs	r2, #224	; 0xe0
 800936a:	ee1c 0a10 	vmov	r0, s24
 800936e:	9100      	str	r1, [sp, #0]
 8009370:	23f0      	movs	r3, #240	; 0xf0
 8009372:	4629      	mov	r1, r5
 8009374:	f7fa fa1b 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8009378:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 800937c:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 8009380:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8009384:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 8009388:	ee1c 1a10 	vmov	r1, s24
 800938c:	4638      	mov	r0, r7
 800938e:	4798      	blx	r3
 8009390:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009394:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8009398:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800939c:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 80093a0:	f504 69c6 	add.w	r9, r4, #1584	; 0x630
 80093a4:	2b00      	cmp	r3, #0
 80093a6:	d097      	beq.n	80092d8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x334>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80093a8:	49c1      	ldr	r1, [pc, #772]	; (80096b0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x70c>)
 80093aa:	880b      	ldrh	r3, [r1, #0]
 80093ac:	2b32      	cmp	r3, #50	; 0x32
 80093ae:	d99d      	bls.n	80092ec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x348>
        return texts->getText(typedTextId);
 80093b0:	4bbc      	ldr	r3, [pc, #752]	; (80096a4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x700>)
 80093b2:	2132      	movs	r1, #50	; 0x32
 80093b4:	6818      	ldr	r0, [r3, #0]
 80093b6:	f001 f9ff 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 80093ba:	4abb      	ldr	r2, [pc, #748]	; (80096a8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x704>)
 80093bc:	4603      	mov	r3, r0
 80093be:	210a      	movs	r1, #10
 80093c0:	4648      	mov	r0, r9
 80093c2:	f012 fd03 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 80093c6:	a80a      	add	r0, sp, #40	; 0x28
        : typedTextId(id)
 80093c8:	4ab8      	ldr	r2, [pc, #736]	; (80096ac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
 80093ca:	f8c4 924c 	str.w	r9, [r4, #588]	; 0x24c
 80093ce:	4601      	mov	r1, r0
 80093d0:	f04f 0935 	mov.w	r9, #53	; 0x35
 80093d4:	ee1c 0a10 	vmov	r0, s24
 80093d8:	920a      	str	r2, [sp, #40]	; 0x28
 80093da:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 80093de:	f00c f897 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80093e2:	ee1c 1a10 	vmov	r1, s24
 80093e6:	4630      	mov	r0, r6
 80093e8:	f009 fa6a 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 209, 240, 15);
 80093ec:	200f      	movs	r0, #15
 80093ee:	22d1      	movs	r2, #209	; 0xd1
 80093f0:	9000      	str	r0, [sp, #0]
 80093f2:	23f0      	movs	r3, #240	; 0xf0
 80093f4:	ee1c 0a90 	vmov	r0, s25
 80093f8:	4629      	mov	r1, r5
 80093fa:	f7fa f9d8 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 80093fe:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 8009402:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 8009406:	4638      	mov	r0, r7
 8009408:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 800940c:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 8009410:	ee1c 1a90 	vmov	r1, s25
 8009414:	4798      	blx	r3
 8009416:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800941a:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 800941e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009422:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 8009426:	f204 6744 	addw	r7, r4, #1604	; 0x644
 800942a:	2b00      	cmp	r3, #0
 800942c:	f43f af54 	beq.w	80092d8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x334>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009430:	499f      	ldr	r1, [pc, #636]	; (80096b0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x70c>)
 8009432:	880b      	ldrh	r3, [r1, #0]
 8009434:	2b33      	cmp	r3, #51	; 0x33
 8009436:	f67f af59 	bls.w	80092ec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x348>
        return texts->getText(typedTextId);
 800943a:	4b9a      	ldr	r3, [pc, #616]	; (80096a4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x700>)
 800943c:	2133      	movs	r1, #51	; 0x33
 800943e:	6818      	ldr	r0, [r3, #0]
 8009440:	f001 f9ba 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8009444:	4a98      	ldr	r2, [pc, #608]	; (80096a8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x704>)
 8009446:	4603      	mov	r3, r0
 8009448:	210a      	movs	r1, #10
 800944a:	4638      	mov	r0, r7
 800944c:	f012 fcbe 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8009450:	4a96      	ldr	r2, [pc, #600]	; (80096ac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
 8009452:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 8009456:	2336      	movs	r3, #54	; 0x36
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 8009458:	ee1c 0a90 	vmov	r0, s25
 800945c:	a90a      	add	r1, sp, #40	; 0x28
 800945e:	920a      	str	r2, [sp, #40]	; 0x28
 8009460:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009464:	f00c f854 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009468:	ee1c 1a90 	vmov	r1, s25
 800946c:	4630      	mov	r0, r6
 800946e:	f009 fa27 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009472:	2304      	movs	r3, #4
    SMD1_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8009474:	a90a      	add	r1, sp, #40	; 0x28
 8009476:	4650      	mov	r0, sl
 8009478:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800947c:	f009 f9b2 	bl	80127e4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_Gauge.setPosition(28, 103, 184, 106);
 8009480:	236a      	movs	r3, #106	; 0x6a
 8009482:	9300      	str	r3, [sp, #0]
 8009484:	2267      	movs	r2, #103	; 0x67
 8009486:	23b8      	movs	r3, #184	; 0xb8
 8009488:	211c      	movs	r1, #28
 800948a:	4650      	mov	r0, sl
 800948c:	f7fa f98f 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_Gauge.setCenter(92, 92);
 8009490:	225c      	movs	r2, #92	; 0x5c
 8009492:	4611      	mov	r1, r2
 8009494:	4650      	mov	r0, sl
 8009496:	f00c fb5a 	bl	8015b4e <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_Gauge.setStartEndAngle(-90, 90);
 800949a:	225a      	movs	r2, #90	; 0x5a
 800949c:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80094a0:	4650      	mov	r0, sl
 80094a2:	f00c fbd9 	bl	8015c58 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_Gauge.setRange(-90, 90);
 80094a6:	462b      	mov	r3, r5
 80094a8:	225a      	movs	r2, #90	; 0x5a
 80094aa:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80094ae:	4650      	mov	r0, sl
 80094b0:	9500      	str	r5, [sp, #0]
 80094b2:	f009 f844 	bl	801253e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_Gauge.setValue(0);
 80094b6:	4629      	mov	r1, r5
 80094b8:	4650      	mov	r0, sl
 80094ba:	f00c fb77 	bl	8015bac <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 80094be:	464b      	mov	r3, r9
 80094c0:	2208      	movs	r2, #8
 80094c2:	2105      	movs	r1, #5
 80094c4:	4650      	mov	r0, sl
 80094c6:	f00c fb2d 	bl	8015b24 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80094ca:	2101      	movs	r1, #1
 80094cc:	4650      	mov	r0, sl
 80094ce:	f00c facb 	bl	8015a68 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80094d2:	2101      	movs	r1, #1
 80094d4:	4650      	mov	r0, sl
 80094d6:	f00c faca 	bl	8015a6e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 80094da:	4651      	mov	r1, sl
 80094dc:	4630      	mov	r0, r6
 80094de:	f009 f9ef 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 80094e2:	230a      	movs	r3, #10
 80094e4:	ee18 0a10 	vmov	r0, s16
 80094e8:	9300      	str	r3, [sp, #0]
 80094ea:	224b      	movs	r2, #75	; 0x4b
 80094ec:	23f0      	movs	r3, #240	; 0xf0
 80094ee:	4629      	mov	r1, r5
 80094f0:	f7fa f95d 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 80094f4:	9b02      	ldr	r3, [sp, #8]
 80094f6:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80094fa:	22a0      	movs	r2, #160	; 0xa0
 80094fc:	4611      	mov	r1, r2
 80094fe:	ee18 0a10 	vmov	r0, s16
 8009502:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8009506:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 800950a:	f00b fbbb 	bl	8014c84 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800950e:	ee18 0a10 	vmov	r0, s16
 8009512:	22a0      	movs	r2, #160	; 0xa0
 8009514:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8009518:	f00b fbbf 	bl	8014c9a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800951c:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8009520:	2b20      	cmp	r3, #32
 8009522:	d006      	beq.n	8009532 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x58e>
        lineWidthQ5 = widthQ5;
 8009524:	2320      	movs	r3, #32
        updateCachedShape();
 8009526:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 800952a:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 800952e:	f00b fab3 	bl	8014a98 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8009532:	ee18 0a10 	vmov	r0, s16
 8009536:	2101      	movs	r1, #1
 8009538:	f00b fbba 	bl	8014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800953c:	ee18 1a10 	vmov	r1, s16
 8009540:	4630      	mov	r0, r6
 8009542:	f009 f9bd 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8009546:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(31, 60);
 800954a:	223c      	movs	r2, #60	; 0x3c
 800954c:	ee19 0a10 	vmov	r0, s18
 8009550:	211f      	movs	r1, #31
        linespace = space;
 8009552:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 8009556:	ad04      	add	r5, sp, #16
 8009558:	f7fa f91c 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 800955c:	ee19 1a10 	vmov	r1, s18
 8009560:	4628      	mov	r0, r5
        color = newColor;
 8009562:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 8009566:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 800956a:	f00b fd37 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800956e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009572:	ee19 3a10 	vmov	r3, s18
 8009576:	333c      	adds	r3, #60	; 0x3c
 8009578:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800957c:	4f4b      	ldr	r7, [pc, #300]	; (80096ac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
 800957e:	970a      	str	r7, [sp, #40]	; 0x28
 8009580:	2351      	movs	r3, #81	; 0x51
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8009582:	ee19 0a10 	vmov	r0, s18
 8009586:	a90a      	add	r1, sp, #40	; 0x28
 8009588:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800958c:	f00b ffc0 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009590:	ee19 1a10 	vmov	r1, s18
 8009594:	4630      	mov	r0, r6
 8009596:	f009 f993 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800959a:	230a      	movs	r3, #10
 800959c:	ee18 0a90 	vmov	r0, s17
 80095a0:	9300      	str	r3, [sp, #0]
 80095a2:	2232      	movs	r2, #50	; 0x32
 80095a4:	23f0      	movs	r3, #240	; 0xf0
 80095a6:	4649      	mov	r1, r9
 80095a8:	f7fa f901 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 80095ac:	9b03      	ldr	r3, [sp, #12]
 80095ae:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80095b2:	22a0      	movs	r2, #160	; 0xa0
 80095b4:	4611      	mov	r1, r2
 80095b6:	ee18 0a90 	vmov	r0, s17
 80095ba:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 80095be:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 80095c2:	f00b fb5f 	bl	8014c84 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80095c6:	ee18 0a90 	vmov	r0, s17
 80095ca:	22a0      	movs	r2, #160	; 0xa0
 80095cc:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80095d0:	f00b fb63 	bl	8014c9a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80095d4:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 80095d8:	2b20      	cmp	r3, #32
 80095da:	d006      	beq.n	80095ea <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x646>
        lineWidthQ5 = widthQ5;
 80095dc:	2320      	movs	r3, #32
        updateCachedShape();
 80095de:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 80095e2:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 80095e6:	f00b fa57 	bl	8014a98 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80095ea:	ee18 0a90 	vmov	r0, s17
 80095ee:	2101      	movs	r1, #1
 80095f0:	f00b fb5e 	bl	8014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80095f4:	ee18 1a90 	vmov	r1, s17
 80095f8:	4630      	mov	r0, r6
 80095fa:	f009 f961 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80095fe:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 8009602:	ee19 0a90 	vmov	r0, s19
 8009606:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8009608:	f04f 0800 	mov.w	r8, #0
 800960c:	2145      	movs	r1, #69	; 0x45
 800960e:	f7fa f8c1 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8009612:	ee19 1a90 	vmov	r1, s19
 8009616:	4628      	mov	r0, r5
        color = newColor;
 8009618:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 800961c:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 8009620:	f00b fcdc 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009624:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009628:	ee19 3a90 	vmov	r3, s19
 800962c:	333c      	adds	r3, #60	; 0x3c
 800962e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009632:	2358      	movs	r3, #88	; 0x58
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 8009634:	ee19 0a90 	vmov	r0, s19
 8009638:	a90a      	add	r1, sp, #40	; 0x28
 800963a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800963e:	970a      	str	r7, [sp, #40]	; 0x28
 8009640:	f00b ff66 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009644:	ee19 1a90 	vmov	r1, s19
 8009648:	4630      	mov	r0, r6
 800964a:	f009 f939 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_titel.setXY(54, 12);
 800964e:	ee1a 0a10 	vmov	r0, s20
 8009652:	220c      	movs	r2, #12
 8009654:	2136      	movs	r1, #54	; 0x36
 8009656:	f7fa f89d 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 800965a:	ee1a 1a10 	vmov	r1, s20
 800965e:	4628      	mov	r0, r5
        color = newColor;
 8009660:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 8009664:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 8009668:	f00b fcb8 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800966c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009670:	ee1a 3a10 	vmov	r3, s20
 8009674:	333c      	adds	r3, #60	; 0x3c
 8009676:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800967a:	2357      	movs	r3, #87	; 0x57
    textArea_titel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 800967c:	ee1a 0a10 	vmov	r0, s20
 8009680:	a90a      	add	r1, sp, #40	; 0x28
 8009682:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009686:	970a      	str	r7, [sp, #40]	; 0x28
 8009688:	f00b ff42 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800968c:	4630      	mov	r0, r6
 800968e:	ee1a 1a10 	vmov	r1, s20
 8009692:	f009 f915 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8009696:	4620      	mov	r0, r4
 8009698:	b00d      	add	sp, #52	; 0x34
 800969a:	ecbd 8b0a 	vpop	{d8-d12}
 800969e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80096a2:	bf00      	nop
 80096a4:	200138b0 	.word	0x200138b0
 80096a8:	0802f621 	.word	0x0802f621
 80096ac:	0802f694 	.word	0x0802f694
 80096b0:	200138a8 	.word	0x200138a8

080096b4 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{

}
 80096b4:	4770      	bx	lr

080096b6 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80096b6:	4770      	bx	lr

080096b8 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80096b8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80096ba:	68c2      	ldr	r2, [r0, #12]
 80096bc:	6844      	ldr	r4, [r0, #4]
 80096be:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80096c0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80096c2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80096c6:	07d2      	lsls	r2, r2, #31
 80096c8:	bf48      	it	mi
 80096ca:	5962      	ldrmi	r2, [r4, r5]
 80096cc:	689b      	ldr	r3, [r3, #8]
    }
 80096ce:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80096d0:	bf48      	it	mi
 80096d2:	58d3      	ldrmi	r3, [r2, r3]
 80096d4:	4718      	bx	r3

080096d6 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80096d6:	6843      	ldr	r3, [r0, #4]
 80096d8:	b12b      	cbz	r3, 80096e6 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80096da:	6883      	ldr	r3, [r0, #8]
 80096dc:	b92b      	cbnz	r3, 80096ea <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80096de:	68c0      	ldr	r0, [r0, #12]
 80096e0:	f000 0001 	and.w	r0, r0, #1
 80096e4:	4770      	bx	lr
 80096e6:	4618      	mov	r0, r3
 80096e8:	4770      	bx	lr
 80096ea:	2001      	movs	r0, #1
    }
 80096ec:	4770      	bx	lr

080096ee <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80096ee:	b510      	push	{r4, lr}
 80096f0:	2110      	movs	r1, #16
 80096f2:	4604      	mov	r4, r0
 80096f4:	f023 fb19 	bl	802cd2a <_ZdlPvj>
 80096f8:	4620      	mov	r0, r4
 80096fa:	bd10      	pop	{r4, pc}

080096fc <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 80096fc:	b510      	push	{r4, lr}
 80096fe:	4b03      	ldr	r3, [pc, #12]	; (800970c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x10>)
 8009700:	6003      	str	r3, [r0, #0]
 8009702:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8009704:	f00d fcb2 	bl	801706c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8009708:	4620      	mov	r0, r4
 800970a:	bd10      	pop	{r4, pc}
 800970c:	08030e4c 	.word	0x08030e4c

08009710 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8009710:	b507      	push	{r0, r1, r2, lr}
 8009712:	4b07      	ldr	r3, [pc, #28]	; (8009730 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev+0x20>)
 8009714:	6003      	str	r3, [r0, #0]
 8009716:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8009718:	f00d fca8 	bl	801706c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800971c:	9801      	ldr	r0, [sp, #4]
 800971e:	f241 4178 	movw	r1, #5240	; 0x1478
 8009722:	f023 fb02 	bl	802cd2a <_ZdlPvj>
 8009726:	9801      	ldr	r0, [sp, #4]
 8009728:	b003      	add	sp, #12
 800972a:	f85d fb04 	ldr.w	pc, [sp], #4
 800972e:	bf00      	nop
 8009730:	08030e4c 	.word	0x08030e4c

08009734 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_return)
 8009734:	3098      	adds	r0, #152	; 0x98
 8009736:	4288      	cmp	r0, r1
{
 8009738:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_return)
 800973a:	d105      	bne.n	8009748 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800973c:	f00f f998 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_return clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8009740:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8009744:	f7fb bfdc 	b.w	8005700 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8009748:	bd08      	pop	{r3, pc}
	...

0800974c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 800974c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009750:	ed2d 8b0a 	vpush	{d8-d12}
 8009754:	4604      	mov	r4, r0
 8009756:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8009758:	46a0      	mov	r8, r4
 800975a:	2500      	movs	r5, #0
 800975c:	f010 fe08 	bl	801a370 <_ZN8touchgfx6ScreenC1Ev>
 8009760:	4bcd      	ldr	r3, [pc, #820]	; (8009a98 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x34c>)
 8009762:	63e5      	str	r5, [r4, #60]	; 0x3c
 8009764:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8009768:	2226      	movs	r2, #38	; 0x26
 800976a:	4629      	mov	r1, r5
 800976c:	4640      	mov	r0, r8
 800976e:	f024 fbc8 	bl	802df02 <memset>
 8009772:	4640      	mov	r0, r8
 8009774:	f7fa f840 	bl	80037f8 <_ZN8touchgfx6WidgetC1Ev>
 8009778:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 800977c:	26ff      	movs	r6, #255	; 0xff
 800977e:	4bc7      	ldr	r3, [pc, #796]	; (8009a9c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x350>)
 8009780:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8009782:	2226      	movs	r2, #38	; 0x26
 8009784:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009788:	4629      	mov	r1, r5
 800978a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800978e:	4638      	mov	r0, r7
 8009790:	66a5      	str	r5, [r4, #104]	; 0x68
 8009792:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009796:	f024 fbb4 	bl	802df02 <memset>
 800979a:	4638      	mov	r0, r7
 800979c:	f7fa f82c 	bl	80037f8 <_ZN8touchgfx6WidgetC1Ev>
 80097a0:	4bbf      	ldr	r3, [pc, #764]	; (8009aa0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x354>)
 80097a2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80097a4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80097a8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80097ac:	a90a      	add	r1, sp, #40	; 0x28
 80097ae:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 80097b2:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 80097b4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80097b8:	f00c fc5b 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80097bc:	4658      	mov	r0, fp
 80097be:	f00c fd8f 	bl	80162e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80097c2:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80097c6:	f504 7994 	add.w	r9, r4, #296	; 0x128
 80097ca:	4618      	mov	r0, r3
 80097cc:	ee0a 3a90 	vmov	s21, r3
 80097d0:	f7fa f876 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 80097d4:	4648      	mov	r0, r9
 80097d6:	f7fa f873 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 80097da:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 80097de:	4618      	mov	r0, r3
 80097e0:	ee0b 3a10 	vmov	s22, r3
 80097e4:	f7fa f86c 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 80097e8:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 80097ec:	4618      	mov	r0, r3
 80097ee:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80097f2:	4eac      	ldr	r6, [pc, #688]	; (8009aa4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x358>)
        : TextArea()
 80097f4:	f7fa f864 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 80097f8:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 80097fc:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 8009800:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8009802:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 8009806:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 800980a:	f7fa f859 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 800980e:	f504 7314 	add.w	r3, r4, #592	; 0x250
 8009812:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8009814:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 8009818:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 800981c:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 8009820:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 8009824:	f7fa f84c 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8009828:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 800982c:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8009830:	4650      	mov	r0, sl
 8009832:	f00c f8e1 	bl	80159f8 <_ZN8touchgfx5GaugeC1Ev>
 8009836:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 800983a:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800983c:	4e9a      	ldr	r6, [pc, #616]	; (8009aa8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x35c>)
 800983e:	ee08 3a10 	vmov	s16, r3
 8009842:	f00b f909 	bl	8014a58 <_ZN8touchgfx4LineC1Ev>
 8009846:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 800984a:	4618      	mov	r0, r3
 800984c:	9302      	str	r3, [sp, #8]
 800984e:	f7f9 fdd7 	bl	8003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8009852:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8009856:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 800985a:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 800985e:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 8009862:	4618      	mov	r0, r3
 8009864:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8009868:	ee09 3a10 	vmov	s18, r3
 800986c:	f7fa f828 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8009870:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8009874:	4618      	mov	r0, r3
 8009876:	ee08 3a90 	vmov	s17, r3
 800987a:	f00b f8ed 	bl	8014a58 <_ZN8touchgfx4LineC1Ev>
 800987e:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 8009882:	4618      	mov	r0, r3
 8009884:	9303      	str	r3, [sp, #12]
 8009886:	f7f9 fdbb 	bl	8003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800988a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800988e:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 8009892:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 8009896:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 800989a:	4618      	mov	r0, r3
 800989c:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 80098a0:	ee09 3a90 	vmov	s19, r3
 80098a4:	f7fa f80c 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 80098a8:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 80098ac:	4618      	mov	r0, r3
 80098ae:	ee0a 3a10 	vmov	s20, r3
 80098b2:	f7fa f805 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80098b6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80098ba:	4a7c      	ldr	r2, [pc, #496]	; (8009aac <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x360>)
 80098bc:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 80098c0:	4a7b      	ldr	r2, [pc, #492]	; (8009ab0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x364>)
 80098c2:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 80098c6:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 80098ca:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80098ce:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80098d2:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 80098d6:	f00d fbbf 	bl	8017058 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80098da:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80098de:	462a      	mov	r2, r5
 80098e0:	4640      	mov	r0, r8
 80098e2:	9300      	str	r3, [sp, #0]
 80098e4:	4629      	mov	r1, r5
 80098e6:	23f0      	movs	r3, #240	; 0xf0
 80098e8:	f7f9 ff61 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 80098ec:	1d26      	adds	r6, r4, #4
        color = newColor;
 80098ee:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80098f2:	66a3      	str	r3, [r4, #104]	; 0x68
 80098f4:	4641      	mov	r1, r8
 80098f6:	4630      	mov	r0, r6
 80098f8:	f008 ffe2 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 80098fc:	462a      	mov	r2, r5
 80098fe:	4638      	mov	r0, r7
 8009900:	4629      	mov	r1, r5
 8009902:	f7f9 ff47 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8009906:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800990a:	4638      	mov	r0, r7
 800990c:	a90a      	add	r1, sp, #40	; 0x28
 800990e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009912:	f00c fbae 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8009916:	4639      	mov	r1, r7
 8009918:	4630      	mov	r0, r6
 800991a:	f008 ffd1 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_return.setXY(33, 256);
 800991e:	4658      	mov	r0, fp
 8009920:	f44f 7280 	mov.w	r2, #256	; 0x100
 8009924:	2121      	movs	r1, #33	; 0x21
 8009926:	f7f9 ff35 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 800992a:	2303      	movs	r3, #3
    buttonWithLabel_return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800992c:	aa0a      	add	r2, sp, #40	; 0x28
 800992e:	a909      	add	r1, sp, #36	; 0x24
 8009930:	4658      	mov	r0, fp
 8009932:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8009936:	2302      	movs	r3, #2
 8009938:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800993c:	f00c f9a3 	bl	8015c86 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8009940:	2359      	movs	r3, #89	; 0x59
        updateTextPosition();
 8009942:	4658      	mov	r0, fp
 8009944:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8009948:	f7f9 ff68 	bl	800381c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_return.setAction(buttonCallback);
 800994c:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 8009950:	f04f 38ff 	mov.w	r8, #4294967295
 8009954:	3308      	adds	r3, #8
 8009956:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800995a:	4659      	mov	r1, fp
 800995c:	4630      	mov	r0, r6
        colorPressed = col;
 800995e:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 8009962:	af04      	add	r7, sp, #16
 8009964:	f008 ffac 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 8009968:	22c2      	movs	r2, #194	; 0xc2
 800996a:	ee1a 0a90 	vmov	r0, s21
 800996e:	4629      	mov	r1, r5
 8009970:	f7f9 ff10 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8009974:	ee1a 1a90 	vmov	r1, s21
 8009978:	4638      	mov	r0, r7
        color = newColor;
 800997a:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 800997e:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8009982:	f00b fb2b 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009986:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800998a:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 800998e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8009992:	4b48      	ldr	r3, [pc, #288]	; (8009ab4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x368>)
 8009994:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_C7CD));
 8009996:	ee1a 0a90 	vmov	r0, s21
 800999a:	2313      	movs	r3, #19
 800999c:	a90a      	add	r1, sp, #40	; 0x28
 800999e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80099a2:	f00b fdb5 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80099a6:	ee1a 1a90 	vmov	r1, s21
 80099aa:	4630      	mov	r0, r6
 80099ac:	f008 ff88 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 80099b0:	22c2      	movs	r2, #194	; 0xc2
 80099b2:	4648      	mov	r0, r9
 80099b4:	21d9      	movs	r1, #217	; 0xd9
 80099b6:	f7f9 feed 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 80099ba:	4649      	mov	r1, r9
 80099bc:	4638      	mov	r0, r7
        color = newColor;
 80099be:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 80099c2:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 80099c6:	f00b fb09 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80099ca:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80099ce:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 80099d2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80099d6:	4b37      	ldr	r3, [pc, #220]	; (8009ab4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x368>)
 80099d8:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_85IX));
 80099da:	4648      	mov	r0, r9
 80099dc:	2312      	movs	r3, #18
 80099de:	a90a      	add	r1, sp, #40	; 0x28
 80099e0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80099e4:	f00b fd94 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80099e8:	4649      	mov	r1, r9
 80099ea:	4630      	mov	r0, r6
 80099ec:	f008 ff68 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 80099f0:	2255      	movs	r2, #85	; 0x55
 80099f2:	ee1b 0a10 	vmov	r0, s22
 80099f6:	2171      	movs	r1, #113	; 0x71
 80099f8:	f7f9 fecc 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 80099fc:	ee1b 1a10 	vmov	r1, s22
 8009a00:	4638      	mov	r0, r7
        color = newColor;
 8009a02:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 8009a06:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 8009a0a:	f00b fae7 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009a0e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009a12:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8009a16:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009a1a:	4b26      	ldr	r3, [pc, #152]	; (8009ab4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x368>)
 8009a1c:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XVJO));
 8009a1e:	ee1b 0a10 	vmov	r0, s22
 8009a22:	2314      	movs	r3, #20
 8009a24:	a90a      	add	r1, sp, #40	; 0x28
 8009a26:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009a2a:	f00b fd71 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009a2e:	ee1b 1a10 	vmov	r1, s22
 8009a32:	4630      	mov	r0, r6
 8009a34:	f008 ff44 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD3_Current.setPosition(0, 239, 240, 15);
 8009a38:	230f      	movs	r3, #15
 8009a3a:	22ef      	movs	r2, #239	; 0xef
 8009a3c:	ee1b 0a90 	vmov	r0, s23
 8009a40:	9300      	str	r3, [sp, #0]
 8009a42:	4629      	mov	r1, r5
 8009a44:	23f0      	movs	r3, #240	; 0xf0
 8009a46:	f7f9 feb2 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8009a4a:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 8009a4e:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 8009a52:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8009a56:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 8009a5a:	ee1b 1a90 	vmov	r1, s23
 8009a5e:	4638      	mov	r0, r7
 8009a60:	4798      	blx	r3
 8009a62:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009a66:	f8df b064 	ldr.w	fp, [pc, #100]	; 8009acc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x380>
 8009a6a:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8009a6e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009a72:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD3_CurrentBuffer, SMD3_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_HT0R).getText());
 8009a76:	f204 691c 	addw	r9, r4, #1564	; 0x61c
 8009a7a:	b92b      	cbnz	r3, 8009a88 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x33c>
 8009a7c:	4b0e      	ldr	r3, [pc, #56]	; (8009ab8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x36c>)
 8009a7e:	4a0f      	ldr	r2, [pc, #60]	; (8009abc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x370>)
 8009a80:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009a82:	480f      	ldr	r0, [pc, #60]	; (8009ac0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x374>)
 8009a84:	f024 f838 	bl	802daf8 <__assert_func>
 8009a88:	4b0e      	ldr	r3, [pc, #56]	; (8009ac4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x378>)
 8009a8a:	881b      	ldrh	r3, [r3, #0]
 8009a8c:	2b18      	cmp	r3, #24
 8009a8e:	d81f      	bhi.n	8009ad0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x384>
 8009a90:	4b0d      	ldr	r3, [pc, #52]	; (8009ac8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x37c>)
 8009a92:	4a0a      	ldr	r2, [pc, #40]	; (8009abc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x370>)
 8009a94:	2161      	movs	r1, #97	; 0x61
 8009a96:	e7f4      	b.n	8009a82 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x336>
 8009a98:	08030e4c 	.word	0x08030e4c
 8009a9c:	08031bec 	.word	0x08031bec
 8009aa0:	08031e38 	.word	0x08031e38
 8009aa4:	0802f734 	.word	0x0802f734
 8009aa8:	08031920 	.word	0x08031920
 8009aac:	08030e34 	.word	0x08030e34
 8009ab0:	08009735 	.word	0x08009735
 8009ab4:	0802f694 	.word	0x0802f694
 8009ab8:	0802f4e4 	.word	0x0802f4e4
 8009abc:	0802f5e9 	.word	0x0802f5e9
 8009ac0:	0802f561 	.word	0x0802f561
 8009ac4:	200138a8 	.word	0x200138a8
 8009ac8:	0802f5a8 	.word	0x0802f5a8
 8009acc:	200138a4 	.word	0x200138a4
        return texts->getText(typedTextId);
 8009ad0:	4bdc      	ldr	r3, [pc, #880]	; (8009e44 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6f8>)
 8009ad2:	2118      	movs	r1, #24
 8009ad4:	6818      	ldr	r0, [r3, #0]
 8009ad6:	f000 fe6f 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8009ada:	4adb      	ldr	r2, [pc, #876]	; (8009e48 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6fc>)
 8009adc:	4603      	mov	r3, r0
 8009ade:	210a      	movs	r1, #10
 8009ae0:	4648      	mov	r0, r9
 8009ae2:	f012 f973 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8009ae6:	4ad9      	ldr	r2, [pc, #868]	; (8009e4c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
        wc1 = value;
 8009ae8:	f8c4 9200 	str.w	r9, [r4, #512]	; 0x200
 8009aec:	2319      	movs	r3, #25
    SMD3_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6OVJ));
 8009aee:	ee1b 0a90 	vmov	r0, s23
 8009af2:	a90a      	add	r1, sp, #40	; 0x28
 8009af4:	920a      	str	r2, [sp, #40]	; 0x28
 8009af6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009afa:	f00b fd09 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009afe:	ee1b 1a90 	vmov	r1, s23
 8009b02:	4630      	mov	r0, r6
 8009b04:	f008 fedc 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD3_Frequency.setPosition(0, 224, 240, 15);
 8009b08:	210f      	movs	r1, #15
 8009b0a:	22e0      	movs	r2, #224	; 0xe0
 8009b0c:	ee1c 0a10 	vmov	r0, s24
 8009b10:	9100      	str	r1, [sp, #0]
 8009b12:	23f0      	movs	r3, #240	; 0xf0
 8009b14:	4629      	mov	r1, r5
 8009b16:	f7f9 fe4a 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8009b1a:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 8009b1e:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 8009b22:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8009b26:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 8009b2a:	ee1c 1a10 	vmov	r1, s24
 8009b2e:	4638      	mov	r0, r7
 8009b30:	4798      	blx	r3
 8009b32:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009b36:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8009b3a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009b3e:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD3_FrequencyBuffer, SMD3_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YT2E).getText());
 8009b42:	f504 69c6 	add.w	r9, r4, #1584	; 0x630
 8009b46:	2b00      	cmp	r3, #0
 8009b48:	d098      	beq.n	8009a7c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x330>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009b4a:	49c1      	ldr	r1, [pc, #772]	; (8009e50 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x704>)
 8009b4c:	880b      	ldrh	r3, [r1, #0]
 8009b4e:	2b16      	cmp	r3, #22
 8009b50:	d99e      	bls.n	8009a90 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x344>
        return texts->getText(typedTextId);
 8009b52:	4bbc      	ldr	r3, [pc, #752]	; (8009e44 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6f8>)
 8009b54:	2116      	movs	r1, #22
 8009b56:	6818      	ldr	r0, [r3, #0]
 8009b58:	f000 fe2e 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8009b5c:	4aba      	ldr	r2, [pc, #744]	; (8009e48 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6fc>)
 8009b5e:	4603      	mov	r3, r0
 8009b60:	210a      	movs	r1, #10
 8009b62:	4648      	mov	r0, r9
 8009b64:	f012 f932 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    SMD3_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W5I5));
 8009b68:	a80a      	add	r0, sp, #40	; 0x28
        : typedTextId(id)
 8009b6a:	4ab8      	ldr	r2, [pc, #736]	; (8009e4c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
 8009b6c:	f8c4 924c 	str.w	r9, [r4, #588]	; 0x24c
 8009b70:	2317      	movs	r3, #23
 8009b72:	4601      	mov	r1, r0
 8009b74:	ee1c 0a10 	vmov	r0, s24
 8009b78:	920a      	str	r2, [sp, #40]	; 0x28
 8009b7a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009b7e:	f00b fcc7 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009b82:	ee1c 1a10 	vmov	r1, s24
 8009b86:	4630      	mov	r0, r6
 8009b88:	f008 fe9a 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD3_Distance.setPosition(0, 209, 240, 15);
 8009b8c:	200f      	movs	r0, #15
 8009b8e:	22d1      	movs	r2, #209	; 0xd1
 8009b90:	9000      	str	r0, [sp, #0]
 8009b92:	23f0      	movs	r3, #240	; 0xf0
 8009b94:	ee1c 0a90 	vmov	r0, s25
 8009b98:	4629      	mov	r1, r5
 8009b9a:	f7f9 fe08 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8009b9e:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 8009ba2:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 8009ba6:	4638      	mov	r0, r7
 8009ba8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8009bac:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 8009bb0:	ee1c 1a90 	vmov	r1, s25
 8009bb4:	4798      	blx	r3
 8009bb6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009bba:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 8009bbe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009bc2:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD3_DistanceBuffer, SMD3_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_EK4L).getText());
 8009bc6:	f204 6744 	addw	r7, r4, #1604	; 0x644
 8009bca:	2b00      	cmp	r3, #0
 8009bcc:	f43f af56 	beq.w	8009a7c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x330>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009bd0:	499f      	ldr	r1, [pc, #636]	; (8009e50 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x704>)
 8009bd2:	880b      	ldrh	r3, [r1, #0]
 8009bd4:	2b15      	cmp	r3, #21
 8009bd6:	f67f af5b 	bls.w	8009a90 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x344>
        return texts->getText(typedTextId);
 8009bda:	4b9a      	ldr	r3, [pc, #616]	; (8009e44 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6f8>)
 8009bdc:	2115      	movs	r1, #21
 8009bde:	6818      	ldr	r0, [r3, #0]
 8009be0:	f000 fdea 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8009be4:	4a98      	ldr	r2, [pc, #608]	; (8009e48 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6fc>)
 8009be6:	4603      	mov	r3, r0
 8009be8:	210a      	movs	r1, #10
 8009bea:	4638      	mov	r0, r7
 8009bec:	f012 f8ee 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8009bf0:	4a96      	ldr	r2, [pc, #600]	; (8009e4c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
 8009bf2:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 8009bf6:	2336      	movs	r3, #54	; 0x36
    SMD3_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 8009bf8:	ee1c 0a90 	vmov	r0, s25
 8009bfc:	a90a      	add	r1, sp, #40	; 0x28
 8009bfe:	920a      	str	r2, [sp, #40]	; 0x28
 8009c00:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009c04:	f00b fc84 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009c08:	ee1c 1a90 	vmov	r1, s25
 8009c0c:	4630      	mov	r0, r6
 8009c0e:	f008 fe57 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009c12:	2304      	movs	r3, #4
    SMD3_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8009c14:	a90a      	add	r1, sp, #40	; 0x28
 8009c16:	4650      	mov	r0, sl
 8009c18:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009c1c:	f008 fde2 	bl	80127e4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD3_Gauge.setPosition(28, 103, 184, 106);
 8009c20:	236a      	movs	r3, #106	; 0x6a
 8009c22:	9300      	str	r3, [sp, #0]
 8009c24:	2267      	movs	r2, #103	; 0x67
 8009c26:	23b8      	movs	r3, #184	; 0xb8
 8009c28:	211c      	movs	r1, #28
 8009c2a:	4650      	mov	r0, sl
 8009c2c:	f7f9 fdbf 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD3_Gauge.setCenter(92, 92);
 8009c30:	225c      	movs	r2, #92	; 0x5c
 8009c32:	4611      	mov	r1, r2
 8009c34:	4650      	mov	r0, sl
 8009c36:	f00b ff8a 	bl	8015b4e <_ZN8touchgfx5Gauge9setCenterEii>
    SMD3_Gauge.setStartEndAngle(-90, 90);
 8009c3a:	225a      	movs	r2, #90	; 0x5a
 8009c3c:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8009c40:	4650      	mov	r0, sl
 8009c42:	f00c f809 	bl	8015c58 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD3_Gauge.setRange(-90, 90);
 8009c46:	462b      	mov	r3, r5
 8009c48:	225a      	movs	r2, #90	; 0x5a
 8009c4a:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8009c4e:	4650      	mov	r0, sl
 8009c50:	9500      	str	r5, [sp, #0]
 8009c52:	f008 fc74 	bl	801253e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD3_Gauge.setValue(0);
 8009c56:	4629      	mov	r1, r5
 8009c58:	4650      	mov	r0, sl
 8009c5a:	f00b ffa7 	bl	8015bac <_ZN8touchgfx5Gauge8setValueEi>
    SMD3_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8009c5e:	2335      	movs	r3, #53	; 0x35
 8009c60:	2208      	movs	r2, #8
 8009c62:	2105      	movs	r1, #5
 8009c64:	4650      	mov	r0, sl
 8009c66:	f00b ff5d 	bl	8015b24 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD3_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8009c6a:	2101      	movs	r1, #1
 8009c6c:	4650      	mov	r0, sl
 8009c6e:	f00b fefb 	bl	8015a68 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD3_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8009c72:	2101      	movs	r1, #1
 8009c74:	4650      	mov	r0, sl
 8009c76:	f00b fefa 	bl	8015a6e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8009c7a:	4651      	mov	r1, sl
 8009c7c:	4630      	mov	r0, r6
 8009c7e:	f008 fe1f 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8009c82:	230a      	movs	r3, #10
 8009c84:	ee18 0a10 	vmov	r0, s16
 8009c88:	9300      	str	r3, [sp, #0]
 8009c8a:	224b      	movs	r2, #75	; 0x4b
 8009c8c:	23f0      	movs	r3, #240	; 0xf0
 8009c8e:	4629      	mov	r1, r5
 8009c90:	f7f9 fd8d 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8009c94:	9b02      	ldr	r3, [sp, #8]
 8009c96:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009c9a:	22a0      	movs	r2, #160	; 0xa0
 8009c9c:	4611      	mov	r1, r2
 8009c9e:	ee18 0a10 	vmov	r0, s16
 8009ca2:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8009ca6:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 8009caa:	f00a ffeb 	bl	8014c84 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009cae:	ee18 0a10 	vmov	r0, s16
 8009cb2:	22a0      	movs	r2, #160	; 0xa0
 8009cb4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8009cb8:	f00a ffef 	bl	8014c9a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8009cbc:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8009cc0:	2b20      	cmp	r3, #32
 8009cc2:	d006      	beq.n	8009cd2 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x586>
        lineWidthQ5 = widthQ5;
 8009cc4:	2320      	movs	r3, #32
        updateCachedShape();
 8009cc6:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 8009cca:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8009cce:	f00a fee3 	bl	8014a98 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8009cd2:	ee18 0a10 	vmov	r0, s16
 8009cd6:	2101      	movs	r1, #1
 8009cd8:	f00a ffea 	bl	8014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8009cdc:	ee18 1a10 	vmov	r1, s16
 8009ce0:	4630      	mov	r0, r6
 8009ce2:	f008 fded 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8009ce6:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(31, 60);
 8009cea:	223c      	movs	r2, #60	; 0x3c
 8009cec:	ee19 0a10 	vmov	r0, s18
 8009cf0:	211f      	movs	r1, #31
        linespace = space;
 8009cf2:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 8009cf6:	ad04      	add	r5, sp, #16
 8009cf8:	f7f9 fd4c 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8009cfc:	ee19 1a10 	vmov	r1, s18
 8009d00:	4628      	mov	r0, r5
        color = newColor;
 8009d02:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 8009d06:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8009d0a:	f00b f967 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009d0e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009d12:	ee19 3a10 	vmov	r3, s18
 8009d16:	333c      	adds	r3, #60	; 0x3c
 8009d18:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009d1c:	4f4b      	ldr	r7, [pc, #300]	; (8009e4c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
 8009d1e:	970a      	str	r7, [sp, #40]	; 0x28
 8009d20:	2350      	movs	r3, #80	; 0x50
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8009d22:	ee19 0a10 	vmov	r0, s18
 8009d26:	a90a      	add	r1, sp, #40	; 0x28
 8009d28:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009d2c:	f00b fbf0 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009d30:	ee19 1a10 	vmov	r1, s18
 8009d34:	4630      	mov	r0, r6
 8009d36:	f008 fdc3 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8009d3a:	230a      	movs	r3, #10
 8009d3c:	ee18 0a90 	vmov	r0, s17
 8009d40:	9300      	str	r3, [sp, #0]
 8009d42:	2232      	movs	r2, #50	; 0x32
 8009d44:	23f0      	movs	r3, #240	; 0xf0
 8009d46:	4649      	mov	r1, r9
 8009d48:	f7f9 fd31 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 8009d4c:	9b03      	ldr	r3, [sp, #12]
 8009d4e:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009d52:	22a0      	movs	r2, #160	; 0xa0
 8009d54:	4611      	mov	r1, r2
 8009d56:	ee18 0a90 	vmov	r0, s17
 8009d5a:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 8009d5e:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 8009d62:	f00a ff8f 	bl	8014c84 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009d66:	ee18 0a90 	vmov	r0, s17
 8009d6a:	22a0      	movs	r2, #160	; 0xa0
 8009d6c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8009d70:	f00a ff93 	bl	8014c9a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8009d74:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 8009d78:	2b20      	cmp	r3, #32
 8009d7a:	d006      	beq.n	8009d8a <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x63e>
        lineWidthQ5 = widthQ5;
 8009d7c:	2320      	movs	r3, #32
        updateCachedShape();
 8009d7e:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 8009d82:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 8009d86:	f00a fe87 	bl	8014a98 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8009d8a:	ee18 0a90 	vmov	r0, s17
 8009d8e:	2101      	movs	r1, #1
 8009d90:	f00a ff8e 	bl	8014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8009d94:	ee18 1a90 	vmov	r1, s17
 8009d98:	4630      	mov	r0, r6
 8009d9a:	f008 fd91 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8009d9e:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 8009da2:	ee19 0a90 	vmov	r0, s19
 8009da6:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8009da8:	f04f 0800 	mov.w	r8, #0
 8009dac:	2145      	movs	r1, #69	; 0x45
 8009dae:	f7f9 fcf1 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8009db2:	ee19 1a90 	vmov	r1, s19
 8009db6:	4628      	mov	r0, r5
        color = newColor;
 8009db8:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 8009dbc:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 8009dc0:	f00b f90c 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009dc4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009dc8:	ee19 3a90 	vmov	r3, s19
 8009dcc:	333c      	adds	r3, #60	; 0x3c
 8009dce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009dd2:	235b      	movs	r3, #91	; 0x5b
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8009dd4:	ee19 0a90 	vmov	r0, s19
 8009dd8:	a90a      	add	r1, sp, #40	; 0x28
 8009dda:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009dde:	970a      	str	r7, [sp, #40]	; 0x28
 8009de0:	f00b fb96 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009de4:	ee19 1a90 	vmov	r1, s19
 8009de8:	4630      	mov	r0, r6
 8009dea:	f008 fd69 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8009dee:	ee1a 0a10 	vmov	r0, s20
 8009df2:	220c      	movs	r2, #12
 8009df4:	2136      	movs	r1, #54	; 0x36
 8009df6:	f7f9 fccd 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8009dfa:	ee1a 1a10 	vmov	r1, s20
 8009dfe:	4628      	mov	r0, r5
        color = newColor;
 8009e00:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 8009e04:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 8009e08:	f00b f8e8 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009e0c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009e10:	ee1a 3a10 	vmov	r3, s20
 8009e14:	333c      	adds	r3, #60	; 0x3c
 8009e16:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009e1a:	235a      	movs	r3, #90	; 0x5a
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8009e1c:	ee1a 0a10 	vmov	r0, s20
 8009e20:	a90a      	add	r1, sp, #40	; 0x28
 8009e22:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009e26:	970a      	str	r7, [sp, #40]	; 0x28
 8009e28:	f00b fb72 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009e2c:	4630      	mov	r0, r6
 8009e2e:	ee1a 1a10 	vmov	r1, s20
 8009e32:	f008 fd45 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8009e36:	4620      	mov	r0, r4
 8009e38:	b00d      	add	sp, #52	; 0x34
 8009e3a:	ecbd 8b0a 	vpop	{d8-d12}
 8009e3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009e42:	bf00      	nop
 8009e44:	200138b0 	.word	0x200138b0
 8009e48:	0802f621 	.word	0x0802f621
 8009e4c:	0802f694 	.word	0x0802f694
 8009e50:	200138a8 	.word	0x200138a8

08009e54 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8009e54:	4770      	bx	lr

08009e56 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8009e56:	4770      	bx	lr

08009e58 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8009e58:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8009e5a:	68c2      	ldr	r2, [r0, #12]
 8009e5c:	6844      	ldr	r4, [r0, #4]
 8009e5e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8009e60:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8009e62:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009e66:	07d2      	lsls	r2, r2, #31
 8009e68:	bf48      	it	mi
 8009e6a:	5962      	ldrmi	r2, [r4, r5]
 8009e6c:	689b      	ldr	r3, [r3, #8]
    }
 8009e6e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8009e70:	bf48      	it	mi
 8009e72:	58d3      	ldrmi	r3, [r2, r3]
 8009e74:	4718      	bx	r3

08009e76 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8009e76:	6843      	ldr	r3, [r0, #4]
 8009e78:	b12b      	cbz	r3, 8009e86 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8009e7a:	6883      	ldr	r3, [r0, #8]
 8009e7c:	b92b      	cbnz	r3, 8009e8a <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8009e7e:	68c0      	ldr	r0, [r0, #12]
 8009e80:	f000 0001 	and.w	r0, r0, #1
 8009e84:	4770      	bx	lr
 8009e86:	4618      	mov	r0, r3
 8009e88:	4770      	bx	lr
 8009e8a:	2001      	movs	r0, #1
    }
 8009e8c:	4770      	bx	lr

08009e8e <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8009e8e:	b510      	push	{r4, lr}
 8009e90:	2110      	movs	r1, #16
 8009e92:	4604      	mov	r4, r0
 8009e94:	f022 ff49 	bl	802cd2a <_ZdlPvj>
 8009e98:	4620      	mov	r0, r4
 8009e9a:	bd10      	pop	{r4, pc}

08009e9c <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8009e9c:	b510      	push	{r4, lr}
 8009e9e:	4b03      	ldr	r3, [pc, #12]	; (8009eac <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8009ea0:	6003      	str	r3, [r0, #0]
 8009ea2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8009ea4:	f00d f8e2 	bl	801706c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8009ea8:	4620      	mov	r0, r4
 8009eaa:	bd10      	pop	{r4, pc}
 8009eac:	08030e98 	.word	0x08030e98

08009eb0 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8009eb0:	b507      	push	{r0, r1, r2, lr}
 8009eb2:	4b07      	ldr	r3, [pc, #28]	; (8009ed0 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8009eb4:	6003      	str	r3, [r0, #0]
 8009eb6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8009eb8:	f00d f8d8 	bl	801706c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8009ebc:	9801      	ldr	r0, [sp, #4]
 8009ebe:	f241 117c 	movw	r1, #4476	; 0x117c
 8009ec2:	f022 ff32 	bl	802cd2a <_ZdlPvj>
 8009ec6:	9801      	ldr	r0, [sp, #4]
 8009ec8:	b003      	add	sp, #12
 8009eca:	f85d fb04 	ldr.w	pc, [sp], #4
 8009ece:	bf00      	nop
 8009ed0:	08030e98 	.word	0x08030e98

08009ed4 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_Return)
 8009ed4:	30e4      	adds	r0, #228	; 0xe4
 8009ed6:	4288      	cmp	r0, r1
{
 8009ed8:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_Return)
 8009eda:	d105      	bne.n	8009ee8 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8009edc:	f00e fdc8 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8009ee0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8009ee4:	f7fb bbdc 	b.w	80056a0 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8009ee8:	bd08      	pop	{r3, pc}
	...

08009eec <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8009eec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009ef0:	ed2d 8b06 	vpush	{d8-d10}
 8009ef4:	4604      	mov	r4, r0
 8009ef6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8009ef8:	46a3      	mov	fp, r4
 8009efa:	2500      	movs	r5, #0
 8009efc:	f010 fa38 	bl	801a370 <_ZN8touchgfx6ScreenC1Ev>
 8009f00:	4b6e      	ldr	r3, [pc, #440]	; (800a0bc <_ZN20Project_InfoViewBaseC1Ev+0x1d0>)
 8009f02:	63e5      	str	r5, [r4, #60]	; 0x3c
 8009f04:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8009f08:	2226      	movs	r2, #38	; 0x26
 8009f0a:	4629      	mov	r1, r5
 8009f0c:	4658      	mov	r0, fp
 8009f0e:	f023 fff8 	bl	802df02 <memset>
 8009f12:	4658      	mov	r0, fp
 8009f14:	f7f9 fc70 	bl	80037f8 <_ZN8touchgfx6WidgetC1Ev>
 8009f18:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8009f1c:	26ff      	movs	r6, #255	; 0xff
 8009f1e:	4b68      	ldr	r3, [pc, #416]	; (800a0c0 <_ZN20Project_InfoViewBaseC1Ev+0x1d4>)
 8009f20:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8009f22:	2226      	movs	r2, #38	; 0x26
 8009f24:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009f28:	4629      	mov	r1, r5
 8009f2a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8009f2e:	4650      	mov	r0, sl
 8009f30:	66a5      	str	r5, [r4, #104]	; 0x68
 8009f32:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009f36:	f023 ffe4 	bl	802df02 <memset>
 8009f3a:	4650      	mov	r0, sl
 8009f3c:	f7f9 fc5c 	bl	80037f8 <_ZN8touchgfx6WidgetC1Ev>
 8009f40:	4b60      	ldr	r3, [pc, #384]	; (800a0c4 <_ZN20Project_InfoViewBaseC1Ev+0x1d8>)
 8009f42:	66e3      	str	r3, [r4, #108]	; 0x6c
 8009f44:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8009f48:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8009f4c:	a90a      	add	r1, sp, #40	; 0x28
 8009f4e:	4650      	mov	r0, sl
 8009f50:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8009f54:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8009f58:	f00c f88b 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8009f5c:	4648      	mov	r0, r9
 8009f5e:	f7f9 fcaf 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8009f62:	4b59      	ldr	r3, [pc, #356]	; (800a0c8 <_ZN20Project_InfoViewBaseC1Ev+0x1dc>)
 8009f64:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8009f68:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8009f6c:	4618      	mov	r0, r3
 8009f6e:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8009f72:	ee09 3a90 	vmov	s19, r3
 8009f76:	f00c f9b3 	bl	80162e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8009f7a:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8009f7e:	4618      	mov	r0, r3
 8009f80:	f504 78ba 	add.w	r8, r4, #372	; 0x174
 8009f84:	ee0a 3a10 	vmov	s20, r3
 8009f88:	f7f9 fc9a 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8009f8c:	4640      	mov	r0, r8
 8009f8e:	f00a fd63 	bl	8014a58 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8009f92:	4e4e      	ldr	r6, [pc, #312]	; (800a0cc <_ZN20Project_InfoViewBaseC1Ev+0x1e0>)
 8009f94:	f504 73f2 	add.w	r3, r4, #484	; 0x1e4
 8009f98:	4618      	mov	r0, r3
 8009f9a:	9302      	str	r3, [sp, #8]
 8009f9c:	f7f9 fa30 	bl	8003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8009fa0:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8009fa4:	f8c4 31ec 	str.w	r3, [r4, #492]	; 0x1ec
 8009fa8:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8009fac:	4618      	mov	r0, r3
 8009fae:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 8009fb2:	f8c4 51f0 	str.w	r5, [r4, #496]	; 0x1f0
 8009fb6:	f504 7710 	add.w	r7, r4, #576	; 0x240
 8009fba:	ee08 3a10 	vmov	s16, r3
 8009fbe:	f7f9 fc7f 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8009fc2:	4638      	mov	r0, r7
 8009fc4:	f00a fd48 	bl	8014a58 <_ZN8touchgfx4LineC1Ev>
 8009fc8:	f504 732c 	add.w	r3, r4, #688	; 0x2b0
 8009fcc:	4618      	mov	r0, r3
 8009fce:	9303      	str	r3, [sp, #12]
 8009fd0:	f7f9 fa16 	bl	8003400 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8009fd4:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8009fd8:	f8c4 32b8 	str.w	r3, [r4, #696]	; 0x2b8
 8009fdc:	f504 7331 	add.w	r3, r4, #708	; 0x2c4
 8009fe0:	f8c4 62b0 	str.w	r6, [r4, #688]	; 0x2b0
 8009fe4:	4618      	mov	r0, r3
 8009fe6:	f8c4 52bc 	str.w	r5, [r4, #700]	; 0x2bc
 8009fea:	ee08 3a90 	vmov	s17, r3
 8009fee:	f7f9 fc67 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
 8009ff2:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 8009ff6:	4618      	mov	r0, r3
 8009ff8:	ee09 3a10 	vmov	s18, r3
 8009ffc:	f7f9 fc60 	bl	80038c0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800a000:	4a33      	ldr	r2, [pc, #204]	; (800a0d0 <_ZN20Project_InfoViewBaseC1Ev+0x1e4>)
 800a002:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800a006:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 800a00a:	4a32      	ldr	r2, [pc, #200]	; (800a0d4 <_ZN20Project_InfoViewBaseC1Ev+0x1e8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800a00c:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800a010:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 800a014:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 800a018:	f00d f81e 	bl	8017058 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800a01c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800a020:	462a      	mov	r2, r5
 800a022:	4658      	mov	r0, fp
 800a024:	9300      	str	r3, [sp, #0]
 800a026:	4629      	mov	r1, r5
 800a028:	23f0      	movs	r3, #240	; 0xf0
 800a02a:	f7f9 fbc0 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 800a02e:	1d26      	adds	r6, r4, #4
        color = newColor;
 800a030:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800a034:	66a3      	str	r3, [r4, #104]	; 0x68
 800a036:	4659      	mov	r1, fp
 800a038:	4630      	mov	r0, r6
 800a03a:	f008 fc41 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 800a03e:	462a      	mov	r2, r5
 800a040:	4650      	mov	r0, sl
 800a042:	4629      	mov	r1, r5
 800a044:	f7f9 fba6 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 800a048:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800a04a:	4650      	mov	r0, sl
 800a04c:	a90a      	add	r1, sp, #40	; 0x28
 800a04e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800a052:	f00c f80e 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a056:	4651      	mov	r1, sl
 800a058:	4630      	mov	r0, r6
 800a05a:	f008 fc31 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 800a05e:	f44f 729a 	mov.w	r2, #308	; 0x134
 800a062:	2156      	movs	r1, #86	; 0x56
 800a064:	4648      	mov	r0, r9
 800a066:	f7f9 fb95 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800a06a:	f04f 33ff 	mov.w	r3, #4294967295
 800a06e:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800a072:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800a076:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800a07a:	f10d 0b10 	add.w	fp, sp, #16
 800a07e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800a082:	4649      	mov	r1, r9
 800a084:	4658      	mov	r0, fp
 800a086:	4798      	blx	r3
 800a088:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800a08c:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800a090:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800a094:	4b10      	ldr	r3, [pc, #64]	; (800a0d8 <_ZN20Project_InfoViewBaseC1Ev+0x1ec>)
 800a096:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 800a098:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 800a09c:	b92b      	cbnz	r3, 800a0aa <_ZN20Project_InfoViewBaseC1Ev+0x1be>
 800a09e:	4b0f      	ldr	r3, [pc, #60]	; (800a0dc <_ZN20Project_InfoViewBaseC1Ev+0x1f0>)
 800a0a0:	4a0f      	ldr	r2, [pc, #60]	; (800a0e0 <_ZN20Project_InfoViewBaseC1Ev+0x1f4>)
 800a0a2:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800a0a4:	480f      	ldr	r0, [pc, #60]	; (800a0e4 <_ZN20Project_InfoViewBaseC1Ev+0x1f8>)
 800a0a6:	f023 fd27 	bl	802daf8 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800a0aa:	4b0f      	ldr	r3, [pc, #60]	; (800a0e8 <_ZN20Project_InfoViewBaseC1Ev+0x1fc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800a0ac:	881b      	ldrh	r3, [r3, #0]
 800a0ae:	2b3e      	cmp	r3, #62	; 0x3e
 800a0b0:	d81e      	bhi.n	800a0f0 <_ZN20Project_InfoViewBaseC1Ev+0x204>
 800a0b2:	4b0e      	ldr	r3, [pc, #56]	; (800a0ec <_ZN20Project_InfoViewBaseC1Ev+0x200>)
 800a0b4:	4a0a      	ldr	r2, [pc, #40]	; (800a0e0 <_ZN20Project_InfoViewBaseC1Ev+0x1f4>)
 800a0b6:	2161      	movs	r1, #97	; 0x61
 800a0b8:	e7f4      	b.n	800a0a4 <_ZN20Project_InfoViewBaseC1Ev+0x1b8>
 800a0ba:	bf00      	nop
 800a0bc:	08030e98 	.word	0x08030e98
 800a0c0:	08031bec 	.word	0x08031bec
 800a0c4:	08031e38 	.word	0x08031e38
 800a0c8:	0802f734 	.word	0x0802f734
 800a0cc:	08031920 	.word	0x08031920
 800a0d0:	08030e80 	.word	0x08030e80
 800a0d4:	08009ed5 	.word	0x08009ed5
 800a0d8:	200138a4 	.word	0x200138a4
 800a0dc:	0802f4e4 	.word	0x0802f4e4
 800a0e0:	0802f5e9 	.word	0x0802f5e9
 800a0e4:	0802f561 	.word	0x0802f561
 800a0e8:	200138a8 	.word	0x200138a8
 800a0ec:	0802f5a8 	.word	0x0802f5a8
        return texts->getText(typedTextId);
 800a0f0:	4ba0      	ldr	r3, [pc, #640]	; (800a374 <_ZN20Project_InfoViewBaseC1Ev+0x488>)
 800a0f2:	213e      	movs	r1, #62	; 0x3e
 800a0f4:	6818      	ldr	r0, [r3, #0]
 800a0f6:	f000 fb5f 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 800a0fa:	4a9f      	ldr	r2, [pc, #636]	; (800a378 <_ZN20Project_InfoViewBaseC1Ev+0x48c>)
 800a0fc:	4603      	mov	r3, r0
 800a0fe:	2104      	movs	r1, #4
 800a100:	4650      	mov	r0, sl
 800a102:	f011 fe63 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 800a106:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea_auto_off.resizeToCurrentText();
 800a10a:	4648      	mov	r0, r9
 800a10c:	f00b f9e0 	bl	80154d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800a110:	f8df a268 	ldr.w	sl, [pc, #616]	; 800a37c <_ZN20Project_InfoViewBaseC1Ev+0x490>
 800a114:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a118:	233f      	movs	r3, #63	; 0x3f
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 800a11a:	a90a      	add	r1, sp, #40	; 0x28
 800a11c:	4648      	mov	r0, r9
 800a11e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a122:	f00b f9f5 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a126:	4649      	mov	r1, r9
 800a128:	4630      	mov	r0, r6
 800a12a:	f008 fbc9 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 800a12e:	ee19 0a90 	vmov	r0, s19
 800a132:	22f0      	movs	r2, #240	; 0xf0
 800a134:	2121      	movs	r1, #33	; 0x21
 800a136:	f7f9 fb2d 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 800a13a:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800a13c:	aa0a      	add	r2, sp, #40	; 0x28
 800a13e:	a909      	add	r1, sp, #36	; 0x24
 800a140:	ee19 0a90 	vmov	r0, s19
 800a144:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800a148:	2302      	movs	r3, #2
 800a14a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800a14e:	f00b fd9a 	bl	8015c86 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800a152:	2364      	movs	r3, #100	; 0x64
        updateTextPosition();
 800a154:	ee19 0a90 	vmov	r0, s19
 800a158:	f8a4 311c 	strh.w	r3, [r4, #284]	; 0x11c
 800a15c:	f7f9 fb5e 	bl	800381c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 800a160:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 800a164:	e9c4 3348 	strd	r3, r3, [r4, #288]	; 0x120
    buttonWithLabel_Return.setAction(buttonCallback);
 800a168:	f504 538b 	add.w	r3, r4, #4448	; 0x1160
 800a16c:	330c      	adds	r3, #12
 800a16e:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 800a172:	ee19 1a90 	vmov	r1, s19
 800a176:	4630      	mov	r0, r6
 800a178:	f008 fba2 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_Info.setXY(7, 91);
 800a17c:	225b      	movs	r2, #91	; 0x5b
 800a17e:	ee1a 0a10 	vmov	r0, s20
 800a182:	2107      	movs	r1, #7
 800a184:	f7f9 fb06 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800a188:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800a18c:	ee1a 1a10 	vmov	r1, s20
        color = newColor;
 800a190:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 800a194:	4658      	mov	r0, fp
        linespace = space;
 800a196:	f8a4 5160 	strh.w	r5, [r4, #352]	; 0x160
        boundingArea = calculateBoundingArea();
 800a19a:	f00a ff1f 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a19e:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800a1a2:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 800a1a6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800a1aa:	2365      	movs	r3, #101	; 0x65
    textArea_Info.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 800a1ac:	ee1a 0a10 	vmov	r0, s20
 800a1b0:	a90a      	add	r1, sp, #40	; 0x28
 800a1b2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a1b6:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a1ba:	f00b f9a9 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a1be:	ee1a 1a10 	vmov	r1, s20
 800a1c2:	4630      	mov	r0, r6
 800a1c4:	f008 fb7c 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 800a1c8:	230a      	movs	r3, #10
 800a1ca:	9300      	str	r3, [sp, #0]
 800a1cc:	224b      	movs	r2, #75	; 0x4b
 800a1ce:	23f0      	movs	r3, #240	; 0xf0
 800a1d0:	4629      	mov	r1, r5
 800a1d2:	4640      	mov	r0, r8
 800a1d4:	f7f9 faeb 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 800a1d8:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800a1dc:	22a0      	movs	r2, #160	; 0xa0
 800a1de:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
        color565 = LCD16bpp::getNativeColor(painterColor);
 800a1e2:	f8a4 31f4 	strh.w	r3, [r4, #500]	; 0x1f4
 800a1e6:	9b02      	ldr	r3, [sp, #8]
 800a1e8:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 800a1ec:	4611      	mov	r1, r2
 800a1ee:	4640      	mov	r0, r8
 800a1f0:	f00a fd48 	bl	8014c84 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800a1f4:	22a0      	movs	r2, #160	; 0xa0
 800a1f6:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800a1fa:	4640      	mov	r0, r8
 800a1fc:	f00a fd4d 	bl	8014c9a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800a200:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
 800a204:	2b20      	cmp	r3, #32
 800a206:	d005      	beq.n	800a214 <_ZN20Project_InfoViewBaseC1Ev+0x328>
        lineWidthQ5 = widthQ5;
 800a208:	2320      	movs	r3, #32
 800a20a:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
        updateCachedShape();
 800a20e:	4640      	mov	r0, r8
 800a210:	f00a fc42 	bl	8014a98 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800a214:	4640      	mov	r0, r8
 800a216:	2101      	movs	r1, #1
 800a218:	f00a fd4a 	bl	8014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800a21c:	4641      	mov	r1, r8
 800a21e:	4630      	mov	r0, r6
 800a220:	f008 fb4e 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800a224:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(70, 60);
 800a228:	223c      	movs	r2, #60	; 0x3c
        linespace = space;
 800a22a:	f04f 0900 	mov.w	r9, #0
 800a22e:	ee18 0a10 	vmov	r0, s16
 800a232:	2146      	movs	r1, #70	; 0x46
        boundingArea = calculateBoundingArea();
 800a234:	ad04      	add	r5, sp, #16
 800a236:	f7f9 faad 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 800a23a:	ee18 1a10 	vmov	r1, s16
 800a23e:	4628      	mov	r0, r5
        color = newColor;
 800a240:	f8c4 8228 	str.w	r8, [r4, #552]	; 0x228
        linespace = space;
 800a244:	f8a4 922c 	strh.w	r9, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800a248:	f00a fec8 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a24c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800a250:	ee18 3a10 	vmov	r3, s16
 800a254:	333c      	adds	r3, #60	; 0x3c
 800a256:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BYJD));
 800a25a:	ee18 0a10 	vmov	r0, s16
 800a25e:	a90a      	add	r1, sp, #40	; 0x28
 800a260:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a264:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 800a268:	f00b f952 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a26c:	ee18 1a10 	vmov	r1, s16
 800a270:	4630      	mov	r0, r6
 800a272:	f008 fb25 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800a276:	230a      	movs	r3, #10
 800a278:	9300      	str	r3, [sp, #0]
 800a27a:	2232      	movs	r2, #50	; 0x32
 800a27c:	23f0      	movs	r3, #240	; 0xf0
 800a27e:	4649      	mov	r1, r9
 800a280:	4638      	mov	r0, r7
 800a282:	f7f9 fa94 	bl	80037ae <_ZN8touchgfx8Drawable11setPositionEssss>
 800a286:	9b03      	ldr	r3, [sp, #12]
 800a288:	f8c4 3268 	str.w	r3, [r4, #616]	; 0x268
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800a28c:	22a0      	movs	r2, #160	; 0xa0
 800a28e:	4611      	mov	r1, r2
 800a290:	4638      	mov	r0, r7
 800a292:	f8c4 82bc 	str.w	r8, [r4, #700]	; 0x2bc
 800a296:	f8a4 82c0 	strh.w	r8, [r4, #704]	; 0x2c0
 800a29a:	f00a fcf3 	bl	8014c84 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800a29e:	22a0      	movs	r2, #160	; 0xa0
 800a2a0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800a2a4:	4638      	mov	r0, r7
 800a2a6:	f00a fcf8 	bl	8014c9a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800a2aa:	f8d4 327c 	ldr.w	r3, [r4, #636]	; 0x27c
 800a2ae:	2b20      	cmp	r3, #32
 800a2b0:	d005      	beq.n	800a2be <_ZN20Project_InfoViewBaseC1Ev+0x3d2>
        lineWidthQ5 = widthQ5;
 800a2b2:	2320      	movs	r3, #32
 800a2b4:	f8c4 327c 	str.w	r3, [r4, #636]	; 0x27c
        updateCachedShape();
 800a2b8:	4638      	mov	r0, r7
 800a2ba:	f00a fbed 	bl	8014a98 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800a2be:	4638      	mov	r0, r7
 800a2c0:	2101      	movs	r1, #1
 800a2c2:	f00a fcf5 	bl	8014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800a2c6:	4639      	mov	r1, r7
 800a2c8:	4630      	mov	r0, r6
 800a2ca:	f008 faf9 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800a2ce:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 800a2d2:	ee18 0a90 	vmov	r0, s17
 800a2d6:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800a2d8:	2700      	movs	r7, #0
 800a2da:	2145      	movs	r1, #69	; 0x45
 800a2dc:	f7f9 fa5a 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800a2e0:	ee18 1a90 	vmov	r1, s17
 800a2e4:	4628      	mov	r0, r5
        color = newColor;
 800a2e6:	f8c4 82f4 	str.w	r8, [r4, #756]	; 0x2f4
        linespace = space;
 800a2ea:	f8a4 72f8 	strh.w	r7, [r4, #760]	; 0x2f8
        boundingArea = calculateBoundingArea();
 800a2ee:	f00a fe75 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a2f2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800a2f6:	ee18 3a90 	vmov	r3, s17
 800a2fa:	333c      	adds	r3, #60	; 0x3c
 800a2fc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800a300:	2367      	movs	r3, #103	; 0x67
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 800a302:	ee18 0a90 	vmov	r0, s17
 800a306:	a90a      	add	r1, sp, #40	; 0x28
 800a308:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a30c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a310:	f00b f8fe 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a314:	ee18 1a90 	vmov	r1, s17
 800a318:	4630      	mov	r0, r6
 800a31a:	f008 fad1 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 800a31e:	ee19 0a10 	vmov	r0, s18
 800a322:	220c      	movs	r2, #12
 800a324:	2136      	movs	r1, #54	; 0x36
 800a326:	f7f9 fa35 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 800a32a:	ee19 1a10 	vmov	r1, s18
 800a32e:	4628      	mov	r0, r5
        color = newColor;
 800a330:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 800a334:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 800a338:	f00a fe50 	bl	8014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a33c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800a340:	ee19 3a10 	vmov	r3, s18
 800a344:	333c      	adds	r3, #60	; 0x3c
 800a346:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800a34a:	2366      	movs	r3, #102	; 0x66
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 800a34c:	ee19 0a10 	vmov	r0, s18
 800a350:	a90a      	add	r1, sp, #40	; 0x28
 800a352:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a356:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a35a:	f00b f8d9 	bl	8015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a35e:	4630      	mov	r0, r6
 800a360:	ee19 1a10 	vmov	r1, s18
 800a364:	f008 faac 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800a368:	4620      	mov	r0, r4
 800a36a:	b00d      	add	sp, #52	; 0x34
 800a36c:	ecbd 8b06 	vpop	{d8-d10}
 800a370:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a374:	200138b0 	.word	0x200138b0
 800a378:	0802f621 	.word	0x0802f621
 800a37c:	0802f694 	.word	0x0802f694

0800a380 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 800a380:	4770      	bx	lr

0800a382 <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 800a382:	4770      	bx	lr

0800a384 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 800a384:	b510      	push	{r4, lr}
}
 800a386:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 800a388:	4604      	mov	r4, r0
}
 800a38a:	f022 fcce 	bl	802cd2a <_ZdlPvj>
 800a38e:	4620      	mov	r0, r4
 800a390:	bd10      	pop	{r4, pc}
	...

0800a394 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 800a394:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a398:	4604      	mov	r4, r0
 800a39a:	4626      	mov	r6, r4
 800a39c:	f00f ffe8 	bl	801a370 <_ZN8touchgfx6ScreenC1Ev>
 800a3a0:	2500      	movs	r5, #0
 800a3a2:	4b2e      	ldr	r3, [pc, #184]	; (800a45c <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 800a3a4:	63e5      	str	r5, [r4, #60]	; 0x3c
 800a3a6:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 800a3aa:	4b2d      	ldr	r3, [pc, #180]	; (800a460 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 800a3ac:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 800a3ae:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 800a3b2:	f44f 7280 	mov.w	r2, #256	; 0x100
 800a3b6:	23ff      	movs	r3, #255	; 0xff
 800a3b8:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 800a3bc:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 800a3c0:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 800a3c4:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 800a3c8:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 800a3cc:	4a25      	ldr	r2, [pc, #148]	; (800a464 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 800a3ce:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800a3d2:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 800a3d6:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 800a3d8:	a901      	add	r1, sp, #4
 800a3da:	4638      	mov	r0, r7
 800a3dc:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 800a3e0:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 800a3e4:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 800a3e8:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 800a3ec:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 800a3f0:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 800a3f4:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 800a3f8:	66a5      	str	r5, [r4, #104]	; 0x68
 800a3fa:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a3fe:	f00b fe38 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 800a402:	462a      	mov	r2, r5
 800a404:	4629      	mov	r1, r5
 800a406:	4630      	mov	r0, r6
 800a408:	f7f9 f9c4 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800a40c:	4630      	mov	r0, r6
 800a40e:	21f0      	movs	r1, #240	; 0xf0
 800a410:	f7f8 ff42 	bl	8003298 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 800a414:	4630      	mov	r0, r6
 800a416:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800a41a:	f7f8 ff3f 	bl	800329c <_ZN8touchgfx8Drawable9setHeightEs>
 800a41e:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 800a422:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800a426:	66a3      	str	r3, [r4, #104]	; 0x68
 800a428:	4631      	mov	r1, r6
 800a42a:	4640      	mov	r0, r8
 800a42c:	f008 fa48 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_shutdown.setXY(-3, 0);
 800a430:	462a      	mov	r2, r5
 800a432:	4638      	mov	r0, r7
 800a434:	f06f 0102 	mvn.w	r1, #2
 800a438:	f7f9 f9ac 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 800a43c:	230b      	movs	r3, #11
    image_shutdown.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 800a43e:	a901      	add	r1, sp, #4
 800a440:	4638      	mov	r0, r7
 800a442:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a446:	f00b fe14 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a44a:	4640      	mov	r0, r8
 800a44c:	4639      	mov	r1, r7
 800a44e:	f008 fa37 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800a452:	4620      	mov	r0, r4
 800a454:	b002      	add	sp, #8
 800a456:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a45a:	bf00      	nop
 800a45c:	08030ecc 	.word	0x08030ecc
 800a460:	08031bec 	.word	0x08031bec
 800a464:	08031e38 	.word	0x08031e38

0800a468 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a468:	4770      	bx	lr
	...

0800a46c <_Z23getFont_verdana_10_4bppv>:
{
 800a46c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a46e:	4d17      	ldr	r5, [pc, #92]	; (800a4cc <_Z23getFont_verdana_10_4bppv+0x60>)
 800a470:	682c      	ldr	r4, [r5, #0]
 800a472:	f3bf 8f5b 	dmb	ish
 800a476:	f014 0401 	ands.w	r4, r4, #1
{
 800a47a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a47c:	d122      	bne.n	800a4c4 <_Z23getFont_verdana_10_4bppv+0x58>
 800a47e:	4628      	mov	r0, r5
 800a480:	f022 fc55 	bl	802cd2e <__cxa_guard_acquire>
 800a484:	b1f0      	cbz	r0, 800a4c4 <_Z23getFont_verdana_10_4bppv+0x58>
 800a486:	233f      	movs	r3, #63	; 0x3f
 800a488:	9309      	str	r3, [sp, #36]	; 0x24
 800a48a:	4b11      	ldr	r3, [pc, #68]	; (800a4d0 <_Z23getFont_verdana_10_4bppv+0x64>)
 800a48c:	9308      	str	r3, [sp, #32]
 800a48e:	4b11      	ldr	r3, [pc, #68]	; (800a4d4 <_Z23getFont_verdana_10_4bppv+0x68>)
 800a490:	9307      	str	r3, [sp, #28]
 800a492:	2301      	movs	r3, #1
 800a494:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800a498:	9304      	str	r3, [sp, #16]
 800a49a:	2304      	movs	r3, #4
 800a49c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800a4a0:	230a      	movs	r3, #10
 800a4a2:	490d      	ldr	r1, [pc, #52]	; (800a4d8 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800a4a4:	9300      	str	r3, [sp, #0]
 800a4a6:	225f      	movs	r2, #95	; 0x5f
 800a4a8:	230c      	movs	r3, #12
 800a4aa:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a4ae:	480b      	ldr	r0, [pc, #44]	; (800a4dc <_Z23getFont_verdana_10_4bppv+0x70>)
 800a4b0:	940a      	str	r4, [sp, #40]	; 0x28
 800a4b2:	9401      	str	r4, [sp, #4]
 800a4b4:	f7fc f9da 	bl	800686c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a4b8:	4809      	ldr	r0, [pc, #36]	; (800a4e0 <_Z23getFont_verdana_10_4bppv+0x74>)
 800a4ba:	f023 fb3b 	bl	802db34 <atexit>
 800a4be:	4628      	mov	r0, r5
 800a4c0:	f022 fc41 	bl	802cd46 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 800a4c4:	4805      	ldr	r0, [pc, #20]	; (800a4dc <_Z23getFont_verdana_10_4bppv+0x70>)
 800a4c6:	b00f      	add	sp, #60	; 0x3c
 800a4c8:	bd30      	pop	{r4, r5, pc}
 800a4ca:	bf00      	nop
 800a4cc:	2000294c 	.word	0x2000294c
 800a4d0:	08049adc 	.word	0x08049adc
 800a4d4:	08049d18 	.word	0x08049d18
 800a4d8:	08048b24 	.word	0x08048b24
 800a4dc:	20002950 	.word	0x20002950
 800a4e0:	0800a469 	.word	0x0800a469

0800a4e4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800a4e4:	4770      	bx	lr
	...

0800a4e8 <_Z23getFont_verdana_12_4bppv>:
{
 800a4e8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800a4ea:	4d17      	ldr	r5, [pc, #92]	; (800a548 <_Z23getFont_verdana_12_4bppv+0x60>)
 800a4ec:	682c      	ldr	r4, [r5, #0]
 800a4ee:	f3bf 8f5b 	dmb	ish
 800a4f2:	f014 0401 	ands.w	r4, r4, #1
{
 800a4f6:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800a4f8:	d122      	bne.n	800a540 <_Z23getFont_verdana_12_4bppv+0x58>
 800a4fa:	4628      	mov	r0, r5
 800a4fc:	f022 fc17 	bl	802cd2e <__cxa_guard_acquire>
 800a500:	b1f0      	cbz	r0, 800a540 <_Z23getFont_verdana_12_4bppv+0x58>
 800a502:	233f      	movs	r3, #63	; 0x3f
 800a504:	9309      	str	r3, [sp, #36]	; 0x24
 800a506:	4b11      	ldr	r3, [pc, #68]	; (800a54c <_Z23getFont_verdana_12_4bppv+0x64>)
 800a508:	9308      	str	r3, [sp, #32]
 800a50a:	4b11      	ldr	r3, [pc, #68]	; (800a550 <_Z23getFont_verdana_12_4bppv+0x68>)
 800a50c:	9307      	str	r3, [sp, #28]
 800a50e:	2301      	movs	r3, #1
 800a510:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800a514:	9304      	str	r3, [sp, #16]
 800a516:	2304      	movs	r3, #4
 800a518:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800a51c:	230c      	movs	r3, #12
 800a51e:	490d      	ldr	r1, [pc, #52]	; (800a554 <_Z23getFont_verdana_12_4bppv+0x6c>)
 800a520:	9300      	str	r3, [sp, #0]
 800a522:	2260      	movs	r2, #96	; 0x60
 800a524:	230f      	movs	r3, #15
 800a526:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a52a:	480b      	ldr	r0, [pc, #44]	; (800a558 <_Z23getFont_verdana_12_4bppv+0x70>)
 800a52c:	940a      	str	r4, [sp, #40]	; 0x28
 800a52e:	9401      	str	r4, [sp, #4]
 800a530:	f7fc f99c 	bl	800686c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a534:	4809      	ldr	r0, [pc, #36]	; (800a55c <_Z23getFont_verdana_12_4bppv+0x74>)
 800a536:	f023 fafd 	bl	802db34 <atexit>
 800a53a:	4628      	mov	r0, r5
 800a53c:	f022 fc03 	bl	802cd46 <__cxa_guard_release>
    return verdana_12_4bpp;
}
 800a540:	4805      	ldr	r0, [pc, #20]	; (800a558 <_Z23getFont_verdana_12_4bppv+0x70>)
 800a542:	b00f      	add	sp, #60	; 0x3c
 800a544:	bd30      	pop	{r4, r5, pc}
 800a546:	bf00      	nop
 800a548:	2000297c 	.word	0x2000297c
 800a54c:	08049b10 	.word	0x08049b10
 800a550:	08049d1c 	.word	0x08049d1c
 800a554:	08049058 	.word	0x08049058
 800a558:	20002980 	.word	0x20002980
 800a55c:	0800a4e5 	.word	0x0800a4e5

0800a560 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800a560:	4770      	bx	lr
	...

0800a564 <_Z23getFont_verdana_19_4bppv>:
{
 800a564:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800a566:	4d17      	ldr	r5, [pc, #92]	; (800a5c4 <_Z23getFont_verdana_19_4bppv+0x60>)
 800a568:	682c      	ldr	r4, [r5, #0]
 800a56a:	f3bf 8f5b 	dmb	ish
 800a56e:	f014 0401 	ands.w	r4, r4, #1
{
 800a572:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800a574:	d122      	bne.n	800a5bc <_Z23getFont_verdana_19_4bppv+0x58>
 800a576:	4628      	mov	r0, r5
 800a578:	f022 fbd9 	bl	802cd2e <__cxa_guard_acquire>
 800a57c:	b1f0      	cbz	r0, 800a5bc <_Z23getFont_verdana_19_4bppv+0x58>
 800a57e:	233f      	movs	r3, #63	; 0x3f
 800a580:	9309      	str	r3, [sp, #36]	; 0x24
 800a582:	4b11      	ldr	r3, [pc, #68]	; (800a5c8 <_Z23getFont_verdana_19_4bppv+0x64>)
 800a584:	9308      	str	r3, [sp, #32]
 800a586:	4b11      	ldr	r3, [pc, #68]	; (800a5cc <_Z23getFont_verdana_19_4bppv+0x68>)
 800a588:	9307      	str	r3, [sp, #28]
 800a58a:	2301      	movs	r3, #1
 800a58c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800a590:	9304      	str	r3, [sp, #16]
 800a592:	2304      	movs	r3, #4
 800a594:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800a598:	2313      	movs	r3, #19
 800a59a:	490d      	ldr	r1, [pc, #52]	; (800a5d0 <_Z23getFont_verdana_19_4bppv+0x6c>)
 800a59c:	9300      	str	r3, [sp, #0]
 800a59e:	225f      	movs	r2, #95	; 0x5f
 800a5a0:	2317      	movs	r3, #23
 800a5a2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a5a6:	480b      	ldr	r0, [pc, #44]	; (800a5d4 <_Z23getFont_verdana_19_4bppv+0x70>)
 800a5a8:	940a      	str	r4, [sp, #40]	; 0x28
 800a5aa:	9401      	str	r4, [sp, #4]
 800a5ac:	f7fc f95e 	bl	800686c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a5b0:	4809      	ldr	r0, [pc, #36]	; (800a5d8 <_Z23getFont_verdana_19_4bppv+0x74>)
 800a5b2:	f023 fabf 	bl	802db34 <atexit>
 800a5b6:	4628      	mov	r0, r5
 800a5b8:	f022 fbc5 	bl	802cd46 <__cxa_guard_release>
    return verdana_19_4bpp;
}
 800a5bc:	4805      	ldr	r0, [pc, #20]	; (800a5d4 <_Z23getFont_verdana_19_4bppv+0x70>)
 800a5be:	b00f      	add	sp, #60	; 0x3c
 800a5c0:	bd30      	pop	{r4, r5, pc}
 800a5c2:	bf00      	nop
 800a5c4:	200029ac 	.word	0x200029ac
 800a5c8:	08049b94 	.word	0x08049b94
 800a5cc:	08049d20 	.word	0x08049d20
 800a5d0:	08049598 	.word	0x08049598
 800a5d4:	200029b0 	.word	0x200029b0
 800a5d8:	0800a561 	.word	0x0800a561

0800a5dc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a5dc:	4770      	bx	lr
	...

0800a5e0 <_Z23getFont_verdana_40_4bppv>:
{
 800a5e0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a5e2:	4d16      	ldr	r5, [pc, #88]	; (800a63c <_Z23getFont_verdana_40_4bppv+0x5c>)
 800a5e4:	682c      	ldr	r4, [r5, #0]
 800a5e6:	f3bf 8f5b 	dmb	ish
 800a5ea:	f014 0401 	ands.w	r4, r4, #1
{
 800a5ee:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a5f0:	d120      	bne.n	800a634 <_Z23getFont_verdana_40_4bppv+0x54>
 800a5f2:	4628      	mov	r0, r5
 800a5f4:	f022 fb9b 	bl	802cd2e <__cxa_guard_acquire>
 800a5f8:	b1e0      	cbz	r0, 800a634 <_Z23getFont_verdana_40_4bppv+0x54>
 800a5fa:	233f      	movs	r3, #63	; 0x3f
 800a5fc:	9309      	str	r3, [sp, #36]	; 0x24
 800a5fe:	4b10      	ldr	r3, [pc, #64]	; (800a640 <_Z23getFont_verdana_40_4bppv+0x60>)
 800a600:	9308      	str	r3, [sp, #32]
 800a602:	4b10      	ldr	r3, [pc, #64]	; (800a644 <_Z23getFont_verdana_40_4bppv+0x64>)
 800a604:	4910      	ldr	r1, [pc, #64]	; (800a648 <_Z23getFont_verdana_40_4bppv+0x68>)
 800a606:	4811      	ldr	r0, [pc, #68]	; (800a64c <_Z23getFont_verdana_40_4bppv+0x6c>)
 800a608:	940a      	str	r4, [sp, #40]	; 0x28
 800a60a:	2201      	movs	r2, #1
 800a60c:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800a610:	2304      	movs	r3, #4
 800a612:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800a616:	2328      	movs	r3, #40	; 0x28
 800a618:	9300      	str	r3, [sp, #0]
 800a61a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a61e:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800a622:	9405      	str	r4, [sp, #20]
 800a624:	f7fc f922 	bl	800686c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a628:	4809      	ldr	r0, [pc, #36]	; (800a650 <_Z23getFont_verdana_40_4bppv+0x70>)
 800a62a:	f023 fa83 	bl	802db34 <atexit>
 800a62e:	4628      	mov	r0, r5
 800a630:	f022 fb89 	bl	802cd46 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 800a634:	4805      	ldr	r0, [pc, #20]	; (800a64c <_Z23getFont_verdana_40_4bppv+0x6c>)
 800a636:	b00f      	add	sp, #60	; 0x3c
 800a638:	bd30      	pop	{r4, r5, pc}
 800a63a:	bf00      	nop
 800a63c:	200029dc 	.word	0x200029dc
 800a640:	08049d14 	.word	0x08049d14
 800a644:	08049d24 	.word	0x08049d24
 800a648:	08049acc 	.word	0x08049acc
 800a64c:	200029e0 	.word	0x200029e0
 800a650:	0800a5dd 	.word	0x0800a5dd

0800a654 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 800a654:	2000      	movs	r0, #0
 800a656:	4770      	bx	lr

0800a658 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 800a658:	2000      	movs	r0, #0
 800a65a:	4770      	bx	lr

0800a65c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800a65c:	b40e      	push	{r1, r2, r3}
 800a65e:	b503      	push	{r0, r1, lr}
 800a660:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800a662:	2100      	movs	r1, #0
{
 800a664:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800a668:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800a66a:	f00f f9bf 	bl	80199ec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800a66e:	b002      	add	sp, #8
 800a670:	f85d eb04 	ldr.w	lr, [sp], #4
 800a674:	b003      	add	sp, #12
 800a676:	4770      	bx	lr

0800a678 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800a678:	b40c      	push	{r2, r3}
 800a67a:	b507      	push	{r0, r1, r2, lr}
 800a67c:	ab04      	add	r3, sp, #16
 800a67e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800a682:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800a684:	f00f f9b2 	bl	80199ec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800a688:	b003      	add	sp, #12
 800a68a:	f85d eb04 	ldr.w	lr, [sp], #4
 800a68e:	b002      	add	sp, #8
 800a690:	4770      	bx	lr
	...

0800a694 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800a694:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 800a696:	b510      	push	{r4, lr}
 800a698:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800a69a:	b373      	cbz	r3, 800a6fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800a69c:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800a69e:	b92b      	cbnz	r3, 800a6ac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 800a6a0:	4b18      	ldr	r3, [pc, #96]	; (800a704 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800a6a2:	4a19      	ldr	r2, [pc, #100]	; (800a708 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 800a6a4:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800a6a6:	4819      	ldr	r0, [pc, #100]	; (800a70c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 800a6a8:	f023 fa26 	bl	802daf8 <__assert_func>
            return buffer[pos];
 800a6ac:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800a6ae:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800a6b2:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 800a6b4:	b30b      	cbz	r3, 800a6fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800a6b6:	f010 fdd4 	bl	801b262 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800a6ba:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800a6bc:	2b01      	cmp	r3, #1
 800a6be:	d803      	bhi.n	800a6c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 800a6c0:	4b13      	ldr	r3, [pc, #76]	; (800a710 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800a6c2:	4a14      	ldr	r2, [pc, #80]	; (800a714 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 800a6c4:	21cb      	movs	r1, #203	; 0xcb
 800a6c6:	e7ee      	b.n	800a6a6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 800a6c8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800a6ca:	1c53      	adds	r3, r2, #1
 800a6cc:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800a6ce:	2b09      	cmp	r3, #9
 800a6d0:	4619      	mov	r1, r3
 800a6d2:	bf88      	it	hi
 800a6d4:	f1a3 010a 	subhi.w	r1, r3, #10
 800a6d8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800a6dc:	f640 103f 	movw	r0, #2367	; 0x93f
 800a6e0:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 800a6e2:	4281      	cmp	r1, r0
 800a6e4:	d109      	bne.n	800a6fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800a6e6:	2b0a      	cmp	r3, #10
 800a6e8:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800a6ec:	bf28      	it	cs
 800a6ee:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800a6f0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 800a6f4:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 800a6f6:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 800a6f8:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800a6fa:	4620      	mov	r0, r4
}
 800a6fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 800a700:	f010 bcb2 	b.w	801b068 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800a704:	08030ef8 	.word	0x08030ef8
 800a708:	08030f01 	.word	0x08030f01
 800a70c:	08030fac 	.word	0x08030fac
 800a710:	08030ff6 	.word	0x08030ff6
 800a714:	08031004 	.word	0x08031004

0800a718 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800a718:	f010 bc6d 	b.w	801aff6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800a71c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800a71c:	b510      	push	{r4, lr}
 800a71e:	b086      	sub	sp, #24
 800a720:	ac02      	add	r4, sp, #8
 800a722:	e884 0006 	stmia.w	r4, {r1, r2}
 800a726:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800a728:	ab0a      	add	r3, sp, #40	; 0x28
 800a72a:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800a72c:	9301      	str	r3, [sp, #4]
 800a72e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a730:	9300      	str	r3, [sp, #0]
 800a732:	4621      	mov	r1, r4
 800a734:	9b08      	ldr	r3, [sp, #32]
 800a736:	f00d fd1d 	bl	8018174 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800a73a:	b006      	add	sp, #24
 800a73c:	bd10      	pop	{r4, pc}
	...

0800a740 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800a740:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800a742:	bb18      	cbnz	r0, 800a78c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 800a744:	4b12      	ldr	r3, [pc, #72]	; (800a790 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800a746:	4813      	ldr	r0, [pc, #76]	; (800a794 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800a748:	681c      	ldr	r4, [r3, #0]
 800a74a:	4913      	ldr	r1, [pc, #76]	; (800a798 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 800a74c:	b1b4      	cbz	r4, 800a77c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800a74e:	6822      	ldr	r2, [r4, #0]
 800a750:	4422      	add	r2, r4
 800a752:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800a754:	6862      	ldr	r2, [r4, #4]
 800a756:	4422      	add	r2, r4
 800a758:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800a75a:	68a2      	ldr	r2, [r4, #8]
 800a75c:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800a75e:	4b0f      	ldr	r3, [pc, #60]	; (800a79c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 800a760:	2200      	movs	r2, #0
 800a762:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800a764:	f000 f838 	bl	800a7d8 <_ZN17TypedTextDatabase8getFontsEv>
 800a768:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800a76a:	f000 f833 	bl	800a7d4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800a76e:	4b0c      	ldr	r3, [pc, #48]	; (800a7a0 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800a770:	601c      	str	r4, [r3, #0]
        fonts = f;
 800a772:	4b0c      	ldr	r3, [pc, #48]	; (800a7a4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800a774:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800a776:	4b0c      	ldr	r3, [pc, #48]	; (800a7a8 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800a778:	8018      	strh	r0, [r3, #0]
    }
}
 800a77a:	e007      	b.n	800a78c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800a77c:	4b0b      	ldr	r3, [pc, #44]	; (800a7ac <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800a77e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800a780:	4b0b      	ldr	r3, [pc, #44]	; (800a7b0 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800a782:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800a784:	4b0b      	ldr	r3, [pc, #44]	; (800a7b4 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800a786:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 800a788:	2c00      	cmp	r4, #0
 800a78a:	d1e8      	bne.n	800a75e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800a78c:	bd38      	pop	{r3, r4, r5, pc}
 800a78e:	bf00      	nop
 800a790:	20002a0c 	.word	0x20002a0c
 800a794:	20002a10 	.word	0x20002a10
 800a798:	20002a14 	.word	0x20002a14
 800a79c:	20002a18 	.word	0x20002a18
 800a7a0:	200138a4 	.word	0x200138a4
 800a7a4:	200138ac 	.word	0x200138ac
 800a7a8:	200138a8 	.word	0x200138a8
 800a7ac:	08049ef0 	.word	0x08049ef0
 800a7b0:	08049d28 	.word	0x08049d28
 800a7b4:	0804a458 	.word	0x0804a458

0800a7b8 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800a7b8:	4b04      	ldr	r3, [pc, #16]	; (800a7cc <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800a7ba:	681b      	ldr	r3, [r3, #0]
 800a7bc:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800a7c0:	4b03      	ldr	r3, [pc, #12]	; (800a7d0 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800a7c2:	681b      	ldr	r3, [r3, #0]
}
 800a7c4:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800a7c8:	4770      	bx	lr
 800a7ca:	bf00      	nop
 800a7cc:	20002a14 	.word	0x20002a14
 800a7d0:	20002a10 	.word	0x20002a10

0800a7d4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 800a7d4:	2072      	movs	r0, #114	; 0x72
 800a7d6:	4770      	bx	lr

0800a7d8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 800a7d8:	4800      	ldr	r0, [pc, #0]	; (800a7dc <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800a7da:	4770      	bx	lr
 800a7dc:	20002a1c 	.word	0x20002a1c

0800a7e0 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800a7e0:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 800a7e2:	f7ff febf 	bl	800a564 <_Z23getFont_verdana_19_4bppv>
};
 800a7e6:	4c06      	ldr	r4, [pc, #24]	; (800a800 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 800a7e8:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800a7ea:	f7ff fef9 	bl	800a5e0 <_Z23getFont_verdana_40_4bppv>
};
 800a7ee:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 800a7f0:	f7ff fe3c 	bl	800a46c <_Z23getFont_verdana_10_4bppv>
};
 800a7f4:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 800a7f6:	f7ff fe77 	bl	800a4e8 <_Z23getFont_verdana_12_4bppv>
};
 800a7fa:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 800a7fc:	bd10      	pop	{r4, pc}
 800a7fe:	bf00      	nop
 800a800:	20002a1c 	.word	0x20002a1c

0800a804 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 800a804:	4770      	bx	lr

0800a806 <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 800a806:	3804      	subs	r0, #4
 800a808:	4770      	bx	lr

0800a80a <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 800a80a:	4770      	bx	lr

0800a80c <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 800a80c:	4770      	bx	lr

0800a80e <_ZN24Calibration_PadPresenterD0Ev>:
 800a80e:	b510      	push	{r4, lr}
 800a810:	2110      	movs	r1, #16
 800a812:	4604      	mov	r4, r0
 800a814:	f022 fa89 	bl	802cd2a <_ZdlPvj>
 800a818:	4620      	mov	r0, r4
 800a81a:	bd10      	pop	{r4, pc}

0800a81c <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 800a81c:	f1a0 0004 	sub.w	r0, r0, #4
 800a820:	e7f5      	b.n	800a80e <_ZN24Calibration_PadPresenterD0Ev>

0800a822 <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 800a822:	4770      	bx	lr

0800a824 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 800a824:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800a826:	2200      	movs	r2, #0
 800a828:	6082      	str	r2, [r0, #8]
    : view(v)
 800a82a:	4a04      	ldr	r2, [pc, #16]	; (800a83c <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 800a82c:	60c1      	str	r1, [r0, #12]
 800a82e:	f102 0408 	add.w	r4, r2, #8
 800a832:	3224      	adds	r2, #36	; 0x24
 800a834:	6004      	str	r4, [r0, #0]
 800a836:	6042      	str	r2, [r0, #4]
}
 800a838:	bd10      	pop	{r4, pc}
 800a83a:	bf00      	nop
 800a83c:	080310d8 	.word	0x080310d8

0800a840 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 800a840:	4770      	bx	lr

0800a842 <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 800a842:	4770      	bx	lr

0800a844 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 800a844:	b510      	push	{r4, lr}
 800a846:	4b03      	ldr	r3, [pc, #12]	; (800a854 <_ZN19Calibration_PadViewD1Ev+0x10>)
 800a848:	6003      	str	r3, [r0, #0]
 800a84a:	4604      	mov	r4, r0
 800a84c:	f7f8 ff4c 	bl	80036e8 <_ZN23Calibration_PadViewBaseD1Ev>
 800a850:	4620      	mov	r0, r4
 800a852:	bd10      	pop	{r4, pc}
 800a854:	08031110 	.word	0x08031110

0800a858 <_ZN19Calibration_PadViewD0Ev>:
 800a858:	b510      	push	{r4, lr}
 800a85a:	4604      	mov	r4, r0
 800a85c:	f7ff fff2 	bl	800a844 <_ZN19Calibration_PadViewD1Ev>
 800a860:	4620      	mov	r0, r4
 800a862:	f641 5104 	movw	r1, #7428	; 0x1d04
 800a866:	f022 fa60 	bl	802cd2a <_ZdlPvj>
 800a86a:	4620      	mov	r0, r4
 800a86c:	bd10      	pop	{r4, pc}
	...

0800a870 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 800a870:	b510      	push	{r4, lr}
 800a872:	4604      	mov	r4, r0
 800a874:	f7f9 fae0 	bl	8003e38 <_ZN23Calibration_PadViewBaseC1Ev>
 800a878:	4b01      	ldr	r3, [pc, #4]	; (800a880 <_ZN19Calibration_PadViewC1Ev+0x10>)
 800a87a:	6023      	str	r3, [r4, #0]
}
 800a87c:	4620      	mov	r0, r4
 800a87e:	bd10      	pop	{r4, pc}
 800a880:	08031110 	.word	0x08031110

0800a884 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv>:

void Calibration_PadView::Load_FLASH_Values()
{
 800a884:	b570      	push	{r4, r5, r6, lr}
 800a886:	4604      	mov	r4, r0
 800a888:	b0ca      	sub	sp, #296	; 0x128
 800a88a:	f100 06e0 	add.w	r6, r0, #224	; 0xe0
 800a88e:	4631      	mov	r1, r6
 800a890:	a80d      	add	r0, sp, #52	; 0x34
 800a892:	f7f9 f841 	bl	8003918 <_ZN8touchgfx8DrawableC1ERKS0_>
 800a896:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800a89a:	9317      	str	r3, [sp, #92]	; 0x5c
 800a89c:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 800a8a0:	9318      	str	r3, [sp, #96]	; 0x60
 800a8a2:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 800a8a6:	4a57      	ldr	r2, [pc, #348]	; (800aa04 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x180>)
 800a8a8:	9319      	str	r3, [sp, #100]	; 0x64
 800a8aa:	f504 718c 	add.w	r1, r4, #280	; 0x118
 800a8ae:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 800a8b2:	920d      	str	r2, [sp, #52]	; 0x34
 800a8b4:	a81b      	add	r0, sp, #108	; 0x6c
 800a8b6:	931a      	str	r3, [sp, #104]	; 0x68
 800a8b8:	f7f9 f82e 	bl	8003918 <_ZN8touchgfx8DrawableC1ERKS0_>
 800a8bc:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 800a8c0:	9325      	str	r3, [sp, #148]	; 0x94
 800a8c2:	4b51      	ldr	r3, [pc, #324]	; (800aa08 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x184>)
 800a8c4:	931b      	str	r3, [sp, #108]	; 0x6c
 800a8c6:	f894 3144 	ldrb.w	r3, [r4, #324]	; 0x144
 800a8ca:	f88d 3098 	strb.w	r3, [sp, #152]	; 0x98
 800a8ce:	f504 71a4 	add.w	r1, r4, #328	; 0x148
 800a8d2:	f8b4 3146 	ldrh.w	r3, [r4, #326]	; 0x146
 800a8d6:	f8ad 309a 	strh.w	r3, [sp, #154]	; 0x9a
 800a8da:	a827      	add	r0, sp, #156	; 0x9c
 800a8dc:	f7f9 f81c 	bl	8003918 <_ZN8touchgfx8DrawableC1ERKS0_>
 800a8e0:	f8d4 3170 	ldr.w	r3, [r4, #368]	; 0x170
 800a8e4:	9331      	str	r3, [sp, #196]	; 0xc4
 800a8e6:	f504 71ba 	add.w	r1, r4, #372	; 0x174
    class PageIndicator : public Container
 800a8ea:	4b48      	ldr	r3, [pc, #288]	; (800aa0c <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x188>)
 800a8ec:	9327      	str	r3, [sp, #156]	; 0x9c
 800a8ee:	a832      	add	r0, sp, #200	; 0xc8
 800a8f0:	f7f9 f812 	bl	8003918 <_ZN8touchgfx8DrawableC1ERKS0_>
class Image : public Widget
 800a8f4:	f8b4 319a 	ldrh.w	r3, [r4, #410]	; 0x19a
 800a8f8:	f8ad 30ee 	strh.w	r3, [sp, #238]	; 0xee
 800a8fc:	f894 319c 	ldrb.w	r3, [r4, #412]	; 0x19c
 800a900:	f88d 30f0 	strb.w	r3, [sp, #240]	; 0xf0
 800a904:	4b42      	ldr	r3, [pc, #264]	; (800aa10 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x18c>)
 800a906:	9332      	str	r3, [sp, #200]	; 0xc8
 800a908:	f8b4 319e 	ldrh.w	r3, [r4, #414]	; 0x19e
 800a90c:	f8ad 30f2 	strh.w	r3, [sp, #242]	; 0xf2
 800a910:	f504 71d2 	add.w	r1, r4, #420	; 0x1a4
 800a914:	f8b4 31a0 	ldrh.w	r3, [r4, #416]	; 0x1a0
 800a918:	f8ad 30f4 	strh.w	r3, [sp, #244]	; 0xf4
 800a91c:	a83e      	add	r0, sp, #248	; 0xf8
 800a91e:	f7f8 fffb 	bl	8003918 <_ZN8touchgfx8DrawableC1ERKS0_>
 800a922:	4b3c      	ldr	r3, [pc, #240]	; (800aa14 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x190>)
 800a924:	933e      	str	r3, [sp, #248]	; 0xf8
 800a926:	f8b4 31ca 	ldrh.w	r3, [r4, #458]	; 0x1ca
	//Load the 6 Calibration Values from the Flash
	Flash_Read_Data(0x081E0000, Rx_Data, 12);

	// Write current Data stored in the Flash to the GUI
	//Left Pad
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 800a92a:	4d3b      	ldr	r5, [pc, #236]	; (800aa18 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x194>)
 800a92c:	f8ad 311e 	strh.w	r3, [sp, #286]	; 0x11e
 800a930:	f894 31cc 	ldrb.w	r3, [r4, #460]	; 0x1cc
 800a934:	f88d 3120 	strb.w	r3, [sp, #288]	; 0x120
	Flash_Read_Data(0x081E0000, Rx_Data, 12);
 800a938:	a901      	add	r1, sp, #4
 800a93a:	f8b4 31d0 	ldrh.w	r3, [r4, #464]	; 0x1d0
 800a93e:	4837      	ldr	r0, [pc, #220]	; (800aa1c <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x198>)
 800a940:	f8ad 3124 	strh.w	r3, [sp, #292]	; 0x124
 800a944:	220c      	movs	r2, #12
 800a946:	f7f6 fab9 	bl	8000ebc <Flash_Read_Data>
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 800a94a:	9b01      	ldr	r3, [sp, #4]
 800a94c:	462a      	mov	r2, r5
 800a94e:	210a      	movs	r1, #10
 800a950:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 800a954:	f011 fa3a 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", Rx_Data[1]);
 800a958:	9b02      	ldr	r3, [sp, #8]
 800a95a:	462a      	mov	r2, r5
 800a95c:	210a      	movs	r1, #10
 800a95e:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 800a962:	f011 fa33 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", Rx_Data[2]);
 800a966:	9b03      	ldr	r3, [sp, #12]
 800a968:	462a      	mov	r2, r5
 800a96a:	210a      	movs	r1, #10
 800a96c:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 800a970:	f011 fa2c 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", Rx_Data[3]);
 800a974:	9b04      	ldr	r3, [sp, #16]
 800a976:	462a      	mov	r2, r5
 800a978:	210a      	movs	r1, #10
 800a97a:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 800a97e:	f011 fa25 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", Rx_Data[4]);
 800a982:	9b05      	ldr	r3, [sp, #20]
 800a984:	462a      	mov	r2, r5
 800a986:	210a      	movs	r1, #10
 800a988:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 800a98c:	f011 fa1e 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", Rx_Data[5]);
 800a990:	9b06      	ldr	r3, [sp, #24]
 800a992:	462a      	mov	r2, r5
 800a994:	210a      	movs	r1, #10
 800a996:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 800a99a:	f011 fa17 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

	//Left Pad
	Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", Rx_Data[6]);
 800a99e:	9b07      	ldr	r3, [sp, #28]
 800a9a0:	462a      	mov	r2, r5
 800a9a2:	210a      	movs	r1, #10
 800a9a4:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 800a9a8:	f011 fa10 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", Rx_Data[7]);
 800a9ac:	9b08      	ldr	r3, [sp, #32]
 800a9ae:	462a      	mov	r2, r5
 800a9b0:	210a      	movs	r1, #10
 800a9b2:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 800a9b6:	f011 fa09 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", Rx_Data[8]);
 800a9ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a9bc:	462a      	mov	r2, r5
 800a9be:	210a      	movs	r1, #10
 800a9c0:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 800a9c4:	f011 fa02 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", Rx_Data[9]);
 800a9c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a9ca:	462a      	mov	r2, r5
 800a9cc:	210a      	movs	r1, #10
 800a9ce:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 800a9d2:	f011 f9fb 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", Rx_Data[10]);
 800a9d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a9d8:	462a      	mov	r2, r5
 800a9da:	210a      	movs	r1, #10
 800a9dc:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 800a9e0:	f011 f9f4 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", Rx_Data[11]);
 800a9e4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a9e6:	462a      	mov	r2, r5
 800a9e8:	210a      	movs	r1, #10
 800a9ea:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 800a9ee:	f011 f9ed 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	swipeContainer1.invalidate();
 800a9f2:	4630      	mov	r0, r6
 800a9f4:	f00f f924 	bl	8019c40 <_ZNK8touchgfx8Drawable10invalidateEv>

#endif
}
 800a9f8:	a80d      	add	r0, sp, #52	; 0x34
 800a9fa:	f008 f9ef 	bl	8012ddc <_ZN8touchgfx14SwipeContainerD1Ev>
 800a9fe:	b04a      	add	sp, #296	; 0x128
 800aa00:	bd70      	pop	{r4, r5, r6, pc}
 800aa02:	bf00      	nop
 800aa04:	08031794 	.word	0x08031794
 800aa08:	08031858 	.word	0x08031858
 800aa0c:	0802f6a4 	.word	0x0802f6a4
 800aa10:	08031c54 	.word	0x08031c54
 800aa14:	08031e38 	.word	0x08031e38
 800aa18:	0802f5e6 	.word	0x0802f5e6
 800aa1c:	081e0000 	.word	0x081e0000

0800aa20 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 800aa20:	f7f8 be22 	b.w	8003668 <_ZN23Calibration_PadViewBase11setupScreenEv>

0800aa24 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800aa24:	4770      	bx	lr

0800aa26 <_ZN19FrontendApplicationD0Ev>:
 800aa26:	b510      	push	{r4, lr}
 800aa28:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800aa2c:	4604      	mov	r4, r0
 800aa2e:	f022 f97c 	bl	802cd2a <_ZdlPvj>
 800aa32:	4620      	mov	r0, r4
 800aa34:	bd10      	pop	{r4, pc}

0800aa36 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800aa36:	b510      	push	{r4, lr}
 800aa38:	4604      	mov	r4, r0
    {
        model.tick();
 800aa3a:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 800aa3e:	f000 fb03 	bl	800b048 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800aa42:	4620      	mov	r0, r4
    }
 800aa44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800aa48:	f00e b8d6 	b.w	8018bf8 <_ZN8touchgfx11Application15handleTickEventEv>

0800aa4c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800aa4c:	b510      	push	{r4, lr}
 800aa4e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800aa50:	f7fa fde6 	bl	8005620 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800aa54:	4b01      	ldr	r3, [pc, #4]	; (800aa5c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800aa56:	6023      	str	r3, [r4, #0]
{

}
 800aa58:	4620      	mov	r0, r4
 800aa5a:	bd10      	pop	{r4, pc}
 800aa5c:	08031150 	.word	0x08031150

0800aa60 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 800aa60:	4770      	bx	lr

0800aa62 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 800aa62:	3804      	subs	r0, #4
 800aa64:	4770      	bx	lr

0800aa66 <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 800aa66:	4770      	bx	lr

0800aa68 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800aa68:	68c0      	ldr	r0, [r0, #12]
 800aa6a:	6803      	ldr	r3, [r0, #0]
 800aa6c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aa6e:	4718      	bx	r3

0800aa70 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800aa70:	f1a0 0004 	sub.w	r0, r0, #4
 800aa74:	f7ff bff8 	b.w	800aa68 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

0800aa78 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 800aa78:	b510      	push	{r4, lr}
 800aa7a:	2110      	movs	r1, #16
 800aa7c:	4604      	mov	r4, r0
 800aa7e:	f022 f954 	bl	802cd2a <_ZdlPvj>
 800aa82:	4620      	mov	r0, r4
 800aa84:	bd10      	pop	{r4, pc}

0800aa86 <_ZThn4_N18Main_MenuPresenterD0Ev>:
 800aa86:	f1a0 0004 	sub.w	r0, r0, #4
 800aa8a:	e7f5      	b.n	800aa78 <_ZN18Main_MenuPresenterD0Ev>

0800aa8c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 800aa8c:	b510      	push	{r4, lr}
 800aa8e:	2200      	movs	r2, #0
 800aa90:	6082      	str	r2, [r0, #8]
    : view(v)
 800aa92:	4a04      	ldr	r2, [pc, #16]	; (800aaa4 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 800aa94:	60c1      	str	r1, [r0, #12]
 800aa96:	f102 0408 	add.w	r4, r2, #8
 800aa9a:	3224      	adds	r2, #36	; 0x24
 800aa9c:	6004      	str	r4, [r0, #0]
 800aa9e:	6042      	str	r2, [r0, #4]
}
 800aaa0:	bd10      	pop	{r4, pc}
 800aaa2:	bf00      	nop
 800aaa4:	0803119c 	.word	0x0803119c

0800aaa8 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 800aaa8:	4770      	bx	lr
	...

0800aaac <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 800aaac:	b510      	push	{r4, lr}
 800aaae:	4b03      	ldr	r3, [pc, #12]	; (800aabc <_ZN13Main_MenuViewD1Ev+0x10>)
 800aab0:	6003      	str	r3, [r0, #0]
 800aab2:	4604      	mov	r4, r0
 800aab4:	f7fb ff2e 	bl	8006914 <_ZN17Main_MenuViewBaseD1Ev>
 800aab8:	4620      	mov	r0, r4
 800aaba:	bd10      	pop	{r4, pc}
 800aabc:	080311d4 	.word	0x080311d4

0800aac0 <_ZN13Main_MenuViewD0Ev>:
 800aac0:	b510      	push	{r4, lr}
 800aac2:	4604      	mov	r4, r0
 800aac4:	f7ff fff2 	bl	800aaac <_ZN13Main_MenuViewD1Ev>
 800aac8:	4620      	mov	r0, r4
 800aaca:	f44f 5190 	mov.w	r1, #4608	; 0x1200
 800aace:	f022 f92c 	bl	802cd2a <_ZdlPvj>
 800aad2:	4620      	mov	r0, r4
 800aad4:	bd10      	pop	{r4, pc}
	...

0800aad8 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 800aad8:	b510      	push	{r4, lr}
 800aada:	4604      	mov	r4, r0
 800aadc:	f7fb ff64 	bl	80069a8 <_ZN17Main_MenuViewBaseC1Ev>
 800aae0:	4b01      	ldr	r3, [pc, #4]	; (800aae8 <_ZN13Main_MenuViewC1Ev+0x10>)
 800aae2:	6023      	str	r3, [r4, #0]
}
 800aae4:	4620      	mov	r0, r4
 800aae6:	bd10      	pop	{r4, pc}
 800aae8:	080311d4 	.word	0x080311d4

0800aaec <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 800aaec:	f7fb beee 	b.w	80068cc <_ZN17Main_MenuViewBase11setupScreenEv>

0800aaf0 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 800aaf0:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800aaf2:	4a0a      	ldr	r2, [pc, #40]	; (800ab1c <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 800aaf4:	4605      	mov	r5, r0
 800aaf6:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800aaf8:	460b      	mov	r3, r1
 800aafa:	f500 7076 	add.w	r0, r0, #984	; 0x3d8
 800aafe:	2104      	movs	r1, #4
 800ab00:	f011 f964 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800ab04:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800ab08:	f00f f89a 	bl	8019c40 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800ab0c:	b92c      	cbnz	r4, 800ab1a <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 800ab0e:	f00d ffaf 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800ab12:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800ab16:	f7fa be83 	b.w	8005820 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800ab1a:	bd38      	pop	{r3, r4, r5, pc}
 800ab1c:	0802f5e6 	.word	0x0802f5e6

0800ab20 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 800ab20:	4770      	bx	lr

0800ab22 <_ZThn4_N20MeasurementPresenterD1Ev>:
 800ab22:	3804      	subs	r0, #4
 800ab24:	4770      	bx	lr

0800ab26 <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 800ab26:	4770      	bx	lr

0800ab28 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800ab28:	68c0      	ldr	r0, [r0, #12]
 800ab2a:	6803      	ldr	r3, [r0, #0]
 800ab2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ab2e:	4718      	bx	r3

0800ab30 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800ab30:	f1a0 0004 	sub.w	r0, r0, #4
 800ab34:	f7ff bff8 	b.w	800ab28 <_ZN20MeasurementPresenter15setTimeoutValueEi>

0800ab38 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 800ab38:	b510      	push	{r4, lr}
 800ab3a:	2110      	movs	r1, #16
 800ab3c:	4604      	mov	r4, r0
 800ab3e:	f022 f8f4 	bl	802cd2a <_ZdlPvj>
 800ab42:	4620      	mov	r0, r4
 800ab44:	bd10      	pop	{r4, pc}

0800ab46 <_ZThn4_N20MeasurementPresenterD0Ev>:
 800ab46:	f1a0 0004 	sub.w	r0, r0, #4
 800ab4a:	e7f5      	b.n	800ab38 <_ZN20MeasurementPresenterD0Ev>

0800ab4c <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 800ab4c:	b510      	push	{r4, lr}
 800ab4e:	2200      	movs	r2, #0
 800ab50:	6082      	str	r2, [r0, #8]
    : view(v)
 800ab52:	4a04      	ldr	r2, [pc, #16]	; (800ab64 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 800ab54:	60c1      	str	r1, [r0, #12]
 800ab56:	f102 0408 	add.w	r4, r2, #8
 800ab5a:	3224      	adds	r2, #36	; 0x24
 800ab5c:	6004      	str	r4, [r0, #0]
 800ab5e:	6042      	str	r2, [r0, #4]
}
 800ab60:	bd10      	pop	{r4, pc}
 800ab62:	bf00      	nop
 800ab64:	08031204 	.word	0x08031204

0800ab68 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 800ab68:	4770      	bx	lr
	...

0800ab6c <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 800ab6c:	b510      	push	{r4, lr}
 800ab6e:	4b03      	ldr	r3, [pc, #12]	; (800ab7c <_ZN15MeasurementViewD1Ev+0x10>)
 800ab70:	6003      	str	r3, [r0, #0]
 800ab72:	4604      	mov	r4, r0
 800ab74:	f7fc f9d6 	bl	8006f24 <_ZN19MeasurementViewBaseD1Ev>
 800ab78:	4620      	mov	r0, r4
 800ab7a:	bd10      	pop	{r4, pc}
 800ab7c:	0803123c 	.word	0x0803123c

0800ab80 <_ZN15MeasurementViewD0Ev>:
 800ab80:	b510      	push	{r4, lr}
 800ab82:	4604      	mov	r4, r0
 800ab84:	f7ff fff2 	bl	800ab6c <_ZN15MeasurementViewD1Ev>
 800ab88:	4620      	mov	r0, r4
 800ab8a:	f241 11c4 	movw	r1, #4548	; 0x11c4
 800ab8e:	f022 f8cc 	bl	802cd2a <_ZdlPvj>
 800ab92:	4620      	mov	r0, r4
 800ab94:	bd10      	pop	{r4, pc}
	...

0800ab98 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 800ab98:	b510      	push	{r4, lr}
 800ab9a:	4604      	mov	r4, r0
 800ab9c:	f7fc f9fc 	bl	8006f98 <_ZN19MeasurementViewBaseC1Ev>
 800aba0:	4b01      	ldr	r3, [pc, #4]	; (800aba8 <_ZN15MeasurementViewC1Ev+0x10>)
 800aba2:	6023      	str	r3, [r4, #0]
}
 800aba4:	4620      	mov	r0, r4
 800aba6:	bd10      	pop	{r4, pc}
 800aba8:	0803123c 	.word	0x0803123c

0800abac <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 800abac:	f7fc b996 	b.w	8006edc <_ZN19MeasurementViewBase11setupScreenEv>

0800abb0 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 800abb0:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800abb2:	4a0a      	ldr	r2, [pc, #40]	; (800abdc <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 800abb4:	4605      	mov	r5, r0
 800abb6:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800abb8:	460b      	mov	r3, r1
 800abba:	f500 7067 	add.w	r0, r0, #924	; 0x39c
 800abbe:	2104      	movs	r1, #4
 800abc0:	f011 f904 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800abc4:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800abc8:	f00f f83a 	bl	8019c40 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800abcc:	b92c      	cbnz	r4, 800abda <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 800abce:	f00d ff4f 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800abd2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800abd6:	f7fa be23 	b.w	8005820 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800abda:	bd38      	pop	{r3, r4, r5, pc}
 800abdc:	0802f5e6 	.word	0x0802f5e6

0800abe0 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 800abe0:	4770      	bx	lr

0800abe2 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 800abe2:	3804      	subs	r0, #4
 800abe4:	4770      	bx	lr

0800abe6 <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 800abe6:	4770      	bx	lr

0800abe8 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800abe8:	68c0      	ldr	r0, [r0, #12]
 800abea:	6803      	ldr	r3, [r0, #0]
 800abec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800abee:	4718      	bx	r3

0800abf0 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800abf0:	f1a0 0004 	sub.w	r0, r0, #4
 800abf4:	f7ff bff8 	b.w	800abe8 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

0800abf8 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 800abf8:	b510      	push	{r4, lr}
 800abfa:	2110      	movs	r1, #16
 800abfc:	4604      	mov	r4, r0
 800abfe:	f022 f894 	bl	802cd2a <_ZdlPvj>
 800ac02:	4620      	mov	r0, r4
 800ac04:	bd10      	pop	{r4, pc}

0800ac06 <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 800ac06:	f1a0 0004 	sub.w	r0, r0, #4
 800ac0a:	e7f5      	b.n	800abf8 <_ZN29Measurement_AccuratePresenterD0Ev>

0800ac0c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 800ac0c:	b510      	push	{r4, lr}
 800ac0e:	2200      	movs	r2, #0
 800ac10:	6082      	str	r2, [r0, #8]
    : view(v)
 800ac12:	4a04      	ldr	r2, [pc, #16]	; (800ac24 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 800ac14:	60c1      	str	r1, [r0, #12]
 800ac16:	f102 0408 	add.w	r4, r2, #8
 800ac1a:	3224      	adds	r2, #36	; 0x24
 800ac1c:	6004      	str	r4, [r0, #0]
 800ac1e:	6042      	str	r2, [r0, #4]
}
 800ac20:	bd10      	pop	{r4, pc}
 800ac22:	bf00      	nop
 800ac24:	0803126c 	.word	0x0803126c

0800ac28 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 800ac28:	4770      	bx	lr
	...

0800ac2c <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 800ac2c:	b510      	push	{r4, lr}
 800ac2e:	4b03      	ldr	r3, [pc, #12]	; (800ac3c <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 800ac30:	6003      	str	r3, [r0, #0]
 800ac32:	4604      	mov	r4, r0
 800ac34:	f7fc fc3e 	bl	80074b4 <_ZN28Measurement_AccurateViewBaseD1Ev>
 800ac38:	4620      	mov	r0, r4
 800ac3a:	bd10      	pop	{r4, pc}
 800ac3c:	080312a4 	.word	0x080312a4

0800ac40 <_ZN24Measurement_AccurateViewD0Ev>:
 800ac40:	b510      	push	{r4, lr}
 800ac42:	4604      	mov	r4, r0
 800ac44:	f7ff fff2 	bl	800ac2c <_ZN24Measurement_AccurateViewD1Ev>
 800ac48:	4620      	mov	r0, r4
 800ac4a:	f241 11c4 	movw	r1, #4548	; 0x11c4
 800ac4e:	f022 f86c 	bl	802cd2a <_ZdlPvj>
 800ac52:	4620      	mov	r0, r4
 800ac54:	bd10      	pop	{r4, pc}
	...

0800ac58 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 800ac58:	b510      	push	{r4, lr}
 800ac5a:	4604      	mov	r4, r0
 800ac5c:	f7fc fc64 	bl	8007528 <_ZN28Measurement_AccurateViewBaseC1Ev>
 800ac60:	4b01      	ldr	r3, [pc, #4]	; (800ac68 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 800ac62:	6023      	str	r3, [r4, #0]
}
 800ac64:	4620      	mov	r0, r4
 800ac66:	bd10      	pop	{r4, pc}
 800ac68:	080312a4 	.word	0x080312a4

0800ac6c <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 800ac6c:	f7fc bbfe 	b.w	800746c <_ZN28Measurement_AccurateViewBase11setupScreenEv>

0800ac70 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 800ac70:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ac72:	4a0a      	ldr	r2, [pc, #40]	; (800ac9c <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 800ac74:	4605      	mov	r5, r0
 800ac76:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ac78:	460b      	mov	r3, r1
 800ac7a:	f500 7067 	add.w	r0, r0, #924	; 0x39c
 800ac7e:	2104      	movs	r1, #4
 800ac80:	f011 f8a4 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800ac84:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800ac88:	f00e ffda 	bl	8019c40 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800ac8c:	b92c      	cbnz	r4, 800ac9a <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 800ac8e:	f00d feef 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800ac92:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800ac96:	f7fa bdc3 	b.w	8005820 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800ac9a:	bd38      	pop	{r3, r4, r5, pc}
 800ac9c:	0802f5e6 	.word	0x0802f5e6

0800aca0 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 800aca0:	4770      	bx	lr

0800aca2 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 800aca2:	3804      	subs	r0, #4
 800aca4:	4770      	bx	lr

0800aca6 <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 800aca6:	4770      	bx	lr

0800aca8 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 800aca8:	4770      	bx	lr

0800acaa <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 800acaa:	b510      	push	{r4, lr}
 800acac:	2110      	movs	r1, #16
 800acae:	4604      	mov	r4, r0
 800acb0:	f022 f83b 	bl	802cd2a <_ZdlPvj>
 800acb4:	4620      	mov	r0, r4
 800acb6:	bd10      	pop	{r4, pc}

0800acb8 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 800acb8:	f1a0 0004 	sub.w	r0, r0, #4
 800acbc:	e7f5      	b.n	800acaa <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

0800acbe <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 800acbe:	4770      	bx	lr

0800acc0 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 800acc0:	b510      	push	{r4, lr}
 800acc2:	2200      	movs	r2, #0
 800acc4:	6082      	str	r2, [r0, #8]
    : view(v)
 800acc6:	4a04      	ldr	r2, [pc, #16]	; (800acd8 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 800acc8:	60c1      	str	r1, [r0, #12]
 800acca:	f102 0408 	add.w	r4, r2, #8
 800acce:	3224      	adds	r2, #36	; 0x24
 800acd0:	6004      	str	r4, [r0, #0]
 800acd2:	6042      	str	r2, [r0, #4]
}
 800acd4:	bd10      	pop	{r4, pc}
 800acd6:	bf00      	nop
 800acd8:	080312d4 	.word	0x080312d4

0800acdc <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 800acdc:	4770      	bx	lr
	...

0800ace0 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 800ace0:	b510      	push	{r4, lr}
 800ace2:	4b03      	ldr	r3, [pc, #12]	; (800acf0 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 800ace4:	6003      	str	r3, [r0, #0]
 800ace6:	4604      	mov	r4, r0
 800ace8:	f7fc feac 	bl	8007a44 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 800acec:	4620      	mov	r0, r4
 800acee:	bd10      	pop	{r4, pc}
 800acf0:	0803130c 	.word	0x0803130c

0800acf4 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 800acf4:	b510      	push	{r4, lr}
 800acf6:	4604      	mov	r4, r0
 800acf8:	f7ff fff2 	bl	800ace0 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 800acfc:	4620      	mov	r0, r4
 800acfe:	f241 4178 	movw	r1, #5240	; 0x1478
 800ad02:	f022 f812 	bl	802cd2a <_ZdlPvj>
 800ad06:	4620      	mov	r0, r4
 800ad08:	bd10      	pop	{r4, pc}
	...

0800ad0c <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 800ad0c:	b510      	push	{r4, lr}
 800ad0e:	4604      	mov	r4, r0
 800ad10:	f7fc fec0 	bl	8007a94 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 800ad14:	4b01      	ldr	r3, [pc, #4]	; (800ad1c <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 800ad16:	6023      	str	r3, [r4, #0]
}
 800ad18:	4620      	mov	r0, r4
 800ad1a:	bd10      	pop	{r4, pc}
 800ad1c:	0803130c 	.word	0x0803130c

0800ad20 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 800ad20:	f7fc be6c 	b.w	80079fc <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

0800ad24 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 800ad24:	4770      	bx	lr

0800ad26 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 800ad26:	3804      	subs	r0, #4
 800ad28:	4770      	bx	lr

0800ad2a <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 800ad2a:	4770      	bx	lr

0800ad2c <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 800ad2c:	4770      	bx	lr

0800ad2e <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 800ad2e:	b510      	push	{r4, lr}
 800ad30:	2110      	movs	r1, #16
 800ad32:	4604      	mov	r4, r0
 800ad34:	f021 fff9 	bl	802cd2a <_ZdlPvj>
 800ad38:	4620      	mov	r0, r4
 800ad3a:	bd10      	pop	{r4, pc}

0800ad3c <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 800ad3c:	f1a0 0004 	sub.w	r0, r0, #4
 800ad40:	e7f5      	b.n	800ad2e <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

0800ad42 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 800ad42:	4770      	bx	lr

0800ad44 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 800ad44:	b510      	push	{r4, lr}
 800ad46:	2200      	movs	r2, #0
 800ad48:	6082      	str	r2, [r0, #8]
    : view(v)
 800ad4a:	4a04      	ldr	r2, [pc, #16]	; (800ad5c <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 800ad4c:	60c1      	str	r1, [r0, #12]
 800ad4e:	f102 0408 	add.w	r4, r2, #8
 800ad52:	3224      	adds	r2, #36	; 0x24
 800ad54:	6004      	str	r4, [r0, #0]
 800ad56:	6042      	str	r2, [r0, #4]
}
 800ad58:	bd10      	pop	{r4, pc}
 800ad5a:	bf00      	nop
 800ad5c:	08031338 	.word	0x08031338

0800ad60 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 800ad60:	4770      	bx	lr
	...

0800ad64 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 800ad64:	b510      	push	{r4, lr}
 800ad66:	4b03      	ldr	r3, [pc, #12]	; (800ad74 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 800ad68:	6003      	str	r3, [r0, #0]
 800ad6a:	4604      	mov	r4, r0
 800ad6c:	f7fd fa42 	bl	80081f4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 800ad70:	4620      	mov	r0, r4
 800ad72:	bd10      	pop	{r4, pc}
 800ad74:	08031370 	.word	0x08031370

0800ad78 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 800ad78:	b510      	push	{r4, lr}
 800ad7a:	4604      	mov	r4, r0
 800ad7c:	f7ff fff2 	bl	800ad64 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 800ad80:	4620      	mov	r0, r4
 800ad82:	f241 4178 	movw	r1, #5240	; 0x1478
 800ad86:	f021 ffd0 	bl	802cd2a <_ZdlPvj>
 800ad8a:	4620      	mov	r0, r4
 800ad8c:	bd10      	pop	{r4, pc}
	...

0800ad90 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 800ad90:	b510      	push	{r4, lr}
 800ad92:	4604      	mov	r4, r0
 800ad94:	f7fd fa56 	bl	8008244 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 800ad98:	4b01      	ldr	r3, [pc, #4]	; (800ada0 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 800ad9a:	6023      	str	r3, [r4, #0]
}
 800ad9c:	4620      	mov	r0, r4
 800ad9e:	bd10      	pop	{r4, pc}
 800ada0:	08031370 	.word	0x08031370

0800ada4 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 800ada4:	f7fd ba02 	b.w	80081ac <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

0800ada8 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 800ada8:	4770      	bx	lr

0800adaa <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 800adaa:	3804      	subs	r0, #4
 800adac:	4770      	bx	lr

0800adae <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 800adae:	4770      	bx	lr

0800adb0 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800adb0:	68c0      	ldr	r0, [r0, #12]
 800adb2:	6803      	ldr	r3, [r0, #0]
 800adb4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800adb6:	4718      	bx	r3

0800adb8 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800adb8:	f1a0 0004 	sub.w	r0, r0, #4
 800adbc:	f7ff bff8 	b.w	800adb0 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

0800adc0 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 800adc0:	b510      	push	{r4, lr}
 800adc2:	2110      	movs	r1, #16
 800adc4:	4604      	mov	r4, r0
 800adc6:	f021 ffb0 	bl	802cd2a <_ZdlPvj>
 800adca:	4620      	mov	r0, r4
 800adcc:	bd10      	pop	{r4, pc}

0800adce <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 800adce:	f1a0 0004 	sub.w	r0, r0, #4
 800add2:	e7f5      	b.n	800adc0 <_ZN27Measurement_SinglePresenterD0Ev>

0800add4 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 800add4:	b510      	push	{r4, lr}
 800add6:	2200      	movs	r2, #0
 800add8:	6082      	str	r2, [r0, #8]
    : view(v)
 800adda:	4a04      	ldr	r2, [pc, #16]	; (800adec <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 800addc:	60c1      	str	r1, [r0, #12]
 800adde:	f102 0408 	add.w	r4, r2, #8
 800ade2:	3224      	adds	r2, #36	; 0x24
 800ade4:	6004      	str	r4, [r0, #0]
 800ade6:	6042      	str	r2, [r0, #4]
}
 800ade8:	bd10      	pop	{r4, pc}
 800adea:	bf00      	nop
 800adec:	0803139c 	.word	0x0803139c

0800adf0 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 800adf0:	4770      	bx	lr
	...

0800adf4 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 800adf4:	b510      	push	{r4, lr}
 800adf6:	4b03      	ldr	r3, [pc, #12]	; (800ae04 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 800adf8:	6003      	str	r3, [r0, #0]
 800adfa:	4604      	mov	r4, r0
 800adfc:	f7fd fdd0 	bl	80089a0 <_ZN26Measurement_SingleViewBaseD1Ev>
 800ae00:	4620      	mov	r0, r4
 800ae02:	bd10      	pop	{r4, pc}
 800ae04:	080313d4 	.word	0x080313d4

0800ae08 <_ZN22Measurement_SingleViewD0Ev>:
 800ae08:	b510      	push	{r4, lr}
 800ae0a:	4604      	mov	r4, r0
 800ae0c:	f7ff fff2 	bl	800adf4 <_ZN22Measurement_SingleViewD1Ev>
 800ae10:	4620      	mov	r0, r4
 800ae12:	f241 11c4 	movw	r1, #4548	; 0x11c4
 800ae16:	f021 ff88 	bl	802cd2a <_ZdlPvj>
 800ae1a:	4620      	mov	r0, r4
 800ae1c:	bd10      	pop	{r4, pc}
	...

0800ae20 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 800ae20:	b510      	push	{r4, lr}
 800ae22:	4604      	mov	r4, r0
 800ae24:	f7fd fdf6 	bl	8008a14 <_ZN26Measurement_SingleViewBaseC1Ev>
 800ae28:	4b01      	ldr	r3, [pc, #4]	; (800ae30 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 800ae2a:	6023      	str	r3, [r4, #0]
}
 800ae2c:	4620      	mov	r0, r4
 800ae2e:	bd10      	pop	{r4, pc}
 800ae30:	080313d4 	.word	0x080313d4

0800ae34 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 800ae34:	f7fd bd90 	b.w	8008958 <_ZN26Measurement_SingleViewBase11setupScreenEv>

0800ae38 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 800ae38:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ae3a:	4a0a      	ldr	r2, [pc, #40]	; (800ae64 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 800ae3c:	4605      	mov	r5, r0
 800ae3e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ae40:	460b      	mov	r3, r1
 800ae42:	f500 7067 	add.w	r0, r0, #924	; 0x39c
 800ae46:	2104      	movs	r1, #4
 800ae48:	f010 ffc0 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800ae4c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800ae50:	f00e fef6 	bl	8019c40 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800ae54:	b92c      	cbnz	r4, 800ae62 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 800ae56:	f00d fe0b 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800ae5a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800ae5e:	f7fa bcdf 	b.w	8005820 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800ae62:	bd38      	pop	{r3, r4, r5, pc}
 800ae64:	0802f5e6 	.word	0x0802f5e6

0800ae68 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 800ae68:	4770      	bx	lr

0800ae6a <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 800ae6a:	3804      	subs	r0, #4
 800ae6c:	4770      	bx	lr

0800ae6e <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 800ae6e:	4770      	bx	lr

0800ae70 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 800ae70:	4770      	bx	lr

0800ae72 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 800ae72:	b510      	push	{r4, lr}
 800ae74:	2110      	movs	r1, #16
 800ae76:	4604      	mov	r4, r0
 800ae78:	f021 ff57 	bl	802cd2a <_ZdlPvj>
 800ae7c:	4620      	mov	r0, r4
 800ae7e:	bd10      	pop	{r4, pc}

0800ae80 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 800ae80:	f1a0 0004 	sub.w	r0, r0, #4
 800ae84:	e7f5      	b.n	800ae72 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

0800ae86 <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 800ae86:	4770      	bx	lr

0800ae88 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 800ae88:	b510      	push	{r4, lr}
 800ae8a:	2200      	movs	r2, #0
 800ae8c:	6082      	str	r2, [r0, #8]
    : view(v)
 800ae8e:	4a04      	ldr	r2, [pc, #16]	; (800aea0 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 800ae90:	60c1      	str	r1, [r0, #12]
 800ae92:	f102 0408 	add.w	r4, r2, #8
 800ae96:	3224      	adds	r2, #36	; 0x24
 800ae98:	6004      	str	r4, [r0, #0]
 800ae9a:	6042      	str	r2, [r0, #4]
}
 800ae9c:	bd10      	pop	{r4, pc}
 800ae9e:	bf00      	nop
 800aea0:	08031404 	.word	0x08031404

0800aea4 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 800aea4:	4770      	bx	lr
	...

0800aea8 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 800aea8:	b510      	push	{r4, lr}
 800aeaa:	4b03      	ldr	r3, [pc, #12]	; (800aeb8 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 800aeac:	6003      	str	r3, [r0, #0]
 800aeae:	4604      	mov	r4, r0
 800aeb0:	f7fe f840 	bl	8008f34 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 800aeb4:	4620      	mov	r0, r4
 800aeb6:	bd10      	pop	{r4, pc}
 800aeb8:	08031448 	.word	0x08031448

0800aebc <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 800aebc:	b510      	push	{r4, lr}
 800aebe:	4604      	mov	r4, r0
 800aec0:	f7ff fff2 	bl	800aea8 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 800aec4:	4620      	mov	r0, r4
 800aec6:	f241 417c 	movw	r1, #5244	; 0x147c
 800aeca:	f021 ff2e 	bl	802cd2a <_ZdlPvj>
 800aece:	4620      	mov	r0, r4
 800aed0:	bd10      	pop	{r4, pc}
	...

0800aed4 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 800aed4:	b510      	push	{r4, lr}
 800aed6:	4604      	mov	r4, r0
 800aed8:	f7fe f864 	bl	8008fa4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 800aedc:	4b01      	ldr	r3, [pc, #4]	; (800aee4 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 800aede:	6023      	str	r3, [r4, #0]
}
 800aee0:	4620      	mov	r0, r4
 800aee2:	bd10      	pop	{r4, pc}
 800aee4:	08031448 	.word	0x08031448

0800aee8 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 800aee8:	f7fd bfff 	b.w	8008eea <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

0800aeec <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 800aeec:	b510      	push	{r4, lr}
 800aeee:	ed2d 8b02 	vpush	{d8}
 800aef2:	b088      	sub	sp, #32
 800aef4:	4604      	mov	r4, r0
#ifndef SIMULATOR

	// Start measurement
	uint32_t* Samples = MEAS_start_measure();
 800aef6:	f7f7 f9c5 	bl	8002284 <MEAS_start_measure>

	// calculate single measurement values
	SINGLE_MEAS single_meas = single_measurement(Samples);
 800aefa:	f7f6 f97d 	bl	80011f8 <single_measurement>

	//update GUI values
	//set gauge angle
	SMD1_Gauge.setValue(single_meas.angle);
 800aefe:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 800af02:	f504 7027 	add.w	r0, r4, #668	; 0x29c
 800af06:	ee17 1a90 	vmov	r1, s15
	SINGLE_MEAS single_meas = single_measurement(Samples);
 800af0a:	eeb0 8a40 	vmov.f32	s16, s0
 800af0e:	ed8d 1a06 	vstr	s2, [sp, #24]
	SMD1_Gauge.setValue(single_meas.angle);
 800af12:	9001      	str	r0, [sp, #4]
 800af14:	f00a fe4a 	bl	8015bac <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_Gauge.invalidate();
 800af18:	9801      	ldr	r0, [sp, #4]
 800af1a:	f00e fe91 	bl	8019c40 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintfFloat(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%.2f", 420.69);
 800af1e:	4b21      	ldr	r3, [pc, #132]	; (800afa4 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 800af20:	4a21      	ldr	r2, [pc, #132]	; (800afa8 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xbc>)
 800af22:	9303      	str	r3, [sp, #12]
 800af24:	210a      	movs	r1, #10
 800af26:	ab03      	add	r3, sp, #12
 800af28:	f204 601c 	addw	r0, r4, #1564	; 0x61c
 800af2c:	f011 f93a 	bl	801c1a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Current.invalidate();
 800af30:	f504 70dc 	add.w	r0, r4, #440	; 0x1b8
 800af34:	f00e fe84 	bl	8019c40 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", single_meas.frequency);
 800af38:	9b06      	ldr	r3, [sp, #24]
 800af3a:	4a1b      	ldr	r2, [pc, #108]	; (800afa8 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xbc>)
 800af3c:	9303      	str	r3, [sp, #12]
 800af3e:	210a      	movs	r1, #10
 800af40:	ab03      	add	r3, sp, #12
 800af42:	f504 60c6 	add.w	r0, r4, #1584	; 0x630
 800af46:	f011 f92d 	bl	801c1a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 800af4a:	f504 7001 	add.w	r0, r4, #516	; 0x204
 800af4e:	f00e fe77 	bl	8019c40 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	if(single_meas.distance >= 0 && single_meas.distance <= 200)
 800af52:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800af56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
		Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", single_meas.distance);
 800af5a:	f204 6044 	addw	r0, r4, #1604	; 0x644
	if(single_meas.distance >= 0 && single_meas.distance <= 200)
 800af5e:	db16      	blt.n	800af8e <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xa2>
 800af60:	eddf 7a12 	vldr	s15, [pc, #72]	; 800afac <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xc0>
 800af64:	eeb4 8ae7 	vcmpe.f32	s16, s15
 800af68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800af6c:	d80f      	bhi.n	800af8e <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xa2>
 800af6e:	4a0e      	ldr	r2, [pc, #56]	; (800afa8 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xbc>)
 800af70:	ed8d 8a03 	vstr	s16, [sp, #12]
 800af74:	ab03      	add	r3, sp, #12
 800af76:	210a      	movs	r1, #10
 800af78:	f011 f914 	bl	801c1a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	else
		Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "+200");


	//Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", single_meas.distance);
	SMD1_Distance.invalidate();
 800af7c:	f504 7014 	add.w	r0, r4, #592	; 0x250

#endif
}
 800af80:	b008      	add	sp, #32
 800af82:	ecbd 8b02 	vpop	{d8}
 800af86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	SMD1_Distance.invalidate();
 800af8a:	f00e be59 	b.w	8019c40 <_ZNK8touchgfx8Drawable10invalidateEv>
	else if(single_meas.distance < 0)
 800af8e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800af92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
		Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "0");
 800af96:	bf4c      	ite	mi
 800af98:	4a05      	ldrmi	r2, [pc, #20]	; (800afb0 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xc4>)
		Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "+200");
 800af9a:	4a06      	ldrpl	r2, [pc, #24]	; (800afb4 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xc8>)
 800af9c:	210a      	movs	r1, #10
 800af9e:	f010 ff15 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800afa2:	e7eb      	b.n	800af7c <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x90>
 800afa4:	43d25852 	.word	0x43d25852
 800afa8:	08031434 	.word	0x08031434
 800afac:	43480000 	.word	0x43480000
 800afb0:	08030eff 	.word	0x08030eff
 800afb4:	08031439 	.word	0x08031439

0800afb8 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 800afb8:	4770      	bx	lr

0800afba <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 800afba:	3804      	subs	r0, #4
 800afbc:	4770      	bx	lr

0800afbe <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 800afbe:	4770      	bx	lr

0800afc0 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 800afc0:	4770      	bx	lr

0800afc2 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 800afc2:	b510      	push	{r4, lr}
 800afc4:	2110      	movs	r1, #16
 800afc6:	4604      	mov	r4, r0
 800afc8:	f021 feaf 	bl	802cd2a <_ZdlPvj>
 800afcc:	4620      	mov	r0, r4
 800afce:	bd10      	pop	{r4, pc}

0800afd0 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 800afd0:	f1a0 0004 	sub.w	r0, r0, #4
 800afd4:	e7f5      	b.n	800afc2 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

0800afd6 <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 800afd6:	4770      	bx	lr

0800afd8 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 800afd8:	b510      	push	{r4, lr}
 800afda:	2200      	movs	r2, #0
 800afdc:	6082      	str	r2, [r0, #8]
    : view(v)
 800afde:	4a04      	ldr	r2, [pc, #16]	; (800aff0 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 800afe0:	60c1      	str	r1, [r0, #12]
 800afe2:	f102 0408 	add.w	r4, r2, #8
 800afe6:	3224      	adds	r2, #36	; 0x24
 800afe8:	6004      	str	r4, [r0, #0]
 800afea:	6042      	str	r2, [r0, #4]
}
 800afec:	bd10      	pop	{r4, pc}
 800afee:	bf00      	nop
 800aff0:	08031478 	.word	0x08031478

0800aff4 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 800aff4:	4770      	bx	lr
	...

0800aff8 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 800aff8:	b510      	push	{r4, lr}
 800affa:	4b03      	ldr	r3, [pc, #12]	; (800b008 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 800affc:	6003      	str	r3, [r0, #0]
 800affe:	4604      	mov	r4, r0
 800b000:	f7fe fb7c 	bl	80096fc <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 800b004:	4620      	mov	r0, r4
 800b006:	bd10      	pop	{r4, pc}
 800b008:	080314b0 	.word	0x080314b0

0800b00c <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 800b00c:	b510      	push	{r4, lr}
 800b00e:	4604      	mov	r4, r0
 800b010:	f7ff fff2 	bl	800aff8 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 800b014:	4620      	mov	r0, r4
 800b016:	f241 4178 	movw	r1, #5240	; 0x1478
 800b01a:	f021 fe86 	bl	802cd2a <_ZdlPvj>
 800b01e:	4620      	mov	r0, r4
 800b020:	bd10      	pop	{r4, pc}
	...

0800b024 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 800b024:	b510      	push	{r4, lr}
 800b026:	4604      	mov	r4, r0
 800b028:	f7fe fb90 	bl	800974c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 800b02c:	4b01      	ldr	r3, [pc, #4]	; (800b034 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 800b02e:	6023      	str	r3, [r4, #0]
}
 800b030:	4620      	mov	r0, r4
 800b032:	bd10      	pop	{r4, pc}
 800b034:	080314b0 	.word	0x080314b0

0800b038 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 800b038:	f7fe bb3c 	b.w	80096b4 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

0800b03c <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 800b03c:	2100      	movs	r1, #0
 800b03e:	223c      	movs	r2, #60	; 0x3c
 800b040:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 800b044:	4770      	bx	lr
	...

0800b048 <_ZN5Model4tickEv>:

void Model::tick()
{
 800b048:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800b04a:	4d0a      	ldr	r5, [pc, #40]	; (800b074 <_ZN5Model4tickEv+0x2c>)
{
 800b04c:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800b04e:	6828      	ldr	r0, [r5, #0]
 800b050:	f004 fe30 	bl	800fcb4 <osMessageQueueGetCount>
 800b054:	b168      	cbz	r0, 800b072 <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 800b056:	2300      	movs	r3, #0
 800b058:	6828      	ldr	r0, [r5, #0]
 800b05a:	461a      	mov	r2, r3
 800b05c:	1d21      	adds	r1, r4, #4
 800b05e:	f004 fdf5 	bl	800fc4c <osMessageQueueGet>
 800b062:	b930      	cbnz	r0, 800b072 <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 800b064:	6820      	ldr	r0, [r4, #0]
 800b066:	6861      	ldr	r1, [r4, #4]
 800b068:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 800b06a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 800b06e:	689b      	ldr	r3, [r3, #8]
 800b070:	4718      	bx	r3
}
 800b072:	bd70      	pop	{r4, r5, r6, pc}
 800b074:	200001e8 	.word	0x200001e8

0800b078 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 800b078:	4770      	bx	lr

0800b07a <_ZThn4_N21Project_InfoPresenterD1Ev>:
 800b07a:	3804      	subs	r0, #4
 800b07c:	4770      	bx	lr

0800b07e <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 800b07e:	4770      	bx	lr

0800b080 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800b080:	68c0      	ldr	r0, [r0, #12]
 800b082:	6803      	ldr	r3, [r0, #0]
 800b084:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b086:	4718      	bx	r3

0800b088 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800b088:	f1a0 0004 	sub.w	r0, r0, #4
 800b08c:	f7ff bff8 	b.w	800b080 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

0800b090 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 800b090:	b510      	push	{r4, lr}
 800b092:	2110      	movs	r1, #16
 800b094:	4604      	mov	r4, r0
 800b096:	f021 fe48 	bl	802cd2a <_ZdlPvj>
 800b09a:	4620      	mov	r0, r4
 800b09c:	bd10      	pop	{r4, pc}

0800b09e <_ZThn4_N21Project_InfoPresenterD0Ev>:
 800b09e:	f1a0 0004 	sub.w	r0, r0, #4
 800b0a2:	e7f5      	b.n	800b090 <_ZN21Project_InfoPresenterD0Ev>

0800b0a4 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 800b0a4:	b510      	push	{r4, lr}
 800b0a6:	2200      	movs	r2, #0
 800b0a8:	6082      	str	r2, [r0, #8]
    : view(v)
 800b0aa:	4a04      	ldr	r2, [pc, #16]	; (800b0bc <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 800b0ac:	60c1      	str	r1, [r0, #12]
 800b0ae:	f102 0408 	add.w	r4, r2, #8
 800b0b2:	3224      	adds	r2, #36	; 0x24
 800b0b4:	6004      	str	r4, [r0, #0]
 800b0b6:	6042      	str	r2, [r0, #4]
}
 800b0b8:	bd10      	pop	{r4, pc}
 800b0ba:	bf00      	nop
 800b0bc:	080314dc 	.word	0x080314dc

0800b0c0 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 800b0c0:	4770      	bx	lr
	...

0800b0c4 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 800b0c4:	b510      	push	{r4, lr}
 800b0c6:	4b03      	ldr	r3, [pc, #12]	; (800b0d4 <_ZN16Project_InfoViewD1Ev+0x10>)
 800b0c8:	6003      	str	r3, [r0, #0]
 800b0ca:	4604      	mov	r4, r0
 800b0cc:	f7fe fee6 	bl	8009e9c <_ZN20Project_InfoViewBaseD1Ev>
 800b0d0:	4620      	mov	r0, r4
 800b0d2:	bd10      	pop	{r4, pc}
 800b0d4:	08031514 	.word	0x08031514

0800b0d8 <_ZN16Project_InfoViewD0Ev>:
 800b0d8:	b510      	push	{r4, lr}
 800b0da:	4604      	mov	r4, r0
 800b0dc:	f7ff fff2 	bl	800b0c4 <_ZN16Project_InfoViewD1Ev>
 800b0e0:	4620      	mov	r0, r4
 800b0e2:	f241 117c 	movw	r1, #4476	; 0x117c
 800b0e6:	f021 fe20 	bl	802cd2a <_ZdlPvj>
 800b0ea:	4620      	mov	r0, r4
 800b0ec:	bd10      	pop	{r4, pc}
	...

0800b0f0 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 800b0f0:	b510      	push	{r4, lr}
 800b0f2:	4604      	mov	r4, r0
 800b0f4:	f7fe fefa 	bl	8009eec <_ZN20Project_InfoViewBaseC1Ev>
 800b0f8:	4b01      	ldr	r3, [pc, #4]	; (800b100 <_ZN16Project_InfoViewC1Ev+0x10>)
 800b0fa:	6023      	str	r3, [r4, #0]
}
 800b0fc:	4620      	mov	r0, r4
 800b0fe:	bd10      	pop	{r4, pc}
 800b100:	08031514 	.word	0x08031514

0800b104 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 800b104:	f7fe bea6 	b.w	8009e54 <_ZN20Project_InfoViewBase11setupScreenEv>

0800b108 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 800b108:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800b10a:	4a0a      	ldr	r2, [pc, #40]	; (800b134 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 800b10c:	4605      	mov	r5, r0
 800b10e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800b110:	460b      	mov	r3, r1
 800b112:	f500 7055 	add.w	r0, r0, #852	; 0x354
 800b116:	2104      	movs	r1, #4
 800b118:	f010 fe58 	bl	801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800b11c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800b120:	f00e fd8e 	bl	8019c40 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 800b124:	b92c      	cbnz	r4, 800b132 <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 800b126:	f00d fca3 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800b12a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800b12e:	f7fa bb77 	b.w	8005820 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800b132:	bd38      	pop	{r3, r4, r5, pc}
 800b134:	0802f5e6 	.word	0x0802f5e6

0800b138 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 800b138:	4770      	bx	lr

0800b13a <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 800b13a:	3804      	subs	r0, #4
 800b13c:	4770      	bx	lr

0800b13e <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 800b13e:	4770      	bx	lr

0800b140 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 800b140:	4770      	bx	lr

0800b142 <_ZN21Shutting_OffPresenterD0Ev>:
 800b142:	b510      	push	{r4, lr}
 800b144:	2110      	movs	r1, #16
 800b146:	4604      	mov	r4, r0
 800b148:	f021 fdef 	bl	802cd2a <_ZdlPvj>
 800b14c:	4620      	mov	r0, r4
 800b14e:	bd10      	pop	{r4, pc}

0800b150 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 800b150:	f1a0 0004 	sub.w	r0, r0, #4
 800b154:	e7f5      	b.n	800b142 <_ZN21Shutting_OffPresenterD0Ev>

0800b156 <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 800b156:	4770      	bx	lr

0800b158 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 800b158:	b510      	push	{r4, lr}
 800b15a:	2200      	movs	r2, #0
 800b15c:	6082      	str	r2, [r0, #8]
    : view(v)
 800b15e:	4a04      	ldr	r2, [pc, #16]	; (800b170 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 800b160:	60c1      	str	r1, [r0, #12]
 800b162:	f102 0408 	add.w	r4, r2, #8
 800b166:	3224      	adds	r2, #36	; 0x24
 800b168:	6004      	str	r4, [r0, #0]
 800b16a:	6042      	str	r2, [r0, #4]
}
 800b16c:	bd10      	pop	{r4, pc}
 800b16e:	bf00      	nop
 800b170:	08031544 	.word	0x08031544

0800b174 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 800b174:	4770      	bx	lr
	...

0800b178 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 800b178:	b510      	push	{r4, lr}
 800b17a:	4b03      	ldr	r3, [pc, #12]	; (800b188 <_ZN16Shutting_OffViewD1Ev+0x10>)
 800b17c:	6003      	str	r3, [r0, #0]
 800b17e:	4604      	mov	r4, r0
 800b180:	f7ff f8fe 	bl	800a380 <_ZN20Shutting_OffViewBaseD1Ev>
 800b184:	4620      	mov	r0, r4
 800b186:	bd10      	pop	{r4, pc}
 800b188:	0803157c 	.word	0x0803157c

0800b18c <_ZN16Shutting_OffViewD0Ev>:
 800b18c:	b510      	push	{r4, lr}
 800b18e:	4604      	mov	r4, r0
 800b190:	f7ff fff2 	bl	800b178 <_ZN16Shutting_OffViewD1Ev>
 800b194:	4620      	mov	r0, r4
 800b196:	2198      	movs	r1, #152	; 0x98
 800b198:	f021 fdc7 	bl	802cd2a <_ZdlPvj>
 800b19c:	4620      	mov	r0, r4
 800b19e:	bd10      	pop	{r4, pc}

0800b1a0 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 800b1a0:	b510      	push	{r4, lr}
 800b1a2:	4604      	mov	r4, r0
 800b1a4:	f7ff f8f6 	bl	800a394 <_ZN20Shutting_OffViewBaseC1Ev>
 800b1a8:	4b01      	ldr	r3, [pc, #4]	; (800b1b0 <_ZN16Shutting_OffViewC1Ev+0x10>)
 800b1aa:	6023      	str	r3, [r4, #0]
}
 800b1ac:	4620      	mov	r0, r4
 800b1ae:	bd10      	pop	{r4, pc}
 800b1b0:	0803157c 	.word	0x0803157c

0800b1b4 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 800b1b4:	f7ff b8e5 	b.w	800a382 <_ZN20Shutting_OffViewBase11setupScreenEv>

0800b1b8 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800b1b8:	20f0      	movs	r0, #240	; 0xf0
 800b1ba:	4770      	bx	lr

0800b1bc <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 800b1bc:	f44f 70a0 	mov.w	r0, #320	; 0x140
 800b1c0:	4770      	bx	lr
 800b1c2:	bf00      	nop

0800b1c4 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800b1c4:	2029      	movs	r0, #41	; 0x29
 800b1c6:	f7f6 bed5 	b.w	8001f74 <LCD_IO_WriteReg>
 800b1ca:	bf00      	nop

0800b1cc <ili9341_DisplayOff>:
 800b1cc:	2028      	movs	r0, #40	; 0x28
 800b1ce:	f7f6 bed1 	b.w	8001f74 <LCD_IO_WriteReg>
 800b1d2:	bf00      	nop

0800b1d4 <ili9341_Init>:
{
 800b1d4:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800b1d6:	f7f6 fe93 	bl	8001f00 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800b1da:	20ca      	movs	r0, #202	; 0xca
 800b1dc:	f7f6 feca 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b1e0:	20c3      	movs	r0, #195	; 0xc3
 800b1e2:	f7f6 fe9d 	bl	8001f20 <LCD_IO_WriteData>
 800b1e6:	2008      	movs	r0, #8
 800b1e8:	f7f6 fe9a 	bl	8001f20 <LCD_IO_WriteData>
 800b1ec:	2050      	movs	r0, #80	; 0x50
 800b1ee:	f7f6 fe97 	bl	8001f20 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b1f2:	20cf      	movs	r0, #207	; 0xcf
 800b1f4:	f7f6 febe 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b1f8:	2000      	movs	r0, #0
 800b1fa:	f7f6 fe91 	bl	8001f20 <LCD_IO_WriteData>
 800b1fe:	20c1      	movs	r0, #193	; 0xc1
 800b200:	f7f6 fe8e 	bl	8001f20 <LCD_IO_WriteData>
 800b204:	2030      	movs	r0, #48	; 0x30
 800b206:	f7f6 fe8b 	bl	8001f20 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b20a:	20ed      	movs	r0, #237	; 0xed
 800b20c:	f7f6 feb2 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b210:	2064      	movs	r0, #100	; 0x64
 800b212:	f7f6 fe85 	bl	8001f20 <LCD_IO_WriteData>
 800b216:	2003      	movs	r0, #3
 800b218:	f7f6 fe82 	bl	8001f20 <LCD_IO_WriteData>
 800b21c:	2012      	movs	r0, #18
 800b21e:	f7f6 fe7f 	bl	8001f20 <LCD_IO_WriteData>
 800b222:	2081      	movs	r0, #129	; 0x81
 800b224:	f7f6 fe7c 	bl	8001f20 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b228:	20e8      	movs	r0, #232	; 0xe8
 800b22a:	f7f6 fea3 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b22e:	2085      	movs	r0, #133	; 0x85
 800b230:	f7f6 fe76 	bl	8001f20 <LCD_IO_WriteData>
 800b234:	2000      	movs	r0, #0
 800b236:	f7f6 fe73 	bl	8001f20 <LCD_IO_WriteData>
 800b23a:	2078      	movs	r0, #120	; 0x78
 800b23c:	f7f6 fe70 	bl	8001f20 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b240:	20cb      	movs	r0, #203	; 0xcb
 800b242:	f7f6 fe97 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b246:	2039      	movs	r0, #57	; 0x39
 800b248:	f7f6 fe6a 	bl	8001f20 <LCD_IO_WriteData>
 800b24c:	202c      	movs	r0, #44	; 0x2c
 800b24e:	f7f6 fe67 	bl	8001f20 <LCD_IO_WriteData>
 800b252:	2000      	movs	r0, #0
 800b254:	f7f6 fe64 	bl	8001f20 <LCD_IO_WriteData>
 800b258:	2034      	movs	r0, #52	; 0x34
 800b25a:	f7f6 fe61 	bl	8001f20 <LCD_IO_WriteData>
 800b25e:	2002      	movs	r0, #2
 800b260:	f7f6 fe5e 	bl	8001f20 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b264:	20f7      	movs	r0, #247	; 0xf7
 800b266:	f7f6 fe85 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b26a:	2020      	movs	r0, #32
 800b26c:	f7f6 fe58 	bl	8001f20 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b270:	20ea      	movs	r0, #234	; 0xea
 800b272:	f7f6 fe7f 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b276:	2000      	movs	r0, #0
 800b278:	f7f6 fe52 	bl	8001f20 <LCD_IO_WriteData>
 800b27c:	2000      	movs	r0, #0
 800b27e:	f7f6 fe4f 	bl	8001f20 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b282:	20b1      	movs	r0, #177	; 0xb1
 800b284:	f7f6 fe76 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b288:	2000      	movs	r0, #0
 800b28a:	f7f6 fe49 	bl	8001f20 <LCD_IO_WriteData>
 800b28e:	201b      	movs	r0, #27
 800b290:	f7f6 fe46 	bl	8001f20 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b294:	20b6      	movs	r0, #182	; 0xb6
 800b296:	f7f6 fe6d 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b29a:	200a      	movs	r0, #10
 800b29c:	f7f6 fe40 	bl	8001f20 <LCD_IO_WriteData>
 800b2a0:	20a2      	movs	r0, #162	; 0xa2
 800b2a2:	f7f6 fe3d 	bl	8001f20 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b2a6:	20c0      	movs	r0, #192	; 0xc0
 800b2a8:	f7f6 fe64 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b2ac:	2010      	movs	r0, #16
 800b2ae:	f7f6 fe37 	bl	8001f20 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b2b2:	20c1      	movs	r0, #193	; 0xc1
 800b2b4:	f7f6 fe5e 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b2b8:	2010      	movs	r0, #16
 800b2ba:	f7f6 fe31 	bl	8001f20 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b2be:	20c5      	movs	r0, #197	; 0xc5
 800b2c0:	f7f6 fe58 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b2c4:	2045      	movs	r0, #69	; 0x45
 800b2c6:	f7f6 fe2b 	bl	8001f20 <LCD_IO_WriteData>
 800b2ca:	2015      	movs	r0, #21
 800b2cc:	f7f6 fe28 	bl	8001f20 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b2d0:	20c7      	movs	r0, #199	; 0xc7
 800b2d2:	f7f6 fe4f 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b2d6:	2090      	movs	r0, #144	; 0x90
 800b2d8:	f7f6 fe22 	bl	8001f20 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b2dc:	2036      	movs	r0, #54	; 0x36
 800b2de:	f7f6 fe49 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b2e2:	20c8      	movs	r0, #200	; 0xc8
 800b2e4:	f7f6 fe1c 	bl	8001f20 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b2e8:	20f2      	movs	r0, #242	; 0xf2
 800b2ea:	f7f6 fe43 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b2ee:	2000      	movs	r0, #0
 800b2f0:	f7f6 fe16 	bl	8001f20 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b2f4:	20b0      	movs	r0, #176	; 0xb0
 800b2f6:	f7f6 fe3d 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b2fa:	20c2      	movs	r0, #194	; 0xc2
 800b2fc:	f7f6 fe10 	bl	8001f20 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b300:	20b6      	movs	r0, #182	; 0xb6
 800b302:	f7f6 fe37 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b306:	200a      	movs	r0, #10
 800b308:	f7f6 fe0a 	bl	8001f20 <LCD_IO_WriteData>
 800b30c:	20a7      	movs	r0, #167	; 0xa7
 800b30e:	f7f6 fe07 	bl	8001f20 <LCD_IO_WriteData>
 800b312:	2027      	movs	r0, #39	; 0x27
 800b314:	f7f6 fe04 	bl	8001f20 <LCD_IO_WriteData>
 800b318:	2004      	movs	r0, #4
 800b31a:	f7f6 fe01 	bl	8001f20 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b31e:	202a      	movs	r0, #42	; 0x2a
 800b320:	f7f6 fe28 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b324:	2000      	movs	r0, #0
 800b326:	f7f6 fdfb 	bl	8001f20 <LCD_IO_WriteData>
 800b32a:	2000      	movs	r0, #0
 800b32c:	f7f6 fdf8 	bl	8001f20 <LCD_IO_WriteData>
 800b330:	2000      	movs	r0, #0
 800b332:	f7f6 fdf5 	bl	8001f20 <LCD_IO_WriteData>
 800b336:	20ef      	movs	r0, #239	; 0xef
 800b338:	f7f6 fdf2 	bl	8001f20 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b33c:	202b      	movs	r0, #43	; 0x2b
 800b33e:	f7f6 fe19 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b342:	2000      	movs	r0, #0
 800b344:	f7f6 fdec 	bl	8001f20 <LCD_IO_WriteData>
 800b348:	2000      	movs	r0, #0
 800b34a:	f7f6 fde9 	bl	8001f20 <LCD_IO_WriteData>
 800b34e:	2001      	movs	r0, #1
 800b350:	f7f6 fde6 	bl	8001f20 <LCD_IO_WriteData>
 800b354:	203f      	movs	r0, #63	; 0x3f
 800b356:	f7f6 fde3 	bl	8001f20 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b35a:	20f6      	movs	r0, #246	; 0xf6
 800b35c:	f7f6 fe0a 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b360:	2001      	movs	r0, #1
 800b362:	f7f6 fddd 	bl	8001f20 <LCD_IO_WriteData>
 800b366:	2000      	movs	r0, #0
 800b368:	f7f6 fdda 	bl	8001f20 <LCD_IO_WriteData>
 800b36c:	2006      	movs	r0, #6
 800b36e:	f7f6 fdd7 	bl	8001f20 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b372:	202c      	movs	r0, #44	; 0x2c
 800b374:	f7f6 fdfe 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800b378:	20c8      	movs	r0, #200	; 0xc8
 800b37a:	f7f6 fe63 	bl	8002044 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800b37e:	2026      	movs	r0, #38	; 0x26
 800b380:	f7f6 fdf8 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b384:	2001      	movs	r0, #1
 800b386:	f7f6 fdcb 	bl	8001f20 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b38a:	20e0      	movs	r0, #224	; 0xe0
 800b38c:	f7f6 fdf2 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b390:	200f      	movs	r0, #15
 800b392:	f7f6 fdc5 	bl	8001f20 <LCD_IO_WriteData>
 800b396:	2029      	movs	r0, #41	; 0x29
 800b398:	f7f6 fdc2 	bl	8001f20 <LCD_IO_WriteData>
 800b39c:	2024      	movs	r0, #36	; 0x24
 800b39e:	f7f6 fdbf 	bl	8001f20 <LCD_IO_WriteData>
 800b3a2:	200c      	movs	r0, #12
 800b3a4:	f7f6 fdbc 	bl	8001f20 <LCD_IO_WriteData>
 800b3a8:	200e      	movs	r0, #14
 800b3aa:	f7f6 fdb9 	bl	8001f20 <LCD_IO_WriteData>
 800b3ae:	2009      	movs	r0, #9
 800b3b0:	f7f6 fdb6 	bl	8001f20 <LCD_IO_WriteData>
 800b3b4:	204e      	movs	r0, #78	; 0x4e
 800b3b6:	f7f6 fdb3 	bl	8001f20 <LCD_IO_WriteData>
 800b3ba:	2078      	movs	r0, #120	; 0x78
 800b3bc:	f7f6 fdb0 	bl	8001f20 <LCD_IO_WriteData>
 800b3c0:	203c      	movs	r0, #60	; 0x3c
 800b3c2:	f7f6 fdad 	bl	8001f20 <LCD_IO_WriteData>
 800b3c6:	2009      	movs	r0, #9
 800b3c8:	f7f6 fdaa 	bl	8001f20 <LCD_IO_WriteData>
 800b3cc:	2013      	movs	r0, #19
 800b3ce:	f7f6 fda7 	bl	8001f20 <LCD_IO_WriteData>
 800b3d2:	2005      	movs	r0, #5
 800b3d4:	f7f6 fda4 	bl	8001f20 <LCD_IO_WriteData>
 800b3d8:	2017      	movs	r0, #23
 800b3da:	f7f6 fda1 	bl	8001f20 <LCD_IO_WriteData>
 800b3de:	2011      	movs	r0, #17
 800b3e0:	f7f6 fd9e 	bl	8001f20 <LCD_IO_WriteData>
 800b3e4:	2000      	movs	r0, #0
 800b3e6:	f7f6 fd9b 	bl	8001f20 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b3ea:	20e1      	movs	r0, #225	; 0xe1
 800b3ec:	f7f6 fdc2 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b3f0:	2000      	movs	r0, #0
 800b3f2:	f7f6 fd95 	bl	8001f20 <LCD_IO_WriteData>
 800b3f6:	2016      	movs	r0, #22
 800b3f8:	f7f6 fd92 	bl	8001f20 <LCD_IO_WriteData>
 800b3fc:	201b      	movs	r0, #27
 800b3fe:	f7f6 fd8f 	bl	8001f20 <LCD_IO_WriteData>
 800b402:	2004      	movs	r0, #4
 800b404:	f7f6 fd8c 	bl	8001f20 <LCD_IO_WriteData>
 800b408:	2011      	movs	r0, #17
 800b40a:	f7f6 fd89 	bl	8001f20 <LCD_IO_WriteData>
 800b40e:	2007      	movs	r0, #7
 800b410:	f7f6 fd86 	bl	8001f20 <LCD_IO_WriteData>
 800b414:	2031      	movs	r0, #49	; 0x31
 800b416:	f7f6 fd83 	bl	8001f20 <LCD_IO_WriteData>
 800b41a:	2033      	movs	r0, #51	; 0x33
 800b41c:	f7f6 fd80 	bl	8001f20 <LCD_IO_WriteData>
 800b420:	2042      	movs	r0, #66	; 0x42
 800b422:	f7f6 fd7d 	bl	8001f20 <LCD_IO_WriteData>
 800b426:	2005      	movs	r0, #5
 800b428:	f7f6 fd7a 	bl	8001f20 <LCD_IO_WriteData>
 800b42c:	200c      	movs	r0, #12
 800b42e:	f7f6 fd77 	bl	8001f20 <LCD_IO_WriteData>
 800b432:	200a      	movs	r0, #10
 800b434:	f7f6 fd74 	bl	8001f20 <LCD_IO_WriteData>
 800b438:	2028      	movs	r0, #40	; 0x28
 800b43a:	f7f6 fd71 	bl	8001f20 <LCD_IO_WriteData>
 800b43e:	202f      	movs	r0, #47	; 0x2f
 800b440:	f7f6 fd6e 	bl	8001f20 <LCD_IO_WriteData>
 800b444:	200f      	movs	r0, #15
 800b446:	f7f6 fd6b 	bl	8001f20 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b44a:	2011      	movs	r0, #17
 800b44c:	f7f6 fd92 	bl	8001f74 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800b450:	20c8      	movs	r0, #200	; 0xc8
 800b452:	f7f6 fdf7 	bl	8002044 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800b456:	2029      	movs	r0, #41	; 0x29
 800b458:	f7f6 fd8c 	bl	8001f74 <LCD_IO_WriteReg>
}
 800b45c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 800b460:	202c      	movs	r0, #44	; 0x2c
 800b462:	f7f6 bd87 	b.w	8001f74 <LCD_IO_WriteReg>
 800b466:	bf00      	nop

0800b468 <ili9341_ReadID>:
{
 800b468:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800b46a:	f7f6 fd49 	bl	8001f00 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 800b46e:	2103      	movs	r1, #3
 800b470:	20d3      	movs	r0, #211	; 0xd3
 800b472:	f7f6 fda9 	bl	8001fc8 <LCD_IO_ReadData>
}
 800b476:	b280      	uxth	r0, r0
 800b478:	bd08      	pop	{r3, pc}
 800b47a:	bf00      	nop

0800b47c <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 800b47c:	221f      	movs	r2, #31
 800b47e:	210b      	movs	r1, #11
 800b480:	b2c0      	uxtb	r0, r0
 800b482:	f7f6 bcef 	b.w	8001e64 <IOE_Write>
 800b486:	bf00      	nop

0800b488 <stmpe811_Reset>:
{
 800b488:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800b48a:	b2c4      	uxtb	r4, r0
 800b48c:	2202      	movs	r2, #2
 800b48e:	2103      	movs	r1, #3
 800b490:	4620      	mov	r0, r4
 800b492:	f7f6 fce7 	bl	8001e64 <IOE_Write>
  IOE_Delay(10); 
 800b496:	200a      	movs	r0, #10
 800b498:	f7f6 fd30 	bl	8001efc <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800b49c:	4620      	mov	r0, r4
 800b49e:	2200      	movs	r2, #0
 800b4a0:	2103      	movs	r1, #3
 800b4a2:	f7f6 fcdf 	bl	8001e64 <IOE_Write>
}
 800b4a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800b4aa:	2002      	movs	r0, #2
 800b4ac:	f7f6 bd26 	b.w	8001efc <IOE_Delay>

0800b4b0 <stmpe811_ReadID>:
{
 800b4b0:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b4b2:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 800b4b4:	f7f6 fcd2 	bl	8001e5c <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b4b8:	2100      	movs	r1, #0
 800b4ba:	4620      	mov	r0, r4
 800b4bc:	f7f6 fcea 	bl	8001e94 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b4c0:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b4c2:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b4c4:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b4c6:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b4c8:	f7f6 fce4 	bl	8001e94 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b4cc:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 800b4d0:	b280      	uxth	r0, r0
 800b4d2:	bd10      	pop	{r4, pc}

0800b4d4 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 800b4d4:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800b4d6:	b2c4      	uxtb	r4, r0
 800b4d8:	2140      	movs	r1, #64	; 0x40
 800b4da:	4620      	mov	r0, r4
 800b4dc:	f7f6 fcda 	bl	8001e94 <IOE_Read>
  
  if(state > 0)
 800b4e0:	0603      	lsls	r3, r0, #24
 800b4e2:	d40b      	bmi.n	800b4fc <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b4e4:	4620      	mov	r0, r4
 800b4e6:	2201      	movs	r2, #1
 800b4e8:	214b      	movs	r1, #75	; 0x4b
 800b4ea:	f7f6 fcbb 	bl	8001e64 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b4ee:	4620      	mov	r0, r4
 800b4f0:	2200      	movs	r2, #0
 800b4f2:	214b      	movs	r1, #75	; 0x4b
 800b4f4:	f7f6 fcb6 	bl	8001e64 <IOE_Write>
  uint8_t ret = 0;
 800b4f8:	2000      	movs	r0, #0
  }
  
  return ret;
}
 800b4fa:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 800b4fc:	214c      	movs	r1, #76	; 0x4c
 800b4fe:	4620      	mov	r0, r4
 800b500:	f7f6 fcc8 	bl	8001e94 <IOE_Read>
      ret = 1;
 800b504:	3800      	subs	r0, #0
 800b506:	bf18      	it	ne
 800b508:	2001      	movne	r0, #1
}
 800b50a:	bd10      	pop	{r4, pc}

0800b50c <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 800b50c:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800b50e:	210b      	movs	r1, #11
 800b510:	b2c0      	uxtb	r0, r0
 800b512:	f7f6 fcbf 	bl	8001e94 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 800b516:	f000 001f 	and.w	r0, r0, #31
 800b51a:	bd08      	pop	{r3, pc}

0800b51c <stmpe811_TS_GetXY>:
{
 800b51c:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b51e:	2304      	movs	r3, #4
{
 800b520:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b522:	b2c4      	uxtb	r4, r0
{
 800b524:	4615      	mov	r5, r2
 800b526:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b528:	eb0d 0203 	add.w	r2, sp, r3
 800b52c:	21d7      	movs	r1, #215	; 0xd7
 800b52e:	4620      	mov	r0, r4
 800b530:	f7f6 fccc 	bl	8001ecc <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 800b534:	9b01      	ldr	r3, [sp, #4]
 800b536:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800b538:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800b53a:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800b53e:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b540:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800b542:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b544:	2201      	movs	r2, #1
 800b546:	214b      	movs	r1, #75	; 0x4b
 800b548:	f7f6 fc8c 	bl	8001e64 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b54c:	2200      	movs	r2, #0
 800b54e:	214b      	movs	r1, #75	; 0x4b
 800b550:	4620      	mov	r0, r4
 800b552:	f7f6 fc87 	bl	8001e64 <IOE_Write>
}
 800b556:	b002      	add	sp, #8
 800b558:	bd70      	pop	{r4, r5, r6, pc}
 800b55a:	bf00      	nop

0800b55c <stmpe811_TS_Start>:
{
 800b55c:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800b55e:	b2c4      	uxtb	r4, r0
 800b560:	2104      	movs	r1, #4
 800b562:	4620      	mov	r0, r4
 800b564:	f7f6 fc96 	bl	8001e94 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b568:	2104      	movs	r1, #4
 800b56a:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800b56e:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b570:	4620      	mov	r0, r4
 800b572:	f7f6 fc77 	bl	8001e64 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800b576:	2117      	movs	r1, #23
 800b578:	4620      	mov	r0, r4
 800b57a:	f7f6 fc8b 	bl	8001e94 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800b57e:	2117      	movs	r1, #23
 800b580:	f000 020f 	and.w	r2, r0, #15
 800b584:	4620      	mov	r0, r4
 800b586:	f7f6 fc6d 	bl	8001e64 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b58a:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 800b58e:	4620      	mov	r0, r4
 800b590:	2104      	movs	r1, #4
 800b592:	f7f6 fc67 	bl	8001e64 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800b596:	2249      	movs	r2, #73	; 0x49
 800b598:	2120      	movs	r1, #32
 800b59a:	4620      	mov	r0, r4
 800b59c:	f7f6 fc62 	bl	8001e64 <IOE_Write>
  IOE_Delay(2); 
 800b5a0:	2002      	movs	r0, #2
 800b5a2:	f7f6 fcab 	bl	8001efc <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 800b5a6:	4620      	mov	r0, r4
 800b5a8:	2201      	movs	r2, #1
 800b5aa:	2121      	movs	r1, #33	; 0x21
 800b5ac:	f7f6 fc5a 	bl	8001e64 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 800b5b0:	4620      	mov	r0, r4
 800b5b2:	229a      	movs	r2, #154	; 0x9a
 800b5b4:	2141      	movs	r1, #65	; 0x41
 800b5b6:	f7f6 fc55 	bl	8001e64 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800b5ba:	4620      	mov	r0, r4
 800b5bc:	2201      	movs	r2, #1
 800b5be:	214a      	movs	r1, #74	; 0x4a
 800b5c0:	f7f6 fc50 	bl	8001e64 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b5c4:	4620      	mov	r0, r4
 800b5c6:	2201      	movs	r2, #1
 800b5c8:	214b      	movs	r1, #75	; 0x4b
 800b5ca:	f7f6 fc4b 	bl	8001e64 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b5ce:	4620      	mov	r0, r4
 800b5d0:	2200      	movs	r2, #0
 800b5d2:	214b      	movs	r1, #75	; 0x4b
 800b5d4:	f7f6 fc46 	bl	8001e64 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 800b5d8:	4620      	mov	r0, r4
 800b5da:	2201      	movs	r2, #1
 800b5dc:	2156      	movs	r1, #86	; 0x56
 800b5de:	f7f6 fc41 	bl	8001e64 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800b5e2:	4620      	mov	r0, r4
 800b5e4:	2201      	movs	r2, #1
 800b5e6:	2158      	movs	r1, #88	; 0x58
 800b5e8:	f7f6 fc3c 	bl	8001e64 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 800b5ec:	4620      	mov	r0, r4
 800b5ee:	2201      	movs	r2, #1
 800b5f0:	2140      	movs	r1, #64	; 0x40
 800b5f2:	f7f6 fc37 	bl	8001e64 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800b5f6:	4620      	mov	r0, r4
 800b5f8:	22ff      	movs	r2, #255	; 0xff
 800b5fa:	210b      	movs	r1, #11
 800b5fc:	f7f6 fc32 	bl	8001e64 <IOE_Write>
}
 800b600:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 800b604:	2002      	movs	r0, #2
 800b606:	f7f6 bc79 	b.w	8001efc <IOE_Delay>
 800b60a:	bf00      	nop

0800b60c <stmpe811_TS_DisableIT>:
{
 800b60c:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800b60e:	b2c4      	uxtb	r4, r0
 800b610:	2109      	movs	r1, #9
 800b612:	4620      	mov	r0, r4
 800b614:	f7f6 fc3e 	bl	8001e94 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800b618:	2109      	movs	r1, #9
 800b61a:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 800b61e:	4620      	mov	r0, r4
 800b620:	f7f6 fc20 	bl	8001e64 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b624:	210a      	movs	r1, #10
 800b626:	4620      	mov	r0, r4
 800b628:	f7f6 fc34 	bl	8001e94 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b62c:	210a      	movs	r1, #10
 800b62e:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 800b632:	4620      	mov	r0, r4
}
 800b634:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b638:	f7f6 bc14 	b.w	8001e64 <IOE_Write>

0800b63c <stmpe811_TS_EnableIT>:
{
 800b63c:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b63e:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 800b640:	f7f6 fc0e 	bl	8001e60 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b644:	210a      	movs	r1, #10
 800b646:	4620      	mov	r0, r4
 800b648:	f7f6 fc24 	bl	8001e94 <IOE_Read>
  tmp |= Source; 
 800b64c:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b650:	b2c2      	uxtb	r2, r0
 800b652:	210a      	movs	r1, #10
 800b654:	4620      	mov	r0, r4
 800b656:	f7f6 fc05 	bl	8001e64 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800b65a:	2109      	movs	r1, #9
 800b65c:	4620      	mov	r0, r4
 800b65e:	f7f6 fc19 	bl	8001e94 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 800b662:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800b666:	b2c2      	uxtb	r2, r0
 800b668:	2109      	movs	r1, #9
 800b66a:	4620      	mov	r0, r4
}
 800b66c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800b670:	f7f6 bbf8 	b.w	8001e64 <IOE_Write>

0800b674 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800b674:	4a10      	ldr	r2, [pc, #64]	; (800b6b8 <stmpe811_Init+0x44>)
 800b676:	7813      	ldrb	r3, [r2, #0]
 800b678:	4298      	cmp	r0, r3
 800b67a:	d004      	beq.n	800b686 <stmpe811_Init+0x12>
 800b67c:	7851      	ldrb	r1, [r2, #1]
 800b67e:	4288      	cmp	r0, r1
 800b680:	d001      	beq.n	800b686 <stmpe811_Init+0x12>
 800b682:	b113      	cbz	r3, 800b68a <stmpe811_Init+0x16>
 800b684:	b101      	cbz	r1, 800b688 <stmpe811_Init+0x14>
 800b686:	4770      	bx	lr
 800b688:	2301      	movs	r3, #1
{
 800b68a:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 800b68c:	b2c4      	uxtb	r4, r0
 800b68e:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 800b690:	f7f6 fbe4 	bl	8001e5c <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800b694:	2202      	movs	r2, #2
 800b696:	2103      	movs	r1, #3
 800b698:	4620      	mov	r0, r4
 800b69a:	f7f6 fbe3 	bl	8001e64 <IOE_Write>
  IOE_Delay(10); 
 800b69e:	200a      	movs	r0, #10
 800b6a0:	f7f6 fc2c 	bl	8001efc <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800b6a4:	4620      	mov	r0, r4
 800b6a6:	2200      	movs	r2, #0
 800b6a8:	2103      	movs	r1, #3
 800b6aa:	f7f6 fbdb 	bl	8001e64 <IOE_Write>
}
 800b6ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800b6b2:	2002      	movs	r0, #2
 800b6b4:	f7f6 bc22 	b.w	8001efc <IOE_Delay>
 800b6b8:	20002a2c 	.word	0x20002a2c

0800b6bc <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800b6bc:	4b05      	ldr	r3, [pc, #20]	; (800b6d4 <SystemInit+0x18>)
 800b6be:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800b6c2:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800b6c6:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800b6ca:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800b6ce:	6099      	str	r1, [r3, #8]
#endif
}
 800b6d0:	4770      	bx	lr
 800b6d2:	bf00      	nop
 800b6d4:	e000ed00 	.word	0xe000ed00

0800b6d8 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800b6d8:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800b6da:	4b0b      	ldr	r3, [pc, #44]	; (800b708 <HAL_Init+0x30>)
 800b6dc:	681a      	ldr	r2, [r3, #0]
 800b6de:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b6e2:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800b6e4:	681a      	ldr	r2, [r3, #0]
 800b6e6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b6ea:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800b6ec:	681a      	ldr	r2, [r3, #0]
 800b6ee:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b6f2:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800b6f4:	2003      	movs	r0, #3
 800b6f6:	f000 f82d 	bl	800b754 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800b6fa:	2000      	movs	r0, #0
 800b6fc:	f7f7 f8d4 	bl	80028a8 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800b700:	f7f6 fdf4 	bl	80022ec <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800b704:	2000      	movs	r0, #0
 800b706:	bd08      	pop	{r3, pc}
 800b708:	40023c00 	.word	0x40023c00

0800b70c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800b70c:	4a03      	ldr	r2, [pc, #12]	; (800b71c <HAL_IncTick+0x10>)
 800b70e:	4b04      	ldr	r3, [pc, #16]	; (800b720 <HAL_IncTick+0x14>)
 800b710:	6811      	ldr	r1, [r2, #0]
 800b712:	781b      	ldrb	r3, [r3, #0]
 800b714:	440b      	add	r3, r1
 800b716:	6013      	str	r3, [r2, #0]
}
 800b718:	4770      	bx	lr
 800b71a:	bf00      	nop
 800b71c:	20002a30 	.word	0x20002a30
 800b720:	2000007c 	.word	0x2000007c

0800b724 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800b724:	4b01      	ldr	r3, [pc, #4]	; (800b72c <HAL_GetTick+0x8>)
 800b726:	6818      	ldr	r0, [r3, #0]
}
 800b728:	4770      	bx	lr
 800b72a:	bf00      	nop
 800b72c:	20002a30 	.word	0x20002a30

0800b730 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800b730:	b538      	push	{r3, r4, r5, lr}
 800b732:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800b734:	f7ff fff6 	bl	800b724 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800b738:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 800b73a:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 800b73c:	d002      	beq.n	800b744 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 800b73e:	4b04      	ldr	r3, [pc, #16]	; (800b750 <HAL_Delay+0x20>)
 800b740:	781b      	ldrb	r3, [r3, #0]
 800b742:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800b744:	f7ff ffee 	bl	800b724 <HAL_GetTick>
 800b748:	1b43      	subs	r3, r0, r5
 800b74a:	42a3      	cmp	r3, r4
 800b74c:	d3fa      	bcc.n	800b744 <HAL_Delay+0x14>
  {
  }
}
 800b74e:	bd38      	pop	{r3, r4, r5, pc}
 800b750:	2000007c 	.word	0x2000007c

0800b754 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800b754:	4907      	ldr	r1, [pc, #28]	; (800b774 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800b756:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800b758:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800b75a:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800b75e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800b762:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800b764:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800b766:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800b76a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800b76e:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800b770:	4770      	bx	lr
 800b772:	bf00      	nop
 800b774:	e000ed00 	.word	0xe000ed00

0800b778 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800b778:	4b1c      	ldr	r3, [pc, #112]	; (800b7ec <HAL_NVIC_SetPriority+0x74>)
 800b77a:	68db      	ldr	r3, [r3, #12]
 800b77c:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800b780:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800b782:	f1c3 0e07 	rsb	lr, r3, #7
 800b786:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b78a:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800b78e:	bf28      	it	cs
 800b790:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b794:	f1bc 0f06 	cmp.w	ip, #6
 800b798:	d91b      	bls.n	800b7d2 <HAL_NVIC_SetPriority+0x5a>
 800b79a:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800b79c:	f04f 3cff 	mov.w	ip, #4294967295
 800b7a0:	fa0c fc03 	lsl.w	ip, ip, r3
 800b7a4:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800b7a8:	f04f 3cff 	mov.w	ip, #4294967295
 800b7ac:	fa0c fc0e 	lsl.w	ip, ip, lr
 800b7b0:	ea21 010c 	bic.w	r1, r1, ip
 800b7b4:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 800b7b6:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800b7b8:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 800b7bc:	db0c      	blt.n	800b7d8 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b7be:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 800b7c2:	0109      	lsls	r1, r1, #4
 800b7c4:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 800b7c8:	b2c9      	uxtb	r1, r1
 800b7ca:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800b7ce:	f85d fb04 	ldr.w	pc, [sp], #4
 800b7d2:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b7d4:	4613      	mov	r3, r2
 800b7d6:	e7e7      	b.n	800b7a8 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b7d8:	4b05      	ldr	r3, [pc, #20]	; (800b7f0 <HAL_NVIC_SetPriority+0x78>)
 800b7da:	f000 000f 	and.w	r0, r0, #15
 800b7de:	0109      	lsls	r1, r1, #4
 800b7e0:	4403      	add	r3, r0
 800b7e2:	b2c9      	uxtb	r1, r1
 800b7e4:	7619      	strb	r1, [r3, #24]
 800b7e6:	f85d fb04 	ldr.w	pc, [sp], #4
 800b7ea:	bf00      	nop
 800b7ec:	e000ed00 	.word	0xe000ed00
 800b7f0:	e000ecfc 	.word	0xe000ecfc

0800b7f4 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800b7f4:	2800      	cmp	r0, #0
 800b7f6:	db07      	blt.n	800b808 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800b7f8:	0941      	lsrs	r1, r0, #5
 800b7fa:	4a04      	ldr	r2, [pc, #16]	; (800b80c <HAL_NVIC_EnableIRQ+0x18>)
 800b7fc:	f000 001f 	and.w	r0, r0, #31
 800b800:	2301      	movs	r3, #1
 800b802:	4083      	lsls	r3, r0
 800b804:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800b808:	4770      	bx	lr
 800b80a:	bf00      	nop
 800b80c:	e000e100 	.word	0xe000e100

0800b810 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800b810:	b180      	cbz	r0, 800b834 <HAL_CRC_Init+0x24>
{
 800b812:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800b814:	7943      	ldrb	r3, [r0, #5]
 800b816:	4604      	mov	r4, r0
 800b818:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b81c:	b11b      	cbz	r3, 800b826 <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800b81e:	2301      	movs	r3, #1
 800b820:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800b822:	2000      	movs	r0, #0
}
 800b824:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 800b826:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 800b828:	f7f6 fd80 	bl	800232c <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 800b82c:	2301      	movs	r3, #1
 800b82e:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 800b830:	2000      	movs	r0, #0
}
 800b832:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800b834:	2001      	movs	r0, #1
}
 800b836:	4770      	bx	lr

0800b838 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800b838:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800b83c:	2b02      	cmp	r3, #2
 800b83e:	d003      	beq.n	800b848 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800b840:	2380      	movs	r3, #128	; 0x80
 800b842:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 800b844:	2001      	movs	r0, #1
 800b846:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 800b848:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800b84a:	2305      	movs	r3, #5
 800b84c:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 800b850:	6813      	ldr	r3, [r2, #0]
 800b852:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 800b856:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 800b858:	6013      	str	r3, [r2, #0]
}
 800b85a:	4770      	bx	lr

0800b85c <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 800b85c:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 800b860:	4770      	bx	lr
 800b862:	bf00      	nop

0800b864 <FLASH_SetErrorCode>:
  * @brief  Set the specific FLASH error flag.
  * @retval None
  */
static void FLASH_SetErrorCode(void)
{ 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 800b864:	4b21      	ldr	r3, [pc, #132]	; (800b8ec <FLASH_SetErrorCode+0x88>)
 800b866:	68da      	ldr	r2, [r3, #12]
 800b868:	06d0      	lsls	r0, r2, #27
 800b86a:	d505      	bpl.n	800b878 <FLASH_SetErrorCode+0x14>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 800b86c:	4920      	ldr	r1, [pc, #128]	; (800b8f0 <FLASH_SetErrorCode+0x8c>)
 800b86e:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH write protection error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 800b870:	2010      	movs	r0, #16
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 800b872:	4302      	orrs	r2, r0
 800b874:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 800b876:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 800b878:	4b1c      	ldr	r3, [pc, #112]	; (800b8ec <FLASH_SetErrorCode+0x88>)
 800b87a:	68da      	ldr	r2, [r3, #12]
 800b87c:	0691      	lsls	r1, r2, #26
 800b87e:	d506      	bpl.n	800b88e <FLASH_SetErrorCode+0x2a>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 800b880:	491b      	ldr	r1, [pc, #108]	; (800b8f0 <FLASH_SetErrorCode+0x8c>)
 800b882:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH Programming alignment error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 800b884:	2020      	movs	r0, #32
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 800b886:	f042 0208 	orr.w	r2, r2, #8
 800b88a:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 800b88c:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 800b88e:	4b17      	ldr	r3, [pc, #92]	; (800b8ec <FLASH_SetErrorCode+0x88>)
 800b890:	68da      	ldr	r2, [r3, #12]
 800b892:	0652      	lsls	r2, r2, #25
 800b894:	d506      	bpl.n	800b8a4 <FLASH_SetErrorCode+0x40>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 800b896:	4916      	ldr	r1, [pc, #88]	; (800b8f0 <FLASH_SetErrorCode+0x8c>)
 800b898:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming parallelism error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 800b89a:	2040      	movs	r0, #64	; 0x40
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 800b89c:	f042 0204 	orr.w	r2, r2, #4
 800b8a0:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 800b8a2:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 800b8a4:	4b11      	ldr	r3, [pc, #68]	; (800b8ec <FLASH_SetErrorCode+0x88>)
 800b8a6:	68da      	ldr	r2, [r3, #12]
 800b8a8:	0610      	lsls	r0, r2, #24
 800b8aa:	d506      	bpl.n	800b8ba <FLASH_SetErrorCode+0x56>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 800b8ac:	4910      	ldr	r1, [pc, #64]	; (800b8f0 <FLASH_SetErrorCode+0x8c>)
 800b8ae:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming sequence error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 800b8b0:	2080      	movs	r0, #128	; 0x80
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 800b8b2:	f042 0202 	orr.w	r2, r2, #2
 800b8b6:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 800b8b8:	60d8      	str	r0, [r3, #12]
  }
#if defined(FLASH_SR_RDERR) 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 800b8ba:	4b0c      	ldr	r3, [pc, #48]	; (800b8ec <FLASH_SetErrorCode+0x88>)
 800b8bc:	68da      	ldr	r2, [r3, #12]
 800b8be:	05d1      	lsls	r1, r2, #23
 800b8c0:	d507      	bpl.n	800b8d2 <FLASH_SetErrorCode+0x6e>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 800b8c2:	490b      	ldr	r1, [pc, #44]	; (800b8f0 <FLASH_SetErrorCode+0x8c>)
 800b8c4:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Proprietary readout protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 800b8c6:	f44f 7080 	mov.w	r0, #256	; 0x100
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 800b8ca:	f042 0201 	orr.w	r2, r2, #1
 800b8ce:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 800b8d0:	60d8      	str	r0, [r3, #12]
  }
#endif /* FLASH_SR_RDERR */  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 800b8d2:	4b06      	ldr	r3, [pc, #24]	; (800b8ec <FLASH_SetErrorCode+0x88>)
 800b8d4:	68da      	ldr	r2, [r3, #12]
 800b8d6:	0792      	lsls	r2, r2, #30
 800b8d8:	d506      	bpl.n	800b8e8 <FLASH_SetErrorCode+0x84>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 800b8da:	4905      	ldr	r1, [pc, #20]	; (800b8f0 <FLASH_SetErrorCode+0x8c>)
 800b8dc:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Operation error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 800b8de:	2002      	movs	r0, #2
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 800b8e0:	f042 0220 	orr.w	r2, r2, #32
 800b8e4:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 800b8e6:	60d8      	str	r0, [r3, #12]
  }
}
 800b8e8:	4770      	bx	lr
 800b8ea:	bf00      	nop
 800b8ec:	40023c00 	.word	0x40023c00
 800b8f0:	20002a34 	.word	0x20002a34

0800b8f4 <HAL_FLASH_Program>:
{
 800b8f4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  __HAL_LOCK(&pFlash);
 800b8f8:	4f4d      	ldr	r7, [pc, #308]	; (800ba30 <HAL_FLASH_Program+0x13c>)
{
 800b8fa:	469b      	mov	fp, r3
  __HAL_LOCK(&pFlash);
 800b8fc:	7e3b      	ldrb	r3, [r7, #24]
 800b8fe:	2b01      	cmp	r3, #1
 800b900:	d060      	beq.n	800b9c4 <HAL_FLASH_Program+0xd0>
 800b902:	2301      	movs	r3, #1
 800b904:	763b      	strb	r3, [r7, #24]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b906:	2300      	movs	r3, #0
 800b908:	4681      	mov	r9, r0
 800b90a:	468a      	mov	sl, r1
 800b90c:	4690      	mov	r8, r2
 800b90e:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 800b910:	f7ff ff08 	bl	800b724 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b914:	4d47      	ldr	r5, [pc, #284]	; (800ba34 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 800b916:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b918:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b91c:	e004      	b.n	800b928 <HAL_FLASH_Program+0x34>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b91e:	f7ff ff01 	bl	800b724 <HAL_GetTick>
 800b922:	1b00      	subs	r0, r0, r4
 800b924:	42b0      	cmp	r0, r6
 800b926:	d848      	bhi.n	800b9ba <HAL_FLASH_Program+0xc6>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b928:	68eb      	ldr	r3, [r5, #12]
 800b92a:	03d8      	lsls	r0, r3, #15
 800b92c:	d4f7      	bmi.n	800b91e <HAL_FLASH_Program+0x2a>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800b92e:	68eb      	ldr	r3, [r5, #12]
 800b930:	07d9      	lsls	r1, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800b932:	bf44      	itt	mi
 800b934:	2301      	movmi	r3, #1
 800b936:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800b938:	4b3e      	ldr	r3, [pc, #248]	; (800ba34 <HAL_FLASH_Program+0x140>)
 800b93a:	68da      	ldr	r2, [r3, #12]
 800b93c:	f412 7ff9 	tst.w	r2, #498	; 0x1f2
 800b940:	d154      	bne.n	800b9ec <HAL_FLASH_Program+0xf8>
    if(TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 800b942:	f1b9 0f00 	cmp.w	r9, #0
 800b946:	d040      	beq.n	800b9ca <HAL_FLASH_Program+0xd6>
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 800b948:	f1b9 0f01 	cmp.w	r9, #1
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b94c:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 800b94e:	d051      	beq.n	800b9f4 <HAL_FLASH_Program+0x100>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b950:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800b954:	611a      	str	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 800b956:	f1b9 0f02 	cmp.w	r9, #2
  FLASH->CR |= FLASH_PSIZE_WORD;
 800b95a:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 800b95c:	d05e      	beq.n	800ba1c <HAL_FLASH_Program+0x128>
  FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 800b95e:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 800b962:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b964:	691a      	ldr	r2, [r3, #16]
 800b966:	f042 0201 	orr.w	r2, r2, #1
 800b96a:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = (uint32_t)Data;
 800b96c:	f8ca 8000 	str.w	r8, [sl]
 800b970:	f3bf 8f6f 	isb	sy
  *(__IO uint32_t*)(Address+4) = (uint32_t)(Data >> 32);
 800b974:	f8ca b004 	str.w	fp, [sl, #4]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b978:	2300      	movs	r3, #0
 800b97a:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 800b97c:	f7ff fed2 	bl	800b724 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b980:	4d2c      	ldr	r5, [pc, #176]	; (800ba34 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 800b982:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b984:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b988:	e004      	b.n	800b994 <HAL_FLASH_Program+0xa0>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b98a:	f7ff fecb 	bl	800b724 <HAL_GetTick>
 800b98e:	1b00      	subs	r0, r0, r4
 800b990:	42b0      	cmp	r0, r6
 800b992:	d829      	bhi.n	800b9e8 <HAL_FLASH_Program+0xf4>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b994:	68eb      	ldr	r3, [r5, #12]
 800b996:	03da      	lsls	r2, r3, #15
 800b998:	d4f7      	bmi.n	800b98a <HAL_FLASH_Program+0x96>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800b99a:	68eb      	ldr	r3, [r5, #12]
 800b99c:	07db      	lsls	r3, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800b99e:	bf44      	itt	mi
 800b9a0:	2301      	movmi	r3, #1
 800b9a2:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800b9a4:	4b23      	ldr	r3, [pc, #140]	; (800ba34 <HAL_FLASH_Program+0x140>)
 800b9a6:	68d8      	ldr	r0, [r3, #12]
 800b9a8:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 800b9ac:	d132      	bne.n	800ba14 <HAL_FLASH_Program+0x120>
    FLASH->CR &= (~FLASH_CR_PG);  
 800b9ae:	4a21      	ldr	r2, [pc, #132]	; (800ba34 <HAL_FLASH_Program+0x140>)
 800b9b0:	6913      	ldr	r3, [r2, #16]
 800b9b2:	f023 0301 	bic.w	r3, r3, #1
 800b9b6:	6113      	str	r3, [r2, #16]
 800b9b8:	e000      	b.n	800b9bc <HAL_FLASH_Program+0xc8>
 800b9ba:	2003      	movs	r0, #3
  __HAL_UNLOCK(&pFlash);
 800b9bc:	2300      	movs	r3, #0
 800b9be:	763b      	strb	r3, [r7, #24]
}
 800b9c0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  __HAL_LOCK(&pFlash);
 800b9c4:	2002      	movs	r0, #2
}
 800b9c6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b9ca:	691a      	ldr	r2, [r3, #16]
 800b9cc:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800b9d0:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_BYTE;
 800b9d2:	691a      	ldr	r2, [r3, #16]
 800b9d4:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b9d6:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_Byte(Address, (uint8_t) Data);
 800b9d8:	fa5f f888 	uxtb.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 800b9dc:	f042 0201 	orr.w	r2, r2, #1
 800b9e0:	611a      	str	r2, [r3, #16]
  *(__IO uint8_t*)Address = Data;
 800b9e2:	f88a 8000 	strb.w	r8, [sl]
}
 800b9e6:	e7c7      	b.n	800b978 <HAL_FLASH_Program+0x84>
        return HAL_TIMEOUT;
 800b9e8:	2003      	movs	r0, #3
 800b9ea:	e7e0      	b.n	800b9ae <HAL_FLASH_Program+0xba>
    FLASH_SetErrorCode();
 800b9ec:	f7ff ff3a 	bl	800b864 <FLASH_SetErrorCode>
    return HAL_ERROR;
 800b9f0:	2001      	movs	r0, #1
 800b9f2:	e7e3      	b.n	800b9bc <HAL_FLASH_Program+0xc8>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b9f4:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800b9f8:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 800b9fa:	691a      	ldr	r2, [r3, #16]
 800b9fc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800ba00:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800ba02:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_HalfWord(Address, (uint16_t) Data);
 800ba04:	fa1f f888 	uxth.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 800ba08:	f042 0201 	orr.w	r2, r2, #1
 800ba0c:	611a      	str	r2, [r3, #16]
  *(__IO uint16_t*)Address = Data;
 800ba0e:	f8aa 8000 	strh.w	r8, [sl]
}
 800ba12:	e7b1      	b.n	800b978 <HAL_FLASH_Program+0x84>
    FLASH_SetErrorCode();
 800ba14:	f7ff ff26 	bl	800b864 <FLASH_SetErrorCode>
    return HAL_ERROR;
 800ba18:	2001      	movs	r0, #1
 800ba1a:	e7c8      	b.n	800b9ae <HAL_FLASH_Program+0xba>
  FLASH->CR |= FLASH_PSIZE_WORD;
 800ba1c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ba20:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800ba22:	691a      	ldr	r2, [r3, #16]
 800ba24:	f042 0201 	orr.w	r2, r2, #1
 800ba28:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = Data;
 800ba2a:	f8ca 8000 	str.w	r8, [sl]
}
 800ba2e:	e7a3      	b.n	800b978 <HAL_FLASH_Program+0x84>
 800ba30:	20002a34 	.word	0x20002a34
 800ba34:	40023c00 	.word	0x40023c00

0800ba38 <HAL_FLASH_Unlock>:
  if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 800ba38:	4b06      	ldr	r3, [pc, #24]	; (800ba54 <HAL_FLASH_Unlock+0x1c>)
 800ba3a:	691a      	ldr	r2, [r3, #16]
 800ba3c:	2a00      	cmp	r2, #0
 800ba3e:	db01      	blt.n	800ba44 <HAL_FLASH_Unlock+0xc>
  HAL_StatusTypeDef status = HAL_OK;
 800ba40:	2000      	movs	r0, #0
}
 800ba42:	4770      	bx	lr
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 800ba44:	4904      	ldr	r1, [pc, #16]	; (800ba58 <HAL_FLASH_Unlock+0x20>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 800ba46:	4a05      	ldr	r2, [pc, #20]	; (800ba5c <HAL_FLASH_Unlock+0x24>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 800ba48:	6059      	str	r1, [r3, #4]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 800ba4a:	605a      	str	r2, [r3, #4]
    if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 800ba4c:	6918      	ldr	r0, [r3, #16]
  HAL_StatusTypeDef status = HAL_OK;
 800ba4e:	0fc0      	lsrs	r0, r0, #31
 800ba50:	4770      	bx	lr
 800ba52:	bf00      	nop
 800ba54:	40023c00 	.word	0x40023c00
 800ba58:	45670123 	.word	0x45670123
 800ba5c:	cdef89ab 	.word	0xcdef89ab

0800ba60 <HAL_FLASH_Lock>:
  FLASH->CR |= FLASH_CR_LOCK;
 800ba60:	4a03      	ldr	r2, [pc, #12]	; (800ba70 <HAL_FLASH_Lock+0x10>)
 800ba62:	6913      	ldr	r3, [r2, #16]
 800ba64:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
}
 800ba68:	2000      	movs	r0, #0
  FLASH->CR |= FLASH_CR_LOCK;
 800ba6a:	6113      	str	r3, [r2, #16]
}
 800ba6c:	4770      	bx	lr
 800ba6e:	bf00      	nop
 800ba70:	40023c00 	.word	0x40023c00

0800ba74 <HAL_FLASH_GetError>:
   return pFlash.ErrorCode;
 800ba74:	4b01      	ldr	r3, [pc, #4]	; (800ba7c <HAL_FLASH_GetError+0x8>)
 800ba76:	69d8      	ldr	r0, [r3, #28]
}  
 800ba78:	4770      	bx	lr
 800ba7a:	bf00      	nop
 800ba7c:	20002a34 	.word	0x20002a34

0800ba80 <FLASH_WaitForLastOperation>:
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800ba80:	4b14      	ldr	r3, [pc, #80]	; (800bad4 <FLASH_WaitForLastOperation+0x54>)
{ 
 800ba82:	b570      	push	{r4, r5, r6, lr}
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800ba84:	2200      	movs	r2, #0
{ 
 800ba86:	4604      	mov	r4, r0
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800ba88:	61da      	str	r2, [r3, #28]
  tickstart = HAL_GetTick();
 800ba8a:	f7ff fe4b 	bl	800b724 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800ba8e:	4e12      	ldr	r6, [pc, #72]	; (800bad8 <FLASH_WaitForLastOperation+0x58>)
  tickstart = HAL_GetTick();
 800ba90:	4605      	mov	r5, r0
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800ba92:	1c63      	adds	r3, r4, #1
 800ba94:	d10f      	bne.n	800bab6 <FLASH_WaitForLastOperation+0x36>
 800ba96:	4a10      	ldr	r2, [pc, #64]	; (800bad8 <FLASH_WaitForLastOperation+0x58>)
 800ba98:	68d3      	ldr	r3, [r2, #12]
 800ba9a:	03d8      	lsls	r0, r3, #15
 800ba9c:	d4fc      	bmi.n	800ba98 <FLASH_WaitForLastOperation+0x18>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800ba9e:	4b0e      	ldr	r3, [pc, #56]	; (800bad8 <FLASH_WaitForLastOperation+0x58>)
 800baa0:	68da      	ldr	r2, [r3, #12]
 800baa2:	07d2      	lsls	r2, r2, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800baa4:	bf44      	itt	mi
 800baa6:	2201      	movmi	r2, #1
 800baa8:	60da      	strmi	r2, [r3, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800baaa:	4b0b      	ldr	r3, [pc, #44]	; (800bad8 <FLASH_WaitForLastOperation+0x58>)
 800baac:	68d8      	ldr	r0, [r3, #12]
 800baae:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 800bab2:	d10b      	bne.n	800bacc <FLASH_WaitForLastOperation+0x4c>
}  
 800bab4:	bd70      	pop	{r4, r5, r6, pc}
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800bab6:	68f3      	ldr	r3, [r6, #12]
 800bab8:	03d9      	lsls	r1, r3, #15
 800baba:	d5f0      	bpl.n	800ba9e <FLASH_WaitForLastOperation+0x1e>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800babc:	b124      	cbz	r4, 800bac8 <FLASH_WaitForLastOperation+0x48>
 800babe:	f7ff fe31 	bl	800b724 <HAL_GetTick>
 800bac2:	1b40      	subs	r0, r0, r5
 800bac4:	42a0      	cmp	r0, r4
 800bac6:	d9e4      	bls.n	800ba92 <FLASH_WaitForLastOperation+0x12>
        return HAL_TIMEOUT;
 800bac8:	2003      	movs	r0, #3
}  
 800baca:	bd70      	pop	{r4, r5, r6, pc}
    FLASH_SetErrorCode();
 800bacc:	f7ff feca 	bl	800b864 <FLASH_SetErrorCode>
    return HAL_ERROR;
 800bad0:	2001      	movs	r0, #1
}  
 800bad2:	bd70      	pop	{r4, r5, r6, pc}
 800bad4:	20002a34 	.word	0x20002a34
 800bad8:	40023c00 	.word	0x40023c00

0800badc <FLASH_FlushCaches>:
  * @retval None
  */
void FLASH_FlushCaches(void)
{
  /* Flush instruction cache  */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 800badc:	4b14      	ldr	r3, [pc, #80]	; (800bb30 <FLASH_FlushCaches+0x54>)
 800bade:	681a      	ldr	r2, [r3, #0]
 800bae0:	0591      	lsls	r1, r2, #22
 800bae2:	d50f      	bpl.n	800bb04 <FLASH_FlushCaches+0x28>
  {
    /* Disable instruction cache  */
    __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 800bae4:	681a      	ldr	r2, [r3, #0]
 800bae6:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800baea:	601a      	str	r2, [r3, #0]
    /* Reset instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 800baec:	681a      	ldr	r2, [r3, #0]
 800baee:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800baf2:	601a      	str	r2, [r3, #0]
 800baf4:	681a      	ldr	r2, [r3, #0]
 800baf6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800bafa:	601a      	str	r2, [r3, #0]
    /* Enable instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800bafc:	681a      	ldr	r2, [r3, #0]
 800bafe:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800bb02:	601a      	str	r2, [r3, #0]
  }

  /* Flush data cache */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 800bb04:	4b0a      	ldr	r3, [pc, #40]	; (800bb30 <FLASH_FlushCaches+0x54>)
 800bb06:	681a      	ldr	r2, [r3, #0]
 800bb08:	0552      	lsls	r2, r2, #21
 800bb0a:	d50f      	bpl.n	800bb2c <FLASH_FlushCaches+0x50>
  {
    /* Disable data cache  */
    __HAL_FLASH_DATA_CACHE_DISABLE();
 800bb0c:	681a      	ldr	r2, [r3, #0]
 800bb0e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bb12:	601a      	str	r2, [r3, #0]
    /* Reset data cache */
    __HAL_FLASH_DATA_CACHE_RESET();
 800bb14:	681a      	ldr	r2, [r3, #0]
 800bb16:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800bb1a:	601a      	str	r2, [r3, #0]
 800bb1c:	681a      	ldr	r2, [r3, #0]
 800bb1e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800bb22:	601a      	str	r2, [r3, #0]
    /* Enable data cache */
    __HAL_FLASH_DATA_CACHE_ENABLE();
 800bb24:	681a      	ldr	r2, [r3, #0]
 800bb26:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800bb2a:	601a      	str	r2, [r3, #0]
  }
}
 800bb2c:	4770      	bx	lr
 800bb2e:	bf00      	nop
 800bb30:	40023c00 	.word	0x40023c00

0800bb34 <HAL_FLASHEx_Erase>:
{
 800bb34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(&pFlash);
 800bb38:	4f44      	ldr	r7, [pc, #272]	; (800bc4c <HAL_FLASHEx_Erase+0x118>)
 800bb3a:	7e3b      	ldrb	r3, [r7, #24]
 800bb3c:	2b01      	cmp	r3, #1
 800bb3e:	d053      	beq.n	800bbe8 <HAL_FLASHEx_Erase+0xb4>
 800bb40:	2301      	movs	r3, #1
 800bb42:	4681      	mov	r9, r0
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800bb44:	f24c 3050 	movw	r0, #50000	; 0xc350
 800bb48:	4688      	mov	r8, r1
  __HAL_LOCK(&pFlash);
 800bb4a:	763b      	strb	r3, [r7, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800bb4c:	f7ff ff98 	bl	800ba80 <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 800bb50:	4606      	mov	r6, r0
 800bb52:	2800      	cmp	r0, #0
 800bb54:	d143      	bne.n	800bbde <HAL_FLASHEx_Erase+0xaa>
    *SectorError = 0xFFFFFFFFU;
 800bb56:	f04f 33ff 	mov.w	r3, #4294967295
 800bb5a:	f8c8 3000 	str.w	r3, [r8]
    if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 800bb5e:	f8d9 3000 	ldr.w	r3, [r9]
 800bb62:	2b01      	cmp	r3, #1
 800bb64:	d044      	beq.n	800bbf0 <HAL_FLASHEx_Erase+0xbc>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 800bb66:	e9d9 5302 	ldrd	r5, r3, [r9, #8]
 800bb6a:	442b      	add	r3, r5
 800bb6c:	429d      	cmp	r5, r3
 800bb6e:	d234      	bcs.n	800bbda <HAL_FLASHEx_Erase+0xa6>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800bb70:	4c37      	ldr	r4, [pc, #220]	; (800bc50 <HAL_FLASHEx_Erase+0x11c>)
 800bb72:	e005      	b.n	800bb80 <HAL_FLASHEx_Erase+0x4c>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 800bb74:	e9d9 2302 	ldrd	r2, r3, [r9, #8]
 800bb78:	3501      	adds	r5, #1
 800bb7a:	4413      	add	r3, r2
 800bb7c:	42ab      	cmp	r3, r5
 800bb7e:	d92c      	bls.n	800bbda <HAL_FLASHEx_Erase+0xa6>
  if (VoltageRange == FLASH_VOLTAGE_RANGE_1)
 800bb80:	f899 3010 	ldrb.w	r3, [r9, #16]
 800bb84:	2b02      	cmp	r3, #2
        FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 800bb86:	f44f 7140 	mov.w	r1, #768	; 0x300
 800bb8a:	bf98      	it	ls
 800bb8c:	0219      	lslls	r1, r3, #8
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800bb8e:	6923      	ldr	r3, [r4, #16]
 800bb90:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800bb94:	6123      	str	r3, [r4, #16]
  FLASH->CR |= tmp_psize;
 800bb96:	6923      	ldr	r3, [r4, #16]
 800bb98:	430b      	orrs	r3, r1
 800bb9a:	6123      	str	r3, [r4, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 800bb9c:	6923      	ldr	r3, [r4, #16]
 800bb9e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800bba2:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 800bba4:	6923      	ldr	r3, [r4, #16]
  if (Sector > FLASH_SECTOR_11)
 800bba6:	2d0b      	cmp	r5, #11
    Sector += 4U;
 800bba8:	bf8c      	ite	hi
 800bbaa:	1d2a      	addhi	r2, r5, #4
 800bbac:	462a      	movls	r2, r5
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 800bbae:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800bbb2:	f043 0302 	orr.w	r3, r3, #2
 800bbb6:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_STRT;
 800bbb8:	6923      	ldr	r3, [r4, #16]
 800bbba:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800bbbe:	6123      	str	r3, [r4, #16]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800bbc0:	f24c 3050 	movw	r0, #50000	; 0xc350
 800bbc4:	f7ff ff5c 	bl	800ba80 <FLASH_WaitForLastOperation>
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 800bbc8:	6923      	ldr	r3, [r4, #16]
 800bbca:	f023 03fa 	bic.w	r3, r3, #250	; 0xfa
 800bbce:	6123      	str	r3, [r4, #16]
        if (status != HAL_OK)
 800bbd0:	2800      	cmp	r0, #0
 800bbd2:	d0cf      	beq.n	800bb74 <HAL_FLASHEx_Erase+0x40>
          *SectorError = index;
 800bbd4:	f8c8 5000 	str.w	r5, [r8]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800bbd8:	4606      	mov	r6, r0
    FLASH_FlushCaches();
 800bbda:	f7ff ff7f 	bl	800badc <FLASH_FlushCaches>
  __HAL_UNLOCK(&pFlash);
 800bbde:	2300      	movs	r3, #0
 800bbe0:	763b      	strb	r3, [r7, #24]
}
 800bbe2:	4630      	mov	r0, r6
 800bbe4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(&pFlash);
 800bbe8:	2602      	movs	r6, #2
}
 800bbea:	4630      	mov	r0, r6
 800bbec:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800bbf0:	4a17      	ldr	r2, [pc, #92]	; (800bc50 <HAL_FLASHEx_Erase+0x11c>)
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 800bbf2:	f8d9 0004 	ldr.w	r0, [r9, #4]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800bbf6:	6911      	ldr	r1, [r2, #16]
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 800bbf8:	f8d9 3010 	ldr.w	r3, [r9, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800bbfc:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800bc00:	6111      	str	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 800bc02:	2803      	cmp	r0, #3
    FLASH->CR |= FLASH_MER_BIT;
 800bc04:	6911      	ldr	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 800bc06:	d01a      	beq.n	800bc3e <HAL_FLASHEx_Erase+0x10a>
  else if (Banks == FLASH_BANK_1)
 800bc08:	2801      	cmp	r0, #1
    FLASH->CR |= FLASH_CR_MER1;
 800bc0a:	bf0c      	ite	eq
 800bc0c:	f041 0104 	orreq.w	r1, r1, #4
    FLASH->CR |= FLASH_CR_MER2;
 800bc10:	f441 4100 	orrne.w	r1, r1, #32768	; 0x8000
 800bc14:	6111      	str	r1, [r2, #16]
  FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
 800bc16:	4c0e      	ldr	r4, [pc, #56]	; (800bc50 <HAL_FLASHEx_Erase+0x11c>)
 800bc18:	021b      	lsls	r3, r3, #8
 800bc1a:	6922      	ldr	r2, [r4, #16]
 800bc1c:	b29b      	uxth	r3, r3
 800bc1e:	4313      	orrs	r3, r2
 800bc20:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800bc24:	6123      	str	r3, [r4, #16]
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800bc26:	f24c 3050 	movw	r0, #50000	; 0xc350
 800bc2a:	f7ff ff29 	bl	800ba80 <FLASH_WaitForLastOperation>
      FLASH->CR &= (~FLASH_MER_BIT);
 800bc2e:	6923      	ldr	r3, [r4, #16]
 800bc30:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 800bc34:	f023 0304 	bic.w	r3, r3, #4
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800bc38:	4606      	mov	r6, r0
      FLASH->CR &= (~FLASH_MER_BIT);
 800bc3a:	6123      	str	r3, [r4, #16]
 800bc3c:	e7cd      	b.n	800bbda <HAL_FLASHEx_Erase+0xa6>
    FLASH->CR |= FLASH_MER_BIT;
 800bc3e:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 800bc42:	f041 0104 	orr.w	r1, r1, #4
 800bc46:	6111      	str	r1, [r2, #16]
 800bc48:	e7e5      	b.n	800bc16 <HAL_FLASHEx_Erase+0xe2>
 800bc4a:	bf00      	nop
 800bc4c:	20002a34 	.word	0x20002a34
 800bc50:	40023c00 	.word	0x40023c00

0800bc54 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800bc54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800bc58:	2200      	movs	r2, #0
 800bc5a:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800bc5c:	f8df a260 	ldr.w	sl, [pc, #608]	; 800bec0 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800bc60:	4e90      	ldr	r6, [pc, #576]	; (800bea4 <HAL_GPIO_Init+0x250>)
{
 800bc62:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bc64:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800bc66:	4689      	mov	r9, r1
 800bc68:	e005      	b.n	800bc76 <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bc6a:	3301      	adds	r3, #1
 800bc6c:	2b10      	cmp	r3, #16
 800bc6e:	f102 0202 	add.w	r2, r2, #2
 800bc72:	f000 8095 	beq.w	800bda0 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 800bc76:	2101      	movs	r1, #1
 800bc78:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800bc7a:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 800bc7e:	43a1      	bics	r1, r4
 800bc80:	d1f3      	bne.n	800bc6a <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800bc82:	f8d9 c004 	ldr.w	ip, [r9, #4]
 800bc86:	f00c 0103 	and.w	r1, ip, #3
 800bc8a:	1e4d      	subs	r5, r1, #1
 800bc8c:	2d01      	cmp	r5, #1
 800bc8e:	f240 808a 	bls.w	800bda6 <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800bc92:	2903      	cmp	r1, #3
 800bc94:	f040 80ca 	bne.w	800be2c <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bc98:	4091      	lsls	r1, r2
 800bc9a:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 800bc9c:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800bc9e:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800bca0:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800bca2:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 800bca6:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800bca8:	d0df      	beq.n	800bc6a <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800bcaa:	2100      	movs	r1, #0
 800bcac:	9103      	str	r1, [sp, #12]
 800bcae:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800bcb2:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800bcb6:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 800bcba:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800bcbe:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800bcc2:	9103      	str	r1, [sp, #12]
 800bcc4:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 800bcc6:	f023 0103 	bic.w	r1, r3, #3
 800bcca:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800bcce:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800bcd2:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800bcd6:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800bcd8:	00bf      	lsls	r7, r7, #2
 800bcda:	f04f 0e0f 	mov.w	lr, #15
 800bcde:	fa0e fe07 	lsl.w	lr, lr, r7
 800bce2:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800bce6:	4d70      	ldr	r5, [pc, #448]	; (800bea8 <HAL_GPIO_Init+0x254>)
 800bce8:	42a8      	cmp	r0, r5
 800bcea:	d02e      	beq.n	800bd4a <HAL_GPIO_Init+0xf6>
 800bcec:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800bcf0:	42a8      	cmp	r0, r5
 800bcf2:	f000 809f 	beq.w	800be34 <HAL_GPIO_Init+0x1e0>
 800bcf6:	4d6d      	ldr	r5, [pc, #436]	; (800beac <HAL_GPIO_Init+0x258>)
 800bcf8:	42a8      	cmp	r0, r5
 800bcfa:	f000 80a2 	beq.w	800be42 <HAL_GPIO_Init+0x1ee>
 800bcfe:	4d6c      	ldr	r5, [pc, #432]	; (800beb0 <HAL_GPIO_Init+0x25c>)
 800bd00:	42a8      	cmp	r0, r5
 800bd02:	f000 80a5 	beq.w	800be50 <HAL_GPIO_Init+0x1fc>
 800bd06:	4d6b      	ldr	r5, [pc, #428]	; (800beb4 <HAL_GPIO_Init+0x260>)
 800bd08:	42a8      	cmp	r0, r5
 800bd0a:	f000 80a8 	beq.w	800be5e <HAL_GPIO_Init+0x20a>
 800bd0e:	4d6a      	ldr	r5, [pc, #424]	; (800beb8 <HAL_GPIO_Init+0x264>)
 800bd10:	42a8      	cmp	r0, r5
 800bd12:	f000 80b2 	beq.w	800be7a <HAL_GPIO_Init+0x226>
 800bd16:	4d69      	ldr	r5, [pc, #420]	; (800bebc <HAL_GPIO_Init+0x268>)
 800bd18:	42a8      	cmp	r0, r5
 800bd1a:	f000 80b5 	beq.w	800be88 <HAL_GPIO_Init+0x234>
 800bd1e:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 800bec4 <HAL_GPIO_Init+0x270>
 800bd22:	4570      	cmp	r0, lr
 800bd24:	f000 80a2 	beq.w	800be6c <HAL_GPIO_Init+0x218>
 800bd28:	f8df e19c 	ldr.w	lr, [pc, #412]	; 800bec8 <HAL_GPIO_Init+0x274>
 800bd2c:	4570      	cmp	r0, lr
 800bd2e:	f000 80b2 	beq.w	800be96 <HAL_GPIO_Init+0x242>
 800bd32:	f8df e198 	ldr.w	lr, [pc, #408]	; 800becc <HAL_GPIO_Init+0x278>
 800bd36:	4570      	cmp	r0, lr
 800bd38:	bf0c      	ite	eq
 800bd3a:	f04f 0e09 	moveq.w	lr, #9
 800bd3e:	f04f 0e0a 	movne.w	lr, #10
 800bd42:	fa0e f707 	lsl.w	r7, lr, r7
 800bd46:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800bd4a:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 800bd4e:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 800bd50:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800bd54:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 800bd58:	bf0c      	ite	eq
 800bd5a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800bd5c:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 800bd60:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 800bd62:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800bd64:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 800bd68:	bf0c      	ite	eq
 800bd6a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800bd6c:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 800bd70:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 800bd72:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800bd74:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 800bd78:	bf0c      	ite	eq
 800bd7a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800bd7c:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 800bd80:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800bd82:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800bd84:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bd88:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 800bd8c:	bf0c      	ite	eq
 800bd8e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800bd90:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bd94:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 800bd96:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bd98:	f102 0202 	add.w	r2, r2, #2
 800bd9c:	f47f af6b 	bne.w	800bc76 <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 800bda0:	b005      	add	sp, #20
 800bda2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 800bda6:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 800bdaa:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800bdae:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bdb2:	2503      	movs	r5, #3
 800bdb4:	fa05 f802 	lsl.w	r8, r5, r2
 800bdb8:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 800bdbc:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800bdc0:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800bdc2:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800bdc4:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800bdc8:	f3cc 1700 	ubfx	r7, ip, #4, #1
 800bdcc:	409f      	lsls	r7, r3
 800bdce:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bdd2:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 800bdd6:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800bdd8:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800bdda:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800bdde:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800bde2:	4097      	lsls	r7, r2
 800bde4:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800bde8:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800bdea:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800bdec:	fa01 f102 	lsl.w	r1, r1, r2
 800bdf0:	f47f af54 	bne.w	800bc9c <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 800bdf4:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 800bdf8:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800bdfc:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800be00:	f8de 7020 	ldr.w	r7, [lr, #32]
 800be04:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800be06:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800be0a:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800be0e:	fa07 f708 	lsl.w	r7, r7, r8
 800be12:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800be14:	270f      	movs	r7, #15
 800be16:	fa07 f808 	lsl.w	r8, r7, r8
 800be1a:	9f00      	ldr	r7, [sp, #0]
 800be1c:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800be20:	9f01      	ldr	r7, [sp, #4]
 800be22:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 800be26:	f8ce 7020 	str.w	r7, [lr, #32]
 800be2a:	e737      	b.n	800bc9c <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800be2c:	2503      	movs	r5, #3
 800be2e:	4095      	lsls	r5, r2
 800be30:	43ed      	mvns	r5, r5
 800be32:	e7d1      	b.n	800bdd8 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800be34:	f04f 0e01 	mov.w	lr, #1
 800be38:	fa0e f707 	lsl.w	r7, lr, r7
 800be3c:	ea48 0807 	orr.w	r8, r8, r7
 800be40:	e783      	b.n	800bd4a <HAL_GPIO_Init+0xf6>
 800be42:	f04f 0e02 	mov.w	lr, #2
 800be46:	fa0e f707 	lsl.w	r7, lr, r7
 800be4a:	ea48 0807 	orr.w	r8, r8, r7
 800be4e:	e77c      	b.n	800bd4a <HAL_GPIO_Init+0xf6>
 800be50:	f04f 0e03 	mov.w	lr, #3
 800be54:	fa0e f707 	lsl.w	r7, lr, r7
 800be58:	ea48 0807 	orr.w	r8, r8, r7
 800be5c:	e775      	b.n	800bd4a <HAL_GPIO_Init+0xf6>
 800be5e:	f04f 0e04 	mov.w	lr, #4
 800be62:	fa0e f707 	lsl.w	r7, lr, r7
 800be66:	ea48 0807 	orr.w	r8, r8, r7
 800be6a:	e76e      	b.n	800bd4a <HAL_GPIO_Init+0xf6>
 800be6c:	f04f 0e07 	mov.w	lr, #7
 800be70:	fa0e f707 	lsl.w	r7, lr, r7
 800be74:	ea48 0807 	orr.w	r8, r8, r7
 800be78:	e767      	b.n	800bd4a <HAL_GPIO_Init+0xf6>
 800be7a:	f04f 0e05 	mov.w	lr, #5
 800be7e:	fa0e f707 	lsl.w	r7, lr, r7
 800be82:	ea48 0807 	orr.w	r8, r8, r7
 800be86:	e760      	b.n	800bd4a <HAL_GPIO_Init+0xf6>
 800be88:	f04f 0e06 	mov.w	lr, #6
 800be8c:	fa0e f707 	lsl.w	r7, lr, r7
 800be90:	ea48 0807 	orr.w	r8, r8, r7
 800be94:	e759      	b.n	800bd4a <HAL_GPIO_Init+0xf6>
 800be96:	f04f 0e08 	mov.w	lr, #8
 800be9a:	fa0e f707 	lsl.w	r7, lr, r7
 800be9e:	ea48 0807 	orr.w	r8, r8, r7
 800bea2:	e752      	b.n	800bd4a <HAL_GPIO_Init+0xf6>
 800bea4:	40013c00 	.word	0x40013c00
 800bea8:	40020000 	.word	0x40020000
 800beac:	40020800 	.word	0x40020800
 800beb0:	40020c00 	.word	0x40020c00
 800beb4:	40021000 	.word	0x40021000
 800beb8:	40021400 	.word	0x40021400
 800bebc:	40021800 	.word	0x40021800
 800bec0:	40023800 	.word	0x40023800
 800bec4:	40021c00 	.word	0x40021c00
 800bec8:	40022000 	.word	0x40022000
 800becc:	40022400 	.word	0x40022400

0800bed0 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800bed0:	6903      	ldr	r3, [r0, #16]
 800bed2:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800bed4:	bf14      	ite	ne
 800bed6:	2001      	movne	r0, #1
 800bed8:	2000      	moveq	r0, #0
 800beda:	4770      	bx	lr

0800bedc <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800bedc:	b902      	cbnz	r2, 800bee0 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800bede:	0409      	lsls	r1, r1, #16
 800bee0:	6181      	str	r1, [r0, #24]
  }
}
 800bee2:	4770      	bx	lr

0800bee4 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800bee4:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800bee6:	ea01 0203 	and.w	r2, r1, r3
 800beea:	ea21 0103 	bic.w	r1, r1, r3
 800beee:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800bef2:	6181      	str	r1, [r0, #24]
}
 800bef4:	4770      	bx	lr
 800bef6:	bf00      	nop

0800bef8 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 800bef8:	4770      	bx	lr
 800befa:	bf00      	nop

0800befc <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800befc:	4a04      	ldr	r2, [pc, #16]	; (800bf10 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800befe:	6951      	ldr	r1, [r2, #20]
 800bf00:	4201      	tst	r1, r0
 800bf02:	d100      	bne.n	800bf06 <HAL_GPIO_EXTI_IRQHandler+0xa>
 800bf04:	4770      	bx	lr
{
 800bf06:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800bf08:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800bf0a:	f7ff fff5 	bl	800bef8 <HAL_GPIO_EXTI_Callback>
}
 800bf0e:	bd08      	pop	{r3, pc}
 800bf10:	40013c00 	.word	0x40013c00

0800bf14 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 800bf14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bf18:	6804      	ldr	r4, [r0, #0]
{
 800bf1a:	b083      	sub	sp, #12
 800bf1c:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bf1e:	6823      	ldr	r3, [r4, #0]
{
 800bf20:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800bf24:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bf28:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800bf2c:	4606      	mov	r6, r0
 800bf2e:	468a      	mov	sl, r1
 800bf30:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bf32:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800bf34:	f1b9 3fff 	cmp.w	r9, #4294967295
 800bf38:	d136      	bne.n	800bfa8 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800bf3a:	6965      	ldr	r5, [r4, #20]
 800bf3c:	07e8      	lsls	r0, r5, #31
 800bf3e:	d5fc      	bpl.n	800bf3a <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800bf40:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 800bf44:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800bf46:	f1b9 3fff 	cmp.w	r9, #4294967295
 800bf4a:	d003      	beq.n	800bf54 <I2C_RequestMemoryWrite+0x40>
 800bf4c:	e04f      	b.n	800bfee <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bf4e:	6961      	ldr	r1, [r4, #20]
 800bf50:	054d      	lsls	r5, r1, #21
 800bf52:	d45d      	bmi.n	800c010 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800bf54:	6961      	ldr	r1, [r4, #20]
 800bf56:	078b      	lsls	r3, r1, #30
 800bf58:	d5f9      	bpl.n	800bf4e <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bf5a:	2300      	movs	r3, #0
 800bf5c:	9301      	str	r3, [sp, #4]
 800bf5e:	6963      	ldr	r3, [r4, #20]
 800bf60:	9301      	str	r3, [sp, #4]
 800bf62:	69a3      	ldr	r3, [r4, #24]
 800bf64:	9301      	str	r3, [sp, #4]
 800bf66:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bf68:	f1b9 3fff 	cmp.w	r9, #4294967295
 800bf6c:	f040 8088 	bne.w	800c080 <I2C_RequestMemoryWrite+0x16c>
 800bf70:	6963      	ldr	r3, [r4, #20]
 800bf72:	061a      	lsls	r2, r3, #24
 800bf74:	d464      	bmi.n	800c040 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bf76:	6963      	ldr	r3, [r4, #20]
 800bf78:	055b      	lsls	r3, r3, #21
 800bf7a:	d5f9      	bpl.n	800bf70 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800bf7c:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800bf7e:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800bf82:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800bf84:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800bf86:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800bf88:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bf8c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bf90:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800bf92:	f043 0304 	orr.w	r3, r3, #4
 800bf96:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800bf98:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800bf9a:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800bf9c:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800bf9e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800bfa2:	d066      	beq.n	800c072 <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 800bfa4:	2001      	movs	r0, #1
 800bfa6:	e01f      	b.n	800bfe8 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800bfa8:	6963      	ldr	r3, [r4, #20]
 800bfaa:	07d9      	lsls	r1, r3, #31
 800bfac:	d4c8      	bmi.n	800bf40 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bfae:	f7ff fbb9 	bl	800b724 <HAL_GetTick>
 800bfb2:	eba0 000b 	sub.w	r0, r0, fp
 800bfb6:	4581      	cmp	r9, r0
 800bfb8:	d304      	bcc.n	800bfc4 <I2C_RequestMemoryWrite+0xb0>
 800bfba:	f1b9 0f00 	cmp.w	r9, #0
 800bfbe:	d001      	beq.n	800bfc4 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800bfc0:	6834      	ldr	r4, [r6, #0]
 800bfc2:	e7b7      	b.n	800bf34 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800bfc4:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800bfc6:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800bfc8:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800bfca:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800bfce:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800bfd2:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800bfd4:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800bfd6:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800bfda:	f042 0220 	orr.w	r2, r2, #32
 800bfde:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800bfe0:	680b      	ldr	r3, [r1, #0]
 800bfe2:	05dc      	lsls	r4, r3, #23
 800bfe4:	d435      	bmi.n	800c052 <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800bfe6:	2003      	movs	r0, #3
}
 800bfe8:	b003      	add	sp, #12
 800bfea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800bfee:	6963      	ldr	r3, [r4, #20]
 800bff0:	0798      	lsls	r0, r3, #30
 800bff2:	d4b2      	bmi.n	800bf5a <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bff4:	6963      	ldr	r3, [r4, #20]
 800bff6:	055a      	lsls	r2, r3, #21
 800bff8:	d40a      	bmi.n	800c010 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bffa:	f7ff fb93 	bl	800b724 <HAL_GetTick>
 800bffe:	eba0 000b 	sub.w	r0, r0, fp
 800c002:	4581      	cmp	r9, r0
 800c004:	d34e      	bcc.n	800c0a4 <I2C_RequestMemoryWrite+0x190>
 800c006:	f1b9 0f00 	cmp.w	r9, #0
 800c00a:	d04b      	beq.n	800c0a4 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c00c:	6834      	ldr	r4, [r6, #0]
 800c00e:	e79a      	b.n	800bf46 <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c010:	6823      	ldr	r3, [r4, #0]
 800c012:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800c016:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c018:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c01a:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800c01e:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c020:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c022:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800c024:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c028:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c02c:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800c02e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c032:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800c036:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c038:	6433      	str	r3, [r6, #64]	; 0x40
}
 800c03a:	b003      	add	sp, #12
 800c03c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800c040:	f1b8 0f01 	cmp.w	r8, #1
 800c044:	d109      	bne.n	800c05a <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800c046:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 800c048:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800c04a:	6127      	str	r7, [r4, #16]
}
 800c04c:	b003      	add	sp, #12
 800c04e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800c052:	f44f 7300 	mov.w	r3, #512	; 0x200
 800c056:	6433      	str	r3, [r6, #64]	; 0x40
 800c058:	e7c5      	b.n	800bfe6 <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800c05a:	0a3b      	lsrs	r3, r7, #8
 800c05c:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c05e:	f1b9 3fff 	cmp.w	r9, #4294967295
 800c062:	d12e      	bne.n	800c0c2 <I2C_RequestMemoryWrite+0x1ae>
 800c064:	6963      	ldr	r3, [r4, #20]
 800c066:	0619      	lsls	r1, r3, #24
 800c068:	d4ed      	bmi.n	800c046 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c06a:	6963      	ldr	r3, [r4, #20]
 800c06c:	055a      	lsls	r2, r3, #21
 800c06e:	d5f9      	bpl.n	800c064 <I2C_RequestMemoryWrite+0x150>
 800c070:	e784      	b.n	800bf7c <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c072:	6832      	ldr	r2, [r6, #0]
 800c074:	6813      	ldr	r3, [r2, #0]
 800c076:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800c07a:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c07c:	6013      	str	r3, [r2, #0]
 800c07e:	e7b3      	b.n	800bfe8 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c080:	6963      	ldr	r3, [r4, #20]
 800c082:	061d      	lsls	r5, r3, #24
 800c084:	d4dc      	bmi.n	800c040 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c086:	6963      	ldr	r3, [r4, #20]
 800c088:	0559      	lsls	r1, r3, #21
 800c08a:	f53f af77 	bmi.w	800bf7c <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c08e:	f7ff fb49 	bl	800b724 <HAL_GetTick>
 800c092:	eba0 000b 	sub.w	r0, r0, fp
 800c096:	4581      	cmp	r9, r0
 800c098:	d325      	bcc.n	800c0e6 <I2C_RequestMemoryWrite+0x1d2>
 800c09a:	f1b9 0f00 	cmp.w	r9, #0
 800c09e:	d022      	beq.n	800c0e6 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c0a0:	6834      	ldr	r4, [r6, #0]
 800c0a2:	e761      	b.n	800bf68 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c0a4:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800c0a6:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c0a8:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800c0aa:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c0ae:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c0b2:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c0b4:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c0b8:	f043 0320 	orr.w	r3, r3, #32
 800c0bc:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800c0be:	2001      	movs	r0, #1
 800c0c0:	e792      	b.n	800bfe8 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c0c2:	6963      	ldr	r3, [r4, #20]
 800c0c4:	061b      	lsls	r3, r3, #24
 800c0c6:	d4be      	bmi.n	800c046 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c0c8:	6963      	ldr	r3, [r4, #20]
 800c0ca:	0558      	lsls	r0, r3, #21
 800c0cc:	f53f af56 	bmi.w	800bf7c <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c0d0:	f7ff fb28 	bl	800b724 <HAL_GetTick>
 800c0d4:	eba0 000b 	sub.w	r0, r0, fp
 800c0d8:	4581      	cmp	r9, r0
 800c0da:	d304      	bcc.n	800c0e6 <I2C_RequestMemoryWrite+0x1d2>
 800c0dc:	f1b9 0f00 	cmp.w	r9, #0
 800c0e0:	d001      	beq.n	800c0e6 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c0e2:	6834      	ldr	r4, [r6, #0]
 800c0e4:	e7bb      	b.n	800c05e <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c0e6:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c0e8:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c0ea:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c0ec:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c0f0:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c0f4:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800c0f6:	4313      	orrs	r3, r2
 800c0f8:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800c0fa:	e74d      	b.n	800bf98 <I2C_RequestMemoryWrite+0x84>

0800c0fc <I2C_RequestMemoryRead>:
{
 800c0fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c100:	6804      	ldr	r4, [r0, #0]
{
 800c102:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c104:	6823      	ldr	r3, [r4, #0]
 800c106:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800c10a:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800c10c:	6823      	ldr	r3, [r4, #0]
{
 800c10e:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800c110:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800c114:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800c118:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800c11c:	6023      	str	r3, [r4, #0]
{
 800c11e:	4606      	mov	r6, r0
 800c120:	468b      	mov	fp, r1
 800c122:	4617      	mov	r7, r2
 800c124:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c128:	d13a      	bne.n	800c1a0 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c12a:	6965      	ldr	r5, [r4, #20]
 800c12c:	07eb      	lsls	r3, r5, #31
 800c12e:	d5fc      	bpl.n	800c12a <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800c130:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 800c134:	6123      	str	r3, [r4, #16]
 800c136:	fa5f fb8b 	uxtb.w	fp, fp
 800c13a:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c13e:	d003      	beq.n	800c148 <I2C_RequestMemoryRead+0x4c>
 800c140:	e069      	b.n	800c216 <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c142:	6965      	ldr	r5, [r4, #20]
 800c144:	056a      	lsls	r2, r5, #21
 800c146:	d44e      	bmi.n	800c1e6 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c148:	6965      	ldr	r5, [r4, #20]
 800c14a:	07a9      	lsls	r1, r5, #30
 800c14c:	d5f9      	bpl.n	800c142 <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c14e:	2300      	movs	r3, #0
 800c150:	9301      	str	r3, [sp, #4]
 800c152:	6963      	ldr	r3, [r4, #20]
 800c154:	9301      	str	r3, [sp, #4]
 800c156:	69a3      	ldr	r3, [r4, #24]
 800c158:	9301      	str	r3, [sp, #4]
 800c15a:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c15c:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c160:	f040 80bd 	bne.w	800c2de <I2C_RequestMemoryRead+0x1e2>
 800c164:	6963      	ldr	r3, [r4, #20]
 800c166:	0618      	lsls	r0, r3, #24
 800c168:	d468      	bmi.n	800c23c <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c16a:	6963      	ldr	r3, [r4, #20]
 800c16c:	0559      	lsls	r1, r3, #21
 800c16e:	d5f9      	bpl.n	800c164 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c170:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c172:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800c176:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c178:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c17a:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800c17c:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c180:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c184:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800c186:	f043 0304 	orr.w	r3, r3, #4
 800c18a:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c18c:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800c18e:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c190:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800c192:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c196:	d070      	beq.n	800c27a <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 800c198:	2001      	movs	r0, #1
}
 800c19a:	b003      	add	sp, #12
 800c19c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c1a0:	6963      	ldr	r3, [r4, #20]
 800c1a2:	07dd      	lsls	r5, r3, #31
 800c1a4:	d4c4      	bmi.n	800c130 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c1a6:	f7ff fabd 	bl	800b724 <HAL_GetTick>
 800c1aa:	eba0 0009 	sub.w	r0, r0, r9
 800c1ae:	4582      	cmp	sl, r0
 800c1b0:	d304      	bcc.n	800c1bc <I2C_RequestMemoryRead+0xc0>
 800c1b2:	f1ba 0f00 	cmp.w	sl, #0
 800c1b6:	d001      	beq.n	800c1bc <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c1b8:	6834      	ldr	r4, [r6, #0]
 800c1ba:	e7b3      	b.n	800c124 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c1bc:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c1be:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c1c0:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c1c2:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c1c6:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c1ca:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c1cc:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800c1ce:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c1d2:	f042 0220 	orr.w	r2, r2, #32
 800c1d6:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c1d8:	680b      	ldr	r3, [r1, #0]
 800c1da:	05dc      	lsls	r4, r3, #23
 800c1dc:	d43d      	bmi.n	800c25a <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800c1de:	2003      	movs	r0, #3
}
 800c1e0:	b003      	add	sp, #12
 800c1e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c1e6:	6823      	ldr	r3, [r4, #0]
 800c1e8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800c1ec:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c1ee:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c1f0:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800c1f4:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c1f6:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c1f8:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800c1fa:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c1fe:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c202:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800c204:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c208:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800c20c:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c20e:	6433      	str	r3, [r6, #64]	; 0x40
}
 800c210:	b003      	add	sp, #12
 800c212:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c216:	6963      	ldr	r3, [r4, #20]
 800c218:	079b      	lsls	r3, r3, #30
 800c21a:	d498      	bmi.n	800c14e <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c21c:	6963      	ldr	r3, [r4, #20]
 800c21e:	0558      	lsls	r0, r3, #21
 800c220:	d4e1      	bmi.n	800c1e6 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c222:	f7ff fa7f 	bl	800b724 <HAL_GetTick>
 800c226:	eba0 0009 	sub.w	r0, r0, r9
 800c22a:	4582      	cmp	sl, r0
 800c22c:	f0c0 808f 	bcc.w	800c34e <I2C_RequestMemoryRead+0x252>
 800c230:	f1ba 0f00 	cmp.w	sl, #0
 800c234:	f000 808b 	beq.w	800c34e <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c238:	6834      	ldr	r4, [r6, #0]
 800c23a:	e77e      	b.n	800c13a <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800c23c:	f1b8 0f01 	cmp.w	r8, #1
 800c240:	d10f      	bne.n	800c262 <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800c242:	b2ff      	uxtb	r7, r7
 800c244:	6127      	str	r7, [r4, #16]
 800c246:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c24a:	d16e      	bne.n	800c32a <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c24c:	6963      	ldr	r3, [r4, #20]
 800c24e:	061b      	lsls	r3, r3, #24
 800c250:	d41a      	bmi.n	800c288 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c252:	6963      	ldr	r3, [r4, #20]
 800c254:	055f      	lsls	r7, r3, #21
 800c256:	d5f9      	bpl.n	800c24c <I2C_RequestMemoryRead+0x150>
 800c258:	e78a      	b.n	800c170 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800c25a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800c25e:	6433      	str	r3, [r6, #64]	; 0x40
 800c260:	e7bd      	b.n	800c1de <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800c262:	0a3b      	lsrs	r3, r7, #8
 800c264:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c266:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c26a:	d17e      	bne.n	800c36a <I2C_RequestMemoryRead+0x26e>
 800c26c:	6963      	ldr	r3, [r4, #20]
 800c26e:	061d      	lsls	r5, r3, #24
 800c270:	d4e7      	bmi.n	800c242 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c272:	6963      	ldr	r3, [r4, #20]
 800c274:	0558      	lsls	r0, r3, #21
 800c276:	d5f9      	bpl.n	800c26c <I2C_RequestMemoryRead+0x170>
 800c278:	e77a      	b.n	800c170 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c27a:	6832      	ldr	r2, [r6, #0]
 800c27c:	6813      	ldr	r3, [r2, #0]
 800c27e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800c282:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c284:	6013      	str	r3, [r2, #0]
 800c286:	e7ab      	b.n	800c1e0 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800c288:	6823      	ldr	r3, [r4, #0]
 800c28a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c28e:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800c290:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c294:	d113      	bne.n	800c2be <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c296:	6963      	ldr	r3, [r4, #20]
 800c298:	07d8      	lsls	r0, r3, #31
 800c29a:	d5fc      	bpl.n	800c296 <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800c29c:	f04b 0301 	orr.w	r3, fp, #1
 800c2a0:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800c2a2:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c2a6:	d003      	beq.n	800c2b0 <I2C_RequestMemoryRead+0x1b4>
 800c2a8:	e02b      	b.n	800c302 <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c2aa:	6963      	ldr	r3, [r4, #20]
 800c2ac:	055b      	lsls	r3, r3, #21
 800c2ae:	d49a      	bmi.n	800c1e6 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c2b0:	6963      	ldr	r3, [r4, #20]
 800c2b2:	43db      	mvns	r3, r3
 800c2b4:	f013 0302 	ands.w	r3, r3, #2
 800c2b8:	d1f7      	bne.n	800c2aa <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800c2ba:	4618      	mov	r0, r3
 800c2bc:	e790      	b.n	800c1e0 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c2be:	6963      	ldr	r3, [r4, #20]
 800c2c0:	07d9      	lsls	r1, r3, #31
 800c2c2:	d4eb      	bmi.n	800c29c <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c2c4:	f7ff fa2e 	bl	800b724 <HAL_GetTick>
 800c2c8:	eba0 0009 	sub.w	r0, r0, r9
 800c2cc:	4582      	cmp	sl, r0
 800c2ce:	f4ff af75 	bcc.w	800c1bc <I2C_RequestMemoryRead+0xc0>
 800c2d2:	f1ba 0f00 	cmp.w	sl, #0
 800c2d6:	f43f af71 	beq.w	800c1bc <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c2da:	6834      	ldr	r4, [r6, #0]
 800c2dc:	e7d8      	b.n	800c290 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c2de:	6963      	ldr	r3, [r4, #20]
 800c2e0:	061a      	lsls	r2, r3, #24
 800c2e2:	d4ab      	bmi.n	800c23c <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c2e4:	6963      	ldr	r3, [r4, #20]
 800c2e6:	055d      	lsls	r5, r3, #21
 800c2e8:	f53f af42 	bmi.w	800c170 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c2ec:	f7ff fa1a 	bl	800b724 <HAL_GetTick>
 800c2f0:	eba0 0009 	sub.w	r0, r0, r9
 800c2f4:	4582      	cmp	sl, r0
 800c2f6:	d34b      	bcc.n	800c390 <I2C_RequestMemoryRead+0x294>
 800c2f8:	f1ba 0f00 	cmp.w	sl, #0
 800c2fc:	d048      	beq.n	800c390 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c2fe:	6834      	ldr	r4, [r6, #0]
 800c300:	e72c      	b.n	800c15c <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c302:	6963      	ldr	r3, [r4, #20]
 800c304:	43db      	mvns	r3, r3
 800c306:	f013 0302 	ands.w	r3, r3, #2
 800c30a:	d0d6      	beq.n	800c2ba <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c30c:	6963      	ldr	r3, [r4, #20]
 800c30e:	055a      	lsls	r2, r3, #21
 800c310:	f53f af69 	bmi.w	800c1e6 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c314:	f7ff fa06 	bl	800b724 <HAL_GetTick>
 800c318:	eba0 0009 	sub.w	r0, r0, r9
 800c31c:	4582      	cmp	sl, r0
 800c31e:	d316      	bcc.n	800c34e <I2C_RequestMemoryRead+0x252>
 800c320:	f1ba 0f00 	cmp.w	sl, #0
 800c324:	d013      	beq.n	800c34e <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c326:	6834      	ldr	r4, [r6, #0]
 800c328:	e7bb      	b.n	800c2a2 <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c32a:	6963      	ldr	r3, [r4, #20]
 800c32c:	061d      	lsls	r5, r3, #24
 800c32e:	d4ab      	bmi.n	800c288 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c330:	6963      	ldr	r3, [r4, #20]
 800c332:	055a      	lsls	r2, r3, #21
 800c334:	f53f af1c 	bmi.w	800c170 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c338:	f7ff f9f4 	bl	800b724 <HAL_GetTick>
 800c33c:	eba0 0009 	sub.w	r0, r0, r9
 800c340:	4582      	cmp	sl, r0
 800c342:	d325      	bcc.n	800c390 <I2C_RequestMemoryRead+0x294>
 800c344:	f1ba 0f00 	cmp.w	sl, #0
 800c348:	d022      	beq.n	800c390 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c34a:	6834      	ldr	r4, [r6, #0]
 800c34c:	e77b      	b.n	800c246 <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c34e:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800c350:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c352:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800c354:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c358:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c35c:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c35e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c362:	f043 0320 	orr.w	r3, r3, #32
 800c366:	6433      	str	r3, [r6, #64]	; 0x40
 800c368:	e716      	b.n	800c198 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c36a:	6963      	ldr	r3, [r4, #20]
 800c36c:	0619      	lsls	r1, r3, #24
 800c36e:	f53f af68 	bmi.w	800c242 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c372:	6963      	ldr	r3, [r4, #20]
 800c374:	055b      	lsls	r3, r3, #21
 800c376:	f53f aefb 	bmi.w	800c170 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c37a:	f7ff f9d3 	bl	800b724 <HAL_GetTick>
 800c37e:	eba0 0009 	sub.w	r0, r0, r9
 800c382:	4582      	cmp	sl, r0
 800c384:	d304      	bcc.n	800c390 <I2C_RequestMemoryRead+0x294>
 800c386:	f1ba 0f00 	cmp.w	sl, #0
 800c38a:	d001      	beq.n	800c390 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c38c:	6834      	ldr	r4, [r6, #0]
 800c38e:	e76a      	b.n	800c266 <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c390:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c392:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c394:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c396:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c39a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c39e:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800c3a0:	4313      	orrs	r3, r2
 800c3a2:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800c3a4:	e6f2      	b.n	800c18c <I2C_RequestMemoryRead+0x90>
 800c3a6:	bf00      	nop

0800c3a8 <HAL_I2C_Init>:
  if (hi2c == NULL)
 800c3a8:	2800      	cmp	r0, #0
 800c3aa:	f000 80b9 	beq.w	800c520 <HAL_I2C_Init+0x178>
{
 800c3ae:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800c3b0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c3b4:	4604      	mov	r4, r0
 800c3b6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c3ba:	2b00      	cmp	r3, #0
 800c3bc:	f000 8098 	beq.w	800c4f0 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800c3c0:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800c3c2:	2224      	movs	r2, #36	; 0x24
 800c3c4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800c3c8:	681a      	ldr	r2, [r3, #0]
 800c3ca:	f022 0201 	bic.w	r2, r2, #1
 800c3ce:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800c3d0:	681a      	ldr	r2, [r3, #0]
 800c3d2:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800c3d6:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800c3d8:	681a      	ldr	r2, [r3, #0]
 800c3da:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800c3de:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800c3e0:	f001 fe70 	bl	800e0c4 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800c3e4:	6865      	ldr	r5, [r4, #4]
 800c3e6:	4b4f      	ldr	r3, [pc, #316]	; (800c524 <HAL_I2C_Init+0x17c>)
 800c3e8:	429d      	cmp	r5, r3
 800c3ea:	d84f      	bhi.n	800c48c <HAL_I2C_Init+0xe4>
 800c3ec:	4b4e      	ldr	r3, [pc, #312]	; (800c528 <HAL_I2C_Init+0x180>)
 800c3ee:	4298      	cmp	r0, r3
 800c3f0:	d97c      	bls.n	800c4ec <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800c3f2:	4b4e      	ldr	r3, [pc, #312]	; (800c52c <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c3f4:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800c3f6:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c3fa:	1e43      	subs	r3, r0, #1
 800c3fc:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c400:	6822      	ldr	r2, [r4, #0]
 800c402:	6851      	ldr	r1, [r2, #4]
 800c404:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c408:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800c40c:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c40e:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800c410:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c414:	f10c 0c01 	add.w	ip, ip, #1
 800c418:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c41c:	ea41 010c 	orr.w	r1, r1, ip
 800c420:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c422:	69d1      	ldr	r1, [r2, #28]
 800c424:	f640 70fc 	movw	r0, #4092	; 0xffc
 800c428:	3301      	adds	r3, #1
 800c42a:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800c42e:	4203      	tst	r3, r0
 800c430:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c434:	d161      	bne.n	800c4fa <HAL_I2C_Init+0x152>
 800c436:	2304      	movs	r3, #4
 800c438:	430b      	orrs	r3, r1
 800c43a:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800c43c:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800c440:	6811      	ldr	r1, [r2, #0]
 800c442:	4303      	orrs	r3, r0
 800c444:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800c448:	430b      	orrs	r3, r1
 800c44a:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800c44c:	6891      	ldr	r1, [r2, #8]
 800c44e:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800c452:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800c456:	4303      	orrs	r3, r0
 800c458:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c45c:	430b      	orrs	r3, r1
 800c45e:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800c460:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800c464:	68d1      	ldr	r1, [r2, #12]
 800c466:	4303      	orrs	r3, r0
 800c468:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c46c:	430b      	orrs	r3, r1
 800c46e:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800c470:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c472:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800c474:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 800c478:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800c47a:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c47c:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800c47e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800c482:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800c484:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 800c488:	4618      	mov	r0, r3
}
 800c48a:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800c48c:	4b28      	ldr	r3, [pc, #160]	; (800c530 <HAL_I2C_Init+0x188>)
 800c48e:	4298      	cmp	r0, r3
 800c490:	d92c      	bls.n	800c4ec <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c492:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800c494:	4b25      	ldr	r3, [pc, #148]	; (800c52c <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c496:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c498:	4e26      	ldr	r6, [pc, #152]	; (800c534 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800c49a:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c49e:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c4a2:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 800c4a6:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800c4a8:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c4ac:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800c4b0:	fb01 f303 	mul.w	r3, r1, r3
 800c4b4:	fba6 6303 	umull	r6, r3, r6, r3
 800c4b8:	6a11      	ldr	r1, [r2, #32]
 800c4ba:	099b      	lsrs	r3, r3, #6
 800c4bc:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c4c0:	3301      	adds	r3, #1
 800c4c2:	430b      	orrs	r3, r1
 800c4c4:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c4c6:	69d1      	ldr	r1, [r2, #28]
 800c4c8:	68a3      	ldr	r3, [r4, #8]
 800c4ca:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800c4ce:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c4d2:	b9ab      	cbnz	r3, 800c500 <HAL_I2C_Init+0x158>
 800c4d4:	1e43      	subs	r3, r0, #1
 800c4d6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800c4da:	fbb3 f3f5 	udiv	r3, r3, r5
 800c4de:	3301      	adds	r3, #1
 800c4e0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c4e4:	b1d3      	cbz	r3, 800c51c <HAL_I2C_Init+0x174>
 800c4e6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800c4ea:	e7a5      	b.n	800c438 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800c4ec:	2001      	movs	r0, #1
}
 800c4ee:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800c4f0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800c4f4:	f7f5 ff34 	bl	8002360 <HAL_I2C_MspInit>
 800c4f8:	e762      	b.n	800c3c0 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c4fa:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c4fe:	e79b      	b.n	800c438 <HAL_I2C_Init+0x90>
 800c500:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800c504:	1e43      	subs	r3, r0, #1
 800c506:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800c50a:	fbb3 f3f5 	udiv	r3, r3, r5
 800c50e:	3301      	adds	r3, #1
 800c510:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c514:	b113      	cbz	r3, 800c51c <HAL_I2C_Init+0x174>
 800c516:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800c51a:	e78d      	b.n	800c438 <HAL_I2C_Init+0x90>
 800c51c:	2301      	movs	r3, #1
 800c51e:	e78b      	b.n	800c438 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800c520:	2001      	movs	r0, #1
}
 800c522:	4770      	bx	lr
 800c524:	000186a0 	.word	0x000186a0
 800c528:	001e847f 	.word	0x001e847f
 800c52c:	431bde83 	.word	0x431bde83
 800c530:	003d08ff 	.word	0x003d08ff
 800c534:	10624dd3 	.word	0x10624dd3

0800c538 <HAL_I2C_Mem_Write>:
{
 800c538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c53c:	4604      	mov	r4, r0
 800c53e:	b083      	sub	sp, #12
 800c540:	4699      	mov	r9, r3
 800c542:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800c546:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800c548:	460f      	mov	r7, r1
 800c54a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800c54c:	f7ff f8ea 	bl	800b724 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800c550:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800c554:	2b20      	cmp	r3, #32
 800c556:	d004      	beq.n	800c562 <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800c558:	2702      	movs	r7, #2
}
 800c55a:	4638      	mov	r0, r7
 800c55c:	b003      	add	sp, #12
 800c55e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c562:	4605      	mov	r5, r0
 800c564:	e005      	b.n	800c572 <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c566:	f7ff f8dd 	bl	800b724 <HAL_GetTick>
 800c56a:	1b40      	subs	r0, r0, r5
 800c56c:	2819      	cmp	r0, #25
 800c56e:	f200 80a8 	bhi.w	800c6c2 <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c572:	6820      	ldr	r0, [r4, #0]
 800c574:	6983      	ldr	r3, [r0, #24]
 800c576:	ea6f 0c03 	mvn.w	ip, r3
 800c57a:	f01c 0b02 	ands.w	fp, ip, #2
 800c57e:	d0f2      	beq.n	800c566 <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800c580:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800c584:	2b01      	cmp	r3, #1
 800c586:	d0e7      	beq.n	800c558 <HAL_I2C_Mem_Write+0x20>
 800c588:	2301      	movs	r3, #1
 800c58a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800c58e:	6803      	ldr	r3, [r0, #0]
 800c590:	07db      	lsls	r3, r3, #31
 800c592:	d572      	bpl.n	800c67a <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c594:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c596:	6807      	ldr	r7, [r0, #0]
 800c598:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800c59c:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800c59e:	980c      	ldr	r0, [sp, #48]	; 0x30
 800c5a0:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800c5a2:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c5a4:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800c5a8:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800c5ac:	2040      	movs	r0, #64	; 0x40
 800c5ae:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c5b2:	2000      	movs	r0, #0
 800c5b4:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800c5b6:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800c5ba:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800c5bc:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800c5be:	4856      	ldr	r0, [pc, #344]	; (800c718 <HAL_I2C_Mem_Write+0x1e0>)
 800c5c0:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c5c2:	464b      	mov	r3, r9
 800c5c4:	4642      	mov	r2, r8
 800c5c6:	4620      	mov	r0, r4
 800c5c8:	f7ff fca4 	bl	800bf14 <I2C_RequestMemoryWrite>
 800c5cc:	4607      	mov	r7, r0
 800c5ce:	bb00      	cbnz	r0, 800c612 <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800c5d0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800c5d2:	2b00      	cmp	r3, #0
 800c5d4:	f000 809e 	beq.w	800c714 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c5d8:	6823      	ldr	r3, [r4, #0]
 800c5da:	1c72      	adds	r2, r6, #1
 800c5dc:	d159      	bne.n	800c692 <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c5de:	695a      	ldr	r2, [r3, #20]
 800c5e0:	0610      	lsls	r0, r2, #24
 800c5e2:	d41b      	bmi.n	800c61c <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c5e4:	695a      	ldr	r2, [r3, #20]
 800c5e6:	0551      	lsls	r1, r2, #21
 800c5e8:	d5f9      	bpl.n	800c5de <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c5ea:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c5ec:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800c5f0:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c5f2:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c5f4:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800c5f6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c5fa:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c5fe:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c600:	f043 0304 	orr.w	r3, r3, #4
 800c604:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c606:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800c608:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c60a:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800c60c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c610:	d038      	beq.n	800c684 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800c612:	2701      	movs	r7, #1
}
 800c614:	4638      	mov	r0, r7
 800c616:	b003      	add	sp, #12
 800c618:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c61c:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800c620:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c624:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800c626:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c62a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800c62e:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800c630:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800c632:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800c634:	3a01      	subs	r2, #1
 800c636:	b292      	uxth	r2, r2
 800c638:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800c63a:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800c63c:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800c63e:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800c640:	0740      	lsls	r0, r0, #29
 800c642:	d517      	bpl.n	800c674 <HAL_I2C_Mem_Write+0x13c>
 800c644:	b942      	cbnz	r2, 800c658 <HAL_I2C_Mem_Write+0x120>
 800c646:	1c72      	adds	r2, r6, #1
 800c648:	d156      	bne.n	800c6f8 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c64a:	695a      	ldr	r2, [r3, #20]
 800c64c:	0750      	lsls	r0, r2, #29
 800c64e:	d446      	bmi.n	800c6de <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c650:	695a      	ldr	r2, [r3, #20]
 800c652:	0551      	lsls	r1, r2, #21
 800c654:	d5f9      	bpl.n	800c64a <HAL_I2C_Mem_Write+0x112>
 800c656:	e7c8      	b.n	800c5ea <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c658:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800c65c:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800c65e:	f10c 0102 	add.w	r1, ip, #2
 800c662:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800c664:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800c666:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800c66a:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800c66c:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800c66e:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800c670:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800c672:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800c674:	2a00      	cmp	r2, #0
 800c676:	d1b0      	bne.n	800c5da <HAL_I2C_Mem_Write+0xa2>
 800c678:	e7e5      	b.n	800c646 <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800c67a:	6803      	ldr	r3, [r0, #0]
 800c67c:	f043 0301 	orr.w	r3, r3, #1
 800c680:	6003      	str	r3, [r0, #0]
 800c682:	e787      	b.n	800c594 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c684:	6822      	ldr	r2, [r4, #0]
 800c686:	6813      	ldr	r3, [r2, #0]
 800c688:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800c68c:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c68e:	6013      	str	r3, [r2, #0]
 800c690:	e763      	b.n	800c55a <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c692:	695a      	ldr	r2, [r3, #20]
 800c694:	0612      	lsls	r2, r2, #24
 800c696:	d4c1      	bmi.n	800c61c <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c698:	695a      	ldr	r2, [r3, #20]
 800c69a:	0551      	lsls	r1, r2, #21
 800c69c:	d4a5      	bmi.n	800c5ea <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c69e:	f7ff f841 	bl	800b724 <HAL_GetTick>
 800c6a2:	1b40      	subs	r0, r0, r5
 800c6a4:	4286      	cmp	r6, r0
 800c6a6:	d301      	bcc.n	800c6ac <HAL_I2C_Mem_Write+0x174>
 800c6a8:	2e00      	cmp	r6, #0
 800c6aa:	d195      	bne.n	800c5d8 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c6ac:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c6ae:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c6b0:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c6b2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c6b6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c6ba:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c6bc:	4313      	orrs	r3, r2
 800c6be:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800c6c0:	e7a1      	b.n	800c606 <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800c6c2:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c6c4:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c6c8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c6cc:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c6d0:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c6d2:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c6d6:	f043 0320 	orr.w	r3, r3, #32
 800c6da:	6423      	str	r3, [r4, #64]	; 0x40
 800c6dc:	e73c      	b.n	800c558 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c6de:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c6e0:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c6e2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800c6e6:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c6e8:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800c6ea:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800c6ee:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c6f2:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800c6f6:	e730      	b.n	800c55a <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c6f8:	695a      	ldr	r2, [r3, #20]
 800c6fa:	0752      	lsls	r2, r2, #29
 800c6fc:	d4ef      	bmi.n	800c6de <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c6fe:	695a      	ldr	r2, [r3, #20]
 800c700:	0551      	lsls	r1, r2, #21
 800c702:	f53f af72 	bmi.w	800c5ea <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c706:	f7ff f80d 	bl	800b724 <HAL_GetTick>
 800c70a:	1b40      	subs	r0, r0, r5
 800c70c:	4286      	cmp	r6, r0
 800c70e:	d3cd      	bcc.n	800c6ac <HAL_I2C_Mem_Write+0x174>
 800c710:	2e00      	cmp	r6, #0
 800c712:	d0cb      	beq.n	800c6ac <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c714:	6823      	ldr	r3, [r4, #0]
 800c716:	e796      	b.n	800c646 <HAL_I2C_Mem_Write+0x10e>
 800c718:	ffff0000 	.word	0xffff0000

0800c71c <HAL_I2C_Mem_Read>:
{
 800c71c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c720:	4604      	mov	r4, r0
 800c722:	b087      	sub	sp, #28
 800c724:	4699      	mov	r9, r3
 800c726:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800c72a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800c72c:	460f      	mov	r7, r1
 800c72e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800c730:	f7fe fff8 	bl	800b724 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800c734:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800c738:	2b20      	cmp	r3, #32
 800c73a:	d004      	beq.n	800c746 <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800c73c:	2702      	movs	r7, #2
}
 800c73e:	4638      	mov	r0, r7
 800c740:	b007      	add	sp, #28
 800c742:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c746:	4606      	mov	r6, r0
 800c748:	e005      	b.n	800c756 <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c74a:	f7fe ffeb 	bl	800b724 <HAL_GetTick>
 800c74e:	1b80      	subs	r0, r0, r6
 800c750:	2819      	cmp	r0, #25
 800c752:	f200 80d2 	bhi.w	800c8fa <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c756:	f8d4 c000 	ldr.w	ip, [r4]
 800c75a:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800c75e:	43c0      	mvns	r0, r0
 800c760:	f010 0b02 	ands.w	fp, r0, #2
 800c764:	d0f1      	beq.n	800c74a <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800c766:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800c76a:	2b01      	cmp	r3, #1
 800c76c:	d0e6      	beq.n	800c73c <HAL_I2C_Mem_Read+0x20>
 800c76e:	2301      	movs	r3, #1
 800c770:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800c774:	f8dc 3000 	ldr.w	r3, [ip]
 800c778:	07d9      	lsls	r1, r3, #31
 800c77a:	d537      	bpl.n	800c7ec <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c77c:	f8dc 0000 	ldr.w	r0, [ip]
 800c780:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800c784:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800c788:	9810      	ldr	r0, [sp, #64]	; 0x40
 800c78a:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800c78c:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c78e:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800c792:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800c796:	2040      	movs	r0, #64	; 0x40
 800c798:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c79c:	2000      	movs	r0, #0
 800c79e:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800c7a0:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800c7a4:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800c7a6:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800c7a8:	4893      	ldr	r0, [pc, #588]	; (800c9f8 <HAL_I2C_Mem_Read+0x2dc>)
 800c7aa:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c7ac:	4639      	mov	r1, r7
 800c7ae:	464b      	mov	r3, r9
 800c7b0:	4642      	mov	r2, r8
 800c7b2:	4620      	mov	r0, r4
 800c7b4:	f7ff fca2 	bl	800c0fc <I2C_RequestMemoryRead>
 800c7b8:	4607      	mov	r7, r0
 800c7ba:	2800      	cmp	r0, #0
 800c7bc:	f040 80ab 	bne.w	800c916 <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800c7c0:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800c7c2:	b9d2      	cbnz	r2, 800c7fa <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c7c4:	6823      	ldr	r3, [r4, #0]
 800c7c6:	9002      	str	r0, [sp, #8]
 800c7c8:	695a      	ldr	r2, [r3, #20]
 800c7ca:	9202      	str	r2, [sp, #8]
 800c7cc:	699a      	ldr	r2, [r3, #24]
 800c7ce:	9202      	str	r2, [sp, #8]
 800c7d0:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c7d2:	681a      	ldr	r2, [r3, #0]
 800c7d4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800c7d8:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c7da:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800c7dc:	2220      	movs	r2, #32
 800c7de:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800c7e2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c7e6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800c7ea:	e7a8      	b.n	800c73e <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800c7ec:	f8dc 3000 	ldr.w	r3, [ip]
 800c7f0:	f043 0301 	orr.w	r3, r3, #1
 800c7f4:	f8cc 3000 	str.w	r3, [ip]
 800c7f8:	e7c0      	b.n	800c77c <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800c7fa:	2a01      	cmp	r2, #1
 800c7fc:	f000 812c 	beq.w	800ca58 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800c800:	2a02      	cmp	r2, #2
 800c802:	f000 80bd 	beq.w	800c980 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c806:	6823      	ldr	r3, [r4, #0]
 800c808:	9005      	str	r0, [sp, #20]
 800c80a:	6959      	ldr	r1, [r3, #20]
 800c80c:	9105      	str	r1, [sp, #20]
 800c80e:	6999      	ldr	r1, [r3, #24]
 800c810:	9105      	str	r1, [sp, #20]
 800c812:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800c814:	2a03      	cmp	r2, #3
 800c816:	d849      	bhi.n	800c8ac <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800c818:	2a01      	cmp	r2, #1
 800c81a:	f000 80eb 	beq.w	800c9f4 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800c81e:	2a02      	cmp	r2, #2
 800c820:	f000 8089 	beq.w	800c936 <HAL_I2C_Mem_Read+0x21a>
 800c824:	1c69      	adds	r1, r5, #1
 800c826:	f040 80bb 	bne.w	800c9a0 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c82a:	695a      	ldr	r2, [r3, #20]
 800c82c:	0752      	lsls	r2, r2, #29
 800c82e:	d5fc      	bpl.n	800c82a <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c830:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c832:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c834:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c838:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c83a:	691b      	ldr	r3, [r3, #16]
 800c83c:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800c83e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800c840:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c842:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c844:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800c846:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800c848:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800c84a:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800c84c:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c84e:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c850:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800c852:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c854:	6822      	ldr	r2, [r4, #0]
 800c856:	f040 80af 	bne.w	800c9b8 <HAL_I2C_Mem_Read+0x29c>
 800c85a:	6953      	ldr	r3, [r2, #20]
 800c85c:	075b      	lsls	r3, r3, #29
 800c85e:	d5fc      	bpl.n	800c85a <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c860:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c862:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c864:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800c868:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c86a:	6913      	ldr	r3, [r2, #16]
 800c86c:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800c86e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800c870:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800c872:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c874:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800c876:	3b01      	subs	r3, #1
 800c878:	b29b      	uxth	r3, r3
 800c87a:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c87c:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800c87e:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800c880:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800c884:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800c886:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c88a:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800c88c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c88e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800c890:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c892:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800c894:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800c896:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800c898:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800c89a:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800c89c:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c89e:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c8a0:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800c8a2:	2a00      	cmp	r2, #0
 800c8a4:	d099      	beq.n	800c7da <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800c8a6:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c8a8:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800c8aa:	d9b5      	bls.n	800c818 <HAL_I2C_Mem_Read+0xfc>
 800c8ac:	b95d      	cbnz	r5, 800c8c6 <HAL_I2C_Mem_Read+0x1aa>
 800c8ae:	e0c5      	b.n	800ca3c <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800c8b0:	695a      	ldr	r2, [r3, #20]
 800c8b2:	06d0      	lsls	r0, r2, #27
 800c8b4:	f100 80b2 	bmi.w	800ca1c <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c8b8:	f7fe ff34 	bl	800b724 <HAL_GetTick>
 800c8bc:	1b80      	subs	r0, r0, r6
 800c8be:	4285      	cmp	r5, r0
 800c8c0:	f0c0 8086 	bcc.w	800c9d0 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c8c4:	6823      	ldr	r3, [r4, #0]
 800c8c6:	695a      	ldr	r2, [r3, #20]
 800c8c8:	0652      	lsls	r2, r2, #25
 800c8ca:	d5f1      	bpl.n	800c8b0 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c8cc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c8ce:	691b      	ldr	r3, [r3, #16]
 800c8d0:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800c8d2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c8d4:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800c8d6:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800c8d8:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800c8da:	3b01      	subs	r3, #1
 800c8dc:	b29b      	uxth	r3, r3
 800c8de:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c8e0:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800c8e2:	3a01      	subs	r2, #1
 800c8e4:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800c8e6:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c8ea:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800c8ec:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800c8ee:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c8f2:	d5d6      	bpl.n	800c8a2 <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c8f4:	6903      	ldr	r3, [r0, #16]
 800c8f6:	704b      	strb	r3, [r1, #1]
 800c8f8:	e036      	b.n	800c968 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800c8fa:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c8fc:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c900:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c904:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c908:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c90a:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c90e:	f043 0320 	orr.w	r3, r3, #32
 800c912:	6423      	str	r3, [r4, #64]	; 0x40
 800c914:	e712      	b.n	800c73c <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800c916:	2701      	movs	r7, #1
}
 800c918:	4638      	mov	r0, r7
 800c91a:	b007      	add	sp, #28
 800c91c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c920:	695a      	ldr	r2, [r3, #20]
 800c922:	0750      	lsls	r0, r2, #29
 800c924:	d40c      	bmi.n	800c940 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c926:	f7fe fefd 	bl	800b724 <HAL_GetTick>
 800c92a:	1b80      	subs	r0, r0, r6
 800c92c:	4285      	cmp	r5, r0
 800c92e:	d34f      	bcc.n	800c9d0 <HAL_I2C_Mem_Read+0x2b4>
 800c930:	2d00      	cmp	r5, #0
 800c932:	d04d      	beq.n	800c9d0 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c934:	6823      	ldr	r3, [r4, #0]
 800c936:	1c69      	adds	r1, r5, #1
 800c938:	d1f2      	bne.n	800c920 <HAL_I2C_Mem_Read+0x204>
 800c93a:	695a      	ldr	r2, [r3, #20]
 800c93c:	0752      	lsls	r2, r2, #29
 800c93e:	d5fc      	bpl.n	800c93a <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c940:	681a      	ldr	r2, [r3, #0]
 800c942:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800c946:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c948:	691a      	ldr	r2, [r3, #16]
 800c94a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c94c:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800c94e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800c950:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800c952:	3b01      	subs	r3, #1
 800c954:	b29b      	uxth	r3, r3
 800c956:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800c958:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800c95a:	3b01      	subs	r3, #1
 800c95c:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c95e:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800c960:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c962:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800c964:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c966:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800c968:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c96a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800c96c:	3301      	adds	r3, #1
 800c96e:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800c970:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800c972:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800c974:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800c976:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800c978:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800c97a:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c97c:	8563      	strh	r3, [r4, #42]	; 0x2a
 800c97e:	e790      	b.n	800c8a2 <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c980:	6823      	ldr	r3, [r4, #0]
 800c982:	6819      	ldr	r1, [r3, #0]
 800c984:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800c988:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c98a:	6819      	ldr	r1, [r3, #0]
 800c98c:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800c990:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c992:	9004      	str	r0, [sp, #16]
 800c994:	6959      	ldr	r1, [r3, #20]
 800c996:	9104      	str	r1, [sp, #16]
 800c998:	6999      	ldr	r1, [r3, #24]
 800c99a:	9104      	str	r1, [sp, #16]
 800c99c:	9904      	ldr	r1, [sp, #16]
 800c99e:	e739      	b.n	800c814 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c9a0:	695a      	ldr	r2, [r3, #20]
 800c9a2:	0750      	lsls	r0, r2, #29
 800c9a4:	f53f af44 	bmi.w	800c830 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c9a8:	f7fe febc 	bl	800b724 <HAL_GetTick>
 800c9ac:	1b80      	subs	r0, r0, r6
 800c9ae:	4285      	cmp	r5, r0
 800c9b0:	d30e      	bcc.n	800c9d0 <HAL_I2C_Mem_Read+0x2b4>
 800c9b2:	b16d      	cbz	r5, 800c9d0 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c9b4:	6823      	ldr	r3, [r4, #0]
 800c9b6:	e735      	b.n	800c824 <HAL_I2C_Mem_Read+0x108>
 800c9b8:	6953      	ldr	r3, [r2, #20]
 800c9ba:	0758      	lsls	r0, r3, #29
 800c9bc:	f53f af50 	bmi.w	800c860 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c9c0:	f7fe feb0 	bl	800b724 <HAL_GetTick>
 800c9c4:	1b80      	subs	r0, r0, r6
 800c9c6:	4285      	cmp	r5, r0
 800c9c8:	d302      	bcc.n	800c9d0 <HAL_I2C_Mem_Read+0x2b4>
 800c9ca:	2d00      	cmp	r5, #0
 800c9cc:	f47f af41 	bne.w	800c852 <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c9d0:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c9d2:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c9d4:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c9d6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c9da:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c9de:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c9e0:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800c9e4:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c9e6:	f043 0320 	orr.w	r3, r3, #32
}
 800c9ea:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c9ec:	6423      	str	r3, [r4, #64]	; 0x40
}
 800c9ee:	b007      	add	sp, #28
 800c9f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c9f4:	b95d      	cbnz	r5, 800ca0e <HAL_I2C_Mem_Read+0x2f2>
 800c9f6:	e02b      	b.n	800ca50 <HAL_I2C_Mem_Read+0x334>
 800c9f8:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800c9fc:	695a      	ldr	r2, [r3, #20]
 800c9fe:	06d2      	lsls	r2, r2, #27
 800ca00:	d40c      	bmi.n	800ca1c <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ca02:	f7fe fe8f 	bl	800b724 <HAL_GetTick>
 800ca06:	1b80      	subs	r0, r0, r6
 800ca08:	4285      	cmp	r5, r0
 800ca0a:	d3e1      	bcc.n	800c9d0 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ca0c:	6823      	ldr	r3, [r4, #0]
 800ca0e:	695a      	ldr	r2, [r3, #20]
 800ca10:	0651      	lsls	r1, r2, #25
 800ca12:	d5f3      	bpl.n	800c9fc <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ca14:	691a      	ldr	r2, [r3, #16]
 800ca16:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ca18:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800ca1a:	e7a5      	b.n	800c968 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800ca1c:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800ca1e:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800ca22:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800ca24:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800ca26:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800ca28:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800ca2c:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800ca30:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ca32:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800ca34:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800ca38:	2701      	movs	r7, #1
 800ca3a:	e680      	b.n	800c73e <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ca3c:	695a      	ldr	r2, [r3, #20]
 800ca3e:	0652      	lsls	r2, r2, #25
 800ca40:	f53f af44 	bmi.w	800c8cc <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800ca44:	695a      	ldr	r2, [r3, #20]
 800ca46:	06d1      	lsls	r1, r2, #27
 800ca48:	d4e8      	bmi.n	800ca1c <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ca4a:	f7fe fe6b 	bl	800b724 <HAL_GetTick>
 800ca4e:	e7bf      	b.n	800c9d0 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ca50:	695a      	ldr	r2, [r3, #20]
 800ca52:	0650      	lsls	r0, r2, #25
 800ca54:	d5f6      	bpl.n	800ca44 <HAL_I2C_Mem_Read+0x328>
 800ca56:	e7dd      	b.n	800ca14 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ca58:	6823      	ldr	r3, [r4, #0]
 800ca5a:	6819      	ldr	r1, [r3, #0]
 800ca5c:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800ca60:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ca62:	9003      	str	r0, [sp, #12]
 800ca64:	6959      	ldr	r1, [r3, #20]
 800ca66:	9103      	str	r1, [sp, #12]
 800ca68:	6999      	ldr	r1, [r3, #24]
 800ca6a:	9103      	str	r1, [sp, #12]
 800ca6c:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ca6e:	6819      	ldr	r1, [r3, #0]
 800ca70:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800ca74:	6019      	str	r1, [r3, #0]
 800ca76:	e6cd      	b.n	800c814 <HAL_I2C_Mem_Read+0xf8>

0800ca78 <HAL_I2C_MasterTxCpltCallback>:
 800ca78:	4770      	bx	lr
 800ca7a:	bf00      	nop

0800ca7c <HAL_I2C_MasterRxCpltCallback>:
 800ca7c:	4770      	bx	lr
 800ca7e:	bf00      	nop

0800ca80 <HAL_I2C_SlaveTxCpltCallback>:
 800ca80:	4770      	bx	lr
 800ca82:	bf00      	nop

0800ca84 <HAL_I2C_SlaveRxCpltCallback>:
 800ca84:	4770      	bx	lr
 800ca86:	bf00      	nop

0800ca88 <HAL_I2C_AddrCallback>:
}
 800ca88:	4770      	bx	lr
 800ca8a:	bf00      	nop

0800ca8c <HAL_I2C_ListenCpltCallback>:
 800ca8c:	4770      	bx	lr
 800ca8e:	bf00      	nop

0800ca90 <HAL_I2C_MemTxCpltCallback>:
 800ca90:	4770      	bx	lr
 800ca92:	bf00      	nop

0800ca94 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ca94:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800ca98:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800ca9a:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800ca9c:	b959      	cbnz	r1, 800cab6 <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800ca9e:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800caa0:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800caa2:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800caa4:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800caa6:	d00d      	beq.n	800cac4 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800caa8:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800caac:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800caae:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800cab0:	3201      	adds	r2, #1
 800cab2:	6502      	str	r2, [r0, #80]	; 0x50
 800cab4:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800cab6:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800cab8:	2901      	cmp	r1, #1
 800caba:	d009      	beq.n	800cad0 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800cabc:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800cabe:	2902      	cmp	r1, #2
 800cac0:	d00e      	beq.n	800cae0 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800cac2:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800cac4:	b2d2      	uxtb	r2, r2
 800cac6:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800cac8:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800caca:	3202      	adds	r2, #2
 800cacc:	6502      	str	r2, [r0, #80]	; 0x50
 800cace:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800cad0:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800cad2:	6801      	ldr	r1, [r0, #0]
 800cad4:	b2d2      	uxtb	r2, r2
 800cad6:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800cad8:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800cada:	3201      	adds	r2, #1
 800cadc:	6502      	str	r2, [r0, #80]	; 0x50
 800cade:	4770      	bx	lr
 800cae0:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800cae2:	2a22      	cmp	r2, #34	; 0x22
 800cae4:	d01f      	beq.n	800cb26 <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800cae6:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800cae8:	b289      	uxth	r1, r1
 800caea:	b9c1      	cbnz	r1, 800cb1e <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800caec:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800caee:	b289      	uxth	r1, r1
 800caf0:	2900      	cmp	r1, #0
 800caf2:	d1e6      	bne.n	800cac2 <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800caf4:	2a21      	cmp	r2, #33	; 0x21
 800caf6:	d1e4      	bne.n	800cac2 <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800caf8:	6802      	ldr	r2, [r0, #0]
{
 800cafa:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800cafc:	6854      	ldr	r4, [r2, #4]
 800cafe:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800cb02:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800cb04:	6814      	ldr	r4, [r2, #0]
 800cb06:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800cb0a:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800cb0c:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800cb0e:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800cb10:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800cb14:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800cb18:	f7ff ffba 	bl	800ca90 <HAL_I2C_MemTxCpltCallback>
}
 800cb1c:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800cb1e:	2a21      	cmp	r2, #33	; 0x21
 800cb20:	d00a      	beq.n	800cb38 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800cb22:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800cb24:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800cb26:	6801      	ldr	r1, [r0, #0]
 800cb28:	680a      	ldr	r2, [r1, #0]
 800cb2a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800cb2e:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800cb30:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800cb32:	3201      	adds	r2, #1
 800cb34:	6502      	str	r2, [r0, #80]	; 0x50
 800cb36:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800cb38:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800cb3a:	6802      	ldr	r2, [r0, #0]
 800cb3c:	f811 0b01 	ldrb.w	r0, [r1], #1
 800cb40:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800cb42:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800cb44:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800cb46:	3a01      	subs	r2, #1
 800cb48:	b292      	uxth	r2, r2
 800cb4a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800cb4c:	4770      	bx	lr
 800cb4e:	bf00      	nop

0800cb50 <HAL_I2C_MemRxCpltCallback>:
 800cb50:	4770      	bx	lr
 800cb52:	bf00      	nop

0800cb54 <HAL_I2C_ErrorCallback>:
 800cb54:	4770      	bx	lr
 800cb56:	bf00      	nop

0800cb58 <HAL_I2C_AbortCpltCallback>:
 800cb58:	4770      	bx	lr
 800cb5a:	bf00      	nop

0800cb5c <I2C_DMAAbort>:
{
 800cb5c:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800cb5e:	4b3a      	ldr	r3, [pc, #232]	; (800cc48 <I2C_DMAAbort+0xec>)
 800cb60:	4a3a      	ldr	r2, [pc, #232]	; (800cc4c <I2C_DMAAbort+0xf0>)
 800cb62:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800cb64:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800cb66:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800cb68:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800cb6a:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800cb6c:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800cb70:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800cb72:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cb74:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800cb78:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800cb7a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800cb7e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cb82:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800cb84:	9301      	str	r3, [sp, #4]
 800cb86:	e005      	b.n	800cb94 <I2C_DMAAbort+0x38>
    count--;
 800cb88:	9b01      	ldr	r3, [sp, #4]
 800cb8a:	3b01      	subs	r3, #1
 800cb8c:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800cb8e:	6813      	ldr	r3, [r2, #0]
 800cb90:	059b      	lsls	r3, r3, #22
 800cb92:	d506      	bpl.n	800cba2 <I2C_DMAAbort+0x46>
    if (count == 0U)
 800cb94:	9b01      	ldr	r3, [sp, #4]
 800cb96:	2b00      	cmp	r3, #0
 800cb98:	d1f6      	bne.n	800cb88 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800cb9a:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800cb9c:	f043 0320 	orr.w	r3, r3, #32
 800cba0:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800cba2:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800cba4:	b34c      	cbz	r4, 800cbfa <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800cba6:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800cba8:	2500      	movs	r5, #0
 800cbaa:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800cbac:	b1f3      	cbz	r3, 800cbec <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cbae:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800cbb0:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cbb2:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800cbb6:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800cbb8:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800cbba:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800cbbc:	2400      	movs	r4, #0
 800cbbe:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800cbc0:	6813      	ldr	r3, [r2, #0]
 800cbc2:	f023 0301 	bic.w	r3, r3, #1
 800cbc6:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800cbc8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800cbcc:	2b60      	cmp	r3, #96	; 0x60
 800cbce:	d02a      	beq.n	800cc26 <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800cbd0:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800cbd4:	2928      	cmp	r1, #40	; 0x28
 800cbd6:	d019      	beq.n	800cc0c <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800cbd8:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800cbda:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800cbdc:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800cbe0:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800cbe4:	f7ff ffb6 	bl	800cb54 <HAL_I2C_ErrorCallback>
}
 800cbe8:	b002      	add	sp, #8
 800cbea:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cbec:	6815      	ldr	r5, [r2, #0]
 800cbee:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800cbf2:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800cbf4:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800cbf6:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800cbf8:	e7e2      	b.n	800cbc0 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800cbfa:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800cbfc:	b1f3      	cbz	r3, 800cc3c <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cbfe:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800cc00:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cc02:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800cc06:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800cc08:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800cc0a:	e7d7      	b.n	800cbbc <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800cc0c:	6813      	ldr	r3, [r2, #0]
 800cc0e:	f043 0301 	orr.w	r3, r3, #1
 800cc12:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cc14:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800cc16:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cc18:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800cc1c:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800cc1e:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cc20:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800cc24:	e7de      	b.n	800cbe4 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800cc26:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800cc28:	2220      	movs	r2, #32
 800cc2a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800cc2e:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800cc32:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800cc34:	f7ff ff90 	bl	800cb58 <HAL_I2C_AbortCpltCallback>
}
 800cc38:	b002      	add	sp, #8
 800cc3a:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cc3c:	6814      	ldr	r4, [r2, #0]
 800cc3e:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800cc42:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800cc44:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800cc46:	e7bb      	b.n	800cbc0 <I2C_DMAAbort+0x64>
 800cc48:	20000078 	.word	0x20000078
 800cc4c:	14f8b589 	.word	0x14f8b589

0800cc50 <I2C_ITError>:
{
 800cc50:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cc52:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800cc56:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800cc5a:	2b10      	cmp	r3, #16
{
 800cc5c:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cc5e:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800cc60:	d039      	beq.n	800ccd6 <I2C_ITError+0x86>
 800cc62:	b2d9      	uxtb	r1, r3
 800cc64:	2940      	cmp	r1, #64	; 0x40
 800cc66:	d036      	beq.n	800ccd6 <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800cc68:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800cc6c:	2928      	cmp	r1, #40	; 0x28
 800cc6e:	d03d      	beq.n	800ccec <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800cc70:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800cc72:	6859      	ldr	r1, [r3, #4]
 800cc74:	0508      	lsls	r0, r1, #20
 800cc76:	d407      	bmi.n	800cc88 <I2C_ITError+0x38>
 800cc78:	2a60      	cmp	r2, #96	; 0x60
 800cc7a:	d005      	beq.n	800cc88 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800cc7c:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800cc7e:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800cc80:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800cc84:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800cc88:	2200      	movs	r2, #0
 800cc8a:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800cc8c:	685a      	ldr	r2, [r3, #4]
 800cc8e:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800cc92:	d134      	bne.n	800ccfe <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800cc94:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800cc98:	2960      	cmp	r1, #96	; 0x60
 800cc9a:	d075      	beq.n	800cd88 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cc9c:	695a      	ldr	r2, [r3, #20]
 800cc9e:	0650      	lsls	r0, r2, #25
 800cca0:	d505      	bpl.n	800ccae <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cca2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cca4:	691b      	ldr	r3, [r3, #16]
 800cca6:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800cca8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ccaa:	3301      	adds	r3, #1
 800ccac:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800ccae:	4620      	mov	r0, r4
 800ccb0:	f7ff ff50 	bl	800cb54 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800ccb4:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800ccb6:	0719      	lsls	r1, r3, #28
 800ccb8:	d004      	beq.n	800ccc4 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ccba:	6822      	ldr	r2, [r4, #0]
 800ccbc:	6853      	ldr	r3, [r2, #4]
 800ccbe:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800ccc2:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800ccc4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800ccc8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ccca:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800cccc:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800ccce:	d501      	bpl.n	800ccd4 <I2C_ITError+0x84>
 800ccd0:	2b28      	cmp	r3, #40	; 0x28
 800ccd2:	d02f      	beq.n	800cd34 <I2C_ITError+0xe4>
}
 800ccd4:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800ccd6:	2a22      	cmp	r2, #34	; 0x22
 800ccd8:	d1c6      	bne.n	800cc68 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800ccda:	6823      	ldr	r3, [r4, #0]
 800ccdc:	681a      	ldr	r2, [r3, #0]
 800ccde:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800cce2:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800cce4:	685a      	ldr	r2, [r3, #4]
 800cce6:	0512      	lsls	r2, r2, #20
 800cce8:	d5c8      	bpl.n	800cc7c <I2C_ITError+0x2c>
 800ccea:	e7cd      	b.n	800cc88 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800ccec:	2300      	movs	r3, #0
 800ccee:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800ccf0:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800ccf2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800ccf6:	685a      	ldr	r2, [r3, #4]
 800ccf8:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800ccfc:	d0ca      	beq.n	800cc94 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800ccfe:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800cd00:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800cd02:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800cd06:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800cd08:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800cd0c:	2b01      	cmp	r3, #1
 800cd0e:	d01e      	beq.n	800cd4e <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800cd10:	4b28      	ldr	r3, [pc, #160]	; (800cdb4 <I2C_ITError+0x164>)
 800cd12:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800cd14:	f7fe fd90 	bl	800b838 <HAL_DMA_Abort_IT>
 800cd18:	2800      	cmp	r0, #0
 800cd1a:	d0cb      	beq.n	800ccb4 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800cd1c:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800cd1e:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800cd20:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800cd22:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800cd24:	f023 0301 	bic.w	r3, r3, #1
 800cd28:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800cd2a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800cd2e:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800cd30:	4798      	blx	r3
 800cd32:	e7bf      	b.n	800ccb4 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800cd34:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800cd36:	4920      	ldr	r1, [pc, #128]	; (800cdb8 <I2C_ITError+0x168>)
 800cd38:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800cd3a:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800cd3c:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800cd3e:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800cd40:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800cd44:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800cd48:	f7ff fea0 	bl	800ca8c <HAL_I2C_ListenCpltCallback>
}
 800cd4c:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800cd4e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800cd50:	4b18      	ldr	r3, [pc, #96]	; (800cdb4 <I2C_ITError+0x164>)
 800cd52:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800cd54:	f7fe fd70 	bl	800b838 <HAL_DMA_Abort_IT>
 800cd58:	2800      	cmp	r0, #0
 800cd5a:	d0ab      	beq.n	800ccb4 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cd5c:	6823      	ldr	r3, [r4, #0]
 800cd5e:	695a      	ldr	r2, [r3, #20]
 800cd60:	0651      	lsls	r1, r2, #25
 800cd62:	d506      	bpl.n	800cd72 <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cd64:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cd66:	691b      	ldr	r3, [r3, #16]
 800cd68:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800cd6a:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800cd6c:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800cd6e:	3201      	adds	r2, #1
 800cd70:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800cd72:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800cd74:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800cd76:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800cd7a:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800cd7c:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800cd7e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800cd82:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800cd84:	4798      	blx	r3
 800cd86:	e795      	b.n	800ccb4 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800cd88:	2120      	movs	r1, #32
 800cd8a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800cd8e:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cd90:	695a      	ldr	r2, [r3, #20]
 800cd92:	0652      	lsls	r2, r2, #25
 800cd94:	d506      	bpl.n	800cda4 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cd96:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cd98:	691b      	ldr	r3, [r3, #16]
 800cd9a:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800cd9c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800cd9e:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800cda0:	3201      	adds	r2, #1
 800cda2:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800cda4:	681a      	ldr	r2, [r3, #0]
 800cda6:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800cdaa:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800cdac:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800cdae:	f7ff fed3 	bl	800cb58 <HAL_I2C_AbortCpltCallback>
 800cdb2:	e77f      	b.n	800ccb4 <I2C_ITError+0x64>
 800cdb4:	0800cb5d 	.word	0x0800cb5d
 800cdb8:	ffff0000 	.word	0xffff0000

0800cdbc <HAL_I2C_EV_IRQHandler>:
{
 800cdbc:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800cdbe:	6803      	ldr	r3, [r0, #0]
{
 800cdc0:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800cdc2:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800cdc4:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800cdc6:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cdca:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800cdce:	2910      	cmp	r1, #16
{
 800cdd0:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cdd2:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800cdd4:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800cdd8:	d022      	beq.n	800ce20 <HAL_I2C_EV_IRQHandler+0x64>
 800cdda:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800cdde:	d01f      	beq.n	800ce20 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800cde0:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800cde2:	2900      	cmp	r1, #0
 800cde4:	f000 8094 	beq.w	800cf10 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800cde8:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800cdea:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cdec:	f011 0602 	ands.w	r6, r1, #2
 800cdf0:	d059      	beq.n	800cea6 <HAL_I2C_EV_IRQHandler+0xea>
 800cdf2:	0586      	lsls	r6, r0, #22
 800cdf4:	d559      	bpl.n	800ceaa <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800cdf6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800cdf8:	b102      	cbz	r2, 800cdfc <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800cdfa:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800cdfc:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800ce00:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800ce04:	2a28      	cmp	r2, #40	; 0x28
 800ce06:	f000 821e 	beq.w	800d246 <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ce0a:	2200      	movs	r2, #0
 800ce0c:	920c      	str	r2, [sp, #48]	; 0x30
 800ce0e:	6959      	ldr	r1, [r3, #20]
 800ce10:	910c      	str	r1, [sp, #48]	; 0x30
 800ce12:	699b      	ldr	r3, [r3, #24]
 800ce14:	930c      	str	r3, [sp, #48]	; 0x30
 800ce16:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800ce18:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800ce1c:	b00e      	add	sp, #56	; 0x38
 800ce1e:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800ce20:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800ce22:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800ce24:	f011 0f01 	tst.w	r1, #1
 800ce28:	d11a      	bne.n	800ce60 <HAL_I2C_EV_IRQHandler+0xa4>
 800ce2a:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800ce2e:	d0f5      	beq.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
 800ce30:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800ce34:	d0f2      	beq.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ce36:	070d      	lsls	r5, r1, #28
 800ce38:	d56d      	bpl.n	800cf16 <HAL_I2C_EV_IRQHandler+0x15a>
 800ce3a:	0585      	lsls	r5, r0, #22
 800ce3c:	f140 8083 	bpl.w	800cf46 <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800ce40:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800ce42:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800ce44:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800ce46:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800ce48:	2900      	cmp	r1, #0
 800ce4a:	f000 81e3 	beq.w	800d214 <HAL_I2C_EV_IRQHandler+0x458>
 800ce4e:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800ce50:	2a00      	cmp	r2, #0
 800ce52:	f000 81df 	beq.w	800d214 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800ce56:	685a      	ldr	r2, [r3, #4]
 800ce58:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800ce5c:	605a      	str	r2, [r3, #4]
 800ce5e:	e7dd      	b.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ce60:	0585      	lsls	r5, r0, #22
 800ce62:	d56e      	bpl.n	800cf42 <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800ce64:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ce66:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800ce6a:	f000 81e9 	beq.w	800d240 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800ce6e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ce70:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800ce74:	bf04      	itt	eq
 800ce76:	2208      	moveq	r2, #8
 800ce78:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ce7a:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800ce7e:	2a40      	cmp	r2, #64	; 0x40
 800ce80:	f000 81d7 	beq.w	800d232 <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800ce84:	6922      	ldr	r2, [r4, #16]
 800ce86:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800ce8a:	f000 81b2 	beq.w	800d1f2 <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800ce8e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800ce90:	2a00      	cmp	r2, #0
 800ce92:	f040 81ef 	bne.w	800d274 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800ce96:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800ce98:	11d2      	asrs	r2, r2, #7
 800ce9a:	f002 0206 	and.w	r2, r2, #6
 800ce9e:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800cea2:	611a      	str	r2, [r3, #16]
 800cea4:	e7ba      	b.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cea6:	06cd      	lsls	r5, r1, #27
 800cea8:	d47c      	bmi.n	800cfa4 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800ceaa:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800ceae:	2a21      	cmp	r2, #33	; 0x21
 800ceb0:	f000 80f5 	beq.w	800d09e <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800ceb4:	064e      	lsls	r6, r1, #25
 800ceb6:	f140 8132 	bpl.w	800d11e <HAL_I2C_EV_IRQHandler+0x362>
 800ceba:	0545      	lsls	r5, r0, #21
 800cebc:	f140 812f 	bpl.w	800d11e <HAL_I2C_EV_IRQHandler+0x362>
 800cec0:	0749      	lsls	r1, r1, #29
 800cec2:	f100 812f 	bmi.w	800d124 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cec6:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800ceca:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cecc:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cece:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800ced0:	2a00      	cmp	r2, #0
 800ced2:	d0a3      	beq.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ced4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ced6:	691b      	ldr	r3, [r3, #16]
 800ced8:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800ceda:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800cedc:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800cede:	3b01      	subs	r3, #1
 800cee0:	b29b      	uxth	r3, r3
 800cee2:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800cee4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800cee6:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800cee8:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800ceea:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800ceec:	2b00      	cmp	r3, #0
 800ceee:	d195      	bne.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
 800cef0:	292a      	cmp	r1, #42	; 0x2a
 800cef2:	d193      	bne.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cef4:	6822      	ldr	r2, [r4, #0]
 800cef6:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800cef8:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cefa:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cefc:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800cf00:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800cf02:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800cf04:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cf06:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800cf0a:	f7ff fdbb 	bl	800ca84 <HAL_I2C_SlaveRxCpltCallback>
 800cf0e:	e785      	b.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800cf10:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800cf12:	6959      	ldr	r1, [r3, #20]
 800cf14:	e76a      	b.n	800cdec <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cf16:	078d      	lsls	r5, r1, #30
 800cf18:	d515      	bpl.n	800cf46 <HAL_I2C_EV_IRQHandler+0x18a>
 800cf1a:	0585      	lsls	r5, r0, #22
 800cf1c:	d513      	bpl.n	800cf46 <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800cf1e:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800cf22:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800cf24:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800cf26:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800cf2a:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800cf2c:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800cf2e:	f000 81b3 	beq.w	800d298 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cf32:	2200      	movs	r2, #0
 800cf34:	920a      	str	r2, [sp, #40]	; 0x28
 800cf36:	695a      	ldr	r2, [r3, #20]
 800cf38:	920a      	str	r2, [sp, #40]	; 0x28
 800cf3a:	699b      	ldr	r3, [r3, #24]
 800cf3c:	930a      	str	r3, [sp, #40]	; 0x28
 800cf3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cf40:	e76c      	b.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cf42:	070d      	lsls	r5, r1, #28
 800cf44:	d5e7      	bpl.n	800cf16 <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800cf46:	0776      	lsls	r6, r6, #29
 800cf48:	f140 80f5 	bpl.w	800d136 <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800cf4c:	685d      	ldr	r5, [r3, #4]
 800cf4e:	052d      	lsls	r5, r5, #20
 800cf50:	f53f af64 	bmi.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800cf54:	060e      	lsls	r6, r1, #24
 800cf56:	f140 8115 	bpl.w	800d184 <HAL_I2C_EV_IRQHandler+0x3c8>
 800cf5a:	0545      	lsls	r5, r0, #21
 800cf5c:	f140 8112 	bpl.w	800d184 <HAL_I2C_EV_IRQHandler+0x3c8>
 800cf60:	074e      	lsls	r6, r1, #29
 800cf62:	f100 8112 	bmi.w	800d18a <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cf66:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800cf6a:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800cf6c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800cf70:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cf72:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800cf74:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800cf76:	2800      	cmp	r0, #0
 800cf78:	f040 8235 	bne.w	800d3e6 <HAL_I2C_EV_IRQHandler+0x62a>
 800cf7c:	2a21      	cmp	r2, #33	; 0x21
 800cf7e:	f000 8347 	beq.w	800d610 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800cf82:	2940      	cmp	r1, #64	; 0x40
 800cf84:	f47f af4a 	bne.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800cf88:	2a22      	cmp	r2, #34	; 0x22
 800cf8a:	f47f af47 	bne.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800cf8e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cf90:	b292      	uxth	r2, r2
 800cf92:	2a00      	cmp	r2, #0
 800cf94:	f000 8268 	beq.w	800d468 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800cf98:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800cf9c:	2a40      	cmp	r2, #64	; 0x40
 800cf9e:	f040 80b4 	bne.w	800d10a <HAL_I2C_EV_IRQHandler+0x34e>
 800cfa2:	e0fc      	b.n	800d19e <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cfa4:	0585      	lsls	r5, r0, #22
 800cfa6:	d580      	bpl.n	800ceaa <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cfa8:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800cfac:	685a      	ldr	r2, [r3, #4]
 800cfae:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800cfb2:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800cfb4:	960d      	str	r6, [sp, #52]	; 0x34
 800cfb6:	695a      	ldr	r2, [r3, #20]
 800cfb8:	920d      	str	r2, [sp, #52]	; 0x34
 800cfba:	681a      	ldr	r2, [r3, #0]
 800cfbc:	f042 0201 	orr.w	r2, r2, #1
 800cfc0:	601a      	str	r2, [r3, #0]
 800cfc2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cfc4:	681a      	ldr	r2, [r3, #0]
 800cfc6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800cfca:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800cfcc:	685a      	ldr	r2, [r3, #4]
 800cfce:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cfd0:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800cfd2:	d521      	bpl.n	800d018 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800cfd4:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800cfd8:	2a22      	cmp	r2, #34	; 0x22
 800cfda:	f000 817a 	beq.w	800d2d2 <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800cfde:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800cfe0:	6802      	ldr	r2, [r0, #0]
 800cfe2:	6852      	ldr	r2, [r2, #4]
 800cfe4:	b292      	uxth	r2, r2
 800cfe6:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800cfe8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cfea:	b292      	uxth	r2, r2
 800cfec:	b11a      	cbz	r2, 800cff6 <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800cfee:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800cff0:	f042 0204 	orr.w	r2, r2, #4
 800cff4:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800cff6:	685a      	ldr	r2, [r3, #4]
 800cff8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800cffc:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800cffe:	f7fe fc2d 	bl	800b85c <HAL_DMA_GetState>
 800d002:	2801      	cmp	r0, #1
 800d004:	d008      	beq.n	800d018 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800d006:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800d008:	4b99      	ldr	r3, [pc, #612]	; (800d270 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800d00a:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800d00c:	f7fe fc14 	bl	800b838 <HAL_DMA_Abort_IT>
 800d010:	b110      	cbz	r0, 800d018 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800d012:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800d014:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800d016:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800d018:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800d01a:	b29b      	uxth	r3, r3
 800d01c:	b313      	cbz	r3, 800d064 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800d01e:	6823      	ldr	r3, [r4, #0]
 800d020:	695a      	ldr	r2, [r3, #20]
 800d022:	0752      	lsls	r2, r2, #29
 800d024:	d50a      	bpl.n	800d03c <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d026:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d028:	691b      	ldr	r3, [r3, #16]
 800d02a:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800d02c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800d02e:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800d030:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800d032:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800d034:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800d036:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800d038:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800d03a:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800d03c:	695a      	ldr	r2, [r3, #20]
 800d03e:	0656      	lsls	r6, r2, #25
 800d040:	d509      	bpl.n	800d056 <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d042:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d044:	691b      	ldr	r3, [r3, #16]
 800d046:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800d048:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800d04a:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800d04c:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800d04e:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800d050:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800d052:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800d054:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800d056:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800d058:	b29b      	uxth	r3, r3
 800d05a:	b11b      	cbz	r3, 800d064 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800d05c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800d05e:	f043 0304 	orr.w	r3, r3, #4
 800d062:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800d064:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800d066:	2b00      	cmp	r3, #0
 800d068:	f040 80dd 	bne.w	800d226 <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800d06c:	2d2a      	cmp	r5, #42	; 0x2a
 800d06e:	f000 8151 	beq.w	800d314 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800d072:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800d076:	2b28      	cmp	r3, #40	; 0x28
 800d078:	f000 8154 	beq.w	800d324 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800d07c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d07e:	2b22      	cmp	r3, #34	; 0x22
 800d080:	d002      	beq.n	800d088 <HAL_I2C_EV_IRQHandler+0x2cc>
 800d082:	2d22      	cmp	r5, #34	; 0x22
 800d084:	f47f aeca 	bne.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800d088:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800d08a:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800d08c:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800d08e:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800d090:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800d094:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800d098:	f7ff fcf4 	bl	800ca84 <HAL_I2C_SlaveRxCpltCallback>
 800d09c:	e6be      	b.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800d09e:	060d      	lsls	r5, r1, #24
 800d0a0:	d528      	bpl.n	800d0f4 <HAL_I2C_EV_IRQHandler+0x338>
 800d0a2:	0546      	lsls	r6, r0, #21
 800d0a4:	d526      	bpl.n	800d0f4 <HAL_I2C_EV_IRQHandler+0x338>
 800d0a6:	074d      	lsls	r5, r1, #29
 800d0a8:	d427      	bmi.n	800d0fa <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800d0aa:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800d0ae:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800d0b0:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800d0b2:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800d0b4:	2900      	cmp	r1, #0
 800d0b6:	f43f aeb1 	beq.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800d0ba:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800d0bc:	f811 5b01 	ldrb.w	r5, [r1], #1
 800d0c0:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800d0c2:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800d0c4:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800d0c6:	3901      	subs	r1, #1
 800d0c8:	b289      	uxth	r1, r1
 800d0ca:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800d0cc:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800d0ce:	b289      	uxth	r1, r1
 800d0d0:	2900      	cmp	r1, #0
 800d0d2:	f47f aea3 	bne.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
 800d0d6:	2829      	cmp	r0, #41	; 0x29
 800d0d8:	f47f aea0 	bne.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d0dc:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800d0de:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d0e0:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800d0e4:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800d0e6:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800d0e8:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800d0ea:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800d0ee:	f7ff fcc7 	bl	800ca80 <HAL_I2C_SlaveTxCpltCallback>
 800d0f2:	e693      	b.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800d0f4:	0749      	lsls	r1, r1, #29
 800d0f6:	f57f ae91 	bpl.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
 800d0fa:	0582      	lsls	r2, r0, #22
 800d0fc:	f57f ae8e 	bpl.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800d100:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d102:	b292      	uxth	r2, r2
 800d104:	2a00      	cmp	r2, #0
 800d106:	f43f ae89 	beq.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800d10a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d10c:	f812 1b01 	ldrb.w	r1, [r2], #1
 800d110:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800d112:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800d114:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800d116:	3b01      	subs	r3, #1
 800d118:	b29b      	uxth	r3, r3
 800d11a:	8563      	strh	r3, [r4, #42]	; 0x2a
 800d11c:	e67e      	b.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800d11e:	074a      	lsls	r2, r1, #29
 800d120:	f57f ae7c 	bpl.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
 800d124:	0586      	lsls	r6, r0, #22
 800d126:	f57f ae79 	bpl.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800d12a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d12c:	b292      	uxth	r2, r2
 800d12e:	2a00      	cmp	r2, #0
 800d130:	f43f ae74 	beq.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
 800d134:	e01b      	b.n	800d16e <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800d136:	685a      	ldr	r2, [r3, #4]
 800d138:	0512      	lsls	r2, r2, #20
 800d13a:	f53f ae6f 	bmi.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800d13e:	064e      	lsls	r6, r1, #25
 800d140:	d433      	bmi.n	800d1aa <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800d142:	0749      	lsls	r1, r1, #29
 800d144:	f57f ae6a 	bpl.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
 800d148:	0582      	lsls	r2, r0, #22
 800d14a:	f57f ae67 	bpl.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800d14e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800d150:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d152:	b292      	uxth	r2, r2
 800d154:	2a04      	cmp	r2, #4
 800d156:	f000 8113 	beq.w	800d380 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800d15a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d15c:	b292      	uxth	r2, r2
 800d15e:	2a03      	cmp	r2, #3
 800d160:	f000 8153 	beq.w	800d40a <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800d164:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d166:	b292      	uxth	r2, r2
 800d168:	2a02      	cmp	r2, #2
 800d16a:	f000 8182 	beq.w	800d472 <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d16e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d170:	691b      	ldr	r3, [r3, #16]
 800d172:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800d174:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800d176:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800d178:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800d17a:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800d17c:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800d17e:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800d180:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800d182:	e64b      	b.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800d184:	074d      	lsls	r5, r1, #29
 800d186:	f57f ae49 	bpl.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
 800d18a:	0581      	lsls	r1, r0, #22
 800d18c:	f57f ae46 	bpl.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800d190:	2a21      	cmp	r2, #33	; 0x21
 800d192:	f000 80fd 	beq.w	800d390 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800d196:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800d19a:	f47f ae3f 	bne.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800d19e:	4620      	mov	r0, r4
}
 800d1a0:	b00e      	add	sp, #56	; 0x38
 800d1a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800d1a6:	f7ff bc75 	b.w	800ca94 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800d1aa:	0545      	lsls	r5, r0, #21
 800d1ac:	d5c9      	bpl.n	800d142 <HAL_I2C_EV_IRQHandler+0x386>
 800d1ae:	f011 0104 	ands.w	r1, r1, #4
 800d1b2:	d1c9      	bne.n	800d148 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800d1b4:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800d1b8:	2a22      	cmp	r2, #34	; 0x22
 800d1ba:	f47f ae2f 	bne.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800d1be:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d1c0:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800d1c2:	2a03      	cmp	r2, #3
 800d1c4:	f240 81ec 	bls.w	800d5a0 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d1c8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d1ca:	691b      	ldr	r3, [r3, #16]
 800d1cc:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800d1ce:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800d1d0:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800d1d2:	3b01      	subs	r3, #1
 800d1d4:	b29b      	uxth	r3, r3
 800d1d6:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800d1d8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800d1da:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800d1dc:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800d1de:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800d1e0:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800d1e2:	f47f ae1b 	bne.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d1e6:	6822      	ldr	r2, [r4, #0]
 800d1e8:	6853      	ldr	r3, [r2, #4]
 800d1ea:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800d1ee:	6053      	str	r3, [r2, #4]
 800d1f0:	e614      	b.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800d1f2:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800d1f6:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800d1f8:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800d1fa:	bf16      	itet	ne
 800d1fc:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800d200:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800d204:	b2d2      	uxtbne	r2, r2
 800d206:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800d208:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800d20a:	b11a      	cbz	r2, 800d214 <HAL_I2C_EV_IRQHandler+0x458>
 800d20c:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800d20e:	2a00      	cmp	r2, #0
 800d210:	f47f ae21 	bne.w	800ce56 <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800d214:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d216:	2a00      	cmp	r2, #0
 800d218:	f43f ae00 	beq.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
 800d21c:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800d21e:	2a00      	cmp	r2, #0
 800d220:	f47f ae19 	bne.w	800ce56 <HAL_I2C_EV_IRQHandler+0x9a>
 800d224:	e5fa      	b.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800d226:	4620      	mov	r0, r4
}
 800d228:	b00e      	add	sp, #56	; 0x38
 800d22a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800d22e:	f7ff bd0f 	b.w	800cc50 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800d232:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800d234:	bb52      	cbnz	r2, 800d28c <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800d236:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800d238:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800d23c:	611a      	str	r2, [r3, #16]
 800d23e:	e5ed      	b.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800d240:	2201      	movs	r2, #1
 800d242:	62e2      	str	r2, [r4, #44]	; 0x2c
 800d244:	e619      	b.n	800ce7a <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800d246:	685a      	ldr	r2, [r3, #4]
 800d248:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d24c:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800d24e:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800d250:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800d254:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800d258:	bf54      	ite	pl
 800d25a:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800d25c:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800d25e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800d262:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800d266:	4620      	mov	r0, r4
 800d268:	f7ff fc0e 	bl	800ca88 <HAL_I2C_AddrCallback>
 800d26c:	e5d6      	b.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
 800d26e:	bf00      	nop
 800d270:	0800cb5d 	.word	0x0800cb5d
      else if (hi2c->EventCount == 1U)
 800d274:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800d276:	2a01      	cmp	r2, #1
 800d278:	f47f add0 	bne.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800d27c:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800d27e:	11d2      	asrs	r2, r2, #7
 800d280:	f002 0206 	and.w	r2, r2, #6
 800d284:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800d288:	611a      	str	r2, [r3, #16]
 800d28a:	e5c7      	b.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800d28c:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800d28e:	f042 0201 	orr.w	r2, r2, #1
 800d292:	b2d2      	uxtb	r2, r2
 800d294:	611a      	str	r2, [r3, #16]
 800d296:	e5c1      	b.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800d298:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800d29a:	b911      	cbnz	r1, 800d2a2 <HAL_I2C_EV_IRQHandler+0x4e6>
 800d29c:	2a40      	cmp	r2, #64	; 0x40
 800d29e:	f000 809b 	beq.w	800d3d8 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800d2a2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800d2a4:	b922      	cbnz	r2, 800d2b0 <HAL_I2C_EV_IRQHandler+0x4f4>
 800d2a6:	6921      	ldr	r1, [r4, #16]
 800d2a8:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800d2ac:	f000 809f 	beq.w	800d3ee <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800d2b0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d2b2:	b292      	uxth	r2, r2
 800d2b4:	2a00      	cmp	r2, #0
 800d2b6:	d142      	bne.n	800d33e <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d2b8:	9203      	str	r2, [sp, #12]
 800d2ba:	695a      	ldr	r2, [r3, #20]
 800d2bc:	9203      	str	r2, [sp, #12]
 800d2be:	699a      	ldr	r2, [r3, #24]
 800d2c0:	9203      	str	r2, [sp, #12]
 800d2c2:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d2c4:	681a      	ldr	r2, [r3, #0]
 800d2c6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d2ca:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800d2cc:	2300      	movs	r3, #0
 800d2ce:	6523      	str	r3, [r4, #80]	; 0x50
 800d2d0:	e5a4      	b.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800d2d2:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800d2d4:	6802      	ldr	r2, [r0, #0]
 800d2d6:	6852      	ldr	r2, [r2, #4]
 800d2d8:	b292      	uxth	r2, r2
 800d2da:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800d2dc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d2de:	b292      	uxth	r2, r2
 800d2e0:	b11a      	cbz	r2, 800d2ea <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800d2e2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d2e4:	f042 0204 	orr.w	r2, r2, #4
 800d2e8:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800d2ea:	685a      	ldr	r2, [r3, #4]
 800d2ec:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800d2f0:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800d2f2:	f7fe fab3 	bl	800b85c <HAL_DMA_GetState>
 800d2f6:	2801      	cmp	r0, #1
 800d2f8:	f43f ae8e 	beq.w	800d018 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800d2fc:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800d2fe:	4b98      	ldr	r3, [pc, #608]	; (800d560 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800d300:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800d302:	f7fe fa99 	bl	800b838 <HAL_DMA_Abort_IT>
 800d306:	2800      	cmp	r0, #0
 800d308:	f43f ae86 	beq.w	800d018 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800d30c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800d30e:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800d310:	4798      	blx	r3
 800d312:	e681      	b.n	800d018 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800d314:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800d316:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800d318:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800d31a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800d31e:	f7ff fbb1 	bl	800ca84 <HAL_I2C_SlaveRxCpltCallback>
 800d322:	e6a6      	b.n	800d072 <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800d324:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800d326:	498f      	ldr	r1, [pc, #572]	; (800d564 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800d328:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800d32a:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800d32c:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800d32e:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800d330:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d334:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800d338:	f7ff fba8 	bl	800ca8c <HAL_I2C_ListenCpltCallback>
 800d33c:	e56e      	b.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800d33e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d340:	b292      	uxth	r2, r2
 800d342:	2a01      	cmp	r2, #1
 800d344:	d070      	beq.n	800d428 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800d346:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d348:	b292      	uxth	r2, r2
 800d34a:	2a02      	cmp	r2, #2
 800d34c:	f000 80d6 	beq.w	800d4fc <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d350:	681a      	ldr	r2, [r3, #0]
 800d352:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d356:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800d358:	685a      	ldr	r2, [r3, #4]
 800d35a:	0511      	lsls	r1, r2, #20
 800d35c:	d508      	bpl.n	800d370 <HAL_I2C_EV_IRQHandler+0x5b4>
 800d35e:	2820      	cmp	r0, #32
 800d360:	f200 80f8 	bhi.w	800d554 <HAL_I2C_EV_IRQHandler+0x798>
 800d364:	2807      	cmp	r0, #7
 800d366:	f200 80ea 	bhi.w	800d53e <HAL_I2C_EV_IRQHandler+0x782>
 800d36a:	2801      	cmp	r0, #1
 800d36c:	f000 80ed 	beq.w	800d54a <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d370:	2200      	movs	r2, #0
 800d372:	9209      	str	r2, [sp, #36]	; 0x24
 800d374:	695a      	ldr	r2, [r3, #20]
 800d376:	9209      	str	r2, [sp, #36]	; 0x24
 800d378:	699b      	ldr	r3, [r3, #24]
 800d37a:	9309      	str	r3, [sp, #36]	; 0x24
 800d37c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d37e:	e7a5      	b.n	800d2cc <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d380:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d382:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d384:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d388:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d38a:	691b      	ldr	r3, [r3, #16]
 800d38c:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800d38e:	e6f1      	b.n	800d174 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800d390:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800d392:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800d396:	2a21      	cmp	r2, #33	; 0x21
 800d398:	f47f ad40 	bne.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800d39c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d39e:	b292      	uxth	r2, r2
 800d3a0:	2a00      	cmp	r2, #0
 800d3a2:	f47f aeb2 	bne.w	800d10a <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800d3a6:	2908      	cmp	r1, #8
 800d3a8:	f000 80e2 	beq.w	800d570 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d3ac:	2920      	cmp	r1, #32
 800d3ae:	f000 80df 	beq.w	800d570 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d3b2:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800d3b6:	f000 80db 	beq.w	800d570 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d3ba:	6859      	ldr	r1, [r3, #4]
 800d3bc:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800d3c0:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d3c2:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800d3c4:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d3c6:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800d3c8:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800d3cc:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800d3ce:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800d3d2:	f7ff fb51 	bl	800ca78 <HAL_I2C_MasterTxCpltCallback>
 800d3d6:	e521      	b.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d3d8:	9101      	str	r1, [sp, #4]
 800d3da:	695a      	ldr	r2, [r3, #20]
 800d3dc:	9201      	str	r2, [sp, #4]
 800d3de:	699b      	ldr	r3, [r3, #24]
 800d3e0:	9301      	str	r3, [sp, #4]
 800d3e2:	9b01      	ldr	r3, [sp, #4]
 800d3e4:	e51a      	b.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800d3e6:	2a21      	cmp	r2, #33	; 0x21
 800d3e8:	f43f add1 	beq.w	800cf8e <HAL_I2C_EV_IRQHandler+0x1d2>
 800d3ec:	e5c9      	b.n	800cf82 <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d3ee:	9202      	str	r2, [sp, #8]
 800d3f0:	695a      	ldr	r2, [r3, #20]
 800d3f2:	9202      	str	r2, [sp, #8]
 800d3f4:	699a      	ldr	r2, [r3, #24]
 800d3f6:	9202      	str	r2, [sp, #8]
 800d3f8:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800d3fa:	681a      	ldr	r2, [r3, #0]
 800d3fc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800d400:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800d402:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800d404:	3301      	adds	r3, #1
 800d406:	6523      	str	r3, [r4, #80]	; 0x50
 800d408:	e508      	b.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d40a:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800d40c:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d40e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d412:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800d414:	f43f aeab 	beq.w	800d16e <HAL_I2C_EV_IRQHandler+0x3b2>
 800d418:	2902      	cmp	r1, #2
 800d41a:	f43f aea8 	beq.w	800d16e <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d41e:	681a      	ldr	r2, [r3, #0]
 800d420:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d424:	601a      	str	r2, [r3, #0]
 800d426:	e6a2      	b.n	800d16e <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800d428:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800d42c:	f000 811b 	beq.w	800d666 <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800d430:	2808      	cmp	r0, #8
 800d432:	f000 8108 	beq.w	800d646 <HAL_I2C_EV_IRQHandler+0x88a>
 800d436:	2820      	cmp	r0, #32
 800d438:	f000 8105 	beq.w	800d646 <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800d43c:	2d12      	cmp	r5, #18
 800d43e:	f000 80ff 	beq.w	800d640 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800d442:	2810      	cmp	r0, #16
 800d444:	d804      	bhi.n	800d450 <HAL_I2C_EV_IRQHandler+0x694>
 800d446:	4a48      	ldr	r2, [pc, #288]	; (800d568 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800d448:	40c2      	lsrs	r2, r0
 800d44a:	07d1      	lsls	r1, r2, #31
 800d44c:	f100 814c 	bmi.w	800d6e8 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d450:	681a      	ldr	r2, [r3, #0]
 800d452:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d456:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d458:	2200      	movs	r2, #0
 800d45a:	9206      	str	r2, [sp, #24]
 800d45c:	695a      	ldr	r2, [r3, #20]
 800d45e:	9206      	str	r2, [sp, #24]
 800d460:	699b      	ldr	r3, [r3, #24]
 800d462:	9306      	str	r3, [sp, #24]
 800d464:	9b06      	ldr	r3, [sp, #24]
 800d466:	e731      	b.n	800d2cc <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d468:	685a      	ldr	r2, [r3, #4]
 800d46a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d46e:	605a      	str	r2, [r3, #4]
 800d470:	e4d4      	b.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800d472:	3901      	subs	r1, #1
 800d474:	290f      	cmp	r1, #15
 800d476:	d809      	bhi.n	800d48c <HAL_I2C_EV_IRQHandler+0x6d0>
 800d478:	e8df f001 	tbb	[pc, r1]
 800d47c:	3608363b 	.word	0x3608363b
 800d480:	08080808 	.word	0x08080808
 800d484:	08080808 	.word	0x08080808
 800d488:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d48c:	681a      	ldr	r2, [r3, #0]
 800d48e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d492:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d494:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d496:	691b      	ldr	r3, [r3, #16]
 800d498:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800d49a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800d49c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d49e:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800d4a0:	3b01      	subs	r3, #1
 800d4a2:	b29b      	uxth	r3, r3
 800d4a4:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d4a6:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800d4a8:	1c51      	adds	r1, r2, #1
 800d4aa:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d4ac:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800d4ae:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d4b0:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800d4b2:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800d4b4:	3b01      	subs	r3, #1
 800d4b6:	b29b      	uxth	r3, r3
 800d4b8:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d4ba:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800d4bc:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d4be:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800d4c2:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800d4c4:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d4c6:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800d4c8:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d4cc:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800d4d0:	2b40      	cmp	r3, #64	; 0x40
 800d4d2:	f000 80f5 	beq.w	800d6c0 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d4d6:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800d4d8:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d4da:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800d4de:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800d4e0:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800d4e2:	f7ff facb 	bl	800ca7c <HAL_I2C_MasterRxCpltCallback>
 800d4e6:	e499      	b.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d4e8:	681a      	ldr	r2, [r3, #0]
 800d4ea:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d4ee:	601a      	str	r2, [r3, #0]
 800d4f0:	e7d0      	b.n	800d494 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d4f2:	681a      	ldr	r2, [r3, #0]
 800d4f4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d4f8:	601a      	str	r2, [r3, #0]
 800d4fa:	e7cb      	b.n	800d494 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800d4fc:	2810      	cmp	r0, #16
 800d4fe:	d804      	bhi.n	800d50a <HAL_I2C_EV_IRQHandler+0x74e>
 800d500:	4a19      	ldr	r2, [pc, #100]	; (800d568 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800d502:	40c2      	lsrs	r2, r0
 800d504:	07d2      	lsls	r2, r2, #31
 800d506:	f100 80c2 	bmi.w	800d68e <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d50a:	681a      	ldr	r2, [r3, #0]
 800d50c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d510:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800d512:	681a      	ldr	r2, [r3, #0]
 800d514:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800d518:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800d51a:	685a      	ldr	r2, [r3, #4]
 800d51c:	0516      	lsls	r6, r2, #20
 800d51e:	d506      	bpl.n	800d52e <HAL_I2C_EV_IRQHandler+0x772>
 800d520:	2820      	cmp	r0, #32
 800d522:	f240 80bc 	bls.w	800d69e <HAL_I2C_EV_IRQHandler+0x8e2>
 800d526:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800d52a:	f000 80bd 	beq.w	800d6a8 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d52e:	2200      	movs	r2, #0
 800d530:	9208      	str	r2, [sp, #32]
 800d532:	695a      	ldr	r2, [r3, #20]
 800d534:	9208      	str	r2, [sp, #32]
 800d536:	699b      	ldr	r3, [r3, #24]
 800d538:	9308      	str	r3, [sp, #32]
 800d53a:	9b08      	ldr	r3, [sp, #32]
 800d53c:	e6c6      	b.n	800d2cc <HAL_I2C_EV_IRQHandler+0x510>
 800d53e:	4a0b      	ldr	r2, [pc, #44]	; (800d56c <HAL_I2C_EV_IRQHandler+0x7b0>)
 800d540:	3808      	subs	r0, #8
 800d542:	40c2      	lsrs	r2, r0
 800d544:	07d2      	lsls	r2, r2, #31
 800d546:	f57f af13 	bpl.w	800d370 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800d54a:	685a      	ldr	r2, [r3, #4]
 800d54c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800d550:	605a      	str	r2, [r3, #4]
 800d552:	e70d      	b.n	800d370 <HAL_I2C_EV_IRQHandler+0x5b4>
 800d554:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800d558:	f47f af0a 	bne.w	800d370 <HAL_I2C_EV_IRQHandler+0x5b4>
 800d55c:	e7f5      	b.n	800d54a <HAL_I2C_EV_IRQHandler+0x78e>
 800d55e:	bf00      	nop
 800d560:	0800cb5d 	.word	0x0800cb5d
 800d564:	ffff0000 	.word	0xffff0000
 800d568:	00010014 	.word	0x00010014
 800d56c:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d570:	6859      	ldr	r1, [r3, #4]
 800d572:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800d576:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d578:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800d57a:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800d57c:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d57e:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800d582:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800d584:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800d586:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d58a:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800d58e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d592:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800d594:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d596:	f47f af1c 	bne.w	800d3d2 <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800d59a:	f7ff fa79 	bl	800ca90 <HAL_I2C_MemTxCpltCallback>
 800d59e:	e43d      	b.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800d5a0:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800d5a2:	2802      	cmp	r0, #2
 800d5a4:	f43f af60 	beq.w	800d468 <HAL_I2C_EV_IRQHandler+0x6ac>
 800d5a8:	2a01      	cmp	r2, #1
 800d5aa:	f63f af5d 	bhi.w	800d468 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800d5ae:	4a62      	ldr	r2, [pc, #392]	; (800d738 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800d5b0:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800d5b2:	6812      	ldr	r2, [r2, #0]
 800d5b4:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800d5b8:	fbb2 f2f0 	udiv	r2, r2, r0
 800d5bc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800d5c0:	920b      	str	r2, [sp, #44]	; 0x2c
 800d5c2:	e004      	b.n	800d5ce <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800d5c4:	681a      	ldr	r2, [r3, #0]
 800d5c6:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800d5ca:	f000 8092 	beq.w	800d6f2 <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800d5ce:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d5d0:	3a01      	subs	r2, #1
 800d5d2:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800d5d4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800d5d6:	2900      	cmp	r1, #0
 800d5d8:	d1f4      	bne.n	800d5c4 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800d5da:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d5dc:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800d5de:	f042 0220 	orr.w	r2, r2, #32
 800d5e2:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d5e4:	685a      	ldr	r2, [r3, #4]
 800d5e6:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800d5ea:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d5ec:	691b      	ldr	r3, [r3, #16]
 800d5ee:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800d5f0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800d5f2:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800d5f4:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800d5f6:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800d5f8:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800d5fa:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800d5fc:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800d5fe:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800d600:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800d604:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800d606:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800d60a:	f7ff faa3 	bl	800cb54 <HAL_I2C_ErrorCallback>
 800d60e:	e405      	b.n	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800d610:	2d08      	cmp	r5, #8
 800d612:	d0ad      	beq.n	800d570 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d614:	2d20      	cmp	r5, #32
 800d616:	d0ab      	beq.n	800d570 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d618:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800d61c:	d0a8      	beq.n	800d570 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d61e:	685a      	ldr	r2, [r3, #4]
 800d620:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800d624:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d626:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d628:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800d62a:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d62c:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d62e:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800d632:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800d634:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800d638:	f7ff fa1e 	bl	800ca78 <HAL_I2C_MasterTxCpltCallback>
 800d63c:	f7ff bbee 	b.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800d640:	2801      	cmp	r0, #1
 800d642:	f43f af05 	beq.w	800d450 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d646:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d648:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d64a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d64e:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d650:	9107      	str	r1, [sp, #28]
 800d652:	695a      	ldr	r2, [r3, #20]
 800d654:	9207      	str	r2, [sp, #28]
 800d656:	699a      	ldr	r2, [r3, #24]
 800d658:	9207      	str	r2, [sp, #28]
 800d65a:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d65c:	681a      	ldr	r2, [r3, #0]
 800d65e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d662:	601a      	str	r2, [r3, #0]
 800d664:	e632      	b.n	800d2cc <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d666:	681a      	ldr	r2, [r3, #0]
 800d668:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d66c:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800d66e:	685a      	ldr	r2, [r3, #4]
 800d670:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800d674:	d02d      	beq.n	800d6d2 <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d676:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d678:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d67a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d67e:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d680:	9104      	str	r1, [sp, #16]
 800d682:	695a      	ldr	r2, [r3, #20]
 800d684:	9204      	str	r2, [sp, #16]
 800d686:	699b      	ldr	r3, [r3, #24]
 800d688:	9304      	str	r3, [sp, #16]
 800d68a:	9b04      	ldr	r3, [sp, #16]
 800d68c:	e61e      	b.n	800d2cc <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d68e:	681a      	ldr	r2, [r3, #0]
 800d690:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d694:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800d696:	685a      	ldr	r2, [r3, #4]
 800d698:	0515      	lsls	r5, r2, #20
 800d69a:	f57f af48 	bpl.w	800d52e <HAL_I2C_EV_IRQHandler+0x772>
 800d69e:	2807      	cmp	r0, #7
 800d6a0:	d807      	bhi.n	800d6b2 <HAL_I2C_EV_IRQHandler+0x8f6>
 800d6a2:	2801      	cmp	r0, #1
 800d6a4:	f47f af43 	bne.w	800d52e <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800d6a8:	685a      	ldr	r2, [r3, #4]
 800d6aa:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800d6ae:	605a      	str	r2, [r3, #4]
 800d6b0:	e73d      	b.n	800d52e <HAL_I2C_EV_IRQHandler+0x772>
 800d6b2:	4a22      	ldr	r2, [pc, #136]	; (800d73c <HAL_I2C_EV_IRQHandler+0x980>)
 800d6b4:	3808      	subs	r0, #8
 800d6b6:	40c2      	lsrs	r2, r0
 800d6b8:	07d0      	lsls	r0, r2, #31
 800d6ba:	f57f af38 	bpl.w	800d52e <HAL_I2C_EV_IRQHandler+0x772>
 800d6be:	e7f3      	b.n	800d6a8 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d6c0:	2300      	movs	r3, #0
 800d6c2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800d6c6:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800d6c8:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800d6ca:	f7ff fa41 	bl	800cb50 <HAL_I2C_MemRxCpltCallback>
 800d6ce:	f7ff bba5 	b.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d6d2:	9205      	str	r2, [sp, #20]
 800d6d4:	695a      	ldr	r2, [r3, #20]
 800d6d6:	9205      	str	r2, [sp, #20]
 800d6d8:	699a      	ldr	r2, [r3, #24]
 800d6da:	9205      	str	r2, [sp, #20]
 800d6dc:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d6de:	681a      	ldr	r2, [r3, #0]
 800d6e0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d6e4:	601a      	str	r2, [r3, #0]
 800d6e6:	e5f1      	b.n	800d2cc <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d6e8:	681a      	ldr	r2, [r3, #0]
 800d6ea:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d6ee:	601a      	str	r2, [r3, #0]
 800d6f0:	e6b2      	b.n	800d458 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d6f2:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d6f4:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d6f6:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800d6fa:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d6fc:	6859      	ldr	r1, [r3, #4]
 800d6fe:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800d702:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d704:	691b      	ldr	r3, [r3, #16]
 800d706:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800d708:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800d70a:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800d70c:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800d70e:	b29b      	uxth	r3, r3
 800d710:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800d712:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800d716:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d718:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800d71c:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d71e:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800d720:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d722:	f47f aed9 	bne.w	800d4d8 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800d726:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800d72a:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800d72c:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800d72e:	f7ff fa0f 	bl	800cb50 <HAL_I2C_MemRxCpltCallback>
 800d732:	f7ff bb73 	b.w	800ce1c <HAL_I2C_EV_IRQHandler+0x60>
 800d736:	bf00      	nop
 800d738:	20000078 	.word	0x20000078
 800d73c:	01000101 	.word	0x01000101

0800d740 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800d740:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800d744:	2a20      	cmp	r2, #32
{
 800d746:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800d748:	fa5f fc82 	uxtb.w	ip, r2
 800d74c:	d001      	beq.n	800d752 <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800d74e:	2002      	movs	r0, #2
  }
}
 800d750:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800d752:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800d754:	2024      	movs	r0, #36	; 0x24
 800d756:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800d75a:	6810      	ldr	r0, [r2, #0]
 800d75c:	f020 0001 	bic.w	r0, r0, #1
 800d760:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800d762:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800d764:	f020 0010 	bic.w	r0, r0, #16
 800d768:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800d76a:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800d76c:	4301      	orrs	r1, r0
 800d76e:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800d770:	6811      	ldr	r1, [r2, #0]
 800d772:	f041 0101 	orr.w	r1, r1, #1
 800d776:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800d778:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800d77a:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800d77e:	4770      	bx	lr

0800d780 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800d780:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800d784:	2a20      	cmp	r2, #32
 800d786:	d001      	beq.n	800d78c <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800d788:	2002      	movs	r0, #2
  }
}
 800d78a:	4770      	bx	lr
{
 800d78c:	b410      	push	{r4}
 800d78e:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800d792:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800d794:	2224      	movs	r2, #36	; 0x24
 800d796:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800d79a:	6822      	ldr	r2, [r4, #0]
 800d79c:	f022 0201 	bic.w	r2, r2, #1
 800d7a0:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800d7a2:	4603      	mov	r3, r0
 800d7a4:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800d7a6:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800d7aa:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800d7ac:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800d7ae:	b289      	uxth	r1, r1
 800d7b0:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800d7b2:	6822      	ldr	r2, [r4, #0]
 800d7b4:	f042 0201 	orr.w	r2, r2, #1
 800d7b8:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800d7ba:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800d7be:	2000      	movs	r0, #0
}
 800d7c0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d7c4:	4770      	bx	lr
 800d7c6:	bf00      	nop

0800d7c8 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800d7c8:	2800      	cmp	r0, #0
 800d7ca:	d069      	beq.n	800d8a0 <HAL_LTDC_Init+0xd8>
{
 800d7cc:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800d7ce:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800d7d2:	4604      	mov	r4, r0
 800d7d4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d7d8:	2b00      	cmp	r3, #0
 800d7da:	d05c      	beq.n	800d896 <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d7dc:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800d7de:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d7e0:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d7e4:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800d7e8:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d7ea:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800d7ec:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800d7f0:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800d7f4:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d7f6:	6999      	ldr	r1, [r3, #24]
 800d7f8:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800d7fa:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d7fc:	430a      	orrs	r2, r1
 800d7fe:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800d800:	689a      	ldr	r2, [r3, #8]
 800d802:	4928      	ldr	r1, [pc, #160]	; (800d8a4 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800d804:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800d806:	400a      	ands	r2, r1
 800d808:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800d80a:	689a      	ldr	r2, [r3, #8]
 800d80c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d810:	69a0      	ldr	r0, [r4, #24]
 800d812:	4302      	orrs	r2, r0
 800d814:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800d816:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800d818:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800d81a:	400a      	ands	r2, r1
 800d81c:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800d81e:	68da      	ldr	r2, [r3, #12]
 800d820:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d824:	6a20      	ldr	r0, [r4, #32]
 800d826:	4302      	orrs	r2, r0
 800d828:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800d82a:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800d82c:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800d82e:	400a      	ands	r2, r1
 800d830:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800d832:	691a      	ldr	r2, [r3, #16]
 800d834:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d838:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800d83a:	4302      	orrs	r2, r0
 800d83c:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800d83e:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800d840:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800d842:	400a      	ands	r2, r1
 800d844:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800d846:	695a      	ldr	r2, [r3, #20]
 800d848:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d84a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d84e:	430a      	orrs	r2, r1
 800d850:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800d852:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800d854:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800d858:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800d85c:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800d860:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800d862:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800d864:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800d868:	432a      	orrs	r2, r5
 800d86a:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800d86e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800d872:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800d874:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d876:	f042 0206 	orr.w	r2, r2, #6
 800d87a:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800d87c:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800d87e:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800d882:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800d884:	ea42 020c 	orr.w	r2, r2, ip
 800d888:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800d88a:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800d88e:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800d892:	4608      	mov	r0, r1
}
 800d894:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800d896:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800d89a:	f7f4 fdc9 	bl	8002430 <HAL_LTDC_MspInit>
 800d89e:	e79d      	b.n	800d7dc <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800d8a0:	2001      	movs	r0, #1
}
 800d8a2:	4770      	bx	lr
 800d8a4:	f000f800 	.word	0xf000f800

0800d8a8 <HAL_LTDC_ErrorCallback>:
 800d8a8:	4770      	bx	lr
 800d8aa:	bf00      	nop

0800d8ac <HAL_LTDC_ReloadEventCallback>:
 800d8ac:	4770      	bx	lr
 800d8ae:	bf00      	nop

0800d8b0 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800d8b0:	6803      	ldr	r3, [r0, #0]
{
 800d8b2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800d8b4:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800d8b6:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800d8b8:	076a      	lsls	r2, r5, #29
{
 800d8ba:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800d8bc:	d501      	bpl.n	800d8c2 <HAL_LTDC_IRQHandler+0x12>
 800d8be:	0771      	lsls	r1, r6, #29
 800d8c0:	d41d      	bmi.n	800d8fe <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800d8c2:	07aa      	lsls	r2, r5, #30
 800d8c4:	d501      	bpl.n	800d8ca <HAL_LTDC_IRQHandler+0x1a>
 800d8c6:	07b3      	lsls	r3, r6, #30
 800d8c8:	d42d      	bmi.n	800d926 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800d8ca:	07e8      	lsls	r0, r5, #31
 800d8cc:	d501      	bpl.n	800d8d2 <HAL_LTDC_IRQHandler+0x22>
 800d8ce:	07f1      	lsls	r1, r6, #31
 800d8d0:	d440      	bmi.n	800d954 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800d8d2:	072a      	lsls	r2, r5, #28
 800d8d4:	d501      	bpl.n	800d8da <HAL_LTDC_IRQHandler+0x2a>
 800d8d6:	0733      	lsls	r3, r6, #28
 800d8d8:	d400      	bmi.n	800d8dc <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800d8da:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800d8dc:	6823      	ldr	r3, [r4, #0]
 800d8de:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800d8e0:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800d8e2:	f022 0208 	bic.w	r2, r2, #8
 800d8e6:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800d8e8:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800d8ea:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800d8ec:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800d8ee:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d8f2:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800d8f6:	4620      	mov	r0, r4
 800d8f8:	f7ff ffd8 	bl	800d8ac <HAL_LTDC_ReloadEventCallback>
}
 800d8fc:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800d8fe:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d900:	f022 0204 	bic.w	r2, r2, #4
 800d904:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800d906:	2204      	movs	r2, #4
 800d908:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800d90a:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800d90e:	f043 0301 	orr.w	r3, r3, #1
 800d912:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800d916:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d918:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d91c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800d920:	f7ff ffc2 	bl	800d8a8 <HAL_LTDC_ErrorCallback>
 800d924:	e7cd      	b.n	800d8c2 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800d926:	6823      	ldr	r3, [r4, #0]
 800d928:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d92a:	f022 0202 	bic.w	r2, r2, #2
 800d92e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800d930:	2202      	movs	r2, #2
 800d932:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800d934:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800d938:	f043 0302 	orr.w	r3, r3, #2
 800d93c:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d940:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800d942:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d944:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d948:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800d94c:	4620      	mov	r0, r4
 800d94e:	f7ff ffab 	bl	800d8a8 <HAL_LTDC_ErrorCallback>
 800d952:	e7ba      	b.n	800d8ca <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d954:	6823      	ldr	r3, [r4, #0]
 800d956:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d958:	f022 0201 	bic.w	r2, r2, #1
 800d95c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800d95e:	2201      	movs	r2, #1
 800d960:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800d962:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800d964:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d968:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800d96c:	4620      	mov	r0, r4
 800d96e:	f7f5 fdbb 	bl	80034e8 <HAL_LTDC_LineEventCallback>
 800d972:	e7ae      	b.n	800d8d2 <HAL_LTDC_IRQHandler+0x22>

0800d974 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800d974:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800d978:	2b01      	cmp	r3, #1
 800d97a:	f000 80c2 	beq.w	800db02 <HAL_LTDC_ConfigLayer+0x18e>
{
 800d97e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d982:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d986:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d98a:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d98e:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d990:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d992:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d996:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800d99a:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d99e:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800d9a2:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d9a6:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800d9aa:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d9ac:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d9b0:	460c      	mov	r4, r1
 800d9b2:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d9b4:	9301      	str	r3, [sp, #4]
 800d9b6:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d9b8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d9ba:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800d9be:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800d9c2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d9c4:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d9c6:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800d9ca:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d9cc:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800d9d0:	6823      	ldr	r3, [r4, #0]
 800d9d2:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d9d6:	9b01      	ldr	r3, [sp, #4]
 800d9d8:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d9dc:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800d9e0:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d9e2:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800d9e4:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d9e8:	1c51      	adds	r1, r2, #1
 800d9ea:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800d9ee:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d9f0:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d9f2:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800d9f6:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d9fa:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800d9fe:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800da02:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800da06:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800da0a:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800da0e:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800da10:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800da12:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800da16:	3301      	adds	r3, #1
 800da18:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800da1c:	4403      	add	r3, r0
 800da1e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800da22:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800da26:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800da2a:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800da2c:	f023 0307 	bic.w	r3, r3, #7
 800da30:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800da34:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800da38:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800da3c:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800da40:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800da44:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800da48:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800da4c:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800da50:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800da54:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800da58:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800da5c:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800da60:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800da64:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800da68:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800da6c:	696b      	ldr	r3, [r5, #20]
 800da6e:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800da72:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800da76:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800da7a:	f023 0307 	bic.w	r3, r3, #7
 800da7e:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800da82:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800da86:	4303      	orrs	r3, r0
 800da88:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800da8c:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800da90:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800da92:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800da96:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800da9a:	bb69      	cbnz	r1, 800daf8 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800da9c:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800da9e:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800daa0:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800daa2:	fb03 f707 	mul.w	r7, r3, r7
 800daa6:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800daa8:	fb02 f303 	mul.w	r3, r2, r3
 800daac:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800dab0:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800dab4:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800dab6:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800daba:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800dabe:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800dac2:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800dac6:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800daca:	f023 0307 	bic.w	r3, r3, #7
 800dace:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800dad2:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800dad6:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800dada:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800dadc:	4313      	orrs	r3, r2
 800dade:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800dae2:	2300      	movs	r3, #0
  return HAL_OK;
 800dae4:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800dae6:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800daea:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800daee:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800daf2:	b003      	add	sp, #12
 800daf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800daf8:	3901      	subs	r1, #1
 800dafa:	2906      	cmp	r1, #6
 800dafc:	d903      	bls.n	800db06 <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800dafe:	2301      	movs	r3, #1
 800db00:	e7cd      	b.n	800da9e <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800db02:	2002      	movs	r0, #2
}
 800db04:	4770      	bx	lr
 800db06:	4b02      	ldr	r3, [pc, #8]	; (800db10 <HAL_LTDC_ConfigLayer+0x19c>)
 800db08:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800db0c:	e7c7      	b.n	800da9e <HAL_LTDC_ConfigLayer+0x12a>
 800db0e:	bf00      	nop
 800db10:	080315c0 	.word	0x080315c0

0800db14 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800db14:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800db18:	2b01      	cmp	r3, #1
 800db1a:	d019      	beq.n	800db50 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800db1c:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800db1e:	2302      	movs	r3, #2
{
 800db20:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800db22:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800db26:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800db28:	4c0a      	ldr	r4, [pc, #40]	; (800db54 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800db2a:	f023 0301 	bic.w	r3, r3, #1
 800db2e:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800db30:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800db32:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800db34:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800db36:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800db3a:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800db3e:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800db40:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800db44:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800db48:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800db4c:	4618      	mov	r0, r3
}
 800db4e:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800db50:	2002      	movs	r0, #2
}
 800db52:	4770      	bx	lr
 800db54:	40016800 	.word	0x40016800

0800db58 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800db58:	2800      	cmp	r0, #0
 800db5a:	f000 81a2 	beq.w	800dea2 <HAL_RCC_OscConfig+0x34a>
{
 800db5e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800db62:	6803      	ldr	r3, [r0, #0]
 800db64:	07dd      	lsls	r5, r3, #31
{
 800db66:	b082      	sub	sp, #8
 800db68:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800db6a:	d52f      	bpl.n	800dbcc <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800db6c:	499e      	ldr	r1, [pc, #632]	; (800dde8 <HAL_RCC_OscConfig+0x290>)
 800db6e:	688a      	ldr	r2, [r1, #8]
 800db70:	f002 020c 	and.w	r2, r2, #12
 800db74:	2a04      	cmp	r2, #4
 800db76:	f000 80ed 	beq.w	800dd54 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800db7a:	688a      	ldr	r2, [r1, #8]
 800db7c:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800db80:	2a08      	cmp	r2, #8
 800db82:	f000 80e3 	beq.w	800dd4c <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800db86:	6863      	ldr	r3, [r4, #4]
 800db88:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800db8c:	f000 80ec 	beq.w	800dd68 <HAL_RCC_OscConfig+0x210>
 800db90:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800db94:	f000 8175 	beq.w	800de82 <HAL_RCC_OscConfig+0x32a>
 800db98:	4d93      	ldr	r5, [pc, #588]	; (800dde8 <HAL_RCC_OscConfig+0x290>)
 800db9a:	682a      	ldr	r2, [r5, #0]
 800db9c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800dba0:	602a      	str	r2, [r5, #0]
 800dba2:	682a      	ldr	r2, [r5, #0]
 800dba4:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800dba8:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800dbaa:	2b00      	cmp	r3, #0
 800dbac:	f040 80e1 	bne.w	800dd72 <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800dbb0:	f7fd fdb8 	bl	800b724 <HAL_GetTick>
 800dbb4:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800dbb6:	e005      	b.n	800dbc4 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800dbb8:	f7fd fdb4 	bl	800b724 <HAL_GetTick>
 800dbbc:	1b80      	subs	r0, r0, r6
 800dbbe:	2864      	cmp	r0, #100	; 0x64
 800dbc0:	f200 8101 	bhi.w	800ddc6 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800dbc4:	682b      	ldr	r3, [r5, #0]
 800dbc6:	039b      	lsls	r3, r3, #14
 800dbc8:	d4f6      	bmi.n	800dbb8 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800dbca:	6823      	ldr	r3, [r4, #0]
 800dbcc:	079f      	lsls	r7, r3, #30
 800dbce:	d528      	bpl.n	800dc22 <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800dbd0:	4a85      	ldr	r2, [pc, #532]	; (800dde8 <HAL_RCC_OscConfig+0x290>)
 800dbd2:	6891      	ldr	r1, [r2, #8]
 800dbd4:	f011 0f0c 	tst.w	r1, #12
 800dbd8:	f000 8090 	beq.w	800dcfc <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800dbdc:	6891      	ldr	r1, [r2, #8]
 800dbde:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800dbe2:	2908      	cmp	r1, #8
 800dbe4:	f000 8086 	beq.w	800dcf4 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800dbe8:	68e3      	ldr	r3, [r4, #12]
 800dbea:	2b00      	cmp	r3, #0
 800dbec:	f000 810e 	beq.w	800de0c <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800dbf0:	4b7e      	ldr	r3, [pc, #504]	; (800ddec <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800dbf2:	4e7d      	ldr	r6, [pc, #500]	; (800dde8 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800dbf4:	2201      	movs	r2, #1
 800dbf6:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800dbf8:	f7fd fd94 	bl	800b724 <HAL_GetTick>
 800dbfc:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800dbfe:	e005      	b.n	800dc0c <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800dc00:	f7fd fd90 	bl	800b724 <HAL_GetTick>
 800dc04:	1b40      	subs	r0, r0, r5
 800dc06:	2802      	cmp	r0, #2
 800dc08:	f200 80dd 	bhi.w	800ddc6 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800dc0c:	6833      	ldr	r3, [r6, #0]
 800dc0e:	0798      	lsls	r0, r3, #30
 800dc10:	d5f6      	bpl.n	800dc00 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800dc12:	6833      	ldr	r3, [r6, #0]
 800dc14:	6922      	ldr	r2, [r4, #16]
 800dc16:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800dc1a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800dc1e:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800dc20:	6823      	ldr	r3, [r4, #0]
 800dc22:	071a      	lsls	r2, r3, #28
 800dc24:	d451      	bmi.n	800dcca <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800dc26:	0758      	lsls	r0, r3, #29
 800dc28:	d52f      	bpl.n	800dc8a <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800dc2a:	4a6f      	ldr	r2, [pc, #444]	; (800dde8 <HAL_RCC_OscConfig+0x290>)
 800dc2c:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800dc2e:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800dc32:	d07f      	beq.n	800dd34 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800dc34:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800dc36:	4e6e      	ldr	r6, [pc, #440]	; (800ddf0 <HAL_RCC_OscConfig+0x298>)
 800dc38:	6833      	ldr	r3, [r6, #0]
 800dc3a:	05d9      	lsls	r1, r3, #23
 800dc3c:	f140 80b3 	bpl.w	800dda6 <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800dc40:	68a3      	ldr	r3, [r4, #8]
 800dc42:	2b01      	cmp	r3, #1
 800dc44:	f000 80c3 	beq.w	800ddce <HAL_RCC_OscConfig+0x276>
 800dc48:	2b05      	cmp	r3, #5
 800dc4a:	f000 812c 	beq.w	800dea6 <HAL_RCC_OscConfig+0x34e>
 800dc4e:	4e66      	ldr	r6, [pc, #408]	; (800dde8 <HAL_RCC_OscConfig+0x290>)
 800dc50:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800dc52:	f022 0201 	bic.w	r2, r2, #1
 800dc56:	6732      	str	r2, [r6, #112]	; 0x70
 800dc58:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800dc5a:	f022 0204 	bic.w	r2, r2, #4
 800dc5e:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800dc60:	2b00      	cmp	r3, #0
 800dc62:	f040 80b9 	bne.w	800ddd8 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800dc66:	f7fd fd5d 	bl	800b724 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800dc6a:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800dc6e:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800dc70:	e005      	b.n	800dc7e <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800dc72:	f7fd fd57 	bl	800b724 <HAL_GetTick>
 800dc76:	1bc0      	subs	r0, r0, r7
 800dc78:	4540      	cmp	r0, r8
 800dc7a:	f200 80a4 	bhi.w	800ddc6 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800dc7e:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800dc80:	0798      	lsls	r0, r3, #30
 800dc82:	d4f6      	bmi.n	800dc72 <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800dc84:	2d00      	cmp	r5, #0
 800dc86:	f040 8106 	bne.w	800de96 <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800dc8a:	69a0      	ldr	r0, [r4, #24]
 800dc8c:	b1c8      	cbz	r0, 800dcc2 <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800dc8e:	4d56      	ldr	r5, [pc, #344]	; (800dde8 <HAL_RCC_OscConfig+0x290>)
 800dc90:	68ab      	ldr	r3, [r5, #8]
 800dc92:	f003 030c 	and.w	r3, r3, #12
 800dc96:	2b08      	cmp	r3, #8
 800dc98:	f000 80c9 	beq.w	800de2e <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800dc9c:	4b53      	ldr	r3, [pc, #332]	; (800ddec <HAL_RCC_OscConfig+0x294>)
 800dc9e:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800dca0:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800dca2:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800dca4:	f000 8109 	beq.w	800deba <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800dca8:	f7fd fd3c 	bl	800b724 <HAL_GetTick>
 800dcac:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800dcae:	e005      	b.n	800dcbc <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800dcb0:	f7fd fd38 	bl	800b724 <HAL_GetTick>
 800dcb4:	1b00      	subs	r0, r0, r4
 800dcb6:	2802      	cmp	r0, #2
 800dcb8:	f200 8085 	bhi.w	800ddc6 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800dcbc:	682b      	ldr	r3, [r5, #0]
 800dcbe:	019b      	lsls	r3, r3, #6
 800dcc0:	d4f6      	bmi.n	800dcb0 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800dcc2:	2000      	movs	r0, #0
}
 800dcc4:	b002      	add	sp, #8
 800dcc6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800dcca:	6963      	ldr	r3, [r4, #20]
 800dccc:	b30b      	cbz	r3, 800dd12 <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800dcce:	4b47      	ldr	r3, [pc, #284]	; (800ddec <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800dcd0:	4e45      	ldr	r6, [pc, #276]	; (800dde8 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800dcd2:	2201      	movs	r2, #1
 800dcd4:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800dcd8:	f7fd fd24 	bl	800b724 <HAL_GetTick>
 800dcdc:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800dcde:	e004      	b.n	800dcea <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800dce0:	f7fd fd20 	bl	800b724 <HAL_GetTick>
 800dce4:	1b40      	subs	r0, r0, r5
 800dce6:	2802      	cmp	r0, #2
 800dce8:	d86d      	bhi.n	800ddc6 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800dcea:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800dcec:	079b      	lsls	r3, r3, #30
 800dcee:	d5f7      	bpl.n	800dce0 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800dcf0:	6823      	ldr	r3, [r4, #0]
 800dcf2:	e798      	b.n	800dc26 <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800dcf4:	6852      	ldr	r2, [r2, #4]
 800dcf6:	0256      	lsls	r6, r2, #9
 800dcf8:	f53f af76 	bmi.w	800dbe8 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800dcfc:	4a3a      	ldr	r2, [pc, #232]	; (800dde8 <HAL_RCC_OscConfig+0x290>)
 800dcfe:	6812      	ldr	r2, [r2, #0]
 800dd00:	0795      	lsls	r5, r2, #30
 800dd02:	d544      	bpl.n	800dd8e <HAL_RCC_OscConfig+0x236>
 800dd04:	68e2      	ldr	r2, [r4, #12]
 800dd06:	2a01      	cmp	r2, #1
 800dd08:	d041      	beq.n	800dd8e <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800dd0a:	2001      	movs	r0, #1
}
 800dd0c:	b002      	add	sp, #8
 800dd0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800dd12:	4a36      	ldr	r2, [pc, #216]	; (800ddec <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800dd14:	4e34      	ldr	r6, [pc, #208]	; (800dde8 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800dd16:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800dd1a:	f7fd fd03 	bl	800b724 <HAL_GetTick>
 800dd1e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800dd20:	e004      	b.n	800dd2c <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800dd22:	f7fd fcff 	bl	800b724 <HAL_GetTick>
 800dd26:	1b40      	subs	r0, r0, r5
 800dd28:	2802      	cmp	r0, #2
 800dd2a:	d84c      	bhi.n	800ddc6 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800dd2c:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800dd2e:	079f      	lsls	r7, r3, #30
 800dd30:	d4f7      	bmi.n	800dd22 <HAL_RCC_OscConfig+0x1ca>
 800dd32:	e7dd      	b.n	800dcf0 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800dd34:	9301      	str	r3, [sp, #4]
 800dd36:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800dd38:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800dd3c:	6413      	str	r3, [r2, #64]	; 0x40
 800dd3e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800dd40:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800dd44:	9301      	str	r3, [sp, #4]
 800dd46:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800dd48:	2501      	movs	r5, #1
 800dd4a:	e774      	b.n	800dc36 <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800dd4c:	684a      	ldr	r2, [r1, #4]
 800dd4e:	0250      	lsls	r0, r2, #9
 800dd50:	f57f af19 	bpl.w	800db86 <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800dd54:	4a24      	ldr	r2, [pc, #144]	; (800dde8 <HAL_RCC_OscConfig+0x290>)
 800dd56:	6812      	ldr	r2, [r2, #0]
 800dd58:	0391      	lsls	r1, r2, #14
 800dd5a:	f57f af37 	bpl.w	800dbcc <HAL_RCC_OscConfig+0x74>
 800dd5e:	6862      	ldr	r2, [r4, #4]
 800dd60:	2a00      	cmp	r2, #0
 800dd62:	f47f af33 	bne.w	800dbcc <HAL_RCC_OscConfig+0x74>
 800dd66:	e7d0      	b.n	800dd0a <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800dd68:	4a1f      	ldr	r2, [pc, #124]	; (800dde8 <HAL_RCC_OscConfig+0x290>)
 800dd6a:	6813      	ldr	r3, [r2, #0]
 800dd6c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800dd70:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800dd72:	f7fd fcd7 	bl	800b724 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800dd76:	4e1c      	ldr	r6, [pc, #112]	; (800dde8 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800dd78:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800dd7a:	e004      	b.n	800dd86 <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800dd7c:	f7fd fcd2 	bl	800b724 <HAL_GetTick>
 800dd80:	1b40      	subs	r0, r0, r5
 800dd82:	2864      	cmp	r0, #100	; 0x64
 800dd84:	d81f      	bhi.n	800ddc6 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800dd86:	6833      	ldr	r3, [r6, #0]
 800dd88:	039a      	lsls	r2, r3, #14
 800dd8a:	d5f7      	bpl.n	800dd7c <HAL_RCC_OscConfig+0x224>
 800dd8c:	e71d      	b.n	800dbca <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800dd8e:	4916      	ldr	r1, [pc, #88]	; (800dde8 <HAL_RCC_OscConfig+0x290>)
 800dd90:	6920      	ldr	r0, [r4, #16]
 800dd92:	680a      	ldr	r2, [r1, #0]
 800dd94:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800dd98:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800dd9c:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800dd9e:	071a      	lsls	r2, r3, #28
 800dda0:	f57f af41 	bpl.w	800dc26 <HAL_RCC_OscConfig+0xce>
 800dda4:	e791      	b.n	800dcca <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800dda6:	6833      	ldr	r3, [r6, #0]
 800dda8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800ddac:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800ddae:	f7fd fcb9 	bl	800b724 <HAL_GetTick>
 800ddb2:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800ddb4:	6833      	ldr	r3, [r6, #0]
 800ddb6:	05da      	lsls	r2, r3, #23
 800ddb8:	f53f af42 	bmi.w	800dc40 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800ddbc:	f7fd fcb2 	bl	800b724 <HAL_GetTick>
 800ddc0:	1bc0      	subs	r0, r0, r7
 800ddc2:	2802      	cmp	r0, #2
 800ddc4:	d9f6      	bls.n	800ddb4 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800ddc6:	2003      	movs	r0, #3
}
 800ddc8:	b002      	add	sp, #8
 800ddca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800ddce:	4a06      	ldr	r2, [pc, #24]	; (800dde8 <HAL_RCC_OscConfig+0x290>)
 800ddd0:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800ddd2:	f043 0301 	orr.w	r3, r3, #1
 800ddd6:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800ddd8:	f7fd fca4 	bl	800b724 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800dddc:	4f02      	ldr	r7, [pc, #8]	; (800dde8 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800ddde:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800dde0:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800dde4:	e00b      	b.n	800ddfe <HAL_RCC_OscConfig+0x2a6>
 800dde6:	bf00      	nop
 800dde8:	40023800 	.word	0x40023800
 800ddec:	42470000 	.word	0x42470000
 800ddf0:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800ddf4:	f7fd fc96 	bl	800b724 <HAL_GetTick>
 800ddf8:	1b80      	subs	r0, r0, r6
 800ddfa:	4540      	cmp	r0, r8
 800ddfc:	d8e3      	bhi.n	800ddc6 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800ddfe:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800de00:	079b      	lsls	r3, r3, #30
 800de02:	d5f7      	bpl.n	800ddf4 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800de04:	2d00      	cmp	r5, #0
 800de06:	f43f af40 	beq.w	800dc8a <HAL_RCC_OscConfig+0x132>
 800de0a:	e044      	b.n	800de96 <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800de0c:	4a42      	ldr	r2, [pc, #264]	; (800df18 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800de0e:	4e43      	ldr	r6, [pc, #268]	; (800df1c <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800de10:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800de12:	f7fd fc87 	bl	800b724 <HAL_GetTick>
 800de16:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800de18:	e004      	b.n	800de24 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800de1a:	f7fd fc83 	bl	800b724 <HAL_GetTick>
 800de1e:	1b40      	subs	r0, r0, r5
 800de20:	2802      	cmp	r0, #2
 800de22:	d8d0      	bhi.n	800ddc6 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800de24:	6833      	ldr	r3, [r6, #0]
 800de26:	0799      	lsls	r1, r3, #30
 800de28:	d4f7      	bmi.n	800de1a <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800de2a:	6823      	ldr	r3, [r4, #0]
 800de2c:	e6f9      	b.n	800dc22 <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800de2e:	2801      	cmp	r0, #1
 800de30:	f43f af48 	beq.w	800dcc4 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800de34:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800de36:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800de38:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800de3c:	4291      	cmp	r1, r2
 800de3e:	f47f af64 	bne.w	800dd0a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800de42:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800de44:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800de48:	4291      	cmp	r1, r2
 800de4a:	f47f af5e 	bne.w	800dd0a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800de4e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800de50:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800de54:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800de56:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800de5a:	f47f af56 	bne.w	800dd0a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800de5e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800de60:	0852      	lsrs	r2, r2, #1
 800de62:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800de66:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800de68:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800de6c:	f47f af4d 	bne.w	800dd0a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800de70:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800de72:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800de76:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800de7a:	bf14      	ite	ne
 800de7c:	2001      	movne	r0, #1
 800de7e:	2000      	moveq	r0, #0
 800de80:	e720      	b.n	800dcc4 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800de82:	4b26      	ldr	r3, [pc, #152]	; (800df1c <HAL_RCC_OscConfig+0x3c4>)
 800de84:	681a      	ldr	r2, [r3, #0]
 800de86:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800de8a:	601a      	str	r2, [r3, #0]
 800de8c:	681a      	ldr	r2, [r3, #0]
 800de8e:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800de92:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800de94:	e76d      	b.n	800dd72 <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800de96:	4a21      	ldr	r2, [pc, #132]	; (800df1c <HAL_RCC_OscConfig+0x3c4>)
 800de98:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800de9a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800de9e:	6413      	str	r3, [r2, #64]	; 0x40
 800dea0:	e6f3      	b.n	800dc8a <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800dea2:	2001      	movs	r0, #1
}
 800dea4:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800dea6:	4b1d      	ldr	r3, [pc, #116]	; (800df1c <HAL_RCC_OscConfig+0x3c4>)
 800dea8:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800deaa:	f042 0204 	orr.w	r2, r2, #4
 800deae:	671a      	str	r2, [r3, #112]	; 0x70
 800deb0:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800deb2:	f042 0201 	orr.w	r2, r2, #1
 800deb6:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800deb8:	e78e      	b.n	800ddd8 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800deba:	f7fd fc33 	bl	800b724 <HAL_GetTick>
 800debe:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800dec0:	e005      	b.n	800dece <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800dec2:	f7fd fc2f 	bl	800b724 <HAL_GetTick>
 800dec6:	1b80      	subs	r0, r0, r6
 800dec8:	2802      	cmp	r0, #2
 800deca:	f63f af7c 	bhi.w	800ddc6 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800dece:	682b      	ldr	r3, [r5, #0]
 800ded0:	0199      	lsls	r1, r3, #6
 800ded2:	d4f6      	bmi.n	800dec2 <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800ded4:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800ded8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800deda:	430b      	orrs	r3, r1
 800dedc:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800dee0:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800dee4:	0852      	lsrs	r2, r2, #1
 800dee6:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800deea:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800deec:	490a      	ldr	r1, [pc, #40]	; (800df18 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800deee:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800def2:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800def4:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800def6:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800def8:	f7fd fc14 	bl	800b724 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800defc:	4d07      	ldr	r5, [pc, #28]	; (800df1c <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800defe:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800df00:	e005      	b.n	800df0e <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800df02:	f7fd fc0f 	bl	800b724 <HAL_GetTick>
 800df06:	1b00      	subs	r0, r0, r4
 800df08:	2802      	cmp	r0, #2
 800df0a:	f63f af5c 	bhi.w	800ddc6 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800df0e:	682b      	ldr	r3, [r5, #0]
 800df10:	019a      	lsls	r2, r3, #6
 800df12:	d5f6      	bpl.n	800df02 <HAL_RCC_OscConfig+0x3aa>
 800df14:	e6d5      	b.n	800dcc2 <HAL_RCC_OscConfig+0x16a>
 800df16:	bf00      	nop
 800df18:	42470000 	.word	0x42470000
 800df1c:	40023800 	.word	0x40023800

0800df20 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800df20:	4916      	ldr	r1, [pc, #88]	; (800df7c <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800df22:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800df24:	688b      	ldr	r3, [r1, #8]
 800df26:	f003 030c 	and.w	r3, r3, #12
 800df2a:	2b04      	cmp	r3, #4
 800df2c:	d01b      	beq.n	800df66 <HAL_RCC_GetSysClockFreq+0x46>
 800df2e:	2b08      	cmp	r3, #8
 800df30:	d117      	bne.n	800df62 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800df32:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800df34:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800df36:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800df38:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800df3c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800df40:	d113      	bne.n	800df6a <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800df42:	480f      	ldr	r0, [pc, #60]	; (800df80 <HAL_RCC_GetSysClockFreq+0x60>)
 800df44:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800df48:	fba1 0100 	umull	r0, r1, r1, r0
 800df4c:	f7f2 fd36 	bl	80009bc <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800df50:	4b0a      	ldr	r3, [pc, #40]	; (800df7c <HAL_RCC_GetSysClockFreq+0x5c>)
 800df52:	685b      	ldr	r3, [r3, #4]
 800df54:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800df58:	3301      	adds	r3, #1
 800df5a:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800df5c:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800df60:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800df62:	4807      	ldr	r0, [pc, #28]	; (800df80 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800df64:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800df66:	4807      	ldr	r0, [pc, #28]	; (800df84 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800df68:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800df6a:	4806      	ldr	r0, [pc, #24]	; (800df84 <HAL_RCC_GetSysClockFreq+0x64>)
 800df6c:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800df70:	2300      	movs	r3, #0
 800df72:	fba1 0100 	umull	r0, r1, r1, r0
 800df76:	f7f2 fd21 	bl	80009bc <__aeabi_uldivmod>
 800df7a:	e7e9      	b.n	800df50 <HAL_RCC_GetSysClockFreq+0x30>
 800df7c:	40023800 	.word	0x40023800
 800df80:	00f42400 	.word	0x00f42400
 800df84:	007a1200 	.word	0x007a1200

0800df88 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800df88:	2800      	cmp	r0, #0
 800df8a:	f000 8087 	beq.w	800e09c <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800df8e:	4a48      	ldr	r2, [pc, #288]	; (800e0b0 <HAL_RCC_ClockConfig+0x128>)
 800df90:	6813      	ldr	r3, [r2, #0]
 800df92:	f003 030f 	and.w	r3, r3, #15
 800df96:	428b      	cmp	r3, r1
{
 800df98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800df9c:	460d      	mov	r5, r1
 800df9e:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800dfa0:	d209      	bcs.n	800dfb6 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800dfa2:	b2cb      	uxtb	r3, r1
 800dfa4:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800dfa6:	6813      	ldr	r3, [r2, #0]
 800dfa8:	f003 030f 	and.w	r3, r3, #15
 800dfac:	428b      	cmp	r3, r1
 800dfae:	d002      	beq.n	800dfb6 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800dfb0:	2001      	movs	r0, #1
}
 800dfb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800dfb6:	6823      	ldr	r3, [r4, #0]
 800dfb8:	0798      	lsls	r0, r3, #30
 800dfba:	d514      	bpl.n	800dfe6 <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800dfbc:	0759      	lsls	r1, r3, #29
 800dfbe:	d504      	bpl.n	800dfca <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800dfc0:	493c      	ldr	r1, [pc, #240]	; (800e0b4 <HAL_RCC_ClockConfig+0x12c>)
 800dfc2:	688a      	ldr	r2, [r1, #8]
 800dfc4:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800dfc8:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800dfca:	071a      	lsls	r2, r3, #28
 800dfcc:	d504      	bpl.n	800dfd8 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800dfce:	4939      	ldr	r1, [pc, #228]	; (800e0b4 <HAL_RCC_ClockConfig+0x12c>)
 800dfd0:	688a      	ldr	r2, [r1, #8]
 800dfd2:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800dfd6:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800dfd8:	4936      	ldr	r1, [pc, #216]	; (800e0b4 <HAL_RCC_ClockConfig+0x12c>)
 800dfda:	68a0      	ldr	r0, [r4, #8]
 800dfdc:	688a      	ldr	r2, [r1, #8]
 800dfde:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800dfe2:	4302      	orrs	r2, r0
 800dfe4:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800dfe6:	07df      	lsls	r7, r3, #31
 800dfe8:	d521      	bpl.n	800e02e <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800dfea:	6862      	ldr	r2, [r4, #4]
 800dfec:	2a01      	cmp	r2, #1
 800dfee:	d057      	beq.n	800e0a0 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800dff0:	1e93      	subs	r3, r2, #2
 800dff2:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800dff4:	4b2f      	ldr	r3, [pc, #188]	; (800e0b4 <HAL_RCC_ClockConfig+0x12c>)
 800dff6:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800dff8:	d94d      	bls.n	800e096 <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800dffa:	0799      	lsls	r1, r3, #30
 800dffc:	d5d8      	bpl.n	800dfb0 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800dffe:	4e2d      	ldr	r6, [pc, #180]	; (800e0b4 <HAL_RCC_ClockConfig+0x12c>)
 800e000:	68b3      	ldr	r3, [r6, #8]
 800e002:	f023 0303 	bic.w	r3, r3, #3
 800e006:	4313      	orrs	r3, r2
 800e008:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800e00a:	f7fd fb8b 	bl	800b724 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800e00e:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800e012:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800e014:	e004      	b.n	800e020 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800e016:	f7fd fb85 	bl	800b724 <HAL_GetTick>
 800e01a:	1bc0      	subs	r0, r0, r7
 800e01c:	4540      	cmp	r0, r8
 800e01e:	d844      	bhi.n	800e0aa <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800e020:	68b3      	ldr	r3, [r6, #8]
 800e022:	6862      	ldr	r2, [r4, #4]
 800e024:	f003 030c 	and.w	r3, r3, #12
 800e028:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800e02c:	d1f3      	bne.n	800e016 <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800e02e:	4a20      	ldr	r2, [pc, #128]	; (800e0b0 <HAL_RCC_ClockConfig+0x128>)
 800e030:	6813      	ldr	r3, [r2, #0]
 800e032:	f003 030f 	and.w	r3, r3, #15
 800e036:	42ab      	cmp	r3, r5
 800e038:	d906      	bls.n	800e048 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800e03a:	b2eb      	uxtb	r3, r5
 800e03c:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800e03e:	6813      	ldr	r3, [r2, #0]
 800e040:	f003 030f 	and.w	r3, r3, #15
 800e044:	42ab      	cmp	r3, r5
 800e046:	d1b3      	bne.n	800dfb0 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800e048:	6823      	ldr	r3, [r4, #0]
 800e04a:	075a      	lsls	r2, r3, #29
 800e04c:	d506      	bpl.n	800e05c <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800e04e:	4919      	ldr	r1, [pc, #100]	; (800e0b4 <HAL_RCC_ClockConfig+0x12c>)
 800e050:	68e0      	ldr	r0, [r4, #12]
 800e052:	688a      	ldr	r2, [r1, #8]
 800e054:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800e058:	4302      	orrs	r2, r0
 800e05a:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800e05c:	071b      	lsls	r3, r3, #28
 800e05e:	d507      	bpl.n	800e070 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800e060:	4a14      	ldr	r2, [pc, #80]	; (800e0b4 <HAL_RCC_ClockConfig+0x12c>)
 800e062:	6921      	ldr	r1, [r4, #16]
 800e064:	6893      	ldr	r3, [r2, #8]
 800e066:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800e06a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800e06e:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800e070:	f7ff ff56 	bl	800df20 <HAL_RCC_GetSysClockFreq>
 800e074:	4a0f      	ldr	r2, [pc, #60]	; (800e0b4 <HAL_RCC_ClockConfig+0x12c>)
 800e076:	4c10      	ldr	r4, [pc, #64]	; (800e0b8 <HAL_RCC_ClockConfig+0x130>)
 800e078:	6892      	ldr	r2, [r2, #8]
 800e07a:	4910      	ldr	r1, [pc, #64]	; (800e0bc <HAL_RCC_ClockConfig+0x134>)
 800e07c:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800e080:	4603      	mov	r3, r0
 800e082:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800e084:	480e      	ldr	r0, [pc, #56]	; (800e0c0 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800e086:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800e088:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800e08a:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800e08c:	f7f4 fc0c 	bl	80028a8 <HAL_InitTick>
  return HAL_OK;
 800e090:	2000      	movs	r0, #0
}
 800e092:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800e096:	0198      	lsls	r0, r3, #6
 800e098:	d4b1      	bmi.n	800dffe <HAL_RCC_ClockConfig+0x76>
 800e09a:	e789      	b.n	800dfb0 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800e09c:	2001      	movs	r0, #1
}
 800e09e:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800e0a0:	4b04      	ldr	r3, [pc, #16]	; (800e0b4 <HAL_RCC_ClockConfig+0x12c>)
 800e0a2:	681b      	ldr	r3, [r3, #0]
 800e0a4:	039e      	lsls	r6, r3, #14
 800e0a6:	d4aa      	bmi.n	800dffe <HAL_RCC_ClockConfig+0x76>
 800e0a8:	e782      	b.n	800dfb0 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800e0aa:	2003      	movs	r0, #3
 800e0ac:	e781      	b.n	800dfb2 <HAL_RCC_ClockConfig+0x2a>
 800e0ae:	bf00      	nop
 800e0b0:	40023c00 	.word	0x40023c00
 800e0b4:	40023800 	.word	0x40023800
 800e0b8:	080315a8 	.word	0x080315a8
 800e0bc:	20000078 	.word	0x20000078
 800e0c0:	20000080 	.word	0x20000080

0800e0c4 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800e0c4:	4b04      	ldr	r3, [pc, #16]	; (800e0d8 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800e0c6:	4905      	ldr	r1, [pc, #20]	; (800e0dc <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800e0c8:	689b      	ldr	r3, [r3, #8]
 800e0ca:	4a05      	ldr	r2, [pc, #20]	; (800e0e0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800e0cc:	6808      	ldr	r0, [r1, #0]
 800e0ce:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800e0d2:	5cd3      	ldrb	r3, [r2, r3]
}
 800e0d4:	40d8      	lsrs	r0, r3
 800e0d6:	4770      	bx	lr
 800e0d8:	40023800 	.word	0x40023800
 800e0dc:	20000078 	.word	0x20000078
 800e0e0:	080315b8 	.word	0x080315b8

0800e0e4 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800e0e4:	4b0e      	ldr	r3, [pc, #56]	; (800e120 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800e0e6:	220f      	movs	r2, #15
 800e0e8:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800e0ea:	689a      	ldr	r2, [r3, #8]
 800e0ec:	f002 0203 	and.w	r2, r2, #3
 800e0f0:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800e0f2:	689a      	ldr	r2, [r3, #8]
 800e0f4:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800e0f8:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800e0fa:	689a      	ldr	r2, [r3, #8]
 800e0fc:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800e100:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800e102:	689b      	ldr	r3, [r3, #8]
 800e104:	08db      	lsrs	r3, r3, #3
{
 800e106:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800e108:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800e10c:	4c05      	ldr	r4, [pc, #20]	; (800e124 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800e10e:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800e110:	6823      	ldr	r3, [r4, #0]
}
 800e112:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800e116:	f003 030f 	and.w	r3, r3, #15
 800e11a:	600b      	str	r3, [r1, #0]
}
 800e11c:	4770      	bx	lr
 800e11e:	bf00      	nop
 800e120:	40023800 	.word	0x40023800
 800e124:	40023c00 	.word	0x40023c00

0800e128 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800e128:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800e12a:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800e12c:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800e130:	b083      	sub	sp, #12
 800e132:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800e134:	d111      	bne.n	800e15a <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800e136:	f013 0f0c 	tst.w	r3, #12
 800e13a:	d16f      	bne.n	800e21c <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800e13c:	0698      	lsls	r0, r3, #26
 800e13e:	f100 80c2 	bmi.w	800e2c6 <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800e142:	f013 0310 	ands.w	r3, r3, #16
 800e146:	f000 80bb 	beq.w	800e2c0 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800e14a:	4b89      	ldr	r3, [pc, #548]	; (800e370 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800e14c:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800e150:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800e154:	2000      	movs	r0, #0
}
 800e156:	b003      	add	sp, #12
 800e158:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800e15a:	4b86      	ldr	r3, [pc, #536]	; (800e374 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800e15c:	4e86      	ldr	r6, [pc, #536]	; (800e378 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800e15e:	2200      	movs	r2, #0
 800e160:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800e162:	f7fd fadf 	bl	800b724 <HAL_GetTick>
 800e166:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800e168:	e004      	b.n	800e174 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800e16a:	f7fd fadb 	bl	800b724 <HAL_GetTick>
 800e16e:	1b43      	subs	r3, r0, r5
 800e170:	2b02      	cmp	r3, #2
 800e172:	d850      	bhi.n	800e216 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800e174:	6833      	ldr	r3, [r6, #0]
 800e176:	0118      	lsls	r0, r3, #4
 800e178:	d4f7      	bmi.n	800e16a <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800e17a:	6823      	ldr	r3, [r4, #0]
 800e17c:	07d9      	lsls	r1, r3, #31
 800e17e:	d506      	bpl.n	800e18e <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800e180:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800e184:	0712      	lsls	r2, r2, #28
 800e186:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800e18a:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800e18e:	079a      	lsls	r2, r3, #30
 800e190:	d515      	bpl.n	800e1be <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800e192:	4979      	ldr	r1, [pc, #484]	; (800e378 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800e194:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800e196:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800e19a:	6865      	ldr	r5, [r4, #4]
 800e19c:	0612      	lsls	r2, r2, #24
 800e19e:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800e1a2:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800e1a6:	4302      	orrs	r2, r0
 800e1a8:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800e1ac:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800e1b0:	69e2      	ldr	r2, [r4, #28]
 800e1b2:	f020 001f 	bic.w	r0, r0, #31
 800e1b6:	3a01      	subs	r2, #1
 800e1b8:	4302      	orrs	r2, r0
 800e1ba:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800e1be:	065b      	lsls	r3, r3, #25
 800e1c0:	d509      	bpl.n	800e1d6 <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800e1c2:	1d20      	adds	r0, r4, #4
 800e1c4:	c80b      	ldmia	r0, {r0, r1, r3}
 800e1c6:	061b      	lsls	r3, r3, #24
 800e1c8:	4a6b      	ldr	r2, [pc, #428]	; (800e378 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e1ca:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800e1ce:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800e1d2:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800e1d6:	4b67      	ldr	r3, [pc, #412]	; (800e374 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800e1d8:	4e67      	ldr	r6, [pc, #412]	; (800e378 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800e1da:	2201      	movs	r2, #1
 800e1dc:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800e1de:	f7fd faa1 	bl	800b724 <HAL_GetTick>
 800e1e2:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800e1e4:	e004      	b.n	800e1f0 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800e1e6:	f7fd fa9d 	bl	800b724 <HAL_GetTick>
 800e1ea:	1b40      	subs	r0, r0, r5
 800e1ec:	2802      	cmp	r0, #2
 800e1ee:	d812      	bhi.n	800e216 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800e1f0:	6833      	ldr	r3, [r6, #0]
 800e1f2:	011f      	lsls	r7, r3, #4
 800e1f4:	d5f7      	bpl.n	800e1e6 <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800e1f6:	6823      	ldr	r3, [r4, #0]
 800e1f8:	e79d      	b.n	800e136 <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800e1fa:	f7fd fa93 	bl	800b724 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800e1fe:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800e202:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800e204:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800e206:	079b      	lsls	r3, r3, #30
 800e208:	f100 80a5 	bmi.w	800e356 <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800e20c:	f7fd fa8a 	bl	800b724 <HAL_GetTick>
 800e210:	1b80      	subs	r0, r0, r6
 800e212:	42b8      	cmp	r0, r7
 800e214:	d9f6      	bls.n	800e204 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800e216:	2003      	movs	r0, #3
}
 800e218:	b003      	add	sp, #12
 800e21a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800e21c:	4b55      	ldr	r3, [pc, #340]	; (800e374 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800e21e:	4e56      	ldr	r6, [pc, #344]	; (800e378 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800e220:	2200      	movs	r2, #0
 800e222:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800e224:	f7fd fa7e 	bl	800b724 <HAL_GetTick>
 800e228:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800e22a:	e004      	b.n	800e236 <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800e22c:	f7fd fa7a 	bl	800b724 <HAL_GetTick>
 800e230:	1b43      	subs	r3, r0, r5
 800e232:	2b02      	cmp	r3, #2
 800e234:	d8ef      	bhi.n	800e216 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800e236:	6833      	ldr	r3, [r6, #0]
 800e238:	0098      	lsls	r0, r3, #2
 800e23a:	d4f7      	bmi.n	800e22c <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800e23c:	6822      	ldr	r2, [r4, #0]
 800e23e:	0751      	lsls	r1, r2, #29
 800e240:	d515      	bpl.n	800e26e <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800e242:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800e244:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800e248:	6920      	ldr	r0, [r4, #16]
 800e24a:	061b      	lsls	r3, r3, #24
 800e24c:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800e250:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800e254:	430b      	orrs	r3, r1
 800e256:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800e25a:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800e25e:	6a21      	ldr	r1, [r4, #32]
 800e260:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800e264:	3901      	subs	r1, #1
 800e266:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800e26a:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800e26e:	0713      	lsls	r3, r2, #28
 800e270:	d514      	bpl.n	800e29c <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800e272:	4a41      	ldr	r2, [pc, #260]	; (800e378 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800e274:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800e276:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800e27a:	6920      	ldr	r0, [r4, #16]
 800e27c:	071b      	lsls	r3, r3, #28
 800e27e:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800e282:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800e286:	430b      	orrs	r3, r1
 800e288:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800e28c:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800e290:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800e292:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800e296:	430b      	orrs	r3, r1
 800e298:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800e29c:	4b35      	ldr	r3, [pc, #212]	; (800e374 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800e29e:	4e36      	ldr	r6, [pc, #216]	; (800e378 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800e2a0:	2201      	movs	r2, #1
 800e2a2:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800e2a4:	f7fd fa3e 	bl	800b724 <HAL_GetTick>
 800e2a8:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800e2aa:	e004      	b.n	800e2b6 <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800e2ac:	f7fd fa3a 	bl	800b724 <HAL_GetTick>
 800e2b0:	1b40      	subs	r0, r0, r5
 800e2b2:	2802      	cmp	r0, #2
 800e2b4:	d8af      	bhi.n	800e216 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800e2b6:	6833      	ldr	r3, [r6, #0]
 800e2b8:	009f      	lsls	r7, r3, #2
 800e2ba:	d5f7      	bpl.n	800e2ac <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800e2bc:	6823      	ldr	r3, [r4, #0]
 800e2be:	e73d      	b.n	800e13c <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800e2c0:	4618      	mov	r0, r3
}
 800e2c2:	b003      	add	sp, #12
 800e2c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800e2c6:	4b2c      	ldr	r3, [pc, #176]	; (800e378 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800e2c8:	4d2c      	ldr	r5, [pc, #176]	; (800e37c <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800e2ca:	2200      	movs	r2, #0
 800e2cc:	9201      	str	r2, [sp, #4]
 800e2ce:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800e2d0:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800e2d4:	641a      	str	r2, [r3, #64]	; 0x40
 800e2d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e2d8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800e2dc:	9301      	str	r3, [sp, #4]
 800e2de:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800e2e0:	682b      	ldr	r3, [r5, #0]
 800e2e2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800e2e6:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800e2e8:	f7fd fa1c 	bl	800b724 <HAL_GetTick>
 800e2ec:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800e2ee:	e004      	b.n	800e2fa <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800e2f0:	f7fd fa18 	bl	800b724 <HAL_GetTick>
 800e2f4:	1b83      	subs	r3, r0, r6
 800e2f6:	2b02      	cmp	r3, #2
 800e2f8:	d88d      	bhi.n	800e216 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800e2fa:	682b      	ldr	r3, [r5, #0]
 800e2fc:	05d9      	lsls	r1, r3, #23
 800e2fe:	d5f7      	bpl.n	800e2f0 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800e300:	4d1d      	ldr	r5, [pc, #116]	; (800e378 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800e302:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800e304:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800e306:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800e30a:	d111      	bne.n	800e330 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800e30c:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800e310:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800e314:	d021      	beq.n	800e35a <HAL_RCCEx_PeriphCLKConfig+0x232>
 800e316:	4918      	ldr	r1, [pc, #96]	; (800e378 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e318:	688a      	ldr	r2, [r1, #8]
 800e31a:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800e31e:	608a      	str	r2, [r1, #8]
 800e320:	4a15      	ldr	r2, [pc, #84]	; (800e378 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e322:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800e324:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800e328:	430b      	orrs	r3, r1
 800e32a:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800e32c:	6823      	ldr	r3, [r4, #0]
 800e32e:	e708      	b.n	800e142 <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800e330:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800e334:	4291      	cmp	r1, r2
 800e336:	d0eb      	beq.n	800e310 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800e338:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800e33a:	4a0e      	ldr	r2, [pc, #56]	; (800e374 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800e33c:	2101      	movs	r1, #1
 800e33e:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800e342:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800e346:	2100      	movs	r1, #0
 800e348:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800e34c:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800e34e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800e350:	07da      	lsls	r2, r3, #31
 800e352:	f53f af52 	bmi.w	800e1fa <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800e356:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800e358:	e7d8      	b.n	800e30c <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800e35a:	4807      	ldr	r0, [pc, #28]	; (800e378 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e35c:	6882      	ldr	r2, [r0, #8]
 800e35e:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800e362:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800e366:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800e36a:	430a      	orrs	r2, r1
 800e36c:	6082      	str	r2, [r0, #8]
 800e36e:	e7d7      	b.n	800e320 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800e370:	42471000 	.word	0x42471000
 800e374:	42470000 	.word	0x42470000
 800e378:	40023800 	.word	0x40023800
 800e37c:	40007000 	.word	0x40007000

0800e380 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800e380:	b1f0      	cbz	r0, 800e3c0 <HAL_SDRAM_Init+0x40>
{
 800e382:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800e384:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e388:	460d      	mov	r5, r1
 800e38a:	4604      	mov	r4, r0
 800e38c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800e390:	b18b      	cbz	r3, 800e3b6 <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800e392:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e394:	2302      	movs	r3, #2
 800e396:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800e39a:	f851 0b04 	ldr.w	r0, [r1], #4
 800e39e:	f001 f9dd 	bl	800f75c <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800e3a2:	e9d4 0200 	ldrd	r0, r2, [r4]
 800e3a6:	4629      	mov	r1, r5
 800e3a8:	f001 fa16 	bl	800f7d8 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800e3ac:	2301      	movs	r3, #1
 800e3ae:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800e3b2:	2000      	movs	r0, #0
}
 800e3b4:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800e3b6:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800e3ba:	f7f4 fa0d 	bl	80027d8 <HAL_SDRAM_MspInit>
 800e3be:	e7e8      	b.n	800e392 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800e3c0:	2001      	movs	r0, #1
}
 800e3c2:	4770      	bx	lr

0800e3c4 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800e3c4:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800e3c6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800e3ca:	2b02      	cmp	r3, #2
{
 800e3cc:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800e3ce:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800e3d0:	d004      	beq.n	800e3dc <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800e3d2:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800e3d6:	2c01      	cmp	r4, #1
 800e3d8:	d001      	beq.n	800e3de <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800e3da:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800e3dc:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e3de:	460e      	mov	r6, r1
 800e3e0:	2302      	movs	r3, #2
 800e3e2:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800e3e6:	6828      	ldr	r0, [r5, #0]
 800e3e8:	f001 fa42 	bl	800f870 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800e3ec:	6833      	ldr	r3, [r6, #0]
 800e3ee:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800e3f0:	bf06      	itte	eq
 800e3f2:	2305      	moveq	r3, #5
 800e3f4:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800e3f8:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800e3fc:	2000      	movs	r0, #0
}
 800e3fe:	bd70      	pop	{r4, r5, r6, pc}

0800e400 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800e400:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800e402:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e406:	2b02      	cmp	r3, #2
{
 800e408:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800e40a:	b2d8      	uxtb	r0, r3
 800e40c:	d005      	beq.n	800e41a <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800e40e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800e412:	2b01      	cmp	r3, #1
 800e414:	b2dd      	uxtb	r5, r3
 800e416:	d001      	beq.n	800e41c <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800e418:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800e41a:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e41c:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800e41e:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e420:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800e424:	f001 fa4e 	bl	800f8c4 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800e428:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800e42c:	2000      	movs	r0, #0
}
 800e42e:	bd38      	pop	{r3, r4, r5, pc}

0800e430 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800e430:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e434:	b082      	sub	sp, #8
 800e436:	461d      	mov	r5, r3
 800e438:	4616      	mov	r6, r2
 800e43a:	460c      	mov	r4, r1
 800e43c:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800e43e:	f7fd f971 	bl	800b724 <HAL_GetTick>
 800e442:	4435      	add	r5, r6
 800e444:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800e446:	f7fd f96d 	bl	800b724 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800e44a:	4b27      	ldr	r3, [pc, #156]	; (800e4e8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800e44c:	681b      	ldr	r3, [r3, #0]
 800e44e:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800e452:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800e456:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800e458:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800e45a:	1c73      	adds	r3, r6, #1
 800e45c:	6839      	ldr	r1, [r7, #0]
 800e45e:	d107      	bne.n	800e470 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800e460:	688b      	ldr	r3, [r1, #8]
 800e462:	ea34 0303 	bics.w	r3, r4, r3
 800e466:	d0fb      	beq.n	800e460 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800e468:	2000      	movs	r0, #0
}
 800e46a:	b002      	add	sp, #8
 800e46c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800e470:	688b      	ldr	r3, [r1, #8]
 800e472:	ea34 0303 	bics.w	r3, r4, r3
 800e476:	d1f7      	bne.n	800e468 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800e478:	f7fd f954 	bl	800b724 <HAL_GetTick>
 800e47c:	eba0 0008 	sub.w	r0, r0, r8
 800e480:	42a8      	cmp	r0, r5
 800e482:	d208      	bcs.n	800e496 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800e484:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800e486:	2b00      	cmp	r3, #0
      count--;
 800e488:	9b01      	ldr	r3, [sp, #4]
 800e48a:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800e48e:	bf08      	it	eq
 800e490:	2500      	moveq	r5, #0
      count--;
 800e492:	9301      	str	r3, [sp, #4]
 800e494:	e7e1      	b.n	800e45a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e496:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800e49a:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e49c:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800e4a0:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800e4a4:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e4a6:	d013      	beq.n	800e4d0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800e4a8:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800e4aa:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800e4ae:	d107      	bne.n	800e4c0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800e4b0:	681a      	ldr	r2, [r3, #0]
 800e4b2:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800e4b6:	601a      	str	r2, [r3, #0]
 800e4b8:	681a      	ldr	r2, [r3, #0]
 800e4ba:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800e4be:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800e4c0:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800e4c2:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800e4c4:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800e4c8:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800e4cc:	2003      	movs	r0, #3
 800e4ce:	e7cc      	b.n	800e46a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e4d0:	68ba      	ldr	r2, [r7, #8]
 800e4d2:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800e4d6:	d002      	beq.n	800e4de <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800e4d8:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800e4dc:	d1e4      	bne.n	800e4a8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800e4de:	681a      	ldr	r2, [r3, #0]
 800e4e0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800e4e4:	601a      	str	r2, [r3, #0]
 800e4e6:	e7df      	b.n	800e4a8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800e4e8:	20000078 	.word	0x20000078

0800e4ec <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800e4ec:	b538      	push	{r3, r4, r5, lr}
 800e4ee:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e4f0:	6842      	ldr	r2, [r0, #4]
 800e4f2:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800e4f6:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e4f8:	d006      	beq.n	800e508 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800e4fa:	460a      	mov	r2, r1
 800e4fc:	2101      	movs	r1, #1
 800e4fe:	f7ff ff97 	bl	800e430 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e502:	b978      	cbnz	r0, 800e524 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800e504:	2000      	movs	r0, #0
}
 800e506:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e508:	6882      	ldr	r2, [r0, #8]
 800e50a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800e50e:	d01c      	beq.n	800e54a <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800e510:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800e514:	d00c      	beq.n	800e530 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e516:	460a      	mov	r2, r1
 800e518:	4620      	mov	r0, r4
 800e51a:	2180      	movs	r1, #128	; 0x80
 800e51c:	f7ff ff88 	bl	800e430 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e520:	2800      	cmp	r0, #0
 800e522:	d0ef      	beq.n	800e504 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e524:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800e526:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800e52a:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e52c:	6563      	str	r3, [r4, #84]	; 0x54
}
 800e52e:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800e530:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800e532:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800e534:	6829      	ldr	r1, [r5, #0]
 800e536:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800e53a:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800e53c:	2101      	movs	r1, #1
 800e53e:	f7ff ff77 	bl	800e430 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e542:	2800      	cmp	r0, #0
 800e544:	d1ee      	bne.n	800e524 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800e546:	2000      	movs	r0, #0
 800e548:	e7dd      	b.n	800e506 <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800e54a:	6800      	ldr	r0, [r0, #0]
 800e54c:	6802      	ldr	r2, [r0, #0]
 800e54e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800e552:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e554:	460a      	mov	r2, r1
 800e556:	4620      	mov	r0, r4
 800e558:	2180      	movs	r1, #128	; 0x80
 800e55a:	f7ff ff69 	bl	800e430 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e55e:	2800      	cmp	r0, #0
 800e560:	d0d0      	beq.n	800e504 <SPI_EndRxTransaction+0x18>
 800e562:	e7df      	b.n	800e524 <SPI_EndRxTransaction+0x38>

0800e564 <HAL_SPI_Init>:
  if (hspi == NULL)
 800e564:	2800      	cmp	r0, #0
 800e566:	d05c      	beq.n	800e622 <HAL_SPI_Init+0xbe>
{
 800e568:	b570      	push	{r4, r5, r6, lr}
 800e56a:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800e56c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800e56e:	2800      	cmp	r0, #0
 800e570:	d047      	beq.n	800e602 <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800e572:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800e574:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800e578:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800e57c:	2200      	movs	r2, #0
 800e57e:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800e580:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800e584:	2b00      	cmp	r3, #0
 800e586:	d042      	beq.n	800e60e <HAL_SPI_Init+0xaa>
 800e588:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800e58a:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e58c:	68a5      	ldr	r5, [r4, #8]
 800e58e:	69a2      	ldr	r2, [r4, #24]
 800e590:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800e592:	2302      	movs	r3, #2
 800e594:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800e598:	680b      	ldr	r3, [r1, #0]
 800e59a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800e59e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e5a0:	6863      	ldr	r3, [r4, #4]
 800e5a2:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800e5a6:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800e5aa:	432b      	orrs	r3, r5
 800e5ac:	68e5      	ldr	r5, [r4, #12]
 800e5ae:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800e5b2:	432b      	orrs	r3, r5
 800e5b4:	6925      	ldr	r5, [r4, #16]
 800e5b6:	f005 0502 	and.w	r5, r5, #2
 800e5ba:	432b      	orrs	r3, r5
 800e5bc:	6965      	ldr	r5, [r4, #20]
 800e5be:	f005 0501 	and.w	r5, r5, #1
 800e5c2:	432b      	orrs	r3, r5
 800e5c4:	69e5      	ldr	r5, [r4, #28]
 800e5c6:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800e5ca:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800e5ce:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800e5d2:	4333      	orrs	r3, r6
 800e5d4:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e5d6:	0c12      	lsrs	r2, r2, #16
 800e5d8:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e5dc:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e5e0:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e5e4:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e5e8:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e5ea:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e5ec:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800e5ee:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800e5f0:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800e5f2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800e5f6:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800e5f8:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800e5fa:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800e5fc:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800e600:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e602:	6863      	ldr	r3, [r4, #4]
 800e604:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800e608:	d0b6      	beq.n	800e578 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800e60a:	61e0      	str	r0, [r4, #28]
 800e60c:	e7b4      	b.n	800e578 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800e60e:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800e610:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800e614:	f7f3 fffc 	bl	8002610 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e618:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e61c:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800e620:	e7b3      	b.n	800e58a <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800e622:	2001      	movs	r0, #1
}
 800e624:	4770      	bx	lr
 800e626:	bf00      	nop

0800e628 <HAL_SPI_Transmit>:
{
 800e628:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e62c:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800e62e:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800e632:	2801      	cmp	r0, #1
{
 800e634:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800e636:	f000 8085 	beq.w	800e744 <HAL_SPI_Transmit+0x11c>
 800e63a:	461d      	mov	r5, r3
 800e63c:	2301      	movs	r3, #1
 800e63e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800e642:	4688      	mov	r8, r1
 800e644:	4617      	mov	r7, r2
 800e646:	f7fd f86d 	bl	800b724 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800e64a:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800e64e:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800e650:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800e652:	b2d8      	uxtb	r0, r3
 800e654:	d009      	beq.n	800e66a <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800e656:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800e658:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800e65a:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800e65c:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800e660:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800e664:	b002      	add	sp, #8
 800e666:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800e66a:	f1b8 0f00 	cmp.w	r8, #0
 800e66e:	d0f3      	beq.n	800e658 <HAL_SPI_Transmit+0x30>
 800e670:	2f00      	cmp	r7, #0
 800e672:	d0f1      	beq.n	800e658 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e674:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800e676:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800e678:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e67c:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800e67e:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e680:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800e684:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800e688:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e68c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800e68e:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800e690:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800e692:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800e694:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800e696:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e698:	f000 8085 	beq.w	800e7a6 <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e69c:	6803      	ldr	r3, [r0, #0]
 800e69e:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800e6a0:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e6a2:	d403      	bmi.n	800e6ac <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800e6a4:	6803      	ldr	r3, [r0, #0]
 800e6a6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e6aa:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800e6ac:	68e3      	ldr	r3, [r4, #12]
 800e6ae:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800e6b2:	d04b      	beq.n	800e74c <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e6b4:	6863      	ldr	r3, [r4, #4]
 800e6b6:	2b00      	cmp	r3, #0
 800e6b8:	f000 8097 	beq.w	800e7ea <HAL_SPI_Transmit+0x1c2>
 800e6bc:	2f01      	cmp	r7, #1
 800e6be:	f000 8094 	beq.w	800e7ea <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800e6c2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e6c4:	b29b      	uxth	r3, r3
 800e6c6:	b1ab      	cbz	r3, 800e6f4 <HAL_SPI_Transmit+0xcc>
 800e6c8:	1c68      	adds	r0, r5, #1
 800e6ca:	f040 8083 	bne.w	800e7d4 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e6ce:	6823      	ldr	r3, [r4, #0]
 800e6d0:	689a      	ldr	r2, [r3, #8]
 800e6d2:	0791      	lsls	r1, r2, #30
 800e6d4:	f140 8094 	bpl.w	800e800 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e6d8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e6da:	7812      	ldrb	r2, [r2, #0]
 800e6dc:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800e6de:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e6e0:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e6e2:	3901      	subs	r1, #1
 800e6e4:	b289      	uxth	r1, r1
 800e6e6:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e6e8:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e6ea:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800e6ec:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e6ee:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800e6f0:	2900      	cmp	r1, #0
 800e6f2:	d1ec      	bne.n	800e6ce <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e6f4:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e6f6:	4b5b      	ldr	r3, [pc, #364]	; (800e864 <HAL_SPI_Transmit+0x23c>)
 800e6f8:	4a5b      	ldr	r2, [pc, #364]	; (800e868 <HAL_SPI_Transmit+0x240>)
 800e6fa:	681b      	ldr	r3, [r3, #0]
 800e6fc:	fba2 2303 	umull	r2, r3, r2, r3
 800e700:	0d5b      	lsrs	r3, r3, #21
 800e702:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800e706:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e70a:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e70e:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e710:	d107      	bne.n	800e722 <HAL_SPI_Transmit+0xfa>
 800e712:	e098      	b.n	800e846 <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800e714:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e716:	6822      	ldr	r2, [r4, #0]
      count--;
 800e718:	3b01      	subs	r3, #1
 800e71a:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e71c:	6893      	ldr	r3, [r2, #8]
 800e71e:	061b      	lsls	r3, r3, #24
 800e720:	d502      	bpl.n	800e728 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800e722:	9b01      	ldr	r3, [sp, #4]
 800e724:	2b00      	cmp	r3, #0
 800e726:	d1f5      	bne.n	800e714 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800e728:	68a3      	ldr	r3, [r4, #8]
 800e72a:	b933      	cbnz	r3, 800e73a <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800e72c:	6822      	ldr	r2, [r4, #0]
 800e72e:	9300      	str	r3, [sp, #0]
 800e730:	68d3      	ldr	r3, [r2, #12]
 800e732:	9300      	str	r3, [sp, #0]
 800e734:	6893      	ldr	r3, [r2, #8]
 800e736:	9300      	str	r3, [sp, #0]
 800e738:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800e73a:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800e73c:	3800      	subs	r0, #0
 800e73e:	bf18      	it	ne
 800e740:	2001      	movne	r0, #1
error:
 800e742:	e789      	b.n	800e658 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800e744:	2002      	movs	r0, #2
}
 800e746:	b002      	add	sp, #8
 800e748:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e74c:	6861      	ldr	r1, [r4, #4]
 800e74e:	2900      	cmp	r1, #0
 800e750:	d176      	bne.n	800e840 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e752:	4643      	mov	r3, r8
 800e754:	f833 7b02 	ldrh.w	r7, [r3], #2
 800e758:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800e75a:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e75c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e75e:	3b01      	subs	r3, #1
 800e760:	b29b      	uxth	r3, r3
 800e762:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e764:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e766:	b29b      	uxth	r3, r3
 800e768:	2b00      	cmp	r3, #0
 800e76a:	d0c4      	beq.n	800e6f6 <HAL_SPI_Transmit+0xce>
 800e76c:	1c6b      	adds	r3, r5, #1
 800e76e:	d15e      	bne.n	800e82e <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e770:	6883      	ldr	r3, [r0, #8]
 800e772:	079f      	lsls	r7, r3, #30
 800e774:	d50f      	bpl.n	800e796 <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e776:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e778:	f832 3b02 	ldrh.w	r3, [r2], #2
 800e77c:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800e77e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e780:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e782:	3b01      	subs	r3, #1
 800e784:	b29b      	uxth	r3, r3
 800e786:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e788:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e78a:	b29b      	uxth	r3, r3
 800e78c:	2b00      	cmp	r3, #0
 800e78e:	d0b1      	beq.n	800e6f4 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e790:	6883      	ldr	r3, [r0, #8]
 800e792:	079f      	lsls	r7, r3, #30
 800e794:	d4ef      	bmi.n	800e776 <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e796:	f7fc ffc5 	bl	800b724 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800e79a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e79c:	b29b      	uxth	r3, r3
 800e79e:	2b00      	cmp	r3, #0
 800e7a0:	d0a8      	beq.n	800e6f4 <HAL_SPI_Transmit+0xcc>
 800e7a2:	6820      	ldr	r0, [r4, #0]
 800e7a4:	e7e4      	b.n	800e770 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800e7a6:	6803      	ldr	r3, [r0, #0]
 800e7a8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800e7ac:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800e7ae:	6803      	ldr	r3, [r0, #0]
 800e7b0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800e7b4:	6003      	str	r3, [r0, #0]
 800e7b6:	e771      	b.n	800e69c <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e7b8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e7ba:	7812      	ldrb	r2, [r2, #0]
 800e7bc:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800e7be:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e7c0:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e7c2:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e7c4:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800e7c6:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e7c8:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e7ca:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e7cc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e7ce:	b29b      	uxth	r3, r3
 800e7d0:	2b00      	cmp	r3, #0
 800e7d2:	d08f      	beq.n	800e6f4 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e7d4:	6823      	ldr	r3, [r4, #0]
 800e7d6:	689a      	ldr	r2, [r3, #8]
 800e7d8:	0792      	lsls	r2, r2, #30
 800e7da:	d4ed      	bmi.n	800e7b8 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e7dc:	f7fc ffa2 	bl	800b724 <HAL_GetTick>
 800e7e0:	1b80      	subs	r0, r0, r6
 800e7e2:	42a8      	cmp	r0, r5
 800e7e4:	d3f2      	bcc.n	800e7cc <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800e7e6:	2003      	movs	r0, #3
 800e7e8:	e736      	b.n	800e658 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e7ea:	f898 3000 	ldrb.w	r3, [r8]
 800e7ee:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800e7f0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e7f2:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e7f4:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e7f6:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800e7f8:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e7fa:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e7fc:	86e3      	strh	r3, [r4, #54]	; 0x36
 800e7fe:	e760      	b.n	800e6c2 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e800:	f7fc ff90 	bl	800b724 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800e804:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e806:	b29b      	uxth	r3, r3
 800e808:	2b00      	cmp	r3, #0
 800e80a:	f47f af60 	bne.w	800e6ce <HAL_SPI_Transmit+0xa6>
 800e80e:	e771      	b.n	800e6f4 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e810:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e812:	f831 3b02 	ldrh.w	r3, [r1], #2
 800e816:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800e818:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e81a:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e81c:	3b01      	subs	r3, #1
 800e81e:	b29b      	uxth	r3, r3
 800e820:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e822:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e824:	b29b      	uxth	r3, r3
 800e826:	2b00      	cmp	r3, #0
 800e828:	f43f af64 	beq.w	800e6f4 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e82c:	6822      	ldr	r2, [r4, #0]
 800e82e:	6893      	ldr	r3, [r2, #8]
 800e830:	0799      	lsls	r1, r3, #30
 800e832:	d4ed      	bmi.n	800e810 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e834:	f7fc ff76 	bl	800b724 <HAL_GetTick>
 800e838:	1b80      	subs	r0, r0, r6
 800e83a:	42a8      	cmp	r0, r5
 800e83c:	d3f1      	bcc.n	800e822 <HAL_SPI_Transmit+0x1fa>
 800e83e:	e7d2      	b.n	800e7e6 <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e840:	2f01      	cmp	r7, #1
 800e842:	d18f      	bne.n	800e764 <HAL_SPI_Transmit+0x13c>
 800e844:	e785      	b.n	800e752 <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e846:	4633      	mov	r3, r6
 800e848:	462a      	mov	r2, r5
 800e84a:	2180      	movs	r1, #128	; 0x80
 800e84c:	4620      	mov	r0, r4
 800e84e:	f7ff fdef 	bl	800e430 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e852:	2800      	cmp	r0, #0
 800e854:	f43f af68 	beq.w	800e728 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e858:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e85a:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e85c:	4313      	orrs	r3, r2
 800e85e:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e860:	6562      	str	r2, [r4, #84]	; 0x54
 800e862:	e761      	b.n	800e728 <HAL_SPI_Transmit+0x100>
 800e864:	20000078 	.word	0x20000078
 800e868:	165e9f81 	.word	0x165e9f81

0800e86c <HAL_SPI_TransmitReceive>:
{
 800e86c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e870:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800e872:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800e876:	2801      	cmp	r0, #1
{
 800e878:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800e87a:	f000 80ac 	beq.w	800e9d6 <HAL_SPI_TransmitReceive+0x16a>
 800e87e:	461e      	mov	r6, r3
 800e880:	2301      	movs	r3, #1
 800e882:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800e886:	4690      	mov	r8, r2
 800e888:	460f      	mov	r7, r1
 800e88a:	f7fc ff4b 	bl	800b724 <HAL_GetTick>
 800e88e:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800e890:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800e894:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800e896:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800e898:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800e89a:	d011      	beq.n	800e8c0 <HAL_SPI_TransmitReceive+0x54>
 800e89c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800e8a0:	d009      	beq.n	800e8b6 <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800e8a2:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800e8a4:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800e8a6:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800e8a8:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800e8ac:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800e8b0:	b002      	add	sp, #8
 800e8b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800e8b6:	68a1      	ldr	r1, [r4, #8]
 800e8b8:	2900      	cmp	r1, #0
 800e8ba:	d1f2      	bne.n	800e8a2 <HAL_SPI_TransmitReceive+0x36>
 800e8bc:	2a04      	cmp	r2, #4
 800e8be:	d1f0      	bne.n	800e8a2 <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800e8c0:	2f00      	cmp	r7, #0
 800e8c2:	f000 808c 	beq.w	800e9de <HAL_SPI_TransmitReceive+0x172>
 800e8c6:	f1b8 0f00 	cmp.w	r8, #0
 800e8ca:	f000 8088 	beq.w	800e9de <HAL_SPI_TransmitReceive+0x172>
 800e8ce:	2e00      	cmp	r6, #0
 800e8d0:	f000 8085 	beq.w	800e9de <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800e8d4:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800e8d8:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800e8dc:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800e8de:	bf1c      	itt	ne
 800e8e0:	2205      	movne	r2, #5
 800e8e2:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e8e6:	2200      	movs	r2, #0
 800e8e8:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800e8ea:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e8ee:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800e8f0:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800e8f2:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e8f4:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800e8f6:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e8f8:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800e8fa:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800e8fc:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e8fe:	d403      	bmi.n	800e908 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800e900:	6811      	ldr	r1, [r2, #0]
 800e902:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800e906:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800e908:	68e1      	ldr	r1, [r4, #12]
 800e90a:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800e90e:	f000 809e 	beq.w	800ea4e <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e912:	2b00      	cmp	r3, #0
 800e914:	f000 8091 	beq.w	800ea3a <HAL_SPI_TransmitReceive+0x1ce>
 800e918:	2e01      	cmp	r6, #1
 800e91a:	f000 808e 	beq.w	800ea3a <HAL_SPI_TransmitReceive+0x1ce>
 800e91e:	9b08      	ldr	r3, [sp, #32]
 800e920:	3301      	adds	r3, #1
        txallowed = 1U;
 800e922:	f04f 0601 	mov.w	r6, #1
 800e926:	d028      	beq.n	800e97a <HAL_SPI_TransmitReceive+0x10e>
 800e928:	e05b      	b.n	800e9e2 <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e92a:	6821      	ldr	r1, [r4, #0]
 800e92c:	688b      	ldr	r3, [r1, #8]
 800e92e:	0798      	lsls	r0, r3, #30
 800e930:	d50f      	bpl.n	800e952 <HAL_SPI_TransmitReceive+0xe6>
 800e932:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e934:	b29b      	uxth	r3, r3
 800e936:	b163      	cbz	r3, 800e952 <HAL_SPI_TransmitReceive+0xe6>
 800e938:	b15e      	cbz	r6, 800e952 <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800e93a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e93c:	781b      	ldrb	r3, [r3, #0]
 800e93e:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800e940:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800e942:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e944:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800e946:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800e948:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800e94a:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800e94c:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800e94e:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800e950:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e952:	688a      	ldr	r2, [r1, #8]
 800e954:	f012 0201 	ands.w	r2, r2, #1
 800e958:	d00d      	beq.n	800e976 <HAL_SPI_TransmitReceive+0x10a>
 800e95a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e95c:	b29b      	uxth	r3, r3
 800e95e:	b153      	cbz	r3, 800e976 <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800e960:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e962:	68c9      	ldr	r1, [r1, #12]
 800e964:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800e966:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800e968:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e96a:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800e96c:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800e96e:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800e970:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e972:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800e974:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800e976:	f7fc fed5 	bl	800b724 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e97a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800e97c:	b292      	uxth	r2, r2
 800e97e:	2a00      	cmp	r2, #0
 800e980:	d1d3      	bne.n	800e92a <HAL_SPI_TransmitReceive+0xbe>
 800e982:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e984:	b29b      	uxth	r3, r3
 800e986:	2b00      	cmp	r3, #0
 800e988:	d1cf      	bne.n	800e92a <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e98a:	4b79      	ldr	r3, [pc, #484]	; (800eb70 <HAL_SPI_TransmitReceive+0x304>)
 800e98c:	4a79      	ldr	r2, [pc, #484]	; (800eb74 <HAL_SPI_TransmitReceive+0x308>)
 800e98e:	681b      	ldr	r3, [r3, #0]
 800e990:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e994:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e996:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800e99a:	0d5b      	lsrs	r3, r3, #21
 800e99c:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e9a0:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e9a4:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e9a6:	d107      	bne.n	800e9b8 <HAL_SPI_TransmitReceive+0x14c>
 800e9a8:	e0d2      	b.n	800eb50 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800e9aa:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e9ac:	6822      	ldr	r2, [r4, #0]
      count--;
 800e9ae:	3b01      	subs	r3, #1
 800e9b0:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e9b2:	6893      	ldr	r3, [r2, #8]
 800e9b4:	061b      	lsls	r3, r3, #24
 800e9b6:	d502      	bpl.n	800e9be <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800e9b8:	9b01      	ldr	r3, [sp, #4]
 800e9ba:	2b00      	cmp	r3, #0
 800e9bc:	d1f5      	bne.n	800e9aa <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800e9be:	68a0      	ldr	r0, [r4, #8]
 800e9c0:	2800      	cmp	r0, #0
 800e9c2:	f040 8082 	bne.w	800eaca <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800e9c6:	6823      	ldr	r3, [r4, #0]
 800e9c8:	9000      	str	r0, [sp, #0]
 800e9ca:	68da      	ldr	r2, [r3, #12]
 800e9cc:	9200      	str	r2, [sp, #0]
 800e9ce:	689b      	ldr	r3, [r3, #8]
 800e9d0:	9300      	str	r3, [sp, #0]
 800e9d2:	9b00      	ldr	r3, [sp, #0]
 800e9d4:	e766      	b.n	800e8a4 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800e9d6:	2002      	movs	r0, #2
}
 800e9d8:	b002      	add	sp, #8
 800e9da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800e9de:	2001      	movs	r0, #1
 800e9e0:	e760      	b.n	800e8a4 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e9e2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e9e4:	b29b      	uxth	r3, r3
 800e9e6:	b91b      	cbnz	r3, 800e9f0 <HAL_SPI_TransmitReceive+0x184>
 800e9e8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e9ea:	b29b      	uxth	r3, r3
 800e9ec:	2b00      	cmp	r3, #0
 800e9ee:	d0cc      	beq.n	800e98a <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e9f0:	6822      	ldr	r2, [r4, #0]
 800e9f2:	6893      	ldr	r3, [r2, #8]
 800e9f4:	0799      	lsls	r1, r3, #30
 800e9f6:	d50f      	bpl.n	800ea18 <HAL_SPI_TransmitReceive+0x1ac>
 800e9f8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e9fa:	b29b      	uxth	r3, r3
 800e9fc:	b163      	cbz	r3, 800ea18 <HAL_SPI_TransmitReceive+0x1ac>
 800e9fe:	b15e      	cbz	r6, 800ea18 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800ea00:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ea02:	781b      	ldrb	r3, [r3, #0]
 800ea04:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800ea06:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800ea08:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ea0a:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800ea0c:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800ea0e:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800ea10:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ea12:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800ea14:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800ea16:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ea18:	6893      	ldr	r3, [r2, #8]
 800ea1a:	f013 0301 	ands.w	r3, r3, #1
 800ea1e:	d004      	beq.n	800ea2a <HAL_SPI_TransmitReceive+0x1be>
 800ea20:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ea22:	b289      	uxth	r1, r1
 800ea24:	2900      	cmp	r1, #0
 800ea26:	f040 8087 	bne.w	800eb38 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800ea2a:	f7fc fe7b 	bl	800b724 <HAL_GetTick>
 800ea2e:	9b08      	ldr	r3, [sp, #32]
 800ea30:	1b40      	subs	r0, r0, r5
 800ea32:	4298      	cmp	r0, r3
 800ea34:	d3d5      	bcc.n	800e9e2 <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800ea36:	2003      	movs	r0, #3
 800ea38:	e734      	b.n	800e8a4 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800ea3a:	783b      	ldrb	r3, [r7, #0]
 800ea3c:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800ea3e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ea40:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ea42:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ea44:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800ea46:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ea48:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ea4a:	86e3      	strh	r3, [r4, #54]	; 0x36
 800ea4c:	e767      	b.n	800e91e <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ea4e:	2b00      	cmp	r3, #0
 800ea50:	d13d      	bne.n	800eace <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ea52:	f837 3b02 	ldrh.w	r3, [r7], #2
 800ea56:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800ea58:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800ea5a:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ea5c:	3b01      	subs	r3, #1
 800ea5e:	b29b      	uxth	r3, r3
 800ea60:	86e3      	strh	r3, [r4, #54]	; 0x36
 800ea62:	9b08      	ldr	r3, [sp, #32]
 800ea64:	3301      	adds	r3, #1
{
 800ea66:	f04f 0601 	mov.w	r6, #1
 800ea6a:	d025      	beq.n	800eab8 <HAL_SPI_TransmitReceive+0x24c>
 800ea6c:	e032      	b.n	800ead4 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800ea6e:	6823      	ldr	r3, [r4, #0]
 800ea70:	689a      	ldr	r2, [r3, #8]
 800ea72:	0792      	lsls	r2, r2, #30
 800ea74:	d50d      	bpl.n	800ea92 <HAL_SPI_TransmitReceive+0x226>
 800ea76:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800ea78:	b292      	uxth	r2, r2
 800ea7a:	b152      	cbz	r2, 800ea92 <HAL_SPI_TransmitReceive+0x226>
 800ea7c:	b14e      	cbz	r6, 800ea92 <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ea7e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ea80:	f831 2b02 	ldrh.w	r2, [r1], #2
 800ea84:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800ea86:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800ea88:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ea8a:	3a01      	subs	r2, #1
 800ea8c:	b292      	uxth	r2, r2
        txallowed = 0U;
 800ea8e:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800ea90:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ea92:	689a      	ldr	r2, [r3, #8]
 800ea94:	f012 0201 	ands.w	r2, r2, #1
 800ea98:	d00c      	beq.n	800eab4 <HAL_SPI_TransmitReceive+0x248>
 800ea9a:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ea9c:	b289      	uxth	r1, r1
 800ea9e:	b149      	cbz	r1, 800eab4 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800eaa0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800eaa2:	68db      	ldr	r3, [r3, #12]
 800eaa4:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800eaa8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800eaaa:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800eaac:	3b01      	subs	r3, #1
 800eaae:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800eab0:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800eab2:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800eab4:	f7fc fe36 	bl	800b724 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800eab8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800eaba:	b29b      	uxth	r3, r3
 800eabc:	2b00      	cmp	r3, #0
 800eabe:	d1d6      	bne.n	800ea6e <HAL_SPI_TransmitReceive+0x202>
 800eac0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800eac2:	b29b      	uxth	r3, r3
 800eac4:	2b00      	cmp	r3, #0
 800eac6:	d1d2      	bne.n	800ea6e <HAL_SPI_TransmitReceive+0x202>
 800eac8:	e75f      	b.n	800e98a <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800eaca:	2000      	movs	r0, #0
 800eacc:	e6ea      	b.n	800e8a4 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800eace:	2e01      	cmp	r6, #1
 800ead0:	d1c7      	bne.n	800ea62 <HAL_SPI_TransmitReceive+0x1f6>
 800ead2:	e7be      	b.n	800ea52 <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800ead4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ead6:	b29b      	uxth	r3, r3
 800ead8:	b923      	cbnz	r3, 800eae4 <HAL_SPI_TransmitReceive+0x278>
 800eada:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800eadc:	b29b      	uxth	r3, r3
 800eade:	2b00      	cmp	r3, #0
 800eae0:	f43f af53 	beq.w	800e98a <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800eae4:	6822      	ldr	r2, [r4, #0]
 800eae6:	6893      	ldr	r3, [r2, #8]
 800eae8:	079f      	lsls	r7, r3, #30
 800eaea:	d50d      	bpl.n	800eb08 <HAL_SPI_TransmitReceive+0x29c>
 800eaec:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800eaee:	b29b      	uxth	r3, r3
 800eaf0:	b153      	cbz	r3, 800eb08 <HAL_SPI_TransmitReceive+0x29c>
 800eaf2:	b14e      	cbz	r6, 800eb08 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800eaf4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800eaf6:	f831 3b02 	ldrh.w	r3, [r1], #2
 800eafa:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800eafc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800eafe:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800eb00:	3b01      	subs	r3, #1
 800eb02:	b29b      	uxth	r3, r3
 800eb04:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800eb06:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800eb08:	6893      	ldr	r3, [r2, #8]
 800eb0a:	f013 0301 	ands.w	r3, r3, #1
 800eb0e:	d00c      	beq.n	800eb2a <HAL_SPI_TransmitReceive+0x2be>
 800eb10:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800eb12:	b289      	uxth	r1, r1
 800eb14:	b149      	cbz	r1, 800eb2a <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800eb16:	68d1      	ldr	r1, [r2, #12]
 800eb18:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800eb1a:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800eb1e:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800eb20:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800eb22:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800eb24:	3b01      	subs	r3, #1
 800eb26:	b29b      	uxth	r3, r3
 800eb28:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800eb2a:	f7fc fdfb 	bl	800b724 <HAL_GetTick>
 800eb2e:	9b08      	ldr	r3, [sp, #32]
 800eb30:	1b40      	subs	r0, r0, r5
 800eb32:	4298      	cmp	r0, r3
 800eb34:	d3ce      	bcc.n	800ead4 <HAL_SPI_TransmitReceive+0x268>
 800eb36:	e77e      	b.n	800ea36 <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800eb38:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800eb3a:	68d2      	ldr	r2, [r2, #12]
 800eb3c:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800eb3e:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800eb40:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800eb42:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800eb44:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800eb46:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800eb48:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800eb4a:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800eb4c:	461e      	mov	r6, r3
 800eb4e:	e76c      	b.n	800ea2a <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800eb50:	9a08      	ldr	r2, [sp, #32]
 800eb52:	462b      	mov	r3, r5
 800eb54:	2180      	movs	r1, #128	; 0x80
 800eb56:	4620      	mov	r0, r4
 800eb58:	f7ff fc6a 	bl	800e430 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800eb5c:	2800      	cmp	r0, #0
 800eb5e:	f43f af2e 	beq.w	800e9be <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800eb62:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800eb64:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800eb66:	4313      	orrs	r3, r2
 800eb68:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800eb6a:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800eb6c:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800eb6e:	e699      	b.n	800e8a4 <HAL_SPI_TransmitReceive+0x38>
 800eb70:	20000078 	.word	0x20000078
 800eb74:	165e9f81 	.word	0x165e9f81

0800eb78 <HAL_SPI_Receive>:
{
 800eb78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800eb7c:	6846      	ldr	r6, [r0, #4]
 800eb7e:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800eb82:	b082      	sub	sp, #8
 800eb84:	4604      	mov	r4, r0
 800eb86:	4690      	mov	r8, r2
 800eb88:	461d      	mov	r5, r3
 800eb8a:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800eb8c:	d06e      	beq.n	800ec6c <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800eb8e:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800eb92:	2b01      	cmp	r3, #1
 800eb94:	d076      	beq.n	800ec84 <HAL_SPI_Receive+0x10c>
 800eb96:	2301      	movs	r3, #1
 800eb98:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800eb9c:	f7fc fdc2 	bl	800b724 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800eba0:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800eba4:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800eba8:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800ebaa:	fa5f f08c 	uxtb.w	r0, ip
 800ebae:	d009      	beq.n	800ebc4 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800ebb0:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800ebb2:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800ebb4:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800ebb6:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800ebba:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800ebbe:	b002      	add	sp, #8
 800ebc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800ebc4:	2f00      	cmp	r7, #0
 800ebc6:	d0f4      	beq.n	800ebb2 <HAL_SPI_Receive+0x3a>
 800ebc8:	f1b8 0f00 	cmp.w	r8, #0
 800ebcc:	d0f1      	beq.n	800ebb2 <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ebce:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800ebd0:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ebd2:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800ebd6:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800ebd8:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ebdc:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800ebe0:	f04f 0104 	mov.w	r1, #4
 800ebe4:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800ebe8:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ebec:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800ebee:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800ebf0:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800ebf2:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800ebf6:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800ebf8:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ebfa:	d107      	bne.n	800ec0c <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800ebfc:	6811      	ldr	r1, [r2, #0]
 800ebfe:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800ec02:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800ec04:	6811      	ldr	r1, [r2, #0]
 800ec06:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800ec0a:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ec0c:	6811      	ldr	r1, [r2, #0]
 800ec0e:	0648      	lsls	r0, r1, #25
 800ec10:	d403      	bmi.n	800ec1a <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800ec12:	6811      	ldr	r1, [r2, #0]
 800ec14:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800ec18:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800ec1a:	68e1      	ldr	r1, [r4, #12]
 800ec1c:	2900      	cmp	r1, #0
 800ec1e:	d054      	beq.n	800ecca <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800ec20:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ec22:	b289      	uxth	r1, r1
 800ec24:	b1a9      	cbz	r1, 800ec52 <HAL_SPI_Receive+0xda>
 800ec26:	1c69      	adds	r1, r5, #1
 800ec28:	d13e      	bne.n	800eca8 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ec2a:	6893      	ldr	r3, [r2, #8]
 800ec2c:	07db      	lsls	r3, r3, #31
 800ec2e:	d544      	bpl.n	800ecba <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ec30:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ec32:	68d1      	ldr	r1, [r2, #12]
 800ec34:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800ec38:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ec3c:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ec3e:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ec42:	fa1f fc8c 	uxth.w	ip, ip
 800ec46:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ec4a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ec4c:	b29b      	uxth	r3, r3
 800ec4e:	2b00      	cmp	r3, #0
 800ec50:	d1eb      	bne.n	800ec2a <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800ec52:	4632      	mov	r2, r6
 800ec54:	4629      	mov	r1, r5
 800ec56:	4620      	mov	r0, r4
 800ec58:	f7ff fc48 	bl	800e4ec <SPI_EndRxTransaction>
 800ec5c:	b108      	cbz	r0, 800ec62 <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ec5e:	2320      	movs	r3, #32
 800ec60:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800ec62:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800ec64:	3800      	subs	r0, #0
 800ec66:	bf18      	it	ne
 800ec68:	2001      	movne	r0, #1
error :
 800ec6a:	e7a2      	b.n	800ebb2 <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800ec6c:	6883      	ldr	r3, [r0, #8]
 800ec6e:	2b00      	cmp	r3, #0
 800ec70:	d18d      	bne.n	800eb8e <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800ec72:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800ec74:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800ec76:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800ec78:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800ec7c:	460a      	mov	r2, r1
 800ec7e:	f7ff fdf5 	bl	800e86c <HAL_SPI_TransmitReceive>
 800ec82:	e79c      	b.n	800ebbe <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800ec84:	2002      	movs	r0, #2
}
 800ec86:	b002      	add	sp, #8
 800ec88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ec8c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ec8e:	68db      	ldr	r3, [r3, #12]
 800ec90:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800ec94:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ec96:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ec98:	3b01      	subs	r3, #1
 800ec9a:	b29b      	uxth	r3, r3
 800ec9c:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ec9e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800eca0:	b29b      	uxth	r3, r3
 800eca2:	2b00      	cmp	r3, #0
 800eca4:	d0d5      	beq.n	800ec52 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800eca6:	6823      	ldr	r3, [r4, #0]
 800eca8:	689a      	ldr	r2, [r3, #8]
 800ecaa:	07d2      	lsls	r2, r2, #31
 800ecac:	d4ee      	bmi.n	800ec8c <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ecae:	f7fc fd39 	bl	800b724 <HAL_GetTick>
 800ecb2:	1b80      	subs	r0, r0, r6
 800ecb4:	42a8      	cmp	r0, r5
 800ecb6:	d243      	bcs.n	800ed40 <HAL_SPI_Receive+0x1c8>
 800ecb8:	e7f1      	b.n	800ec9e <HAL_SPI_Receive+0x126>
 800ecba:	f7fc fd33 	bl	800b724 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800ecbe:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ecc0:	b29b      	uxth	r3, r3
 800ecc2:	2b00      	cmp	r3, #0
 800ecc4:	d0c5      	beq.n	800ec52 <HAL_SPI_Receive+0xda>
 800ecc6:	6822      	ldr	r2, [r4, #0]
 800ecc8:	e7af      	b.n	800ec2a <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800ecca:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800eccc:	b292      	uxth	r2, r2
 800ecce:	2a00      	cmp	r2, #0
 800ecd0:	d0bf      	beq.n	800ec52 <HAL_SPI_Receive+0xda>
 800ecd2:	1c6f      	adds	r7, r5, #1
 800ecd4:	d013      	beq.n	800ecfe <HAL_SPI_Receive+0x186>
 800ecd6:	e02b      	b.n	800ed30 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800ecd8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ecda:	7b1b      	ldrb	r3, [r3, #12]
 800ecdc:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800ecde:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ece2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ece4:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ece8:	fa1f fc8c 	uxth.w	ip, ip
 800ecec:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ecf0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ecf2:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800ecf4:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ecf6:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800ecf8:	2b00      	cmp	r3, #0
 800ecfa:	d0aa      	beq.n	800ec52 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ecfc:	6823      	ldr	r3, [r4, #0]
 800ecfe:	689a      	ldr	r2, [r3, #8]
 800ed00:	07d0      	lsls	r0, r2, #31
 800ed02:	d4e9      	bmi.n	800ecd8 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ed04:	f7fc fd0e 	bl	800b724 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800ed08:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ed0a:	b29b      	uxth	r3, r3
 800ed0c:	2b00      	cmp	r3, #0
 800ed0e:	d1f5      	bne.n	800ecfc <HAL_SPI_Receive+0x184>
 800ed10:	e79f      	b.n	800ec52 <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800ed12:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ed14:	7b1b      	ldrb	r3, [r3, #12]
 800ed16:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800ed18:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ed1a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ed1c:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ed1e:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800ed20:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ed22:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ed24:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ed26:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ed28:	b29b      	uxth	r3, r3
 800ed2a:	2b00      	cmp	r3, #0
 800ed2c:	d091      	beq.n	800ec52 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ed2e:	6823      	ldr	r3, [r4, #0]
 800ed30:	689a      	ldr	r2, [r3, #8]
 800ed32:	07d1      	lsls	r1, r2, #31
 800ed34:	d4ed      	bmi.n	800ed12 <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ed36:	f7fc fcf5 	bl	800b724 <HAL_GetTick>
 800ed3a:	1b80      	subs	r0, r0, r6
 800ed3c:	42a8      	cmp	r0, r5
 800ed3e:	d3f2      	bcc.n	800ed26 <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800ed40:	2003      	movs	r0, #3
 800ed42:	e736      	b.n	800ebb2 <HAL_SPI_Receive+0x3a>

0800ed44 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800ed44:	2800      	cmp	r0, #0
 800ed46:	f000 8087 	beq.w	800ee58 <HAL_TIM_Base_Init+0x114>
{
 800ed4a:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800ed4c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ed50:	4604      	mov	r4, r0
 800ed52:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ed56:	2b00      	cmp	r3, #0
 800ed58:	d079      	beq.n	800ee4e <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800ed5a:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ed5c:	493f      	ldr	r1, [pc, #252]	; (800ee5c <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800ed5e:	2302      	movs	r3, #2
 800ed60:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ed64:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800ed66:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ed68:	d05d      	beq.n	800ee26 <HAL_TIM_Base_Init+0xe2>
 800ed6a:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800ed6e:	d031      	beq.n	800edd4 <HAL_TIM_Base_Init+0x90>
 800ed70:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800ed74:	428a      	cmp	r2, r1
 800ed76:	d02d      	beq.n	800edd4 <HAL_TIM_Base_Init+0x90>
 800ed78:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ed7c:	428a      	cmp	r2, r1
 800ed7e:	d029      	beq.n	800edd4 <HAL_TIM_Base_Init+0x90>
 800ed80:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ed84:	428a      	cmp	r2, r1
 800ed86:	d025      	beq.n	800edd4 <HAL_TIM_Base_Init+0x90>
 800ed88:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800ed8c:	428a      	cmp	r2, r1
 800ed8e:	d04a      	beq.n	800ee26 <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800ed90:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800ed94:	428a      	cmp	r2, r1
 800ed96:	d021      	beq.n	800eddc <HAL_TIM_Base_Init+0x98>
 800ed98:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ed9c:	428a      	cmp	r2, r1
 800ed9e:	d01d      	beq.n	800eddc <HAL_TIM_Base_Init+0x98>
 800eda0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800eda4:	428a      	cmp	r2, r1
 800eda6:	d019      	beq.n	800eddc <HAL_TIM_Base_Init+0x98>
 800eda8:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800edac:	428a      	cmp	r2, r1
 800edae:	d015      	beq.n	800eddc <HAL_TIM_Base_Init+0x98>
 800edb0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800edb4:	428a      	cmp	r2, r1
 800edb6:	d011      	beq.n	800eddc <HAL_TIM_Base_Init+0x98>
 800edb8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800edbc:	428a      	cmp	r2, r1
 800edbe:	d00d      	beq.n	800eddc <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800edc0:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800edc2:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800edc4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800edc8:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800edca:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800edcc:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800edce:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800edd0:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800edd2:	e010      	b.n	800edf6 <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800edd4:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800edd6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800edda:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800eddc:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800edde:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800ede0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ede4:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ede6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800edea:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800edec:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800edee:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800edf0:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800edf2:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800edf4:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800edf6:	2301      	movs	r3, #1
 800edf8:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800edfa:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800edfe:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800ee02:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800ee06:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800ee0a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ee0e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800ee12:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800ee16:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800ee1a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800ee1e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800ee22:	2000      	movs	r0, #0
}
 800ee24:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800ee26:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ee28:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ee2a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ee2e:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800ee30:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ee34:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ee36:	69a1      	ldr	r1, [r4, #24]
 800ee38:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ee3c:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800ee3e:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ee40:	68e3      	ldr	r3, [r4, #12]
 800ee42:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ee44:	6863      	ldr	r3, [r4, #4]
 800ee46:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800ee48:	6963      	ldr	r3, [r4, #20]
 800ee4a:	6313      	str	r3, [r2, #48]	; 0x30
 800ee4c:	e7d3      	b.n	800edf6 <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800ee4e:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800ee52:	f7f3 fc19 	bl	8002688 <HAL_TIM_Base_MspInit>
 800ee56:	e780      	b.n	800ed5a <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800ee58:	2001      	movs	r0, #1
}
 800ee5a:	4770      	bx	lr
 800ee5c:	40010000 	.word	0x40010000

0800ee60 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800ee60:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ee64:	2b01      	cmp	r3, #1
 800ee66:	d12f      	bne.n	800eec8 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800ee68:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ee6a:	4919      	ldr	r1, [pc, #100]	; (800eed0 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800ee6c:	2202      	movs	r2, #2
 800ee6e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800ee72:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ee74:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800ee76:	f042 0201 	orr.w	r2, r2, #1
 800ee7a:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ee7c:	d019      	beq.n	800eeb2 <HAL_TIM_Base_Start_IT+0x52>
 800ee7e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ee82:	d016      	beq.n	800eeb2 <HAL_TIM_Base_Start_IT+0x52>
 800ee84:	4a13      	ldr	r2, [pc, #76]	; (800eed4 <HAL_TIM_Base_Start_IT+0x74>)
 800ee86:	4293      	cmp	r3, r2
 800ee88:	d013      	beq.n	800eeb2 <HAL_TIM_Base_Start_IT+0x52>
 800ee8a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ee8e:	4293      	cmp	r3, r2
 800ee90:	d00f      	beq.n	800eeb2 <HAL_TIM_Base_Start_IT+0x52>
 800ee92:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ee96:	4293      	cmp	r3, r2
 800ee98:	d00b      	beq.n	800eeb2 <HAL_TIM_Base_Start_IT+0x52>
 800ee9a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800ee9e:	4293      	cmp	r3, r2
 800eea0:	d007      	beq.n	800eeb2 <HAL_TIM_Base_Start_IT+0x52>
 800eea2:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800eea6:	4293      	cmp	r3, r2
 800eea8:	d003      	beq.n	800eeb2 <HAL_TIM_Base_Start_IT+0x52>
 800eeaa:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800eeae:	4293      	cmp	r3, r2
 800eeb0:	d104      	bne.n	800eebc <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800eeb2:	689a      	ldr	r2, [r3, #8]
 800eeb4:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800eeb8:	2a06      	cmp	r2, #6
 800eeba:	d007      	beq.n	800eecc <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800eebc:	681a      	ldr	r2, [r3, #0]
 800eebe:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800eec2:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800eec4:	601a      	str	r2, [r3, #0]
 800eec6:	4770      	bx	lr
    return HAL_ERROR;
 800eec8:	2001      	movs	r0, #1
 800eeca:	4770      	bx	lr
  return HAL_OK;
 800eecc:	2000      	movs	r0, #0
}
 800eece:	4770      	bx	lr
 800eed0:	40010000 	.word	0x40010000
 800eed4:	40000400 	.word	0x40000400

0800eed8 <HAL_TIM_PWM_MspInit>:
 800eed8:	4770      	bx	lr
 800eeda:	bf00      	nop

0800eedc <HAL_TIM_PWM_Init>:
  if (htim == NULL)
 800eedc:	2800      	cmp	r0, #0
 800eede:	f000 8087 	beq.w	800eff0 <HAL_TIM_PWM_Init+0x114>
{
 800eee2:	b510      	push	{r4, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
 800eee4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800eee8:	4604      	mov	r4, r0
 800eeea:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800eeee:	2b00      	cmp	r3, #0
 800eef0:	d079      	beq.n	800efe6 <HAL_TIM_PWM_Init+0x10a>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800eef2:	6822      	ldr	r2, [r4, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800eef4:	493f      	ldr	r1, [pc, #252]	; (800eff4 <HAL_TIM_PWM_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800eef6:	2302      	movs	r3, #2
 800eef8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800eefc:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800eefe:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ef00:	d05d      	beq.n	800efbe <HAL_TIM_PWM_Init+0xe2>
 800ef02:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800ef06:	d031      	beq.n	800ef6c <HAL_TIM_PWM_Init+0x90>
 800ef08:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800ef0c:	428a      	cmp	r2, r1
 800ef0e:	d02d      	beq.n	800ef6c <HAL_TIM_PWM_Init+0x90>
 800ef10:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ef14:	428a      	cmp	r2, r1
 800ef16:	d029      	beq.n	800ef6c <HAL_TIM_PWM_Init+0x90>
 800ef18:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ef1c:	428a      	cmp	r2, r1
 800ef1e:	d025      	beq.n	800ef6c <HAL_TIM_PWM_Init+0x90>
 800ef20:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800ef24:	428a      	cmp	r2, r1
 800ef26:	d04a      	beq.n	800efbe <HAL_TIM_PWM_Init+0xe2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800ef28:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800ef2c:	428a      	cmp	r2, r1
 800ef2e:	d021      	beq.n	800ef74 <HAL_TIM_PWM_Init+0x98>
 800ef30:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ef34:	428a      	cmp	r2, r1
 800ef36:	d01d      	beq.n	800ef74 <HAL_TIM_PWM_Init+0x98>
 800ef38:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ef3c:	428a      	cmp	r2, r1
 800ef3e:	d019      	beq.n	800ef74 <HAL_TIM_PWM_Init+0x98>
 800ef40:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800ef44:	428a      	cmp	r2, r1
 800ef46:	d015      	beq.n	800ef74 <HAL_TIM_PWM_Init+0x98>
 800ef48:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ef4c:	428a      	cmp	r2, r1
 800ef4e:	d011      	beq.n	800ef74 <HAL_TIM_PWM_Init+0x98>
 800ef50:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ef54:	428a      	cmp	r2, r1
 800ef56:	d00d      	beq.n	800ef74 <HAL_TIM_PWM_Init+0x98>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ef58:	69a0      	ldr	r0, [r4, #24]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ef5a:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ef5c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ef60:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800ef62:	6013      	str	r3, [r2, #0]
  TIMx->PSC = Structure->Prescaler;
 800ef64:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ef66:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ef68:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800ef6a:	e010      	b.n	800ef8e <HAL_TIM_PWM_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800ef6c:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ef6e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ef72:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ef74:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ef76:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800ef78:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ef7c:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ef7e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ef82:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ef84:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800ef86:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800ef88:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ef8a:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ef8c:	6291      	str	r1, [r2, #40]	; 0x28
  TIMx->EGR = TIM_EGR_UG;
 800ef8e:	2301      	movs	r3, #1
 800ef90:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800ef92:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ef96:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800ef9a:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800ef9e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800efa2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800efa6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800efaa:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800efae:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800efb2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800efb6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800efba:	2000      	movs	r0, #0
}
 800efbc:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800efbe:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800efc0:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800efc2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800efc6:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800efc8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800efcc:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800efce:	69a1      	ldr	r1, [r4, #24]
 800efd0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800efd4:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800efd6:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800efd8:	68e3      	ldr	r3, [r4, #12]
 800efda:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800efdc:	6863      	ldr	r3, [r4, #4]
 800efde:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800efe0:	6963      	ldr	r3, [r4, #20]
 800efe2:	6313      	str	r3, [r2, #48]	; 0x30
 800efe4:	e7d3      	b.n	800ef8e <HAL_TIM_PWM_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800efe6:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 800efea:	f7ff ff75 	bl	800eed8 <HAL_TIM_PWM_MspInit>
 800efee:	e780      	b.n	800eef2 <HAL_TIM_PWM_Init+0x16>
    return HAL_ERROR;
 800eff0:	2001      	movs	r0, #1
}
 800eff2:	4770      	bx	lr
 800eff4:	40010000 	.word	0x40010000

0800eff8 <HAL_TIM_PWM_Start>:
 800eff8:	2900      	cmp	r1, #0
 800effa:	d13c      	bne.n	800f076 <HAL_TIM_PWM_Start+0x7e>
 800effc:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 800f000:	2b01      	cmp	r3, #1
 800f002:	d140      	bne.n	800f086 <HAL_TIM_PWM_Start+0x8e>
 800f004:	2302      	movs	r3, #2
 800f006:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 800f00a:	6803      	ldr	r3, [r0, #0]
 800f00c:	f001 011f 	and.w	r1, r1, #31
 800f010:	6a18      	ldr	r0, [r3, #32]
 800f012:	2201      	movs	r2, #1
 800f014:	408a      	lsls	r2, r1
 800f016:	ea20 0002 	bic.w	r0, r0, r2
 800f01a:	6218      	str	r0, [r3, #32]
 800f01c:	6a18      	ldr	r0, [r3, #32]
 800f01e:	492c      	ldr	r1, [pc, #176]	; (800f0d0 <HAL_TIM_PWM_Start+0xd8>)
 800f020:	4302      	orrs	r2, r0
 800f022:	428b      	cmp	r3, r1
 800f024:	621a      	str	r2, [r3, #32]
 800f026:	d038      	beq.n	800f09a <HAL_TIM_PWM_Start+0xa2>
 800f028:	4a2a      	ldr	r2, [pc, #168]	; (800f0d4 <HAL_TIM_PWM_Start+0xdc>)
 800f02a:	4293      	cmp	r3, r2
 800f02c:	d035      	beq.n	800f09a <HAL_TIM_PWM_Start+0xa2>
 800f02e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800f032:	d015      	beq.n	800f060 <HAL_TIM_PWM_Start+0x68>
 800f034:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800f038:	428b      	cmp	r3, r1
 800f03a:	d011      	beq.n	800f060 <HAL_TIM_PWM_Start+0x68>
 800f03c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800f040:	428b      	cmp	r3, r1
 800f042:	d00d      	beq.n	800f060 <HAL_TIM_PWM_Start+0x68>
 800f044:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800f048:	428b      	cmp	r3, r1
 800f04a:	d009      	beq.n	800f060 <HAL_TIM_PWM_Start+0x68>
 800f04c:	4293      	cmp	r3, r2
 800f04e:	d007      	beq.n	800f060 <HAL_TIM_PWM_Start+0x68>
 800f050:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800f054:	4293      	cmp	r3, r2
 800f056:	d003      	beq.n	800f060 <HAL_TIM_PWM_Start+0x68>
 800f058:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800f05c:	4293      	cmp	r3, r2
 800f05e:	d104      	bne.n	800f06a <HAL_TIM_PWM_Start+0x72>
 800f060:	689a      	ldr	r2, [r3, #8]
 800f062:	f002 0207 	and.w	r2, r2, #7
 800f066:	2a06      	cmp	r2, #6
 800f068:	d020      	beq.n	800f0ac <HAL_TIM_PWM_Start+0xb4>
 800f06a:	681a      	ldr	r2, [r3, #0]
 800f06c:	f042 0201 	orr.w	r2, r2, #1
 800f070:	2000      	movs	r0, #0
 800f072:	601a      	str	r2, [r3, #0]
 800f074:	4770      	bx	lr
 800f076:	2904      	cmp	r1, #4
 800f078:	d022      	beq.n	800f0c0 <HAL_TIM_PWM_Start+0xc8>
 800f07a:	2908      	cmp	r1, #8
 800f07c:	d018      	beq.n	800f0b0 <HAL_TIM_PWM_Start+0xb8>
 800f07e:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 800f082:	2b01      	cmp	r3, #1
 800f084:	d001      	beq.n	800f08a <HAL_TIM_PWM_Start+0x92>
 800f086:	2001      	movs	r0, #1
 800f088:	4770      	bx	lr
 800f08a:	2904      	cmp	r1, #4
 800f08c:	d01c      	beq.n	800f0c8 <HAL_TIM_PWM_Start+0xd0>
 800f08e:	2908      	cmp	r1, #8
 800f090:	d012      	beq.n	800f0b8 <HAL_TIM_PWM_Start+0xc0>
 800f092:	2302      	movs	r3, #2
 800f094:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
 800f098:	e7b7      	b.n	800f00a <HAL_TIM_PWM_Start+0x12>
 800f09a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800f09c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800f0a0:	645a      	str	r2, [r3, #68]	; 0x44
 800f0a2:	689a      	ldr	r2, [r3, #8]
 800f0a4:	f002 0207 	and.w	r2, r2, #7
 800f0a8:	2a06      	cmp	r2, #6
 800f0aa:	d1de      	bne.n	800f06a <HAL_TIM_PWM_Start+0x72>
 800f0ac:	2000      	movs	r0, #0
 800f0ae:	4770      	bx	lr
 800f0b0:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 800f0b4:	2b01      	cmp	r3, #1
 800f0b6:	d1e6      	bne.n	800f086 <HAL_TIM_PWM_Start+0x8e>
 800f0b8:	2302      	movs	r3, #2
 800f0ba:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800f0be:	e7a4      	b.n	800f00a <HAL_TIM_PWM_Start+0x12>
 800f0c0:	f890 303f 	ldrb.w	r3, [r0, #63]	; 0x3f
 800f0c4:	2b01      	cmp	r3, #1
 800f0c6:	d1de      	bne.n	800f086 <HAL_TIM_PWM_Start+0x8e>
 800f0c8:	2302      	movs	r3, #2
 800f0ca:	f880 303f 	strb.w	r3, [r0, #63]	; 0x3f
 800f0ce:	e79c      	b.n	800f00a <HAL_TIM_PWM_Start+0x12>
 800f0d0:	40010000 	.word	0x40010000
 800f0d4:	40010400 	.word	0x40010400

0800f0d8 <HAL_TIM_PWM_ConfigChannel>:
  __HAL_LOCK(htim);
 800f0d8:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800f0dc:	2b01      	cmp	r3, #1
 800f0de:	f000 80d2 	beq.w	800f286 <HAL_TIM_PWM_ConfigChannel+0x1ae>
 800f0e2:	2301      	movs	r3, #1
{
 800f0e4:	b570      	push	{r4, r5, r6, lr}
 800f0e6:	4684      	mov	ip, r0
  __HAL_LOCK(htim);
 800f0e8:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  switch (Channel)
 800f0ec:	2a0c      	cmp	r2, #12
 800f0ee:	d808      	bhi.n	800f102 <HAL_TIM_PWM_ConfigChannel+0x2a>
 800f0f0:	e8df f002 	tbb	[pc, r2]
 800f0f4:	0707073e 	.word	0x0707073e
 800f0f8:	0707076b 	.word	0x0707076b
 800f0fc:	0707079b 	.word	0x0707079b
 800f100:	0c          	.byte	0x0c
 800f101:	00          	.byte	0x00
  __HAL_UNLOCK(htim);
 800f102:	2300      	movs	r3, #0
 800f104:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  switch (Channel)
 800f108:	2001      	movs	r0, #1
}
 800f10a:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800f10c:	6803      	ldr	r3, [r0, #0]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800f10e:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800f110:	6a1a      	ldr	r2, [r3, #32]
 800f112:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800f116:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800f118:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800f11a:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800f11c:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800f11e:	f420 40e6 	bic.w	r0, r0, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800f122:	ea40 2005 	orr.w	r0, r0, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800f126:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 800f128:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800f12c:	ea42 3205 	orr.w	r2, r2, r5, lsl #12

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800f130:	4d70      	ldr	r5, [pc, #448]	; (800f2f4 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800f132:	42ab      	cmp	r3, r5
 800f134:	f000 80c8 	beq.w	800f2c8 <HAL_TIM_PWM_ConfigChannel+0x1f0>
 800f138:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f13c:	42ab      	cmp	r3, r5
 800f13e:	f000 80c3 	beq.w	800f2c8 <HAL_TIM_PWM_ConfigChannel+0x1f0>
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800f142:	605c      	str	r4, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800f144:	61d8      	str	r0, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 800f146:	6848      	ldr	r0, [r1, #4]
 800f148:	6418      	str	r0, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800f14a:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800f14c:	69da      	ldr	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800f14e:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800f150:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800f154:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800f156:	69da      	ldr	r2, [r3, #28]
 800f158:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800f15c:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800f15e:	69da      	ldr	r2, [r3, #28]
 800f160:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800f164:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800f166:	2300      	movs	r3, #0
 800f168:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f16c:	2000      	movs	r0, #0
}
 800f16e:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800f170:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;
 800f172:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f174:	6a1a      	ldr	r2, [r3, #32]
 800f176:	f022 0201 	bic.w	r2, r2, #1
 800f17a:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800f17c:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800f17e:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 800f180:	6998      	ldr	r0, [r3, #24]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800f182:	f020 0073 	bic.w	r0, r0, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800f186:	4328      	orrs	r0, r5
  tmpccer |= OC_Config->OCPolarity;
 800f188:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 800f18a:	f022 0202 	bic.w	r2, r2, #2
  tmpccer |= OC_Config->OCPolarity;
 800f18e:	432a      	orrs	r2, r5
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800f190:	4d58      	ldr	r5, [pc, #352]	; (800f2f4 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800f192:	42ab      	cmp	r3, r5
 800f194:	d079      	beq.n	800f28a <HAL_TIM_PWM_ConfigChannel+0x1b2>
 800f196:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f19a:	42ab      	cmp	r3, r5
 800f19c:	d075      	beq.n	800f28a <HAL_TIM_PWM_ConfigChannel+0x1b2>
  TIMx->CR2 = tmpcr2;
 800f19e:	605c      	str	r4, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800f1a0:	6198      	str	r0, [r3, #24]
  TIMx->CCR1 = OC_Config->Pulse;
 800f1a2:	6848      	ldr	r0, [r1, #4]
 800f1a4:	6358      	str	r0, [r3, #52]	; 0x34
  TIMx->CCER = tmpccer;
 800f1a6:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800f1a8:	699a      	ldr	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800f1aa:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800f1ac:	f042 0208 	orr.w	r2, r2, #8
 800f1b0:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800f1b2:	699a      	ldr	r2, [r3, #24]
 800f1b4:	f022 0204 	bic.w	r2, r2, #4
 800f1b8:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800f1ba:	699a      	ldr	r2, [r3, #24]
 800f1bc:	430a      	orrs	r2, r1
 800f1be:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800f1c0:	2300      	movs	r3, #0
 800f1c2:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f1c6:	2000      	movs	r0, #0
}
 800f1c8:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800f1ca:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800f1cc:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f1ce:	6a1a      	ldr	r2, [r3, #32]
 800f1d0:	f022 0210 	bic.w	r2, r2, #16
 800f1d4:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800f1d6:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800f1d8:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 800f1da:	6998      	ldr	r0, [r3, #24]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800f1dc:	f420 40e6 	bic.w	r0, r0, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800f1e0:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800f1e4:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 800f1e6:	f022 0220 	bic.w	r2, r2, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800f1ea:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800f1ee:	4d41      	ldr	r5, [pc, #260]	; (800f2f4 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800f1f0:	42ab      	cmp	r3, r5
 800f1f2:	d059      	beq.n	800f2a8 <HAL_TIM_PWM_ConfigChannel+0x1d0>
 800f1f4:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f1f8:	42ab      	cmp	r3, r5
 800f1fa:	d055      	beq.n	800f2a8 <HAL_TIM_PWM_ConfigChannel+0x1d0>
  TIMx->CR2 = tmpcr2;
 800f1fc:	605c      	str	r4, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800f1fe:	6198      	str	r0, [r3, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 800f200:	6848      	ldr	r0, [r1, #4]
 800f202:	6398      	str	r0, [r3, #56]	; 0x38
  TIMx->CCER = tmpccer;
 800f204:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800f206:	699a      	ldr	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800f208:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800f20a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800f20e:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800f210:	699a      	ldr	r2, [r3, #24]
 800f212:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800f216:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800f218:	699a      	ldr	r2, [r3, #24]
 800f21a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800f21e:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800f220:	2300      	movs	r3, #0
 800f222:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f226:	2000      	movs	r0, #0
}
 800f228:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800f22a:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;
 800f22c:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800f22e:	6a1a      	ldr	r2, [r3, #32]
 800f230:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800f234:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800f236:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800f238:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800f23a:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 800f23c:	f020 0073 	bic.w	r0, r0, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800f240:	4328      	orrs	r0, r5
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800f242:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 800f244:	f422 7200 	bic.w	r2, r2, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800f248:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 800f24c:	4d29      	ldr	r5, [pc, #164]	; (800f2f4 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800f24e:	42ab      	cmp	r3, r5
 800f250:	d040      	beq.n	800f2d4 <HAL_TIM_PWM_ConfigChannel+0x1fc>
 800f252:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f256:	42ab      	cmp	r3, r5
 800f258:	d03c      	beq.n	800f2d4 <HAL_TIM_PWM_ConfigChannel+0x1fc>
  TIMx->CR2 = tmpcr2;
 800f25a:	605c      	str	r4, [r3, #4]
  TIMx->CCMR2 = tmpccmrx;
 800f25c:	61d8      	str	r0, [r3, #28]
  TIMx->CCR3 = OC_Config->Pulse;
 800f25e:	6848      	ldr	r0, [r1, #4]
 800f260:	63d8      	str	r0, [r3, #60]	; 0x3c
  TIMx->CCER = tmpccer;
 800f262:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800f264:	69da      	ldr	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800f266:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800f268:	f042 0208 	orr.w	r2, r2, #8
 800f26c:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800f26e:	69da      	ldr	r2, [r3, #28]
 800f270:	f022 0204 	bic.w	r2, r2, #4
 800f274:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800f276:	69da      	ldr	r2, [r3, #28]
 800f278:	430a      	orrs	r2, r1
 800f27a:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800f27c:	2300      	movs	r3, #0
 800f27e:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f282:	2000      	movs	r0, #0
}
 800f284:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(htim);
 800f286:	2002      	movs	r0, #2
}
 800f288:	4770      	bx	lr
    tmpccer |= OC_Config->OCNPolarity;
 800f28a:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 800f28c:	f022 0208 	bic.w	r2, r2, #8
    tmpccer |= OC_Config->OCNPolarity;
 800f290:	432a      	orrs	r2, r5
    tmpcr2 |= OC_Config->OCNIdleState;
 800f292:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 800f296:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 800f29a:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC1NE;
 800f29e:	f022 0204 	bic.w	r2, r2, #4
    tmpcr2 |= OC_Config->OCNIdleState;
 800f2a2:	ea4e 0404 	orr.w	r4, lr, r4
 800f2a6:	e77a      	b.n	800f19e <HAL_TIM_PWM_ConfigChannel+0xc6>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800f2a8:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 800f2aa:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800f2ae:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800f2b2:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800f2b6:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800f2ba:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC2NE;
 800f2be:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800f2c2:	ea44 048e 	orr.w	r4, r4, lr, lsl #2
 800f2c6:	e799      	b.n	800f1fc <HAL_TIM_PWM_ConfigChannel+0x124>
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800f2c8:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 800f2ca:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800f2ce:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 800f2d2:	e736      	b.n	800f142 <HAL_TIM_PWM_ConfigChannel+0x6a>
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800f2d4:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 800f2d6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800f2da:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800f2de:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 800f2e2:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800f2e6:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC3NE;
 800f2ea:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800f2ee:	ea44 140e 	orr.w	r4, r4, lr, lsl #4
 800f2f2:	e7b2      	b.n	800f25a <HAL_TIM_PWM_ConfigChannel+0x182>
 800f2f4:	40010000 	.word	0x40010000

0800f2f8 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800f2f8:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800f2fc:	2b01      	cmp	r3, #1
 800f2fe:	d075      	beq.n	800f3ec <HAL_TIM_ConfigClockSource+0xf4>
 800f300:	4602      	mov	r2, r0
{
 800f302:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800f304:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800f306:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800f308:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800f30c:	2001      	movs	r0, #1
 800f30e:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800f312:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f314:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800f318:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800f31c:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800f31e:	680b      	ldr	r3, [r1, #0]
 800f320:	2b60      	cmp	r3, #96	; 0x60
 800f322:	d065      	beq.n	800f3f0 <HAL_TIM_ConfigClockSource+0xf8>
 800f324:	d824      	bhi.n	800f370 <HAL_TIM_ConfigClockSource+0x78>
 800f326:	2b40      	cmp	r3, #64	; 0x40
 800f328:	d07c      	beq.n	800f424 <HAL_TIM_ConfigClockSource+0x12c>
 800f32a:	d94b      	bls.n	800f3c4 <HAL_TIM_ConfigClockSource+0xcc>
 800f32c:	2b50      	cmp	r3, #80	; 0x50
 800f32e:	d117      	bne.n	800f360 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800f330:	684b      	ldr	r3, [r1, #4]
 800f332:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800f334:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800f336:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800f33a:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f33c:	6a23      	ldr	r3, [r4, #32]
 800f33e:	f023 0301 	bic.w	r3, r3, #1
 800f342:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f344:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f346:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800f34a:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800f34e:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800f350:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800f352:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800f354:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f358:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800f35c:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800f35e:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800f360:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800f362:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800f364:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800f368:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800f36c:	bc30      	pop	{r4, r5}
 800f36e:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800f370:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800f374:	d038      	beq.n	800f3e8 <HAL_TIM_ConfigClockSource+0xf0>
 800f376:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800f37a:	d110      	bne.n	800f39e <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f37c:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800f380:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f382:	432b      	orrs	r3, r5
 800f384:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f386:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f38a:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800f38e:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800f390:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800f392:	68a3      	ldr	r3, [r4, #8]
 800f394:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800f398:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800f39a:	60a3      	str	r3, [r4, #8]
      break;
 800f39c:	e7e0      	b.n	800f360 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800f39e:	2b70      	cmp	r3, #112	; 0x70
 800f3a0:	d1de      	bne.n	800f360 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f3a2:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800f3a6:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f3a8:	432b      	orrs	r3, r5
 800f3aa:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f3ac:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f3b0:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800f3b4:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800f3b6:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800f3b8:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800f3ba:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800f3be:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800f3c0:	60a3      	str	r3, [r4, #8]
      break;
 800f3c2:	e7cd      	b.n	800f360 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800f3c4:	2b20      	cmp	r3, #32
 800f3c6:	d002      	beq.n	800f3ce <HAL_TIM_ConfigClockSource+0xd6>
 800f3c8:	d90a      	bls.n	800f3e0 <HAL_TIM_ConfigClockSource+0xe8>
 800f3ca:	2b30      	cmp	r3, #48	; 0x30
 800f3cc:	d1c8      	bne.n	800f360 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800f3ce:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f3d0:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f3d4:	430b      	orrs	r3, r1
 800f3d6:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800f3da:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800f3dc:	60a3      	str	r3, [r4, #8]
}
 800f3de:	e7bf      	b.n	800f360 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800f3e0:	f033 0110 	bics.w	r1, r3, #16
 800f3e4:	d1bc      	bne.n	800f360 <HAL_TIM_ConfigClockSource+0x68>
 800f3e6:	e7f2      	b.n	800f3ce <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800f3e8:	2000      	movs	r0, #0
 800f3ea:	e7b9      	b.n	800f360 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800f3ec:	2002      	movs	r0, #2
}
 800f3ee:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f3f0:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800f3f2:	6848      	ldr	r0, [r1, #4]
 800f3f4:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f3f6:	f023 0310 	bic.w	r3, r3, #16
 800f3fa:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f3fc:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800f3fe:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800f400:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800f404:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800f408:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800f40c:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800f410:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800f412:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800f414:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f416:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f41a:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800f41e:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800f420:	60a3      	str	r3, [r4, #8]
}
 800f422:	e79d      	b.n	800f360 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800f424:	684b      	ldr	r3, [r1, #4]
 800f426:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800f428:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800f42a:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800f42e:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f430:	6a23      	ldr	r3, [r4, #32]
 800f432:	f023 0301 	bic.w	r3, r3, #1
 800f436:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f438:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f43a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800f43e:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800f442:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800f444:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800f446:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f448:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f44c:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800f450:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800f452:	60a3      	str	r3, [r4, #8]
}
 800f454:	e784      	b.n	800f360 <HAL_TIM_ConfigClockSource+0x68>
 800f456:	bf00      	nop

0800f458 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800f458:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800f45c:	2a01      	cmp	r2, #1
 800f45e:	d050      	beq.n	800f502 <HAL_TIM_SlaveConfigSynchro+0xaa>
 800f460:	4603      	mov	r3, r0
{
 800f462:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800f464:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800f466:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800f468:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800f46c:	2001      	movs	r0, #1
 800f46e:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800f472:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800f474:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800f476:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f478:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800f47c:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800f47e:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800f482:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800f484:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800f486:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800f488:	d060      	beq.n	800f54c <HAL_TIM_SlaveConfigSynchro+0xf4>
 800f48a:	d90f      	bls.n	800f4ac <HAL_TIM_SlaveConfigSynchro+0x54>
 800f48c:	2860      	cmp	r0, #96	; 0x60
 800f48e:	d03a      	beq.n	800f506 <HAL_TIM_SlaveConfigSynchro+0xae>
 800f490:	2870      	cmp	r0, #112	; 0x70
 800f492:	d10e      	bne.n	800f4b2 <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f494:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800f498:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f49a:	432a      	orrs	r2, r5
 800f49c:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f49e:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f4a2:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800f4a6:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800f4a8:	60a2      	str	r2, [r4, #8]
 800f4aa:	e00f      	b.n	800f4cc <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800f4ac:	2840      	cmp	r0, #64	; 0x40
 800f4ae:	d03d      	beq.n	800f52c <HAL_TIM_SlaveConfigSynchro+0xd4>
 800f4b0:	d907      	bls.n	800f4c2 <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800f4b2:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800f4b4:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800f4b6:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800f4ba:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800f4be:	bc30      	pop	{r4, r5}
 800f4c0:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800f4c2:	2820      	cmp	r0, #32
 800f4c4:	d002      	beq.n	800f4cc <HAL_TIM_SlaveConfigSynchro+0x74>
 800f4c6:	d912      	bls.n	800f4ee <HAL_TIM_SlaveConfigSynchro+0x96>
 800f4c8:	2830      	cmp	r0, #48	; 0x30
 800f4ca:	d1f2      	bne.n	800f4b2 <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800f4cc:	68e2      	ldr	r2, [r4, #12]
 800f4ce:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800f4d2:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800f4d4:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800f4d6:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800f4d8:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800f4da:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800f4de:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800f4e0:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800f4e4:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800f4e8:	4608      	mov	r0, r1
}
 800f4ea:	bc30      	pop	{r4, r5}
 800f4ec:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800f4ee:	f030 0210 	bics.w	r2, r0, #16
 800f4f2:	d0eb      	beq.n	800f4cc <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800f4f4:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800f4f6:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800f4f8:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800f4fc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800f500:	e7dd      	b.n	800f4be <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800f502:	2002      	movs	r0, #2
}
 800f504:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f506:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800f508:	6888      	ldr	r0, [r1, #8]
 800f50a:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f50c:	f022 0210 	bic.w	r2, r2, #16
 800f510:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f512:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800f514:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800f516:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800f51a:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800f51e:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800f522:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800f526:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800f528:	6222      	str	r2, [r4, #32]
 800f52a:	e7cf      	b.n	800f4cc <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800f52c:	2d05      	cmp	r5, #5
 800f52e:	d0c0      	beq.n	800f4b2 <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800f530:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800f532:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800f534:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800f536:	f022 0201 	bic.w	r2, r2, #1
 800f53a:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800f53c:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f53e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800f542:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800f546:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800f548:	6220      	str	r0, [r4, #32]
      break;
 800f54a:	e7bf      	b.n	800f4cc <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800f54c:	688a      	ldr	r2, [r1, #8]
 800f54e:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800f550:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800f552:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800f556:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f558:	6a22      	ldr	r2, [r4, #32]
 800f55a:	f022 0201 	bic.w	r2, r2, #1
 800f55e:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f560:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f562:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800f566:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800f56a:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800f56c:	6221      	str	r1, [r4, #32]
 800f56e:	e7ad      	b.n	800f4cc <HAL_TIM_SlaveConfigSynchro+0x74>

0800f570 <HAL_TIM_OC_DelayElapsedCallback>:
 800f570:	4770      	bx	lr
 800f572:	bf00      	nop

0800f574 <HAL_TIM_IC_CaptureCallback>:
 800f574:	4770      	bx	lr
 800f576:	bf00      	nop

0800f578 <HAL_TIM_PWM_PulseFinishedCallback>:
 800f578:	4770      	bx	lr
 800f57a:	bf00      	nop

0800f57c <HAL_TIM_TriggerCallback>:
 800f57c:	4770      	bx	lr
 800f57e:	bf00      	nop

0800f580 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800f580:	6803      	ldr	r3, [r0, #0]
 800f582:	691a      	ldr	r2, [r3, #16]
 800f584:	0791      	lsls	r1, r2, #30
{
 800f586:	b510      	push	{r4, lr}
 800f588:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800f58a:	d502      	bpl.n	800f592 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800f58c:	68da      	ldr	r2, [r3, #12]
 800f58e:	0792      	lsls	r2, r2, #30
 800f590:	d45f      	bmi.n	800f652 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800f592:	691a      	ldr	r2, [r3, #16]
 800f594:	0750      	lsls	r0, r2, #29
 800f596:	d502      	bpl.n	800f59e <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800f598:	68da      	ldr	r2, [r3, #12]
 800f59a:	0751      	lsls	r1, r2, #29
 800f59c:	d446      	bmi.n	800f62c <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800f59e:	691a      	ldr	r2, [r3, #16]
 800f5a0:	0712      	lsls	r2, r2, #28
 800f5a2:	d502      	bpl.n	800f5aa <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800f5a4:	68da      	ldr	r2, [r3, #12]
 800f5a6:	0710      	lsls	r0, r2, #28
 800f5a8:	d42e      	bmi.n	800f608 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800f5aa:	691a      	ldr	r2, [r3, #16]
 800f5ac:	06d2      	lsls	r2, r2, #27
 800f5ae:	d502      	bpl.n	800f5b6 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800f5b0:	68da      	ldr	r2, [r3, #12]
 800f5b2:	06d0      	lsls	r0, r2, #27
 800f5b4:	d418      	bmi.n	800f5e8 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800f5b6:	691a      	ldr	r2, [r3, #16]
 800f5b8:	07d1      	lsls	r1, r2, #31
 800f5ba:	d502      	bpl.n	800f5c2 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800f5bc:	68da      	ldr	r2, [r3, #12]
 800f5be:	07d2      	lsls	r2, r2, #31
 800f5c0:	d45d      	bmi.n	800f67e <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800f5c2:	691a      	ldr	r2, [r3, #16]
 800f5c4:	0610      	lsls	r0, r2, #24
 800f5c6:	d502      	bpl.n	800f5ce <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800f5c8:	68da      	ldr	r2, [r3, #12]
 800f5ca:	0611      	lsls	r1, r2, #24
 800f5cc:	d45f      	bmi.n	800f68e <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800f5ce:	691a      	ldr	r2, [r3, #16]
 800f5d0:	0652      	lsls	r2, r2, #25
 800f5d2:	d502      	bpl.n	800f5da <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800f5d4:	68da      	ldr	r2, [r3, #12]
 800f5d6:	0650      	lsls	r0, r2, #25
 800f5d8:	d461      	bmi.n	800f69e <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800f5da:	691a      	ldr	r2, [r3, #16]
 800f5dc:	0691      	lsls	r1, r2, #26
 800f5de:	d502      	bpl.n	800f5e6 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800f5e0:	68da      	ldr	r2, [r3, #12]
 800f5e2:	0692      	lsls	r2, r2, #26
 800f5e4:	d443      	bmi.n	800f66e <HAL_TIM_IRQHandler+0xee>
}
 800f5e6:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800f5e8:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800f5ec:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800f5ee:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800f5f0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800f5f2:	69db      	ldr	r3, [r3, #28]
 800f5f4:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800f5f8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800f5fa:	d064      	beq.n	800f6c6 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800f5fc:	f7ff ffba 	bl	800f574 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f600:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800f602:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f604:	7722      	strb	r2, [r4, #28]
 800f606:	e7d6      	b.n	800f5b6 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800f608:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800f60c:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800f60e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800f610:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800f612:	69db      	ldr	r3, [r3, #28]
 800f614:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800f616:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800f618:	d152      	bne.n	800f6c0 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800f61a:	f7ff ffa9 	bl	800f570 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f61e:	4620      	mov	r0, r4
 800f620:	f7ff ffaa 	bl	800f578 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f624:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800f626:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f628:	7722      	strb	r2, [r4, #28]
 800f62a:	e7be      	b.n	800f5aa <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800f62c:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800f630:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800f632:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800f634:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800f636:	699b      	ldr	r3, [r3, #24]
 800f638:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800f63c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800f63e:	d13c      	bne.n	800f6ba <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800f640:	f7ff ff96 	bl	800f570 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f644:	4620      	mov	r0, r4
 800f646:	f7ff ff97 	bl	800f578 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f64a:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800f64c:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f64e:	7722      	strb	r2, [r4, #28]
 800f650:	e7a5      	b.n	800f59e <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800f652:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800f656:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800f658:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800f65a:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800f65c:	699b      	ldr	r3, [r3, #24]
 800f65e:	079b      	lsls	r3, r3, #30
 800f660:	d025      	beq.n	800f6ae <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800f662:	f7ff ff87 	bl	800f574 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f666:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800f668:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f66a:	7722      	strb	r2, [r4, #28]
 800f66c:	e791      	b.n	800f592 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800f66e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800f672:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800f674:	611a      	str	r2, [r3, #16]
}
 800f676:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800f67a:	f000 b86b 	b.w	800f754 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800f67e:	f06f 0201 	mvn.w	r2, #1
 800f682:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800f684:	4620      	mov	r0, r4
 800f686:	f7f2 fcdf 	bl	8002048 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800f68a:	6823      	ldr	r3, [r4, #0]
 800f68c:	e799      	b.n	800f5c2 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800f68e:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800f692:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800f694:	4620      	mov	r0, r4
 800f696:	f000 f85f 	bl	800f758 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800f69a:	6823      	ldr	r3, [r4, #0]
 800f69c:	e797      	b.n	800f5ce <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800f69e:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800f6a2:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800f6a4:	4620      	mov	r0, r4
 800f6a6:	f7ff ff69 	bl	800f57c <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800f6aa:	6823      	ldr	r3, [r4, #0]
 800f6ac:	e795      	b.n	800f5da <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800f6ae:	f7ff ff5f 	bl	800f570 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f6b2:	4620      	mov	r0, r4
 800f6b4:	f7ff ff60 	bl	800f578 <HAL_TIM_PWM_PulseFinishedCallback>
 800f6b8:	e7d5      	b.n	800f666 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800f6ba:	f7ff ff5b 	bl	800f574 <HAL_TIM_IC_CaptureCallback>
 800f6be:	e7c4      	b.n	800f64a <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800f6c0:	f7ff ff58 	bl	800f574 <HAL_TIM_IC_CaptureCallback>
 800f6c4:	e7ae      	b.n	800f624 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800f6c6:	f7ff ff53 	bl	800f570 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f6ca:	4620      	mov	r0, r4
 800f6cc:	f7ff ff54 	bl	800f578 <HAL_TIM_PWM_PulseFinishedCallback>
 800f6d0:	e796      	b.n	800f600 <HAL_TIM_IRQHandler+0x80>
 800f6d2:	bf00      	nop

0800f6d4 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800f6d4:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800f6d8:	2b01      	cmp	r3, #1
 800f6da:	d037      	beq.n	800f74c <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800f6dc:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800f6de:	2202      	movs	r2, #2
{
 800f6e0:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800f6e2:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800f6e6:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800f6e8:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800f6ea:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800f6ec:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800f6f0:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800f6f2:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800f6f4:	4a16      	ldr	r2, [pc, #88]	; (800f750 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800f6f6:	4293      	cmp	r3, r2
 800f6f8:	d01a      	beq.n	800f730 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f6fa:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800f6fe:	d017      	beq.n	800f730 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f700:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800f704:	4293      	cmp	r3, r2
 800f706:	d013      	beq.n	800f730 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f708:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800f70c:	4293      	cmp	r3, r2
 800f70e:	d00f      	beq.n	800f730 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f710:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800f714:	4293      	cmp	r3, r2
 800f716:	d00b      	beq.n	800f730 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f718:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800f71c:	4293      	cmp	r3, r2
 800f71e:	d007      	beq.n	800f730 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f720:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800f724:	4293      	cmp	r3, r2
 800f726:	d003      	beq.n	800f730 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f728:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800f72c:	4293      	cmp	r3, r2
 800f72e:	d104      	bne.n	800f73a <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800f730:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800f732:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800f736:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800f738:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800f73a:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800f73c:	2201      	movs	r2, #1
 800f73e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800f742:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800f746:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800f748:	4618      	mov	r0, r3
}
 800f74a:	4770      	bx	lr
  __HAL_LOCK(htim);
 800f74c:	2002      	movs	r0, #2
}
 800f74e:	4770      	bx	lr
 800f750:	40010000 	.word	0x40010000

0800f754 <HAL_TIMEx_CommutCallback>:
 800f754:	4770      	bx	lr
 800f756:	bf00      	nop

0800f758 <HAL_TIMEx_BreakCallback>:
 800f758:	4770      	bx	lr
 800f75a:	bf00      	nop

0800f75c <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800f75c:	680b      	ldr	r3, [r1, #0]
{
 800f75e:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800f760:	b9d3      	cbnz	r3, 800f798 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800f762:	6803      	ldr	r3, [r0, #0]
 800f764:	684c      	ldr	r4, [r1, #4]
 800f766:	688a      	ldr	r2, [r1, #8]
 800f768:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800f76c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800f770:	4323      	orrs	r3, r4
 800f772:	4313      	orrs	r3, r2
 800f774:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800f778:	4323      	orrs	r3, r4
 800f77a:	4313      	orrs	r3, r2
 800f77c:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800f780:	4323      	orrs	r3, r4
 800f782:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800f786:	4313      	orrs	r3, r2
 800f788:	432b      	orrs	r3, r5
 800f78a:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800f78c:	4323      	orrs	r3, r4
 800f78e:	4313      	orrs	r3, r2
 800f790:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800f792:	bc30      	pop	{r4, r5}
 800f794:	2000      	movs	r0, #0
 800f796:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800f798:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800f79c:	6803      	ldr	r3, [r0, #0]
 800f79e:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800f7a2:	4323      	orrs	r3, r4
 800f7a4:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800f7a6:	4313      	orrs	r3, r2
 800f7a8:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800f7aa:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800f7ac:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800f7ae:	6843      	ldr	r3, [r0, #4]
 800f7b0:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800f7b4:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800f7b8:	4313      	orrs	r3, r2
 800f7ba:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800f7be:	4323      	orrs	r3, r4
 800f7c0:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800f7c4:	4313      	orrs	r3, r2
 800f7c6:	432b      	orrs	r3, r5
 800f7c8:	698a      	ldr	r2, [r1, #24]
 800f7ca:	4323      	orrs	r3, r4
 800f7cc:	4313      	orrs	r3, r2
 800f7ce:	6043      	str	r3, [r0, #4]
}
 800f7d0:	bc30      	pop	{r4, r5}
 800f7d2:	2000      	movs	r0, #0
 800f7d4:	4770      	bx	lr
 800f7d6:	bf00      	nop

0800f7d8 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800f7d8:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f7da:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800f7dc:	bb02      	cbnz	r2, 800f820 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f7de:	e9d1 2400 	ldrd	r2, r4, [r1]
 800f7e2:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800f7e6:	3c01      	subs	r4, #1
 800f7e8:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800f7ec:	3a01      	subs	r2, #1
 800f7ee:	4313      	orrs	r3, r2
 800f7f0:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800f7f4:	3c01      	subs	r4, #1
 800f7f6:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800f7fa:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800f7fe:	3a01      	subs	r2, #1
 800f800:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800f804:	698a      	ldr	r2, [r1, #24]
 800f806:	1e69      	subs	r1, r5, #1
 800f808:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800f80c:	1e61      	subs	r1, r4, #1
 800f80e:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800f812:	3a01      	subs	r2, #1
 800f814:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800f818:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800f81a:	bc30      	pop	{r4, r5}
 800f81c:	2000      	movs	r0, #0
 800f81e:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f820:	68cc      	ldr	r4, [r1, #12]
 800f822:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800f824:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f826:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800f82a:	3c01      	subs	r4, #1
 800f82c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800f830:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800f834:	3a01      	subs	r2, #1
 800f836:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800f83a:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800f83c:	e9d1 2400 	ldrd	r2, r4, [r1]
 800f840:	68c3      	ldr	r3, [r0, #12]
 800f842:	3c01      	subs	r4, #1
 800f844:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800f848:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800f84c:	3a01      	subs	r2, #1
 800f84e:	690c      	ldr	r4, [r1, #16]
 800f850:	4313      	orrs	r3, r2
 800f852:	698a      	ldr	r2, [r1, #24]
 800f854:	1e69      	subs	r1, r5, #1
 800f856:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800f85a:	1e61      	subs	r1, r4, #1
 800f85c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800f860:	3a01      	subs	r2, #1
 800f862:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800f866:	60c3      	str	r3, [r0, #12]
}
 800f868:	bc30      	pop	{r4, r5}
 800f86a:	2000      	movs	r0, #0
 800f86c:	4770      	bx	lr
 800f86e:	bf00      	nop

0800f870 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800f870:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800f872:	680b      	ldr	r3, [r1, #0]
{
 800f874:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800f876:	684a      	ldr	r2, [r1, #4]
{
 800f878:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800f87a:	4313      	orrs	r3, r2
 800f87c:	6900      	ldr	r0, [r0, #16]
 800f87e:	68ca      	ldr	r2, [r1, #12]
 800f880:	0d80      	lsrs	r0, r0, #22
 800f882:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800f886:	688a      	ldr	r2, [r1, #8]
 800f888:	0580      	lsls	r0, r0, #22
 800f88a:	4303      	orrs	r3, r0
 800f88c:	3a01      	subs	r2, #1
 800f88e:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800f892:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800f894:	f7fb ff46 	bl	800b724 <HAL_GetTick>
 800f898:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800f89a:	1c6b      	adds	r3, r5, #1
 800f89c:	d105      	bne.n	800f8aa <FMC_SDRAM_SendCommand+0x3a>
 800f89e:	69a3      	ldr	r3, [r4, #24]
 800f8a0:	f013 0320 	ands.w	r3, r3, #32
 800f8a4:	d1fb      	bne.n	800f89e <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800f8a6:	4618      	mov	r0, r3
}
 800f8a8:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800f8aa:	69a3      	ldr	r3, [r4, #24]
 800f8ac:	f013 0320 	ands.w	r3, r3, #32
 800f8b0:	d0f9      	beq.n	800f8a6 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800f8b2:	b125      	cbz	r5, 800f8be <FMC_SDRAM_SendCommand+0x4e>
 800f8b4:	f7fb ff36 	bl	800b724 <HAL_GetTick>
 800f8b8:	1b80      	subs	r0, r0, r6
 800f8ba:	42a8      	cmp	r0, r5
 800f8bc:	d9ed      	bls.n	800f89a <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800f8be:	2003      	movs	r0, #3
}
 800f8c0:	bd70      	pop	{r4, r5, r6, pc}
 800f8c2:	bf00      	nop

0800f8c4 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800f8c4:	6943      	ldr	r3, [r0, #20]
 800f8c6:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800f8ca:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800f8cc:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800f8d0:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800f8d4:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800f8d6:	6151      	str	r1, [r2, #20]
}
 800f8d8:	4770      	bx	lr
 800f8da:	bf00      	nop

0800f8dc <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800f8dc:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800f8de:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f8e2:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800f8e4:	f002 fafe 	bl	8011ee4 <xTaskGetSchedulerState>
 800f8e8:	2801      	cmp	r0, #1
 800f8ea:	d100      	bne.n	800f8ee <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800f8ec:	bd08      	pop	{r3, pc}
 800f8ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800f8f2:	f000 bc3f 	b.w	8010174 <xPortSysTickHandler>
 800f8f6:	bf00      	nop

0800f8f8 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f8f8:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800f8fc:	b92b      	cbnz	r3, 800f90a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800f8fe:	4b06      	ldr	r3, [pc, #24]	; (800f918 <osKernelInitialize+0x20>)
 800f900:	6818      	ldr	r0, [r3, #0]
 800f902:	b928      	cbnz	r0, 800f910 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800f904:	2201      	movs	r2, #1
 800f906:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800f908:	4770      	bx	lr
    stat = osErrorISR;
 800f90a:	f06f 0005 	mvn.w	r0, #5
 800f90e:	4770      	bx	lr
    } else {
      stat = osError;
 800f910:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800f914:	4770      	bx	lr
 800f916:	bf00      	nop
 800f918:	20002d00 	.word	0x20002d00

0800f91c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800f91c:	b510      	push	{r4, lr}
 800f91e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800f922:	b974      	cbnz	r4, 800f942 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800f924:	4b08      	ldr	r3, [pc, #32]	; (800f948 <osKernelStart+0x2c>)
 800f926:	681a      	ldr	r2, [r3, #0]
 800f928:	2a01      	cmp	r2, #1
 800f92a:	d107      	bne.n	800f93c <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800f92c:	4907      	ldr	r1, [pc, #28]	; (800f94c <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800f92e:	2202      	movs	r2, #2
 800f930:	77cc      	strb	r4, [r1, #31]
 800f932:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800f934:	f002 f8b0 	bl	8011a98 <vTaskStartScheduler>
      stat = osOK;
 800f938:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800f93a:	bd10      	pop	{r4, pc}
      stat = osError;
 800f93c:	f04f 30ff 	mov.w	r0, #4294967295
}
 800f940:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800f942:	f06f 0005 	mvn.w	r0, #5
}
 800f946:	bd10      	pop	{r4, pc}
 800f948:	20002d00 	.word	0x20002d00
 800f94c:	e000ed00 	.word	0xe000ed00

0800f950 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800f950:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f952:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800f954:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800f956:	4615      	mov	r5, r2
  hTask = NULL;
 800f958:	9405      	str	r4, [sp, #20]
 800f95a:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800f95e:	b9ea      	cbnz	r2, 800f99c <osThreadNew+0x4c>
 800f960:	b350      	cbz	r0, 800f9b8 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800f962:	b1f5      	cbz	r5, 800f9a2 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800f964:	69ab      	ldr	r3, [r5, #24]
 800f966:	bb5b      	cbnz	r3, 800f9c0 <osThreadNew+0x70>
 800f968:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800f96a:	686a      	ldr	r2, [r5, #4]
 800f96c:	07d2      	lsls	r2, r2, #31
 800f96e:	d423      	bmi.n	800f9b8 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800f970:	696e      	ldr	r6, [r5, #20]
 800f972:	b34e      	cbz	r6, 800f9c8 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800f974:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800f978:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800f97a:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800f97c:	b34c      	cbz	r4, 800f9d2 <osThreadNew+0x82>
 800f97e:	68ea      	ldr	r2, [r5, #12]
 800f980:	2aab      	cmp	r2, #171	; 0xab
 800f982:	d919      	bls.n	800f9b8 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800f984:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800f986:	b1bd      	cbz	r5, 800f9b8 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800f988:	b1b6      	cbz	r6, 800f9b8 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800f98a:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800f98e:	9300      	str	r3, [sp, #0]
 800f990:	4662      	mov	r2, ip
 800f992:	460b      	mov	r3, r1
 800f994:	4639      	mov	r1, r7
 800f996:	f001 ffbd 	bl	8011914 <xTaskCreateStatic>
 800f99a:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800f99c:	4620      	mov	r0, r4
 800f99e:	b007      	add	sp, #28
 800f9a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f9a2:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800f9a4:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800f9a6:	ac05      	add	r4, sp, #20
 800f9a8:	9300      	str	r3, [sp, #0]
 800f9aa:	9401      	str	r4, [sp, #4]
 800f9ac:	460b      	mov	r3, r1
 800f9ae:	4629      	mov	r1, r5
 800f9b0:	f001 ffea 	bl	8011988 <xTaskCreate>
 800f9b4:	2801      	cmp	r0, #1
 800f9b6:	d00a      	beq.n	800f9ce <osThreadNew+0x7e>
        return (NULL);
 800f9b8:	2400      	movs	r4, #0
}
 800f9ba:	4620      	mov	r0, r4
 800f9bc:	b007      	add	sp, #28
 800f9be:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800f9c0:	1e5c      	subs	r4, r3, #1
 800f9c2:	2c37      	cmp	r4, #55	; 0x37
 800f9c4:	d9d1      	bls.n	800f96a <osThreadNew+0x1a>
 800f9c6:	e7f7      	b.n	800f9b8 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800f9c8:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800f9cc:	e7d4      	b.n	800f978 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800f9ce:	9c05      	ldr	r4, [sp, #20]
 800f9d0:	e7e4      	b.n	800f99c <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800f9d2:	68ee      	ldr	r6, [r5, #12]
 800f9d4:	2e00      	cmp	r6, #0
 800f9d6:	d1e1      	bne.n	800f99c <osThreadNew+0x4c>
 800f9d8:	692d      	ldr	r5, [r5, #16]
 800f9da:	2d00      	cmp	r5, #0
 800f9dc:	d1de      	bne.n	800f99c <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800f9de:	fa1f f28c 	uxth.w	r2, ip
 800f9e2:	463d      	mov	r5, r7
 800f9e4:	e7df      	b.n	800f9a6 <osThreadNew+0x56>
 800f9e6:	bf00      	nop

0800f9e8 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800f9e8:	b510      	push	{r4, lr}
 800f9ea:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800f9ee:	b92c      	cbnz	r4, 800f9fc <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800f9f0:	b900      	cbnz	r0, 800f9f4 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800f9f2:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800f9f4:	f001 fffa 	bl	80119ec <vTaskDelay>
    stat = osOK;
 800f9f8:	4620      	mov	r0, r4
}
 800f9fa:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800f9fc:	f06f 0005 	mvn.w	r0, #5
}
 800fa00:	bd10      	pop	{r4, pc}
 800fa02:	bf00      	nop

0800fa04 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800fa04:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fa06:	b083      	sub	sp, #12
 800fa08:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800fa0c:	b9fe      	cbnz	r6, 800fa4e <osSemaphoreNew+0x4a>
 800fa0e:	b1f0      	cbz	r0, 800fa4e <osSemaphoreNew+0x4a>
 800fa10:	4288      	cmp	r0, r1
 800fa12:	460f      	mov	r7, r1
 800fa14:	d31b      	bcc.n	800fa4e <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800fa16:	4615      	mov	r5, r2
 800fa18:	b192      	cbz	r2, 800fa40 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800fa1a:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800fa1e:	b1d2      	cbz	r2, 800fa56 <osSemaphoreNew+0x52>
 800fa20:	2b4f      	cmp	r3, #79	; 0x4f
 800fa22:	d914      	bls.n	800fa4e <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800fa24:	2801      	cmp	r0, #1
 800fa26:	d038      	beq.n	800fa9a <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800fa28:	f000 fd8a 	bl	8010540 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800fa2c:	4604      	mov	r4, r0
 800fa2e:	b170      	cbz	r0, 800fa4e <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800fa30:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800fa32:	4620      	mov	r0, r4
 800fa34:	4629      	mov	r1, r5
 800fa36:	f001 fc35 	bl	80112a4 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800fa3a:	4620      	mov	r0, r4
 800fa3c:	b003      	add	sp, #12
 800fa3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800fa40:	2801      	cmp	r0, #1
 800fa42:	d012      	beq.n	800fa6a <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800fa44:	f000 fddc 	bl	8010600 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800fa48:	4604      	mov	r4, r0
 800fa4a:	2800      	cmp	r0, #0
 800fa4c:	d1f1      	bne.n	800fa32 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800fa4e:	2400      	movs	r4, #0
}
 800fa50:	4620      	mov	r0, r4
 800fa52:	b003      	add	sp, #12
 800fa54:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800fa56:	2b00      	cmp	r3, #0
 800fa58:	d1f9      	bne.n	800fa4e <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800fa5a:	2801      	cmp	r0, #1
 800fa5c:	d005      	beq.n	800fa6a <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800fa5e:	f000 fdcf 	bl	8010600 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800fa62:	4604      	mov	r4, r0
 800fa64:	2800      	cmp	r0, #0
 800fa66:	d1e3      	bne.n	800fa30 <osSemaphoreNew+0x2c>
 800fa68:	e7f1      	b.n	800fa4e <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800fa6a:	2203      	movs	r2, #3
 800fa6c:	2100      	movs	r1, #0
 800fa6e:	2001      	movs	r0, #1
 800fa70:	f000 fd24 	bl	80104bc <xQueueGenericCreate>
 800fa74:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800fa76:	2c00      	cmp	r4, #0
 800fa78:	d0e9      	beq.n	800fa4e <osSemaphoreNew+0x4a>
 800fa7a:	b917      	cbnz	r7, 800fa82 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800fa7c:	2d00      	cmp	r5, #0
 800fa7e:	d1d7      	bne.n	800fa30 <osSemaphoreNew+0x2c>
 800fa80:	e7d7      	b.n	800fa32 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800fa82:	2300      	movs	r3, #0
 800fa84:	461a      	mov	r2, r3
 800fa86:	4619      	mov	r1, r3
 800fa88:	4620      	mov	r0, r4
 800fa8a:	f000 fdff 	bl	801068c <xQueueGenericSend>
 800fa8e:	2801      	cmp	r0, #1
 800fa90:	d0f4      	beq.n	800fa7c <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800fa92:	4620      	mov	r0, r4
 800fa94:	f001 fbc0 	bl	8011218 <vQueueDelete>
 800fa98:	e7d9      	b.n	800fa4e <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800fa9a:	4613      	mov	r3, r2
 800fa9c:	2203      	movs	r2, #3
 800fa9e:	9200      	str	r2, [sp, #0]
 800faa0:	4631      	mov	r1, r6
 800faa2:	4632      	mov	r2, r6
 800faa4:	f000 fc9c 	bl	80103e0 <xQueueGenericCreateStatic>
 800faa8:	4604      	mov	r4, r0
 800faaa:	e7e4      	b.n	800fa76 <osSemaphoreNew+0x72>

0800faac <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800faac:	b370      	cbz	r0, 800fb0c <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800faae:	b510      	push	{r4, lr}
 800fab0:	460c      	mov	r4, r1
 800fab2:	b082      	sub	sp, #8
 800fab4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800fab8:	b1c3      	cbz	r3, 800faec <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800faba:	bb21      	cbnz	r1, 800fb06 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800fabc:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800fabe:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800fac0:	f001 fb28 	bl	8011114 <xQueueReceiveFromISR>
 800fac4:	2801      	cmp	r0, #1
 800fac6:	d11a      	bne.n	800fafe <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800fac8:	9b01      	ldr	r3, [sp, #4]
 800faca:	b913      	cbnz	r3, 800fad2 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800facc:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800face:	b002      	add	sp, #8
 800fad0:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800fad2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fad6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fada:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fade:	f3bf 8f4f 	dsb	sy
 800fae2:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800fae6:	4620      	mov	r0, r4
}
 800fae8:	b002      	add	sp, #8
 800faea:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800faec:	f001 f988 	bl	8010e00 <xQueueSemaphoreTake>
 800faf0:	2801      	cmp	r0, #1
 800faf2:	d0eb      	beq.n	800facc <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800faf4:	b11c      	cbz	r4, 800fafe <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800faf6:	f06f 0001 	mvn.w	r0, #1
}
 800fafa:	b002      	add	sp, #8
 800fafc:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800fafe:	f06f 0002 	mvn.w	r0, #2
}
 800fb02:	b002      	add	sp, #8
 800fb04:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800fb06:	f06f 0003 	mvn.w	r0, #3
 800fb0a:	e7e0      	b.n	800face <osSemaphoreAcquire+0x22>
 800fb0c:	f06f 0003 	mvn.w	r0, #3
}
 800fb10:	4770      	bx	lr
 800fb12:	bf00      	nop

0800fb14 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800fb14:	b330      	cbz	r0, 800fb64 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800fb16:	b510      	push	{r4, lr}
 800fb18:	b082      	sub	sp, #8
 800fb1a:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800fb1e:	b1ab      	cbz	r3, 800fb4c <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800fb20:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800fb22:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800fb24:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800fb26:	f000 ff95 	bl	8010a54 <xQueueGiveFromISR>
 800fb2a:	2801      	cmp	r0, #1
 800fb2c:	d117      	bne.n	800fb5e <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800fb2e:	9b01      	ldr	r3, [sp, #4]
 800fb30:	b193      	cbz	r3, 800fb58 <osSemaphoreRelease+0x44>
 800fb32:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fb36:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fb3a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fb3e:	f3bf 8f4f 	dsb	sy
 800fb42:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800fb46:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800fb48:	b002      	add	sp, #8
 800fb4a:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800fb4c:	461a      	mov	r2, r3
 800fb4e:	4619      	mov	r1, r3
 800fb50:	f000 fd9c 	bl	801068c <xQueueGenericSend>
 800fb54:	2801      	cmp	r0, #1
 800fb56:	d102      	bne.n	800fb5e <osSemaphoreRelease+0x4a>
  stat = osOK;
 800fb58:	2000      	movs	r0, #0
}
 800fb5a:	b002      	add	sp, #8
 800fb5c:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800fb5e:	f06f 0002 	mvn.w	r0, #2
 800fb62:	e7fa      	b.n	800fb5a <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800fb64:	f06f 0003 	mvn.w	r0, #3
}
 800fb68:	4770      	bx	lr
 800fb6a:	bf00      	nop

0800fb6c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800fb6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fb6e:	b085      	sub	sp, #20
 800fb70:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800fb74:	b987      	cbnz	r7, 800fb98 <osMessageQueueNew+0x2c>
 800fb76:	4605      	mov	r5, r0
 800fb78:	b170      	cbz	r0, 800fb98 <osMessageQueueNew+0x2c>
 800fb7a:	b169      	cbz	r1, 800fb98 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800fb7c:	4614      	mov	r4, r2
 800fb7e:	b1ea      	cbz	r2, 800fbbc <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800fb80:	6893      	ldr	r3, [r2, #8]
 800fb82:	b163      	cbz	r3, 800fb9e <osMessageQueueNew+0x32>
 800fb84:	68d2      	ldr	r2, [r2, #12]
 800fb86:	2a4f      	cmp	r2, #79	; 0x4f
 800fb88:	d906      	bls.n	800fb98 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800fb8a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800fb8c:	b122      	cbz	r2, 800fb98 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800fb8e:	6966      	ldr	r6, [r4, #20]
 800fb90:	fb01 f505 	mul.w	r5, r1, r5
 800fb94:	42ae      	cmp	r6, r5
 800fb96:	d21c      	bcs.n	800fbd2 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800fb98:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800fb9a:	b005      	add	sp, #20
 800fb9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800fb9e:	68d3      	ldr	r3, [r2, #12]
 800fba0:	2b00      	cmp	r3, #0
 800fba2:	d1f9      	bne.n	800fb98 <osMessageQueueNew+0x2c>
 800fba4:	6913      	ldr	r3, [r2, #16]
 800fba6:	2b00      	cmp	r3, #0
 800fba8:	d1f6      	bne.n	800fb98 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800fbaa:	6952      	ldr	r2, [r2, #20]
 800fbac:	2a00      	cmp	r2, #0
 800fbae:	d1f3      	bne.n	800fb98 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800fbb0:	f000 fc84 	bl	80104bc <xQueueGenericCreate>
    if (hQueue != NULL) {
 800fbb4:	2800      	cmp	r0, #0
 800fbb6:	d0ef      	beq.n	800fb98 <osMessageQueueNew+0x2c>
        name = attr->name;
 800fbb8:	6824      	ldr	r4, [r4, #0]
 800fbba:	e003      	b.n	800fbc4 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800fbbc:	f000 fc7e 	bl	80104bc <xQueueGenericCreate>
    if (hQueue != NULL) {
 800fbc0:	2800      	cmp	r0, #0
 800fbc2:	d0e9      	beq.n	800fb98 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800fbc4:	4621      	mov	r1, r4
 800fbc6:	9003      	str	r0, [sp, #12]
 800fbc8:	f001 fb6c 	bl	80112a4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800fbcc:	9803      	ldr	r0, [sp, #12]
}
 800fbce:	b005      	add	sp, #20
 800fbd0:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800fbd2:	9700      	str	r7, [sp, #0]
 800fbd4:	f000 fc04 	bl	80103e0 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800fbd8:	2800      	cmp	r0, #0
 800fbda:	d1ed      	bne.n	800fbb8 <osMessageQueueNew+0x4c>
 800fbdc:	e7dc      	b.n	800fb98 <osMessageQueueNew+0x2c>
 800fbde:	bf00      	nop

0800fbe0 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800fbe0:	b570      	push	{r4, r5, r6, lr}
 800fbe2:	461c      	mov	r4, r3
 800fbe4:	b082      	sub	sp, #8
 800fbe6:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800fbea:	b1be      	cbz	r6, 800fc1c <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800fbec:	b350      	cbz	r0, 800fc44 <osMessageQueuePut+0x64>
 800fbee:	b349      	cbz	r1, 800fc44 <osMessageQueuePut+0x64>
 800fbf0:	bb43      	cbnz	r3, 800fc44 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800fbf2:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800fbf4:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800fbf6:	f000 fec7 	bl	8010988 <xQueueGenericSendFromISR>
 800fbfa:	2801      	cmp	r0, #1
 800fbfc:	d11e      	bne.n	800fc3c <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800fbfe:	9b01      	ldr	r3, [sp, #4]
 800fc00:	b1cb      	cbz	r3, 800fc36 <osMessageQueuePut+0x56>
 800fc02:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fc06:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fc0a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fc0e:	f3bf 8f4f 	dsb	sy
 800fc12:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800fc16:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800fc18:	b002      	add	sp, #8
 800fc1a:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800fc1c:	b190      	cbz	r0, 800fc44 <osMessageQueuePut+0x64>
 800fc1e:	b189      	cbz	r1, 800fc44 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800fc20:	4633      	mov	r3, r6
 800fc22:	4622      	mov	r2, r4
 800fc24:	f000 fd32 	bl	801068c <xQueueGenericSend>
 800fc28:	2801      	cmp	r0, #1
 800fc2a:	d004      	beq.n	800fc36 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800fc2c:	b134      	cbz	r4, 800fc3c <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800fc2e:	f06f 0001 	mvn.w	r0, #1
}
 800fc32:	b002      	add	sp, #8
 800fc34:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800fc36:	2000      	movs	r0, #0
}
 800fc38:	b002      	add	sp, #8
 800fc3a:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800fc3c:	f06f 0002 	mvn.w	r0, #2
}
 800fc40:	b002      	add	sp, #8
 800fc42:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800fc44:	f06f 0003 	mvn.w	r0, #3
 800fc48:	e7e6      	b.n	800fc18 <osMessageQueuePut+0x38>
 800fc4a:	bf00      	nop

0800fc4c <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800fc4c:	b530      	push	{r4, r5, lr}
 800fc4e:	461c      	mov	r4, r3
 800fc50:	b083      	sub	sp, #12
 800fc52:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800fc56:	b1bb      	cbz	r3, 800fc88 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800fc58:	b348      	cbz	r0, 800fcae <osMessageQueueGet+0x62>
 800fc5a:	b341      	cbz	r1, 800fcae <osMessageQueueGet+0x62>
 800fc5c:	bb3c      	cbnz	r4, 800fcae <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800fc5e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800fc60:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800fc62:	f001 fa57 	bl	8011114 <xQueueReceiveFromISR>
 800fc66:	2801      	cmp	r0, #1
 800fc68:	d11d      	bne.n	800fca6 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800fc6a:	9b01      	ldr	r3, [sp, #4]
 800fc6c:	b1c3      	cbz	r3, 800fca0 <osMessageQueueGet+0x54>
 800fc6e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fc72:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fc76:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fc7a:	f3bf 8f4f 	dsb	sy
 800fc7e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800fc82:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800fc84:	b003      	add	sp, #12
 800fc86:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800fc88:	b188      	cbz	r0, 800fcae <osMessageQueueGet+0x62>
 800fc8a:	b181      	cbz	r1, 800fcae <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800fc8c:	4622      	mov	r2, r4
 800fc8e:	f000 ff39 	bl	8010b04 <xQueueReceive>
 800fc92:	2801      	cmp	r0, #1
 800fc94:	d004      	beq.n	800fca0 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800fc96:	b134      	cbz	r4, 800fca6 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800fc98:	f06f 0001 	mvn.w	r0, #1
}
 800fc9c:	b003      	add	sp, #12
 800fc9e:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800fca0:	2000      	movs	r0, #0
}
 800fca2:	b003      	add	sp, #12
 800fca4:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800fca6:	f06f 0002 	mvn.w	r0, #2
}
 800fcaa:	b003      	add	sp, #12
 800fcac:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800fcae:	f06f 0003 	mvn.w	r0, #3
 800fcb2:	e7e7      	b.n	800fc84 <osMessageQueueGet+0x38>

0800fcb4 <osMessageQueueGetCount>:
 800fcb4:	b130      	cbz	r0, 800fcc4 <osMessageQueueGetCount+0x10>
 800fcb6:	f3ef 8305 	mrs	r3, IPSR
 800fcba:	b10b      	cbz	r3, 800fcc0 <osMessageQueueGetCount+0xc>
 800fcbc:	f001 ba9e 	b.w	80111fc <uxQueueMessagesWaitingFromISR>
 800fcc0:	f001 ba86 	b.w	80111d0 <uxQueueMessagesWaiting>
 800fcc4:	4770      	bx	lr
 800fcc6:	bf00      	nop

0800fcc8 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800fcc8:	4b04      	ldr	r3, [pc, #16]	; (800fcdc <vApplicationGetIdleTaskMemory+0x14>)
 800fcca:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800fccc:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800fcce:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800fcd0:	4c03      	ldr	r4, [pc, #12]	; (800fce0 <vApplicationGetIdleTaskMemory+0x18>)
 800fcd2:	600c      	str	r4, [r1, #0]
}
 800fcd4:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800fcd8:	6013      	str	r3, [r2, #0]
}
 800fcda:	4770      	bx	lr
 800fcdc:	20002c54 	.word	0x20002c54
 800fce0:	20002a54 	.word	0x20002a54

0800fce4 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800fce4:	4b05      	ldr	r3, [pc, #20]	; (800fcfc <vApplicationGetTimerTaskMemory+0x18>)
 800fce6:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800fce8:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800fcea:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800fcee:	4c04      	ldr	r4, [pc, #16]	; (800fd00 <vApplicationGetTimerTaskMemory+0x1c>)
 800fcf0:	600c      	str	r4, [r1, #0]
}
 800fcf2:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800fcf6:	6013      	str	r3, [r2, #0]
}
 800fcf8:	4770      	bx	lr
 800fcfa:	bf00      	nop
 800fcfc:	20003104 	.word	0x20003104
 800fd00:	20002d04 	.word	0x20002d04

0800fd04 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800fd04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fd08:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800fd0a:	f001 ff41 	bl	8011b90 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800fd0e:	4a54      	ldr	r2, [pc, #336]	; (800fe60 <pvPortMalloc+0x15c>)
 800fd10:	6816      	ldr	r6, [r2, #0]
 800fd12:	2e00      	cmp	r6, #0
 800fd14:	d06e      	beq.n	800fdf4 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800fd16:	4b53      	ldr	r3, [pc, #332]	; (800fe64 <pvPortMalloc+0x160>)
 800fd18:	681f      	ldr	r7, [r3, #0]
 800fd1a:	423d      	tst	r5, r7
 800fd1c:	d12e      	bne.n	800fd7c <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800fd1e:	b36d      	cbz	r5, 800fd7c <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800fd20:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800fd24:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800fd26:	bf1c      	itt	ne
 800fd28:	f024 0407 	bicne.w	r4, r4, #7
 800fd2c:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800fd2e:	b32c      	cbz	r4, 800fd7c <pvPortMalloc+0x78>
 800fd30:	f8df c144 	ldr.w	ip, [pc, #324]	; 800fe78 <pvPortMalloc+0x174>
 800fd34:	f8dc 5000 	ldr.w	r5, [ip]
 800fd38:	42a5      	cmp	r5, r4
 800fd3a:	d31f      	bcc.n	800fd7c <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800fd3c:	484a      	ldr	r0, [pc, #296]	; (800fe68 <pvPortMalloc+0x164>)
 800fd3e:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800fd40:	e003      	b.n	800fd4a <pvPortMalloc+0x46>
 800fd42:	681a      	ldr	r2, [r3, #0]
 800fd44:	b122      	cbz	r2, 800fd50 <pvPortMalloc+0x4c>
 800fd46:	4618      	mov	r0, r3
 800fd48:	4613      	mov	r3, r2
 800fd4a:	6859      	ldr	r1, [r3, #4]
 800fd4c:	42a1      	cmp	r1, r4
 800fd4e:	d3f8      	bcc.n	800fd42 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800fd50:	42b3      	cmp	r3, r6
 800fd52:	d013      	beq.n	800fd7c <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800fd54:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800fd56:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800fd58:	f858 eb08 	ldr.w	lr, [r8], #8
 800fd5c:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800fd60:	2a10      	cmp	r2, #16
 800fd62:	d929      	bls.n	800fdb8 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800fd64:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800fd66:	0748      	lsls	r0, r1, #29
 800fd68:	d00f      	beq.n	800fd8a <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800fd6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd6e:	f383 8811 	msr	BASEPRI, r3
 800fd72:	f3bf 8f6f 	isb	sy
 800fd76:	f3bf 8f4f 	dsb	sy
 800fd7a:	e7fe      	b.n	800fd7a <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800fd7c:	f001 ff10 	bl	8011ba0 <xTaskResumeAll>
 800fd80:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800fd84:	4640      	mov	r0, r8
 800fd86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800fd8a:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fd8c:	4a36      	ldr	r2, [pc, #216]	; (800fe68 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800fd8e:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fd90:	4614      	mov	r4, r2
 800fd92:	6812      	ldr	r2, [r2, #0]
 800fd94:	4291      	cmp	r1, r2
 800fd96:	d8fb      	bhi.n	800fd90 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800fd98:	6860      	ldr	r0, [r4, #4]
 800fd9a:	eb04 0e00 	add.w	lr, r4, r0
 800fd9e:	4571      	cmp	r1, lr
 800fda0:	d04b      	beq.n	800fe3a <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fda2:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fda6:	eb01 000e 	add.w	r0, r1, lr
 800fdaa:	4282      	cmp	r2, r0
 800fdac:	d051      	beq.n	800fe52 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800fdae:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fdb0:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800fdb2:	bf18      	it	ne
 800fdb4:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800fdb6:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800fdb8:	4a2c      	ldr	r2, [pc, #176]	; (800fe6c <pvPortMalloc+0x168>)
 800fdba:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800fdbc:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800fdbe:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800fdc0:	bf38      	it	cc
 800fdc2:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800fdc4:	4a2a      	ldr	r2, [pc, #168]	; (800fe70 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800fdc6:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800fdca:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800fdcc:	2000      	movs	r0, #0
 800fdce:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800fdd2:	6813      	ldr	r3, [r2, #0]
 800fdd4:	3301      	adds	r3, #1
 800fdd6:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800fdd8:	f001 fee2 	bl	8011ba0 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800fddc:	f018 0f07 	tst.w	r8, #7
 800fde0:	d0d0      	beq.n	800fd84 <pvPortMalloc+0x80>
 800fde2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fde6:	f383 8811 	msr	BASEPRI, r3
 800fdea:	f3bf 8f6f 	isb	sy
 800fdee:	f3bf 8f4f 	dsb	sy
 800fdf2:	e7fe      	b.n	800fdf2 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800fdf4:	4b1f      	ldr	r3, [pc, #124]	; (800fe74 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800fdf6:	075e      	lsls	r6, r3, #29
 800fdf8:	d118      	bne.n	800fe2c <pvPortMalloc+0x128>
 800fdfa:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800fdfe:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800fe00:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800fe02:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800fe06:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fe08:	4a18      	ldr	r2, [pc, #96]	; (800fe6c <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800fe0a:	4817      	ldr	r0, [pc, #92]	; (800fe68 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800fe0c:	4c15      	ldr	r4, [pc, #84]	; (800fe64 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800fe0e:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800fe10:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fe12:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fe14:	4a18      	ldr	r2, [pc, #96]	; (800fe78 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800fe16:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fe1a:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800fe1c:	2200      	movs	r2, #0
 800fe1e:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800fe20:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800fe22:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800fe26:	e9c1 6300 	strd	r6, r3, [r1]
}
 800fe2a:	e776      	b.n	800fd1a <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800fe2c:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800fe2e:	f021 0107 	bic.w	r1, r1, #7
 800fe32:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800fe36:	460b      	mov	r3, r1
 800fe38:	e7e2      	b.n	800fe00 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fe3a:	6849      	ldr	r1, [r1, #4]
 800fe3c:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fe40:	eb04 010e 	add.w	r1, r4, lr
 800fe44:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fe46:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fe4a:	d001      	beq.n	800fe50 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fe4c:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800fe4e:	e7b2      	b.n	800fdb6 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fe50:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800fe52:	42b2      	cmp	r2, r6
 800fe54:	d0ab      	beq.n	800fdae <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800fe56:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fe58:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800fe5a:	4470      	add	r0, lr
 800fe5c:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fe5e:	e7a6      	b.n	800fdae <pvPortMalloc+0xaa>
 800fe60:	200031b0 	.word	0x200031b0
 800fe64:	200131b4 	.word	0x200131b4
 800fe68:	200131c8 	.word	0x200131c8
 800fe6c:	200131bc 	.word	0x200131bc
 800fe70:	200131c0 	.word	0x200131c0
 800fe74:	200031b4 	.word	0x200031b4
 800fe78:	200131b8 	.word	0x200131b8

0800fe7c <vPortFree>:
	if( pv != NULL )
 800fe7c:	b1d0      	cbz	r0, 800feb4 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800fe7e:	4a2c      	ldr	r2, [pc, #176]	; (800ff30 <vPortFree+0xb4>)
 800fe80:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800fe84:	6812      	ldr	r2, [r2, #0]
 800fe86:	4213      	tst	r3, r2
 800fe88:	d00b      	beq.n	800fea2 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800fe8a:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800fe8e:	b191      	cbz	r1, 800feb6 <vPortFree+0x3a>
 800fe90:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe94:	f383 8811 	msr	BASEPRI, r3
 800fe98:	f3bf 8f6f 	isb	sy
 800fe9c:	f3bf 8f4f 	dsb	sy
 800fea0:	e7fe      	b.n	800fea0 <vPortFree+0x24>
 800fea2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fea6:	f383 8811 	msr	BASEPRI, r3
 800feaa:	f3bf 8f6f 	isb	sy
 800feae:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800feb2:	e7fe      	b.n	800feb2 <vPortFree+0x36>
 800feb4:	4770      	bx	lr
{
 800feb6:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800feb8:	ea23 0302 	bic.w	r3, r3, r2
{
 800febc:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800febe:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800fec2:	4c1c      	ldr	r4, [pc, #112]	; (800ff34 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800fec4:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800fec6:	f001 fe63 	bl	8011b90 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800feca:	9801      	ldr	r0, [sp, #4]
 800fecc:	6822      	ldr	r2, [r4, #0]
 800fece:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fed2:	4b19      	ldr	r3, [pc, #100]	; (800ff38 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800fed4:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800fed6:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800fed8:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800feda:	461a      	mov	r2, r3
 800fedc:	681b      	ldr	r3, [r3, #0]
 800fede:	4298      	cmp	r0, r3
 800fee0:	d8fb      	bhi.n	800feda <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800fee2:	6854      	ldr	r4, [r2, #4]
 800fee4:	eb02 0e04 	add.w	lr, r2, r4
 800fee8:	4570      	cmp	r0, lr
 800feea:	d010      	beq.n	800ff0e <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800feec:	eb00 0c01 	add.w	ip, r0, r1
 800fef0:	4563      	cmp	r3, ip
 800fef2:	d014      	beq.n	800ff1e <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800fef4:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fef6:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800fef8:	bf18      	it	ne
 800fefa:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800fefc:	4a0f      	ldr	r2, [pc, #60]	; (800ff3c <vPortFree+0xc0>)
 800fefe:	6813      	ldr	r3, [r2, #0]
 800ff00:	3301      	adds	r3, #1
 800ff02:	6013      	str	r3, [r2, #0]
}
 800ff04:	b002      	add	sp, #8
 800ff06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800ff0a:	f001 be49 	b.w	8011ba0 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800ff0e:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ff10:	1850      	adds	r0, r2, r1
 800ff12:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800ff14:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ff16:	d001      	beq.n	800ff1c <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ff18:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800ff1a:	e7ef      	b.n	800fefc <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800ff1c:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800ff1e:	4c08      	ldr	r4, [pc, #32]	; (800ff40 <vPortFree+0xc4>)
 800ff20:	6824      	ldr	r4, [r4, #0]
 800ff22:	42a3      	cmp	r3, r4
 800ff24:	d0e6      	beq.n	800fef4 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ff26:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800ff2a:	4421      	add	r1, r4
 800ff2c:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ff2e:	e7e1      	b.n	800fef4 <vPortFree+0x78>
 800ff30:	200131b4 	.word	0x200131b4
 800ff34:	200131b8 	.word	0x200131b8
 800ff38:	200131c8 	.word	0x200131c8
 800ff3c:	200131c4 	.word	0x200131c4
 800ff40:	200031b0 	.word	0x200031b0

0800ff44 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800ff44:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800ff48:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800ff4c:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800ff4e:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800ff52:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800ff56:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800ff58:	4770      	bx	lr
 800ff5a:	bf00      	nop

0800ff5c <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800ff5c:	2300      	movs	r3, #0
 800ff5e:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800ff60:	4770      	bx	lr
 800ff62:	bf00      	nop

0800ff64 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800ff64:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800ff66:	689a      	ldr	r2, [r3, #8]
 800ff68:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800ff6a:	6802      	ldr	r2, [r0, #0]
{
 800ff6c:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800ff6e:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800ff70:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800ff72:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800ff74:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800ff76:	6099      	str	r1, [r3, #8]
}
 800ff78:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800ff7c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800ff7e:	6002      	str	r2, [r0, #0]
}
 800ff80:	4770      	bx	lr
 800ff82:	bf00      	nop

0800ff84 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800ff84:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800ff86:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800ff88:	1c6b      	adds	r3, r5, #1
 800ff8a:	d010      	beq.n	800ffae <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800ff8c:	f100 0308 	add.w	r3, r0, #8
 800ff90:	461c      	mov	r4, r3
 800ff92:	685b      	ldr	r3, [r3, #4]
 800ff94:	681a      	ldr	r2, [r3, #0]
 800ff96:	42aa      	cmp	r2, r5
 800ff98:	d9fa      	bls.n	800ff90 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800ff9a:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800ff9c:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800ff9e:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800ffa0:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800ffa2:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800ffa4:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800ffa6:	6108      	str	r0, [r1, #16]
}
 800ffa8:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800ffaa:	6002      	str	r2, [r0, #0]
}
 800ffac:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800ffae:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800ffb0:	6863      	ldr	r3, [r4, #4]
 800ffb2:	e7f2      	b.n	800ff9a <vListInsert+0x16>

0800ffb4 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800ffb4:	6903      	ldr	r3, [r0, #16]
{
 800ffb6:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800ffb8:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800ffbc:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800ffbe:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800ffc0:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800ffc2:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800ffc4:	bf08      	it	eq
 800ffc6:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800ffc8:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800ffca:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800ffce:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800ffd0:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800ffd2:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800ffd4:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800ffd6:	6818      	ldr	r0, [r3, #0]
}
 800ffd8:	4770      	bx	lr
 800ffda:	bf00      	nop

0800ffdc <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800ffdc:	4808      	ldr	r0, [pc, #32]	; (8010000 <prvPortStartFirstTask+0x24>)
 800ffde:	6800      	ldr	r0, [r0, #0]
 800ffe0:	6800      	ldr	r0, [r0, #0]
 800ffe2:	f380 8808 	msr	MSP, r0
 800ffe6:	f04f 0000 	mov.w	r0, #0
 800ffea:	f380 8814 	msr	CONTROL, r0
 800ffee:	b662      	cpsie	i
 800fff0:	b661      	cpsie	f
 800fff2:	f3bf 8f4f 	dsb	sy
 800fff6:	f3bf 8f6f 	isb	sy
 800fffa:	df00      	svc	0
 800fffc:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800fffe:	0000      	.short	0x0000
 8010000:	e000ed08 	.word	0xe000ed08

08010004 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8010004:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8010014 <vPortEnableVFP+0x10>
 8010008:	6801      	ldr	r1, [r0, #0]
 801000a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 801000e:	6001      	str	r1, [r0, #0]
 8010010:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8010012:	0000      	.short	0x0000
 8010014:	e000ed88 	.word	0xe000ed88

08010018 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 8010018:	4b0e      	ldr	r3, [pc, #56]	; (8010054 <prvTaskExitError+0x3c>)
 801001a:	681b      	ldr	r3, [r3, #0]
{
 801001c:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 801001e:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 8010020:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 8010022:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8010024:	d008      	beq.n	8010038 <prvTaskExitError+0x20>
 8010026:	f04f 0350 	mov.w	r3, #80	; 0x50
 801002a:	f383 8811 	msr	BASEPRI, r3
 801002e:	f3bf 8f6f 	isb	sy
 8010032:	f3bf 8f4f 	dsb	sy
 8010036:	e7fe      	b.n	8010036 <prvTaskExitError+0x1e>
 8010038:	f04f 0350 	mov.w	r3, #80	; 0x50
 801003c:	f383 8811 	msr	BASEPRI, r3
 8010040:	f3bf 8f6f 	isb	sy
 8010044:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8010048:	9b01      	ldr	r3, [sp, #4]
 801004a:	2b00      	cmp	r3, #0
 801004c:	d0fc      	beq.n	8010048 <prvTaskExitError+0x30>
}
 801004e:	b002      	add	sp, #8
 8010050:	4770      	bx	lr
 8010052:	bf00      	nop
 8010054:	20000084 	.word	0x20000084

08010058 <pxPortInitialiseStack>:
{
 8010058:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 801005a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 801005e:	4c07      	ldr	r4, [pc, #28]	; (801007c <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8010060:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8010064:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8010068:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 801006c:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8010070:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 8010074:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010078:	3844      	subs	r0, #68	; 0x44
 801007a:	4770      	bx	lr
 801007c:	08010019 	.word	0x08010019

08010080 <SVC_Handler>:
	__asm volatile (
 8010080:	4b07      	ldr	r3, [pc, #28]	; (80100a0 <pxCurrentTCBConst2>)
 8010082:	6819      	ldr	r1, [r3, #0]
 8010084:	6808      	ldr	r0, [r1, #0]
 8010086:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801008a:	f380 8809 	msr	PSP, r0
 801008e:	f3bf 8f6f 	isb	sy
 8010092:	f04f 0000 	mov.w	r0, #0
 8010096:	f380 8811 	msr	BASEPRI, r0
 801009a:	4770      	bx	lr
 801009c:	f3af 8000 	nop.w

080100a0 <pxCurrentTCBConst2>:
 80100a0:	20013218 	.word	0x20013218

080100a4 <vPortEnterCritical>:
 80100a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80100a8:	f383 8811 	msr	BASEPRI, r3
 80100ac:	f3bf 8f6f 	isb	sy
 80100b0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 80100b4:	4a0b      	ldr	r2, [pc, #44]	; (80100e4 <vPortEnterCritical+0x40>)
 80100b6:	6813      	ldr	r3, [r2, #0]
 80100b8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 80100ba:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 80100bc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 80100be:	d000      	beq.n	80100c2 <vPortEnterCritical+0x1e>
}
 80100c0:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 80100c2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80100c6:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 80100ca:	b2db      	uxtb	r3, r3
 80100cc:	2b00      	cmp	r3, #0
 80100ce:	d0f7      	beq.n	80100c0 <vPortEnterCritical+0x1c>
 80100d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80100d4:	f383 8811 	msr	BASEPRI, r3
 80100d8:	f3bf 8f6f 	isb	sy
 80100dc:	f3bf 8f4f 	dsb	sy
 80100e0:	e7fe      	b.n	80100e0 <vPortEnterCritical+0x3c>
 80100e2:	bf00      	nop
 80100e4:	20000084 	.word	0x20000084

080100e8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 80100e8:	4a08      	ldr	r2, [pc, #32]	; (801010c <vPortExitCritical+0x24>)
 80100ea:	6813      	ldr	r3, [r2, #0]
 80100ec:	b943      	cbnz	r3, 8010100 <vPortExitCritical+0x18>
 80100ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80100f2:	f383 8811 	msr	BASEPRI, r3
 80100f6:	f3bf 8f6f 	isb	sy
 80100fa:	f3bf 8f4f 	dsb	sy
 80100fe:	e7fe      	b.n	80100fe <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8010100:	3b01      	subs	r3, #1
 8010102:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8010104:	b90b      	cbnz	r3, 801010a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8010106:	f383 8811 	msr	BASEPRI, r3
}
 801010a:	4770      	bx	lr
 801010c:	20000084 	.word	0x20000084

08010110 <PendSV_Handler>:
	__asm volatile
 8010110:	f3ef 8009 	mrs	r0, PSP
 8010114:	f3bf 8f6f 	isb	sy
 8010118:	4b15      	ldr	r3, [pc, #84]	; (8010170 <pxCurrentTCBConst>)
 801011a:	681a      	ldr	r2, [r3, #0]
 801011c:	f01e 0f10 	tst.w	lr, #16
 8010120:	bf08      	it	eq
 8010122:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8010126:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801012a:	6010      	str	r0, [r2, #0]
 801012c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8010130:	f04f 0050 	mov.w	r0, #80	; 0x50
 8010134:	f380 8811 	msr	BASEPRI, r0
 8010138:	f3bf 8f4f 	dsb	sy
 801013c:	f3bf 8f6f 	isb	sy
 8010140:	f001 fd54 	bl	8011bec <vTaskSwitchContext>
 8010144:	f04f 0000 	mov.w	r0, #0
 8010148:	f380 8811 	msr	BASEPRI, r0
 801014c:	bc09      	pop	{r0, r3}
 801014e:	6819      	ldr	r1, [r3, #0]
 8010150:	6808      	ldr	r0, [r1, #0]
 8010152:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010156:	f01e 0f10 	tst.w	lr, #16
 801015a:	bf08      	it	eq
 801015c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8010160:	f380 8809 	msr	PSP, r0
 8010164:	f3bf 8f6f 	isb	sy
 8010168:	4770      	bx	lr
 801016a:	bf00      	nop
 801016c:	f3af 8000 	nop.w

08010170 <pxCurrentTCBConst>:
 8010170:	20013218 	.word	0x20013218

08010174 <xPortSysTickHandler>:
{
 8010174:	b508      	push	{r3, lr}
	__asm volatile
 8010176:	f04f 0350 	mov.w	r3, #80	; 0x50
 801017a:	f383 8811 	msr	BASEPRI, r3
 801017e:	f3bf 8f6f 	isb	sy
 8010182:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8010186:	f001 fd21 	bl	8011bcc <xTaskIncrementTick>
 801018a:	b128      	cbz	r0, 8010198 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 801018c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010190:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010194:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8010198:	2300      	movs	r3, #0
 801019a:	f383 8811 	msr	BASEPRI, r3
}
 801019e:	bd08      	pop	{r3, pc}

080101a0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80101a0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 80101a4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80101a6:	4906      	ldr	r1, [pc, #24]	; (80101c0 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80101a8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80101aa:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80101ac:	680b      	ldr	r3, [r1, #0]
 80101ae:	4905      	ldr	r1, [pc, #20]	; (80101c4 <vPortSetupTimerInterrupt+0x24>)
 80101b0:	fba1 1303 	umull	r1, r3, r1, r3
 80101b4:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 80101b6:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80101b8:	3b01      	subs	r3, #1
 80101ba:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 80101bc:	6110      	str	r0, [r2, #16]
}
 80101be:	4770      	bx	lr
 80101c0:	20000078 	.word	0x20000078
 80101c4:	10624dd3 	.word	0x10624dd3

080101c8 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80101c8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80101cc:	4a49      	ldr	r2, [pc, #292]	; (80102f4 <xPortStartScheduler+0x12c>)
 80101ce:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 80101d2:	4291      	cmp	r1, r2
 80101d4:	d043      	beq.n	801025e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 80101d6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 80101da:	4b47      	ldr	r3, [pc, #284]	; (80102f8 <xPortStartScheduler+0x130>)
 80101dc:	429a      	cmp	r2, r3
 80101de:	d035      	beq.n	801024c <xPortStartScheduler+0x84>
{
 80101e0:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80101e2:	4b46      	ldr	r3, [pc, #280]	; (80102fc <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80101e4:	4846      	ldr	r0, [pc, #280]	; (8010300 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80101e6:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 80101e8:	4c46      	ldr	r4, [pc, #280]	; (8010304 <xPortStartScheduler+0x13c>)
{
 80101ea:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 80101ec:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80101ee:	b2d2      	uxtb	r2, r2
 80101f0:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 80101f2:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80101f4:	781b      	ldrb	r3, [r3, #0]
 80101f6:	b2db      	uxtb	r3, r3
 80101f8:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80101fc:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8010200:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8010204:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8010208:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 801020a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 801020c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 801020e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8010210:	bf48      	it	mi
 8010212:	2206      	movmi	r2, #6
 8010214:	d511      	bpl.n	801023a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8010216:	f89d 3007 	ldrb.w	r3, [sp, #7]
 801021a:	005b      	lsls	r3, r3, #1
 801021c:	b2db      	uxtb	r3, r3
 801021e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8010222:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8010226:	0609      	lsls	r1, r1, #24
 8010228:	4610      	mov	r0, r2
 801022a:	f102 32ff 	add.w	r2, r2, #4294967295
 801022e:	d4f2      	bmi.n	8010216 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8010230:	2803      	cmp	r0, #3
 8010232:	6020      	str	r0, [r4, #0]
 8010234:	f88d 3007 	strb.w	r3, [sp, #7]
 8010238:	d01a      	beq.n	8010270 <xPortStartScheduler+0xa8>
	__asm volatile
 801023a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801023e:	f383 8811 	msr	BASEPRI, r3
 8010242:	f3bf 8f6f 	isb	sy
 8010246:	f3bf 8f4f 	dsb	sy
 801024a:	e7fe      	b.n	801024a <xPortStartScheduler+0x82>
 801024c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010250:	f383 8811 	msr	BASEPRI, r3
 8010254:	f3bf 8f6f 	isb	sy
 8010258:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 801025c:	e7fe      	b.n	801025c <xPortStartScheduler+0x94>
 801025e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010262:	f383 8811 	msr	BASEPRI, r3
 8010266:	f3bf 8f6f 	isb	sy
 801026a:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 801026e:	e7fe      	b.n	801026e <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8010270:	9b02      	ldr	r3, [sp, #8]
 8010272:	4a22      	ldr	r2, [pc, #136]	; (80102fc <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8010274:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8010278:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 801027c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 801027e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8010280:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8010282:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 8010286:	4c20      	ldr	r4, [pc, #128]	; (8010308 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8010288:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 801028c:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8010290:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 8010294:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8010298:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 801029c:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 801029e:	f7ff ff7f 	bl	80101a0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 80102a2:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 80102a4:	f7ff feae 	bl	8010004 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 80102a8:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 80102ac:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 80102b0:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 80102b4:	f7ff fe92 	bl	800ffdc <prvPortStartFirstTask>
	vTaskSwitchContext();
 80102b8:	f001 fc98 	bl	8011bec <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 80102bc:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 80102be:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 80102c0:	3301      	adds	r3, #1
 80102c2:	d008      	beq.n	80102d6 <xPortStartScheduler+0x10e>
 80102c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80102c8:	f383 8811 	msr	BASEPRI, r3
 80102cc:	f3bf 8f6f 	isb	sy
 80102d0:	f3bf 8f4f 	dsb	sy
 80102d4:	e7fe      	b.n	80102d4 <xPortStartScheduler+0x10c>
 80102d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80102da:	f383 8811 	msr	BASEPRI, r3
 80102de:	f3bf 8f6f 	isb	sy
 80102e2:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 80102e6:	9b03      	ldr	r3, [sp, #12]
 80102e8:	2b00      	cmp	r3, #0
 80102ea:	d0fc      	beq.n	80102e6 <xPortStartScheduler+0x11e>
}
 80102ec:	2000      	movs	r0, #0
 80102ee:	b004      	add	sp, #16
 80102f0:	bd70      	pop	{r4, r5, r6, pc}
 80102f2:	bf00      	nop
 80102f4:	410fc271 	.word	0x410fc271
 80102f8:	410fc270 	.word	0x410fc270
 80102fc:	e000e400 	.word	0xe000e400
 8010300:	200131d0 	.word	0x200131d0
 8010304:	200131d4 	.word	0x200131d4
 8010308:	20000084 	.word	0x20000084

0801030c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 801030c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8010310:	2b0f      	cmp	r3, #15
 8010312:	d90e      	bls.n	8010332 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8010314:	4911      	ldr	r1, [pc, #68]	; (801035c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8010316:	4a12      	ldr	r2, [pc, #72]	; (8010360 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8010318:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 801031a:	7812      	ldrb	r2, [r2, #0]
 801031c:	429a      	cmp	r2, r3
 801031e:	d908      	bls.n	8010332 <vPortValidateInterruptPriority+0x26>
 8010320:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010324:	f383 8811 	msr	BASEPRI, r3
 8010328:	f3bf 8f6f 	isb	sy
 801032c:	f3bf 8f4f 	dsb	sy
 8010330:	e7fe      	b.n	8010330 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8010332:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010336:	4a0b      	ldr	r2, [pc, #44]	; (8010364 <vPortValidateInterruptPriority+0x58>)
 8010338:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 801033c:	6812      	ldr	r2, [r2, #0]
 801033e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8010342:	4293      	cmp	r3, r2
 8010344:	d908      	bls.n	8010358 <vPortValidateInterruptPriority+0x4c>
 8010346:	f04f 0350 	mov.w	r3, #80	; 0x50
 801034a:	f383 8811 	msr	BASEPRI, r3
 801034e:	f3bf 8f6f 	isb	sy
 8010352:	f3bf 8f4f 	dsb	sy
 8010356:	e7fe      	b.n	8010356 <vPortValidateInterruptPriority+0x4a>
	}
 8010358:	4770      	bx	lr
 801035a:	bf00      	nop
 801035c:	e000e3f0 	.word	0xe000e3f0
 8010360:	200131d0 	.word	0x200131d0
 8010364:	200131d4 	.word	0x200131d4

08010368 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 8010368:	b570      	push	{r4, r5, r6, lr}
 801036a:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 801036c:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 801036e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8010370:	b920      	cbnz	r0, 801037c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8010372:	6825      	ldr	r5, [r4, #0]
 8010374:	b34d      	cbz	r5, 80103ca <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8010376:	3601      	adds	r6, #1
 8010378:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 801037a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 801037c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 801037e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 8010380:	b97d      	cbnz	r5, 80103a2 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8010382:	6860      	ldr	r0, [r4, #4]
 8010384:	f01d fee3 	bl	802e14e <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010388:	6863      	ldr	r3, [r4, #4]
 801038a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 801038c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 801038e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010390:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8010392:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8010394:	bf24      	itt	cs
 8010396:	6823      	ldrcs	r3, [r4, #0]
 8010398:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 801039a:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 801039c:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 801039e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 80103a0:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 80103a2:	68e0      	ldr	r0, [r4, #12]
 80103a4:	f01d fed3 	bl	802e14e <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80103a8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80103aa:	68e3      	ldr	r3, [r4, #12]
 80103ac:	4251      	negs	r1, r2
 80103ae:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80103b0:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80103b2:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80103b4:	4293      	cmp	r3, r2
 80103b6:	d202      	bcs.n	80103be <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 80103b8:	68a3      	ldr	r3, [r4, #8]
 80103ba:	440b      	add	r3, r1
 80103bc:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 80103be:	2d02      	cmp	r5, #2
 80103c0:	d008      	beq.n	80103d4 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80103c2:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 80103c4:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80103c6:	63a6      	str	r6, [r4, #56]	; 0x38
}
 80103c8:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80103ca:	68a0      	ldr	r0, [r4, #8]
 80103cc:	f001 fde0 	bl	8011f90 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 80103d0:	60a5      	str	r5, [r4, #8]
 80103d2:	e7d0      	b.n	8010376 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80103d4:	2e01      	cmp	r6, #1
 80103d6:	bf38      	it	cc
 80103d8:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 80103da:	2000      	movs	r0, #0
 80103dc:	e7cc      	b.n	8010378 <prvCopyDataToQueue+0x10>
 80103de:	bf00      	nop

080103e0 <xQueueGenericCreateStatic>:
	{
 80103e0:	b530      	push	{r4, r5, lr}
 80103e2:	b083      	sub	sp, #12
 80103e4:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80103e8:	b940      	cbnz	r0, 80103fc <xQueueGenericCreateStatic+0x1c>
 80103ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 80103ee:	f383 8811 	msr	BASEPRI, r3
 80103f2:	f3bf 8f6f 	isb	sy
 80103f6:	f3bf 8f4f 	dsb	sy
 80103fa:	e7fe      	b.n	80103fa <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 80103fc:	461d      	mov	r5, r3
 80103fe:	b17b      	cbz	r3, 8010420 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8010400:	b302      	cbz	r2, 8010444 <xQueueGenericCreateStatic+0x64>
 8010402:	b1b1      	cbz	r1, 8010432 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8010404:	2350      	movs	r3, #80	; 0x50
 8010406:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8010408:	9b01      	ldr	r3, [sp, #4]
 801040a:	2b50      	cmp	r3, #80	; 0x50
 801040c:	d023      	beq.n	8010456 <xQueueGenericCreateStatic+0x76>
 801040e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010412:	f383 8811 	msr	BASEPRI, r3
 8010416:	f3bf 8f6f 	isb	sy
 801041a:	f3bf 8f4f 	dsb	sy
 801041e:	e7fe      	b.n	801041e <xQueueGenericCreateStatic+0x3e>
 8010420:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010424:	f383 8811 	msr	BASEPRI, r3
 8010428:	f3bf 8f6f 	isb	sy
 801042c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 8010430:	e7fe      	b.n	8010430 <xQueueGenericCreateStatic+0x50>
 8010432:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010436:	f383 8811 	msr	BASEPRI, r3
 801043a:	f3bf 8f6f 	isb	sy
 801043e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8010442:	e7fe      	b.n	8010442 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8010444:	bb89      	cbnz	r1, 80104aa <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8010446:	2250      	movs	r2, #80	; 0x50
 8010448:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 801044a:	9a01      	ldr	r2, [sp, #4]
 801044c:	2a50      	cmp	r2, #80	; 0x50
 801044e:	d1de      	bne.n	801040e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8010450:	9a01      	ldr	r2, [sp, #4]
 8010452:	462a      	mov	r2, r5
 8010454:	e000      	b.n	8010458 <xQueueGenericCreateStatic+0x78>
 8010456:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 8010458:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 801045a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 801045c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8010460:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 8010464:	f7ff fe1e 	bl	80100a4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010468:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 801046c:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 801046e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010470:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010474:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010476:	4401      	add	r1, r0
 8010478:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 801047a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801047c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 801047e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8010480:	21ff      	movs	r1, #255	; 0xff
 8010482:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010486:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 8010488:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 801048c:	f105 0010 	add.w	r0, r5, #16
 8010490:	f7ff fd58 	bl	800ff44 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8010494:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8010498:	f7ff fd54 	bl	800ff44 <vListInitialise>
	taskEXIT_CRITICAL();
 801049c:	f7ff fe24 	bl	80100e8 <vPortExitCritical>
	}
 80104a0:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 80104a2:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 80104a6:	b003      	add	sp, #12
 80104a8:	bd30      	pop	{r4, r5, pc}
 80104aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80104ae:	f383 8811 	msr	BASEPRI, r3
 80104b2:	f3bf 8f6f 	isb	sy
 80104b6:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80104ba:	e7fe      	b.n	80104ba <xQueueGenericCreateStatic+0xda>

080104bc <xQueueGenericCreate>:
	{
 80104bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80104be:	b940      	cbnz	r0, 80104d2 <xQueueGenericCreate+0x16>
 80104c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80104c4:	f383 8811 	msr	BASEPRI, r3
 80104c8:	f3bf 8f6f 	isb	sy
 80104cc:	f3bf 8f4f 	dsb	sy
 80104d0:	e7fe      	b.n	80104d0 <xQueueGenericCreate+0x14>
 80104d2:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80104d4:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 80104d8:	3050      	adds	r0, #80	; 0x50
 80104da:	460e      	mov	r6, r1
 80104dc:	4617      	mov	r7, r2
 80104de:	f7ff fc11 	bl	800fd04 <pvPortMalloc>
		if( pxNewQueue != NULL )
 80104e2:	4604      	mov	r4, r0
 80104e4:	b340      	cbz	r0, 8010538 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80104e6:	2300      	movs	r3, #0
 80104e8:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 80104ec:	b336      	cbz	r6, 801053c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80104ee:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 80104f2:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 80104f4:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 80104f8:	f7ff fdd4 	bl	80100a4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80104fc:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 8010500:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8010502:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010504:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010508:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801050a:	440a      	add	r2, r1
 801050c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 801050e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010510:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8010512:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8010514:	22ff      	movs	r2, #255	; 0xff
 8010516:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801051a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 801051c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8010520:	f104 0010 	add.w	r0, r4, #16
 8010524:	f7ff fd0e 	bl	800ff44 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8010528:	f104 0024 	add.w	r0, r4, #36	; 0x24
 801052c:	f7ff fd0a 	bl	800ff44 <vListInitialise>
	taskEXIT_CRITICAL();
 8010530:	f7ff fdda 	bl	80100e8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 8010534:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8010538:	4620      	mov	r0, r4
 801053a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801053c:	4603      	mov	r3, r0
 801053e:	e7d8      	b.n	80104f2 <xQueueGenericCreate+0x36>

08010540 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 8010540:	b940      	cbnz	r0, 8010554 <xQueueCreateCountingSemaphoreStatic+0x14>
 8010542:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010546:	f383 8811 	msr	BASEPRI, r3
 801054a:	f3bf 8f6f 	isb	sy
 801054e:	f3bf 8f4f 	dsb	sy
 8010552:	e7fe      	b.n	8010552 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 8010554:	4288      	cmp	r0, r1
 8010556:	d208      	bcs.n	801056a <xQueueCreateCountingSemaphoreStatic+0x2a>
 8010558:	f04f 0350 	mov.w	r3, #80	; 0x50
 801055c:	f383 8811 	msr	BASEPRI, r3
 8010560:	f3bf 8f6f 	isb	sy
 8010564:	f3bf 8f4f 	dsb	sy
 8010568:	e7fe      	b.n	8010568 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 801056a:	b530      	push	{r4, r5, lr}
 801056c:	4615      	mov	r5, r2
 801056e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 8010570:	2a00      	cmp	r2, #0
 8010572:	d03c      	beq.n	80105ee <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8010574:	2350      	movs	r3, #80	; 0x50
 8010576:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 8010578:	9b03      	ldr	r3, [sp, #12]
 801057a:	2b50      	cmp	r3, #80	; 0x50
 801057c:	d008      	beq.n	8010590 <xQueueCreateCountingSemaphoreStatic+0x50>
 801057e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010582:	f383 8811 	msr	BASEPRI, r3
 8010586:	f3bf 8f6f 	isb	sy
 801058a:	f3bf 8f4f 	dsb	sy
 801058e:	e7fe      	b.n	801058e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 8010590:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8010592:	2301      	movs	r3, #1
 8010594:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8010598:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 801059a:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 801059e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80105a0:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 80105a2:	f7ff fd7f 	bl	80100a4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80105a6:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 80105aa:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80105ac:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80105ae:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80105b2:	1ac3      	subs	r3, r0, r3
 80105b4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80105b6:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 80105b8:	f04f 0eff 	mov.w	lr, #255	; 0xff
 80105bc:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80105c0:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80105c2:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 80105c4:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80105c8:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80105ca:	f105 0010 	add.w	r0, r5, #16
 80105ce:	f7ff fcb9 	bl	800ff44 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80105d2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 80105d6:	f7ff fcb5 	bl	800ff44 <vListInitialise>
	taskEXIT_CRITICAL();
 80105da:	f7ff fd85 	bl	80100e8 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80105de:	9901      	ldr	r1, [sp, #4]
 80105e0:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 80105e2:	2302      	movs	r3, #2
	}
 80105e4:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 80105e6:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 80105ea:	b005      	add	sp, #20
 80105ec:	bd30      	pop	{r4, r5, pc}
 80105ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80105f2:	f383 8811 	msr	BASEPRI, r3
 80105f6:	f3bf 8f6f 	isb	sy
 80105fa:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 80105fe:	e7fe      	b.n	80105fe <xQueueCreateCountingSemaphoreStatic+0xbe>

08010600 <xQueueCreateCountingSemaphore>:
	{
 8010600:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 8010602:	b940      	cbnz	r0, 8010616 <xQueueCreateCountingSemaphore+0x16>
 8010604:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010608:	f383 8811 	msr	BASEPRI, r3
 801060c:	f3bf 8f6f 	isb	sy
 8010610:	f3bf 8f4f 	dsb	sy
 8010614:	e7fe      	b.n	8010614 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 8010616:	4288      	cmp	r0, r1
 8010618:	460e      	mov	r6, r1
 801061a:	4604      	mov	r4, r0
 801061c:	d208      	bcs.n	8010630 <xQueueCreateCountingSemaphore+0x30>
 801061e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010622:	f383 8811 	msr	BASEPRI, r3
 8010626:	f3bf 8f6f 	isb	sy
 801062a:	f3bf 8f4f 	dsb	sy
 801062e:	e7fe      	b.n	801062e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8010630:	2050      	movs	r0, #80	; 0x50
 8010632:	f7ff fb67 	bl	800fd04 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8010636:	4605      	mov	r5, r0
 8010638:	b330      	cbz	r0, 8010688 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 801063a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 801063c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8010640:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8010644:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 8010646:	f7ff fd2d 	bl	80100a4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801064a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 801064e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8010650:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010652:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010656:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010658:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801065a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801065c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 801065e:	22ff      	movs	r2, #255	; 0xff
 8010660:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010664:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8010666:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 8010668:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 801066c:	f105 0010 	add.w	r0, r5, #16
 8010670:	f7ff fc68 	bl	800ff44 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8010674:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8010678:	f7ff fc64 	bl	800ff44 <vListInitialise>
	taskEXIT_CRITICAL();
 801067c:	f7ff fd34 	bl	80100e8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 8010680:	2302      	movs	r3, #2
 8010682:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8010686:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 8010688:	4628      	mov	r0, r5
 801068a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801068c <xQueueGenericSend>:
{
 801068c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010690:	b085      	sub	sp, #20
 8010692:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 8010694:	2800      	cmp	r0, #0
 8010696:	f000 80a4 	beq.w	80107e2 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 801069a:	4688      	mov	r8, r1
 801069c:	461f      	mov	r7, r3
 801069e:	4604      	mov	r4, r0
 80106a0:	2900      	cmp	r1, #0
 80106a2:	f000 8091 	beq.w	80107c8 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80106a6:	2f02      	cmp	r7, #2
 80106a8:	d10b      	bne.n	80106c2 <xQueueGenericSend+0x36>
 80106aa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80106ac:	2b01      	cmp	r3, #1
 80106ae:	d008      	beq.n	80106c2 <xQueueGenericSend+0x36>
 80106b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80106b4:	f383 8811 	msr	BASEPRI, r3
 80106b8:	f3bf 8f6f 	isb	sy
 80106bc:	f3bf 8f4f 	dsb	sy
 80106c0:	e7fe      	b.n	80106c0 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80106c2:	f001 fc0f 	bl	8011ee4 <xTaskGetSchedulerState>
 80106c6:	4605      	mov	r5, r0
 80106c8:	2800      	cmp	r0, #0
 80106ca:	f000 8093 	beq.w	80107f4 <xQueueGenericSend+0x168>
 80106ce:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80106d0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 80106d4:	f7ff fce6 	bl	80100a4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80106d8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80106da:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80106dc:	429a      	cmp	r2, r3
 80106de:	f0c0 80ef 	bcc.w	80108c0 <xQueueGenericSend+0x234>
 80106e2:	2f02      	cmp	r7, #2
 80106e4:	f000 80ec 	beq.w	80108c0 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 80106e8:	9801      	ldr	r0, [sp, #4]
 80106ea:	2800      	cmp	r0, #0
 80106ec:	f000 8101 	beq.w	80108f2 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 80106f0:	2d00      	cmp	r5, #0
 80106f2:	f000 80e1 	beq.w	80108b8 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 80106f6:	f7ff fcf7 	bl	80100e8 <vPortExitCritical>
		vTaskSuspendAll();
 80106fa:	f001 fa49 	bl	8011b90 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80106fe:	f7ff fcd1 	bl	80100a4 <vPortEnterCritical>
 8010702:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010706:	2bff      	cmp	r3, #255	; 0xff
 8010708:	bf04      	itt	eq
 801070a:	2300      	moveq	r3, #0
 801070c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8010710:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010714:	2bff      	cmp	r3, #255	; 0xff
 8010716:	bf04      	itt	eq
 8010718:	2300      	moveq	r3, #0
 801071a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 801071e:	f7ff fce3 	bl	80100e8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010722:	a901      	add	r1, sp, #4
 8010724:	a802      	add	r0, sp, #8
 8010726:	f001 fb8f 	bl	8011e48 <xTaskCheckForTimeOut>
 801072a:	2800      	cmp	r0, #0
 801072c:	f040 80e6 	bne.w	80108fc <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8010730:	f7ff fcb8 	bl	80100a4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8010734:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8010736:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010738:	429a      	cmp	r2, r3
 801073a:	d068      	beq.n	801080e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 801073c:	f7ff fcd4 	bl	80100e8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010740:	f7ff fcb0 	bl	80100a4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010744:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 8010748:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 801074a:	2d00      	cmp	r5, #0
 801074c:	dc04      	bgt.n	8010758 <xQueueGenericSend+0xcc>
 801074e:	e011      	b.n	8010774 <xQueueGenericSend+0xe8>
			--cTxLock;
 8010750:	1e6a      	subs	r2, r5, #1
 8010752:	b2d3      	uxtb	r3, r2
 8010754:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010756:	b16b      	cbz	r3, 8010774 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010758:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801075a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 801075c:	b153      	cbz	r3, 8010774 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801075e:	f001 fb1f 	bl	8011da0 <xTaskRemoveFromEventList>
 8010762:	2800      	cmp	r0, #0
 8010764:	d0f4      	beq.n	8010750 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 8010766:	f001 fbb7 	bl	8011ed8 <vTaskMissedYield>
			--cTxLock;
 801076a:	1e6a      	subs	r2, r5, #1
 801076c:	b2d3      	uxtb	r3, r2
 801076e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010770:	2b00      	cmp	r3, #0
 8010772:	d1f1      	bne.n	8010758 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 8010774:	23ff      	movs	r3, #255	; 0xff
 8010776:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 801077a:	f7ff fcb5 	bl	80100e8 <vPortExitCritical>
	taskENTER_CRITICAL();
 801077e:	f7ff fc91 	bl	80100a4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010782:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8010786:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010788:	2d00      	cmp	r5, #0
 801078a:	dd14      	ble.n	80107b6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801078c:	f104 0910 	add.w	r9, r4, #16
 8010790:	e003      	b.n	801079a <xQueueGenericSend+0x10e>
				--cRxLock;
 8010792:	1e6a      	subs	r2, r5, #1
 8010794:	b2d3      	uxtb	r3, r2
 8010796:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010798:	b16b      	cbz	r3, 80107b6 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 801079a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801079c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 801079e:	b153      	cbz	r3, 80107b6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80107a0:	f001 fafe 	bl	8011da0 <xTaskRemoveFromEventList>
 80107a4:	2800      	cmp	r0, #0
 80107a6:	d0f4      	beq.n	8010792 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 80107a8:	f001 fb96 	bl	8011ed8 <vTaskMissedYield>
				--cRxLock;
 80107ac:	1e6a      	subs	r2, r5, #1
 80107ae:	b2d3      	uxtb	r3, r2
 80107b0:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80107b2:	2b00      	cmp	r3, #0
 80107b4:	d1f1      	bne.n	801079a <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 80107b6:	23ff      	movs	r3, #255	; 0xff
 80107b8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 80107bc:	f7ff fc94 	bl	80100e8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 80107c0:	f001 f9ee 	bl	8011ba0 <xTaskResumeAll>
 80107c4:	2501      	movs	r5, #1
 80107c6:	e785      	b.n	80106d4 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80107c8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80107ca:	2b00      	cmp	r3, #0
 80107cc:	f43f af6b 	beq.w	80106a6 <xQueueGenericSend+0x1a>
 80107d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80107d4:	f383 8811 	msr	BASEPRI, r3
 80107d8:	f3bf 8f6f 	isb	sy
 80107dc:	f3bf 8f4f 	dsb	sy
 80107e0:	e7fe      	b.n	80107e0 <xQueueGenericSend+0x154>
 80107e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80107e6:	f383 8811 	msr	BASEPRI, r3
 80107ea:	f3bf 8f6f 	isb	sy
 80107ee:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 80107f2:	e7fe      	b.n	80107f2 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80107f4:	9b01      	ldr	r3, [sp, #4]
 80107f6:	2b00      	cmp	r3, #0
 80107f8:	f43f af6a 	beq.w	80106d0 <xQueueGenericSend+0x44>
 80107fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010800:	f383 8811 	msr	BASEPRI, r3
 8010804:	f3bf 8f6f 	isb	sy
 8010808:	f3bf 8f4f 	dsb	sy
 801080c:	e7fe      	b.n	801080c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 801080e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 8010812:	f7ff fc69 	bl	80100e8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8010816:	9901      	ldr	r1, [sp, #4]
 8010818:	4648      	mov	r0, r9
 801081a:	f001 fa33 	bl	8011c84 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 801081e:	f7ff fc41 	bl	80100a4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010822:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010826:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010828:	2d00      	cmp	r5, #0
 801082a:	dc04      	bgt.n	8010836 <xQueueGenericSend+0x1aa>
 801082c:	e011      	b.n	8010852 <xQueueGenericSend+0x1c6>
			--cTxLock;
 801082e:	1e6b      	subs	r3, r5, #1
 8010830:	b2da      	uxtb	r2, r3
 8010832:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010834:	b16a      	cbz	r2, 8010852 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010836:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010838:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 801083a:	b153      	cbz	r3, 8010852 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801083c:	f001 fab0 	bl	8011da0 <xTaskRemoveFromEventList>
 8010840:	2800      	cmp	r0, #0
 8010842:	d0f4      	beq.n	801082e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 8010844:	f001 fb48 	bl	8011ed8 <vTaskMissedYield>
			--cTxLock;
 8010848:	1e6b      	subs	r3, r5, #1
 801084a:	b2da      	uxtb	r2, r3
 801084c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 801084e:	2a00      	cmp	r2, #0
 8010850:	d1f1      	bne.n	8010836 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 8010852:	23ff      	movs	r3, #255	; 0xff
 8010854:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010858:	f7ff fc46 	bl	80100e8 <vPortExitCritical>
	taskENTER_CRITICAL();
 801085c:	f7ff fc22 	bl	80100a4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010860:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010864:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010866:	2d00      	cmp	r5, #0
 8010868:	dc04      	bgt.n	8010874 <xQueueGenericSend+0x1e8>
 801086a:	e011      	b.n	8010890 <xQueueGenericSend+0x204>
				--cRxLock;
 801086c:	1e6b      	subs	r3, r5, #1
 801086e:	b2da      	uxtb	r2, r3
 8010870:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010872:	b16a      	cbz	r2, 8010890 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010874:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010876:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010878:	b153      	cbz	r3, 8010890 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801087a:	f001 fa91 	bl	8011da0 <xTaskRemoveFromEventList>
 801087e:	2800      	cmp	r0, #0
 8010880:	d0f4      	beq.n	801086c <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 8010882:	f001 fb29 	bl	8011ed8 <vTaskMissedYield>
				--cRxLock;
 8010886:	1e6b      	subs	r3, r5, #1
 8010888:	b2da      	uxtb	r2, r3
 801088a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 801088c:	2a00      	cmp	r2, #0
 801088e:	d1f1      	bne.n	8010874 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 8010890:	23ff      	movs	r3, #255	; 0xff
 8010892:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010896:	f7ff fc27 	bl	80100e8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 801089a:	f001 f981 	bl	8011ba0 <xTaskResumeAll>
 801089e:	2800      	cmp	r0, #0
 80108a0:	d190      	bne.n	80107c4 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 80108a2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80108a6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80108aa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80108ae:	f3bf 8f4f 	dsb	sy
 80108b2:	f3bf 8f6f 	isb	sy
 80108b6:	e785      	b.n	80107c4 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80108b8:	a802      	add	r0, sp, #8
 80108ba:	f001 fab9 	bl	8011e30 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 80108be:	e71a      	b.n	80106f6 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80108c0:	463a      	mov	r2, r7
 80108c2:	4641      	mov	r1, r8
 80108c4:	4620      	mov	r0, r4
 80108c6:	f7ff fd4f 	bl	8010368 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80108ca:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80108cc:	2b00      	cmp	r3, #0
 80108ce:	d153      	bne.n	8010978 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 80108d0:	b148      	cbz	r0, 80108e6 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 80108d2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80108d6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80108da:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80108de:	f3bf 8f4f 	dsb	sy
 80108e2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80108e6:	f7ff fbff 	bl	80100e8 <vPortExitCritical>
				return pdPASS;
 80108ea:	2001      	movs	r0, #1
}
 80108ec:	b005      	add	sp, #20
 80108ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80108f2:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 80108f4:	f7ff fbf8 	bl	80100e8 <vPortExitCritical>
					return errQUEUE_FULL;
 80108f8:	9800      	ldr	r0, [sp, #0]
 80108fa:	e7f7      	b.n	80108ec <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 80108fc:	f7ff fbd2 	bl	80100a4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010900:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010904:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010906:	2d00      	cmp	r5, #0
 8010908:	dd10      	ble.n	801092c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801090a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 801090e:	e003      	b.n	8010918 <xQueueGenericSend+0x28c>
			--cTxLock;
 8010910:	1e6b      	subs	r3, r5, #1
 8010912:	b2da      	uxtb	r2, r3
 8010914:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010916:	b14a      	cbz	r2, 801092c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010918:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801091a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 801091c:	b133      	cbz	r3, 801092c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801091e:	f001 fa3f 	bl	8011da0 <xTaskRemoveFromEventList>
 8010922:	2800      	cmp	r0, #0
 8010924:	d0f4      	beq.n	8010910 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 8010926:	f001 fad7 	bl	8011ed8 <vTaskMissedYield>
 801092a:	e7f1      	b.n	8010910 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 801092c:	23ff      	movs	r3, #255	; 0xff
 801092e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010932:	f7ff fbd9 	bl	80100e8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010936:	f7ff fbb5 	bl	80100a4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 801093a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 801093e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010940:	2d00      	cmp	r5, #0
 8010942:	dd10      	ble.n	8010966 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010944:	f104 0610 	add.w	r6, r4, #16
 8010948:	e003      	b.n	8010952 <xQueueGenericSend+0x2c6>
				--cRxLock;
 801094a:	1e6b      	subs	r3, r5, #1
 801094c:	b2da      	uxtb	r2, r3
 801094e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010950:	b14a      	cbz	r2, 8010966 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010952:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010954:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010956:	b133      	cbz	r3, 8010966 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010958:	f001 fa22 	bl	8011da0 <xTaskRemoveFromEventList>
 801095c:	2800      	cmp	r0, #0
 801095e:	d0f4      	beq.n	801094a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 8010960:	f001 faba 	bl	8011ed8 <vTaskMissedYield>
 8010964:	e7f1      	b.n	801094a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 8010966:	23ff      	movs	r3, #255	; 0xff
 8010968:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 801096c:	f7ff fbbc 	bl	80100e8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 8010970:	f001 f916 	bl	8011ba0 <xTaskResumeAll>
			return errQUEUE_FULL;
 8010974:	2000      	movs	r0, #0
 8010976:	e7b9      	b.n	80108ec <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010978:	f104 0024 	add.w	r0, r4, #36	; 0x24
 801097c:	f001 fa10 	bl	8011da0 <xTaskRemoveFromEventList>
 8010980:	2800      	cmp	r0, #0
 8010982:	d0b0      	beq.n	80108e6 <xQueueGenericSend+0x25a>
 8010984:	e7a5      	b.n	80108d2 <xQueueGenericSend+0x246>
 8010986:	bf00      	nop

08010988 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 8010988:	2800      	cmp	r0, #0
 801098a:	d04b      	beq.n	8010a24 <xQueueGenericSendFromISR+0x9c>
{
 801098c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010990:	460e      	mov	r6, r1
 8010992:	4617      	mov	r7, r2
 8010994:	461d      	mov	r5, r3
 8010996:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010998:	b321      	cbz	r1, 80109e4 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 801099a:	2d02      	cmp	r5, #2
 801099c:	d10b      	bne.n	80109b6 <xQueueGenericSendFromISR+0x2e>
 801099e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80109a0:	2b01      	cmp	r3, #1
 80109a2:	d008      	beq.n	80109b6 <xQueueGenericSendFromISR+0x2e>
 80109a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80109a8:	f383 8811 	msr	BASEPRI, r3
 80109ac:	f3bf 8f6f 	isb	sy
 80109b0:	f3bf 8f4f 	dsb	sy
 80109b4:	e7fe      	b.n	80109b4 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80109b6:	f7ff fca9 	bl	801030c <vPortValidateInterruptPriority>
	__asm volatile
 80109ba:	f3ef 8811 	mrs	r8, BASEPRI
 80109be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80109c2:	f383 8811 	msr	BASEPRI, r3
 80109c6:	f3bf 8f6f 	isb	sy
 80109ca:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80109ce:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80109d0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80109d2:	429a      	cmp	r2, r3
 80109d4:	d312      	bcc.n	80109fc <xQueueGenericSendFromISR+0x74>
 80109d6:	2d02      	cmp	r5, #2
 80109d8:	d010      	beq.n	80109fc <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 80109da:	2000      	movs	r0, #0
	__asm volatile
 80109dc:	f388 8811 	msr	BASEPRI, r8
}
 80109e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80109e4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80109e6:	2b00      	cmp	r3, #0
 80109e8:	d0d7      	beq.n	801099a <xQueueGenericSendFromISR+0x12>
	__asm volatile
 80109ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 80109ee:	f383 8811 	msr	BASEPRI, r3
 80109f2:	f3bf 8f6f 	isb	sy
 80109f6:	f3bf 8f4f 	dsb	sy
 80109fa:	e7fe      	b.n	80109fa <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80109fc:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 80109fe:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010a02:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8010a04:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 8010a06:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8010a08:	4620      	mov	r0, r4
 8010a0a:	f7ff fcad 	bl	8010368 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8010a0e:	1c6b      	adds	r3, r5, #1
 8010a10:	d011      	beq.n	8010a36 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8010a12:	1c6b      	adds	r3, r5, #1
 8010a14:	b25b      	sxtb	r3, r3
 8010a16:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 8010a1a:	2001      	movs	r0, #1
	__asm volatile
 8010a1c:	f388 8811 	msr	BASEPRI, r8
}
 8010a20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 8010a24:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010a28:	f383 8811 	msr	BASEPRI, r3
 8010a2c:	f3bf 8f6f 	isb	sy
 8010a30:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8010a34:	e7fe      	b.n	8010a34 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010a36:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8010a38:	2b00      	cmp	r3, #0
 8010a3a:	d0ee      	beq.n	8010a1a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010a3c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8010a40:	f001 f9ae 	bl	8011da0 <xTaskRemoveFromEventList>
 8010a44:	2800      	cmp	r0, #0
 8010a46:	d0e8      	beq.n	8010a1a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8010a48:	2f00      	cmp	r7, #0
 8010a4a:	d0e6      	beq.n	8010a1a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8010a4c:	2001      	movs	r0, #1
 8010a4e:	6038      	str	r0, [r7, #0]
 8010a50:	e7c4      	b.n	80109dc <xQueueGenericSendFromISR+0x54>
 8010a52:	bf00      	nop

08010a54 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 8010a54:	b370      	cbz	r0, 8010ab4 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 8010a56:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 8010a58:	b570      	push	{r4, r5, r6, lr}
 8010a5a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 8010a5c:	b143      	cbz	r3, 8010a70 <xQueueGiveFromISR+0x1c>
 8010a5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010a62:	f383 8811 	msr	BASEPRI, r3
 8010a66:	f3bf 8f6f 	isb	sy
 8010a6a:	f3bf 8f4f 	dsb	sy
 8010a6e:	e7fe      	b.n	8010a6e <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8010a70:	6803      	ldr	r3, [r0, #0]
 8010a72:	460c      	mov	r4, r1
 8010a74:	b33b      	cbz	r3, 8010ac6 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8010a76:	f7ff fc49 	bl	801030c <vPortValidateInterruptPriority>
	__asm volatile
 8010a7a:	f3ef 8511 	mrs	r5, BASEPRI
 8010a7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010a82:	f383 8811 	msr	BASEPRI, r3
 8010a86:	f3bf 8f6f 	isb	sy
 8010a8a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010a8e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8010a90:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 8010a92:	429a      	cmp	r2, r3
 8010a94:	d923      	bls.n	8010ade <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 8010a96:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8010a9a:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 8010a9c:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8010a9e:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8010aa0:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 8010aa2:	d020      	beq.n	8010ae6 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8010aa4:	3301      	adds	r3, #1
 8010aa6:	b25b      	sxtb	r3, r3
 8010aa8:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 8010aac:	2001      	movs	r0, #1
	__asm volatile
 8010aae:	f385 8811 	msr	BASEPRI, r5
}
 8010ab2:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 8010ab4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010ab8:	f383 8811 	msr	BASEPRI, r3
 8010abc:	f3bf 8f6f 	isb	sy
 8010ac0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8010ac4:	e7fe      	b.n	8010ac4 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8010ac6:	6883      	ldr	r3, [r0, #8]
 8010ac8:	2b00      	cmp	r3, #0
 8010aca:	d0d4      	beq.n	8010a76 <xQueueGiveFromISR+0x22>
 8010acc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010ad0:	f383 8811 	msr	BASEPRI, r3
 8010ad4:	f3bf 8f6f 	isb	sy
 8010ad8:	f3bf 8f4f 	dsb	sy
 8010adc:	e7fe      	b.n	8010adc <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 8010ade:	2000      	movs	r0, #0
	__asm volatile
 8010ae0:	f385 8811 	msr	BASEPRI, r5
}
 8010ae4:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010ae6:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8010ae8:	2b00      	cmp	r3, #0
 8010aea:	d0df      	beq.n	8010aac <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010aec:	f106 0024 	add.w	r0, r6, #36	; 0x24
 8010af0:	f001 f956 	bl	8011da0 <xTaskRemoveFromEventList>
 8010af4:	2800      	cmp	r0, #0
 8010af6:	d0d9      	beq.n	8010aac <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 8010af8:	2c00      	cmp	r4, #0
 8010afa:	d0d7      	beq.n	8010aac <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8010afc:	2001      	movs	r0, #1
 8010afe:	6020      	str	r0, [r4, #0]
 8010b00:	e7ee      	b.n	8010ae0 <xQueueGiveFromISR+0x8c>
 8010b02:	bf00      	nop

08010b04 <xQueueReceive>:
{
 8010b04:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010b08:	b085      	sub	sp, #20
 8010b0a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8010b0c:	2800      	cmp	r0, #0
 8010b0e:	f000 815c 	beq.w	8010dca <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010b12:	460f      	mov	r7, r1
 8010b14:	4604      	mov	r4, r0
 8010b16:	2900      	cmp	r1, #0
 8010b18:	d079      	beq.n	8010c0e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010b1a:	f001 f9e3 	bl	8011ee4 <xTaskGetSchedulerState>
 8010b1e:	2800      	cmp	r0, #0
 8010b20:	f000 8081 	beq.w	8010c26 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 8010b24:	f7ff fabe 	bl	80100a4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010b28:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010b2a:	2d00      	cmp	r5, #0
 8010b2c:	f040 8138 	bne.w	8010da0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010b30:	9b01      	ldr	r3, [sp, #4]
 8010b32:	2b00      	cmp	r3, #0
 8010b34:	f000 80d5 	beq.w	8010ce2 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8010b38:	a802      	add	r0, sp, #8
 8010b3a:	f001 f979 	bl	8011e30 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 8010b3e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010b40:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 8010b44:	f7ff fad0 	bl	80100e8 <vPortExitCritical>
		vTaskSuspendAll();
 8010b48:	f001 f822 	bl	8011b90 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8010b4c:	f7ff faaa 	bl	80100a4 <vPortEnterCritical>
 8010b50:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010b54:	2bff      	cmp	r3, #255	; 0xff
 8010b56:	bf08      	it	eq
 8010b58:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8010b5c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010b60:	2bff      	cmp	r3, #255	; 0xff
 8010b62:	bf08      	it	eq
 8010b64:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8010b68:	f7ff fabe 	bl	80100e8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010b6c:	a901      	add	r1, sp, #4
 8010b6e:	a802      	add	r0, sp, #8
 8010b70:	f001 f96a 	bl	8011e48 <xTaskCheckForTimeOut>
 8010b74:	2800      	cmp	r0, #0
 8010b76:	d163      	bne.n	8010c40 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 8010b78:	f7ff fa94 	bl	80100a4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010b7c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010b7e:	2b00      	cmp	r3, #0
 8010b80:	f000 80b5 	beq.w	8010cee <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 8010b84:	f7ff fab0 	bl	80100e8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010b88:	f7ff fa8c 	bl	80100a4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010b8c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010b90:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010b92:	2d00      	cmp	r5, #0
 8010b94:	dc04      	bgt.n	8010ba0 <xQueueReceive+0x9c>
 8010b96:	e011      	b.n	8010bbc <xQueueReceive+0xb8>
			--cTxLock;
 8010b98:	1e6b      	subs	r3, r5, #1
 8010b9a:	b2da      	uxtb	r2, r3
 8010b9c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010b9e:	b16a      	cbz	r2, 8010bbc <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010ba0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010ba2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010ba4:	b153      	cbz	r3, 8010bbc <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010ba6:	f001 f8fb 	bl	8011da0 <xTaskRemoveFromEventList>
 8010baa:	2800      	cmp	r0, #0
 8010bac:	d0f4      	beq.n	8010b98 <xQueueReceive+0x94>
						vTaskMissedYield();
 8010bae:	f001 f993 	bl	8011ed8 <vTaskMissedYield>
			--cTxLock;
 8010bb2:	1e6b      	subs	r3, r5, #1
 8010bb4:	b2da      	uxtb	r2, r3
 8010bb6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010bb8:	2a00      	cmp	r2, #0
 8010bba:	d1f1      	bne.n	8010ba0 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 8010bbc:	23ff      	movs	r3, #255	; 0xff
 8010bbe:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010bc2:	f7ff fa91 	bl	80100e8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010bc6:	f7ff fa6d 	bl	80100a4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010bca:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010bce:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010bd0:	2d00      	cmp	r5, #0
 8010bd2:	dd14      	ble.n	8010bfe <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010bd4:	f104 0910 	add.w	r9, r4, #16
 8010bd8:	e003      	b.n	8010be2 <xQueueReceive+0xde>
				--cRxLock;
 8010bda:	1e6b      	subs	r3, r5, #1
 8010bdc:	b2da      	uxtb	r2, r3
 8010bde:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010be0:	b16a      	cbz	r2, 8010bfe <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010be2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010be4:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010be6:	b153      	cbz	r3, 8010bfe <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010be8:	f001 f8da 	bl	8011da0 <xTaskRemoveFromEventList>
 8010bec:	2800      	cmp	r0, #0
 8010bee:	d0f4      	beq.n	8010bda <xQueueReceive+0xd6>
					vTaskMissedYield();
 8010bf0:	f001 f972 	bl	8011ed8 <vTaskMissedYield>
				--cRxLock;
 8010bf4:	1e6b      	subs	r3, r5, #1
 8010bf6:	b2da      	uxtb	r2, r3
 8010bf8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010bfa:	2a00      	cmp	r2, #0
 8010bfc:	d1f1      	bne.n	8010be2 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 8010bfe:	23ff      	movs	r3, #255	; 0xff
 8010c00:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010c04:	f7ff fa70 	bl	80100e8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 8010c08:	f000 ffca 	bl	8011ba0 <xTaskResumeAll>
		taskENTER_CRITICAL();
 8010c0c:	e060      	b.n	8010cd0 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010c0e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8010c10:	2b00      	cmp	r3, #0
 8010c12:	d082      	beq.n	8010b1a <xQueueReceive+0x16>
	__asm volatile
 8010c14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010c18:	f383 8811 	msr	BASEPRI, r3
 8010c1c:	f3bf 8f6f 	isb	sy
 8010c20:	f3bf 8f4f 	dsb	sy
 8010c24:	e7fe      	b.n	8010c24 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010c26:	9b01      	ldr	r3, [sp, #4]
 8010c28:	2b00      	cmp	r3, #0
 8010c2a:	f43f af7b 	beq.w	8010b24 <xQueueReceive+0x20>
 8010c2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010c32:	f383 8811 	msr	BASEPRI, r3
 8010c36:	f3bf 8f6f 	isb	sy
 8010c3a:	f3bf 8f4f 	dsb	sy
 8010c3e:	e7fe      	b.n	8010c3e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 8010c40:	f7ff fa30 	bl	80100a4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010c44:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010c48:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010c4a:	2d00      	cmp	r5, #0
 8010c4c:	dc04      	bgt.n	8010c58 <xQueueReceive+0x154>
 8010c4e:	e011      	b.n	8010c74 <xQueueReceive+0x170>
			--cTxLock;
 8010c50:	1e6b      	subs	r3, r5, #1
 8010c52:	b2da      	uxtb	r2, r3
 8010c54:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010c56:	b16a      	cbz	r2, 8010c74 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010c58:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010c5a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010c5c:	b153      	cbz	r3, 8010c74 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010c5e:	f001 f89f 	bl	8011da0 <xTaskRemoveFromEventList>
 8010c62:	2800      	cmp	r0, #0
 8010c64:	d0f4      	beq.n	8010c50 <xQueueReceive+0x14c>
						vTaskMissedYield();
 8010c66:	f001 f937 	bl	8011ed8 <vTaskMissedYield>
			--cTxLock;
 8010c6a:	1e6b      	subs	r3, r5, #1
 8010c6c:	b2da      	uxtb	r2, r3
 8010c6e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010c70:	2a00      	cmp	r2, #0
 8010c72:	d1f1      	bne.n	8010c58 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 8010c74:	23ff      	movs	r3, #255	; 0xff
 8010c76:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010c7a:	f7ff fa35 	bl	80100e8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010c7e:	f7ff fa11 	bl	80100a4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010c82:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010c86:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010c88:	2d00      	cmp	r5, #0
 8010c8a:	dd14      	ble.n	8010cb6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010c8c:	f104 0910 	add.w	r9, r4, #16
 8010c90:	e003      	b.n	8010c9a <xQueueReceive+0x196>
				--cRxLock;
 8010c92:	1e6b      	subs	r3, r5, #1
 8010c94:	b2da      	uxtb	r2, r3
 8010c96:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010c98:	b16a      	cbz	r2, 8010cb6 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010c9a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010c9c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010c9e:	b153      	cbz	r3, 8010cb6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010ca0:	f001 f87e 	bl	8011da0 <xTaskRemoveFromEventList>
 8010ca4:	2800      	cmp	r0, #0
 8010ca6:	d0f4      	beq.n	8010c92 <xQueueReceive+0x18e>
					vTaskMissedYield();
 8010ca8:	f001 f916 	bl	8011ed8 <vTaskMissedYield>
				--cRxLock;
 8010cac:	1e6b      	subs	r3, r5, #1
 8010cae:	b2da      	uxtb	r2, r3
 8010cb0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010cb2:	2a00      	cmp	r2, #0
 8010cb4:	d1f1      	bne.n	8010c9a <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 8010cb6:	23ff      	movs	r3, #255	; 0xff
 8010cb8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010cbc:	f7ff fa14 	bl	80100e8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 8010cc0:	f000 ff6e 	bl	8011ba0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 8010cc4:	f7ff f9ee 	bl	80100a4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010cc8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010cca:	b153      	cbz	r3, 8010ce2 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 8010ccc:	f7ff fa0c 	bl	80100e8 <vPortExitCritical>
		taskENTER_CRITICAL();
 8010cd0:	f7ff f9e8 	bl	80100a4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010cd4:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010cd6:	2d00      	cmp	r5, #0
 8010cd8:	d162      	bne.n	8010da0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010cda:	9b01      	ldr	r3, [sp, #4]
 8010cdc:	2b00      	cmp	r3, #0
 8010cde:	f47f af31 	bne.w	8010b44 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 8010ce2:	f7ff fa01 	bl	80100e8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8010ce6:	2000      	movs	r0, #0
}
 8010ce8:	b005      	add	sp, #20
 8010cea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8010cee:	f7ff f9fb 	bl	80100e8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8010cf2:	9901      	ldr	r1, [sp, #4]
 8010cf4:	4630      	mov	r0, r6
 8010cf6:	f000 ffc5 	bl	8011c84 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 8010cfa:	f7ff f9d3 	bl	80100a4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010cfe:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010d02:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010d04:	2d00      	cmp	r5, #0
 8010d06:	dc04      	bgt.n	8010d12 <xQueueReceive+0x20e>
 8010d08:	e011      	b.n	8010d2e <xQueueReceive+0x22a>
			--cTxLock;
 8010d0a:	1e6b      	subs	r3, r5, #1
 8010d0c:	b2da      	uxtb	r2, r3
 8010d0e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010d10:	b16a      	cbz	r2, 8010d2e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010d12:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010d14:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010d16:	b153      	cbz	r3, 8010d2e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010d18:	f001 f842 	bl	8011da0 <xTaskRemoveFromEventList>
 8010d1c:	2800      	cmp	r0, #0
 8010d1e:	d0f4      	beq.n	8010d0a <xQueueReceive+0x206>
						vTaskMissedYield();
 8010d20:	f001 f8da 	bl	8011ed8 <vTaskMissedYield>
			--cTxLock;
 8010d24:	1e6b      	subs	r3, r5, #1
 8010d26:	b2da      	uxtb	r2, r3
 8010d28:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010d2a:	2a00      	cmp	r2, #0
 8010d2c:	d1f1      	bne.n	8010d12 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 8010d2e:	23ff      	movs	r3, #255	; 0xff
 8010d30:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010d34:	f7ff f9d8 	bl	80100e8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010d38:	f7ff f9b4 	bl	80100a4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010d3c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010d40:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010d42:	2d00      	cmp	r5, #0
 8010d44:	dd14      	ble.n	8010d70 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010d46:	f104 0910 	add.w	r9, r4, #16
 8010d4a:	e003      	b.n	8010d54 <xQueueReceive+0x250>
				--cRxLock;
 8010d4c:	1e6b      	subs	r3, r5, #1
 8010d4e:	b2da      	uxtb	r2, r3
 8010d50:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010d52:	b16a      	cbz	r2, 8010d70 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010d54:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010d56:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010d58:	b153      	cbz	r3, 8010d70 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010d5a:	f001 f821 	bl	8011da0 <xTaskRemoveFromEventList>
 8010d5e:	2800      	cmp	r0, #0
 8010d60:	d0f4      	beq.n	8010d4c <xQueueReceive+0x248>
					vTaskMissedYield();
 8010d62:	f001 f8b9 	bl	8011ed8 <vTaskMissedYield>
				--cRxLock;
 8010d66:	1e6b      	subs	r3, r5, #1
 8010d68:	b2da      	uxtb	r2, r3
 8010d6a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010d6c:	2a00      	cmp	r2, #0
 8010d6e:	d1f1      	bne.n	8010d54 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 8010d70:	23ff      	movs	r3, #255	; 0xff
 8010d72:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010d76:	f7ff f9b7 	bl	80100e8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 8010d7a:	f000 ff11 	bl	8011ba0 <xTaskResumeAll>
 8010d7e:	2800      	cmp	r0, #0
 8010d80:	d1a6      	bne.n	8010cd0 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 8010d82:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010d86:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010d8a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010d8e:	f3bf 8f4f 	dsb	sy
 8010d92:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 8010d96:	f7ff f985 	bl	80100a4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010d9a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010d9c:	2d00      	cmp	r5, #0
 8010d9e:	d09c      	beq.n	8010cda <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8010da0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8010da2:	b152      	cbz	r2, 8010dba <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010da4:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8010da6:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010da8:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8010daa:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010dac:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8010dae:	bf24      	itt	cs
 8010db0:	6821      	ldrcs	r1, [r4, #0]
 8010db2:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8010db4:	4638      	mov	r0, r7
 8010db6:	f01d f9ca 	bl	802e14e <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8010dba:	3d01      	subs	r5, #1
 8010dbc:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010dbe:	6923      	ldr	r3, [r4, #16]
 8010dc0:	b963      	cbnz	r3, 8010ddc <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 8010dc2:	f7ff f991 	bl	80100e8 <vPortExitCritical>
				return pdPASS;
 8010dc6:	2001      	movs	r0, #1
 8010dc8:	e78e      	b.n	8010ce8 <xQueueReceive+0x1e4>
 8010dca:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010dce:	f383 8811 	msr	BASEPRI, r3
 8010dd2:	f3bf 8f6f 	isb	sy
 8010dd6:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 8010dda:	e7fe      	b.n	8010dda <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010ddc:	f104 0010 	add.w	r0, r4, #16
 8010de0:	f000 ffde 	bl	8011da0 <xTaskRemoveFromEventList>
 8010de4:	2800      	cmp	r0, #0
 8010de6:	d0ec      	beq.n	8010dc2 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 8010de8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010dec:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010df0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010df4:	f3bf 8f4f 	dsb	sy
 8010df8:	f3bf 8f6f 	isb	sy
 8010dfc:	e7e1      	b.n	8010dc2 <xQueueReceive+0x2be>
 8010dfe:	bf00      	nop

08010e00 <xQueueSemaphoreTake>:
{
 8010e00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010e04:	b084      	sub	sp, #16
 8010e06:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8010e08:	2800      	cmp	r0, #0
 8010e0a:	d05c      	beq.n	8010ec6 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 8010e0c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 8010e0e:	4604      	mov	r4, r0
 8010e10:	b147      	cbz	r7, 8010e24 <xQueueSemaphoreTake+0x24>
 8010e12:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010e16:	f383 8811 	msr	BASEPRI, r3
 8010e1a:	f3bf 8f6f 	isb	sy
 8010e1e:	f3bf 8f4f 	dsb	sy
 8010e22:	e7fe      	b.n	8010e22 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010e24:	f001 f85e 	bl	8011ee4 <xTaskGetSchedulerState>
 8010e28:	4605      	mov	r5, r0
 8010e2a:	2800      	cmp	r0, #0
 8010e2c:	d054      	beq.n	8010ed8 <xQueueSemaphoreTake+0xd8>
 8010e2e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010e30:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 8010e34:	f7ff f936 	bl	80100a4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8010e38:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8010e3a:	2b00      	cmp	r3, #0
 8010e3c:	f040 8148 	bne.w	80110d0 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010e40:	9b01      	ldr	r3, [sp, #4]
 8010e42:	2b00      	cmp	r3, #0
 8010e44:	f000 813a 	beq.w	80110bc <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 8010e48:	2d00      	cmp	r5, #0
 8010e4a:	f000 809d 	beq.w	8010f88 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 8010e4e:	f7ff f94b 	bl	80100e8 <vPortExitCritical>
		vTaskSuspendAll();
 8010e52:	f000 fe9d 	bl	8011b90 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8010e56:	f7ff f925 	bl	80100a4 <vPortEnterCritical>
 8010e5a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010e5e:	2bff      	cmp	r3, #255	; 0xff
 8010e60:	bf04      	itt	eq
 8010e62:	2300      	moveq	r3, #0
 8010e64:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8010e68:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010e6c:	2bff      	cmp	r3, #255	; 0xff
 8010e6e:	bf04      	itt	eq
 8010e70:	2300      	moveq	r3, #0
 8010e72:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8010e76:	f7ff f937 	bl	80100e8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010e7a:	a901      	add	r1, sp, #4
 8010e7c:	a802      	add	r0, sp, #8
 8010e7e:	f000 ffe3 	bl	8011e48 <xTaskCheckForTimeOut>
 8010e82:	2800      	cmp	r0, #0
 8010e84:	d135      	bne.n	8010ef2 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 8010e86:	f7ff f90d 	bl	80100a4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010e8a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010e8c:	2b00      	cmp	r3, #0
 8010e8e:	f000 80a4 	beq.w	8010fda <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 8010e92:	f7ff f929 	bl	80100e8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010e96:	f7ff f905 	bl	80100a4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010e9a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010e9e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010ea0:	2d00      	cmp	r5, #0
 8010ea2:	dc05      	bgt.n	8010eb0 <xQueueSemaphoreTake+0xb0>
 8010ea4:	e074      	b.n	8010f90 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 8010ea6:	1e6b      	subs	r3, r5, #1
 8010ea8:	b2da      	uxtb	r2, r3
 8010eaa:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010eac:	2a00      	cmp	r2, #0
 8010eae:	d06f      	beq.n	8010f90 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010eb0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010eb2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010eb4:	2b00      	cmp	r3, #0
 8010eb6:	d06b      	beq.n	8010f90 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010eb8:	f000 ff72 	bl	8011da0 <xTaskRemoveFromEventList>
 8010ebc:	2800      	cmp	r0, #0
 8010ebe:	d0f2      	beq.n	8010ea6 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 8010ec0:	f001 f80a 	bl	8011ed8 <vTaskMissedYield>
 8010ec4:	e7ef      	b.n	8010ea6 <xQueueSemaphoreTake+0xa6>
 8010ec6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010eca:	f383 8811 	msr	BASEPRI, r3
 8010ece:	f3bf 8f6f 	isb	sy
 8010ed2:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 8010ed6:	e7fe      	b.n	8010ed6 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010ed8:	9b01      	ldr	r3, [sp, #4]
 8010eda:	2b00      	cmp	r3, #0
 8010edc:	f000 80d4 	beq.w	8011088 <xQueueSemaphoreTake+0x288>
 8010ee0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010ee4:	f383 8811 	msr	BASEPRI, r3
 8010ee8:	f3bf 8f6f 	isb	sy
 8010eec:	f3bf 8f4f 	dsb	sy
 8010ef0:	e7fe      	b.n	8010ef0 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 8010ef2:	f7ff f8d7 	bl	80100a4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010ef6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010efa:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010efc:	2d00      	cmp	r5, #0
 8010efe:	dc04      	bgt.n	8010f0a <xQueueSemaphoreTake+0x10a>
 8010f00:	e011      	b.n	8010f26 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 8010f02:	1e6b      	subs	r3, r5, #1
 8010f04:	b2da      	uxtb	r2, r3
 8010f06:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010f08:	b16a      	cbz	r2, 8010f26 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010f0a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010f0c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010f0e:	b153      	cbz	r3, 8010f26 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010f10:	f000 ff46 	bl	8011da0 <xTaskRemoveFromEventList>
 8010f14:	2800      	cmp	r0, #0
 8010f16:	d0f4      	beq.n	8010f02 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 8010f18:	f000 ffde 	bl	8011ed8 <vTaskMissedYield>
			--cTxLock;
 8010f1c:	1e6b      	subs	r3, r5, #1
 8010f1e:	b2da      	uxtb	r2, r3
 8010f20:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010f22:	2a00      	cmp	r2, #0
 8010f24:	d1f1      	bne.n	8010f0a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 8010f26:	23ff      	movs	r3, #255	; 0xff
 8010f28:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010f2c:	f7ff f8dc 	bl	80100e8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010f30:	f7ff f8b8 	bl	80100a4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010f34:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010f38:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010f3a:	2d00      	cmp	r5, #0
 8010f3c:	dd14      	ble.n	8010f68 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010f3e:	f104 0810 	add.w	r8, r4, #16
 8010f42:	e003      	b.n	8010f4c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 8010f44:	1e6b      	subs	r3, r5, #1
 8010f46:	b2da      	uxtb	r2, r3
 8010f48:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010f4a:	b16a      	cbz	r2, 8010f68 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010f4c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010f4e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010f50:	b153      	cbz	r3, 8010f68 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010f52:	f000 ff25 	bl	8011da0 <xTaskRemoveFromEventList>
 8010f56:	2800      	cmp	r0, #0
 8010f58:	d0f4      	beq.n	8010f44 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 8010f5a:	f000 ffbd 	bl	8011ed8 <vTaskMissedYield>
				--cRxLock;
 8010f5e:	1e6b      	subs	r3, r5, #1
 8010f60:	b2da      	uxtb	r2, r3
 8010f62:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010f64:	2a00      	cmp	r2, #0
 8010f66:	d1f1      	bne.n	8010f4c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 8010f68:	23ff      	movs	r3, #255	; 0xff
 8010f6a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010f6e:	f7ff f8bb 	bl	80100e8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 8010f72:	f000 fe15 	bl	8011ba0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 8010f76:	f7ff f895 	bl	80100a4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010f7a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010f7c:	2b00      	cmp	r3, #0
 8010f7e:	d07c      	beq.n	801107a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 8010f80:	f7ff f8b2 	bl	80100e8 <vPortExitCritical>
	return xReturn;
 8010f84:	2501      	movs	r5, #1
 8010f86:	e755      	b.n	8010e34 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8010f88:	a802      	add	r0, sp, #8
 8010f8a:	f000 ff51 	bl	8011e30 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 8010f8e:	e75e      	b.n	8010e4e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 8010f90:	23ff      	movs	r3, #255	; 0xff
 8010f92:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010f96:	f7ff f8a7 	bl	80100e8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010f9a:	f7ff f883 	bl	80100a4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010f9e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010fa2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010fa4:	2d00      	cmp	r5, #0
 8010fa6:	dd10      	ble.n	8010fca <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010fa8:	f104 0810 	add.w	r8, r4, #16
 8010fac:	e003      	b.n	8010fb6 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 8010fae:	1e6b      	subs	r3, r5, #1
 8010fb0:	b2da      	uxtb	r2, r3
 8010fb2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010fb4:	b14a      	cbz	r2, 8010fca <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010fb6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010fb8:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010fba:	b133      	cbz	r3, 8010fca <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010fbc:	f000 fef0 	bl	8011da0 <xTaskRemoveFromEventList>
 8010fc0:	2800      	cmp	r0, #0
 8010fc2:	d0f4      	beq.n	8010fae <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 8010fc4:	f000 ff88 	bl	8011ed8 <vTaskMissedYield>
 8010fc8:	e7f1      	b.n	8010fae <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 8010fca:	23ff      	movs	r3, #255	; 0xff
 8010fcc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010fd0:	f7ff f88a 	bl	80100e8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 8010fd4:	f000 fde4 	bl	8011ba0 <xTaskResumeAll>
 8010fd8:	e7d4      	b.n	8010f84 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 8010fda:	f7ff f885 	bl	80100e8 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8010fde:	6823      	ldr	r3, [r4, #0]
 8010fe0:	2b00      	cmp	r3, #0
 8010fe2:	d062      	beq.n	80110aa <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8010fe4:	9901      	ldr	r1, [sp, #4]
 8010fe6:	4630      	mov	r0, r6
 8010fe8:	f000 fe4c 	bl	8011c84 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 8010fec:	f7ff f85a 	bl	80100a4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010ff0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010ff4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010ff6:	2d00      	cmp	r5, #0
 8010ff8:	dc04      	bgt.n	8011004 <xQueueSemaphoreTake+0x204>
 8010ffa:	e00d      	b.n	8011018 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 8010ffc:	1e6b      	subs	r3, r5, #1
 8010ffe:	b2da      	uxtb	r2, r3
 8011000:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8011002:	b14a      	cbz	r2, 8011018 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8011004:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8011006:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8011008:	b133      	cbz	r3, 8011018 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801100a:	f000 fec9 	bl	8011da0 <xTaskRemoveFromEventList>
 801100e:	2800      	cmp	r0, #0
 8011010:	d0f4      	beq.n	8010ffc <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 8011012:	f000 ff61 	bl	8011ed8 <vTaskMissedYield>
 8011016:	e7f1      	b.n	8010ffc <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 8011018:	23ff      	movs	r3, #255	; 0xff
 801101a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 801101e:	f7ff f863 	bl	80100e8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8011022:	f7ff f83f 	bl	80100a4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8011026:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 801102a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 801102c:	2d00      	cmp	r5, #0
 801102e:	dd10      	ble.n	8011052 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8011030:	f104 0810 	add.w	r8, r4, #16
 8011034:	e003      	b.n	801103e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 8011036:	1e6b      	subs	r3, r5, #1
 8011038:	b2da      	uxtb	r2, r3
 801103a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 801103c:	b14a      	cbz	r2, 8011052 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 801103e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8011040:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8011042:	b133      	cbz	r3, 8011052 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8011044:	f000 feac 	bl	8011da0 <xTaskRemoveFromEventList>
 8011048:	2800      	cmp	r0, #0
 801104a:	d0f4      	beq.n	8011036 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 801104c:	f000 ff44 	bl	8011ed8 <vTaskMissedYield>
 8011050:	e7f1      	b.n	8011036 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 8011052:	23ff      	movs	r3, #255	; 0xff
 8011054:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8011058:	f7ff f846 	bl	80100e8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 801105c:	f000 fda0 	bl	8011ba0 <xTaskResumeAll>
 8011060:	2800      	cmp	r0, #0
 8011062:	d18f      	bne.n	8010f84 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 8011064:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8011068:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801106c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8011070:	f3bf 8f4f 	dsb	sy
 8011074:	f3bf 8f6f 	isb	sy
 8011078:	e784      	b.n	8010f84 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 801107a:	f7ff f835 	bl	80100e8 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 801107e:	b92f      	cbnz	r7, 801108c <xQueueSemaphoreTake+0x28c>
}
 8011080:	4638      	mov	r0, r7
 8011082:	b004      	add	sp, #16
 8011084:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011088:	4607      	mov	r7, r0
 801108a:	e6d1      	b.n	8010e30 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 801108c:	f7ff f80a 	bl	80100a4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8011090:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8011092:	b119      	cbz	r1, 801109c <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8011094:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011096:	6819      	ldr	r1, [r3, #0]
 8011098:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 801109c:	68a0      	ldr	r0, [r4, #8]
 801109e:	f000 ffbd 	bl	801201c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 80110a2:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 80110a4:	f7ff f820 	bl	80100e8 <vPortExitCritical>
 80110a8:	e7ea      	b.n	8011080 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 80110aa:	f7fe fffb 	bl	80100a4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80110ae:	68a0      	ldr	r0, [r4, #8]
 80110b0:	f000 ff28 	bl	8011f04 <xTaskPriorityInherit>
 80110b4:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 80110b6:	f7ff f817 	bl	80100e8 <vPortExitCritical>
 80110ba:	e793      	b.n	8010fe4 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 80110bc:	b197      	cbz	r7, 80110e4 <xQueueSemaphoreTake+0x2e4>
 80110be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80110c2:	f383 8811 	msr	BASEPRI, r3
 80110c6:	f3bf 8f6f 	isb	sy
 80110ca:	f3bf 8f4f 	dsb	sy
 80110ce:	e7fe      	b.n	80110ce <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80110d0:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80110d2:	3b01      	subs	r3, #1
 80110d4:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80110d6:	b1ca      	cbz	r2, 801110c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80110d8:	6923      	ldr	r3, [r4, #16]
 80110da:	b933      	cbnz	r3, 80110ea <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 80110dc:	f7ff f804 	bl	80100e8 <vPortExitCritical>
				return pdPASS;
 80110e0:	2701      	movs	r7, #1
 80110e2:	e7cd      	b.n	8011080 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 80110e4:	f7ff f800 	bl	80100e8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 80110e8:	e7ca      	b.n	8011080 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80110ea:	f104 0010 	add.w	r0, r4, #16
 80110ee:	f000 fe57 	bl	8011da0 <xTaskRemoveFromEventList>
 80110f2:	2800      	cmp	r0, #0
 80110f4:	d0f2      	beq.n	80110dc <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 80110f6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80110fa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80110fe:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8011102:	f3bf 8f4f 	dsb	sy
 8011106:	f3bf 8f6f 	isb	sy
 801110a:	e7e7      	b.n	80110dc <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 801110c:	f000 ffda 	bl	80120c4 <pvTaskIncrementMutexHeldCount>
 8011110:	60a0      	str	r0, [r4, #8]
 8011112:	e7e1      	b.n	80110d8 <xQueueSemaphoreTake+0x2d8>

08011114 <xQueueReceiveFromISR>:
{
 8011114:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 8011118:	b310      	cbz	r0, 8011160 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 801111a:	460e      	mov	r6, r1
 801111c:	4617      	mov	r7, r2
 801111e:	4604      	mov	r4, r0
 8011120:	b191      	cbz	r1, 8011148 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8011122:	f7ff f8f3 	bl	801030c <vPortValidateInterruptPriority>
	__asm volatile
 8011126:	f3ef 8911 	mrs	r9, BASEPRI
 801112a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801112e:	f383 8811 	msr	BASEPRI, r3
 8011132:	f3bf 8f6f 	isb	sy
 8011136:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 801113a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 801113c:	b9cd      	cbnz	r5, 8011172 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 801113e:	4628      	mov	r0, r5
	__asm volatile
 8011140:	f389 8811 	msr	BASEPRI, r9
}
 8011144:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8011148:	6c03      	ldr	r3, [r0, #64]	; 0x40
 801114a:	2b00      	cmp	r3, #0
 801114c:	d0e9      	beq.n	8011122 <xQueueReceiveFromISR+0xe>
	__asm volatile
 801114e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011152:	f383 8811 	msr	BASEPRI, r3
 8011156:	f3bf 8f6f 	isb	sy
 801115a:	f3bf 8f4f 	dsb	sy
 801115e:	e7fe      	b.n	801115e <xQueueReceiveFromISR+0x4a>
 8011160:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011164:	f383 8811 	msr	BASEPRI, r3
 8011168:	f3bf 8f6f 	isb	sy
 801116c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8011170:	e7fe      	b.n	8011170 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 8011172:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8011176:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 8011178:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 801117c:	b152      	cbz	r2, 8011194 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 801117e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8011180:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8011182:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8011184:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8011186:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8011188:	bf24      	itt	cs
 801118a:	6821      	ldrcs	r1, [r4, #0]
 801118c:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 801118e:	4630      	mov	r0, r6
 8011190:	f01c ffdd 	bl	802e14e <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8011194:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 8011196:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 801119a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 801119c:	d009      	beq.n	80111b2 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 801119e:	f108 0301 	add.w	r3, r8, #1
 80111a2:	b25b      	sxtb	r3, r3
 80111a4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 80111a8:	2001      	movs	r0, #1
	__asm volatile
 80111aa:	f389 8811 	msr	BASEPRI, r9
}
 80111ae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80111b2:	6923      	ldr	r3, [r4, #16]
 80111b4:	2b00      	cmp	r3, #0
 80111b6:	d0f7      	beq.n	80111a8 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80111b8:	f104 0010 	add.w	r0, r4, #16
 80111bc:	f000 fdf0 	bl	8011da0 <xTaskRemoveFromEventList>
 80111c0:	2800      	cmp	r0, #0
 80111c2:	d0f1      	beq.n	80111a8 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 80111c4:	2f00      	cmp	r7, #0
 80111c6:	d0ef      	beq.n	80111a8 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80111c8:	2001      	movs	r0, #1
 80111ca:	6038      	str	r0, [r7, #0]
 80111cc:	e7b8      	b.n	8011140 <xQueueReceiveFromISR+0x2c>
 80111ce:	bf00      	nop

080111d0 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 80111d0:	b158      	cbz	r0, 80111ea <uxQueueMessagesWaiting+0x1a>
{
 80111d2:	b510      	push	{r4, lr}
 80111d4:	4604      	mov	r4, r0
 80111d6:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 80111d8:	f7fe ff64 	bl	80100a4 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 80111dc:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80111de:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 80111e0:	f7fe ff82 	bl	80100e8 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 80111e4:	9801      	ldr	r0, [sp, #4]
 80111e6:	b002      	add	sp, #8
 80111e8:	bd10      	pop	{r4, pc}
	__asm volatile
 80111ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 80111ee:	f383 8811 	msr	BASEPRI, r3
 80111f2:	f3bf 8f6f 	isb	sy
 80111f6:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 80111fa:	e7fe      	b.n	80111fa <uxQueueMessagesWaiting+0x2a>

080111fc <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 80111fc:	b108      	cbz	r0, 8011202 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 80111fe:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 8011200:	4770      	bx	lr
 8011202:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011206:	f383 8811 	msr	BASEPRI, r3
 801120a:	f3bf 8f6f 	isb	sy
 801120e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8011212:	e7fe      	b.n	8011212 <uxQueueMessagesWaitingFromISR+0x16>
 8011214:	0000      	movs	r0, r0
	...

08011218 <vQueueDelete>:
	configASSERT( pxQueue );
 8011218:	b1f0      	cbz	r0, 8011258 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 801121a:	4b21      	ldr	r3, [pc, #132]	; (80112a0 <vQueueDelete+0x88>)
 801121c:	685a      	ldr	r2, [r3, #4]
 801121e:	4290      	cmp	r0, r2
 8011220:	d025      	beq.n	801126e <vQueueDelete+0x56>
 8011222:	68da      	ldr	r2, [r3, #12]
 8011224:	4290      	cmp	r0, r2
 8011226:	d02c      	beq.n	8011282 <vQueueDelete+0x6a>
 8011228:	695a      	ldr	r2, [r3, #20]
 801122a:	4290      	cmp	r0, r2
 801122c:	d02b      	beq.n	8011286 <vQueueDelete+0x6e>
 801122e:	69da      	ldr	r2, [r3, #28]
 8011230:	4290      	cmp	r0, r2
 8011232:	d02a      	beq.n	801128a <vQueueDelete+0x72>
 8011234:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8011236:	4290      	cmp	r0, r2
 8011238:	d029      	beq.n	801128e <vQueueDelete+0x76>
 801123a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801123c:	4290      	cmp	r0, r2
 801123e:	d01e      	beq.n	801127e <vQueueDelete+0x66>
 8011240:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8011242:	4290      	cmp	r0, r2
 8011244:	d025      	beq.n	8011292 <vQueueDelete+0x7a>
 8011246:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8011248:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 801124a:	bf08      	it	eq
 801124c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 801124e:	d00f      	beq.n	8011270 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8011250:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 8011254:	b14b      	cbz	r3, 801126a <vQueueDelete+0x52>
}
 8011256:	4770      	bx	lr
 8011258:	f04f 0350 	mov.w	r3, #80	; 0x50
 801125c:	f383 8811 	msr	BASEPRI, r3
 8011260:	f3bf 8f6f 	isb	sy
 8011264:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8011268:	e7fe      	b.n	8011268 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 801126a:	f7fe be07 	b.w	800fe7c <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 801126e:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8011270:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8011298 <vQueueDelete+0x80>
 8011274:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8011278:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 801127c:	e7e8      	b.n	8011250 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 801127e:	2205      	movs	r2, #5
 8011280:	e7f6      	b.n	8011270 <vQueueDelete+0x58>
 8011282:	2201      	movs	r2, #1
 8011284:	e7f4      	b.n	8011270 <vQueueDelete+0x58>
 8011286:	2202      	movs	r2, #2
 8011288:	e7f2      	b.n	8011270 <vQueueDelete+0x58>
 801128a:	2203      	movs	r2, #3
 801128c:	e7f0      	b.n	8011270 <vQueueDelete+0x58>
 801128e:	2204      	movs	r2, #4
 8011290:	e7ee      	b.n	8011270 <vQueueDelete+0x58>
 8011292:	2206      	movs	r2, #6
 8011294:	e7ec      	b.n	8011270 <vQueueDelete+0x58>
 8011296:	bf00      	nop
	...
 80112a0:	200131d8 	.word	0x200131d8

080112a4 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80112a4:	4b12      	ldr	r3, [pc, #72]	; (80112f0 <vQueueAddToRegistry+0x4c>)
 80112a6:	681a      	ldr	r2, [r3, #0]
 80112a8:	b17a      	cbz	r2, 80112ca <vQueueAddToRegistry+0x26>
 80112aa:	689a      	ldr	r2, [r3, #8]
 80112ac:	b162      	cbz	r2, 80112c8 <vQueueAddToRegistry+0x24>
 80112ae:	691a      	ldr	r2, [r3, #16]
 80112b0:	b192      	cbz	r2, 80112d8 <vQueueAddToRegistry+0x34>
 80112b2:	699a      	ldr	r2, [r3, #24]
 80112b4:	b192      	cbz	r2, 80112dc <vQueueAddToRegistry+0x38>
 80112b6:	6a1a      	ldr	r2, [r3, #32]
 80112b8:	b192      	cbz	r2, 80112e0 <vQueueAddToRegistry+0x3c>
 80112ba:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80112bc:	b192      	cbz	r2, 80112e4 <vQueueAddToRegistry+0x40>
 80112be:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80112c0:	b192      	cbz	r2, 80112e8 <vQueueAddToRegistry+0x44>
 80112c2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80112c4:	b192      	cbz	r2, 80112ec <vQueueAddToRegistry+0x48>
	}
 80112c6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80112c8:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 80112ca:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80112ce:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80112d2:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 80112d6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80112d8:	2202      	movs	r2, #2
 80112da:	e7f6      	b.n	80112ca <vQueueAddToRegistry+0x26>
 80112dc:	2203      	movs	r2, #3
 80112de:	e7f4      	b.n	80112ca <vQueueAddToRegistry+0x26>
 80112e0:	2204      	movs	r2, #4
 80112e2:	e7f2      	b.n	80112ca <vQueueAddToRegistry+0x26>
 80112e4:	2205      	movs	r2, #5
 80112e6:	e7f0      	b.n	80112ca <vQueueAddToRegistry+0x26>
 80112e8:	2206      	movs	r2, #6
 80112ea:	e7ee      	b.n	80112ca <vQueueAddToRegistry+0x26>
 80112ec:	2207      	movs	r2, #7
 80112ee:	e7ec      	b.n	80112ca <vQueueAddToRegistry+0x26>
 80112f0:	200131d8 	.word	0x200131d8

080112f4 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 80112f4:	b570      	push	{r4, r5, r6, lr}
 80112f6:	4605      	mov	r5, r0
 80112f8:	460e      	mov	r6, r1
 80112fa:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 80112fc:	f7fe fed2 	bl	80100a4 <vPortEnterCritical>
 8011300:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 8011304:	2bff      	cmp	r3, #255	; 0xff
 8011306:	bf04      	itt	eq
 8011308:	2300      	moveq	r3, #0
 801130a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 801130e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 8011312:	2bff      	cmp	r3, #255	; 0xff
 8011314:	bf04      	itt	eq
 8011316:	2300      	moveq	r3, #0
 8011318:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 801131c:	f7fe fee4 	bl	80100e8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8011320:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8011322:	2b00      	cmp	r3, #0
 8011324:	d043      	beq.n	80113ae <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 8011326:	f7fe febd 	bl	80100a4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 801132a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 801132e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8011330:	2c00      	cmp	r4, #0
 8011332:	dd14      	ble.n	801135e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8011334:	f105 0624 	add.w	r6, r5, #36	; 0x24
 8011338:	e003      	b.n	8011342 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 801133a:	1e63      	subs	r3, r4, #1
 801133c:	b2da      	uxtb	r2, r3
 801133e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8011340:	b16a      	cbz	r2, 801135e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8011342:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8011344:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8011346:	b153      	cbz	r3, 801135e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8011348:	f000 fd2a 	bl	8011da0 <xTaskRemoveFromEventList>
 801134c:	2800      	cmp	r0, #0
 801134e:	d0f4      	beq.n	801133a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 8011350:	f000 fdc2 	bl	8011ed8 <vTaskMissedYield>
			--cTxLock;
 8011354:	1e63      	subs	r3, r4, #1
 8011356:	b2da      	uxtb	r2, r3
 8011358:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 801135a:	2a00      	cmp	r2, #0
 801135c:	d1f1      	bne.n	8011342 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 801135e:	23ff      	movs	r3, #255	; 0xff
 8011360:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 8011364:	f7fe fec0 	bl	80100e8 <vPortExitCritical>
	taskENTER_CRITICAL();
 8011368:	f7fe fe9c 	bl	80100a4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 801136c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 8011370:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8011372:	2c00      	cmp	r4, #0
 8011374:	dd14      	ble.n	80113a0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8011376:	f105 0610 	add.w	r6, r5, #16
 801137a:	e003      	b.n	8011384 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 801137c:	1e63      	subs	r3, r4, #1
 801137e:	b2da      	uxtb	r2, r3
 8011380:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8011382:	b16a      	cbz	r2, 80113a0 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8011384:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8011386:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8011388:	b153      	cbz	r3, 80113a0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801138a:	f000 fd09 	bl	8011da0 <xTaskRemoveFromEventList>
 801138e:	2800      	cmp	r0, #0
 8011390:	d0f4      	beq.n	801137c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 8011392:	f000 fda1 	bl	8011ed8 <vTaskMissedYield>
				--cRxLock;
 8011396:	1e63      	subs	r3, r4, #1
 8011398:	b2da      	uxtb	r2, r3
 801139a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 801139c:	2a00      	cmp	r2, #0
 801139e:	d1f1      	bne.n	8011384 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 80113a0:	23ff      	movs	r3, #255	; 0xff
 80113a2:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 80113a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 80113aa:	f7fe be9d 	b.w	80100e8 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80113ae:	4622      	mov	r2, r4
 80113b0:	4631      	mov	r1, r6
 80113b2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 80113b6:	f000 fca9 	bl	8011d0c <vTaskPlaceOnEventListRestricted>
 80113ba:	e7b4      	b.n	8011326 <vQueueWaitForMessageRestricted+0x32>

080113bc <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80113bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80113c0:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80113c2:	f7fe fe6f 	bl	80100a4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80113c6:	4a34      	ldr	r2, [pc, #208]	; (8011498 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 80113c8:	4e34      	ldr	r6, [pc, #208]	; (801149c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 80113ca:	6813      	ldr	r3, [r2, #0]
 80113cc:	3301      	adds	r3, #1
 80113ce:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 80113d0:	6833      	ldr	r3, [r6, #0]
 80113d2:	2b00      	cmp	r3, #0
 80113d4:	d032      	beq.n	801143c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 80113d6:	4c32      	ldr	r4, [pc, #200]	; (80114a0 <prvAddNewTaskToReadyList+0xe4>)
 80113d8:	6823      	ldr	r3, [r4, #0]
 80113da:	b33b      	cbz	r3, 801142c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80113dc:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 80113de:	4f31      	ldr	r7, [pc, #196]	; (80114a4 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 80113e0:	4a31      	ldr	r2, [pc, #196]	; (80114a8 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 80113e2:	4932      	ldr	r1, [pc, #200]	; (80114ac <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 80113e4:	6813      	ldr	r3, [r2, #0]
 80113e6:	3301      	adds	r3, #1
 80113e8:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 80113ea:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 80113ec:	680b      	ldr	r3, [r1, #0]
 80113ee:	4283      	cmp	r3, r0
 80113f0:	bf38      	it	cc
 80113f2:	6008      	strcc	r0, [r1, #0]
 80113f4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80113f8:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 80113fc:	1d29      	adds	r1, r5, #4
 80113fe:	f7fe fdb1 	bl	800ff64 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 8011402:	f7fe fe71 	bl	80100e8 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 8011406:	6823      	ldr	r3, [r4, #0]
 8011408:	b173      	cbz	r3, 8011428 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 801140a:	6832      	ldr	r2, [r6, #0]
 801140c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 801140e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8011410:	429a      	cmp	r2, r3
 8011412:	d209      	bcs.n	8011428 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 8011414:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8011418:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801141c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8011420:	f3bf 8f4f 	dsb	sy
 8011424:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8011428:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 801142c:	6833      	ldr	r3, [r6, #0]
 801142e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 8011430:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011432:	4f1c      	ldr	r7, [pc, #112]	; (80114a4 <prvAddNewTaskToReadyList+0xe8>)
 8011434:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 8011436:	bf98      	it	ls
 8011438:	6035      	strls	r5, [r6, #0]
 801143a:	e7d1      	b.n	80113e0 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 801143c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 801143e:	6813      	ldr	r3, [r2, #0]
 8011440:	2b01      	cmp	r3, #1
 8011442:	d003      	beq.n	801144c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8011444:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 8011446:	4f17      	ldr	r7, [pc, #92]	; (80114a4 <prvAddNewTaskToReadyList+0xe8>)
 8011448:	4c15      	ldr	r4, [pc, #84]	; (80114a0 <prvAddNewTaskToReadyList+0xe4>)
 801144a:	e7c9      	b.n	80113e0 <prvAddNewTaskToReadyList+0x24>
 801144c:	4f15      	ldr	r7, [pc, #84]	; (80114a4 <prvAddNewTaskToReadyList+0xe8>)
 801144e:	463c      	mov	r4, r7
 8011450:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8011454:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8011456:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8011458:	f7fe fd74 	bl	800ff44 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 801145c:	45a0      	cmp	r8, r4
 801145e:	d1f9      	bne.n	8011454 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 8011460:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80114c4 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 8011464:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80114c8 <prvAddNewTaskToReadyList+0x10c>
 8011468:	4c0d      	ldr	r4, [pc, #52]	; (80114a0 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 801146a:	4648      	mov	r0, r9
 801146c:	f7fe fd6a 	bl	800ff44 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8011470:	4640      	mov	r0, r8
 8011472:	f7fe fd67 	bl	800ff44 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8011476:	480e      	ldr	r0, [pc, #56]	; (80114b0 <prvAddNewTaskToReadyList+0xf4>)
 8011478:	f7fe fd64 	bl	800ff44 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 801147c:	480d      	ldr	r0, [pc, #52]	; (80114b4 <prvAddNewTaskToReadyList+0xf8>)
 801147e:	f7fe fd61 	bl	800ff44 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8011482:	480d      	ldr	r0, [pc, #52]	; (80114b8 <prvAddNewTaskToReadyList+0xfc>)
 8011484:	f7fe fd5e 	bl	800ff44 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8011488:	4b0c      	ldr	r3, [pc, #48]	; (80114bc <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 801148a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 801148c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8011490:	4b0b      	ldr	r3, [pc, #44]	; (80114c0 <prvAddNewTaskToReadyList+0x104>)
 8011492:	f8c3 8000 	str.w	r8, [r3]
}
 8011496:	e7a3      	b.n	80113e0 <prvAddNewTaskToReadyList+0x24>
 8011498:	20013684 	.word	0x20013684
 801149c:	20013218 	.word	0x20013218
 80114a0:	200136e0 	.word	0x200136e0
 80114a4:	20013224 	.word	0x20013224
 80114a8:	20013690 	.word	0x20013690
 80114ac:	20013694 	.word	0x20013694
 80114b0:	200136cc 	.word	0x200136cc
 80114b4:	200136f8 	.word	0x200136f8
 80114b8:	200136e4 	.word	0x200136e4
 80114bc:	2001321c 	.word	0x2001321c
 80114c0:	20013220 	.word	0x20013220
 80114c4:	20013698 	.word	0x20013698
 80114c8:	200136ac 	.word	0x200136ac

080114cc <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80114cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80114d0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80114d2:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80114d6:	ea4f 0982 	mov.w	r9, r2, lsl #2
 80114da:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80114dc:	4606      	mov	r6, r0
 80114de:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80114e0:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80114e2:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80114e4:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80114e6:	f01c fd0c 	bl	802df02 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80114ea:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80114ec:	f1a9 0904 	sub.w	r9, r9, #4
 80114f0:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 80114f2:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 80114f6:	2d00      	cmp	r5, #0
 80114f8:	d079      	beq.n	80115ee <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80114fa:	782b      	ldrb	r3, [r5, #0]
 80114fc:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 8011500:	2b00      	cmp	r3, #0
 8011502:	d03b      	beq.n	801157c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011504:	786b      	ldrb	r3, [r5, #1]
 8011506:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 801150a:	2b00      	cmp	r3, #0
 801150c:	d036      	beq.n	801157c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801150e:	78ab      	ldrb	r3, [r5, #2]
 8011510:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 8011514:	b393      	cbz	r3, 801157c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011516:	78eb      	ldrb	r3, [r5, #3]
 8011518:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 801151c:	b373      	cbz	r3, 801157c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801151e:	792b      	ldrb	r3, [r5, #4]
 8011520:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 8011524:	b353      	cbz	r3, 801157c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011526:	796b      	ldrb	r3, [r5, #5]
 8011528:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 801152c:	b333      	cbz	r3, 801157c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801152e:	79ab      	ldrb	r3, [r5, #6]
 8011530:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 8011534:	b313      	cbz	r3, 801157c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011536:	79eb      	ldrb	r3, [r5, #7]
 8011538:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 801153c:	b1f3      	cbz	r3, 801157c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801153e:	7a2b      	ldrb	r3, [r5, #8]
 8011540:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 8011544:	b1d3      	cbz	r3, 801157c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011546:	7a6b      	ldrb	r3, [r5, #9]
 8011548:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 801154c:	b1b3      	cbz	r3, 801157c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801154e:	7aab      	ldrb	r3, [r5, #10]
 8011550:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 8011554:	b193      	cbz	r3, 801157c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011556:	7aeb      	ldrb	r3, [r5, #11]
 8011558:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 801155c:	b173      	cbz	r3, 801157c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801155e:	7b2b      	ldrb	r3, [r5, #12]
 8011560:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 8011564:	b153      	cbz	r3, 801157c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011566:	7b6b      	ldrb	r3, [r5, #13]
 8011568:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 801156c:	b133      	cbz	r3, 801157c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801156e:	7bab      	ldrb	r3, [r5, #14]
 8011570:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 8011574:	b113      	cbz	r3, 801157c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011576:	7beb      	ldrb	r3, [r5, #15]
 8011578:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 801157c:	2300      	movs	r3, #0
 801157e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8011582:	9d08      	ldr	r5, [sp, #32]
 8011584:	2d37      	cmp	r5, #55	; 0x37
 8011586:	bf28      	it	cs
 8011588:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 801158a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 801158e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8011590:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8011592:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8011594:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8011598:	f7fe fce0 	bl	800ff5c <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801159c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 80115a0:	f104 0018 	add.w	r0, r4, #24
 80115a4:	f7fe fcda 	bl	800ff5c <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80115a8:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 80115aa:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 80115ae:	4651      	mov	r1, sl
 80115b0:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 80115b2:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 80115b4:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 80115b6:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 80115ba:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 80115be:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80115c2:	f01c fc9e 	bl	802df02 <memset>
 80115c6:	4b0b      	ldr	r3, [pc, #44]	; (80115f4 <prvInitialiseNewTask.constprop.0+0x128>)
 80115c8:	65e3      	str	r3, [r4, #92]	; 0x5c
 80115ca:	f103 0568 	add.w	r5, r3, #104	; 0x68
 80115ce:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80115d0:	463a      	mov	r2, r7
 80115d2:	4631      	mov	r1, r6
 80115d4:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 80115d6:	6625      	str	r5, [r4, #96]	; 0x60
 80115d8:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80115da:	f7fe fd3d 	bl	8010058 <pxPortInitialiseStack>
 80115de:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 80115e0:	f1b8 0f00 	cmp.w	r8, #0
 80115e4:	d001      	beq.n	80115ea <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 80115e6:	f8c8 4000 	str.w	r4, [r8]
}
 80115ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 80115ee:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 80115f2:	e7c6      	b.n	8011582 <prvInitialiseNewTask.constprop.0+0xb6>
 80115f4:	200141a8 	.word	0x200141a8

080115f8 <prvIdleTask>:
{
 80115f8:	b580      	push	{r7, lr}
 80115fa:	4d23      	ldr	r5, [pc, #140]	; (8011688 <prvIdleTask+0x90>)
 80115fc:	4f23      	ldr	r7, [pc, #140]	; (801168c <prvIdleTask+0x94>)
 80115fe:	4e24      	ldr	r6, [pc, #144]	; (8011690 <prvIdleTask+0x98>)
 8011600:	f8df 8090 	ldr.w	r8, [pc, #144]	; 8011694 <prvIdleTask+0x9c>
				taskYIELD();
 8011604:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 8011608:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 801160c:	682b      	ldr	r3, [r5, #0]
 801160e:	b35b      	cbz	r3, 8011668 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 8011610:	f7fe fd48 	bl	80100a4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011614:	68fb      	ldr	r3, [r7, #12]
 8011616:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011618:	1d20      	adds	r0, r4, #4
 801161a:	f7fe fccb 	bl	800ffb4 <uxListRemove>
				--uxCurrentNumberOfTasks;
 801161e:	6833      	ldr	r3, [r6, #0]
 8011620:	3b01      	subs	r3, #1
 8011622:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 8011624:	682b      	ldr	r3, [r5, #0]
 8011626:	3b01      	subs	r3, #1
 8011628:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 801162a:	f7fe fd5d 	bl	80100e8 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 801162e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8011632:	f01c fcaf 	bl	802df94 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8011636:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 801163a:	b163      	cbz	r3, 8011656 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 801163c:	2b01      	cmp	r3, #1
 801163e:	d01e      	beq.n	801167e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8011640:	2b02      	cmp	r3, #2
 8011642:	d0e3      	beq.n	801160c <prvIdleTask+0x14>
 8011644:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011648:	f383 8811 	msr	BASEPRI, r3
 801164c:	f3bf 8f6f 	isb	sy
 8011650:	f3bf 8f4f 	dsb	sy
 8011654:	e7fe      	b.n	8011654 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 8011656:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8011658:	f7fe fc10 	bl	800fe7c <vPortFree>
				vPortFree( pxTCB );
 801165c:	4620      	mov	r0, r4
 801165e:	f7fe fc0d 	bl	800fe7c <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8011662:	682b      	ldr	r3, [r5, #0]
 8011664:	2b00      	cmp	r3, #0
 8011666:	d1d3      	bne.n	8011610 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8011668:	f8d8 3000 	ldr.w	r3, [r8]
 801166c:	2b01      	cmp	r3, #1
 801166e:	d9cd      	bls.n	801160c <prvIdleTask+0x14>
				taskYIELD();
 8011670:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 8011674:	f3bf 8f4f 	dsb	sy
 8011678:	f3bf 8f6f 	isb	sy
 801167c:	e7c6      	b.n	801160c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 801167e:	4620      	mov	r0, r4
 8011680:	f7fe fbfc 	bl	800fe7c <vPortFree>
 8011684:	e7c2      	b.n	801160c <prvIdleTask+0x14>
 8011686:	bf00      	nop
 8011688:	20013688 	.word	0x20013688
 801168c:	200136f8 	.word	0x200136f8
 8011690:	20013684 	.word	0x20013684
 8011694:	20013224 	.word	0x20013224

08011698 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 8011698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 801169c:	4b47      	ldr	r3, [pc, #284]	; (80117bc <xTaskIncrementTick.part.0+0x124>)
 801169e:	681e      	ldr	r6, [r3, #0]
 80116a0:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 80116a2:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 80116a4:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 80116a6:	2e00      	cmp	r6, #0
 80116a8:	d040      	beq.n	801172c <xTaskIncrementTick.part.0+0x94>
 80116aa:	f8df b124 	ldr.w	fp, [pc, #292]	; 80117d0 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 80116ae:	f8db 3000 	ldr.w	r3, [fp]
 80116b2:	429e      	cmp	r6, r3
 80116b4:	d347      	bcc.n	8011746 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80116b6:	4f42      	ldr	r7, [pc, #264]	; (80117c0 <xTaskIncrementTick.part.0+0x128>)
 80116b8:	f8df 9118 	ldr.w	r9, [pc, #280]	; 80117d4 <xTaskIncrementTick.part.0+0x13c>
 80116bc:	683b      	ldr	r3, [r7, #0]
 80116be:	f8df a118 	ldr.w	sl, [pc, #280]	; 80117d8 <xTaskIncrementTick.part.0+0x140>
 80116c2:	681d      	ldr	r5, [r3, #0]
 80116c4:	2d00      	cmp	r5, #0
 80116c6:	d073      	beq.n	80117b0 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 80116c8:	f8df 8110 	ldr.w	r8, [pc, #272]	; 80117dc <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 80116cc:	2500      	movs	r5, #0
 80116ce:	e022      	b.n	8011716 <xTaskIncrementTick.part.0+0x7e>
 80116d0:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80116d2:	f7fe fc6f 	bl	800ffb4 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 80116d6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80116d8:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80116da:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 80116de:	b113      	cbz	r3, 80116e6 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80116e0:	f7fe fc68 	bl	800ffb4 <uxListRemove>
 80116e4:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 80116e6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80116e8:	f8d8 2000 	ldr.w	r2, [r8]
 80116ec:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 80116f0:	4293      	cmp	r3, r2
 80116f2:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 80116f6:	bf88      	it	hi
 80116f8:	f8c8 3000 	strhi.w	r3, [r8]
 80116fc:	f7fe fc32 	bl	800ff64 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8011700:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011704:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8011706:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011708:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 801170a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 801170c:	4291      	cmp	r1, r2
 801170e:	bf28      	it	cs
 8011710:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011712:	2b00      	cmp	r3, #0
 8011714:	d04c      	beq.n	80117b0 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011716:	683b      	ldr	r3, [r7, #0]
 8011718:	68db      	ldr	r3, [r3, #12]
 801171a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 801171c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 801171e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 8011720:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011722:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 8011724:	d2d4      	bcs.n	80116d0 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 8011726:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 801172a:	e011      	b.n	8011750 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 801172c:	4b24      	ldr	r3, [pc, #144]	; (80117c0 <xTaskIncrementTick.part.0+0x128>)
 801172e:	681a      	ldr	r2, [r3, #0]
 8011730:	6812      	ldr	r2, [r2, #0]
 8011732:	b30a      	cbz	r2, 8011778 <xTaskIncrementTick.part.0+0xe0>
 8011734:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011738:	f383 8811 	msr	BASEPRI, r3
 801173c:	f3bf 8f6f 	isb	sy
 8011740:	f3bf 8f4f 	dsb	sy
 8011744:	e7fe      	b.n	8011744 <xTaskIncrementTick.part.0+0xac>
 8011746:	f8df 908c 	ldr.w	r9, [pc, #140]	; 80117d4 <xTaskIncrementTick.part.0+0x13c>
 801174a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 80117d8 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 801174e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8011750:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 8011754:	491b      	ldr	r1, [pc, #108]	; (80117c4 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8011756:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011758:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801175c:	009b      	lsls	r3, r3, #2
 801175e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 8011762:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 8011764:	2a02      	cmp	r2, #2
 8011766:	bf28      	it	cs
 8011768:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 801176a:	2b00      	cmp	r3, #0
}
 801176c:	bf0c      	ite	eq
 801176e:	4628      	moveq	r0, r5
 8011770:	2001      	movne	r0, #1
 8011772:	b003      	add	sp, #12
 8011774:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 8011778:	4a13      	ldr	r2, [pc, #76]	; (80117c8 <xTaskIncrementTick.part.0+0x130>)
 801177a:	6818      	ldr	r0, [r3, #0]
 801177c:	6811      	ldr	r1, [r2, #0]
 801177e:	6019      	str	r1, [r3, #0]
 8011780:	4912      	ldr	r1, [pc, #72]	; (80117cc <xTaskIncrementTick.part.0+0x134>)
 8011782:	6010      	str	r0, [r2, #0]
 8011784:	680a      	ldr	r2, [r1, #0]
 8011786:	3201      	adds	r2, #1
 8011788:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 801178a:	681a      	ldr	r2, [r3, #0]
 801178c:	6812      	ldr	r2, [r2, #0]
 801178e:	b932      	cbnz	r2, 801179e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 8011790:	f8df b03c 	ldr.w	fp, [pc, #60]	; 80117d0 <xTaskIncrementTick.part.0+0x138>
 8011794:	f04f 33ff 	mov.w	r3, #4294967295
 8011798:	f8cb 3000 	str.w	r3, [fp]
 801179c:	e787      	b.n	80116ae <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 801179e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80117a0:	f8df b02c 	ldr.w	fp, [pc, #44]	; 80117d0 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80117a4:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80117a6:	68db      	ldr	r3, [r3, #12]
 80117a8:	685b      	ldr	r3, [r3, #4]
 80117aa:	f8cb 3000 	str.w	r3, [fp]
	}
}
 80117ae:	e77e      	b.n	80116ae <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80117b0:	f04f 33ff 	mov.w	r3, #4294967295
 80117b4:	f8cb 3000 	str.w	r3, [fp]
					break;
 80117b8:	e7ca      	b.n	8011750 <xTaskIncrementTick.part.0+0xb8>
 80117ba:	bf00      	nop
 80117bc:	2001370c 	.word	0x2001370c
 80117c0:	2001321c 	.word	0x2001321c
 80117c4:	20013710 	.word	0x20013710
 80117c8:	20013220 	.word	0x20013220
 80117cc:	200136c4 	.word	0x200136c4
 80117d0:	200136c0 	.word	0x200136c0
 80117d4:	20013224 	.word	0x20013224
 80117d8:	20013218 	.word	0x20013218
 80117dc:	20013694 	.word	0x20013694

080117e0 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 80117e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 80117e4:	4d41      	ldr	r5, [pc, #260]	; (80118ec <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 80117e6:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 80117e8:	f7fe fc5c 	bl	80100a4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 80117ec:	682b      	ldr	r3, [r5, #0]
 80117ee:	3b01      	subs	r3, #1
 80117f0:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80117f2:	682b      	ldr	r3, [r5, #0]
 80117f4:	2b00      	cmp	r3, #0
 80117f6:	d161      	bne.n	80118bc <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 80117f8:	4b3d      	ldr	r3, [pc, #244]	; (80118f0 <xTaskResumeAll.part.0+0x110>)
 80117fa:	681b      	ldr	r3, [r3, #0]
 80117fc:	2b00      	cmp	r3, #0
 80117fe:	d05d      	beq.n	80118bc <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8011800:	4e3c      	ldr	r6, [pc, #240]	; (80118f4 <xTaskResumeAll.part.0+0x114>)
 8011802:	6833      	ldr	r3, [r6, #0]
 8011804:	2b00      	cmp	r3, #0
 8011806:	d06e      	beq.n	80118e6 <xTaskResumeAll.part.0+0x106>
 8011808:	4f3b      	ldr	r7, [pc, #236]	; (80118f8 <xTaskResumeAll.part.0+0x118>)
 801180a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 8011908 <xTaskResumeAll.part.0+0x128>
 801180e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 801190c <xTaskResumeAll.part.0+0x12c>
 8011812:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 8011910 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011816:	68f3      	ldr	r3, [r6, #12]
 8011818:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 801181a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 801181e:	f104 0018 	add.w	r0, r4, #24
 8011822:	f7fe fbc7 	bl	800ffb4 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011826:	4658      	mov	r0, fp
 8011828:	f7fe fbc4 	bl	800ffb4 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 801182c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801182e:	683a      	ldr	r2, [r7, #0]
 8011830:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 8011834:	4293      	cmp	r3, r2
 8011836:	4659      	mov	r1, fp
 8011838:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 801183c:	bf88      	it	hi
 801183e:	603b      	strhi	r3, [r7, #0]
 8011840:	f7fe fb90 	bl	800ff64 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8011844:	f8d8 3000 	ldr.w	r3, [r8]
 8011848:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801184a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801184c:	429a      	cmp	r2, r3
 801184e:	d33d      	bcc.n	80118cc <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 8011850:	2301      	movs	r3, #1
 8011852:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8011856:	6833      	ldr	r3, [r6, #0]
 8011858:	2b00      	cmp	r3, #0
 801185a:	d1dc      	bne.n	8011816 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 801185c:	4b27      	ldr	r3, [pc, #156]	; (80118fc <xTaskResumeAll.part.0+0x11c>)
 801185e:	681a      	ldr	r2, [r3, #0]
 8011860:	6812      	ldr	r2, [r2, #0]
 8011862:	2a00      	cmp	r2, #0
 8011864:	d03a      	beq.n	80118dc <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011866:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8011868:	4b25      	ldr	r3, [pc, #148]	; (8011900 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 801186a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 801186c:	68d2      	ldr	r2, [r2, #12]
 801186e:	6852      	ldr	r2, [r2, #4]
 8011870:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8011872:	4e24      	ldr	r6, [pc, #144]	; (8011904 <xTaskResumeAll.part.0+0x124>)
 8011874:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8011876:	b194      	cbz	r4, 801189e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 8011878:	2701      	movs	r7, #1
 801187a:	e006      	b.n	801188a <xTaskResumeAll.part.0+0xaa>
 801187c:	f7ff ff0c 	bl	8011698 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 8011880:	b108      	cbz	r0, 8011886 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 8011882:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8011886:	3c01      	subs	r4, #1
 8011888:	d008      	beq.n	801189c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 801188a:	682b      	ldr	r3, [r5, #0]
 801188c:	2b00      	cmp	r3, #0
 801188e:	d0f5      	beq.n	801187c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 8011890:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8011892:	3c01      	subs	r4, #1
		++xPendedTicks;
 8011894:	f103 0301 	add.w	r3, r3, #1
 8011898:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 801189a:	d1f6      	bne.n	801188a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 801189c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 801189e:	f8da 3000 	ldr.w	r3, [sl]
 80118a2:	b15b      	cbz	r3, 80118bc <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 80118a4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80118a8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80118ac:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80118b0:	f3bf 8f4f 	dsb	sy
 80118b4:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 80118b8:	2001      	movs	r0, #1
 80118ba:	e000      	b.n	80118be <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 80118bc:	2000      	movs	r0, #0
 80118be:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 80118c0:	f7fe fc12 	bl	80100e8 <vPortExitCritical>
}
 80118c4:	9801      	ldr	r0, [sp, #4]
 80118c6:	b003      	add	sp, #12
 80118c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80118cc:	6833      	ldr	r3, [r6, #0]
 80118ce:	2b00      	cmp	r3, #0
 80118d0:	d1a1      	bne.n	8011816 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80118d2:	4b0a      	ldr	r3, [pc, #40]	; (80118fc <xTaskResumeAll.part.0+0x11c>)
 80118d4:	681a      	ldr	r2, [r3, #0]
 80118d6:	6812      	ldr	r2, [r2, #0]
 80118d8:	2a00      	cmp	r2, #0
 80118da:	d1c4      	bne.n	8011866 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 80118dc:	4b08      	ldr	r3, [pc, #32]	; (8011900 <xTaskResumeAll.part.0+0x120>)
 80118de:	f04f 32ff 	mov.w	r2, #4294967295
 80118e2:	601a      	str	r2, [r3, #0]
 80118e4:	e7c5      	b.n	8011872 <xTaskResumeAll.part.0+0x92>
 80118e6:	f8df a028 	ldr.w	sl, [pc, #40]	; 8011910 <xTaskResumeAll.part.0+0x130>
 80118ea:	e7c2      	b.n	8011872 <xTaskResumeAll.part.0+0x92>
 80118ec:	2001368c 	.word	0x2001368c
 80118f0:	20013684 	.word	0x20013684
 80118f4:	200136cc 	.word	0x200136cc
 80118f8:	20013694 	.word	0x20013694
 80118fc:	2001321c 	.word	0x2001321c
 8011900:	200136c0 	.word	0x200136c0
 8011904:	200136c8 	.word	0x200136c8
 8011908:	20013224 	.word	0x20013224
 801190c:	20013218 	.word	0x20013218
 8011910:	20013710 	.word	0x20013710

08011914 <xTaskCreateStatic>:
	{
 8011914:	b530      	push	{r4, r5, lr}
 8011916:	b087      	sub	sp, #28
 8011918:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 801191a:	b1c4      	cbz	r4, 801194e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 801191c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801191e:	b16d      	cbz	r5, 801193c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 8011920:	25ac      	movs	r5, #172	; 0xac
 8011922:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8011924:	9d05      	ldr	r5, [sp, #20]
 8011926:	2dac      	cmp	r5, #172	; 0xac
 8011928:	d01a      	beq.n	8011960 <xTaskCreateStatic+0x4c>
 801192a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801192e:	f383 8811 	msr	BASEPRI, r3
 8011932:	f3bf 8f6f 	isb	sy
 8011936:	f3bf 8f4f 	dsb	sy
 801193a:	e7fe      	b.n	801193a <xTaskCreateStatic+0x26>
 801193c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011940:	f383 8811 	msr	BASEPRI, r3
 8011944:	f3bf 8f6f 	isb	sy
 8011948:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 801194c:	e7fe      	b.n	801194c <xTaskCreateStatic+0x38>
 801194e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011952:	f383 8811 	msr	BASEPRI, r3
 8011956:	f3bf 8f6f 	isb	sy
 801195a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 801195e:	e7fe      	b.n	801195e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8011960:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8011962:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8011964:	2402      	movs	r4, #2
 8011966:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 801196a:	ac04      	add	r4, sp, #16
 801196c:	e9cd 4501 	strd	r4, r5, [sp, #4]
 8011970:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8011972:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8011974:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011976:	f7ff fda9 	bl	80114cc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 801197a:	980c      	ldr	r0, [sp, #48]	; 0x30
 801197c:	f7ff fd1e 	bl	80113bc <prvAddNewTaskToReadyList>
	}
 8011980:	9804      	ldr	r0, [sp, #16]
 8011982:	b007      	add	sp, #28
 8011984:	bd30      	pop	{r4, r5, pc}
 8011986:	bf00      	nop

08011988 <xTaskCreate>:
	{
 8011988:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801198c:	4607      	mov	r7, r0
 801198e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8011990:	0090      	lsls	r0, r2, #2
	{
 8011992:	4615      	mov	r5, r2
 8011994:	4688      	mov	r8, r1
 8011996:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8011998:	f7fe f9b4 	bl	800fd04 <pvPortMalloc>
			if( pxStack != NULL )
 801199c:	b1d8      	cbz	r0, 80119d6 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 801199e:	4604      	mov	r4, r0
 80119a0:	20ac      	movs	r0, #172	; 0xac
 80119a2:	f7fe f9af 	bl	800fd04 <pvPortMalloc>
				if( pxNewTCB != NULL )
 80119a6:	4606      	mov	r6, r0
 80119a8:	b1d0      	cbz	r0, 80119e0 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 80119aa:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 80119ac:	2400      	movs	r4, #0
 80119ae:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80119b2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80119b4:	9401      	str	r4, [sp, #4]
 80119b6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80119b8:	9602      	str	r6, [sp, #8]
 80119ba:	464b      	mov	r3, r9
 80119bc:	462a      	mov	r2, r5
 80119be:	4641      	mov	r1, r8
 80119c0:	4638      	mov	r0, r7
 80119c2:	9400      	str	r4, [sp, #0]
 80119c4:	f7ff fd82 	bl	80114cc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80119c8:	4630      	mov	r0, r6
 80119ca:	f7ff fcf7 	bl	80113bc <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 80119ce:	2001      	movs	r0, #1
	}
 80119d0:	b005      	add	sp, #20
 80119d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80119d6:	f04f 30ff 	mov.w	r0, #4294967295
	}
 80119da:	b005      	add	sp, #20
 80119dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 80119e0:	4620      	mov	r0, r4
 80119e2:	f7fe fa4b 	bl	800fe7c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80119e6:	f04f 30ff 	mov.w	r0, #4294967295
 80119ea:	e7f1      	b.n	80119d0 <xTaskCreate+0x48>

080119ec <vTaskDelay>:
	{
 80119ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 80119ee:	b950      	cbnz	r0, 8011a06 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 80119f0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80119f4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80119f8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80119fc:	f3bf 8f4f 	dsb	sy
 8011a00:	f3bf 8f6f 	isb	sy
	}
 8011a04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8011a06:	4d1e      	ldr	r5, [pc, #120]	; (8011a80 <vTaskDelay+0x94>)
 8011a08:	682b      	ldr	r3, [r5, #0]
 8011a0a:	b143      	cbz	r3, 8011a1e <vTaskDelay+0x32>
 8011a0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011a10:	f383 8811 	msr	BASEPRI, r3
 8011a14:	f3bf 8f6f 	isb	sy
 8011a18:	f3bf 8f4f 	dsb	sy
 8011a1c:	e7fe      	b.n	8011a1c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 8011a1e:	682b      	ldr	r3, [r5, #0]
 8011a20:	3301      	adds	r3, #1
 8011a22:	4604      	mov	r4, r0
 8011a24:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8011a26:	4b17      	ldr	r3, [pc, #92]	; (8011a84 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011a28:	4e17      	ldr	r6, [pc, #92]	; (8011a88 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 8011a2a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011a2c:	6830      	ldr	r0, [r6, #0]
 8011a2e:	3004      	adds	r0, #4
 8011a30:	f7fe fac0 	bl	800ffb4 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8011a34:	6833      	ldr	r3, [r6, #0]
 8011a36:	19e4      	adds	r4, r4, r7
 8011a38:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 8011a3a:	d310      	bcc.n	8011a5e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011a3c:	4b13      	ldr	r3, [pc, #76]	; (8011a8c <vTaskDelay+0xa0>)
 8011a3e:	6818      	ldr	r0, [r3, #0]
 8011a40:	6831      	ldr	r1, [r6, #0]
 8011a42:	3104      	adds	r1, #4
 8011a44:	f7fe fa9e 	bl	800ff84 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 8011a48:	682b      	ldr	r3, [r5, #0]
 8011a4a:	b9a3      	cbnz	r3, 8011a76 <vTaskDelay+0x8a>
 8011a4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011a50:	f383 8811 	msr	BASEPRI, r3
 8011a54:	f3bf 8f6f 	isb	sy
 8011a58:	f3bf 8f4f 	dsb	sy
 8011a5c:	e7fe      	b.n	8011a5c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011a5e:	4b0c      	ldr	r3, [pc, #48]	; (8011a90 <vTaskDelay+0xa4>)
 8011a60:	6818      	ldr	r0, [r3, #0]
 8011a62:	6831      	ldr	r1, [r6, #0]
 8011a64:	3104      	adds	r1, #4
 8011a66:	f7fe fa8d 	bl	800ff84 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 8011a6a:	4b0a      	ldr	r3, [pc, #40]	; (8011a94 <vTaskDelay+0xa8>)
 8011a6c:	681a      	ldr	r2, [r3, #0]
 8011a6e:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 8011a70:	bf38      	it	cc
 8011a72:	601c      	strcc	r4, [r3, #0]
 8011a74:	e7e8      	b.n	8011a48 <vTaskDelay+0x5c>
 8011a76:	f7ff feb3 	bl	80117e0 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 8011a7a:	2800      	cmp	r0, #0
 8011a7c:	d0b8      	beq.n	80119f0 <vTaskDelay+0x4>
	}
 8011a7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011a80:	2001368c 	.word	0x2001368c
 8011a84:	2001370c 	.word	0x2001370c
 8011a88:	20013218 	.word	0x20013218
 8011a8c:	20013220 	.word	0x20013220
 8011a90:	2001321c 	.word	0x2001321c
 8011a94:	200136c0 	.word	0x200136c0

08011a98 <vTaskStartScheduler>:
{
 8011a98:	b530      	push	{r4, r5, lr}
 8011a9a:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8011a9c:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8011a9e:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8011aa0:	a906      	add	r1, sp, #24
 8011aa2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8011aa4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8011aa8:	f7fe f90e 	bl	800fcc8 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8011aac:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8011ab0:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 8011ab2:	b1bb      	cbz	r3, 8011ae4 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 8011ab4:	b16d      	cbz	r5, 8011ad2 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 8011ab6:	21ac      	movs	r1, #172	; 0xac
 8011ab8:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 8011aba:	9909      	ldr	r1, [sp, #36]	; 0x24
 8011abc:	29ac      	cmp	r1, #172	; 0xac
 8011abe:	d01a      	beq.n	8011af6 <vTaskStartScheduler+0x5e>
 8011ac0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011ac4:	f383 8811 	msr	BASEPRI, r3
 8011ac8:	f3bf 8f6f 	isb	sy
 8011acc:	f3bf 8f4f 	dsb	sy
 8011ad0:	e7fe      	b.n	8011ad0 <vTaskStartScheduler+0x38>
 8011ad2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011ad6:	f383 8811 	msr	BASEPRI, r3
 8011ada:	f3bf 8f6f 	isb	sy
 8011ade:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 8011ae2:	e7fe      	b.n	8011ae2 <vTaskStartScheduler+0x4a>
 8011ae4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011ae8:	f383 8811 	msr	BASEPRI, r3
 8011aec:	f3bf 8f6f 	isb	sy
 8011af0:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 8011af4:	e7fe      	b.n	8011af4 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8011af6:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011af8:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8011afa:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8011afc:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011b00:	4623      	mov	r3, r4
 8011b02:	e9cd 0501 	strd	r0, r5, [sp, #4]
 8011b06:	491b      	ldr	r1, [pc, #108]	; (8011b74 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8011b08:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011b0a:	9400      	str	r4, [sp, #0]
 8011b0c:	481a      	ldr	r0, [pc, #104]	; (8011b78 <vTaskStartScheduler+0xe0>)
 8011b0e:	f7ff fcdd 	bl	80114cc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8011b12:	4628      	mov	r0, r5
 8011b14:	f7ff fc52 	bl	80113bc <prvAddNewTaskToReadyList>
		return xReturn;
 8011b18:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 8011b1a:	b1eb      	cbz	r3, 8011b58 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 8011b1c:	f000 fc6e 	bl	80123fc <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8011b20:	2801      	cmp	r0, #1
 8011b22:	d11b      	bne.n	8011b5c <vTaskStartScheduler+0xc4>
 8011b24:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011b28:	f383 8811 	msr	BASEPRI, r3
 8011b2c:	f3bf 8f6f 	isb	sy
 8011b30:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011b34:	4b11      	ldr	r3, [pc, #68]	; (8011b7c <vTaskStartScheduler+0xe4>)
 8011b36:	4a12      	ldr	r2, [pc, #72]	; (8011b80 <vTaskStartScheduler+0xe8>)
 8011b38:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8011b3a:	4912      	ldr	r1, [pc, #72]	; (8011b84 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011b3c:	3358      	adds	r3, #88	; 0x58
 8011b3e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 8011b40:	4a11      	ldr	r2, [pc, #68]	; (8011b88 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8011b42:	4b12      	ldr	r3, [pc, #72]	; (8011b8c <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 8011b44:	f04f 35ff 	mov.w	r5, #4294967295
 8011b48:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 8011b4a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8011b4c:	601c      	str	r4, [r3, #0]
}
 8011b4e:	b00b      	add	sp, #44	; 0x2c
 8011b50:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 8011b54:	f7fe bb38 	b.w	80101c8 <xPortStartScheduler>
}
 8011b58:	b00b      	add	sp, #44	; 0x2c
 8011b5a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8011b5c:	3001      	adds	r0, #1
 8011b5e:	d1fb      	bne.n	8011b58 <vTaskStartScheduler+0xc0>
 8011b60:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011b64:	f383 8811 	msr	BASEPRI, r3
 8011b68:	f3bf 8f6f 	isb	sy
 8011b6c:	f3bf 8f4f 	dsb	sy
 8011b70:	e7fe      	b.n	8011b70 <vTaskStartScheduler+0xd8>
 8011b72:	bf00      	nop
 8011b74:	080315dc 	.word	0x080315dc
 8011b78:	080115f9 	.word	0x080115f9
 8011b7c:	20013218 	.word	0x20013218
 8011b80:	20000160 	.word	0x20000160
 8011b84:	200136c0 	.word	0x200136c0
 8011b88:	200136e0 	.word	0x200136e0
 8011b8c:	2001370c 	.word	0x2001370c

08011b90 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8011b90:	4a02      	ldr	r2, [pc, #8]	; (8011b9c <vTaskSuspendAll+0xc>)
 8011b92:	6813      	ldr	r3, [r2, #0]
 8011b94:	3301      	adds	r3, #1
 8011b96:	6013      	str	r3, [r2, #0]
}
 8011b98:	4770      	bx	lr
 8011b9a:	bf00      	nop
 8011b9c:	2001368c 	.word	0x2001368c

08011ba0 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 8011ba0:	4b06      	ldr	r3, [pc, #24]	; (8011bbc <xTaskResumeAll+0x1c>)
 8011ba2:	681b      	ldr	r3, [r3, #0]
 8011ba4:	b943      	cbnz	r3, 8011bb8 <xTaskResumeAll+0x18>
 8011ba6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011baa:	f383 8811 	msr	BASEPRI, r3
 8011bae:	f3bf 8f6f 	isb	sy
 8011bb2:	f3bf 8f4f 	dsb	sy
 8011bb6:	e7fe      	b.n	8011bb6 <xTaskResumeAll+0x16>
 8011bb8:	f7ff be12 	b.w	80117e0 <xTaskResumeAll.part.0>
 8011bbc:	2001368c 	.word	0x2001368c

08011bc0 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8011bc0:	4b01      	ldr	r3, [pc, #4]	; (8011bc8 <xTaskGetTickCount+0x8>)
 8011bc2:	6818      	ldr	r0, [r3, #0]
}
 8011bc4:	4770      	bx	lr
 8011bc6:	bf00      	nop
 8011bc8:	2001370c 	.word	0x2001370c

08011bcc <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011bcc:	4b05      	ldr	r3, [pc, #20]	; (8011be4 <xTaskIncrementTick+0x18>)
 8011bce:	681b      	ldr	r3, [r3, #0]
 8011bd0:	b90b      	cbnz	r3, 8011bd6 <xTaskIncrementTick+0xa>
 8011bd2:	f7ff bd61 	b.w	8011698 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 8011bd6:	4a04      	ldr	r2, [pc, #16]	; (8011be8 <xTaskIncrementTick+0x1c>)
 8011bd8:	6813      	ldr	r3, [r2, #0]
 8011bda:	3301      	adds	r3, #1
}
 8011bdc:	2000      	movs	r0, #0
		++xPendedTicks;
 8011bde:	6013      	str	r3, [r2, #0]
}
 8011be0:	4770      	bx	lr
 8011be2:	bf00      	nop
 8011be4:	2001368c 	.word	0x2001368c
 8011be8:	200136c8 	.word	0x200136c8

08011bec <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8011bec:	4b1f      	ldr	r3, [pc, #124]	; (8011c6c <vTaskSwitchContext+0x80>)
 8011bee:	681b      	ldr	r3, [r3, #0]
 8011bf0:	b11b      	cbz	r3, 8011bfa <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 8011bf2:	4b1f      	ldr	r3, [pc, #124]	; (8011c70 <vTaskSwitchContext+0x84>)
 8011bf4:	2201      	movs	r2, #1
 8011bf6:	601a      	str	r2, [r3, #0]
 8011bf8:	4770      	bx	lr
		xYieldPending = pdFALSE;
 8011bfa:	4a1d      	ldr	r2, [pc, #116]	; (8011c70 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011bfc:	491d      	ldr	r1, [pc, #116]	; (8011c74 <vTaskSwitchContext+0x88>)
{
 8011bfe:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011c00:	4c1d      	ldr	r4, [pc, #116]	; (8011c78 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 8011c02:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011c04:	6823      	ldr	r3, [r4, #0]
 8011c06:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8011c0a:	0092      	lsls	r2, r2, #2
 8011c0c:	0098      	lsls	r0, r3, #2
 8011c0e:	588a      	ldr	r2, [r1, r2]
 8011c10:	b942      	cbnz	r2, 8011c24 <vTaskSwitchContext+0x38>
 8011c12:	b313      	cbz	r3, 8011c5a <vTaskSwitchContext+0x6e>
 8011c14:	3b01      	subs	r3, #1
 8011c16:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8011c1a:	0098      	lsls	r0, r3, #2
 8011c1c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8011c20:	2a00      	cmp	r2, #0
 8011c22:	d0f6      	beq.n	8011c12 <vTaskSwitchContext+0x26>
 8011c24:	4418      	add	r0, r3
 8011c26:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 8011c2a:	4662      	mov	r2, ip
 8011c2c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8011c30:	6849      	ldr	r1, [r1, #4]
 8011c32:	f8cc 1004 	str.w	r1, [ip, #4]
 8011c36:	3208      	adds	r2, #8
 8011c38:	4291      	cmp	r1, r2
 8011c3a:	bf08      	it	eq
 8011c3c:	6849      	ldreq	r1, [r1, #4]
 8011c3e:	4a0f      	ldr	r2, [pc, #60]	; (8011c7c <vTaskSwitchContext+0x90>)
 8011c40:	bf08      	it	eq
 8011c42:	f8cc 1004 	streq.w	r1, [ip, #4]
 8011c46:	68c9      	ldr	r1, [r1, #12]
 8011c48:	6011      	str	r1, [r2, #0]
 8011c4a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011c4c:	6813      	ldr	r3, [r2, #0]
 8011c4e:	4a0c      	ldr	r2, [pc, #48]	; (8011c80 <vTaskSwitchContext+0x94>)
}
 8011c50:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011c54:	3358      	adds	r3, #88	; 0x58
 8011c56:	6013      	str	r3, [r2, #0]
}
 8011c58:	4770      	bx	lr
 8011c5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011c5e:	f383 8811 	msr	BASEPRI, r3
 8011c62:	f3bf 8f6f 	isb	sy
 8011c66:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011c6a:	e7fe      	b.n	8011c6a <vTaskSwitchContext+0x7e>
 8011c6c:	2001368c 	.word	0x2001368c
 8011c70:	20013710 	.word	0x20013710
 8011c74:	20013224 	.word	0x20013224
 8011c78:	20013694 	.word	0x20013694
 8011c7c:	20013218 	.word	0x20013218
 8011c80:	20000160 	.word	0x20000160

08011c84 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 8011c84:	b1d0      	cbz	r0, 8011cbc <vTaskPlaceOnEventList+0x38>
{
 8011c86:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8011c88:	4d1a      	ldr	r5, [pc, #104]	; (8011cf4 <vTaskPlaceOnEventList+0x70>)
 8011c8a:	460c      	mov	r4, r1
 8011c8c:	6829      	ldr	r1, [r5, #0]
 8011c8e:	3118      	adds	r1, #24
 8011c90:	f7fe f978 	bl	800ff84 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 8011c94:	4b18      	ldr	r3, [pc, #96]	; (8011cf8 <vTaskPlaceOnEventList+0x74>)
 8011c96:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011c98:	6828      	ldr	r0, [r5, #0]
 8011c9a:	3004      	adds	r0, #4
 8011c9c:	f7fe f98a 	bl	800ffb4 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8011ca0:	1c63      	adds	r3, r4, #1
 8011ca2:	d014      	beq.n	8011cce <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8011ca4:	682b      	ldr	r3, [r5, #0]
 8011ca6:	19a4      	adds	r4, r4, r6
 8011ca8:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8011caa:	d317      	bcc.n	8011cdc <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011cac:	4b13      	ldr	r3, [pc, #76]	; (8011cfc <vTaskPlaceOnEventList+0x78>)
 8011cae:	6818      	ldr	r0, [r3, #0]
 8011cb0:	6829      	ldr	r1, [r5, #0]
}
 8011cb2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011cb6:	3104      	adds	r1, #4
 8011cb8:	f7fe b964 	b.w	800ff84 <vListInsert>
 8011cbc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011cc0:	f383 8811 	msr	BASEPRI, r3
 8011cc4:	f3bf 8f6f 	isb	sy
 8011cc8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 8011ccc:	e7fe      	b.n	8011ccc <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011cce:	6829      	ldr	r1, [r5, #0]
 8011cd0:	480b      	ldr	r0, [pc, #44]	; (8011d00 <vTaskPlaceOnEventList+0x7c>)
}
 8011cd2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011cd6:	3104      	adds	r1, #4
 8011cd8:	f7fe b944 	b.w	800ff64 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011cdc:	4b09      	ldr	r3, [pc, #36]	; (8011d04 <vTaskPlaceOnEventList+0x80>)
 8011cde:	6818      	ldr	r0, [r3, #0]
 8011ce0:	6829      	ldr	r1, [r5, #0]
 8011ce2:	3104      	adds	r1, #4
 8011ce4:	f7fe f94e 	bl	800ff84 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8011ce8:	4b07      	ldr	r3, [pc, #28]	; (8011d08 <vTaskPlaceOnEventList+0x84>)
 8011cea:	681a      	ldr	r2, [r3, #0]
 8011cec:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 8011cee:	bf38      	it	cc
 8011cf0:	601c      	strcc	r4, [r3, #0]
}
 8011cf2:	bd70      	pop	{r4, r5, r6, pc}
 8011cf4:	20013218 	.word	0x20013218
 8011cf8:	2001370c 	.word	0x2001370c
 8011cfc:	20013220 	.word	0x20013220
 8011d00:	200136e4 	.word	0x200136e4
 8011d04:	2001321c 	.word	0x2001321c
 8011d08:	200136c0 	.word	0x200136c0

08011d0c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 8011d0c:	b330      	cbz	r0, 8011d5c <vTaskPlaceOnEventListRestricted+0x50>
	{
 8011d0e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8011d10:	4e1d      	ldr	r6, [pc, #116]	; (8011d88 <vTaskPlaceOnEventListRestricted+0x7c>)
 8011d12:	460c      	mov	r4, r1
 8011d14:	6831      	ldr	r1, [r6, #0]
 8011d16:	4615      	mov	r5, r2
 8011d18:	3118      	adds	r1, #24
 8011d1a:	f7fe f923 	bl	800ff64 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 8011d1e:	4b1b      	ldr	r3, [pc, #108]	; (8011d8c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 8011d20:	b985      	cbnz	r5, 8011d44 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 8011d22:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011d24:	6830      	ldr	r0, [r6, #0]
 8011d26:	3004      	adds	r0, #4
 8011d28:	f7fe f944 	bl	800ffb4 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8011d2c:	6833      	ldr	r3, [r6, #0]
 8011d2e:	1964      	adds	r4, r4, r5
 8011d30:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8011d32:	d31c      	bcc.n	8011d6e <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011d34:	4b16      	ldr	r3, [pc, #88]	; (8011d90 <vTaskPlaceOnEventListRestricted+0x84>)
 8011d36:	6818      	ldr	r0, [r3, #0]
 8011d38:	6831      	ldr	r1, [r6, #0]
	}
 8011d3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011d3e:	3104      	adds	r1, #4
 8011d40:	f7fe b920 	b.w	800ff84 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 8011d44:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011d46:	6830      	ldr	r0, [r6, #0]
 8011d48:	3004      	adds	r0, #4
 8011d4a:	f7fe f933 	bl	800ffb4 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011d4e:	6831      	ldr	r1, [r6, #0]
 8011d50:	4810      	ldr	r0, [pc, #64]	; (8011d94 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 8011d52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011d56:	3104      	adds	r1, #4
 8011d58:	f7fe b904 	b.w	800ff64 <vListInsertEnd>
 8011d5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011d60:	f383 8811 	msr	BASEPRI, r3
 8011d64:	f3bf 8f6f 	isb	sy
 8011d68:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 8011d6c:	e7fe      	b.n	8011d6c <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011d6e:	4b0a      	ldr	r3, [pc, #40]	; (8011d98 <vTaskPlaceOnEventListRestricted+0x8c>)
 8011d70:	6818      	ldr	r0, [r3, #0]
 8011d72:	6831      	ldr	r1, [r6, #0]
 8011d74:	3104      	adds	r1, #4
 8011d76:	f7fe f905 	bl	800ff84 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8011d7a:	4b08      	ldr	r3, [pc, #32]	; (8011d9c <vTaskPlaceOnEventListRestricted+0x90>)
 8011d7c:	681a      	ldr	r2, [r3, #0]
 8011d7e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 8011d80:	bf38      	it	cc
 8011d82:	601c      	strcc	r4, [r3, #0]
	}
 8011d84:	bd70      	pop	{r4, r5, r6, pc}
 8011d86:	bf00      	nop
 8011d88:	20013218 	.word	0x20013218
 8011d8c:	2001370c 	.word	0x2001370c
 8011d90:	20013220 	.word	0x20013220
 8011d94:	200136e4 	.word	0x200136e4
 8011d98:	2001321c 	.word	0x2001321c
 8011d9c:	200136c0 	.word	0x200136c0

08011da0 <xTaskRemoveFromEventList>:
{
 8011da0:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011da2:	68c3      	ldr	r3, [r0, #12]
 8011da4:	68dc      	ldr	r4, [r3, #12]
{
 8011da6:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 8011da8:	2c00      	cmp	r4, #0
 8011daa:	d02b      	beq.n	8011e04 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8011dac:	f104 0518 	add.w	r5, r4, #24
 8011db0:	4628      	mov	r0, r5
 8011db2:	f7fe f8ff 	bl	800ffb4 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011db6:	4b18      	ldr	r3, [pc, #96]	; (8011e18 <xTaskRemoveFromEventList+0x78>)
 8011db8:	681b      	ldr	r3, [r3, #0]
 8011dba:	b17b      	cbz	r3, 8011ddc <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8011dbc:	4817      	ldr	r0, [pc, #92]	; (8011e1c <xTaskRemoveFromEventList+0x7c>)
 8011dbe:	4629      	mov	r1, r5
 8011dc0:	f7fe f8d0 	bl	800ff64 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8011dc4:	4b16      	ldr	r3, [pc, #88]	; (8011e20 <xTaskRemoveFromEventList+0x80>)
 8011dc6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011dc8:	681b      	ldr	r3, [r3, #0]
 8011dca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011dcc:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8011dce:	bf85      	ittet	hi
 8011dd0:	4b14      	ldrhi	r3, [pc, #80]	; (8011e24 <xTaskRemoveFromEventList+0x84>)
 8011dd2:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8011dd4:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8011dd6:	6018      	strhi	r0, [r3, #0]
}
 8011dd8:	b003      	add	sp, #12
 8011dda:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8011ddc:	1d21      	adds	r1, r4, #4
 8011dde:	4608      	mov	r0, r1
 8011de0:	9101      	str	r1, [sp, #4]
 8011de2:	f7fe f8e7 	bl	800ffb4 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8011de6:	4a10      	ldr	r2, [pc, #64]	; (8011e28 <xTaskRemoveFromEventList+0x88>)
 8011de8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011dea:	6810      	ldr	r0, [r2, #0]
 8011dec:	9901      	ldr	r1, [sp, #4]
 8011dee:	4283      	cmp	r3, r0
 8011df0:	480e      	ldr	r0, [pc, #56]	; (8011e2c <xTaskRemoveFromEventList+0x8c>)
 8011df2:	bf88      	it	hi
 8011df4:	6013      	strhi	r3, [r2, #0]
 8011df6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8011dfa:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8011dfe:	f7fe f8b1 	bl	800ff64 <vListInsertEnd>
 8011e02:	e7df      	b.n	8011dc4 <xTaskRemoveFromEventList+0x24>
 8011e04:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011e08:	f383 8811 	msr	BASEPRI, r3
 8011e0c:	f3bf 8f6f 	isb	sy
 8011e10:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 8011e14:	e7fe      	b.n	8011e14 <xTaskRemoveFromEventList+0x74>
 8011e16:	bf00      	nop
 8011e18:	2001368c 	.word	0x2001368c
 8011e1c:	200136cc 	.word	0x200136cc
 8011e20:	20013218 	.word	0x20013218
 8011e24:	20013710 	.word	0x20013710
 8011e28:	20013694 	.word	0x20013694
 8011e2c:	20013224 	.word	0x20013224

08011e30 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8011e30:	4a03      	ldr	r2, [pc, #12]	; (8011e40 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011e32:	4b04      	ldr	r3, [pc, #16]	; (8011e44 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8011e34:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011e36:	681b      	ldr	r3, [r3, #0]
 8011e38:	e9c0 2300 	strd	r2, r3, [r0]
}
 8011e3c:	4770      	bx	lr
 8011e3e:	bf00      	nop
 8011e40:	200136c4 	.word	0x200136c4
 8011e44:	2001370c 	.word	0x2001370c

08011e48 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 8011e48:	b328      	cbz	r0, 8011e96 <xTaskCheckForTimeOut+0x4e>
{
 8011e4a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011e4c:	460d      	mov	r5, r1
 8011e4e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 8011e50:	b1c1      	cbz	r1, 8011e84 <xTaskCheckForTimeOut+0x3c>
 8011e52:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8011e54:	f7fe f926 	bl	80100a4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 8011e58:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 8011e5a:	4a1d      	ldr	r2, [pc, #116]	; (8011ed0 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 8011e5c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 8011e5e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8011e60:	d030      	beq.n	8011ec4 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8011e62:	f8df c070 	ldr.w	ip, [pc, #112]	; 8011ed4 <xTaskCheckForTimeOut+0x8c>
 8011e66:	e9d4 6000 	ldrd	r6, r0, [r4]
 8011e6a:	f8dc 7000 	ldr.w	r7, [ip]
 8011e6e:	42be      	cmp	r6, r7
 8011e70:	d01a      	beq.n	8011ea8 <xTaskCheckForTimeOut+0x60>
 8011e72:	4288      	cmp	r0, r1
 8011e74:	d818      	bhi.n	8011ea8 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 8011e76:	2001      	movs	r0, #1
 8011e78:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 8011e7a:	f7fe f935 	bl	80100e8 <vPortExitCritical>
}
 8011e7e:	9801      	ldr	r0, [sp, #4]
 8011e80:	b003      	add	sp, #12
 8011e82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011e84:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011e88:	f383 8811 	msr	BASEPRI, r3
 8011e8c:	f3bf 8f6f 	isb	sy
 8011e90:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 8011e94:	e7fe      	b.n	8011e94 <xTaskCheckForTimeOut+0x4c>
 8011e96:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011e9a:	f383 8811 	msr	BASEPRI, r3
 8011e9e:	f3bf 8f6f 	isb	sy
 8011ea2:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 8011ea6:	e7fe      	b.n	8011ea6 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8011ea8:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8011eac:	4573      	cmp	r3, lr
 8011eae:	d90b      	bls.n	8011ec8 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 8011eb0:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8011eb2:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011eb6:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 8011eb8:	4403      	add	r3, r0
 8011eba:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 8011ebc:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011ebe:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 8011ec2:	e7d9      	b.n	8011e78 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 8011ec4:	2000      	movs	r0, #0
 8011ec6:	e7d7      	b.n	8011e78 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 8011ec8:	2300      	movs	r3, #0
 8011eca:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 8011ecc:	2001      	movs	r0, #1
 8011ece:	e7d3      	b.n	8011e78 <xTaskCheckForTimeOut+0x30>
 8011ed0:	2001370c 	.word	0x2001370c
 8011ed4:	200136c4 	.word	0x200136c4

08011ed8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8011ed8:	4b01      	ldr	r3, [pc, #4]	; (8011ee0 <vTaskMissedYield+0x8>)
 8011eda:	2201      	movs	r2, #1
 8011edc:	601a      	str	r2, [r3, #0]
}
 8011ede:	4770      	bx	lr
 8011ee0:	20013710 	.word	0x20013710

08011ee4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8011ee4:	4b05      	ldr	r3, [pc, #20]	; (8011efc <xTaskGetSchedulerState+0x18>)
 8011ee6:	681b      	ldr	r3, [r3, #0]
 8011ee8:	b133      	cbz	r3, 8011ef8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011eea:	4b05      	ldr	r3, [pc, #20]	; (8011f00 <xTaskGetSchedulerState+0x1c>)
 8011eec:	6818      	ldr	r0, [r3, #0]
 8011eee:	fab0 f080 	clz	r0, r0
 8011ef2:	0940      	lsrs	r0, r0, #5
 8011ef4:	0040      	lsls	r0, r0, #1
 8011ef6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8011ef8:	2001      	movs	r0, #1
	}
 8011efa:	4770      	bx	lr
 8011efc:	200136e0 	.word	0x200136e0
 8011f00:	2001368c 	.word	0x2001368c

08011f04 <xTaskPriorityInherit>:
	{
 8011f04:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8011f06:	4604      	mov	r4, r0
	{
 8011f08:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 8011f0a:	b1c8      	cbz	r0, 8011f40 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8011f0c:	4d1d      	ldr	r5, [pc, #116]	; (8011f84 <xTaskPriorityInherit+0x80>)
 8011f0e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011f10:	682a      	ldr	r2, [r5, #0]
 8011f12:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8011f14:	4293      	cmp	r3, r2
 8011f16:	d215      	bcs.n	8011f44 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8011f18:	6982      	ldr	r2, [r0, #24]
 8011f1a:	2a00      	cmp	r2, #0
 8011f1c:	db04      	blt.n	8011f28 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011f1e:	682a      	ldr	r2, [r5, #0]
 8011f20:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8011f22:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 8011f26:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8011f28:	4e17      	ldr	r6, [pc, #92]	; (8011f88 <xTaskPriorityInherit+0x84>)
 8011f2a:	6962      	ldr	r2, [r4, #20]
 8011f2c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8011f30:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8011f34:	429a      	cmp	r2, r3
 8011f36:	d00e      	beq.n	8011f56 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011f38:	682b      	ldr	r3, [r5, #0]
 8011f3a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011f3c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 8011f3e:	2001      	movs	r0, #1
	}
 8011f40:	b002      	add	sp, #8
 8011f42:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8011f44:	682b      	ldr	r3, [r5, #0]
 8011f46:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8011f48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011f4a:	4298      	cmp	r0, r3
 8011f4c:	bf2c      	ite	cs
 8011f4e:	2000      	movcs	r0, #0
 8011f50:	2001      	movcc	r0, #1
	}
 8011f52:	b002      	add	sp, #8
 8011f54:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011f56:	1d21      	adds	r1, r4, #4
 8011f58:	4608      	mov	r0, r1
 8011f5a:	9101      	str	r1, [sp, #4]
 8011f5c:	f7fe f82a 	bl	800ffb4 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011f60:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8011f62:	4b0a      	ldr	r3, [pc, #40]	; (8011f8c <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011f64:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8011f66:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011f68:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8011f6a:	4290      	cmp	r0, r2
 8011f6c:	bf88      	it	hi
 8011f6e:	6018      	strhi	r0, [r3, #0]
 8011f70:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8011f74:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 8011f78:	9901      	ldr	r1, [sp, #4]
 8011f7a:	f7fd fff3 	bl	800ff64 <vListInsertEnd>
				xReturn = pdTRUE;
 8011f7e:	2001      	movs	r0, #1
 8011f80:	e7de      	b.n	8011f40 <xTaskPriorityInherit+0x3c>
 8011f82:	bf00      	nop
 8011f84:	20013218 	.word	0x20013218
 8011f88:	20013224 	.word	0x20013224
 8011f8c:	20013694 	.word	0x20013694

08011f90 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 8011f90:	b318      	cbz	r0, 8011fda <xTaskPriorityDisinherit+0x4a>
	{
 8011f92:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 8011f94:	4b1e      	ldr	r3, [pc, #120]	; (8012010 <xTaskPriorityDisinherit+0x80>)
 8011f96:	681c      	ldr	r4, [r3, #0]
 8011f98:	4284      	cmp	r4, r0
	{
 8011f9a:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 8011f9c:	d008      	beq.n	8011fb0 <xTaskPriorityDisinherit+0x20>
 8011f9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011fa2:	f383 8811 	msr	BASEPRI, r3
 8011fa6:	f3bf 8f6f 	isb	sy
 8011faa:	f3bf 8f4f 	dsb	sy
 8011fae:	e7fe      	b.n	8011fae <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 8011fb0:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8011fb2:	b14b      	cbz	r3, 8011fc8 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8011fb4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011fb6:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8011fb8:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8011fba:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8011fbc:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8011fbe:	d000      	beq.n	8011fc2 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8011fc0:	b16b      	cbz	r3, 8011fde <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 8011fc2:	2000      	movs	r0, #0
	}
 8011fc4:	b002      	add	sp, #8
 8011fc6:	bd10      	pop	{r4, pc}
 8011fc8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011fcc:	f383 8811 	msr	BASEPRI, r3
 8011fd0:	f3bf 8f6f 	isb	sy
 8011fd4:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 8011fd8:	e7fe      	b.n	8011fd8 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 8011fda:	2000      	movs	r0, #0
	}
 8011fdc:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011fde:	1d21      	adds	r1, r4, #4
 8011fe0:	4608      	mov	r0, r1
 8011fe2:	9101      	str	r1, [sp, #4]
 8011fe4:	f7fd ffe6 	bl	800ffb4 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8011fe8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8011fea:	4a0a      	ldr	r2, [pc, #40]	; (8012014 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8011fec:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011fee:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 8011ff2:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8011ff4:	6810      	ldr	r0, [r2, #0]
 8011ff6:	9901      	ldr	r1, [sp, #4]
 8011ff8:	4283      	cmp	r3, r0
 8011ffa:	4807      	ldr	r0, [pc, #28]	; (8012018 <xTaskPriorityDisinherit+0x88>)
 8011ffc:	bf88      	it	hi
 8011ffe:	6013      	strhi	r3, [r2, #0]
 8012000:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8012004:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8012008:	f7fd ffac 	bl	800ff64 <vListInsertEnd>
					xReturn = pdTRUE;
 801200c:	2001      	movs	r0, #1
		return xReturn;
 801200e:	e7d9      	b.n	8011fc4 <xTaskPriorityDisinherit+0x34>
 8012010:	20013218 	.word	0x20013218
 8012014:	20013694 	.word	0x20013694
 8012018:	20013224 	.word	0x20013224

0801201c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 801201c:	2800      	cmp	r0, #0
 801201e:	d041      	beq.n	80120a4 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 8012020:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 8012022:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 8012024:	b083      	sub	sp, #12
 8012026:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 8012028:	b153      	cbz	r3, 8012040 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 801202a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 801202c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801202e:	4281      	cmp	r1, r0
 8012030:	bf38      	it	cc
 8012032:	4601      	movcc	r1, r0
 8012034:	428a      	cmp	r2, r1
 8012036:	d001      	beq.n	801203c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8012038:	2b01      	cmp	r3, #1
 801203a:	d00a      	beq.n	8012052 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 801203c:	b003      	add	sp, #12
 801203e:	bd30      	pop	{r4, r5, pc}
 8012040:	f04f 0350 	mov.w	r3, #80	; 0x50
 8012044:	f383 8811 	msr	BASEPRI, r3
 8012048:	f3bf 8f6f 	isb	sy
 801204c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 8012050:	e7fe      	b.n	8012050 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 8012052:	4b19      	ldr	r3, [pc, #100]	; (80120b8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 8012054:	681b      	ldr	r3, [r3, #0]
 8012056:	42a3      	cmp	r3, r4
 8012058:	d025      	beq.n	80120a6 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 801205a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 801205c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 801205e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8012060:	bfa8      	it	ge
 8012062:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8012066:	4d15      	ldr	r5, [pc, #84]	; (80120bc <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8012068:	bfa8      	it	ge
 801206a:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 801206c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8012070:	6961      	ldr	r1, [r4, #20]
 8012072:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 8012076:	4299      	cmp	r1, r3
 8012078:	d1e0      	bne.n	801203c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 801207a:	1d21      	adds	r1, r4, #4
 801207c:	4608      	mov	r0, r1
 801207e:	9101      	str	r1, [sp, #4]
 8012080:	f7fd ff98 	bl	800ffb4 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8012084:	4b0e      	ldr	r3, [pc, #56]	; (80120c0 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 8012086:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8012088:	681a      	ldr	r2, [r3, #0]
 801208a:	9901      	ldr	r1, [sp, #4]
 801208c:	4290      	cmp	r0, r2
 801208e:	bf88      	it	hi
 8012090:	6018      	strhi	r0, [r3, #0]
 8012092:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8012096:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 801209a:	b003      	add	sp, #12
 801209c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 80120a0:	f7fd bf60 	b.w	800ff64 <vListInsertEnd>
 80120a4:	4770      	bx	lr
 80120a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80120aa:	f383 8811 	msr	BASEPRI, r3
 80120ae:	f3bf 8f6f 	isb	sy
 80120b2:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 80120b6:	e7fe      	b.n	80120b6 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 80120b8:	20013218 	.word	0x20013218
 80120bc:	20013224 	.word	0x20013224
 80120c0:	20013694 	.word	0x20013694

080120c4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 80120c4:	4b04      	ldr	r3, [pc, #16]	; (80120d8 <pvTaskIncrementMutexHeldCount+0x14>)
 80120c6:	681a      	ldr	r2, [r3, #0]
 80120c8:	b11a      	cbz	r2, 80120d2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 80120ca:	6819      	ldr	r1, [r3, #0]
 80120cc:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 80120ce:	3201      	adds	r2, #1
 80120d0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 80120d2:	6818      	ldr	r0, [r3, #0]
	}
 80120d4:	4770      	bx	lr
 80120d6:	bf00      	nop
 80120d8:	20013218 	.word	0x20013218

080120dc <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 80120dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80120e0:	4e22      	ldr	r6, [pc, #136]	; (801216c <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 80120e2:	f8df 9090 	ldr.w	r9, [pc, #144]	; 8012174 <prvSwitchTimerLists+0x98>
{
 80120e6:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 80120e8:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 80120ec:	e00d      	b.n	801210a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80120ee:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80120f0:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80120f2:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80120f4:	1d25      	adds	r5, r4, #4
 80120f6:	4628      	mov	r0, r5
 80120f8:	f7fd ff5c 	bl	800ffb4 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80120fc:	6a23      	ldr	r3, [r4, #32]
 80120fe:	4620      	mov	r0, r4
 8012100:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8012102:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8012106:	075b      	lsls	r3, r3, #29
 8012108:	d40a      	bmi.n	8012120 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 801210a:	6833      	ldr	r3, [r6, #0]
 801210c:	681a      	ldr	r2, [r3, #0]
 801210e:	2a00      	cmp	r2, #0
 8012110:	d1ed      	bne.n	80120ee <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 8012112:	4a17      	ldr	r2, [pc, #92]	; (8012170 <prvSwitchTimerLists+0x94>)
 8012114:	6811      	ldr	r1, [r2, #0]
 8012116:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 8012118:	6013      	str	r3, [r2, #0]
}
 801211a:	b005      	add	sp, #20
 801211c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8012120:	69a3      	ldr	r3, [r4, #24]
 8012122:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 8012124:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8012126:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 8012128:	d205      	bcs.n	8012136 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801212a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 801212c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801212e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8012130:	f7fd ff28 	bl	800ff84 <vListInsert>
 8012134:	e7e9      	b.n	801210a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 8012136:	f8d9 3000 	ldr.w	r3, [r9]
 801213a:	b16b      	cbz	r3, 8012158 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 801213c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8012140:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8012142:	f7ff fecf 	bl	8011ee4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8012146:	2300      	movs	r3, #0
 8012148:	f8d9 0000 	ldr.w	r0, [r9]
 801214c:	461a      	mov	r2, r3
 801214e:	4669      	mov	r1, sp
 8012150:	f7fe fa9c 	bl	801068c <xQueueGenericSend>
				configASSERT( xResult );
 8012154:	2800      	cmp	r0, #0
 8012156:	d1d8      	bne.n	801210a <prvSwitchTimerLists+0x2e>
 8012158:	f04f 0350 	mov.w	r3, #80	; 0x50
 801215c:	f383 8811 	msr	BASEPRI, r3
 8012160:	f3bf 8f6f 	isb	sy
 8012164:	f3bf 8f4f 	dsb	sy
 8012168:	e7fe      	b.n	8012168 <prvSwitchTimerLists+0x8c>
 801216a:	bf00      	nop
 801216c:	20013714 	.word	0x20013714
 8012170:	20013718 	.word	0x20013718
 8012174:	20013838 	.word	0x20013838

08012178 <prvTimerTask>:
{
 8012178:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801217c:	4e9b      	ldr	r6, [pc, #620]	; (80123ec <prvTimerTask+0x274>)
 801217e:	4d9c      	ldr	r5, [pc, #624]	; (80123f0 <prvTimerTask+0x278>)
 8012180:	4c9c      	ldr	r4, [pc, #624]	; (80123f4 <prvTimerTask+0x27c>)
 8012182:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 8012184:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 8012188:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 801218c:	6833      	ldr	r3, [r6, #0]
 801218e:	681f      	ldr	r7, [r3, #0]
 8012190:	2f00      	cmp	r7, #0
 8012192:	f000 80a8 	beq.w	80122e6 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8012196:	68db      	ldr	r3, [r3, #12]
 8012198:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 801219a:	f7ff fcf9 	bl	8011b90 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 801219e:	f7ff fd0f 	bl	8011bc0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80121a2:	682a      	ldr	r2, [r5, #0]
 80121a4:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 80121a6:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 80121a8:	f0c0 80ae 	bcc.w	8012308 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80121ac:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 80121ae:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80121b0:	f240 80b4 	bls.w	801231c <prvTimerTask+0x1a4>
 80121b4:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80121b6:	6820      	ldr	r0, [r4, #0]
 80121b8:	eba7 010a 	sub.w	r1, r7, sl
 80121bc:	f7ff f89a 	bl	80112f4 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 80121c0:	f7ff fcee 	bl	8011ba0 <xTaskResumeAll>
 80121c4:	b928      	cbnz	r0, 80121d2 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 80121c6:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 80121ca:	f3bf 8f4f 	dsb	sy
 80121ce:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 80121d2:	6820      	ldr	r0, [r4, #0]
 80121d4:	2200      	movs	r2, #0
 80121d6:	a902      	add	r1, sp, #8
 80121d8:	f7fe fc94 	bl	8010b04 <xQueueReceive>
 80121dc:	2800      	cmp	r0, #0
 80121de:	d0d5      	beq.n	801218c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80121e0:	9b02      	ldr	r3, [sp, #8]
 80121e2:	2b00      	cmp	r3, #0
 80121e4:	db76      	blt.n	80122d4 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 80121e6:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 80121e8:	697b      	ldr	r3, [r7, #20]
 80121ea:	b113      	cbz	r3, 80121f2 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80121ec:	1d38      	adds	r0, r7, #4
 80121ee:	f7fd fee1 	bl	800ffb4 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 80121f2:	f7ff fce5 	bl	8011bc0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80121f6:	682b      	ldr	r3, [r5, #0]
 80121f8:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 80121fa:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 80121fc:	f0c0 808b 	bcc.w	8012316 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 8012200:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 8012202:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 8012206:	2b09      	cmp	r3, #9
 8012208:	d8e3      	bhi.n	80121d2 <prvTimerTask+0x5a>
 801220a:	e8df f003 	tbb	[pc, r3]
 801220e:	0505      	.short	0x0505
 8012210:	5a3d5305 	.word	0x5a3d5305
 8012214:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8012218:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 801221c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801221e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8012220:	f043 0301 	orr.w	r3, r3, #1
 8012224:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8012228:	9b03      	ldr	r3, [sp, #12]
 801222a:	1899      	adds	r1, r3, r2
 801222c:	bf2c      	ite	cs
 801222e:	2001      	movcs	r0, #1
 8012230:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 8012232:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8012234:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 8012236:	f200 808c 	bhi.w	8012352 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801223a:	ebaa 0303 	sub.w	r3, sl, r3
 801223e:	429a      	cmp	r2, r3
 8012240:	d832      	bhi.n	80122a8 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8012242:	6a3b      	ldr	r3, [r7, #32]
 8012244:	4638      	mov	r0, r7
 8012246:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8012248:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 801224c:	075b      	lsls	r3, r3, #29
 801224e:	d5c0      	bpl.n	80121d2 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 8012250:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8012252:	9903      	ldr	r1, [sp, #12]
 8012254:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 8012256:	b172      	cbz	r2, 8012276 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8012258:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 801225a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 801225e:	2300      	movs	r3, #0
 8012260:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8012262:	f7ff fe3f 	bl	8011ee4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8012266:	2300      	movs	r3, #0
 8012268:	6820      	ldr	r0, [r4, #0]
 801226a:	461a      	mov	r2, r3
 801226c:	a906      	add	r1, sp, #24
 801226e:	f7fe fa0d 	bl	801068c <xQueueGenericSend>
							configASSERT( xResult );
 8012272:	2800      	cmp	r0, #0
 8012274:	d1ad      	bne.n	80121d2 <prvTimerTask+0x5a>
 8012276:	f04f 0350 	mov.w	r3, #80	; 0x50
 801227a:	f383 8811 	msr	BASEPRI, r3
 801227e:	f3bf 8f6f 	isb	sy
 8012282:	f3bf 8f4f 	dsb	sy
 8012286:	e7fe      	b.n	8012286 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8012288:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 801228c:	f043 0301 	orr.w	r3, r3, #1
 8012290:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8012294:	9b03      	ldr	r3, [sp, #12]
 8012296:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8012298:	2b00      	cmp	r3, #0
 801229a:	f000 809d 	beq.w	80123d8 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 801229e:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 80122a0:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80122a2:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80122a4:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 80122a6:	d85e      	bhi.n	8012366 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80122a8:	4b53      	ldr	r3, [pc, #332]	; (80123f8 <prvTimerTask+0x280>)
 80122aa:	1d39      	adds	r1, r7, #4
 80122ac:	6818      	ldr	r0, [r3, #0]
 80122ae:	f7fd fe69 	bl	800ff84 <vListInsert>
	return xProcessTimerNow;
 80122b2:	e78e      	b.n	80121d2 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80122b4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80122b8:	f023 0301 	bic.w	r3, r3, #1
 80122bc:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 80122c0:	e787      	b.n	80121d2 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80122c2:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80122c6:	079a      	lsls	r2, r3, #30
 80122c8:	d552      	bpl.n	8012370 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80122ca:	f023 0301 	bic.w	r3, r3, #1
 80122ce:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 80122d2:	e77e      	b.n	80121d2 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80122d4:	9b03      	ldr	r3, [sp, #12]
 80122d6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80122da:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 80122dc:	9b02      	ldr	r3, [sp, #8]
 80122de:	2b00      	cmp	r3, #0
 80122e0:	f6ff af77 	blt.w	80121d2 <prvTimerTask+0x5a>
 80122e4:	e77f      	b.n	80121e6 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 80122e6:	f7ff fc53 	bl	8011b90 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 80122ea:	f7ff fc69 	bl	8011bc0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80122ee:	682a      	ldr	r2, [r5, #0]
 80122f0:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 80122f2:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 80122f4:	d808      	bhi.n	8012308 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80122f6:	4b40      	ldr	r3, [pc, #256]	; (80123f8 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 80122f8:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80122fc:	681a      	ldr	r2, [r3, #0]
 80122fe:	6812      	ldr	r2, [r2, #0]
 8012300:	fab2 f282 	clz	r2, r2
 8012304:	0952      	lsrs	r2, r2, #5
 8012306:	e756      	b.n	80121b6 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 8012308:	f7ff fee8 	bl	80120dc <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 801230c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 8012310:	f7ff fc46 	bl	8011ba0 <xTaskResumeAll>
 8012314:	e75d      	b.n	80121d2 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 8012316:	f7ff fee1 	bl	80120dc <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 801231a:	e771      	b.n	8012200 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 801231c:	f7ff fc40 	bl	8011ba0 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8012320:	6832      	ldr	r2, [r6, #0]
 8012322:	68d2      	ldr	r2, [r2, #12]
 8012324:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8012328:	f10b 0104 	add.w	r1, fp, #4
 801232c:	4608      	mov	r0, r1
 801232e:	9101      	str	r1, [sp, #4]
 8012330:	f7fd fe40 	bl	800ffb4 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8012334:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 8012338:	9901      	ldr	r1, [sp, #4]
 801233a:	f010 0f04 	tst.w	r0, #4
 801233e:	d11b      	bne.n	8012378 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8012340:	f020 0001 	bic.w	r0, r0, #1
 8012344:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8012348:	f8db 3020 	ldr.w	r3, [fp, #32]
 801234c:	4658      	mov	r0, fp
 801234e:	4798      	blx	r3
}
 8012350:	e73f      	b.n	80121d2 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8012352:	4553      	cmp	r3, sl
 8012354:	d902      	bls.n	801235c <prvTimerTask+0x1e4>
 8012356:	2800      	cmp	r0, #0
 8012358:	f43f af73 	beq.w	8012242 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801235c:	6830      	ldr	r0, [r6, #0]
 801235e:	1d39      	adds	r1, r7, #4
 8012360:	f7fd fe10 	bl	800ff84 <vListInsert>
	return xProcessTimerNow;
 8012364:	e735      	b.n	80121d2 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8012366:	6830      	ldr	r0, [r6, #0]
 8012368:	1d39      	adds	r1, r7, #4
 801236a:	f7fd fe0b 	bl	800ff84 <vListInsert>
 801236e:	e730      	b.n	80121d2 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 8012370:	4638      	mov	r0, r7
 8012372:	f7fd fd83 	bl	800fe7c <vPortFree>
 8012376:	e72c      	b.n	80121d2 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8012378:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801237c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8012380:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 8012382:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8012384:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 8012388:	d903      	bls.n	8012392 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801238a:	6830      	ldr	r0, [r6, #0]
 801238c:	f7fd fdfa 	bl	800ff84 <vListInsert>
	return xProcessTimerNow;
 8012390:	e7da      	b.n	8012348 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8012392:	ebaa 0307 	sub.w	r3, sl, r7
 8012396:	429a      	cmp	r2, r3
 8012398:	d819      	bhi.n	80123ce <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 801239a:	6823      	ldr	r3, [r4, #0]
 801239c:	b173      	cbz	r3, 80123bc <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 801239e:	2300      	movs	r3, #0
 80123a0:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 80123a2:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80123a4:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80123a8:	f7ff fd9c 	bl	8011ee4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80123ac:	2300      	movs	r3, #0
 80123ae:	6820      	ldr	r0, [r4, #0]
 80123b0:	461a      	mov	r2, r3
 80123b2:	a906      	add	r1, sp, #24
 80123b4:	f7fe f96a 	bl	801068c <xQueueGenericSend>
			configASSERT( xResult );
 80123b8:	2800      	cmp	r0, #0
 80123ba:	d1c5      	bne.n	8012348 <prvTimerTask+0x1d0>
 80123bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80123c0:	f383 8811 	msr	BASEPRI, r3
 80123c4:	f3bf 8f6f 	isb	sy
 80123c8:	f3bf 8f4f 	dsb	sy
 80123cc:	e7fe      	b.n	80123cc <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80123ce:	4b0a      	ldr	r3, [pc, #40]	; (80123f8 <prvTimerTask+0x280>)
 80123d0:	6818      	ldr	r0, [r3, #0]
 80123d2:	f7fd fdd7 	bl	800ff84 <vListInsert>
	return xProcessTimerNow;
 80123d6:	e7b7      	b.n	8012348 <prvTimerTask+0x1d0>
 80123d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80123dc:	f383 8811 	msr	BASEPRI, r3
 80123e0:	f3bf 8f6f 	isb	sy
 80123e4:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80123e8:	e7fe      	b.n	80123e8 <prvTimerTask+0x270>
 80123ea:	bf00      	nop
 80123ec:	20013714 	.word	0x20013714
 80123f0:	200137e4 	.word	0x200137e4
 80123f4:	20013838 	.word	0x20013838
 80123f8:	20013718 	.word	0x20013718

080123fc <xTimerCreateTimerTask>:
{
 80123fc:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 80123fe:	4c23      	ldr	r4, [pc, #140]	; (801248c <xTimerCreateTimerTask+0x90>)
{
 8012400:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 8012402:	f7fd fe4f 	bl	80100a4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8012406:	6825      	ldr	r5, [r4, #0]
 8012408:	b335      	cbz	r5, 8012458 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 801240a:	f7fd fe6d 	bl	80100e8 <vPortExitCritical>
	if( xTimerQueue != NULL )
 801240e:	6823      	ldr	r3, [r4, #0]
 8012410:	b1cb      	cbz	r3, 8012446 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8012412:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8012414:	aa07      	add	r2, sp, #28
 8012416:	a906      	add	r1, sp, #24
 8012418:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 801241a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 801241e:	f7fd fc61 	bl	800fce4 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8012422:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 8012426:	2302      	movs	r3, #2
 8012428:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801242c:	9300      	str	r3, [sp, #0]
 801242e:	9a07      	ldr	r2, [sp, #28]
 8012430:	4917      	ldr	r1, [pc, #92]	; (8012490 <xTimerCreateTimerTask+0x94>)
 8012432:	4818      	ldr	r0, [pc, #96]	; (8012494 <xTimerCreateTimerTask+0x98>)
 8012434:	4623      	mov	r3, r4
 8012436:	f7ff fa6d 	bl	8011914 <xTaskCreateStatic>
 801243a:	4b17      	ldr	r3, [pc, #92]	; (8012498 <xTimerCreateTimerTask+0x9c>)
 801243c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 801243e:	b110      	cbz	r0, 8012446 <xTimerCreateTimerTask+0x4a>
}
 8012440:	2001      	movs	r0, #1
 8012442:	b009      	add	sp, #36	; 0x24
 8012444:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012446:	f04f 0350 	mov.w	r3, #80	; 0x50
 801244a:	f383 8811 	msr	BASEPRI, r3
 801244e:	f3bf 8f6f 	isb	sy
 8012452:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8012456:	e7fe      	b.n	8012456 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 8012458:	4f10      	ldr	r7, [pc, #64]	; (801249c <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 801245a:	4e11      	ldr	r6, [pc, #68]	; (80124a0 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 801245c:	4638      	mov	r0, r7
 801245e:	f7fd fd71 	bl	800ff44 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8012462:	4630      	mov	r0, r6
 8012464:	f7fd fd6e 	bl	800ff44 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8012468:	4a0e      	ldr	r2, [pc, #56]	; (80124a4 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 801246a:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 801246c:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 801246e:	4a0e      	ldr	r2, [pc, #56]	; (80124a8 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8012470:	4b0e      	ldr	r3, [pc, #56]	; (80124ac <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 8012472:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8012474:	2110      	movs	r1, #16
 8012476:	4a0e      	ldr	r2, [pc, #56]	; (80124b0 <xTimerCreateTimerTask+0xb4>)
 8012478:	200a      	movs	r0, #10
 801247a:	f7fd ffb1 	bl	80103e0 <xQueueGenericCreateStatic>
 801247e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 8012480:	2800      	cmp	r0, #0
 8012482:	d0c2      	beq.n	801240a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8012484:	490b      	ldr	r1, [pc, #44]	; (80124b4 <xTimerCreateTimerTask+0xb8>)
 8012486:	f7fe ff0d 	bl	80112a4 <vQueueAddToRegistry>
 801248a:	e7be      	b.n	801240a <xTimerCreateTimerTask+0xe>
 801248c:	20013838 	.word	0x20013838
 8012490:	080315ec 	.word	0x080315ec
 8012494:	08012179 	.word	0x08012179
 8012498:	2001383c 	.word	0x2001383c
 801249c:	200137bc 	.word	0x200137bc
 80124a0:	200137d0 	.word	0x200137d0
 80124a4:	20013714 	.word	0x20013714
 80124a8:	20013718 	.word	0x20013718
 80124ac:	200137e8 	.word	0x200137e8
 80124b0:	2001371c 	.word	0x2001371c
 80124b4:	080315e4 	.word	0x080315e4

080124b8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80124b8:	8880      	ldrh	r0, [r0, #4]
 80124ba:	4770      	bx	lr

080124bc <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80124bc:	b570      	push	{r4, r5, r6, lr}
 80124be:	6803      	ldr	r3, [r0, #0]
 80124c0:	4605      	mov	r5, r0
 80124c2:	460c      	mov	r4, r1
 80124c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80124c6:	2100      	movs	r1, #0
 80124c8:	4798      	blx	r3
 80124ca:	682b      	ldr	r3, [r5, #0]
 80124cc:	4606      	mov	r6, r0
 80124ce:	6a1b      	ldr	r3, [r3, #32]
 80124d0:	4628      	mov	r0, r5
 80124d2:	4798      	blx	r3
 80124d4:	1ba4      	subs	r4, r4, r6
 80124d6:	b2a4      	uxth	r4, r4
 80124d8:	fbb4 f0f0 	udiv	r0, r4, r0
 80124dc:	bd70      	pop	{r4, r5, r6, pc}

080124de <_ZN8touchgfx17AbstractPartition5clearEv>:
 80124de:	2300      	movs	r3, #0
 80124e0:	8083      	strh	r3, [r0, #4]
 80124e2:	4770      	bx	lr

080124e4 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 80124e4:	b510      	push	{r4, lr}
 80124e6:	6803      	ldr	r3, [r0, #0]
 80124e8:	8881      	ldrh	r1, [r0, #4]
 80124ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80124ec:	4604      	mov	r4, r0
 80124ee:	4798      	blx	r3
 80124f0:	88a3      	ldrh	r3, [r4, #4]
 80124f2:	3301      	adds	r3, #1
 80124f4:	80a3      	strh	r3, [r4, #4]
 80124f6:	bd10      	pop	{r4, pc}

080124f8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 80124f8:	6803      	ldr	r3, [r0, #0]
 80124fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80124fc:	4718      	bx	r3

080124fe <_ZN8touchgfx17AbstractPartitionD1Ev>:
 80124fe:	4770      	bx	lr

08012500 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8012500:	4a02      	ldr	r2, [pc, #8]	; (801250c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8012502:	6002      	str	r2, [r0, #0]
 8012504:	2200      	movs	r2, #0
 8012506:	8082      	strh	r2, [r0, #4]
 8012508:	4770      	bx	lr
 801250a:	bf00      	nop
 801250c:	080315fc 	.word	0x080315fc

08012510 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 8012510:	b510      	push	{r4, lr}
 8012512:	6803      	ldr	r3, [r0, #0]
 8012514:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012518:	4604      	mov	r4, r0
 801251a:	4798      	blx	r3
 801251c:	b110      	cbz	r0, 8012524 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 801251e:	4620      	mov	r0, r4
 8012520:	f7f0 ff5a 	bl	80033d8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8012524:	bd10      	pop	{r4, pc}

08012526 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 8012526:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 801252a:	4770      	bx	lr

0801252c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 801252c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 8012530:	4770      	bx	lr

08012532 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 8012532:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 8012536:	4770      	bx	lr

08012538 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 8012538:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 801253c:	4770      	bx	lr

0801253e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 801253e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012540:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 8012544:	461e      	mov	r6, r3
 8012546:	6803      	ldr	r3, [r0, #0]
 8012548:	460f      	mov	r7, r1
 801254a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801254e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 8012552:	4604      	mov	r4, r0
 8012554:	4615      	mov	r5, r2
 8012556:	4798      	blx	r3
 8012558:	b93e      	cbnz	r6, 801256a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 801255a:	1bed      	subs	r5, r5, r7
 801255c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 8012560:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8012564:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8012568:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801256a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 801256e:	e7f7      	b.n	8012560 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

08012570 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 8012570:	b510      	push	{r4, lr}
 8012572:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8012576:	600c      	str	r4, [r1, #0]
 8012578:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801257c:	6011      	str	r1, [r2, #0]
 801257e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8012582:	801a      	strh	r2, [r3, #0]
 8012584:	9b02      	ldr	r3, [sp, #8]
 8012586:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 801258a:	801a      	strh	r2, [r3, #0]
 801258c:	bd10      	pop	{r4, pc}

0801258e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 801258e:	b510      	push	{r4, lr}
 8012590:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8012594:	600c      	str	r4, [r1, #0]
 8012596:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801259a:	6011      	str	r1, [r2, #0]
 801259c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80125a0:	801a      	strh	r2, [r3, #0]
 80125a2:	bd10      	pop	{r4, pc}

080125a4 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 80125a4:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80125a8:	600b      	str	r3, [r1, #0]
 80125aa:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80125ae:	6013      	str	r3, [r2, #0]
 80125b0:	4770      	bx	lr

080125b2 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 80125b2:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 80125b6:	4770      	bx	lr

080125b8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 80125b8:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 80125bc:	4770      	bx	lr

080125be <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 80125be:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 80125c2:	4770      	bx	lr

080125c4 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 80125c4:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 80125c8:	4770      	bx	lr

080125ca <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 80125ca:	4770      	bx	lr

080125cc <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 80125cc:	b510      	push	{r4, lr}
 80125ce:	21b4      	movs	r1, #180	; 0xb4
 80125d0:	4604      	mov	r4, r0
 80125d2:	f01a fbaa 	bl	802cd2a <_ZdlPvj>
 80125d6:	4620      	mov	r0, r4
 80125d8:	bd10      	pop	{r4, pc}

080125da <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 80125da:	b570      	push	{r4, r5, r6, lr}
 80125dc:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 80125e0:	428d      	cmp	r5, r1
 80125e2:	bfb8      	it	lt
 80125e4:	460d      	movlt	r5, r1
 80125e6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80125ea:	428d      	cmp	r5, r1
 80125ec:	4604      	mov	r4, r0
 80125ee:	bfa8      	it	ge
 80125f0:	460d      	movge	r5, r1
 80125f2:	4616      	mov	r6, r2
 80125f4:	b99a      	cbnz	r2, 801261e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 80125f6:	6803      	ldr	r3, [r0, #0]
 80125f8:	4629      	mov	r1, r5
 80125fa:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80125fe:	4798      	blx	r3
 8012600:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8012604:	b368      	cbz	r0, 8012662 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8012606:	6803      	ldr	r3, [r0, #0]
 8012608:	68db      	ldr	r3, [r3, #12]
 801260a:	4798      	blx	r3
 801260c:	b348      	cbz	r0, 8012662 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 801260e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8012612:	6803      	ldr	r3, [r0, #0]
 8012614:	4621      	mov	r1, r4
 8012616:	689b      	ldr	r3, [r3, #8]
 8012618:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801261c:	4718      	bx	r3
 801261e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8012622:	2b00      	cmp	r3, #0
 8012624:	dd08      	ble.n	8012638 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 8012626:	f006 fa23 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
 801262a:	4621      	mov	r1, r4
 801262c:	3004      	adds	r0, #4
 801262e:	f006 fa6c 	bl	8018b0a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8012632:	2300      	movs	r3, #0
 8012634:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8012638:	6823      	ldr	r3, [r4, #0]
 801263a:	4620      	mov	r0, r4
 801263c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8012640:	4798      	blx	r3
 8012642:	2300      	movs	r3, #0
 8012644:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8012648:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 801264c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 8012650:	f006 fa0e 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
 8012654:	4621      	mov	r1, r4
 8012656:	3004      	adds	r0, #4
 8012658:	f006 fb00 	bl	8018c5c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 801265c:	2301      	movs	r3, #1
 801265e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8012662:	bd70      	pop	{r4, r5, r6, pc}

08012664 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 8012664:	b510      	push	{r4, lr}
 8012666:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 801266a:	4299      	cmp	r1, r3
 801266c:	bfb8      	it	lt
 801266e:	4619      	movlt	r1, r3
 8012670:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8012674:	4299      	cmp	r1, r3
 8012676:	bfa8      	it	ge
 8012678:	4619      	movge	r1, r3
 801267a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 801267e:	428b      	cmp	r3, r1
 8012680:	4604      	mov	r4, r0
 8012682:	d010      	beq.n	80126a6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8012684:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 8012688:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 801268c:	b158      	cbz	r0, 80126a6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 801268e:	6803      	ldr	r3, [r0, #0]
 8012690:	68db      	ldr	r3, [r3, #12]
 8012692:	4798      	blx	r3
 8012694:	b138      	cbz	r0, 80126a6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8012696:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 801269a:	6803      	ldr	r3, [r0, #0]
 801269c:	4621      	mov	r1, r4
 801269e:	689b      	ldr	r3, [r3, #8]
 80126a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80126a4:	4718      	bx	r3
 80126a6:	bd10      	pop	{r4, pc}

080126a8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 80126a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80126aa:	4604      	mov	r4, r0
 80126ac:	460d      	mov	r5, r1
 80126ae:	b1a9      	cbz	r1, 80126dc <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 80126b0:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 80126b4:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 80126b8:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 80126bc:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 80126c0:	ab01      	add	r3, sp, #4
 80126c2:	1a12      	subs	r2, r2, r0
 80126c4:	1b89      	subs	r1, r1, r6
 80126c6:	1a38      	subs	r0, r7, r0
 80126c8:	f007 fc88 	bl	8019fdc <_ZN8touchgfx6muldivElllRl>
 80126cc:	4629      	mov	r1, r5
 80126ce:	ab01      	add	r3, sp, #4
 80126d0:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 80126d4:	4430      	add	r0, r6
 80126d6:	f007 fc81 	bl	8019fdc <_ZN8touchgfx6muldivElllRl>
 80126da:	b285      	uxth	r5, r0
 80126dc:	4628      	mov	r0, r5
 80126de:	b003      	add	sp, #12
 80126e0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080126e2 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 80126e2:	b570      	push	{r4, r5, r6, lr}
 80126e4:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 80126e8:	4604      	mov	r4, r0
 80126ea:	2b00      	cmp	r3, #0
 80126ec:	d035      	beq.n	801275a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80126ee:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 80126f2:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 80126f6:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 80126fa:	3001      	adds	r0, #1
 80126fc:	1ad2      	subs	r2, r2, r3
 80126fe:	b212      	sxth	r2, r2
 8012700:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8012704:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8012708:	2100      	movs	r1, #0
 801270a:	b280      	uxth	r0, r0
 801270c:	47a8      	blx	r5
 801270e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 8012712:	6823      	ldr	r3, [r4, #0]
 8012714:	4401      	add	r1, r0
 8012716:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801271a:	4620      	mov	r0, r4
 801271c:	4798      	blx	r3
 801271e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8012722:	429a      	cmp	r2, r3
 8012724:	db19      	blt.n	801275a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8012726:	2500      	movs	r5, #0
 8012728:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 801272c:	f006 f9a0 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
 8012730:	4621      	mov	r1, r4
 8012732:	3004      	adds	r0, #4
 8012734:	f006 f9e9 	bl	8018b0a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8012738:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801273c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8012740:	b158      	cbz	r0, 801275a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8012742:	6803      	ldr	r3, [r0, #0]
 8012744:	68db      	ldr	r3, [r3, #12]
 8012746:	4798      	blx	r3
 8012748:	b138      	cbz	r0, 801275a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801274a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801274e:	6803      	ldr	r3, [r0, #0]
 8012750:	4621      	mov	r1, r4
 8012752:	689b      	ldr	r3, [r3, #8]
 8012754:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012758:	4718      	bx	r3
 801275a:	bd70      	pop	{r4, r5, r6, pc}

0801275c <_ZN8touchgfx8DrawableC1Ev>:
 801275c:	4a0a      	ldr	r2, [pc, #40]	; (8012788 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 801275e:	6002      	str	r2, [r0, #0]
 8012760:	2200      	movs	r2, #0
 8012762:	8082      	strh	r2, [r0, #4]
 8012764:	80c2      	strh	r2, [r0, #6]
 8012766:	8102      	strh	r2, [r0, #8]
 8012768:	8142      	strh	r2, [r0, #10]
 801276a:	8182      	strh	r2, [r0, #12]
 801276c:	81c2      	strh	r2, [r0, #14]
 801276e:	8202      	strh	r2, [r0, #16]
 8012770:	8242      	strh	r2, [r0, #18]
 8012772:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012776:	61c2      	str	r2, [r0, #28]
 8012778:	8402      	strh	r2, [r0, #32]
 801277a:	8442      	strh	r2, [r0, #34]	; 0x22
 801277c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8012780:	2201      	movs	r2, #1
 8012782:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8012786:	4770      	bx	lr
 8012788:	08031f7c 	.word	0x08031f7c

0801278c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 801278c:	b570      	push	{r4, r5, r6, lr}
 801278e:	6803      	ldr	r3, [r0, #0]
 8012790:	4604      	mov	r4, r0
 8012792:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012794:	4615      	mov	r5, r2
 8012796:	4798      	blx	r3
 8012798:	6823      	ldr	r3, [r4, #0]
 801279a:	4629      	mov	r1, r5
 801279c:	4620      	mov	r0, r4
 801279e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80127a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80127a4:	4718      	bx	r3

080127a6 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 80127a6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80127aa:	4604      	mov	r4, r0
 80127ac:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 80127b0:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 80127b4:	460e      	mov	r6, r1
 80127b6:	4615      	mov	r5, r2
 80127b8:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80127bc:	4619      	mov	r1, r3
 80127be:	463a      	mov	r2, r7
 80127c0:	3058      	adds	r0, #88	; 0x58
 80127c2:	4698      	mov	r8, r3
 80127c4:	f7ff ffe2 	bl	801278c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80127c8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 80127cc:	4446      	add	r6, r8
 80127ce:	42b3      	cmp	r3, r6
 80127d0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80127d4:	bfb8      	it	lt
 80127d6:	8126      	strhlt	r6, [r4, #8]
 80127d8:	443d      	add	r5, r7
 80127da:	42ab      	cmp	r3, r5
 80127dc:	bfb8      	it	lt
 80127de:	8165      	strhlt	r5, [r4, #10]
 80127e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080127e4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 80127e4:	b510      	push	{r4, lr}
 80127e6:	4604      	mov	r4, r0
 80127e8:	302c      	adds	r0, #44	; 0x2c
 80127ea:	f003 fc42 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80127ee:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 80127f2:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 80127f6:	4620      	mov	r0, r4
 80127f8:	f7ff ffc8 	bl	801278c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80127fc:	bd10      	pop	{r4, pc}
	...

08012800 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8012800:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012802:	4604      	mov	r4, r0
 8012804:	4626      	mov	r6, r4
 8012806:	2500      	movs	r5, #0
 8012808:	f7ff ffa8 	bl	801275c <_ZN8touchgfx8DrawableC1Ev>
 801280c:	4b23      	ldr	r3, [pc, #140]	; (801289c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 801280e:	62a5      	str	r5, [r4, #40]	; 0x28
 8012810:	f846 3b2c 	str.w	r3, [r6], #44
 8012814:	2226      	movs	r2, #38	; 0x26
 8012816:	4629      	mov	r1, r5
 8012818:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801281c:	4630      	mov	r0, r6
 801281e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8012822:	f01b fb6e 	bl	802df02 <memset>
 8012826:	4630      	mov	r0, r6
 8012828:	f7ff ff98 	bl	801275c <_ZN8touchgfx8DrawableC1Ev>
 801282c:	a902      	add	r1, sp, #8
 801282e:	4b1c      	ldr	r3, [pc, #112]	; (80128a0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8012830:	62e3      	str	r3, [r4, #44]	; 0x2c
 8012832:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8012836:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 801283a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 801283e:	4630      	mov	r0, r6
 8012840:	f104 0758 	add.w	r7, r4, #88	; 0x58
 8012844:	f003 fc15 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012848:	4638      	mov	r0, r7
 801284a:	f7ff ff87 	bl	801275c <_ZN8touchgfx8DrawableC1Ev>
 801284e:	4b15      	ldr	r3, [pc, #84]	; (80128a4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8012850:	65a3      	str	r3, [r4, #88]	; 0x58
 8012852:	2364      	movs	r3, #100	; 0x64
 8012854:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8012858:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 801285c:	4b12      	ldr	r3, [pc, #72]	; (80128a8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 801285e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8012862:	4629      	mov	r1, r5
 8012864:	4630      	mov	r0, r6
 8012866:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 801286a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 801286e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 8012872:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8012876:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 801287a:	f7f0 fd09 	bl	8003290 <_ZN8touchgfx8Drawable4setXEs>
 801287e:	4629      	mov	r1, r5
 8012880:	4630      	mov	r0, r6
 8012882:	f7f0 fd07 	bl	8003294 <_ZN8touchgfx8Drawable4setYEs>
 8012886:	4631      	mov	r1, r6
 8012888:	4620      	mov	r0, r4
 801288a:	f000 f819 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801288e:	4620      	mov	r0, r4
 8012890:	4639      	mov	r1, r7
 8012892:	f000 f815 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012896:	4620      	mov	r0, r4
 8012898:	b003      	add	sp, #12
 801289a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801289c:	08031630 	.word	0x08031630
 80128a0:	08031e38 	.word	0x08031e38
 80128a4:	08031704 	.word	0x08031704
 80128a8:	0801a7b7 	.word	0x0801a7b7

080128ac <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80128ac:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80128ae:	2000      	movs	r0, #0
 80128b0:	b12b      	cbz	r3, 80128be <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80128b2:	b920      	cbnz	r0, 80128be <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80128b4:	1a5a      	subs	r2, r3, r1
 80128b6:	4250      	negs	r0, r2
 80128b8:	4150      	adcs	r0, r2
 80128ba:	699b      	ldr	r3, [r3, #24]
 80128bc:	e7f8      	b.n	80128b0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80128be:	4770      	bx	lr

080128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80128c0:	2300      	movs	r3, #0
 80128c2:	6148      	str	r0, [r1, #20]
 80128c4:	618b      	str	r3, [r1, #24]
 80128c6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80128c8:	b913      	cbnz	r3, 80128d0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 80128ca:	6281      	str	r1, [r0, #40]	; 0x28
 80128cc:	4770      	bx	lr
 80128ce:	4613      	mov	r3, r2
 80128d0:	699a      	ldr	r2, [r3, #24]
 80128d2:	2a00      	cmp	r2, #0
 80128d4:	d1fb      	bne.n	80128ce <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 80128d6:	6199      	str	r1, [r3, #24]
 80128d8:	4770      	bx	lr

080128da <_ZN8touchgfx9Container9removeAllEv>:
 80128da:	2200      	movs	r2, #0
 80128dc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80128de:	b123      	cbz	r3, 80128ea <_ZN8touchgfx9Container9removeAllEv+0x10>
 80128e0:	6999      	ldr	r1, [r3, #24]
 80128e2:	6281      	str	r1, [r0, #40]	; 0x28
 80128e4:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80128e8:	e7f8      	b.n	80128dc <_ZN8touchgfx9Container9removeAllEv+0x2>
 80128ea:	4770      	bx	lr

080128ec <_ZN8touchgfx9Container6unlinkEv>:
 80128ec:	2300      	movs	r3, #0
 80128ee:	6283      	str	r3, [r0, #40]	; 0x28
 80128f0:	4770      	bx	lr

080128f2 <_ZNK8touchgfx9Container12getSolidRectEv>:
 80128f2:	2200      	movs	r2, #0
 80128f4:	8002      	strh	r2, [r0, #0]
 80128f6:	8042      	strh	r2, [r0, #2]
 80128f8:	8082      	strh	r2, [r0, #4]
 80128fa:	80c2      	strh	r2, [r0, #6]
 80128fc:	4770      	bx	lr

080128fe <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 80128fe:	b570      	push	{r4, r5, r6, lr}
 8012900:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012902:	460d      	mov	r5, r1
 8012904:	4616      	mov	r6, r2
 8012906:	b13c      	cbz	r4, 8012918 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8012908:	6823      	ldr	r3, [r4, #0]
 801290a:	4620      	mov	r0, r4
 801290c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801290e:	4632      	mov	r2, r6
 8012910:	4629      	mov	r1, r5
 8012912:	4798      	blx	r3
 8012914:	69a4      	ldr	r4, [r4, #24]
 8012916:	e7f6      	b.n	8012906 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8012918:	bd70      	pop	{r4, r5, r6, pc}

0801291a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 801291a:	b538      	push	{r3, r4, r5, lr}
 801291c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801291e:	460d      	mov	r5, r1
 8012920:	b134      	cbz	r4, 8012930 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8012922:	682b      	ldr	r3, [r5, #0]
 8012924:	4621      	mov	r1, r4
 8012926:	689b      	ldr	r3, [r3, #8]
 8012928:	4628      	mov	r0, r5
 801292a:	4798      	blx	r3
 801292c:	69a4      	ldr	r4, [r4, #24]
 801292e:	e7f7      	b.n	8012920 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8012930:	bd38      	pop	{r3, r4, r5, pc}

08012932 <_ZN8touchgfx9ContainerD1Ev>:
 8012932:	4770      	bx	lr

08012934 <_ZN8touchgfx9ContainerD0Ev>:
 8012934:	b510      	push	{r4, lr}
 8012936:	212c      	movs	r1, #44	; 0x2c
 8012938:	4604      	mov	r4, r0
 801293a:	f01a f9f6 	bl	802cd2a <_ZdlPvj>
 801293e:	4620      	mov	r0, r4
 8012940:	bd10      	pop	{r4, pc}

08012942 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8012942:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012944:	b19b      	cbz	r3, 801296e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8012946:	428b      	cmp	r3, r1
 8012948:	d109      	bne.n	801295e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 801294a:	699a      	ldr	r2, [r3, #24]
 801294c:	2100      	movs	r1, #0
 801294e:	6159      	str	r1, [r3, #20]
 8012950:	6282      	str	r2, [r0, #40]	; 0x28
 8012952:	b902      	cbnz	r2, 8012956 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8012954:	4770      	bx	lr
 8012956:	6199      	str	r1, [r3, #24]
 8012958:	4770      	bx	lr
 801295a:	4613      	mov	r3, r2
 801295c:	b13a      	cbz	r2, 801296e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801295e:	699a      	ldr	r2, [r3, #24]
 8012960:	428a      	cmp	r2, r1
 8012962:	d1fa      	bne.n	801295a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8012964:	698a      	ldr	r2, [r1, #24]
 8012966:	619a      	str	r2, [r3, #24]
 8012968:	2300      	movs	r3, #0
 801296a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 801296e:	4770      	bx	lr

08012970 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8012970:	b410      	push	{r4}
 8012972:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012974:	4604      	mov	r4, r0
 8012976:	b92b      	cbnz	r3, 8012984 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8012978:	6803      	ldr	r3, [r0, #0]
 801297a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801297e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8012980:	4611      	mov	r1, r2
 8012982:	4718      	bx	r3
 8012984:	b941      	cbnz	r1, 8012998 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8012986:	6193      	str	r3, [r2, #24]
 8012988:	6282      	str	r2, [r0, #40]	; 0x28
 801298a:	6154      	str	r4, [r2, #20]
 801298c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012990:	4770      	bx	lr
 8012992:	4603      	mov	r3, r0
 8012994:	2800      	cmp	r0, #0
 8012996:	d0f9      	beq.n	801298c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8012998:	4299      	cmp	r1, r3
 801299a:	6998      	ldr	r0, [r3, #24]
 801299c:	d1f9      	bne.n	8012992 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 801299e:	6190      	str	r0, [r2, #24]
 80129a0:	618a      	str	r2, [r1, #24]
 80129a2:	e7f2      	b.n	801298a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

080129a4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80129a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80129a8:	461f      	mov	r7, r3
 80129aa:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 80129ae:	460d      	mov	r5, r1
 80129b0:	4616      	mov	r6, r2
 80129b2:	b103      	cbz	r3, 80129b6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 80129b4:	6038      	str	r0, [r7, #0]
 80129b6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80129b8:	b314      	cbz	r4, 8012a00 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80129ba:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80129be:	b1eb      	cbz	r3, 80129fc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80129c0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80129c4:	428d      	cmp	r5, r1
 80129c6:	db19      	blt.n	80129fc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80129c8:	8923      	ldrh	r3, [r4, #8]
 80129ca:	b289      	uxth	r1, r1
 80129cc:	440b      	add	r3, r1
 80129ce:	b21b      	sxth	r3, r3
 80129d0:	429d      	cmp	r5, r3
 80129d2:	da13      	bge.n	80129fc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80129d4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80129d8:	4296      	cmp	r6, r2
 80129da:	db0f      	blt.n	80129fc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80129dc:	8963      	ldrh	r3, [r4, #10]
 80129de:	b292      	uxth	r2, r2
 80129e0:	4413      	add	r3, r2
 80129e2:	b21b      	sxth	r3, r3
 80129e4:	429e      	cmp	r6, r3
 80129e6:	da09      	bge.n	80129fc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80129e8:	6823      	ldr	r3, [r4, #0]
 80129ea:	1ab2      	subs	r2, r6, r2
 80129ec:	1a69      	subs	r1, r5, r1
 80129ee:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 80129f2:	b212      	sxth	r2, r2
 80129f4:	463b      	mov	r3, r7
 80129f6:	b209      	sxth	r1, r1
 80129f8:	4620      	mov	r0, r4
 80129fa:	47c0      	blx	r8
 80129fc:	69a4      	ldr	r4, [r4, #24]
 80129fe:	e7db      	b.n	80129b8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8012a00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012a04 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8012a04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a08:	4c6e      	ldr	r4, [pc, #440]	; (8012bc4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8012a0a:	b0a1      	sub	sp, #132	; 0x84
 8012a0c:	6824      	ldr	r4, [r4, #0]
 8012a0e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8012a10:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8012a14:	9303      	str	r3, [sp, #12]
 8012a16:	2400      	movs	r4, #0
 8012a18:	802c      	strh	r4, [r5, #0]
 8012a1a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8012a1c:	802c      	strh	r4, [r5, #0]
 8012a1e:	601c      	str	r4, [r3, #0]
 8012a20:	4606      	mov	r6, r0
 8012a22:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8012a26:	f7ff ffbd 	bl	80129a4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8012a2a:	f1b9 0f03 	cmp.w	r9, #3
 8012a2e:	f340 80c2 	ble.w	8012bb6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8012a32:	4631      	mov	r1, r6
 8012a34:	a80c      	add	r0, sp, #48	; 0x30
 8012a36:	f007 f99f 	bl	8019d78 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012a3a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8012a3e:	9306      	str	r3, [sp, #24]
 8012a40:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8012a44:	9307      	str	r3, [sp, #28]
 8012a46:	9b03      	ldr	r3, [sp, #12]
 8012a48:	f8d3 a000 	ldr.w	sl, [r3]
 8012a4c:	f1ba 0f00 	cmp.w	sl, #0
 8012a50:	f000 80b4 	beq.w	8012bbc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8012a54:	4651      	mov	r1, sl
 8012a56:	a810      	add	r0, sp, #64	; 0x40
 8012a58:	f007 f98e 	bl	8019d78 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012a5c:	9b01      	ldr	r3, [sp, #4]
 8012a5e:	9a06      	ldr	r2, [sp, #24]
 8012a60:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8012a64:	189d      	adds	r5, r3, r2
 8012a66:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8012a6a:	9a07      	ldr	r2, [sp, #28]
 8012a6c:	2002      	movs	r0, #2
 8012a6e:	fb91 f1f0 	sdiv	r1, r1, r0
 8012a72:	4419      	add	r1, r3
 8012a74:	1a6d      	subs	r5, r5, r1
 8012a76:	9b02      	ldr	r3, [sp, #8]
 8012a78:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8012a7c:	4413      	add	r3, r2
 8012a7e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8012a82:	fb92 f2f0 	sdiv	r2, r2, r0
 8012a86:	440a      	add	r2, r1
 8012a88:	1a9b      	subs	r3, r3, r2
 8012a8a:	435b      	muls	r3, r3
 8012a8c:	fb05 3505 	mla	r5, r5, r5, r3
 8012a90:	4f4d      	ldr	r7, [pc, #308]	; (8012bc8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8012a92:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8012a94:	ac10      	add	r4, sp, #64	; 0x40
 8012a96:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012a98:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8012a9a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012a9c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8012a9e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012aa0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8012aa4:	f1b9 0f0c 	cmp.w	r9, #12
 8012aa8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8012aac:	f04f 0303 	mov.w	r3, #3
 8012ab0:	bfc8      	it	gt
 8012ab2:	4698      	movgt	r8, r3
 8012ab4:	f8cd 9000 	str.w	r9, [sp]
 8012ab8:	f04f 0400 	mov.w	r4, #0
 8012abc:	bfdc      	itt	le
 8012abe:	f109 32ff 	addle.w	r2, r9, #4294967295
 8012ac2:	fb92 f8f3 	sdivle	r8, r2, r3
 8012ac6:	1c63      	adds	r3, r4, #1
 8012ac8:	aa10      	add	r2, sp, #64	; 0x40
 8012aca:	f004 0401 	and.w	r4, r4, #1
 8012ace:	9308      	str	r3, [sp, #32]
 8012ad0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8012ad4:	9b00      	ldr	r3, [sp, #0]
 8012ad6:	fb93 f3f8 	sdiv	r3, r3, r8
 8012ada:	b29b      	uxth	r3, r3
 8012adc:	3404      	adds	r4, #4
 8012ade:	f04f 0b00 	mov.w	fp, #0
 8012ae2:	9304      	str	r3, [sp, #16]
 8012ae4:	9a04      	ldr	r2, [sp, #16]
 8012ae6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8012aea:	fb13 f302 	smulbb	r3, r3, r2
 8012aee:	9a01      	ldr	r2, [sp, #4]
 8012af0:	b29b      	uxth	r3, r3
 8012af2:	1899      	adds	r1, r3, r2
 8012af4:	9305      	str	r3, [sp, #20]
 8012af6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8012afa:	b209      	sxth	r1, r1
 8012afc:	4299      	cmp	r1, r3
 8012afe:	db4d      	blt.n	8012b9c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012b00:	8932      	ldrh	r2, [r6, #8]
 8012b02:	4413      	add	r3, r2
 8012b04:	b21b      	sxth	r3, r3
 8012b06:	4299      	cmp	r1, r3
 8012b08:	da48      	bge.n	8012b9c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012b0a:	9b04      	ldr	r3, [sp, #16]
 8012b0c:	6827      	ldr	r7, [r4, #0]
 8012b0e:	fb17 f703 	smulbb	r7, r7, r3
 8012b12:	9b02      	ldr	r3, [sp, #8]
 8012b14:	b2bf      	uxth	r7, r7
 8012b16:	18fa      	adds	r2, r7, r3
 8012b18:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8012b1c:	b212      	sxth	r2, r2
 8012b1e:	429a      	cmp	r2, r3
 8012b20:	db3c      	blt.n	8012b9c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012b22:	8970      	ldrh	r0, [r6, #10]
 8012b24:	4403      	add	r3, r0
 8012b26:	b21b      	sxth	r3, r3
 8012b28:	429a      	cmp	r2, r3
 8012b2a:	da37      	bge.n	8012b9c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012b2c:	2300      	movs	r3, #0
 8012b2e:	930b      	str	r3, [sp, #44]	; 0x2c
 8012b30:	4630      	mov	r0, r6
 8012b32:	ab0b      	add	r3, sp, #44	; 0x2c
 8012b34:	f7ff ff36 	bl	80129a4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8012b38:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012b3a:	b37a      	cbz	r2, 8012b9c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012b3c:	4552      	cmp	r2, sl
 8012b3e:	d02d      	beq.n	8012b9c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012b40:	4611      	mov	r1, r2
 8012b42:	a80e      	add	r0, sp, #56	; 0x38
 8012b44:	9209      	str	r2, [sp, #36]	; 0x24
 8012b46:	f007 f917 	bl	8019d78 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012b4a:	9a06      	ldr	r2, [sp, #24]
 8012b4c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8012b50:	9b01      	ldr	r3, [sp, #4]
 8012b52:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8012b56:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8012b5a:	4413      	add	r3, r2
 8012b5c:	f04f 0e02 	mov.w	lr, #2
 8012b60:	fb91 f1fe 	sdiv	r1, r1, lr
 8012b64:	4401      	add	r1, r0
 8012b66:	1a58      	subs	r0, r3, r1
 8012b68:	9a07      	ldr	r2, [sp, #28]
 8012b6a:	9b02      	ldr	r3, [sp, #8]
 8012b6c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8012b70:	fb9c fcfe 	sdiv	ip, ip, lr
 8012b74:	4413      	add	r3, r2
 8012b76:	448c      	add	ip, r1
 8012b78:	eba3 030c 	sub.w	r3, r3, ip
 8012b7c:	435b      	muls	r3, r3
 8012b7e:	fb00 3300 	mla	r3, r0, r0, r3
 8012b82:	42ab      	cmp	r3, r5
 8012b84:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012b86:	d208      	bcs.n	8012b9a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8012b88:	9803      	ldr	r0, [sp, #12]
 8012b8a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8012b8c:	6001      	str	r1, [r0, #0]
 8012b8e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8012b90:	9805      	ldr	r0, [sp, #20]
 8012b92:	8008      	strh	r0, [r1, #0]
 8012b94:	992b      	ldr	r1, [sp, #172]	; 0xac
 8012b96:	461d      	mov	r5, r3
 8012b98:	800f      	strh	r7, [r1, #0]
 8012b9a:	4692      	mov	sl, r2
 8012b9c:	f10b 0b01 	add.w	fp, fp, #1
 8012ba0:	f1bb 0f04 	cmp.w	fp, #4
 8012ba4:	f104 0408 	add.w	r4, r4, #8
 8012ba8:	d19c      	bne.n	8012ae4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8012baa:	9b00      	ldr	r3, [sp, #0]
 8012bac:	9c08      	ldr	r4, [sp, #32]
 8012bae:	444b      	add	r3, r9
 8012bb0:	4544      	cmp	r4, r8
 8012bb2:	9300      	str	r3, [sp, #0]
 8012bb4:	d187      	bne.n	8012ac6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8012bb6:	b021      	add	sp, #132	; 0x84
 8012bb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012bbc:	f04f 35ff 	mov.w	r5, #4294967295
 8012bc0:	e766      	b.n	8012a90 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8012bc2:	bf00      	nop
 8012bc4:	2001384c 	.word	0x2001384c
 8012bc8:	0802ec1c 	.word	0x0802ec1c

08012bcc <_ZN8touchgfx4RectaNERKS0_>:
 8012bcc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012bd0:	f9b1 7000 	ldrsh.w	r7, [r1]
 8012bd4:	888c      	ldrh	r4, [r1, #4]
 8012bd6:	f9b0 9000 	ldrsh.w	r9, [r0]
 8012bda:	443c      	add	r4, r7
 8012bdc:	b2a4      	uxth	r4, r4
 8012bde:	fa0f f884 	sxth.w	r8, r4
 8012be2:	45c1      	cmp	r9, r8
 8012be4:	da2f      	bge.n	8012c46 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012be6:	8882      	ldrh	r2, [r0, #4]
 8012be8:	444a      	add	r2, r9
 8012bea:	b292      	uxth	r2, r2
 8012bec:	fa0f fe82 	sxth.w	lr, r2
 8012bf0:	4577      	cmp	r7, lr
 8012bf2:	da28      	bge.n	8012c46 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012bf4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8012bf8:	88cb      	ldrh	r3, [r1, #6]
 8012bfa:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8012bfe:	442b      	add	r3, r5
 8012c00:	b21b      	sxth	r3, r3
 8012c02:	429e      	cmp	r6, r3
 8012c04:	da1f      	bge.n	8012c46 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012c06:	88c3      	ldrh	r3, [r0, #6]
 8012c08:	4433      	add	r3, r6
 8012c0a:	b29b      	uxth	r3, r3
 8012c0c:	fa0f fc83 	sxth.w	ip, r3
 8012c10:	4565      	cmp	r5, ip
 8012c12:	da18      	bge.n	8012c46 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012c14:	454f      	cmp	r7, r9
 8012c16:	bfb8      	it	lt
 8012c18:	464f      	movlt	r7, r9
 8012c1a:	42b5      	cmp	r5, r6
 8012c1c:	bfb8      	it	lt
 8012c1e:	4635      	movlt	r5, r6
 8012c20:	45f0      	cmp	r8, lr
 8012c22:	bfd8      	it	le
 8012c24:	4622      	movle	r2, r4
 8012c26:	1bd2      	subs	r2, r2, r7
 8012c28:	8082      	strh	r2, [r0, #4]
 8012c2a:	884a      	ldrh	r2, [r1, #2]
 8012c2c:	88c9      	ldrh	r1, [r1, #6]
 8012c2e:	8007      	strh	r7, [r0, #0]
 8012c30:	440a      	add	r2, r1
 8012c32:	b292      	uxth	r2, r2
 8012c34:	b211      	sxth	r1, r2
 8012c36:	458c      	cmp	ip, r1
 8012c38:	bfa8      	it	ge
 8012c3a:	4613      	movge	r3, r2
 8012c3c:	1b5b      	subs	r3, r3, r5
 8012c3e:	80c3      	strh	r3, [r0, #6]
 8012c40:	8045      	strh	r5, [r0, #2]
 8012c42:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012c46:	2300      	movs	r3, #0
 8012c48:	8003      	strh	r3, [r0, #0]
 8012c4a:	8043      	strh	r3, [r0, #2]
 8012c4c:	8083      	strh	r3, [r0, #4]
 8012c4e:	80c3      	strh	r3, [r0, #6]
 8012c50:	e7f7      	b.n	8012c42 <_ZN8touchgfx4RectaNERKS0_+0x76>

08012c52 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8012c52:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8012c56:	2b00      	cmp	r3, #0
 8012c58:	dd06      	ble.n	8012c68 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8012c5a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8012c5e:	2800      	cmp	r0, #0
 8012c60:	bfcc      	ite	gt
 8012c62:	2000      	movgt	r0, #0
 8012c64:	2001      	movle	r0, #1
 8012c66:	4770      	bx	lr
 8012c68:	2001      	movs	r0, #1
 8012c6a:	4770      	bx	lr

08012c6c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8012c6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012c70:	2300      	movs	r3, #0
 8012c72:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8012c74:	8003      	strh	r3, [r0, #0]
 8012c76:	4604      	mov	r4, r0
 8012c78:	8043      	strh	r3, [r0, #2]
 8012c7a:	8083      	strh	r3, [r0, #4]
 8012c7c:	80c3      	strh	r3, [r0, #6]
 8012c7e:	2d00      	cmp	r5, #0
 8012c80:	d040      	beq.n	8012d04 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8012c82:	1d28      	adds	r0, r5, #4
 8012c84:	f7ff ffe5 	bl	8012c52 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012c88:	b988      	cbnz	r0, 8012cae <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8012c8a:	4620      	mov	r0, r4
 8012c8c:	f7ff ffe1 	bl	8012c52 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012c90:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8012c94:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8012c98:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8012c9c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8012ca0:	b138      	cbz	r0, 8012cb2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8012ca2:	8022      	strh	r2, [r4, #0]
 8012ca4:	8063      	strh	r3, [r4, #2]
 8012ca6:	f8a4 e004 	strh.w	lr, [r4, #4]
 8012caa:	f8a4 c006 	strh.w	ip, [r4, #6]
 8012cae:	69ad      	ldr	r5, [r5, #24]
 8012cb0:	e7e5      	b.n	8012c7e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8012cb2:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012cb6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8012cba:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8012cbe:	4290      	cmp	r0, r2
 8012cc0:	4607      	mov	r7, r0
 8012cc2:	bfa8      	it	ge
 8012cc4:	4617      	movge	r7, r2
 8012cc6:	4472      	add	r2, lr
 8012cc8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8012ccc:	8027      	strh	r7, [r4, #0]
 8012cce:	4299      	cmp	r1, r3
 8012cd0:	460e      	mov	r6, r1
 8012cd2:	4440      	add	r0, r8
 8012cd4:	bfa8      	it	ge
 8012cd6:	461e      	movge	r6, r3
 8012cd8:	4471      	add	r1, lr
 8012cda:	4463      	add	r3, ip
 8012cdc:	b200      	sxth	r0, r0
 8012cde:	b212      	sxth	r2, r2
 8012ce0:	b209      	sxth	r1, r1
 8012ce2:	b21b      	sxth	r3, r3
 8012ce4:	4290      	cmp	r0, r2
 8012ce6:	bfac      	ite	ge
 8012ce8:	ebc7 0200 	rsbge	r2, r7, r0
 8012cec:	ebc7 0202 	rsblt	r2, r7, r2
 8012cf0:	4299      	cmp	r1, r3
 8012cf2:	bfac      	ite	ge
 8012cf4:	ebc6 0301 	rsbge	r3, r6, r1
 8012cf8:	ebc6 0303 	rsblt	r3, r6, r3
 8012cfc:	8066      	strh	r6, [r4, #2]
 8012cfe:	80a2      	strh	r2, [r4, #4]
 8012d00:	80e3      	strh	r3, [r4, #6]
 8012d02:	e7d4      	b.n	8012cae <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8012d04:	4620      	mov	r0, r4
 8012d06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012d0a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8012d0a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8012d0e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8012d12:	b383      	cbz	r3, 8012d76 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012d14:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012d16:	b374      	cbz	r4, 8012d76 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012d18:	f9b1 5000 	ldrsh.w	r5, [r1]
 8012d1c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8012d20:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8012d24:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8012d28:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012d2c:	b303      	cbz	r3, 8012d70 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8012d2e:	4668      	mov	r0, sp
 8012d30:	1d21      	adds	r1, r4, #4
 8012d32:	f8ad 5000 	strh.w	r5, [sp]
 8012d36:	f8ad 6002 	strh.w	r6, [sp, #2]
 8012d3a:	f8ad 7004 	strh.w	r7, [sp, #4]
 8012d3e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8012d42:	f7ff ff43 	bl	8012bcc <_ZN8touchgfx4RectaNERKS0_>
 8012d46:	4668      	mov	r0, sp
 8012d48:	f7ff ff83 	bl	8012c52 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012d4c:	b980      	cbnz	r0, 8012d70 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8012d4e:	f8bd 3000 	ldrh.w	r3, [sp]
 8012d52:	88a2      	ldrh	r2, [r4, #4]
 8012d54:	1a9b      	subs	r3, r3, r2
 8012d56:	f8ad 3000 	strh.w	r3, [sp]
 8012d5a:	88e2      	ldrh	r2, [r4, #6]
 8012d5c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012d60:	1a9b      	subs	r3, r3, r2
 8012d62:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012d66:	6823      	ldr	r3, [r4, #0]
 8012d68:	4669      	mov	r1, sp
 8012d6a:	689b      	ldr	r3, [r3, #8]
 8012d6c:	4620      	mov	r0, r4
 8012d6e:	4798      	blx	r3
 8012d70:	69a4      	ldr	r4, [r4, #24]
 8012d72:	2c00      	cmp	r4, #0
 8012d74:	d1d8      	bne.n	8012d28 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8012d76:	b002      	add	sp, #8
 8012d78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012d7c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8012d7c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012d7e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8012d82:	460d      	mov	r5, r1
 8012d84:	4616      	mov	r6, r2
 8012d86:	b323      	cbz	r3, 8012dd2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8012d88:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012d8a:	b314      	cbz	r4, 8012dd2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8012d8c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012d90:	b1eb      	cbz	r3, 8012dce <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8012d92:	6828      	ldr	r0, [r5, #0]
 8012d94:	6869      	ldr	r1, [r5, #4]
 8012d96:	466b      	mov	r3, sp
 8012d98:	c303      	stmia	r3!, {r0, r1}
 8012d9a:	4668      	mov	r0, sp
 8012d9c:	1d21      	adds	r1, r4, #4
 8012d9e:	f7ff ff15 	bl	8012bcc <_ZN8touchgfx4RectaNERKS0_>
 8012da2:	4668      	mov	r0, sp
 8012da4:	f7ff ff55 	bl	8012c52 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012da8:	b988      	cbnz	r0, 8012dce <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8012daa:	f8bd 3000 	ldrh.w	r3, [sp]
 8012dae:	88a2      	ldrh	r2, [r4, #4]
 8012db0:	1a9b      	subs	r3, r3, r2
 8012db2:	f8ad 3000 	strh.w	r3, [sp]
 8012db6:	88e2      	ldrh	r2, [r4, #6]
 8012db8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012dbc:	1a9b      	subs	r3, r3, r2
 8012dbe:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012dc2:	6823      	ldr	r3, [r4, #0]
 8012dc4:	4632      	mov	r2, r6
 8012dc6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8012dc8:	4669      	mov	r1, sp
 8012dca:	4620      	mov	r0, r4
 8012dcc:	4798      	blx	r3
 8012dce:	69a4      	ldr	r4, [r4, #24]
 8012dd0:	e7db      	b.n	8012d8a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8012dd2:	b002      	add	sp, #8
 8012dd4:	bd70      	pop	{r4, r5, r6, pc}

08012dd6 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>:
 8012dd6:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012dd8:	4770      	bx	lr
	...

08012ddc <_ZN8touchgfx14SwipeContainerD1Ev>:
 8012ddc:	4b05      	ldr	r3, [pc, #20]	; (8012df4 <_ZN8touchgfx14SwipeContainerD1Ev+0x18>)
 8012dde:	b510      	push	{r4, lr}
 8012de0:	6003      	str	r3, [r0, #0]
 8012de2:	4604      	mov	r4, r0
 8012de4:	f005 fe44 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
 8012de8:	4621      	mov	r1, r4
 8012dea:	3004      	adds	r0, #4
 8012dec:	f005 fe8d 	bl	8018b0a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8012df0:	4620      	mov	r0, r4
 8012df2:	bd10      	pop	{r4, pc}
 8012df4:	08031794 	.word	0x08031794

08012df8 <_ZN8touchgfx14SwipeContainerD0Ev>:
 8012df8:	b510      	push	{r4, lr}
 8012dfa:	4604      	mov	r4, r0
 8012dfc:	f7ff ffee 	bl	8012ddc <_ZN8touchgfx14SwipeContainerD1Ev>
 8012e00:	4620      	mov	r0, r4
 8012e02:	21f4      	movs	r1, #244	; 0xf4
 8012e04:	f019 ff91 	bl	802cd2a <_ZdlPvj>
 8012e08:	4620      	mov	r0, r4
 8012e0a:	bd10      	pop	{r4, pc}

08012e0c <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE>:
 8012e0c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012e10:	2b04      	cmp	r3, #4
 8012e12:	d117      	bne.n	8012e44 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8012e14:	790b      	ldrb	r3, [r1, #4]
 8012e16:	2b01      	cmp	r3, #1
 8012e18:	d114      	bne.n	8012e44 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8012e1a:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 8012e1e:	8f82      	ldrh	r2, [r0, #60]	; 0x3c
 8012e20:	8643      	strh	r3, [r0, #50]	; 0x32
 8012e22:	2b00      	cmp	r3, #0
 8012e24:	8682      	strh	r2, [r0, #52]	; 0x34
 8012e26:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8012e2a:	da0e      	bge.n	8012e4a <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3e>
 8012e2c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8012e30:	3a01      	subs	r2, #1
 8012e32:	4291      	cmp	r1, r2
 8012e34:	d007      	beq.n	8012e46 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8012e36:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8012e38:	4252      	negs	r2, r2
 8012e3a:	4293      	cmp	r3, r2
 8012e3c:	dc03      	bgt.n	8012e46 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8012e3e:	2302      	movs	r3, #2
 8012e40:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012e44:	4770      	bx	lr
 8012e46:	2300      	movs	r3, #0
 8012e48:	e7fa      	b.n	8012e40 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8012e4a:	d0fb      	beq.n	8012e44 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8012e4c:	b111      	cbz	r1, 8012e54 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x48>
 8012e4e:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8012e50:	4293      	cmp	r3, r2
 8012e52:	da01      	bge.n	8012e58 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x4c>
 8012e54:	2301      	movs	r3, #1
 8012e56:	e7f3      	b.n	8012e40 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8012e58:	2303      	movs	r3, #3
 8012e5a:	e7f1      	b.n	8012e40 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>

08012e5c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE>:
 8012e5c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012e60:	2b04      	cmp	r3, #4
 8012e62:	d113      	bne.n	8012e8c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012e64:	790b      	ldrb	r3, [r1, #4]
 8012e66:	b98b      	cbnz	r3, 8012e8c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012e68:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8012e6a:	8643      	strh	r3, [r0, #50]	; 0x32
 8012e6c:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 8012e6e:	8683      	strh	r3, [r0, #52]	; 0x34
 8012e70:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8012e74:	f890 20f1 	ldrb.w	r2, [r0, #241]	; 0xf1
 8012e78:	2b00      	cmp	r3, #0
 8012e7a:	da08      	bge.n	8012e8e <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x32>
 8012e7c:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8012e80:	3b01      	subs	r3, #1
 8012e82:	429a      	cmp	r2, r3
 8012e84:	da02      	bge.n	8012e8c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012e86:	2302      	movs	r3, #2
 8012e88:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012e8c:	4770      	bx	lr
 8012e8e:	d0fd      	beq.n	8012e8c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012e90:	2a00      	cmp	r2, #0
 8012e92:	d0fb      	beq.n	8012e8c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012e94:	2303      	movs	r3, #3
 8012e96:	e7f7      	b.n	8012e88 <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x2c>

08012e98 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 8012e98:	b538      	push	{r3, r4, r5, lr}
 8012e9a:	2226      	movs	r2, #38	; 0x26
 8012e9c:	4604      	mov	r4, r0
 8012e9e:	460d      	mov	r5, r1
 8012ea0:	2100      	movs	r1, #0
 8012ea2:	f01b f82e 	bl	802df02 <memset>
 8012ea6:	4620      	mov	r0, r4
 8012ea8:	f7ff fc58 	bl	801275c <_ZN8touchgfx8DrawableC1Ev>
 8012eac:	4b06      	ldr	r3, [pc, #24]	; (8012ec8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8012eae:	6023      	str	r3, [r4, #0]
 8012eb0:	882b      	ldrh	r3, [r5, #0]
 8012eb2:	84e3      	strh	r3, [r4, #38]	; 0x26
 8012eb4:	23ff      	movs	r3, #255	; 0xff
 8012eb6:	4620      	mov	r0, r4
 8012eb8:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8012ebc:	4629      	mov	r1, r5
 8012ebe:	f003 f8d8 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012ec2:	4620      	mov	r0, r4
 8012ec4:	bd38      	pop	{r3, r4, r5, pc}
 8012ec6:	bf00      	nop
 8012ec8:	08031e38 	.word	0x08031e38

08012ecc <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>:
 8012ecc:	86c1      	strh	r1, [r0, #54]	; 0x36
 8012ece:	4770      	bx	lr

08012ed0 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>:
 8012ed0:	b508      	push	{r3, lr}
 8012ed2:	3068      	adds	r0, #104	; 0x68
 8012ed4:	f7f0 fc5e 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8012ed8:	bd08      	pop	{r3, pc}

08012eda <_ZN8touchgfx14SwipeContainer11adjustPagesEv>:
 8012eda:	b508      	push	{r3, lr}
 8012edc:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 8012ede:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8012ee2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012ee6:	fb03 2111 	mls	r1, r3, r1, r2
 8012eea:	b209      	sxth	r1, r1
 8012eec:	2200      	movs	r2, #0
 8012eee:	3038      	adds	r0, #56	; 0x38
 8012ef0:	f7f0 f9db 	bl	80032aa <_ZN8touchgfx8Drawable6moveToEss>
 8012ef4:	bd08      	pop	{r3, pc}

08012ef6 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE>:
 8012ef6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012efa:	2b04      	cmp	r3, #4
 8012efc:	d119      	bne.n	8012f32 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x3c>
 8012efe:	88ca      	ldrh	r2, [r1, #6]
 8012f00:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8012f02:	1a9b      	subs	r3, r3, r2
 8012f04:	894a      	ldrh	r2, [r1, #10]
 8012f06:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8012f0a:	4413      	add	r3, r2
 8012f0c:	b21b      	sxth	r3, r3
 8012f0e:	8603      	strh	r3, [r0, #48]	; 0x30
 8012f10:	b921      	cbnz	r1, 8012f1c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8012f12:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8012f14:	4293      	cmp	r3, r2
 8012f16:	dd01      	ble.n	8012f1c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8012f18:	8602      	strh	r2, [r0, #48]	; 0x30
 8012f1a:	e008      	b.n	8012f2e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8012f1c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8012f20:	3a01      	subs	r2, #1
 8012f22:	4291      	cmp	r1, r2
 8012f24:	d103      	bne.n	8012f2e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8012f26:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8012f28:	4252      	negs	r2, r2
 8012f2a:	4293      	cmp	r3, r2
 8012f2c:	dbf4      	blt.n	8012f18 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x22>
 8012f2e:	f7ff bfd4 	b.w	8012eda <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8012f32:	4770      	bx	lr

08012f34 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>:
 8012f34:	b538      	push	{r3, r4, r5, lr}
 8012f36:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 8012f3a:	2d0e      	cmp	r5, #14
 8012f3c:	4604      	mov	r4, r0
 8012f3e:	d813      	bhi.n	8012f68 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x34>
 8012f40:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8012f42:	4252      	negs	r2, r2
 8012f44:	230e      	movs	r3, #14
 8012f46:	b212      	sxth	r2, r2
 8012f48:	2100      	movs	r1, #0
 8012f4a:	4628      	mov	r0, r5
 8012f4c:	f007 fbc2 	bl	801a6d4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8012f50:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8012f52:	4418      	add	r0, r3
 8012f54:	8620      	strh	r0, [r4, #48]	; 0x30
 8012f56:	4620      	mov	r0, r4
 8012f58:	f7ff ffbf 	bl	8012eda <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8012f5c:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8012f60:	3301      	adds	r3, #1
 8012f62:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8012f66:	bd38      	pop	{r3, r4, r5, pc}
 8012f68:	2304      	movs	r3, #4
 8012f6a:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012f6e:	2300      	movs	r3, #0
 8012f70:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8012f74:	8603      	strh	r3, [r0, #48]	; 0x30
 8012f76:	e7ef      	b.n	8012f58 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x24>

08012f78 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>:
 8012f78:	b538      	push	{r3, r4, r5, lr}
 8012f7a:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 8012f7e:	2d0e      	cmp	r5, #14
 8012f80:	4604      	mov	r4, r0
 8012f82:	d812      	bhi.n	8012faa <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x32>
 8012f84:	230e      	movs	r3, #14
 8012f86:	f9b0 2032 	ldrsh.w	r2, [r0, #50]	; 0x32
 8012f8a:	2100      	movs	r1, #0
 8012f8c:	4628      	mov	r0, r5
 8012f8e:	f007 fba1 	bl	801a6d4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8012f92:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8012f94:	1a18      	subs	r0, r3, r0
 8012f96:	8620      	strh	r0, [r4, #48]	; 0x30
 8012f98:	4620      	mov	r0, r4
 8012f9a:	f7ff ff9e 	bl	8012eda <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8012f9e:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8012fa2:	3301      	adds	r3, #1
 8012fa4:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8012fa8:	bd38      	pop	{r3, r4, r5, pc}
 8012faa:	2304      	movs	r3, #4
 8012fac:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012fb0:	2300      	movs	r3, #0
 8012fb2:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8012fb6:	8603      	strh	r3, [r0, #48]	; 0x30
 8012fb8:	e7ef      	b.n	8012f9a <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x22>
	...

08012fbc <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>:
 8012fbc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8012fc0:	4604      	mov	r4, r0
 8012fc2:	4626      	mov	r6, r4
 8012fc4:	af02      	add	r7, sp, #8
 8012fc6:	f7ff fbc9 	bl	801275c <_ZN8touchgfx8DrawableC1Ev>
 8012fca:	2500      	movs	r5, #0
 8012fcc:	4b18      	ldr	r3, [pc, #96]	; (8013030 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x74>)
 8012fce:	62a5      	str	r5, [r4, #40]	; 0x28
 8012fd0:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8012fd4:	f846 3b2c 	str.w	r3, [r6], #44
 8012fd8:	f827 9d04 	strh.w	r9, [r7, #-4]!
 8012fdc:	4630      	mov	r0, r6
 8012fde:	4639      	mov	r1, r7
 8012fe0:	f7ff ff5a 	bl	8012e98 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8012fe4:	f104 085c 	add.w	r8, r4, #92	; 0x5c
 8012fe8:	4b12      	ldr	r3, [pc, #72]	; (8013034 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x78>)
 8012fea:	62e3      	str	r3, [r4, #44]	; 0x2c
 8012fec:	4639      	mov	r1, r7
 8012fee:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8012ff2:	f8a4 5058 	strh.w	r5, [r4, #88]	; 0x58
 8012ff6:	4640      	mov	r0, r8
 8012ff8:	f8ad 9004 	strh.w	r9, [sp, #4]
 8012ffc:	f7ff ff4c 	bl	8012e98 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8013000:	462a      	mov	r2, r5
 8013002:	4629      	mov	r1, r5
 8013004:	4630      	mov	r0, r6
 8013006:	f8a4 5088 	strh.w	r5, [r4, #136]	; 0x88
 801300a:	f7f0 fbc3 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 801300e:	462a      	mov	r2, r5
 8013010:	4629      	mov	r1, r5
 8013012:	4640      	mov	r0, r8
 8013014:	f7f0 fbbe 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8013018:	4631      	mov	r1, r6
 801301a:	4620      	mov	r0, r4
 801301c:	f7ff fc50 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8013020:	4620      	mov	r0, r4
 8013022:	4641      	mov	r1, r8
 8013024:	f7ff fc4c 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8013028:	4620      	mov	r0, r4
 801302a:	b003      	add	sp, #12
 801302c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013030:	0802f6a4 	.word	0x0802f6a4
 8013034:	08031c54 	.word	0x08031c54

08013038 <_ZN8touchgfx14SwipeContainerC1Ev>:
 8013038:	b570      	push	{r4, r5, r6, lr}
 801303a:	4604      	mov	r4, r0
 801303c:	f7ff fb8e 	bl	801275c <_ZN8touchgfx8DrawableC1Ev>
 8013040:	4b1a      	ldr	r3, [pc, #104]	; (80130ac <_ZN8touchgfx14SwipeContainerC1Ev+0x74>)
 8013042:	6023      	str	r3, [r4, #0]
 8013044:	2304      	movs	r3, #4
 8013046:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 801304a:	2350      	movs	r3, #80	; 0x50
 801304c:	2500      	movs	r5, #0
 801304e:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8013050:	f104 0638 	add.w	r6, r4, #56	; 0x38
 8013054:	231e      	movs	r3, #30
 8013056:	62a5      	str	r5, [r4, #40]	; 0x28
 8013058:	f884 502d 	strb.w	r5, [r4, #45]	; 0x2d
 801305c:	8625      	strh	r5, [r4, #48]	; 0x30
 801305e:	8665      	strh	r5, [r4, #50]	; 0x32
 8013060:	86a5      	strh	r5, [r4, #52]	; 0x34
 8013062:	86e3      	strh	r3, [r4, #54]	; 0x36
 8013064:	4630      	mov	r0, r6
 8013066:	f7ff fb79 	bl	801275c <_ZN8touchgfx8DrawableC1Ev>
 801306a:	4b11      	ldr	r3, [pc, #68]	; (80130b0 <_ZN8touchgfx14SwipeContainerC1Ev+0x78>)
 801306c:	6625      	str	r5, [r4, #96]	; 0x60
 801306e:	63a3      	str	r3, [r4, #56]	; 0x38
 8013070:	f8a4 5066 	strh.w	r5, [r4, #102]	; 0x66
 8013074:	2302      	movs	r3, #2
 8013076:	f104 0568 	add.w	r5, r4, #104	; 0x68
 801307a:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 801307e:	4628      	mov	r0, r5
 8013080:	f7ff ff9c 	bl	8012fbc <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>
 8013084:	f005 fcf4 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
 8013088:	4621      	mov	r1, r4
 801308a:	3004      	adds	r0, #4
 801308c:	f005 fde6 	bl	8018c5c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 8013090:	2301      	movs	r3, #1
 8013092:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8013096:	4631      	mov	r1, r6
 8013098:	4620      	mov	r0, r4
 801309a:	f7ff fc11 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801309e:	4620      	mov	r0, r4
 80130a0:	4629      	mov	r1, r5
 80130a2:	f7ff fc0d 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80130a6:	4620      	mov	r0, r4
 80130a8:	bd70      	pop	{r4, r5, r6, pc}
 80130aa:	bf00      	nop
 80130ac:	08031794 	.word	0x08031794
 80130b0:	08031858 	.word	0x08031858

080130b4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>:
 80130b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80130b6:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 80130ba:	428b      	cmp	r3, r1
 80130bc:	4604      	mov	r4, r0
 80130be:	460d      	mov	r5, r1
 80130c0:	d915      	bls.n	80130ee <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 80130c2:	f890 3089 	ldrb.w	r3, [r0, #137]	; 0x89
 80130c6:	428b      	cmp	r3, r1
 80130c8:	d011      	beq.n	80130ee <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 80130ca:	f884 1089 	strb.w	r1, [r4, #137]	; 0x89
 80130ce:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 80130d2:	a802      	add	r0, sp, #8
 80130d4:	f820 3d04 	strh.w	r3, [r0, #-4]!
 80130d8:	f009 f91a 	bl	801c310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80130dc:	fb15 f100 	smulbb	r1, r5, r0
 80130e0:	f9b4 2062 	ldrsh.w	r2, [r4, #98]	; 0x62
 80130e4:	b209      	sxth	r1, r1
 80130e6:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80130ea:	f7f0 f8de 	bl	80032aa <_ZN8touchgfx8Drawable6moveToEss>
 80130ee:	b003      	add	sp, #12
 80130f0:	bd30      	pop	{r4, r5, pc}

080130f2 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>:
 80130f2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80130f4:	4604      	mov	r4, r0
 80130f6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80130fa:	f884 1088 	strb.w	r1, [r4, #136]	; 0x88
 80130fe:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8013102:	4293      	cmp	r3, r2
 8013104:	460d      	mov	r5, r1
 8013106:	d01e      	beq.n	8013146 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh+0x54>
 8013108:	a802      	add	r0, sp, #8
 801310a:	f820 3d04 	strh.w	r3, [r0, #-4]!
 801310e:	f009 f8ff 	bl	801c310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013112:	6823      	ldr	r3, [r4, #0]
 8013114:	fb15 f000 	smulbb	r0, r5, r0
 8013118:	86a0      	strh	r0, [r4, #52]	; 0x34
 801311a:	695b      	ldr	r3, [r3, #20]
 801311c:	4620      	mov	r0, r4
 801311e:	4798      	blx	r3
 8013120:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8013124:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8013128:	4620      	mov	r0, r4
 801312a:	f7ff fb2f 	bl	801278c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801312e:	f894 1089 	ldrb.w	r1, [r4, #137]	; 0x89
 8013132:	42a9      	cmp	r1, r5
 8013134:	4620      	mov	r0, r4
 8013136:	bf28      	it	cs
 8013138:	4629      	movcs	r1, r5
 801313a:	f7ff ffbb 	bl	80130b4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 801313e:	6823      	ldr	r3, [r4, #0]
 8013140:	4620      	mov	r0, r4
 8013142:	695b      	ldr	r3, [r3, #20]
 8013144:	4798      	blx	r3
 8013146:	b003      	add	sp, #12
 8013148:	bd30      	pop	{r4, r5, pc}

0801314a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>:
 801314a:	b538      	push	{r3, r4, r5, lr}
 801314c:	4604      	mov	r4, r0
 801314e:	460d      	mov	r5, r1
 8013150:	305c      	adds	r0, #92	; 0x5c
 8013152:	4611      	mov	r1, r2
 8013154:	f002 ff8d 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8013158:	4629      	mov	r1, r5
 801315a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 801315e:	f002 fa53 	bl	8015608 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>
 8013162:	f894 1088 	ldrb.w	r1, [r4, #136]	; 0x88
 8013166:	b121      	cbz	r1, 8013172 <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_+0x28>
 8013168:	4620      	mov	r0, r4
 801316a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801316e:	f7ff bfc0 	b.w	80130f2 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8013172:	bd38      	pop	{r3, r4, r5, pc}

08013174 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>:
 8013174:	3068      	adds	r0, #104	; 0x68
 8013176:	f7ff bfe8 	b.w	801314a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>

0801317a <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>:
 801317a:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 801317e:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 8013182:	3101      	adds	r1, #1
 8013184:	fb91 f3f2 	sdiv	r3, r1, r2
 8013188:	fb02 1113 	mls	r1, r2, r3, r1
 801318c:	b2c9      	uxtb	r1, r1
 801318e:	f7ff bf91 	b.w	80130b4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

08013192 <_ZN8touchgfx14SwipeContainer11animateLeftEv>:
 8013192:	b510      	push	{r4, lr}
 8013194:	4604      	mov	r4, r0
 8013196:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 801319a:	280a      	cmp	r0, #10
 801319c:	d813      	bhi.n	80131c6 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x34>
 801319e:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80131a0:	8922      	ldrh	r2, [r4, #8]
 80131a2:	441a      	add	r2, r3
 80131a4:	b212      	sxth	r2, r2
 80131a6:	230a      	movs	r3, #10
 80131a8:	2100      	movs	r1, #0
 80131aa:	f007 fad1 	bl	801a750 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 80131ae:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80131b0:	1a18      	subs	r0, r3, r0
 80131b2:	8620      	strh	r0, [r4, #48]	; 0x30
 80131b4:	4620      	mov	r0, r4
 80131b6:	f7ff fe90 	bl	8012eda <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 80131ba:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 80131be:	3301      	adds	r3, #1
 80131c0:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 80131c4:	bd10      	pop	{r4, pc}
 80131c6:	2304      	movs	r3, #4
 80131c8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 80131cc:	2300      	movs	r3, #0
 80131ce:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 80131d2:	8623      	strh	r3, [r4, #48]	; 0x30
 80131d4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80131d8:	f7ff ffcf 	bl	801317a <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>
 80131dc:	e7ea      	b.n	80131b4 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x22>

080131de <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>:
 80131de:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 80131e2:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 80131e6:	4411      	add	r1, r2
 80131e8:	3901      	subs	r1, #1
 80131ea:	fb91 f3f2 	sdiv	r3, r1, r2
 80131ee:	fb02 1113 	mls	r1, r2, r3, r1
 80131f2:	b2c9      	uxtb	r1, r1
 80131f4:	f7ff bf5e 	b.w	80130b4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

080131f8 <_ZN8touchgfx14SwipeContainer12animateRightEv>:
 80131f8:	b510      	push	{r4, lr}
 80131fa:	4604      	mov	r4, r0
 80131fc:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 8013200:	280a      	cmp	r0, #10
 8013202:	d813      	bhi.n	801322c <_ZN8touchgfx14SwipeContainer12animateRightEv+0x34>
 8013204:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8013206:	8922      	ldrh	r2, [r4, #8]
 8013208:	1ad2      	subs	r2, r2, r3
 801320a:	b212      	sxth	r2, r2
 801320c:	230a      	movs	r3, #10
 801320e:	2100      	movs	r1, #0
 8013210:	f007 fa9e 	bl	801a750 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 8013214:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8013216:	4418      	add	r0, r3
 8013218:	8620      	strh	r0, [r4, #48]	; 0x30
 801321a:	4620      	mov	r0, r4
 801321c:	f7ff fe5d 	bl	8012eda <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8013220:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8013224:	3301      	adds	r3, #1
 8013226:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 801322a:	bd10      	pop	{r4, pc}
 801322c:	2304      	movs	r3, #4
 801322e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8013232:	2300      	movs	r3, #0
 8013234:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8013238:	8623      	strh	r3, [r4, #48]	; 0x30
 801323a:	f104 0068 	add.w	r0, r4, #104	; 0x68
 801323e:	f7ff ffce 	bl	80131de <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>
 8013242:	e7ea      	b.n	801321a <_ZN8touchgfx14SwipeContainer12animateRightEv+0x22>

08013244 <_ZN8touchgfx14SwipeContainer15handleTickEventEv>:
 8013244:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013248:	b90b      	cbnz	r3, 801324e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0xa>
 801324a:	f7ff be73 	b.w	8012f34 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>
 801324e:	2b01      	cmp	r3, #1
 8013250:	d101      	bne.n	8013256 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x12>
 8013252:	f7ff be91 	b.w	8012f78 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>
 8013256:	2b02      	cmp	r3, #2
 8013258:	d101      	bne.n	801325e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x1a>
 801325a:	f7ff bf9a 	b.w	8013192 <_ZN8touchgfx14SwipeContainer11animateLeftEv>
 801325e:	2b03      	cmp	r3, #3
 8013260:	d101      	bne.n	8013266 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x22>
 8013262:	f7ff bfc9 	b.w	80131f8 <_ZN8touchgfx14SwipeContainer12animateRightEv>
 8013266:	4770      	bx	lr

08013268 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>:
 8013268:	b510      	push	{r4, lr}
 801326a:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 801326e:	428b      	cmp	r3, r1
 8013270:	4604      	mov	r4, r0
 8013272:	d907      	bls.n	8013284 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh+0x1c>
 8013274:	3068      	adds	r0, #104	; 0x68
 8013276:	f7ff ff1d 	bl	80130b4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 801327a:	4620      	mov	r0, r4
 801327c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013280:	f7ff be2b 	b.w	8012eda <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8013284:	bd10      	pop	{r4, pc}

08013286 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>:
 8013286:	b538      	push	{r3, r4, r5, lr}
 8013288:	4604      	mov	r4, r0
 801328a:	3038      	adds	r0, #56	; 0x38
 801328c:	460d      	mov	r5, r1
 801328e:	f000 f963 	bl	8013558 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8013292:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 8013296:	3101      	adds	r1, #1
 8013298:	f104 0068 	add.w	r0, r4, #104	; 0x68
 801329c:	b2c9      	uxtb	r1, r1
 801329e:	f7ff ff28 	bl	80130f2 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 80132a2:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 80132a6:	4620      	mov	r0, r4
 80132a8:	f7ff ffde 	bl	8013268 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 80132ac:	f9b5 200a 	ldrsh.w	r2, [r5, #10]
 80132b0:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 80132b4:	4620      	mov	r0, r4
 80132b6:	f7ff fa69 	bl	801278c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80132ba:	bd38      	pop	{r3, r4, r5, pc}

080132bc <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE>:
 80132bc:	b538      	push	{r3, r4, r5, lr}
 80132be:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 80132c2:	4604      	mov	r4, r0
 80132c4:	b1e3      	cbz	r3, 8013300 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 80132c6:	6e03      	ldr	r3, [r0, #96]	; 0x60
 80132c8:	b1d3      	cbz	r3, 8013300 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 80132ca:	428b      	cmp	r3, r1
 80132cc:	d125      	bne.n	801331a <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x5e>
 80132ce:	4619      	mov	r1, r3
 80132d0:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80132d4:	f000 f9c0 	bl	8013658 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>
 80132d8:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 80132dc:	3901      	subs	r1, #1
 80132de:	b2c9      	uxtb	r1, r1
 80132e0:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80132e4:	f7ff ff05 	bl	80130f2 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 80132e8:	f894 50f0 	ldrb.w	r5, [r4, #240]	; 0xf0
 80132ec:	b94d      	cbnz	r5, 8013302 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x46>
 80132ee:	6823      	ldr	r3, [r4, #0]
 80132f0:	4620      	mov	r0, r4
 80132f2:	695b      	ldr	r3, [r3, #20]
 80132f4:	4798      	blx	r3
 80132f6:	462a      	mov	r2, r5
 80132f8:	4629      	mov	r1, r5
 80132fa:	4620      	mov	r0, r4
 80132fc:	f7ff fa46 	bl	801278c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8013300:	bd38      	pop	{r3, r4, r5, pc}
 8013302:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 8013306:	3d01      	subs	r5, #1
 8013308:	42a9      	cmp	r1, r5
 801330a:	bfa8      	it	ge
 801330c:	4629      	movge	r1, r5
 801330e:	4620      	mov	r0, r4
 8013310:	b2c9      	uxtb	r1, r1
 8013312:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8013316:	f7ff bfa7 	b.w	8013268 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 801331a:	699b      	ldr	r3, [r3, #24]
 801331c:	e7d4      	b.n	80132c8 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0xc>

0801331e <_ZNK8touchgfx10ListLayout12getDirectionEv>:
 801331e:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8013322:	4770      	bx	lr

08013324 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE>:
 8013324:	b538      	push	{r3, r4, r5, lr}
 8013326:	7882      	ldrb	r2, [r0, #2]
 8013328:	6843      	ldr	r3, [r0, #4]
 801332a:	4604      	mov	r4, r0
 801332c:	460d      	mov	r5, r1
 801332e:	b98a      	cbnz	r2, 8013354 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x30>
 8013330:	4299      	cmp	r1, r3
 8013332:	d101      	bne.n	8013338 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8013334:	2301      	movs	r3, #1
 8013336:	7083      	strb	r3, [r0, #2]
 8013338:	6863      	ldr	r3, [r4, #4]
 801333a:	42ab      	cmp	r3, r5
 801333c:	d009      	beq.n	8013352 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 801333e:	7a23      	ldrb	r3, [r4, #8]
 8013340:	2b01      	cmp	r3, #1
 8013342:	d11b      	bne.n	801337c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x58>
 8013344:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8013348:	f9b4 2000 	ldrsh.w	r2, [r4]
 801334c:	429a      	cmp	r2, r3
 801334e:	bfb8      	it	lt
 8013350:	8023      	strhlt	r3, [r4, #0]
 8013352:	bd38      	pop	{r3, r4, r5, pc}
 8013354:	7a02      	ldrb	r2, [r0, #8]
 8013356:	2a01      	cmp	r2, #1
 8013358:	d108      	bne.n	801336c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x48>
 801335a:	895b      	ldrh	r3, [r3, #10]
 801335c:	88c9      	ldrh	r1, [r1, #6]
 801335e:	1ac9      	subs	r1, r1, r3
 8013360:	682b      	ldr	r3, [r5, #0]
 8013362:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013364:	b209      	sxth	r1, r1
 8013366:	4628      	mov	r0, r5
 8013368:	4798      	blx	r3
 801336a:	e7e5      	b.n	8013338 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 801336c:	2a02      	cmp	r2, #2
 801336e:	d1e3      	bne.n	8013338 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8013370:	891b      	ldrh	r3, [r3, #8]
 8013372:	8889      	ldrh	r1, [r1, #4]
 8013374:	1ac9      	subs	r1, r1, r3
 8013376:	682b      	ldr	r3, [r5, #0]
 8013378:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801337a:	e7f3      	b.n	8013364 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x40>
 801337c:	2b02      	cmp	r3, #2
 801337e:	d1e8      	bne.n	8013352 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 8013380:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8013384:	e7e0      	b.n	8013348 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x24>

08013386 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED1Ev>:
 8013386:	4770      	bx	lr

08013388 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED1Ev>:
 8013388:	4770      	bx	lr

0801338a <_ZN8touchgfx10ListLayoutD1Ev>:
 801338a:	4770      	bx	lr

0801338c <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7executeES3_>:
 801338c:	b430      	push	{r4, r5}
 801338e:	68c5      	ldr	r5, [r0, #12]
 8013390:	6844      	ldr	r4, [r0, #4]
 8013392:	106a      	asrs	r2, r5, #1
 8013394:	4603      	mov	r3, r0
 8013396:	07ed      	lsls	r5, r5, #31
 8013398:	eb04 0002 	add.w	r0, r4, r2
 801339c:	689b      	ldr	r3, [r3, #8]
 801339e:	bf48      	it	mi
 80133a0:	58a2      	ldrmi	r2, [r4, r2]
 80133a2:	bc30      	pop	{r4, r5}
 80133a4:	bf48      	it	mi
 80133a6:	58d3      	ldrmi	r3, [r2, r3]
 80133a8:	4718      	bx	r3

080133aa <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv>:
 80133aa:	6843      	ldr	r3, [r0, #4]
 80133ac:	b12b      	cbz	r3, 80133ba <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x10>
 80133ae:	6883      	ldr	r3, [r0, #8]
 80133b0:	b92b      	cbnz	r3, 80133be <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x14>
 80133b2:	68c0      	ldr	r0, [r0, #12]
 80133b4:	f000 0001 	and.w	r0, r0, #1
 80133b8:	4770      	bx	lr
 80133ba:	4618      	mov	r0, r3
 80133bc:	4770      	bx	lr
 80133be:	2001      	movs	r0, #1
 80133c0:	4770      	bx	lr

080133c2 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7executeES3_>:
 80133c2:	b430      	push	{r4, r5}
 80133c4:	68c5      	ldr	r5, [r0, #12]
 80133c6:	6844      	ldr	r4, [r0, #4]
 80133c8:	106a      	asrs	r2, r5, #1
 80133ca:	4603      	mov	r3, r0
 80133cc:	07ed      	lsls	r5, r5, #31
 80133ce:	eb04 0002 	add.w	r0, r4, r2
 80133d2:	689b      	ldr	r3, [r3, #8]
 80133d4:	bf48      	it	mi
 80133d6:	58a2      	ldrmi	r2, [r4, r2]
 80133d8:	bc30      	pop	{r4, r5}
 80133da:	bf48      	it	mi
 80133dc:	58d3      	ldrmi	r3, [r2, r3]
 80133de:	4718      	bx	r3

080133e0 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv>:
 80133e0:	6843      	ldr	r3, [r0, #4]
 80133e2:	b12b      	cbz	r3, 80133f0 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x10>
 80133e4:	6883      	ldr	r3, [r0, #8]
 80133e6:	b92b      	cbnz	r3, 80133f4 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x14>
 80133e8:	68c0      	ldr	r0, [r0, #12]
 80133ea:	f000 0001 	and.w	r0, r0, #1
 80133ee:	4770      	bx	lr
 80133f0:	4618      	mov	r0, r3
 80133f2:	4770      	bx	lr
 80133f4:	2001      	movs	r0, #1
 80133f6:	4770      	bx	lr

080133f8 <_ZN8touchgfx10ListLayoutD0Ev>:
 80133f8:	b510      	push	{r4, lr}
 80133fa:	2130      	movs	r1, #48	; 0x30
 80133fc:	4604      	mov	r4, r0
 80133fe:	f019 fc94 	bl	802cd2a <_ZdlPvj>
 8013402:	4620      	mov	r0, r4
 8013404:	bd10      	pop	{r4, pc}

08013406 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED0Ev>:
 8013406:	b510      	push	{r4, lr}
 8013408:	2110      	movs	r1, #16
 801340a:	4604      	mov	r4, r0
 801340c:	f019 fc8d 	bl	802cd2a <_ZdlPvj>
 8013410:	4620      	mov	r0, r4
 8013412:	bd10      	pop	{r4, pc}

08013414 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED0Ev>:
 8013414:	b510      	push	{r4, lr}
 8013416:	2110      	movs	r1, #16
 8013418:	4604      	mov	r4, r0
 801341a:	f019 fc86 	bl	802cd2a <_ZdlPvj>
 801341e:	4620      	mov	r0, r4
 8013420:	bd10      	pop	{r4, pc}

08013422 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE>:
 8013422:	4603      	mov	r3, r0
 8013424:	4608      	mov	r0, r1
 8013426:	789a      	ldrb	r2, [r3, #2]
 8013428:	b992      	cbnz	r2, 8013450 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x2e>
 801342a:	685a      	ldr	r2, [r3, #4]
 801342c:	428a      	cmp	r2, r1
 801342e:	d102      	bne.n	8013436 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x14>
 8013430:	2201      	movs	r2, #1
 8013432:	709a      	strb	r2, [r3, #2]
 8013434:	4770      	bx	lr
 8013436:	7a1a      	ldrb	r2, [r3, #8]
 8013438:	2a01      	cmp	r2, #1
 801343a:	d104      	bne.n	8013446 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x24>
 801343c:	88ca      	ldrh	r2, [r1, #6]
 801343e:	8949      	ldrh	r1, [r1, #10]
 8013440:	440a      	add	r2, r1
 8013442:	801a      	strh	r2, [r3, #0]
 8013444:	4770      	bx	lr
 8013446:	2a02      	cmp	r2, #2
 8013448:	d116      	bne.n	8013478 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 801344a:	888a      	ldrh	r2, [r1, #4]
 801344c:	8909      	ldrh	r1, [r1, #8]
 801344e:	e7f7      	b.n	8013440 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x1e>
 8013450:	7a1a      	ldrb	r2, [r3, #8]
 8013452:	2a01      	cmp	r2, #1
 8013454:	d107      	bne.n	8013466 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x44>
 8013456:	685b      	ldr	r3, [r3, #4]
 8013458:	8959      	ldrh	r1, [r3, #10]
 801345a:	88c3      	ldrh	r3, [r0, #6]
 801345c:	4419      	add	r1, r3
 801345e:	6803      	ldr	r3, [r0, #0]
 8013460:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013462:	b209      	sxth	r1, r1
 8013464:	4718      	bx	r3
 8013466:	2a02      	cmp	r2, #2
 8013468:	d106      	bne.n	8013478 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 801346a:	685b      	ldr	r3, [r3, #4]
 801346c:	8919      	ldrh	r1, [r3, #8]
 801346e:	8883      	ldrh	r3, [r0, #4]
 8013470:	4419      	add	r1, r3
 8013472:	6803      	ldr	r3, [r0, #0]
 8013474:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013476:	e7f4      	b.n	8013462 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x40>
 8013478:	4770      	bx	lr

0801347a <_ZN8touchgfx10ListLayout9removeAllEv>:
 801347a:	2200      	movs	r2, #0
 801347c:	b510      	push	{r4, lr}
 801347e:	4611      	mov	r1, r2
 8013480:	4604      	mov	r4, r0
 8013482:	85c2      	strh	r2, [r0, #46]	; 0x2e
 8013484:	f7ff f982 	bl	801278c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8013488:	4620      	mov	r0, r4
 801348a:	f7ff fa26 	bl	80128da <_ZN8touchgfx9Container9removeAllEv>
 801348e:	6960      	ldr	r0, [r4, #20]
 8013490:	b120      	cbz	r0, 801349c <_ZN8touchgfx10ListLayout9removeAllEv+0x22>
 8013492:	6803      	ldr	r3, [r0, #0]
 8013494:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013498:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801349a:	4718      	bx	r3
 801349c:	bd10      	pop	{r4, pc}
	...

080134a0 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>:
 80134a0:	b530      	push	{r4, r5, lr}
 80134a2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80134a6:	428b      	cmp	r3, r1
 80134a8:	b085      	sub	sp, #20
 80134aa:	4604      	mov	r4, r0
 80134ac:	d017      	beq.n	80134de <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 80134ae:	2500      	movs	r5, #0
 80134b0:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 80134b4:	85c5      	strh	r5, [r0, #46]	; 0x2e
 80134b6:	462a      	mov	r2, r5
 80134b8:	4629      	mov	r1, r5
 80134ba:	f7ff f967 	bl	801278c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80134be:	4b09      	ldr	r3, [pc, #36]	; (80134e4 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x44>)
 80134c0:	e9cd 3400 	strd	r3, r4, [sp]
 80134c4:	4b08      	ldr	r3, [pc, #32]	; (80134e8 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x48>)
 80134c6:	e9cd 3502 	strd	r3, r5, [sp, #8]
 80134ca:	6823      	ldr	r3, [r4, #0]
 80134cc:	4620      	mov	r0, r4
 80134ce:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80134d0:	4669      	mov	r1, sp
 80134d2:	4798      	blx	r3
 80134d4:	6960      	ldr	r0, [r4, #20]
 80134d6:	b110      	cbz	r0, 80134de <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 80134d8:	6803      	ldr	r3, [r0, #0]
 80134da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80134dc:	4798      	blx	r3
 80134de:	b005      	add	sp, #20
 80134e0:	bd30      	pop	{r4, r5, pc}
 80134e2:	bf00      	nop
 80134e4:	08031828 	.word	0x08031828
 80134e8:	08013551 	.word	0x08013551

080134ec <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>:
 80134ec:	b538      	push	{r3, r4, r5, lr}
 80134ee:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80134f2:	2b01      	cmp	r3, #1
 80134f4:	460d      	mov	r5, r1
 80134f6:	4604      	mov	r4, r0
 80134f8:	4611      	mov	r1, r2
 80134fa:	d002      	beq.n	8013502 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x16>
 80134fc:	2b02      	cmp	r3, #2
 80134fe:	d015      	beq.n	801352c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x40>
 8013500:	bd38      	pop	{r3, r4, r5, pc}
 8013502:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8013506:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 801350a:	429a      	cmp	r2, r3
 801350c:	bfb8      	it	lt
 801350e:	8103      	strhlt	r3, [r0, #8]
 8013510:	896a      	ldrh	r2, [r5, #10]
 8013512:	8943      	ldrh	r3, [r0, #10]
 8013514:	4413      	add	r3, r2
 8013516:	8143      	strh	r3, [r0, #10]
 8013518:	460a      	mov	r2, r1
 801351a:	4628      	mov	r0, r5
 801351c:	2100      	movs	r1, #0
 801351e:	f7f0 f939 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8013522:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8013524:	896a      	ldrh	r2, [r5, #10]
 8013526:	4413      	add	r3, r2
 8013528:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801352a:	e7e9      	b.n	8013500 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x14>
 801352c:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8013530:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8013534:	429a      	cmp	r2, r3
 8013536:	bfb8      	it	lt
 8013538:	8143      	strhlt	r3, [r0, #10]
 801353a:	892a      	ldrh	r2, [r5, #8]
 801353c:	8903      	ldrh	r3, [r0, #8]
 801353e:	4413      	add	r3, r2
 8013540:	8103      	strh	r3, [r0, #8]
 8013542:	2200      	movs	r2, #0
 8013544:	4628      	mov	r0, r5
 8013546:	f7f0 f925 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 801354a:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 801354c:	892a      	ldrh	r2, [r5, #8]
 801354e:	e7ea      	b.n	8013526 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x3a>

08013550 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>:
 8013550:	f9b0 202e 	ldrsh.w	r2, [r0, #46]	; 0x2e
 8013554:	f7ff bfca 	b.w	80134ec <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>

08013558 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>:
 8013558:	b570      	push	{r4, r5, r6, lr}
 801355a:	4604      	mov	r4, r0
 801355c:	460d      	mov	r5, r1
 801355e:	f7ff fff7 	bl	8013550 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>
 8013562:	4620      	mov	r0, r4
 8013564:	4629      	mov	r1, r5
 8013566:	f7ff f9ab 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801356a:	6960      	ldr	r0, [r4, #20]
 801356c:	b120      	cbz	r0, 8013578 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE+0x20>
 801356e:	6803      	ldr	r3, [r0, #0]
 8013570:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013574:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8013576:	4718      	bx	r3
 8013578:	bd70      	pop	{r4, r5, r6, pc}
	...

0801357c <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_>:
 801357c:	b530      	push	{r4, r5, lr}
 801357e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8013580:	b089      	sub	sp, #36	; 0x24
 8013582:	4604      	mov	r4, r0
 8013584:	4615      	mov	r5, r2
 8013586:	b92b      	cbnz	r3, 8013594 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x18>
 8013588:	6803      	ldr	r3, [r0, #0]
 801358a:	4611      	mov	r1, r2
 801358c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801358e:	4798      	blx	r3
 8013590:	b009      	add	sp, #36	; 0x24
 8013592:	bd30      	pop	{r4, r5, pc}
 8013594:	f7ff f9ec 	bl	8012970 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>
 8013598:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 801359c:	f88d 200c 	strb.w	r2, [sp, #12]
 80135a0:	4a0f      	ldr	r2, [pc, #60]	; (80135e0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x64>)
 80135a2:	9204      	str	r2, [sp, #16]
 80135a4:	aa01      	add	r2, sp, #4
 80135a6:	9205      	str	r2, [sp, #20]
 80135a8:	4a0e      	ldr	r2, [pc, #56]	; (80135e4 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x68>)
 80135aa:	9502      	str	r5, [sp, #8]
 80135ac:	2300      	movs	r3, #0
 80135ae:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80135b2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80135b6:	f88d 3006 	strb.w	r3, [sp, #6]
 80135ba:	6823      	ldr	r3, [r4, #0]
 80135bc:	a904      	add	r1, sp, #16
 80135be:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80135c0:	4620      	mov	r0, r4
 80135c2:	4798      	blx	r3
 80135c4:	4620      	mov	r0, r4
 80135c6:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80135ca:	4629      	mov	r1, r5
 80135cc:	f7ff ff8e 	bl	80134ec <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>
 80135d0:	6960      	ldr	r0, [r4, #20]
 80135d2:	2800      	cmp	r0, #0
 80135d4:	d0dc      	beq.n	8013590 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 80135d6:	6803      	ldr	r3, [r0, #0]
 80135d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80135da:	4798      	blx	r3
 80135dc:	e7d8      	b.n	8013590 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 80135de:	bf00      	nop
 80135e0:	08031840 	.word	0x08031840
 80135e4:	08013423 	.word	0x08013423

080135e8 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>:
 80135e8:	b538      	push	{r3, r4, r5, lr}
 80135ea:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80135ee:	2b01      	cmp	r3, #1
 80135f0:	4604      	mov	r4, r0
 80135f2:	460d      	mov	r5, r1
 80135f4:	d002      	beq.n	80135fc <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x14>
 80135f6:	2b02      	cmp	r3, #2
 80135f8:	d018      	beq.n	801362c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x44>
 80135fa:	bd38      	pop	{r3, r4, r5, pc}
 80135fc:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8013600:	4293      	cmp	r3, r2
 8013602:	bfc8      	it	gt
 8013604:	8102      	strhgt	r2, [r0, #8]
 8013606:	894a      	ldrh	r2, [r1, #10]
 8013608:	8943      	ldrh	r3, [r0, #10]
 801360a:	1a9b      	subs	r3, r3, r2
 801360c:	8143      	strh	r3, [r0, #10]
 801360e:	680b      	ldr	r3, [r1, #0]
 8013610:	4628      	mov	r0, r5
 8013612:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013614:	2100      	movs	r1, #0
 8013616:	4798      	blx	r3
 8013618:	682b      	ldr	r3, [r5, #0]
 801361a:	2100      	movs	r1, #0
 801361c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801361e:	4628      	mov	r0, r5
 8013620:	4798      	blx	r3
 8013622:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8013624:	896a      	ldrh	r2, [r5, #10]
 8013626:	1a9b      	subs	r3, r3, r2
 8013628:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801362a:	e7e6      	b.n	80135fa <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x12>
 801362c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013630:	4293      	cmp	r3, r2
 8013632:	bfc8      	it	gt
 8013634:	8142      	strhgt	r2, [r0, #10]
 8013636:	890a      	ldrh	r2, [r1, #8]
 8013638:	8903      	ldrh	r3, [r0, #8]
 801363a:	1a9b      	subs	r3, r3, r2
 801363c:	8103      	strh	r3, [r0, #8]
 801363e:	680b      	ldr	r3, [r1, #0]
 8013640:	4628      	mov	r0, r5
 8013642:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013644:	2100      	movs	r1, #0
 8013646:	4798      	blx	r3
 8013648:	682b      	ldr	r3, [r5, #0]
 801364a:	2100      	movs	r1, #0
 801364c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801364e:	4628      	mov	r0, r5
 8013650:	4798      	blx	r3
 8013652:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8013654:	892a      	ldrh	r2, [r5, #8]
 8013656:	e7e6      	b.n	8013626 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x3e>

08013658 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>:
 8013658:	b530      	push	{r4, r5, lr}
 801365a:	b089      	sub	sp, #36	; 0x24
 801365c:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 8013660:	f88d 200c 	strb.w	r2, [sp, #12]
 8013664:	4a13      	ldr	r2, [pc, #76]	; (80136b4 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x5c>)
 8013666:	9204      	str	r2, [sp, #16]
 8013668:	aa01      	add	r2, sp, #4
 801366a:	9205      	str	r2, [sp, #20]
 801366c:	4a12      	ldr	r2, [pc, #72]	; (80136b8 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x60>)
 801366e:	9102      	str	r1, [sp, #8]
 8013670:	2300      	movs	r3, #0
 8013672:	f8ad 3004 	strh.w	r3, [sp, #4]
 8013676:	f88d 3006 	strb.w	r3, [sp, #6]
 801367a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801367e:	6803      	ldr	r3, [r0, #0]
 8013680:	460d      	mov	r5, r1
 8013682:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013684:	a904      	add	r1, sp, #16
 8013686:	4604      	mov	r4, r0
 8013688:	4798      	blx	r3
 801368a:	f89d 3006 	ldrb.w	r3, [sp, #6]
 801368e:	b14b      	cbz	r3, 80136a4 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x4c>
 8013690:	4629      	mov	r1, r5
 8013692:	4620      	mov	r0, r4
 8013694:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8013698:	f7ff ffa6 	bl	80135e8 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>
 801369c:	4629      	mov	r1, r5
 801369e:	4620      	mov	r0, r4
 80136a0:	f7ff f94f 	bl	8012942 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 80136a4:	6960      	ldr	r0, [r4, #20]
 80136a6:	b110      	cbz	r0, 80136ae <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x56>
 80136a8:	6803      	ldr	r3, [r0, #0]
 80136aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80136ac:	4798      	blx	r3
 80136ae:	b009      	add	sp, #36	; 0x24
 80136b0:	bd30      	pop	{r4, r5, pc}
 80136b2:	bf00      	nop
 80136b4:	08031840 	.word	0x08031840
 80136b8:	08013325 	.word	0x08013325

080136bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80136bc:	b513      	push	{r0, r1, r4, lr}
 80136be:	6803      	ldr	r3, [r0, #0]
 80136c0:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 80136c4:	2300      	movs	r3, #0
 80136c6:	e9cd 3300 	strd	r3, r3, [sp]
 80136ca:	466b      	mov	r3, sp
 80136cc:	47a0      	blx	r4
 80136ce:	b002      	add	sp, #8
 80136d0:	bd10      	pop	{r4, pc}

080136d2 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 80136d2:	2301      	movs	r3, #1
 80136d4:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80136d8:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 80136dc:	4770      	bx	lr

080136de <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 80136de:	2301      	movs	r3, #1
 80136e0:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80136e4:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 80136e8:	4770      	bx	lr

080136ea <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 80136ea:	6843      	ldr	r3, [r0, #4]
 80136ec:	2201      	movs	r2, #1
 80136ee:	725a      	strb	r2, [r3, #9]
 80136f0:	6840      	ldr	r0, [r0, #4]
 80136f2:	6803      	ldr	r3, [r0, #0]
 80136f4:	691b      	ldr	r3, [r3, #16]
 80136f6:	4718      	bx	r3

080136f8 <_ZN8touchgfx3HAL8flushDMAEv>:
 80136f8:	6840      	ldr	r0, [r0, #4]
 80136fa:	6803      	ldr	r3, [r0, #0]
 80136fc:	689b      	ldr	r3, [r3, #8]
 80136fe:	4718      	bx	r3

08013700 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8013700:	b530      	push	{r4, r5, lr}
 8013702:	b08b      	sub	sp, #44	; 0x2c
 8013704:	6804      	ldr	r4, [r0, #0]
 8013706:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801370a:	9509      	str	r5, [sp, #36]	; 0x24
 801370c:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8013710:	9508      	str	r5, [sp, #32]
 8013712:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8013716:	9507      	str	r5, [sp, #28]
 8013718:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 801371c:	9506      	str	r5, [sp, #24]
 801371e:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8013722:	9505      	str	r5, [sp, #20]
 8013724:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8013728:	9504      	str	r5, [sp, #16]
 801372a:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 801372e:	9503      	str	r5, [sp, #12]
 8013730:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8013734:	9502      	str	r5, [sp, #8]
 8013736:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 801373a:	e9cd 3500 	strd	r3, r5, [sp]
 801373e:	4613      	mov	r3, r2
 8013740:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8013742:	2200      	movs	r2, #0
 8013744:	47a0      	blx	r4
 8013746:	b00b      	add	sp, #44	; 0x2c
 8013748:	bd30      	pop	{r4, r5, pc}
	...

0801374c <_ZN8touchgfx3HAL10beginFrameEv>:
 801374c:	4b04      	ldr	r3, [pc, #16]	; (8013760 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 801374e:	781b      	ldrb	r3, [r3, #0]
 8013750:	b123      	cbz	r3, 801375c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8013752:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8013756:	f080 0001 	eor.w	r0, r0, #1
 801375a:	4770      	bx	lr
 801375c:	2001      	movs	r0, #1
 801375e:	4770      	bx	lr
 8013760:	2001384a 	.word	0x2001384a

08013764 <_ZN8touchgfx3HAL8endFrameEv>:
 8013764:	b510      	push	{r4, lr}
 8013766:	4604      	mov	r4, r0
 8013768:	6840      	ldr	r0, [r0, #4]
 801376a:	6803      	ldr	r3, [r0, #0]
 801376c:	689b      	ldr	r3, [r3, #8]
 801376e:	4798      	blx	r3
 8013770:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 8013774:	b113      	cbz	r3, 801377c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8013776:	2301      	movs	r3, #1
 8013778:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 801377c:	bd10      	pop	{r4, pc}

0801377e <_ZN8touchgfx3HAL10initializeEv>:
 801377e:	b510      	push	{r4, lr}
 8013780:	4604      	mov	r4, r0
 8013782:	f7ef fb6f 	bl	8002e64 <_ZN8touchgfx10OSWrappers10initializeEv>
 8013786:	f7ef fa7b 	bl	8002c80 <_ZN8touchgfx4GPIO4initEv>
 801378a:	6860      	ldr	r0, [r4, #4]
 801378c:	6803      	ldr	r3, [r0, #0]
 801378e:	68db      	ldr	r3, [r3, #12]
 8013790:	4798      	blx	r3
 8013792:	68e0      	ldr	r0, [r4, #12]
 8013794:	6803      	ldr	r3, [r0, #0]
 8013796:	689b      	ldr	r3, [r3, #8]
 8013798:	4798      	blx	r3
 801379a:	6823      	ldr	r3, [r4, #0]
 801379c:	4620      	mov	r0, r4
 801379e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80137a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80137a4:	4718      	bx	r3
	...

080137a8 <_ZN8touchgfx3HAL4tickEv>:
 80137a8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80137aa:	6803      	ldr	r3, [r0, #0]
 80137ac:	4d5b      	ldr	r5, [pc, #364]	; (801391c <_ZN8touchgfx3HAL4tickEv+0x174>)
 80137ae:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80137b2:	4604      	mov	r4, r0
 80137b4:	4798      	blx	r3
 80137b6:	2800      	cmp	r0, #0
 80137b8:	f000 8095 	beq.w	80138e6 <_ZN8touchgfx3HAL4tickEv+0x13e>
 80137bc:	2001      	movs	r0, #1
 80137be:	f7ef fa11 	bl	8002be4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80137c2:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 80137c6:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80137ca:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 80137ce:	2600      	movs	r6, #0
 80137d0:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 80137d4:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 80137d8:	b133      	cbz	r3, 80137e8 <_ZN8touchgfx3HAL4tickEv+0x40>
 80137da:	6823      	ldr	r3, [r4, #0]
 80137dc:	4620      	mov	r0, r4
 80137de:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 80137e2:	4798      	blx	r3
 80137e4:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 80137e8:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 80137ec:	6862      	ldr	r2, [r4, #4]
 80137ee:	f083 0301 	eor.w	r3, r3, #1
 80137f2:	7253      	strb	r3, [r2, #9]
 80137f4:	2601      	movs	r6, #1
 80137f6:	702e      	strb	r6, [r5, #0]
 80137f8:	f005 f93a 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
 80137fc:	6803      	ldr	r3, [r0, #0]
 80137fe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013800:	4798      	blx	r3
 8013802:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8013806:	b90b      	cbnz	r3, 801380c <_ZN8touchgfx3HAL4tickEv+0x64>
 8013808:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 801380c:	f005 f930 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
 8013810:	6803      	ldr	r3, [r0, #0]
 8013812:	695b      	ldr	r3, [r3, #20]
 8013814:	4798      	blx	r3
 8013816:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8013818:	6803      	ldr	r3, [r0, #0]
 801381a:	691b      	ldr	r3, [r3, #16]
 801381c:	4798      	blx	r3
 801381e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8013822:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8013826:	3b01      	subs	r3, #1
 8013828:	b2db      	uxtb	r3, r3
 801382a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801382e:	b10a      	cbz	r2, 8013834 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8013830:	2b00      	cmp	r3, #0
 8013832:	d1eb      	bne.n	801380c <_ZN8touchgfx3HAL4tickEv+0x64>
 8013834:	4a3a      	ldr	r2, [pc, #232]	; (8013920 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8013836:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 801383a:	7813      	ldrb	r3, [r2, #0]
 801383c:	3301      	adds	r3, #1
 801383e:	b25b      	sxtb	r3, r3
 8013840:	4299      	cmp	r1, r3
 8013842:	7013      	strb	r3, [r2, #0]
 8013844:	dc10      	bgt.n	8013868 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8013846:	68e0      	ldr	r0, [r4, #12]
 8013848:	2300      	movs	r3, #0
 801384a:	7013      	strb	r3, [r2, #0]
 801384c:	6803      	ldr	r3, [r0, #0]
 801384e:	aa03      	add	r2, sp, #12
 8013850:	68db      	ldr	r3, [r3, #12]
 8013852:	a902      	add	r1, sp, #8
 8013854:	4798      	blx	r3
 8013856:	6823      	ldr	r3, [r4, #0]
 8013858:	2800      	cmp	r0, #0
 801385a:	d050      	beq.n	80138fe <_ZN8touchgfx3HAL4tickEv+0x156>
 801385c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8013860:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8013864:	4620      	mov	r0, r4
 8013866:	4798      	blx	r3
 8013868:	6960      	ldr	r0, [r4, #20]
 801386a:	2300      	movs	r3, #0
 801386c:	f88d 3007 	strb.w	r3, [sp, #7]
 8013870:	b158      	cbz	r0, 801388a <_ZN8touchgfx3HAL4tickEv+0xe2>
 8013872:	6803      	ldr	r3, [r0, #0]
 8013874:	f10d 0107 	add.w	r1, sp, #7
 8013878:	68db      	ldr	r3, [r3, #12]
 801387a:	4798      	blx	r3
 801387c:	b128      	cbz	r0, 801388a <_ZN8touchgfx3HAL4tickEv+0xe2>
 801387e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8013880:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8013884:	6803      	ldr	r3, [r0, #0]
 8013886:	68db      	ldr	r3, [r3, #12]
 8013888:	4798      	blx	r3
 801388a:	f104 001c 	add.w	r0, r4, #28
 801388e:	f016 f8c3 	bl	8029a18 <_ZN8touchgfx8Gestures4tickEv>
 8013892:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 8013896:	b30b      	cbz	r3, 80138dc <_ZN8touchgfx3HAL4tickEv+0x134>
 8013898:	6920      	ldr	r0, [r4, #16]
 801389a:	6803      	ldr	r3, [r0, #0]
 801389c:	691b      	ldr	r3, [r3, #16]
 801389e:	4798      	blx	r3
 80138a0:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80138a2:	4606      	mov	r6, r0
 80138a4:	b903      	cbnz	r3, 80138a8 <_ZN8touchgfx3HAL4tickEv+0x100>
 80138a6:	6760      	str	r0, [r4, #116]	; 0x74
 80138a8:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80138aa:	4a1e      	ldr	r2, [pc, #120]	; (8013924 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 80138ac:	1af3      	subs	r3, r6, r3
 80138ae:	4293      	cmp	r3, r2
 80138b0:	d914      	bls.n	80138dc <_ZN8touchgfx3HAL4tickEv+0x134>
 80138b2:	6920      	ldr	r0, [r4, #16]
 80138b4:	6803      	ldr	r3, [r0, #0]
 80138b6:	699b      	ldr	r3, [r3, #24]
 80138b8:	4798      	blx	r3
 80138ba:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80138bc:	2264      	movs	r2, #100	; 0x64
 80138be:	1af3      	subs	r3, r6, r3
 80138c0:	fbb3 f3f2 	udiv	r3, r3, r2
 80138c4:	fbb0 f0f3 	udiv	r0, r0, r3
 80138c8:	2800      	cmp	r0, #0
 80138ca:	dc1d      	bgt.n	8013908 <_ZN8touchgfx3HAL4tickEv+0x160>
 80138cc:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 80138d0:	6920      	ldr	r0, [r4, #16]
 80138d2:	6803      	ldr	r3, [r0, #0]
 80138d4:	2100      	movs	r1, #0
 80138d6:	69db      	ldr	r3, [r3, #28]
 80138d8:	4798      	blx	r3
 80138da:	6766      	str	r6, [r4, #116]	; 0x74
 80138dc:	f005 f8c8 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
 80138e0:	6803      	ldr	r3, [r0, #0]
 80138e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80138e4:	4798      	blx	r3
 80138e6:	6823      	ldr	r3, [r4, #0]
 80138e8:	4620      	mov	r0, r4
 80138ea:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80138ee:	4798      	blx	r3
 80138f0:	2001      	movs	r0, #1
 80138f2:	f7ef f98f 	bl	8002c14 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80138f6:	2300      	movs	r3, #0
 80138f8:	702b      	strb	r3, [r5, #0]
 80138fa:	b004      	add	sp, #16
 80138fc:	bd70      	pop	{r4, r5, r6, pc}
 80138fe:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8013902:	4620      	mov	r0, r4
 8013904:	4798      	blx	r3
 8013906:	e7af      	b.n	8013868 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8013908:	2863      	cmp	r0, #99	; 0x63
 801390a:	bfcb      	itete	gt
 801390c:	2300      	movgt	r3, #0
 801390e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8013912:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8013916:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 801391a:	e7d9      	b.n	80138d0 <_ZN8touchgfx3HAL4tickEv+0x128>
 801391c:	20013850 	.word	0x20013850
 8013920:	20013851 	.word	0x20013851
 8013924:	05f5e100 	.word	0x05f5e100

08013928 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8013928:	b510      	push	{r4, lr}
 801392a:	4604      	mov	r4, r0
 801392c:	f7ef faca 	bl	8002ec4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8013930:	6863      	ldr	r3, [r4, #4]
 8013932:	2200      	movs	r2, #0
 8013934:	729a      	strb	r2, [r3, #10]
 8013936:	bd10      	pop	{r4, pc}

08013938 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8013938:	65c1      	str	r1, [r0, #92]	; 0x5c
 801393a:	301c      	adds	r0, #28
 801393c:	f016 b86a 	b.w	8029a14 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08013940 <_ZN8touchgfx3HAL5touchEll>:
 8013940:	b530      	push	{r4, r5, lr}
 8013942:	b087      	sub	sp, #28
 8013944:	4604      	mov	r4, r0
 8013946:	a804      	add	r0, sp, #16
 8013948:	e9cd 1204 	strd	r1, r2, [sp, #16]
 801394c:	f004 fe5c 	bl	8018608 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8013950:	9b04      	ldr	r3, [sp, #16]
 8013952:	f8ad 300c 	strh.w	r3, [sp, #12]
 8013956:	a906      	add	r1, sp, #24
 8013958:	9b05      	ldr	r3, [sp, #20]
 801395a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 801395e:	a803      	add	r0, sp, #12
 8013960:	f004 fea4 	bl	80186ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8013964:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8013968:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 801396c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8013970:	f104 001c 	add.w	r0, r4, #28
 8013974:	b189      	cbz	r1, 801399a <_ZN8touchgfx3HAL5touchEll+0x5a>
 8013976:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 801397a:	9300      	str	r3, [sp, #0]
 801397c:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8013980:	4613      	mov	r3, r2
 8013982:	462a      	mov	r2, r5
 8013984:	f016 f856 	bl	8029a34 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8013988:	b128      	cbz	r0, 8013996 <_ZN8touchgfx3HAL5touchEll+0x56>
 801398a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801398e:	6623      	str	r3, [r4, #96]	; 0x60
 8013990:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8013994:	6663      	str	r3, [r4, #100]	; 0x64
 8013996:	b007      	add	sp, #28
 8013998:	bd30      	pop	{r4, r5, pc}
 801399a:	f016 f88b 	bl	8029ab4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 801399e:	2301      	movs	r3, #1
 80139a0:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 80139a4:	e7f1      	b.n	801398a <_ZN8touchgfx3HAL5touchEll+0x4a>

080139a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 80139a6:	b510      	push	{r4, lr}
 80139a8:	2b00      	cmp	r3, #0
 80139aa:	d046      	beq.n	8013a3a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80139ac:	ea81 0002 	eor.w	r0, r1, r2
 80139b0:	07c4      	lsls	r4, r0, #31
 80139b2:	d508      	bpl.n	80139c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 80139b4:	440b      	add	r3, r1
 80139b6:	3a01      	subs	r2, #1
 80139b8:	428b      	cmp	r3, r1
 80139ba:	d93e      	bls.n	8013a3a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80139bc:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80139c0:	f801 0b01 	strb.w	r0, [r1], #1
 80139c4:	e7f8      	b.n	80139b8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 80139c6:	07d0      	lsls	r0, r2, #31
 80139c8:	bf42      	ittt	mi
 80139ca:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 80139ce:	f801 0b01 	strbmi.w	r0, [r1], #1
 80139d2:	f103 33ff 	addmi.w	r3, r3, #4294967295
 80139d6:	2b01      	cmp	r3, #1
 80139d8:	d911      	bls.n	80139fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80139da:	ea81 0402 	eor.w	r4, r1, r2
 80139de:	07a4      	lsls	r4, r4, #30
 80139e0:	4610      	mov	r0, r2
 80139e2:	d022      	beq.n	8013a2a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 80139e4:	f023 0401 	bic.w	r4, r3, #1
 80139e8:	440c      	add	r4, r1
 80139ea:	428c      	cmp	r4, r1
 80139ec:	4602      	mov	r2, r0
 80139ee:	d904      	bls.n	80139fa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 80139f0:	8812      	ldrh	r2, [r2, #0]
 80139f2:	f821 2b02 	strh.w	r2, [r1], #2
 80139f6:	3002      	adds	r0, #2
 80139f8:	e7f7      	b.n	80139ea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 80139fa:	f003 0301 	and.w	r3, r3, #1
 80139fe:	f023 0003 	bic.w	r0, r3, #3
 8013a02:	4408      	add	r0, r1
 8013a04:	4288      	cmp	r0, r1
 8013a06:	4614      	mov	r4, r2
 8013a08:	d904      	bls.n	8013a14 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8013a0a:	6824      	ldr	r4, [r4, #0]
 8013a0c:	f841 4b04 	str.w	r4, [r1], #4
 8013a10:	3204      	adds	r2, #4
 8013a12:	e7f7      	b.n	8013a04 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8013a14:	f003 0303 	and.w	r3, r3, #3
 8013a18:	440b      	add	r3, r1
 8013a1a:	3a01      	subs	r2, #1
 8013a1c:	428b      	cmp	r3, r1
 8013a1e:	d90c      	bls.n	8013a3a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8013a20:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8013a24:	f801 0b01 	strb.w	r0, [r1], #1
 8013a28:	e7f8      	b.n	8013a1c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8013a2a:	0790      	lsls	r0, r2, #30
 8013a2c:	d0e7      	beq.n	80139fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8013a2e:	f832 0b02 	ldrh.w	r0, [r2], #2
 8013a32:	f821 0b02 	strh.w	r0, [r1], #2
 8013a36:	3b02      	subs	r3, #2
 8013a38:	e7e1      	b.n	80139fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8013a3a:	2001      	movs	r0, #1
 8013a3c:	bd10      	pop	{r4, pc}

08013a3e <_ZN8touchgfx3HAL7noTouchEv>:
 8013a3e:	b510      	push	{r4, lr}
 8013a40:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 8013a44:	4604      	mov	r4, r0
 8013a46:	b153      	cbz	r3, 8013a5e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8013a48:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8013a4c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8013a50:	2101      	movs	r1, #1
 8013a52:	301c      	adds	r0, #28
 8013a54:	f016 f82e 	bl	8029ab4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8013a58:	2300      	movs	r3, #0
 8013a5a:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8013a5e:	bd10      	pop	{r4, pc}

08013a60 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8013a60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013a64:	b085      	sub	sp, #20
 8013a66:	ad04      	add	r5, sp, #16
 8013a68:	4604      	mov	r4, r0
 8013a6a:	2000      	movs	r0, #0
 8013a6c:	f845 0d04 	str.w	r0, [r5, #-4]!
 8013a70:	69a0      	ldr	r0, [r4, #24]
 8013a72:	6806      	ldr	r6, [r0, #0]
 8013a74:	9501      	str	r5, [sp, #4]
 8013a76:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8013a7a:	9500      	str	r5, [sp, #0]
 8013a7c:	6835      	ldr	r5, [r6, #0]
 8013a7e:	4699      	mov	r9, r3
 8013a80:	460f      	mov	r7, r1
 8013a82:	4690      	mov	r8, r2
 8013a84:	47a8      	blx	r5
 8013a86:	4d10      	ldr	r5, [pc, #64]	; (8013ac8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8013a88:	4606      	mov	r6, r0
 8013a8a:	f8a5 9000 	strh.w	r9, [r5]
 8013a8e:	f7f1 fdbb 	bl	8005608 <_ZN8touchgfx3HAL3lcdEv>
 8013a92:	6803      	ldr	r3, [r0, #0]
 8013a94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013a96:	4798      	blx	r3
 8013a98:	b128      	cbz	r0, 8013aa6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8013a9a:	2801      	cmp	r0, #1
 8013a9c:	d00b      	beq.n	8013ab6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8013a9e:	4630      	mov	r0, r6
 8013aa0:	b005      	add	sp, #20
 8013aa2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013aa6:	882b      	ldrh	r3, [r5, #0]
 8013aa8:	fb08 7203 	mla	r2, r8, r3, r7
 8013aac:	9b03      	ldr	r3, [sp, #12]
 8013aae:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8013ab2:	63e3      	str	r3, [r4, #60]	; 0x3c
 8013ab4:	e7f3      	b.n	8013a9e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8013ab6:	882a      	ldrh	r2, [r5, #0]
 8013ab8:	9b03      	ldr	r3, [sp, #12]
 8013aba:	fb08 7202 	mla	r2, r8, r2, r7
 8013abe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013ac2:	1a9a      	subs	r2, r3, r2
 8013ac4:	63e2      	str	r2, [r4, #60]	; 0x3c
 8013ac6:	e7ea      	b.n	8013a9e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8013ac8:	20013846 	.word	0x20013846

08013acc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8013acc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013ace:	b08b      	sub	sp, #44	; 0x2c
 8013ad0:	4617      	mov	r7, r2
 8013ad2:	4604      	mov	r4, r0
 8013ad4:	460e      	mov	r6, r1
 8013ad6:	461d      	mov	r5, r3
 8013ad8:	f7f1 fd96 	bl	8005608 <_ZN8touchgfx3HAL3lcdEv>
 8013adc:	6803      	ldr	r3, [r0, #0]
 8013ade:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013ae0:	4798      	blx	r3
 8013ae2:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8013ae6:	9007      	str	r0, [sp, #28]
 8013ae8:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8013aec:	4b0d      	ldr	r3, [pc, #52]	; (8013b24 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8013aee:	6822      	ldr	r2, [r4, #0]
 8013af0:	881b      	ldrh	r3, [r3, #0]
 8013af2:	9306      	str	r3, [sp, #24]
 8013af4:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8013af8:	9305      	str	r3, [sp, #20]
 8013afa:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8013afe:	9304      	str	r3, [sp, #16]
 8013b00:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013b04:	9303      	str	r3, [sp, #12]
 8013b06:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013b0a:	9302      	str	r3, [sp, #8]
 8013b0c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013b10:	e9cd 5300 	strd	r5, r3, [sp]
 8013b14:	4631      	mov	r1, r6
 8013b16:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8013b18:	463b      	mov	r3, r7
 8013b1a:	2200      	movs	r2, #0
 8013b1c:	4620      	mov	r0, r4
 8013b1e:	47a8      	blx	r5
 8013b20:	b00b      	add	sp, #44	; 0x2c
 8013b22:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013b24:	20013846 	.word	0x20013846

08013b28 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8013b28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013b2c:	4698      	mov	r8, r3
 8013b2e:	6803      	ldr	r3, [r0, #0]
 8013b30:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8013b32:	4b15      	ldr	r3, [pc, #84]	; (8013b88 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8013b34:	b08b      	sub	sp, #44	; 0x2c
 8013b36:	4617      	mov	r7, r2
 8013b38:	f8b3 9000 	ldrh.w	r9, [r3]
 8013b3c:	460e      	mov	r6, r1
 8013b3e:	4604      	mov	r4, r0
 8013b40:	f7f1 fd62 	bl	8005608 <_ZN8touchgfx3HAL3lcdEv>
 8013b44:	6803      	ldr	r3, [r0, #0]
 8013b46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013b48:	4798      	blx	r3
 8013b4a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8013b4e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8013b52:	2302      	movs	r3, #2
 8013b54:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8013b58:	2301      	movs	r3, #1
 8013b5a:	9305      	str	r3, [sp, #20]
 8013b5c:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8013b60:	9304      	str	r3, [sp, #16]
 8013b62:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8013b66:	9303      	str	r3, [sp, #12]
 8013b68:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013b6c:	9302      	str	r3, [sp, #8]
 8013b6e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013b72:	2200      	movs	r2, #0
 8013b74:	e9cd 8300 	strd	r8, r3, [sp]
 8013b78:	4631      	mov	r1, r6
 8013b7a:	463b      	mov	r3, r7
 8013b7c:	4620      	mov	r0, r4
 8013b7e:	47a8      	blx	r5
 8013b80:	b00b      	add	sp, #44	; 0x2c
 8013b82:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013b86:	bf00      	nop
 8013b88:	20013846 	.word	0x20013846

08013b8c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8013b8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013b90:	4698      	mov	r8, r3
 8013b92:	6803      	ldr	r3, [r0, #0]
 8013b94:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8013b96:	4b11      	ldr	r3, [pc, #68]	; (8013bdc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8013b98:	b087      	sub	sp, #28
 8013b9a:	f8b3 9000 	ldrh.w	r9, [r3]
 8013b9e:	460e      	mov	r6, r1
 8013ba0:	4617      	mov	r7, r2
 8013ba2:	4604      	mov	r4, r0
 8013ba4:	f7f1 fd30 	bl	8005608 <_ZN8touchgfx3HAL3lcdEv>
 8013ba8:	6803      	ldr	r3, [r0, #0]
 8013baa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013bac:	4798      	blx	r3
 8013bae:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8013bb2:	f8cd 900c 	str.w	r9, [sp, #12]
 8013bb6:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8013bba:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8013bbe:	9302      	str	r3, [sp, #8]
 8013bc0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8013bc4:	9301      	str	r3, [sp, #4]
 8013bc6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013bca:	9300      	str	r3, [sp, #0]
 8013bcc:	463a      	mov	r2, r7
 8013bce:	4643      	mov	r3, r8
 8013bd0:	4631      	mov	r1, r6
 8013bd2:	4620      	mov	r0, r4
 8013bd4:	47a8      	blx	r5
 8013bd6:	b007      	add	sp, #28
 8013bd8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013bdc:	20013846 	.word	0x20013846

08013be0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8013be0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013be4:	4604      	mov	r4, r0
 8013be6:	b08f      	sub	sp, #60	; 0x3c
 8013be8:	4610      	mov	r0, r2
 8013bea:	460d      	mov	r5, r1
 8013bec:	4691      	mov	r9, r2
 8013bee:	461e      	mov	r6, r3
 8013bf0:	f008 fafa 	bl	801c1e8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8013bf4:	2800      	cmp	r0, #0
 8013bf6:	f000 809d 	beq.w	8013d34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8013bfa:	6823      	ldr	r3, [r4, #0]
 8013bfc:	f8df b198 	ldr.w	fp, [pc, #408]	; 8013d98 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8013c00:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013c02:	f8df a198 	ldr.w	sl, [pc, #408]	; 8013d9c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8013c06:	4f61      	ldr	r7, [pc, #388]	; (8013d8c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013c08:	4620      	mov	r0, r4
 8013c0a:	4798      	blx	r3
 8013c0c:	6823      	ldr	r3, [r4, #0]
 8013c0e:	4620      	mov	r0, r4
 8013c10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013c12:	4798      	blx	r3
 8013c14:	f8bb 3000 	ldrh.w	r3, [fp]
 8013c18:	9301      	str	r3, [sp, #4]
 8013c1a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8013c1e:	f8ba 3000 	ldrh.w	r3, [sl]
 8013c22:	9302      	str	r3, [sp, #8]
 8013c24:	883b      	ldrh	r3, [r7, #0]
 8013c26:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8013c2a:	9303      	str	r3, [sp, #12]
 8013c2c:	4b58      	ldr	r3, [pc, #352]	; (8013d90 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013c2e:	9305      	str	r3, [sp, #20]
 8013c30:	881a      	ldrh	r2, [r3, #0]
 8013c32:	9204      	str	r2, [sp, #16]
 8013c34:	4640      	mov	r0, r8
 8013c36:	f008 fb6b 	bl	801c310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013c3a:	8038      	strh	r0, [r7, #0]
 8013c3c:	4640      	mov	r0, r8
 8013c3e:	f008 fb9b 	bl	801c378 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013c42:	9b05      	ldr	r3, [sp, #20]
 8013c44:	b280      	uxth	r0, r0
 8013c46:	8018      	strh	r0, [r3, #0]
 8013c48:	4b52      	ldr	r3, [pc, #328]	; (8013d94 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8013c4a:	781b      	ldrb	r3, [r3, #0]
 8013c4c:	2b00      	cmp	r3, #0
 8013c4e:	d174      	bne.n	8013d3a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8013c50:	883b      	ldrh	r3, [r7, #0]
 8013c52:	f8ab 3000 	strh.w	r3, [fp]
 8013c56:	f8aa 0000 	strh.w	r0, [sl]
 8013c5a:	4648      	mov	r0, r9
 8013c5c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8013c60:	f008 fac2 	bl	801c1e8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8013c64:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8013c68:	2200      	movs	r2, #0
 8013c6a:	4611      	mov	r1, r2
 8013c6c:	4628      	mov	r0, r5
 8013c6e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8013c72:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8013c76:	f7ef fd8d 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8013c7a:	2301      	movs	r3, #1
 8013c7c:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8013c80:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8013c84:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8013c88:	2b00      	cmp	r3, #0
 8013c8a:	dd5c      	ble.n	8013d46 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8013c8c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8013c90:	2b00      	cmp	r3, #0
 8013c92:	dd58      	ble.n	8013d46 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8013c94:	462a      	mov	r2, r5
 8013c96:	ab0a      	add	r3, sp, #40	; 0x28
 8013c98:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8013c9c:	6851      	ldr	r1, [r2, #4]
 8013c9e:	c303      	stmia	r3!, {r0, r1}
 8013ca0:	4631      	mov	r1, r6
 8013ca2:	a80a      	add	r0, sp, #40	; 0x28
 8013ca4:	f7fe ff92 	bl	8012bcc <_ZN8touchgfx4RectaNERKS0_>
 8013ca8:	4b38      	ldr	r3, [pc, #224]	; (8013d8c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013caa:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013cae:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8013cb2:	2100      	movs	r1, #0
 8013cb4:	aa0a      	add	r2, sp, #40	; 0x28
 8013cb6:	4b36      	ldr	r3, [pc, #216]	; (8013d90 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013cb8:	910c      	str	r1, [sp, #48]	; 0x30
 8013cba:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013cbe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013cc2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013cc6:	ab08      	add	r3, sp, #32
 8013cc8:	e883 0003 	stmia.w	r3, {r0, r1}
 8013ccc:	4618      	mov	r0, r3
 8013cce:	a90c      	add	r1, sp, #48	; 0x30
 8013cd0:	f7fe ff7c 	bl	8012bcc <_ZN8touchgfx4RectaNERKS0_>
 8013cd4:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8013cd6:	2b00      	cmp	r3, #0
 8013cd8:	d13c      	bne.n	8013d54 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8013cda:	2000      	movs	r0, #0
 8013cdc:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8013ce0:	2600      	movs	r6, #0
 8013ce2:	682a      	ldr	r2, [r5, #0]
 8013ce4:	696b      	ldr	r3, [r5, #20]
 8013ce6:	616e      	str	r6, [r5, #20]
 8013ce8:	9305      	str	r3, [sp, #20]
 8013cea:	6892      	ldr	r2, [r2, #8]
 8013cec:	a908      	add	r1, sp, #32
 8013cee:	4628      	mov	r0, r5
 8013cf0:	4790      	blx	r2
 8013cf2:	9b05      	ldr	r3, [sp, #20]
 8013cf4:	616b      	str	r3, [r5, #20]
 8013cf6:	4652      	mov	r2, sl
 8013cf8:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8013cfc:	4649      	mov	r1, r9
 8013cfe:	4628      	mov	r0, r5
 8013d00:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8013d04:	f7ef fd46 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8013d08:	4b23      	ldr	r3, [pc, #140]	; (8013d98 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8013d0a:	9a01      	ldr	r2, [sp, #4]
 8013d0c:	801a      	strh	r2, [r3, #0]
 8013d0e:	4b23      	ldr	r3, [pc, #140]	; (8013d9c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8013d10:	9a02      	ldr	r2, [sp, #8]
 8013d12:	801a      	strh	r2, [r3, #0]
 8013d14:	4b1d      	ldr	r3, [pc, #116]	; (8013d8c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013d16:	9a03      	ldr	r2, [sp, #12]
 8013d18:	801a      	strh	r2, [r3, #0]
 8013d1a:	4b1d      	ldr	r3, [pc, #116]	; (8013d90 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013d1c:	9a04      	ldr	r2, [sp, #16]
 8013d1e:	801a      	strh	r2, [r3, #0]
 8013d20:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8013d24:	6823      	ldr	r3, [r4, #0]
 8013d26:	4620      	mov	r0, r4
 8013d28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013d2a:	4798      	blx	r3
 8013d2c:	6823      	ldr	r3, [r4, #0]
 8013d2e:	4620      	mov	r0, r4
 8013d30:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013d32:	4798      	blx	r3
 8013d34:	b00f      	add	sp, #60	; 0x3c
 8013d36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d3a:	883b      	ldrh	r3, [r7, #0]
 8013d3c:	f8ab 0000 	strh.w	r0, [fp]
 8013d40:	f8aa 3000 	strh.w	r3, [sl]
 8013d44:	e789      	b.n	8013c5a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8013d46:	462a      	mov	r2, r5
 8013d48:	ab0a      	add	r3, sp, #40	; 0x28
 8013d4a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8013d4e:	6851      	ldr	r1, [r2, #4]
 8013d50:	c303      	stmia	r3!, {r0, r1}
 8013d52:	e7a9      	b.n	8013ca8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8013d54:	a807      	add	r0, sp, #28
 8013d56:	f008 fc4b 	bl	801c5f0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013d5a:	4606      	mov	r6, r0
 8013d5c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8013d5e:	6803      	ldr	r3, [r0, #0]
 8013d60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013d62:	4798      	blx	r3
 8013d64:	4286      	cmp	r6, r0
 8013d66:	d1b8      	bne.n	8013cda <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8013d68:	f7f1 fc4e 	bl	8005608 <_ZN8touchgfx3HAL3lcdEv>
 8013d6c:	6803      	ldr	r3, [r0, #0]
 8013d6e:	4606      	mov	r6, r0
 8013d70:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013d72:	9305      	str	r3, [sp, #20]
 8013d74:	a807      	add	r0, sp, #28
 8013d76:	f008 fc3b 	bl	801c5f0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013d7a:	9b05      	ldr	r3, [sp, #20]
 8013d7c:	4601      	mov	r1, r0
 8013d7e:	4630      	mov	r0, r6
 8013d80:	4798      	blx	r3
 8013d82:	f080 0001 	eor.w	r0, r0, #1
 8013d86:	b2c0      	uxtb	r0, r0
 8013d88:	e7a8      	b.n	8013cdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8013d8a:	bf00      	nop
 8013d8c:	20013840 	.word	0x20013840
 8013d90:	20013842 	.word	0x20013842
 8013d94:	20013844 	.word	0x20013844
 8013d98:	20013846 	.word	0x20013846
 8013d9c:	20013848 	.word	0x20013848

08013da0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8013da0:	b510      	push	{r4, lr}
 8013da2:	4b07      	ldr	r3, [pc, #28]	; (8013dc0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8013da4:	781b      	ldrb	r3, [r3, #0]
 8013da6:	4604      	mov	r4, r0
 8013da8:	b13b      	cbz	r3, 8013dba <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8013daa:	6803      	ldr	r3, [r0, #0]
 8013dac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013dae:	4798      	blx	r3
 8013db0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8013db2:	4283      	cmp	r3, r0
 8013db4:	d101      	bne.n	8013dba <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8013db6:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8013db8:	bd10      	pop	{r4, pc}
 8013dba:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8013dbc:	e7fc      	b.n	8013db8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8013dbe:	bf00      	nop
 8013dc0:	2001384a 	.word	0x2001384a

08013dc4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8013dc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013dc8:	b08a      	sub	sp, #40	; 0x28
 8013dca:	461d      	mov	r5, r3
 8013dcc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8013dd0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013dd4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013dd8:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013ddc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013de0:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013de4:	2400      	movs	r4, #0
 8013de6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013dea:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8013dee:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013df2:	4690      	mov	r8, r2
 8013df4:	4607      	mov	r7, r0
 8013df6:	9404      	str	r4, [sp, #16]
 8013df8:	f88d 4020 	strb.w	r4, [sp, #32]
 8013dfc:	f7ff ffd0 	bl	8013da0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013e00:	fb06 8505 	mla	r5, r6, r5, r8
 8013e04:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013e08:	6878      	ldr	r0, [r7, #4]
 8013e0a:	9505      	str	r5, [sp, #20]
 8013e0c:	f8ad 601e 	strh.w	r6, [sp, #30]
 8013e10:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013e14:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8013e18:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8013e1c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8013e20:	6803      	ldr	r3, [r0, #0]
 8013e22:	a901      	add	r1, sp, #4
 8013e24:	685b      	ldr	r3, [r3, #4]
 8013e26:	4798      	blx	r3
 8013e28:	b00a      	add	sp, #40	; 0x28
 8013e2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013e2e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8013e2e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013e32:	b08b      	sub	sp, #44	; 0x2c
 8013e34:	2400      	movs	r4, #0
 8013e36:	461d      	mov	r5, r3
 8013e38:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013e3c:	4688      	mov	r8, r1
 8013e3e:	4691      	mov	r9, r2
 8013e40:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8013e44:	9404      	str	r4, [sp, #16]
 8013e46:	4607      	mov	r7, r0
 8013e48:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8013e4c:	f7ff ffa8 	bl	8013da0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013e50:	fb06 9505 	mla	r5, r6, r5, r9
 8013e54:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013e58:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013e5c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013e60:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013e64:	6878      	ldr	r0, [r7, #4]
 8013e66:	9505      	str	r5, [sp, #20]
 8013e68:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013e6c:	f8ad 401c 	strh.w	r4, [sp, #28]
 8013e70:	f8ad 601e 	strh.w	r6, [sp, #30]
 8013e74:	f8cd 8010 	str.w	r8, [sp, #16]
 8013e78:	f8ad 4020 	strh.w	r4, [sp, #32]
 8013e7c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013e80:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8013e84:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8013e88:	6803      	ldr	r3, [r0, #0]
 8013e8a:	a901      	add	r1, sp, #4
 8013e8c:	685b      	ldr	r3, [r3, #4]
 8013e8e:	4798      	blx	r3
 8013e90:	b00b      	add	sp, #44	; 0x2c
 8013e92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08013e98 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8013e98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013e9c:	b08a      	sub	sp, #40	; 0x28
 8013e9e:	4698      	mov	r8, r3
 8013ea0:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8013ea4:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8013ea8:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8013eac:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8013eb0:	2300      	movs	r3, #0
 8013eb2:	2d0b      	cmp	r5, #11
 8013eb4:	4606      	mov	r6, r0
 8013eb6:	9304      	str	r3, [sp, #16]
 8013eb8:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8013ebc:	d138      	bne.n	8013f30 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8013ebe:	2380      	movs	r3, #128	; 0x80
 8013ec0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013ec4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013ec8:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013ecc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013ed0:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013ed4:	f88d 0020 	strb.w	r0, [sp, #32]
 8013ed8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013edc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013ee0:	4630      	mov	r0, r6
 8013ee2:	9203      	str	r2, [sp, #12]
 8013ee4:	f7ff ff5c 	bl	8013da0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013ee8:	2c0b      	cmp	r4, #11
 8013eea:	bf98      	it	ls
 8013eec:	4b1b      	ldrls	r3, [pc, #108]	; (8013f5c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8013eee:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8013ef2:	bf98      	it	ls
 8013ef4:	5d19      	ldrbls	r1, [r3, r4]
 8013ef6:	f8ad 701e 	strh.w	r7, [sp, #30]
 8013efa:	bf88      	it	hi
 8013efc:	2100      	movhi	r1, #0
 8013efe:	fb02 8307 	mla	r3, r2, r7, r8
 8013f02:	10c9      	asrs	r1, r1, #3
 8013f04:	fb01 0003 	mla	r0, r1, r3, r0
 8013f08:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8013f0c:	9005      	str	r0, [sp, #20]
 8013f0e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8013f12:	6870      	ldr	r0, [r6, #4]
 8013f14:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8013f18:	2300      	movs	r3, #0
 8013f1a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013f1e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8013f22:	6803      	ldr	r3, [r0, #0]
 8013f24:	a901      	add	r1, sp, #4
 8013f26:	685b      	ldr	r3, [r3, #4]
 8013f28:	4798      	blx	r3
 8013f2a:	b00a      	add	sp, #40	; 0x28
 8013f2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013f30:	2d02      	cmp	r5, #2
 8013f32:	d109      	bne.n	8013f48 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8013f34:	28ff      	cmp	r0, #255	; 0xff
 8013f36:	d105      	bne.n	8013f44 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8013f38:	f1bc 0f00 	cmp.w	ip, #0
 8013f3c:	bf14      	ite	ne
 8013f3e:	2340      	movne	r3, #64	; 0x40
 8013f40:	2320      	moveq	r3, #32
 8013f42:	e7bd      	b.n	8013ec0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013f44:	2340      	movs	r3, #64	; 0x40
 8013f46:	e7bb      	b.n	8013ec0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013f48:	28ff      	cmp	r0, #255	; 0xff
 8013f4a:	d105      	bne.n	8013f58 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8013f4c:	f1bc 0f00 	cmp.w	ip, #0
 8013f50:	bf14      	ite	ne
 8013f52:	2304      	movne	r3, #4
 8013f54:	2301      	moveq	r3, #1
 8013f56:	e7b3      	b.n	8013ec0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013f58:	2304      	movs	r3, #4
 8013f5a:	e7b1      	b.n	8013ec0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013f5c:	080318e8 	.word	0x080318e8

08013f60 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8013f60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f64:	b08b      	sub	sp, #44	; 0x2c
 8013f66:	461d      	mov	r5, r3
 8013f68:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8013f6c:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8013f70:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8013f74:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013f78:	bf14      	ite	ne
 8013f7a:	2308      	movne	r3, #8
 8013f7c:	2302      	moveq	r3, #2
 8013f7e:	2400      	movs	r4, #0
 8013f80:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8013f84:	4688      	mov	r8, r1
 8013f86:	4693      	mov	fp, r2
 8013f88:	9404      	str	r4, [sp, #16]
 8013f8a:	4607      	mov	r7, r0
 8013f8c:	f7ff ff08 	bl	8013da0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013f90:	2e0b      	cmp	r6, #11
 8013f92:	bf98      	it	ls
 8013f94:	4b15      	ldrls	r3, [pc, #84]	; (8013fec <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8013f96:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013f9a:	bf98      	it	ls
 8013f9c:	5d9c      	ldrbls	r4, [r3, r6]
 8013f9e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8013fa2:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013fa6:	fb05 b50a 	mla	r5, r5, sl, fp
 8013faa:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8013fae:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013fb2:	10e4      	asrs	r4, r4, #3
 8013fb4:	fb04 0405 	mla	r4, r4, r5, r0
 8013fb8:	2300      	movs	r3, #0
 8013fba:	6878      	ldr	r0, [r7, #4]
 8013fbc:	9405      	str	r4, [sp, #20]
 8013fbe:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013fc2:	f8ad a01e 	strh.w	sl, [sp, #30]
 8013fc6:	f8cd 8010 	str.w	r8, [sp, #16]
 8013fca:	f88d 9020 	strb.w	r9, [sp, #32]
 8013fce:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8013fd2:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8013fd6:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8013fda:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8013fde:	6803      	ldr	r3, [r0, #0]
 8013fe0:	a901      	add	r1, sp, #4
 8013fe2:	685b      	ldr	r3, [r3, #4]
 8013fe4:	4798      	blx	r3
 8013fe6:	b00b      	add	sp, #44	; 0x2c
 8013fe8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013fec:	080318e8 	.word	0x080318e8

08013ff0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8013ff0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013ff4:	461e      	mov	r6, r3
 8013ff6:	4b0a      	ldr	r3, [pc, #40]	; (8014020 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8013ff8:	460f      	mov	r7, r1
 8013ffa:	881d      	ldrh	r5, [r3, #0]
 8013ffc:	4690      	mov	r8, r2
 8013ffe:	f7f1 fb03 	bl	8005608 <_ZN8touchgfx3HAL3lcdEv>
 8014002:	6803      	ldr	r3, [r0, #0]
 8014004:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014006:	4798      	blx	r3
 8014008:	280b      	cmp	r0, #11
 801400a:	bf9a      	itte	ls
 801400c:	4b05      	ldrls	r3, [pc, #20]	; (8014024 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 801400e:	5c1c      	ldrbls	r4, [r3, r0]
 8014010:	2400      	movhi	r4, #0
 8014012:	fb08 7005 	mla	r0, r8, r5, r7
 8014016:	10e4      	asrs	r4, r4, #3
 8014018:	fb04 6000 	mla	r0, r4, r0, r6
 801401c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014020:	20013846 	.word	0x20013846
 8014024:	080318e8 	.word	0x080318e8

08014028 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8014028:	b5f0      	push	{r4, r5, r6, r7, lr}
 801402a:	b08b      	sub	sp, #44	; 0x2c
 801402c:	461f      	mov	r7, r3
 801402e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8014032:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8014036:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801403a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801403e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8014042:	f8ad 301a 	strh.w	r3, [sp, #26]
 8014046:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801404a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801404e:	2500      	movs	r5, #0
 8014050:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8014054:	f88d 3020 	strb.w	r3, [sp, #32]
 8014058:	4604      	mov	r4, r0
 801405a:	4616      	mov	r6, r2
 801405c:	9504      	str	r5, [sp, #16]
 801405e:	f7ff fe9f 	bl	8013da0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8014062:	463a      	mov	r2, r7
 8014064:	4631      	mov	r1, r6
 8014066:	4603      	mov	r3, r0
 8014068:	4620      	mov	r0, r4
 801406a:	f7ff ffc1 	bl	8013ff0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801406e:	4b0e      	ldr	r3, [pc, #56]	; (80140a8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8014070:	9005      	str	r0, [sp, #20]
 8014072:	881b      	ldrh	r3, [r3, #0]
 8014074:	f8ad 301e 	strh.w	r3, [sp, #30]
 8014078:	f7f1 fac6 	bl	8005608 <_ZN8touchgfx3HAL3lcdEv>
 801407c:	6803      	ldr	r3, [r0, #0]
 801407e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014080:	4798      	blx	r3
 8014082:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014084:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8014088:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 801408c:	9304      	str	r3, [sp, #16]
 801408e:	6860      	ldr	r0, [r4, #4]
 8014090:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8014094:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8014098:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 801409c:	6803      	ldr	r3, [r0, #0]
 801409e:	a901      	add	r1, sp, #4
 80140a0:	685b      	ldr	r3, [r3, #4]
 80140a2:	4798      	blx	r3
 80140a4:	b00b      	add	sp, #44	; 0x2c
 80140a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80140a8:	20013846 	.word	0x20013846

080140ac <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 80140ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80140ae:	b08d      	sub	sp, #52	; 0x34
 80140b0:	466b      	mov	r3, sp
 80140b2:	e883 0006 	stmia.w	r3, {r1, r2}
 80140b6:	2300      	movs	r3, #0
 80140b8:	9306      	str	r3, [sp, #24]
 80140ba:	6803      	ldr	r3, [r0, #0]
 80140bc:	f8bd 6000 	ldrh.w	r6, [sp]
 80140c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80140c2:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 80140c6:	2501      	movs	r5, #1
 80140c8:	9503      	str	r5, [sp, #12]
 80140ca:	4604      	mov	r4, r0
 80140cc:	4798      	blx	r3
 80140ce:	463a      	mov	r2, r7
 80140d0:	4631      	mov	r1, r6
 80140d2:	4603      	mov	r3, r0
 80140d4:	4620      	mov	r0, r4
 80140d6:	f7ff ff8b 	bl	8013ff0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80140da:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80140dc:	9307      	str	r3, [sp, #28]
 80140de:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80140e2:	f8ad 3020 	strh.w	r3, [sp, #32]
 80140e6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80140ea:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80140ee:	4b0f      	ldr	r3, [pc, #60]	; (801412c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 80140f0:	9004      	str	r0, [sp, #16]
 80140f2:	881b      	ldrh	r3, [r3, #0]
 80140f4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80140f8:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80140fc:	f7f1 fa84 	bl	8005608 <_ZN8touchgfx3HAL3lcdEv>
 8014100:	6803      	ldr	r3, [r0, #0]
 8014102:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014104:	4798      	blx	r3
 8014106:	23ff      	movs	r3, #255	; 0xff
 8014108:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 801410c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8014110:	6860      	ldr	r0, [r4, #4]
 8014112:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8014116:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801411a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801411e:	6803      	ldr	r3, [r0, #0]
 8014120:	a903      	add	r1, sp, #12
 8014122:	685b      	ldr	r3, [r3, #4]
 8014124:	4798      	blx	r3
 8014126:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8014128:	b00d      	add	sp, #52	; 0x34
 801412a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801412c:	20013846 	.word	0x20013846

08014130 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8014130:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014134:	b08c      	sub	sp, #48	; 0x30
 8014136:	461e      	mov	r6, r3
 8014138:	466d      	mov	r5, sp
 801413a:	2300      	movs	r3, #0
 801413c:	e885 0006 	stmia.w	r5, {r1, r2}
 8014140:	9306      	str	r3, [sp, #24]
 8014142:	6803      	ldr	r3, [r0, #0]
 8014144:	f8bd 7000 	ldrh.w	r7, [sp]
 8014148:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801414a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 801414e:	2501      	movs	r5, #1
 8014150:	9503      	str	r5, [sp, #12]
 8014152:	4604      	mov	r4, r0
 8014154:	4798      	blx	r3
 8014156:	4642      	mov	r2, r8
 8014158:	4639      	mov	r1, r7
 801415a:	4603      	mov	r3, r0
 801415c:	4620      	mov	r0, r4
 801415e:	f7ff ff47 	bl	8013ff0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8014162:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8014166:	f8ad 3020 	strh.w	r3, [sp, #32]
 801416a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801416e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8014172:	4b11      	ldr	r3, [pc, #68]	; (80141b8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8014174:	9004      	str	r0, [sp, #16]
 8014176:	881b      	ldrh	r3, [r3, #0]
 8014178:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 801417c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801417e:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8014182:	9607      	str	r6, [sp, #28]
 8014184:	f7f1 fa40 	bl	8005608 <_ZN8touchgfx3HAL3lcdEv>
 8014188:	6803      	ldr	r3, [r0, #0]
 801418a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801418c:	4798      	blx	r3
 801418e:	23ff      	movs	r3, #255	; 0xff
 8014190:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8014194:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8014198:	6860      	ldr	r0, [r4, #4]
 801419a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 801419e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80141a2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80141a6:	6803      	ldr	r3, [r0, #0]
 80141a8:	a903      	add	r1, sp, #12
 80141aa:	685b      	ldr	r3, [r3, #4]
 80141ac:	4798      	blx	r3
 80141ae:	4630      	mov	r0, r6
 80141b0:	b00c      	add	sp, #48	; 0x30
 80141b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80141b6:	bf00      	nop
 80141b8:	20013846 	.word	0x20013846

080141bc <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 80141bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80141be:	b085      	sub	sp, #20
 80141c0:	ac02      	add	r4, sp, #8
 80141c2:	e884 0006 	stmia.w	r4, {r1, r2}
 80141c6:	4605      	mov	r5, r0
 80141c8:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 80141cc:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 80141d0:	f7ff fde6 	bl	8013da0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80141d4:	463a      	mov	r2, r7
 80141d6:	4603      	mov	r3, r0
 80141d8:	4631      	mov	r1, r6
 80141da:	4628      	mov	r0, r5
 80141dc:	f7ff ff08 	bl	8013ff0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80141e0:	4a05      	ldr	r2, [pc, #20]	; (80141f8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80141e2:	682b      	ldr	r3, [r5, #0]
 80141e4:	8812      	ldrh	r2, [r2, #0]
 80141e6:	9200      	str	r2, [sp, #0]
 80141e8:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80141ea:	e894 0006 	ldmia.w	r4, {r1, r2}
 80141ee:	4603      	mov	r3, r0
 80141f0:	4628      	mov	r0, r5
 80141f2:	47b0      	blx	r6
 80141f4:	b005      	add	sp, #20
 80141f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80141f8:	20013846 	.word	0x20013846

080141fc <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80141fc:	b570      	push	{r4, r5, r6, lr}
 80141fe:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8014202:	4604      	mov	r4, r0
 8014204:	b19b      	cbz	r3, 801422e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8014206:	2002      	movs	r0, #2
 8014208:	f7ee fd1c 	bl	8002c44 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 801420c:	2300      	movs	r3, #0
 801420e:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8014212:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8014216:	6823      	ldr	r3, [r4, #0]
 8014218:	4620      	mov	r0, r4
 801421a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801421e:	f7ff fdbf 	bl	8013da0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8014222:	462b      	mov	r3, r5
 8014224:	4601      	mov	r1, r0
 8014226:	4620      	mov	r0, r4
 8014228:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801422c:	4718      	bx	r3
 801422e:	bd70      	pop	{r4, r5, r6, pc}

08014230 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8014230:	b538      	push	{r3, r4, r5, lr}
 8014232:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8014236:	428b      	cmp	r3, r1
 8014238:	4604      	mov	r4, r0
 801423a:	460d      	mov	r5, r1
 801423c:	d006      	beq.n	801424c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 801423e:	6803      	ldr	r3, [r0, #0]
 8014240:	b929      	cbnz	r1, 801424e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8014242:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8014246:	4798      	blx	r3
 8014248:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 801424c:	bd38      	pop	{r3, r4, r5, pc}
 801424e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8014252:	e7f8      	b.n	8014246 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08014254 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8014254:	b510      	push	{r4, lr}
 8014256:	4b0d      	ldr	r3, [pc, #52]	; (801428c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8014258:	781b      	ldrb	r3, [r3, #0]
 801425a:	4604      	mov	r4, r0
 801425c:	b95b      	cbnz	r3, 8014276 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801425e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8014262:	2b02      	cmp	r3, #2
 8014264:	d007      	beq.n	8014276 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8014266:	6840      	ldr	r0, [r0, #4]
 8014268:	f000 f92c 	bl	80144c4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 801426c:	b118      	cbz	r0, 8014276 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801426e:	6862      	ldr	r2, [r4, #4]
 8014270:	7a53      	ldrb	r3, [r2, #9]
 8014272:	2b00      	cmp	r3, #0
 8014274:	d0fc      	beq.n	8014270 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8014276:	f7ee fe1d 	bl	8002eb4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801427a:	4620      	mov	r0, r4
 801427c:	2100      	movs	r1, #0
 801427e:	f7ff ffd7 	bl	8014230 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8014282:	4620      	mov	r0, r4
 8014284:	f7ff fd8c 	bl	8013da0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8014288:	bd10      	pop	{r4, pc}
 801428a:	bf00      	nop
 801428c:	2001384a 	.word	0x2001384a

08014290 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8014290:	b570      	push	{r4, r5, r6, lr}
 8014292:	4604      	mov	r4, r0
 8014294:	6803      	ldr	r3, [r0, #0]
 8014296:	b919      	cbnz	r1, 80142a0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8014298:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801429a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801429e:	4718      	bx	r3
 80142a0:	2200      	movs	r2, #0
 80142a2:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 80142a6:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 80142aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80142ac:	4798      	blx	r3
 80142ae:	6863      	ldr	r3, [r4, #4]
 80142b0:	2101      	movs	r1, #1
 80142b2:	4605      	mov	r5, r0
 80142b4:	7299      	strb	r1, [r3, #10]
 80142b6:	4620      	mov	r0, r4
 80142b8:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 80142bc:	f7ff ffb8 	bl	8014230 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80142c0:	4628      	mov	r0, r5
 80142c2:	bd70      	pop	{r4, r5, r6, pc}

080142c4 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80142c4:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 80142c8:	1a13      	subs	r3, r2, r0
 80142ca:	4258      	negs	r0, r3
 80142cc:	4158      	adcs	r0, r3
 80142ce:	4770      	bx	lr

080142d0 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 80142d0:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 80142d4:	1a9b      	subs	r3, r3, r2
 80142d6:	2b00      	cmp	r3, #0
 80142d8:	bfdc      	itt	le
 80142da:	6882      	ldrle	r2, [r0, #8]
 80142dc:	189b      	addle	r3, r3, r2
 80142de:	2b01      	cmp	r3, #1
 80142e0:	bfcc      	ite	gt
 80142e2:	2000      	movgt	r0, #0
 80142e4:	2001      	movle	r0, #1
 80142e6:	4770      	bx	lr

080142e8 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80142e8:	6902      	ldr	r2, [r0, #16]
 80142ea:	6843      	ldr	r3, [r0, #4]
 80142ec:	2024      	movs	r0, #36	; 0x24
 80142ee:	fb00 3002 	mla	r0, r0, r2, r3
 80142f2:	4770      	bx	lr

080142f4 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 80142f4:	6803      	ldr	r3, [r0, #0]
 80142f6:	691b      	ldr	r3, [r3, #16]
 80142f8:	4718      	bx	r3

080142fa <_ZN8touchgfx13DMA_Interface7executeEv>:
 80142fa:	b570      	push	{r4, r5, r6, lr}
 80142fc:	2301      	movs	r3, #1
 80142fe:	7203      	strb	r3, [r0, #8]
 8014300:	4604      	mov	r4, r0
 8014302:	6840      	ldr	r0, [r0, #4]
 8014304:	6803      	ldr	r3, [r0, #0]
 8014306:	699b      	ldr	r3, [r3, #24]
 8014308:	4798      	blx	r3
 801430a:	6803      	ldr	r3, [r0, #0]
 801430c:	2b40      	cmp	r3, #64	; 0x40
 801430e:	4605      	mov	r5, r0
 8014310:	d00c      	beq.n	801432c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8014312:	d810      	bhi.n	8014336 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8014314:	2b04      	cmp	r3, #4
 8014316:	d01d      	beq.n	8014354 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8014318:	d804      	bhi.n	8014324 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 801431a:	2b01      	cmp	r3, #1
 801431c:	d006      	beq.n	801432c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801431e:	2b02      	cmp	r3, #2
 8014320:	d02c      	beq.n	801437c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8014322:	bd70      	pop	{r4, r5, r6, pc}
 8014324:	2b08      	cmp	r3, #8
 8014326:	d01d      	beq.n	8014364 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8014328:	2b20      	cmp	r3, #32
 801432a:	d1fa      	bne.n	8014322 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 801432c:	6823      	ldr	r3, [r4, #0]
 801432e:	4620      	mov	r0, r4
 8014330:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014332:	4798      	blx	r3
 8014334:	e013      	b.n	801435e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8014336:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801433a:	d0f7      	beq.n	801432c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801433c:	d804      	bhi.n	8014348 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 801433e:	2b80      	cmp	r3, #128	; 0x80
 8014340:	d0f4      	beq.n	801432c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8014342:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8014346:	e7f0      	b.n	801432a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8014348:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801434c:	d0ee      	beq.n	801432c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801434e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8014352:	e7e5      	b.n	8014320 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8014354:	6823      	ldr	r3, [r4, #0]
 8014356:	7f01      	ldrb	r1, [r0, #28]
 8014358:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801435a:	4620      	mov	r0, r4
 801435c:	4798      	blx	r3
 801435e:	6823      	ldr	r3, [r4, #0]
 8014360:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014362:	e006      	b.n	8014372 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8014364:	6823      	ldr	r3, [r4, #0]
 8014366:	7f01      	ldrb	r1, [r0, #28]
 8014368:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801436a:	4620      	mov	r0, r4
 801436c:	4798      	blx	r3
 801436e:	6823      	ldr	r3, [r4, #0]
 8014370:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8014372:	4629      	mov	r1, r5
 8014374:	4620      	mov	r0, r4
 8014376:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801437a:	4718      	bx	r3
 801437c:	6823      	ldr	r3, [r4, #0]
 801437e:	4620      	mov	r0, r4
 8014380:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014382:	4798      	blx	r3
 8014384:	e7f3      	b.n	801436e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08014386 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8014386:	4770      	bx	lr

08014388 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8014388:	4770      	bx	lr

0801438a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 801438a:	4770      	bx	lr

0801438c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 801438c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8014390:	1ad2      	subs	r2, r2, r3
 8014392:	2a00      	cmp	r2, #0
 8014394:	b510      	push	{r4, lr}
 8014396:	bfdc      	itt	le
 8014398:	6884      	ldrle	r4, [r0, #8]
 801439a:	1912      	addle	r2, r2, r4
 801439c:	2a01      	cmp	r2, #1
 801439e:	dd16      	ble.n	80143ce <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 80143a0:	6842      	ldr	r2, [r0, #4]
 80143a2:	2424      	movs	r4, #36	; 0x24
 80143a4:	fb04 2303 	mla	r3, r4, r3, r2
 80143a8:	f101 0220 	add.w	r2, r1, #32
 80143ac:	f851 4b04 	ldr.w	r4, [r1], #4
 80143b0:	f843 4b04 	str.w	r4, [r3], #4
 80143b4:	4291      	cmp	r1, r2
 80143b6:	d1f9      	bne.n	80143ac <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 80143b8:	780a      	ldrb	r2, [r1, #0]
 80143ba:	701a      	strb	r2, [r3, #0]
 80143bc:	68c3      	ldr	r3, [r0, #12]
 80143be:	6882      	ldr	r2, [r0, #8]
 80143c0:	f3bf 8f5b 	dmb	ish
 80143c4:	3301      	adds	r3, #1
 80143c6:	429a      	cmp	r2, r3
 80143c8:	bfd8      	it	le
 80143ca:	1a9b      	suble	r3, r3, r2
 80143cc:	60c3      	str	r3, [r0, #12]
 80143ce:	bd10      	pop	{r4, pc}

080143d0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 80143d0:	6903      	ldr	r3, [r0, #16]
 80143d2:	6882      	ldr	r2, [r0, #8]
 80143d4:	f3bf 8f5b 	dmb	ish
 80143d8:	3301      	adds	r3, #1
 80143da:	429a      	cmp	r2, r3
 80143dc:	bfd8      	it	le
 80143de:	1a9b      	suble	r3, r3, r2
 80143e0:	6103      	str	r3, [r0, #16]
 80143e2:	4770      	bx	lr

080143e4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 80143e4:	b570      	push	{r4, r5, r6, lr}
 80143e6:	4604      	mov	r4, r0
 80143e8:	460e      	mov	r6, r1
 80143ea:	6860      	ldr	r0, [r4, #4]
 80143ec:	6803      	ldr	r3, [r0, #0]
 80143ee:	685b      	ldr	r3, [r3, #4]
 80143f0:	4798      	blx	r3
 80143f2:	2800      	cmp	r0, #0
 80143f4:	d1f9      	bne.n	80143ea <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 80143f6:	4d0d      	ldr	r5, [pc, #52]	; (801442c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 80143f8:	6828      	ldr	r0, [r5, #0]
 80143fa:	6803      	ldr	r3, [r0, #0]
 80143fc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80143fe:	4798      	blx	r3
 8014400:	f7ee fd66 	bl	8002ed0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8014404:	6828      	ldr	r0, [r5, #0]
 8014406:	2101      	movs	r1, #1
 8014408:	f7ff ff12 	bl	8014230 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801440c:	6860      	ldr	r0, [r4, #4]
 801440e:	6803      	ldr	r3, [r0, #0]
 8014410:	4631      	mov	r1, r6
 8014412:	689b      	ldr	r3, [r3, #8]
 8014414:	4798      	blx	r3
 8014416:	6823      	ldr	r3, [r4, #0]
 8014418:	4620      	mov	r0, r4
 801441a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801441c:	4798      	blx	r3
 801441e:	6828      	ldr	r0, [r5, #0]
 8014420:	6803      	ldr	r3, [r0, #0]
 8014422:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014426:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8014428:	4718      	bx	r3
 801442a:	bf00      	nop
 801442c:	2001384c 	.word	0x2001384c

08014430 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8014430:	b508      	push	{r3, lr}
 8014432:	f7ee fd3f 	bl	8002eb4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8014436:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801443a:	f7ee bd43 	b.w	8002ec4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801443e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 801443e:	b510      	push	{r4, lr}
 8014440:	2114      	movs	r1, #20
 8014442:	4604      	mov	r4, r0
 8014444:	f018 fc71 	bl	802cd2a <_ZdlPvj>
 8014448:	4620      	mov	r0, r4
 801444a:	bd10      	pop	{r4, pc}

0801444c <_ZN8touchgfx13DMA_Interface5startEv>:
 801444c:	b510      	push	{r4, lr}
 801444e:	4604      	mov	r4, r0
 8014450:	6840      	ldr	r0, [r0, #4]
 8014452:	6803      	ldr	r3, [r0, #0]
 8014454:	681b      	ldr	r3, [r3, #0]
 8014456:	4798      	blx	r3
 8014458:	b948      	cbnz	r0, 801446e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801445a:	7a63      	ldrb	r3, [r4, #9]
 801445c:	b13b      	cbz	r3, 801446e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801445e:	7a23      	ldrb	r3, [r4, #8]
 8014460:	b92b      	cbnz	r3, 801446e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8014462:	6823      	ldr	r3, [r4, #0]
 8014464:	4620      	mov	r0, r4
 8014466:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014468:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801446c:	4718      	bx	r3
 801446e:	bd10      	pop	{r4, pc}

08014470 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8014470:	b570      	push	{r4, r5, r6, lr}
 8014472:	4604      	mov	r4, r0
 8014474:	6840      	ldr	r0, [r0, #4]
 8014476:	6803      	ldr	r3, [r0, #0]
 8014478:	681b      	ldr	r3, [r3, #0]
 801447a:	4798      	blx	r3
 801447c:	4605      	mov	r5, r0
 801447e:	b930      	cbnz	r0, 801448e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8014480:	7a23      	ldrb	r3, [r4, #8]
 8014482:	b123      	cbz	r3, 801448e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8014484:	6860      	ldr	r0, [r4, #4]
 8014486:	6803      	ldr	r3, [r0, #0]
 8014488:	695b      	ldr	r3, [r3, #20]
 801448a:	4798      	blx	r3
 801448c:	7225      	strb	r5, [r4, #8]
 801448e:	6860      	ldr	r0, [r4, #4]
 8014490:	6803      	ldr	r3, [r0, #0]
 8014492:	681b      	ldr	r3, [r3, #0]
 8014494:	4798      	blx	r3
 8014496:	b928      	cbnz	r0, 80144a4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8014498:	6823      	ldr	r3, [r4, #0]
 801449a:	4620      	mov	r0, r4
 801449c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801449e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80144a2:	4718      	bx	r3
 80144a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80144a8:	f7ee bd1a 	b.w	8002ee0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

080144ac <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80144ac:	b510      	push	{r4, lr}
 80144ae:	4c04      	ldr	r4, [pc, #16]	; (80144c0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 80144b0:	6082      	str	r2, [r0, #8]
 80144b2:	2200      	movs	r2, #0
 80144b4:	e9c0 4100 	strd	r4, r1, [r0]
 80144b8:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80144bc:	bd10      	pop	{r4, pc}
 80144be:	bf00      	nop
 80144c0:	080318fc 	.word	0x080318fc

080144c4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 80144c4:	6840      	ldr	r0, [r0, #4]
 80144c6:	6803      	ldr	r3, [r0, #0]
 80144c8:	681b      	ldr	r3, [r3, #0]
 80144ca:	4718      	bx	r3

080144cc <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 80144cc:	4b06      	ldr	r3, [pc, #24]	; (80144e8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 80144ce:	60c1      	str	r1, [r0, #12]
 80144d0:	094a      	lsrs	r2, r1, #5
 80144d2:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 80144d6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80144da:	4313      	orrs	r3, r2
 80144dc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80144e0:	4319      	orrs	r1, r3
 80144e2:	8201      	strh	r1, [r0, #16]
 80144e4:	4770      	bx	lr
 80144e6:	bf00      	nop
 80144e8:	fffff800 	.word	0xfffff800

080144ec <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 80144ec:	f1a0 0008 	sub.w	r0, r0, #8
 80144f0:	e7ec      	b.n	80144cc <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 80144f2:	bf00      	nop

080144f4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 80144f4:	b508      	push	{r3, lr}
 80144f6:	4b05      	ldr	r3, [pc, #20]	; (801450c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 80144f8:	6818      	ldr	r0, [r3, #0]
 80144fa:	6803      	ldr	r3, [r0, #0]
 80144fc:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8014500:	4798      	blx	r3
 8014502:	1e43      	subs	r3, r0, #1
 8014504:	4258      	negs	r0, r3
 8014506:	4158      	adcs	r0, r3
 8014508:	bd08      	pop	{r3, pc}
 801450a:	bf00      	nop
 801450c:	2001384c 	.word	0x2001384c

08014510 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8014510:	4770      	bx	lr

08014512 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8014512:	3808      	subs	r0, #8
 8014514:	4770      	bx	lr

08014516 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8014516:	b430      	push	{r4, r5}
 8014518:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 801451c:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8014520:	8a02      	ldrh	r2, [r0, #16]
 8014522:	9202      	str	r2, [sp, #8]
 8014524:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8014528:	68c2      	ldr	r2, [r0, #12]
 801452a:	4629      	mov	r1, r5
 801452c:	4620      	mov	r0, r4
 801452e:	bc30      	pop	{r4, r5}
 8014530:	f7ee bf9a 	b.w	8003468 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08014534 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8014534:	f7ee bf96 	b.w	8003464 <_ZN8touchgfx5paint8tearDownEv>

08014538 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8014538:	b510      	push	{r4, lr}
 801453a:	2114      	movs	r1, #20
 801453c:	4604      	mov	r4, r0
 801453e:	f018 fbf4 	bl	802cd2a <_ZdlPvj>
 8014542:	4620      	mov	r0, r4
 8014544:	bd10      	pop	{r4, pc}

08014546 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8014546:	f1a0 0008 	sub.w	r0, r0, #8
 801454a:	e7f5      	b.n	8014538 <_ZN8touchgfx13PainterRGB565D0Ev>

0801454c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 801454c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801454e:	6803      	ldr	r3, [r0, #0]
 8014550:	460d      	mov	r5, r1
 8014552:	4604      	mov	r4, r0
 8014554:	4601      	mov	r1, r0
 8014556:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8014558:	a802      	add	r0, sp, #8
 801455a:	4798      	blx	r3
 801455c:	6828      	ldr	r0, [r5, #0]
 801455e:	6869      	ldr	r1, [r5, #4]
 8014560:	466b      	mov	r3, sp
 8014562:	c303      	stmia	r3!, {r0, r1}
 8014564:	4668      	mov	r0, sp
 8014566:	4619      	mov	r1, r3
 8014568:	f7fe fb30 	bl	8012bcc <_ZN8touchgfx4RectaNERKS0_>
 801456c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801456e:	b188      	cbz	r0, 8014594 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014570:	6803      	ldr	r3, [r0, #0]
 8014572:	1d21      	adds	r1, r4, #4
 8014574:	68db      	ldr	r3, [r3, #12]
 8014576:	4798      	blx	r3
 8014578:	b160      	cbz	r0, 8014594 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801457a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801457e:	2b00      	cmp	r3, #0
 8014580:	dd08      	ble.n	8014594 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014582:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8014586:	2d00      	cmp	r5, #0
 8014588:	dd04      	ble.n	8014594 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801458a:	4a2b      	ldr	r2, [pc, #172]	; (8014638 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 801458c:	7812      	ldrb	r2, [r2, #0]
 801458e:	b11a      	cbz	r2, 8014598 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8014590:	2a01      	cmp	r2, #1
 8014592:	d029      	beq.n	80145e8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8014594:	b004      	add	sp, #16
 8014596:	bd70      	pop	{r4, r5, r6, pc}
 8014598:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801459c:	441d      	add	r5, r3
 801459e:	b2ad      	uxth	r5, r5
 80145a0:	b22e      	sxth	r6, r5
 80145a2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80145a6:	42b3      	cmp	r3, r6
 80145a8:	daf4      	bge.n	8014594 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80145aa:	6823      	ldr	r3, [r4, #0]
 80145ac:	4669      	mov	r1, sp
 80145ae:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80145b0:	4620      	mov	r0, r4
 80145b2:	4798      	blx	r3
 80145b4:	b940      	cbnz	r0, 80145c8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80145b6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80145ba:	2b01      	cmp	r3, #1
 80145bc:	d004      	beq.n	80145c8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80145be:	3301      	adds	r3, #1
 80145c0:	105b      	asrs	r3, r3, #1
 80145c2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80145c6:	e7f0      	b.n	80145aa <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 80145c8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80145cc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80145d0:	4413      	add	r3, r2
 80145d2:	b29b      	uxth	r3, r3
 80145d4:	441a      	add	r2, r3
 80145d6:	b212      	sxth	r2, r2
 80145d8:	4296      	cmp	r6, r2
 80145da:	f8ad 3002 	strh.w	r3, [sp, #2]
 80145de:	dae0      	bge.n	80145a2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 80145e0:	1aeb      	subs	r3, r5, r3
 80145e2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80145e6:	e7dc      	b.n	80145a2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 80145e8:	f8bd 5000 	ldrh.w	r5, [sp]
 80145ec:	441d      	add	r5, r3
 80145ee:	b2ad      	uxth	r5, r5
 80145f0:	b22e      	sxth	r6, r5
 80145f2:	f9bd 3000 	ldrsh.w	r3, [sp]
 80145f6:	42b3      	cmp	r3, r6
 80145f8:	dacc      	bge.n	8014594 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80145fa:	6823      	ldr	r3, [r4, #0]
 80145fc:	4669      	mov	r1, sp
 80145fe:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8014600:	4620      	mov	r0, r4
 8014602:	4798      	blx	r3
 8014604:	b940      	cbnz	r0, 8014618 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8014606:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801460a:	2b01      	cmp	r3, #1
 801460c:	d004      	beq.n	8014618 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801460e:	3301      	adds	r3, #1
 8014610:	105b      	asrs	r3, r3, #1
 8014612:	f8ad 3004 	strh.w	r3, [sp, #4]
 8014616:	e7f0      	b.n	80145fa <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8014618:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 801461c:	f8bd 3000 	ldrh.w	r3, [sp]
 8014620:	4413      	add	r3, r2
 8014622:	b29b      	uxth	r3, r3
 8014624:	441a      	add	r2, r3
 8014626:	b212      	sxth	r2, r2
 8014628:	4296      	cmp	r6, r2
 801462a:	f8ad 3000 	strh.w	r3, [sp]
 801462e:	dae0      	bge.n	80145f2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8014630:	1aeb      	subs	r3, r5, r3
 8014632:	f8ad 3004 	strh.w	r3, [sp, #4]
 8014636:	e7dc      	b.n	80145f2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8014638:	20013844 	.word	0x20013844

0801463c <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 801463c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801463e:	6803      	ldr	r3, [r0, #0]
 8014640:	4604      	mov	r4, r0
 8014642:	4601      	mov	r1, r0
 8014644:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8014646:	4668      	mov	r0, sp
 8014648:	4798      	blx	r3
 801464a:	2100      	movs	r1, #0
 801464c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8014650:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8014654:	9102      	str	r1, [sp, #8]
 8014656:	4668      	mov	r0, sp
 8014658:	a902      	add	r1, sp, #8
 801465a:	f8ad 200c 	strh.w	r2, [sp, #12]
 801465e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8014662:	f7fe fab3 	bl	8012bcc <_ZN8touchgfx4RectaNERKS0_>
 8014666:	6823      	ldr	r3, [r4, #0]
 8014668:	4669      	mov	r1, sp
 801466a:	691b      	ldr	r3, [r3, #16]
 801466c:	4620      	mov	r0, r4
 801466e:	4798      	blx	r3
 8014670:	b004      	add	sp, #16
 8014672:	bd10      	pop	{r4, pc}

08014674 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8014674:	2101      	movs	r1, #1
 8014676:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801467a:	490b      	ldr	r1, [pc, #44]	; (80146a8 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 801467c:	6001      	str	r1, [r0, #0]
 801467e:	2200      	movs	r2, #0
 8014680:	21ff      	movs	r1, #255	; 0xff
 8014682:	8082      	strh	r2, [r0, #4]
 8014684:	80c2      	strh	r2, [r0, #6]
 8014686:	8102      	strh	r2, [r0, #8]
 8014688:	8142      	strh	r2, [r0, #10]
 801468a:	8182      	strh	r2, [r0, #12]
 801468c:	81c2      	strh	r2, [r0, #14]
 801468e:	8202      	strh	r2, [r0, #16]
 8014690:	8242      	strh	r2, [r0, #18]
 8014692:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8014696:	61c2      	str	r2, [r0, #28]
 8014698:	8402      	strh	r2, [r0, #32]
 801469a:	8442      	strh	r2, [r0, #34]	; 0x22
 801469c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80146a0:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 80146a4:	6282      	str	r2, [r0, #40]	; 0x28
 80146a6:	4770      	bx	lr
 80146a8:	08031958 	.word	0x08031958

080146ac <_ZNK8touchgfx4Line14getMinimalRectEv>:
 80146ac:	f101 0364 	add.w	r3, r1, #100	; 0x64
 80146b0:	4602      	mov	r2, r0
 80146b2:	cb03      	ldmia	r3!, {r0, r1}
 80146b4:	6010      	str	r0, [r2, #0]
 80146b6:	6051      	str	r1, [r2, #4]
 80146b8:	4610      	mov	r0, r2
 80146ba:	4770      	bx	lr

080146bc <_ZN8touchgfx4LineD1Ev>:
 80146bc:	4770      	bx	lr

080146be <_ZN8touchgfx4LineD0Ev>:
 80146be:	b510      	push	{r4, lr}
 80146c0:	2170      	movs	r1, #112	; 0x70
 80146c2:	4604      	mov	r4, r0
 80146c4:	f018 fb31 	bl	802cd2a <_ZdlPvj>
 80146c8:	4620      	mov	r0, r4
 80146ca:	bd10      	pop	{r4, pc}

080146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 80146cc:	b507      	push	{r0, r1, r2, lr}
 80146ce:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 80146d2:	ab01      	add	r3, sp, #4
 80146d4:	6809      	ldr	r1, [r1, #0]
 80146d6:	6800      	ldr	r0, [r0, #0]
 80146d8:	f005 fc80 	bl	8019fdc <_ZN8touchgfx6muldivElllRl>
 80146dc:	b003      	add	sp, #12
 80146de:	f85d fb04 	ldr.w	pc, [sp], #4

080146e2 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 80146e2:	6800      	ldr	r0, [r0, #0]
 80146e4:	2800      	cmp	r0, #0
 80146e6:	bfb9      	ittee	lt
 80146e8:	2320      	movlt	r3, #32
 80146ea:	fb90 f0f3 	sdivlt	r0, r0, r3
 80146ee:	301f      	addge	r0, #31
 80146f0:	1140      	asrge	r0, r0, #5
 80146f2:	4770      	bx	lr

080146f4 <_ZNK8touchgfx4Line17invalidateContentEv>:
 80146f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80146f8:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 80146fc:	b089      	sub	sp, #36	; 0x24
 80146fe:	4604      	mov	r4, r0
 8014700:	b353      	cbz	r3, 8014758 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8014702:	6803      	ldr	r3, [r0, #0]
 8014704:	4601      	mov	r1, r0
 8014706:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8014708:	a802      	add	r0, sp, #8
 801470a:	4798      	blx	r3
 801470c:	2220      	movs	r2, #32
 801470e:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8014712:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8014714:	fb9a f0f2 	sdiv	r0, sl, r2
 8014718:	fb91 f5f2 	sdiv	r5, r1, r2
 801471c:	1b40      	subs	r0, r0, r5
 801471e:	2800      	cmp	r0, #0
 8014720:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8014722:	fb93 f6f2 	sdiv	r6, r3, r2
 8014726:	bfb8      	it	lt
 8014728:	4240      	neglt	r0, r0
 801472a:	0076      	lsls	r6, r6, #1
 801472c:	4286      	cmp	r6, r0
 801472e:	f8d4 b000 	ldr.w	fp, [r4]
 8014732:	dc0c      	bgt.n	801474e <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8014734:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8014736:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 801473a:	fb95 f0f2 	sdiv	r0, r5, r2
 801473e:	fb98 f7f2 	sdiv	r7, r8, r2
 8014742:	1bc0      	subs	r0, r0, r7
 8014744:	2800      	cmp	r0, #0
 8014746:	bfb8      	it	lt
 8014748:	4240      	neglt	r0, r0
 801474a:	4286      	cmp	r6, r0
 801474c:	dd07      	ble.n	801475e <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 801474e:	f8db 3010 	ldr.w	r3, [fp, #16]
 8014752:	a902      	add	r1, sp, #8
 8014754:	4620      	mov	r0, r4
 8014756:	4798      	blx	r3
 8014758:	b009      	add	sp, #36	; 0x24
 801475a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801475e:	3301      	adds	r3, #1
 8014760:	2002      	movs	r0, #2
 8014762:	f10d 0920 	add.w	r9, sp, #32
 8014766:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801476a:	4103      	asrs	r3, r0
 801476c:	f849 3d08 	str.w	r3, [r9, #-8]!
 8014770:	eb01 060a 	add.w	r6, r1, sl
 8014774:	eb08 0705 	add.w	r7, r8, r5
 8014778:	fb96 f6f0 	sdiv	r6, r6, r0
 801477c:	fb97 f7f0 	sdiv	r7, r7, r0
 8014780:	4648      	mov	r0, r9
 8014782:	9101      	str	r1, [sp, #4]
 8014784:	b236      	sxth	r6, r6
 8014786:	b23f      	sxth	r7, r7
 8014788:	fb96 f6f2 	sdiv	r6, r6, r2
 801478c:	fb97 f7f2 	sdiv	r7, r7, r2
 8014790:	f7ff ffa7 	bl	80146e2 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8014794:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8014798:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 801479c:	9901      	ldr	r1, [sp, #4]
 801479e:	4293      	cmp	r3, r2
 80147a0:	fa1f fe87 	uxth.w	lr, r7
 80147a4:	fa1f fc86 	uxth.w	ip, r6
 80147a8:	eba1 0a0a 	sub.w	sl, r1, sl
 80147ac:	b280      	uxth	r0, r0
 80147ae:	da54      	bge.n	801485a <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 80147b0:	ebac 0100 	sub.w	r1, ip, r0
 80147b4:	b289      	uxth	r1, r1
 80147b6:	4460      	add	r0, ip
 80147b8:	f1ba 0f00 	cmp.w	sl, #0
 80147bc:	b20e      	sxth	r6, r1
 80147be:	b280      	uxth	r0, r0
 80147c0:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 80147c4:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 80147c8:	da29      	bge.n	801481e <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 80147ca:	eba8 0505 	sub.w	r5, r8, r5
 80147ce:	2d00      	cmp	r5, #0
 80147d0:	da2a      	bge.n	8014828 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 80147d2:	fa1f f88a 	uxth.w	r8, sl
 80147d6:	eba0 0008 	sub.w	r0, r0, r8
 80147da:	fa1f f58c 	uxth.w	r5, ip
 80147de:	4443      	add	r3, r8
 80147e0:	f8ad 0014 	strh.w	r0, [sp, #20]
 80147e4:	1a59      	subs	r1, r3, r1
 80147e6:	ebae 0005 	sub.w	r0, lr, r5
 80147ea:	f8ad a010 	strh.w	sl, [sp, #16]
 80147ee:	f8ad c012 	strh.w	ip, [sp, #18]
 80147f2:	f8ad 0016 	strh.w	r0, [sp, #22]
 80147f6:	f8ad 6018 	strh.w	r6, [sp, #24]
 80147fa:	f8ad 701a 	strh.w	r7, [sp, #26]
 80147fe:	f8ad 101c 	strh.w	r1, [sp, #28]
 8014802:	442a      	add	r2, r5
 8014804:	eba2 0e0e 	sub.w	lr, r2, lr
 8014808:	f8ad e01e 	strh.w	lr, [sp, #30]
 801480c:	f8db 3010 	ldr.w	r3, [fp, #16]
 8014810:	a904      	add	r1, sp, #16
 8014812:	4620      	mov	r0, r4
 8014814:	4798      	blx	r3
 8014816:	6823      	ldr	r3, [r4, #0]
 8014818:	4649      	mov	r1, r9
 801481a:	691b      	ldr	r3, [r3, #16]
 801481c:	e79a      	b.n	8014754 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 801481e:	d003      	beq.n	8014828 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8014820:	eba8 0505 	sub.w	r5, r8, r5
 8014824:	2d00      	cmp	r5, #0
 8014826:	dcd4      	bgt.n	80147d2 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8014828:	fa1f f88a 	uxth.w	r8, sl
 801482c:	4443      	add	r3, r8
 801482e:	fa1f f58c 	uxth.w	r5, ip
 8014832:	1a59      	subs	r1, r3, r1
 8014834:	eba0 0008 	sub.w	r0, r0, r8
 8014838:	ebae 0305 	sub.w	r3, lr, r5
 801483c:	f8ad 6010 	strh.w	r6, [sp, #16]
 8014840:	f8ad c012 	strh.w	ip, [sp, #18]
 8014844:	f8ad 1014 	strh.w	r1, [sp, #20]
 8014848:	f8ad 3016 	strh.w	r3, [sp, #22]
 801484c:	f8ad a018 	strh.w	sl, [sp, #24]
 8014850:	f8ad 701a 	strh.w	r7, [sp, #26]
 8014854:	f8ad 001c 	strh.w	r0, [sp, #28]
 8014858:	e7d3      	b.n	8014802 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 801485a:	ebae 0100 	sub.w	r1, lr, r0
 801485e:	b289      	uxth	r1, r1
 8014860:	4470      	add	r0, lr
 8014862:	f1ba 0f00 	cmp.w	sl, #0
 8014866:	b20f      	sxth	r7, r1
 8014868:	b280      	uxth	r0, r0
 801486a:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 801486e:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8014872:	da20      	bge.n	80148b6 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8014874:	eba8 0505 	sub.w	r5, r8, r5
 8014878:	2d00      	cmp	r5, #0
 801487a:	da21      	bge.n	80148c0 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 801487c:	fa1f f88e 	uxth.w	r8, lr
 8014880:	fa1f f58a 	uxth.w	r5, sl
 8014884:	4443      	add	r3, r8
 8014886:	442a      	add	r2, r5
 8014888:	f8ad e010 	strh.w	lr, [sp, #16]
 801488c:	1b40      	subs	r0, r0, r5
 801488e:	ebac 0e08 	sub.w	lr, ip, r8
 8014892:	1a51      	subs	r1, r2, r1
 8014894:	eba3 0c0c 	sub.w	ip, r3, ip
 8014898:	f8ad a012 	strh.w	sl, [sp, #18]
 801489c:	f8ad e014 	strh.w	lr, [sp, #20]
 80148a0:	f8ad 0016 	strh.w	r0, [sp, #22]
 80148a4:	f8ad 6018 	strh.w	r6, [sp, #24]
 80148a8:	f8ad 701a 	strh.w	r7, [sp, #26]
 80148ac:	f8ad c01c 	strh.w	ip, [sp, #28]
 80148b0:	f8ad 101e 	strh.w	r1, [sp, #30]
 80148b4:	e7aa      	b.n	801480c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 80148b6:	d003      	beq.n	80148c0 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 80148b8:	eba8 0505 	sub.w	r5, r8, r5
 80148bc:	2d00      	cmp	r5, #0
 80148be:	dcdd      	bgt.n	801487c <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 80148c0:	fa1f f58e 	uxth.w	r5, lr
 80148c4:	fa1f f88a 	uxth.w	r8, sl
 80148c8:	4442      	add	r2, r8
 80148ca:	442b      	add	r3, r5
 80148cc:	f8ad 7012 	strh.w	r7, [sp, #18]
 80148d0:	1a51      	subs	r1, r2, r1
 80148d2:	ebac 0705 	sub.w	r7, ip, r5
 80148d6:	eba0 0008 	sub.w	r0, r0, r8
 80148da:	eba3 0c0c 	sub.w	ip, r3, ip
 80148de:	f8ad e010 	strh.w	lr, [sp, #16]
 80148e2:	f8ad 7014 	strh.w	r7, [sp, #20]
 80148e6:	f8ad 1016 	strh.w	r1, [sp, #22]
 80148ea:	f8ad 6018 	strh.w	r6, [sp, #24]
 80148ee:	f8ad a01a 	strh.w	sl, [sp, #26]
 80148f2:	f8ad c01c 	strh.w	ip, [sp, #28]
 80148f6:	f8ad 001e 	strh.w	r0, [sp, #30]
 80148fa:	e787      	b.n	801480c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

080148fc <_ZN8touchgfx7CWRUtil4sineEi>:
 80148fc:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8014900:	fb90 f2f3 	sdiv	r2, r0, r3
 8014904:	fb02 0013 	mls	r0, r2, r3, r0
 8014908:	2800      	cmp	r0, #0
 801490a:	bfb8      	it	lt
 801490c:	18c0      	addlt	r0, r0, r3
 801490e:	285a      	cmp	r0, #90	; 0x5a
 8014910:	4b09      	ldr	r3, [pc, #36]	; (8014938 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8014912:	dc02      	bgt.n	801491a <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8014914:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8014918:	4770      	bx	lr
 801491a:	28b4      	cmp	r0, #180	; 0xb4
 801491c:	dc02      	bgt.n	8014924 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 801491e:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8014922:	e7f7      	b.n	8014914 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8014924:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8014928:	bfd4      	ite	le
 801492a:	38b4      	suble	r0, #180	; 0xb4
 801492c:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8014930:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8014934:	4240      	negs	r0, r0
 8014936:	4770      	bx	lr
 8014938:	08031a24 	.word	0x08031a24

0801493c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 801493c:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8014940:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014942:	fb90 f2f3 	sdiv	r2, r0, r3
 8014946:	fb02 0013 	mls	r0, r2, r3, r0
 801494a:	2800      	cmp	r0, #0
 801494c:	bfb8      	it	lt
 801494e:	18c0      	addlt	r0, r0, r3
 8014950:	1144      	asrs	r4, r0, #5
 8014952:	f000 061f 	and.w	r6, r0, #31
 8014956:	4620      	mov	r0, r4
 8014958:	f7ff ffd0 	bl	80148fc <_ZN8touchgfx7CWRUtil4sineEi>
 801495c:	4605      	mov	r5, r0
 801495e:	b90e      	cbnz	r6, 8014964 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8014960:	b002      	add	sp, #8
 8014962:	bd70      	pop	{r4, r5, r6, pc}
 8014964:	1c60      	adds	r0, r4, #1
 8014966:	f7ff ffc9 	bl	80148fc <_ZN8touchgfx7CWRUtil4sineEi>
 801496a:	ab01      	add	r3, sp, #4
 801496c:	2220      	movs	r2, #32
 801496e:	4631      	mov	r1, r6
 8014970:	1b40      	subs	r0, r0, r5
 8014972:	f005 fb33 	bl	8019fdc <_ZN8touchgfx6muldivElllRl>
 8014976:	4428      	add	r0, r5
 8014978:	e7f2      	b.n	8014960 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

0801497a <_ZN8touchgfx7CWRUtil5isqrtEm>:
 801497a:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 801497e:	bf2c      	ite	cs
 8014980:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8014984:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8014988:	2300      	movs	r3, #0
 801498a:	1899      	adds	r1, r3, r2
 801498c:	4288      	cmp	r0, r1
 801498e:	bf24      	itt	cs
 8014990:	1853      	addcs	r3, r2, r1
 8014992:	1a40      	subcs	r0, r0, r1
 8014994:	0892      	lsrs	r2, r2, #2
 8014996:	ea4f 0353 	mov.w	r3, r3, lsr #1
 801499a:	d1f6      	bne.n	801498a <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 801499c:	4618      	mov	r0, r3
 801499e:	4770      	bx	lr

080149a0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 80149a0:	b510      	push	{r4, lr}
 80149a2:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 80149a6:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 80149aa:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 80149ae:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 80149b2:	13a4      	asrs	r4, r4, #14
 80149b4:	139b      	asrs	r3, r3, #14
 80149b6:	429c      	cmp	r4, r3
 80149b8:	bfb8      	it	lt
 80149ba:	461c      	movlt	r4, r3
 80149bc:	2c01      	cmp	r4, #1
 80149be:	dd07      	ble.n	80149d0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 80149c0:	fb91 f1f4 	sdiv	r1, r1, r4
 80149c4:	fb90 f0f4 	sdiv	r0, r0, r4
 80149c8:	f7ff ffea 	bl	80149a0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80149cc:	4360      	muls	r0, r4
 80149ce:	bd10      	pop	{r4, pc}
 80149d0:	4340      	muls	r0, r0
 80149d2:	fb01 0001 	mla	r0, r1, r1, r0
 80149d6:	f7ff ffd0 	bl	801497a <_ZN8touchgfx7CWRUtil5isqrtEm>
 80149da:	e7f8      	b.n	80149ce <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

080149dc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 80149dc:	2800      	cmp	r0, #0
 80149de:	b508      	push	{r3, lr}
 80149e0:	da05      	bge.n	80149ee <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 80149e2:	4240      	negs	r0, r0
 80149e4:	f7ff fffa 	bl	80149dc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80149e8:	4240      	negs	r0, r0
 80149ea:	b240      	sxtb	r0, r0
 80149ec:	bd08      	pop	{r3, pc}
 80149ee:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 80149f2:	dc11      	bgt.n	8014a18 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 80149f4:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 80149f8:	dd09      	ble.n	8014a0e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 80149fa:	4340      	muls	r0, r0
 80149fc:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8014a00:	f7ff ffbb 	bl	801497a <_ZN8touchgfx7CWRUtil5isqrtEm>
 8014a04:	f7ff ffea 	bl	80149dc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8014a08:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8014a0c:	e7ed      	b.n	80149ea <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8014a0e:	3003      	adds	r0, #3
 8014a10:	10c0      	asrs	r0, r0, #3
 8014a12:	4b02      	ldr	r3, [pc, #8]	; (8014a1c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8014a14:	5618      	ldrsb	r0, [r3, r0]
 8014a16:	e7e9      	b.n	80149ec <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8014a18:	2000      	movs	r0, #0
 8014a1a:	e7e7      	b.n	80149ec <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8014a1c:	080319c8 	.word	0x080319c8

08014a20 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8014a20:	4281      	cmp	r1, r0
 8014a22:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014a24:	460c      	mov	r4, r1
 8014a26:	4615      	mov	r5, r2
 8014a28:	dd07      	ble.n	8014a3a <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8014a2a:	4601      	mov	r1, r0
 8014a2c:	4620      	mov	r0, r4
 8014a2e:	f7ff fff7 	bl	8014a20 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014a32:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8014a36:	b003      	add	sp, #12
 8014a38:	bd30      	pop	{r4, r5, pc}
 8014a3a:	f7ff ffb1 	bl	80149a0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8014a3e:	6028      	str	r0, [r5, #0]
 8014a40:	2800      	cmp	r0, #0
 8014a42:	d0f8      	beq.n	8014a36 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8014a44:	4602      	mov	r2, r0
 8014a46:	ab01      	add	r3, sp, #4
 8014a48:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8014a4c:	4620      	mov	r0, r4
 8014a4e:	f005 fac5 	bl	8019fdc <_ZN8touchgfx6muldivElllRl>
 8014a52:	f7ff ffc3 	bl	80149dc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8014a56:	e7ee      	b.n	8014a36 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08014a58 <_ZN8touchgfx4LineC1Ev>:
 8014a58:	b510      	push	{r4, lr}
 8014a5a:	4604      	mov	r4, r0
 8014a5c:	f7ff fe0a 	bl	8014674 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8014a60:	4b0c      	ldr	r3, [pc, #48]	; (8014a94 <_ZN8touchgfx4LineC1Ev+0x3c>)
 8014a62:	6023      	str	r3, [r4, #0]
 8014a64:	2220      	movs	r2, #32
 8014a66:	2300      	movs	r3, #0
 8014a68:	63e2      	str	r2, [r4, #60]	; 0x3c
 8014a6a:	2212      	movs	r2, #18
 8014a6c:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8014a70:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8014a74:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8014a78:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8014a7c:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8014a80:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8014a84:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8014a88:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8014a8c:	66e2      	str	r2, [r4, #108]	; 0x6c
 8014a8e:	60a3      	str	r3, [r4, #8]
 8014a90:	4620      	mov	r0, r4
 8014a92:	bd10      	pop	{r4, pc}
 8014a94:	08031ae4 	.word	0x08031ae4

08014a98 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8014a98:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8014a9c:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8014a9e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014aa0:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8014aa2:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8014aa4:	1aff      	subs	r7, r7, r3
 8014aa6:	4604      	mov	r4, r0
 8014aa8:	eba5 0502 	sub.w	r5, r5, r2
 8014aac:	d142      	bne.n	8014b34 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8014aae:	b955      	cbnz	r5, 8014ac6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8014ab0:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8014ab4:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8014ab8:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8014abc:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8014ac0:	b002      	add	sp, #8
 8014ac2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014ac6:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8014aca:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8014ace:	4629      	mov	r1, r5
 8014ad0:	4642      	mov	r2, r8
 8014ad2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8014ad4:	f005 faa1 	bl	801a01a <_ZN8touchgfx6muldivElll>
 8014ad8:	2502      	movs	r5, #2
 8014ada:	4642      	mov	r2, r8
 8014adc:	fb90 f6f5 	sdiv	r6, r0, r5
 8014ae0:	4639      	mov	r1, r7
 8014ae2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8014ae4:	f005 fa99 	bl	801a01a <_ZN8touchgfx6muldivElll>
 8014ae8:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8014aec:	fb90 f5f5 	sdiv	r5, r0, r5
 8014af0:	f1b9 0f00 	cmp.w	r9, #0
 8014af4:	d067      	beq.n	8014bc6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8014af6:	f1b9 0f02 	cmp.w	r9, #2
 8014afa:	d878      	bhi.n	8014bee <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8014afc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014afe:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8014b00:	1b93      	subs	r3, r2, r6
 8014b02:	1b5b      	subs	r3, r3, r5
 8014b04:	6463      	str	r3, [r4, #68]	; 0x44
 8014b06:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014b08:	18e9      	adds	r1, r5, r3
 8014b0a:	1b89      	subs	r1, r1, r6
 8014b0c:	6561      	str	r1, [r4, #84]	; 0x54
 8014b0e:	1b81      	subs	r1, r0, r6
 8014b10:	4429      	add	r1, r5
 8014b12:	64a1      	str	r1, [r4, #72]	; 0x48
 8014b14:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8014b16:	4430      	add	r0, r6
 8014b18:	186f      	adds	r7, r5, r1
 8014b1a:	4432      	add	r2, r6
 8014b1c:	1b49      	subs	r1, r1, r5
 8014b1e:	4437      	add	r7, r6
 8014b20:	4428      	add	r0, r5
 8014b22:	4431      	add	r1, r6
 8014b24:	1b52      	subs	r2, r2, r5
 8014b26:	1b5b      	subs	r3, r3, r5
 8014b28:	65a7      	str	r7, [r4, #88]	; 0x58
 8014b2a:	64e0      	str	r0, [r4, #76]	; 0x4c
 8014b2c:	65e1      	str	r1, [r4, #92]	; 0x5c
 8014b2e:	6522      	str	r2, [r4, #80]	; 0x50
 8014b30:	1b9b      	subs	r3, r3, r6
 8014b32:	e05b      	b.n	8014bec <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8014b34:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8014b38:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8014b3c:	2d00      	cmp	r5, #0
 8014b3e:	d0c6      	beq.n	8014ace <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8014b40:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8014b44:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8014b48:	fb93 f2f8 	sdiv	r2, r3, r8
 8014b4c:	fb08 3312 	mls	r3, r8, r2, r3
 8014b50:	b353      	cbz	r3, 8014ba8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8014b52:	fb98 f2f3 	sdiv	r2, r8, r3
 8014b56:	fb03 8812 	mls	r8, r3, r2, r8
 8014b5a:	f1b8 0f00 	cmp.w	r8, #0
 8014b5e:	d1f3      	bne.n	8014b48 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8014b60:	2b01      	cmp	r3, #1
 8014b62:	bf1c      	itt	ne
 8014b64:	fb95 f5f3 	sdivne	r5, r5, r3
 8014b68:	fb97 f7f3 	sdivne	r7, r7, r3
 8014b6c:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8014b70:	f24b 5104 	movw	r1, #46340	; 0xb504
 8014b74:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8014b78:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8014b7c:	428b      	cmp	r3, r1
 8014b7e:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8014b82:	4608      	mov	r0, r1
 8014b84:	dd01      	ble.n	8014b8a <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8014b86:	428a      	cmp	r2, r1
 8014b88:	dc10      	bgt.n	8014bac <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8014b8a:	fb90 f3f3 	sdiv	r3, r0, r3
 8014b8e:	fb90 f2f2 	sdiv	r2, r0, r2
 8014b92:	4293      	cmp	r3, r2
 8014b94:	bfa8      	it	ge
 8014b96:	4613      	movge	r3, r2
 8014b98:	435f      	muls	r7, r3
 8014b9a:	435d      	muls	r5, r3
 8014b9c:	4629      	mov	r1, r5
 8014b9e:	4638      	mov	r0, r7
 8014ba0:	f7ff fefe 	bl	80149a0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8014ba4:	4680      	mov	r8, r0
 8014ba6:	e792      	b.n	8014ace <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8014ba8:	4643      	mov	r3, r8
 8014baa:	e7d9      	b.n	8014b60 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8014bac:	fb93 f3f1 	sdiv	r3, r3, r1
 8014bb0:	fb92 f2f1 	sdiv	r2, r2, r1
 8014bb4:	4293      	cmp	r3, r2
 8014bb6:	bfcc      	ite	gt
 8014bb8:	3301      	addgt	r3, #1
 8014bba:	1c53      	addle	r3, r2, #1
 8014bbc:	fb97 f7f3 	sdiv	r7, r7, r3
 8014bc0:	fb95 f5f3 	sdiv	r5, r5, r3
 8014bc4:	e7ea      	b.n	8014b9c <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8014bc6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014bc8:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8014bca:	1b93      	subs	r3, r2, r6
 8014bcc:	6463      	str	r3, [r4, #68]	; 0x44
 8014bce:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014bd0:	18e9      	adds	r1, r5, r3
 8014bd2:	6561      	str	r1, [r4, #84]	; 0x54
 8014bd4:	1b81      	subs	r1, r0, r6
 8014bd6:	64a1      	str	r1, [r4, #72]	; 0x48
 8014bd8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8014bda:	4430      	add	r0, r6
 8014bdc:	186f      	adds	r7, r5, r1
 8014bde:	4432      	add	r2, r6
 8014be0:	1b49      	subs	r1, r1, r5
 8014be2:	65a7      	str	r7, [r4, #88]	; 0x58
 8014be4:	64e0      	str	r0, [r4, #76]	; 0x4c
 8014be6:	65e1      	str	r1, [r4, #92]	; 0x5c
 8014be8:	6522      	str	r2, [r4, #80]	; 0x50
 8014bea:	1b5b      	subs	r3, r3, r5
 8014bec:	6623      	str	r3, [r4, #96]	; 0x60
 8014bee:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8014bf0:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8014bf2:	9200      	str	r2, [sp, #0]
 8014bf4:	9301      	str	r3, [sp, #4]
 8014bf6:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8014bfa:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8014bfe:	680f      	ldr	r7, [r1, #0]
 8014c00:	9800      	ldr	r0, [sp, #0]
 8014c02:	42ba      	cmp	r2, r7
 8014c04:	bfa8      	it	ge
 8014c06:	463a      	movge	r2, r7
 8014c08:	4287      	cmp	r7, r0
 8014c0a:	bfc8      	it	gt
 8014c0c:	9700      	strgt	r7, [sp, #0]
 8014c0e:	690f      	ldr	r7, [r1, #16]
 8014c10:	9801      	ldr	r0, [sp, #4]
 8014c12:	42bb      	cmp	r3, r7
 8014c14:	bfa8      	it	ge
 8014c16:	463b      	movge	r3, r7
 8014c18:	3104      	adds	r1, #4
 8014c1a:	4287      	cmp	r7, r0
 8014c1c:	bfc8      	it	gt
 8014c1e:	9701      	strgt	r7, [sp, #4]
 8014c20:	458c      	cmp	ip, r1
 8014c22:	d1ec      	bne.n	8014bfe <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8014c24:	4668      	mov	r0, sp
 8014c26:	2720      	movs	r7, #32
 8014c28:	fb92 f8f7 	sdiv	r8, r2, r7
 8014c2c:	fb93 f7f7 	sdiv	r7, r3, r7
 8014c30:	f7ff fd57 	bl	80146e2 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8014c34:	4682      	mov	sl, r0
 8014c36:	a801      	add	r0, sp, #4
 8014c38:	f7ff fd53 	bl	80146e2 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8014c3c:	ebaa 0208 	sub.w	r2, sl, r8
 8014c40:	1bc0      	subs	r0, r0, r7
 8014c42:	f1b9 0f01 	cmp.w	r9, #1
 8014c46:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8014c4a:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8014c4e:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 8014c52:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 8014c56:	f47f af33 	bne.w	8014ac0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8014c5a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8014c5c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8014c5e:	1b83      	subs	r3, r0, r6
 8014c60:	6463      	str	r3, [r4, #68]	; 0x44
 8014c62:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014c64:	18ea      	adds	r2, r5, r3
 8014c66:	6562      	str	r2, [r4, #84]	; 0x54
 8014c68:	1b8a      	subs	r2, r1, r6
 8014c6a:	64a2      	str	r2, [r4, #72]	; 0x48
 8014c6c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8014c6e:	4431      	add	r1, r6
 8014c70:	18af      	adds	r7, r5, r2
 8014c72:	4406      	add	r6, r0
 8014c74:	1b52      	subs	r2, r2, r5
 8014c76:	1b5d      	subs	r5, r3, r5
 8014c78:	65a7      	str	r7, [r4, #88]	; 0x58
 8014c7a:	64e1      	str	r1, [r4, #76]	; 0x4c
 8014c7c:	65e2      	str	r2, [r4, #92]	; 0x5c
 8014c7e:	6526      	str	r6, [r4, #80]	; 0x50
 8014c80:	6625      	str	r5, [r4, #96]	; 0x60
 8014c82:	e71d      	b.n	8014ac0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08014c84 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8014c84:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014c86:	428b      	cmp	r3, r1
 8014c88:	d102      	bne.n	8014c90 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8014c8a:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8014c8c:	4293      	cmp	r3, r2
 8014c8e:	d003      	beq.n	8014c98 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8014c90:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8014c94:	f7ff bf00 	b.w	8014a98 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8014c98:	4770      	bx	lr

08014c9a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8014c9a:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8014c9c:	428b      	cmp	r3, r1
 8014c9e:	d102      	bne.n	8014ca6 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8014ca0:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8014ca2:	4293      	cmp	r3, r2
 8014ca4:	d003      	beq.n	8014cae <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8014ca6:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8014caa:	f7ff bef5 	b.w	8014a98 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8014cae:	4770      	bx	lr

08014cb0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8014cb0:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8014cb4:	f7ff bef0 	b.w	8014a98 <_ZN8touchgfx4Line17updateCachedShapeEv>

08014cb8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8014cb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014cbc:	b0a0      	sub	sp, #128	; 0x80
 8014cbe:	4604      	mov	r4, r0
 8014cc0:	460a      	mov	r2, r1
 8014cc2:	4601      	mov	r1, r0
 8014cc4:	a804      	add	r0, sp, #16
 8014cc6:	f015 f845 	bl	8029d54 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8014cca:	2300      	movs	r3, #0
 8014ccc:	9301      	str	r3, [sp, #4]
 8014cce:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8014cd2:	2b01      	cmp	r3, #1
 8014cd4:	d17c      	bne.n	8014dd0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8014cd6:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8014cd8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014cda:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8014cdc:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014cde:	1ac0      	subs	r0, r0, r3
 8014ce0:	eba1 0102 	sub.w	r1, r1, r2
 8014ce4:	d437      	bmi.n	8014d56 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 8014ce6:	2900      	cmp	r1, #0
 8014ce8:	aa01      	add	r2, sp, #4
 8014cea:	db2e      	blt.n	8014d4a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8014cec:	f7ff fe98 	bl	8014a20 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014cf0:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 8014cf4:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8014cf6:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8014cf8:	a804      	add	r0, sp, #16
 8014cfa:	f015 f9ab 	bl	802a054 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8014cfe:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8014d00:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8014d02:	a804      	add	r0, sp, #16
 8014d04:	f015 f9f3 	bl	802a0ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014d08:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8014d0a:	2db3      	cmp	r5, #179	; 0xb3
 8014d0c:	dc33      	bgt.n	8014d76 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8014d0e:	eba6 0805 	sub.w	r8, r6, r5
 8014d12:	4640      	mov	r0, r8
 8014d14:	f7ff fdf2 	bl	80148fc <_ZN8touchgfx7CWRUtil4sineEi>
 8014d18:	a902      	add	r1, sp, #8
 8014d1a:	9002      	str	r0, [sp, #8]
 8014d1c:	a801      	add	r0, sp, #4
 8014d1e:	f7ff fcd5 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014d22:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8014d24:	1847      	adds	r7, r0, r1
 8014d26:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8014d2a:	f7ff fde7 	bl	80148fc <_ZN8touchgfx7CWRUtil4sineEi>
 8014d2e:	a903      	add	r1, sp, #12
 8014d30:	9003      	str	r0, [sp, #12]
 8014d32:	a801      	add	r0, sp, #4
 8014d34:	f7ff fcca 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014d38:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8014d3a:	4639      	mov	r1, r7
 8014d3c:	1a12      	subs	r2, r2, r0
 8014d3e:	a804      	add	r0, sp, #16
 8014d40:	f015 f9d5 	bl	802a0ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014d44:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8014d46:	441d      	add	r5, r3
 8014d48:	e7df      	b.n	8014d0a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8014d4a:	4249      	negs	r1, r1
 8014d4c:	f7ff fe68 	bl	8014a20 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014d50:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8014d54:	e7ce      	b.n	8014cf4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8014d56:	2900      	cmp	r1, #0
 8014d58:	f1c0 0000 	rsb	r0, r0, #0
 8014d5c:	aa01      	add	r2, sp, #4
 8014d5e:	db04      	blt.n	8014d6a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8014d60:	f7ff fe5e 	bl	8014a20 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014d64:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8014d68:	e7c4      	b.n	8014cf4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8014d6a:	4249      	negs	r1, r1
 8014d6c:	f7ff fe58 	bl	8014a20 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014d70:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8014d74:	e7be      	b.n	8014cf4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8014d76:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8014d78:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8014d7a:	a804      	add	r0, sp, #16
 8014d7c:	f015 f9b7 	bl	802a0ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014d80:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8014d82:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8014d84:	a804      	add	r0, sp, #16
 8014d86:	f015 f9b2 	bl	802a0ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014d8a:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8014d8c:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8014d90:	2d00      	cmp	r5, #0
 8014d92:	dd31      	ble.n	8014df8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8014d94:	eb05 0806 	add.w	r8, r5, r6
 8014d98:	4640      	mov	r0, r8
 8014d9a:	f7ff fdaf 	bl	80148fc <_ZN8touchgfx7CWRUtil4sineEi>
 8014d9e:	a902      	add	r1, sp, #8
 8014da0:	9002      	str	r0, [sp, #8]
 8014da2:	a801      	add	r0, sp, #4
 8014da4:	f7ff fc92 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014da8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8014daa:	1847      	adds	r7, r0, r1
 8014dac:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8014db0:	f7ff fda4 	bl	80148fc <_ZN8touchgfx7CWRUtil4sineEi>
 8014db4:	a903      	add	r1, sp, #12
 8014db6:	9003      	str	r0, [sp, #12]
 8014db8:	a801      	add	r0, sp, #4
 8014dba:	f7ff fc87 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014dbe:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014dc0:	4639      	mov	r1, r7
 8014dc2:	1a12      	subs	r2, r2, r0
 8014dc4:	a804      	add	r0, sp, #16
 8014dc6:	f015 f992 	bl	802a0ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014dca:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8014dcc:	1aed      	subs	r5, r5, r3
 8014dce:	e7df      	b.n	8014d90 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8014dd0:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8014dd2:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8014dd4:	a804      	add	r0, sp, #16
 8014dd6:	f015 f93d 	bl	802a054 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8014dda:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8014ddc:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8014dde:	a804      	add	r0, sp, #16
 8014de0:	f015 f985 	bl	802a0ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014de4:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8014de6:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8014de8:	a804      	add	r0, sp, #16
 8014dea:	f015 f980 	bl	802a0ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014dee:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8014df0:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8014df2:	a804      	add	r0, sp, #16
 8014df4:	f015 f97b 	bl	802a0ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014df8:	21ff      	movs	r1, #255	; 0xff
 8014dfa:	a804      	add	r0, sp, #16
 8014dfc:	f015 f866 	bl	8029ecc <_ZN8touchgfx6Canvas6renderEh>
 8014e00:	4b04      	ldr	r3, [pc, #16]	; (8014e14 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 8014e02:	9304      	str	r3, [sp, #16]
 8014e04:	4604      	mov	r4, r0
 8014e06:	a80c      	add	r0, sp, #48	; 0x30
 8014e08:	f001 fa98 	bl	801633c <_ZN8touchgfx7OutlineD1Ev>
 8014e0c:	4620      	mov	r0, r4
 8014e0e:	b020      	add	sp, #128	; 0x80
 8014e10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014e14:	08032390 	.word	0x08032390

08014e18 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8014e18:	2000      	movs	r0, #0
 8014e1a:	4770      	bx	lr

08014e1c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8014e1c:	4b07      	ldr	r3, [pc, #28]	; (8014e3c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8014e1e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8014e20:	881b      	ldrh	r3, [r3, #0]
 8014e22:	4293      	cmp	r3, r2
 8014e24:	bf81      	itttt	hi
 8014e26:	4b06      	ldrhi	r3, [pc, #24]	; (8014e40 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8014e28:	681b      	ldrhi	r3, [r3, #0]
 8014e2a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8014e2e:	7858      	ldrbhi	r0, [r3, #1]
 8014e30:	bf8c      	ite	hi
 8014e32:	f000 0003 	andhi.w	r0, r0, #3
 8014e36:	2000      	movls	r0, #0
 8014e38:	4770      	bx	lr
 8014e3a:	bf00      	nop
 8014e3c:	200138a8 	.word	0x200138a8
 8014e40:	200138a4 	.word	0x200138a4

08014e44 <_ZN8touchgfx8TextAreaD1Ev>:
 8014e44:	4770      	bx	lr
	...

08014e48 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8014e48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014e4c:	4b10      	ldr	r3, [pc, #64]	; (8014e90 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8014e4e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8014e50:	881b      	ldrh	r3, [r3, #0]
 8014e52:	428b      	cmp	r3, r1
 8014e54:	4604      	mov	r4, r0
 8014e56:	d918      	bls.n	8014e8a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8014e58:	6803      	ldr	r3, [r0, #0]
 8014e5a:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8014e5c:	4b0d      	ldr	r3, [pc, #52]	; (8014e94 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8014e5e:	6818      	ldr	r0, [r3, #0]
 8014e60:	f7f5 fcaa 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8014e64:	6823      	ldr	r3, [r4, #0]
 8014e66:	4606      	mov	r6, r0
 8014e68:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014e6a:	4620      	mov	r0, r4
 8014e6c:	4798      	blx	r3
 8014e6e:	6823      	ldr	r3, [r4, #0]
 8014e70:	4607      	mov	r7, r0
 8014e72:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014e76:	4620      	mov	r0, r4
 8014e78:	4798      	blx	r3
 8014e7a:	463a      	mov	r2, r7
 8014e7c:	4603      	mov	r3, r0
 8014e7e:	4631      	mov	r1, r6
 8014e80:	4620      	mov	r0, r4
 8014e82:	46ac      	mov	ip, r5
 8014e84:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8014e88:	4760      	bx	ip
 8014e8a:	2000      	movs	r0, #0
 8014e8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014e90:	200138a8 	.word	0x200138a8
 8014e94:	200138b0 	.word	0x200138b0

08014e98 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8014e98:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8014e9c:	4b17      	ldr	r3, [pc, #92]	; (8014efc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8014e9e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8014ea0:	881b      	ldrh	r3, [r3, #0]
 8014ea2:	428b      	cmp	r3, r1
 8014ea4:	4604      	mov	r4, r0
 8014ea6:	d926      	bls.n	8014ef6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8014ea8:	4b15      	ldr	r3, [pc, #84]	; (8014f00 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8014eaa:	681b      	ldr	r3, [r3, #0]
 8014eac:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8014eb0:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8014eb4:	4b13      	ldr	r3, [pc, #76]	; (8014f04 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8014eb6:	7855      	ldrb	r5, [r2, #1]
 8014eb8:	681b      	ldr	r3, [r3, #0]
 8014eba:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8014ebe:	6833      	ldr	r3, [r6, #0]
 8014ec0:	69df      	ldr	r7, [r3, #28]
 8014ec2:	4b11      	ldr	r3, [pc, #68]	; (8014f08 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8014ec4:	6818      	ldr	r0, [r3, #0]
 8014ec6:	f7f5 fc77 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8014eca:	6823      	ldr	r3, [r4, #0]
 8014ecc:	4680      	mov	r8, r0
 8014ece:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014ed0:	4620      	mov	r0, r4
 8014ed2:	4798      	blx	r3
 8014ed4:	6823      	ldr	r3, [r4, #0]
 8014ed6:	4681      	mov	r9, r0
 8014ed8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014edc:	4620      	mov	r0, r4
 8014ede:	4798      	blx	r3
 8014ee0:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8014ee4:	9000      	str	r0, [sp, #0]
 8014ee6:	464b      	mov	r3, r9
 8014ee8:	4642      	mov	r2, r8
 8014eea:	4629      	mov	r1, r5
 8014eec:	4630      	mov	r0, r6
 8014eee:	47b8      	blx	r7
 8014ef0:	b003      	add	sp, #12
 8014ef2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014ef6:	2000      	movs	r0, #0
 8014ef8:	e7fa      	b.n	8014ef0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8014efa:	bf00      	nop
 8014efc:	200138a8 	.word	0x200138a8
 8014f00:	200138a4 	.word	0x200138a4
 8014f04:	200138ac 	.word	0x200138ac
 8014f08:	200138b0 	.word	0x200138b0

08014f0c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8014f0c:	b40e      	push	{r1, r2, r3}
 8014f0e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014f12:	4b2f      	ldr	r3, [pc, #188]	; (8014fd0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8014f14:	881a      	ldrh	r2, [r3, #0]
 8014f16:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8014f18:	429a      	cmp	r2, r3
 8014f1a:	b09d      	sub	sp, #116	; 0x74
 8014f1c:	4604      	mov	r4, r0
 8014f1e:	d954      	bls.n	8014fca <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8014f20:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8014fd4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8014f24:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8014fd8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8014f28:	aa26      	add	r2, sp, #152	; 0x98
 8014f2a:	9202      	str	r2, [sp, #8]
 8014f2c:	f8d9 2000 	ldr.w	r2, [r9]
 8014f30:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8014f34:	f8d8 3000 	ldr.w	r3, [r8]
 8014f38:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8014f3c:	682b      	ldr	r3, [r5, #0]
 8014f3e:	4628      	mov	r0, r5
 8014f40:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014f42:	4798      	blx	r3
 8014f44:	b207      	sxth	r7, r0
 8014f46:	4606      	mov	r6, r0
 8014f48:	a803      	add	r0, sp, #12
 8014f4a:	f005 fc61 	bl	801a810 <_ZN8touchgfx12TextProviderC1Ev>
 8014f4e:	682b      	ldr	r3, [r5, #0]
 8014f50:	4628      	mov	r0, r5
 8014f52:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014f54:	4798      	blx	r3
 8014f56:	682b      	ldr	r3, [r5, #0]
 8014f58:	4682      	mov	sl, r0
 8014f5a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014f5c:	4628      	mov	r0, r5
 8014f5e:	4798      	blx	r3
 8014f60:	4653      	mov	r3, sl
 8014f62:	9000      	str	r0, [sp, #0]
 8014f64:	9a02      	ldr	r2, [sp, #8]
 8014f66:	9925      	ldr	r1, [sp, #148]	; 0x94
 8014f68:	a803      	add	r0, sp, #12
 8014f6a:	f005 fcac 	bl	801a8c6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014f6e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8014f70:	f8d9 3000 	ldr.w	r3, [r9]
 8014f74:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8014f78:	8925      	ldrh	r5, [r4, #8]
 8014f7a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8014f7e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8014f82:	eba5 050c 	sub.w	r5, r5, ip
 8014f86:	784a      	ldrb	r2, [r1, #1]
 8014f88:	f8d8 3000 	ldr.w	r3, [r8]
 8014f8c:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8014f90:	b22d      	sxth	r5, r5
 8014f92:	9500      	str	r5, [sp, #0]
 8014f94:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8014f98:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8014f9c:	a803      	add	r0, sp, #12
 8014f9e:	f003 f8b9 	bl	8018114 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8014fa2:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8014fa6:	18b9      	adds	r1, r7, r2
 8014fa8:	2900      	cmp	r1, #0
 8014faa:	b203      	sxth	r3, r0
 8014fac:	dd0b      	ble.n	8014fc6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8014fae:	3b01      	subs	r3, #1
 8014fb0:	fb13 f302 	smulbb	r3, r3, r2
 8014fb4:	fb16 3300 	smlabb	r3, r6, r0, r3
 8014fb8:	b21f      	sxth	r7, r3
 8014fba:	4638      	mov	r0, r7
 8014fbc:	b01d      	add	sp, #116	; 0x74
 8014fbe:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014fc2:	b003      	add	sp, #12
 8014fc4:	4770      	bx	lr
 8014fc6:	2b00      	cmp	r3, #0
 8014fc8:	dcf7      	bgt.n	8014fba <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8014fca:	2700      	movs	r7, #0
 8014fcc:	e7f5      	b.n	8014fba <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8014fce:	bf00      	nop
 8014fd0:	200138a8 	.word	0x200138a8
 8014fd4:	200138a4 	.word	0x200138a4
 8014fd8:	200138ac 	.word	0x200138ac

08014fdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8014fdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014fe0:	4bbc      	ldr	r3, [pc, #752]	; (80152d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8014fe2:	460c      	mov	r4, r1
 8014fe4:	881b      	ldrh	r3, [r3, #0]
 8014fe6:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8014fe8:	428b      	cmp	r3, r1
 8014fea:	b0a9      	sub	sp, #164	; 0xa4
 8014fec:	4680      	mov	r8, r0
 8014fee:	d809      	bhi.n	8015004 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8014ff0:	2300      	movs	r3, #0
 8014ff2:	f04f 32ff 	mov.w	r2, #4294967295
 8014ff6:	e9c0 3200 	strd	r3, r2, [r0]
 8014ffa:	6083      	str	r3, [r0, #8]
 8014ffc:	4640      	mov	r0, r8
 8014ffe:	b029      	add	sp, #164	; 0xa4
 8015000:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015004:	4eb4      	ldr	r6, [pc, #720]	; (80152d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8015006:	6833      	ldr	r3, [r6, #0]
 8015008:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 801500c:	4bb3      	ldr	r3, [pc, #716]	; (80152dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 801500e:	681b      	ldr	r3, [r3, #0]
 8015010:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8015014:	4bb2      	ldr	r3, [pc, #712]	; (80152e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8015016:	6818      	ldr	r0, [r3, #0]
 8015018:	f7f5 fbce 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 801501c:	682b      	ldr	r3, [r5, #0]
 801501e:	4681      	mov	r9, r0
 8015020:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015022:	4628      	mov	r0, r5
 8015024:	4798      	blx	r3
 8015026:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8015028:	b203      	sxth	r3, r0
 801502a:	4407      	add	r7, r0
 801502c:	9304      	str	r3, [sp, #16]
 801502e:	b2bb      	uxth	r3, r7
 8015030:	9303      	str	r3, [sp, #12]
 8015032:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8015036:	4682      	mov	sl, r0
 8015038:	a80f      	add	r0, sp, #60	; 0x3c
 801503a:	2b00      	cmp	r3, #0
 801503c:	f040 80a6 	bne.w	801518c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8015040:	f005 fbe6 	bl	801a810 <_ZN8touchgfx12TextProviderC1Ev>
 8015044:	682b      	ldr	r3, [r5, #0]
 8015046:	4628      	mov	r0, r5
 8015048:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801504a:	4798      	blx	r3
 801504c:	682b      	ldr	r3, [r5, #0]
 801504e:	4606      	mov	r6, r0
 8015050:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015052:	4628      	mov	r0, r5
 8015054:	4798      	blx	r3
 8015056:	6823      	ldr	r3, [r4, #0]
 8015058:	4607      	mov	r7, r0
 801505a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801505c:	4620      	mov	r0, r4
 801505e:	4798      	blx	r3
 8015060:	6823      	ldr	r3, [r4, #0]
 8015062:	4683      	mov	fp, r0
 8015064:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8015068:	4620      	mov	r0, r4
 801506a:	4798      	blx	r3
 801506c:	463b      	mov	r3, r7
 801506e:	e9cd b000 	strd	fp, r0, [sp]
 8015072:	4649      	mov	r1, r9
 8015074:	4632      	mov	r2, r6
 8015076:	a80f      	add	r0, sp, #60	; 0x3c
 8015078:	f005 fc3a 	bl	801a8f0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801507c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8015080:	f8df b254 	ldr.w	fp, [pc, #596]	; 80152d8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8015084:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8015088:	f04f 0600 	mov.w	r6, #0
 801508c:	bf0c      	ite	eq
 801508e:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8015092:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8015096:	4637      	mov	r7, r6
 8015098:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 801509a:	f8db 3000 	ldr.w	r3, [fp]
 801509e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80150a2:	4629      	mov	r1, r5
 80150a4:	785b      	ldrb	r3, [r3, #1]
 80150a6:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80150aa:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80150ae:	a80f      	add	r0, sp, #60	; 0x3c
 80150b0:	f002 fd4b 	bl	8017b4a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80150b4:	9b03      	ldr	r3, [sp, #12]
 80150b6:	4286      	cmp	r6, r0
 80150b8:	bfb8      	it	lt
 80150ba:	4606      	movlt	r6, r0
 80150bc:	3701      	adds	r7, #1
 80150be:	eba9 0903 	sub.w	r9, r9, r3
 80150c2:	a80f      	add	r0, sp, #60	; 0x3c
 80150c4:	b236      	sxth	r6, r6
 80150c6:	b2bf      	uxth	r7, r7
 80150c8:	fa0f f989 	sxth.w	r9, r9
 80150cc:	f005 fbc7 	bl	801a85e <_ZN8touchgfx12TextProvider11endOfStringEv>
 80150d0:	b918      	cbnz	r0, 80150da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80150d2:	7a2b      	ldrb	r3, [r5, #8]
 80150d4:	444b      	add	r3, r9
 80150d6:	2b00      	cmp	r3, #0
 80150d8:	dcde      	bgt.n	8015098 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 80150da:	9b03      	ldr	r3, [sp, #12]
 80150dc:	9a04      	ldr	r2, [sp, #16]
 80150de:	f895 9009 	ldrb.w	r9, [r5, #9]
 80150e2:	fb13 f707 	smulbb	r7, r3, r7
 80150e6:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80150e8:	1aff      	subs	r7, r7, r3
 80150ea:	b2bf      	uxth	r7, r7
 80150ec:	b23b      	sxth	r3, r7
 80150ee:	429a      	cmp	r2, r3
 80150f0:	bfa8      	it	ge
 80150f2:	4657      	movge	r7, sl
 80150f4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80150f8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80150fc:	6823      	ldr	r3, [r4, #0]
 80150fe:	bf08      	it	eq
 8015100:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8015104:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8015106:	bf18      	it	ne
 8015108:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 801510c:	4620      	mov	r0, r4
 801510e:	4798      	blx	r3
 8015110:	444f      	add	r7, r9
 8015112:	fa1f f987 	uxth.w	r9, r7
 8015116:	2801      	cmp	r0, #1
 8015118:	fa0f f789 	sxth.w	r7, r9
 801511c:	b2b3      	uxth	r3, r6
 801511e:	f000 80e1 	beq.w	80152e4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8015122:	2802      	cmp	r0, #2
 8015124:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8015128:	f000 80e2 	beq.w	80152f0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 801512c:	7aea      	ldrb	r2, [r5, #11]
 801512e:	7b2d      	ldrb	r5, [r5, #12]
 8015130:	b236      	sxth	r6, r6
 8015132:	1ab6      	subs	r6, r6, r2
 8015134:	442a      	add	r2, r5
 8015136:	4413      	add	r3, r2
 8015138:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 801513c:	fa1f fa86 	uxth.w	sl, r6
 8015140:	b29b      	uxth	r3, r3
 8015142:	2a02      	cmp	r2, #2
 8015144:	fa0f fb8a 	sxth.w	fp, sl
 8015148:	b21e      	sxth	r6, r3
 801514a:	f000 80d5 	beq.w	80152f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 801514e:	2a03      	cmp	r2, #3
 8015150:	f000 80dd 	beq.w	801530e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8015154:	2a01      	cmp	r2, #1
 8015156:	f040 80e5 	bne.w	8015324 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 801515a:	8925      	ldrh	r5, [r4, #8]
 801515c:	4633      	mov	r3, r6
 801515e:	eba5 0909 	sub.w	r9, r5, r9
 8015162:	463e      	mov	r6, r7
 8015164:	465d      	mov	r5, fp
 8015166:	461f      	mov	r7, r3
 8015168:	fa0f fb89 	sxth.w	fp, r9
 801516c:	4b5c      	ldr	r3, [pc, #368]	; (80152e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801516e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015170:	6818      	ldr	r0, [r3, #0]
 8015172:	f7f5 fb21 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8015176:	f8a8 b000 	strh.w	fp, [r8]
 801517a:	f8a8 5002 	strh.w	r5, [r8, #2]
 801517e:	f8a8 6004 	strh.w	r6, [r8, #4]
 8015182:	f8a8 7006 	strh.w	r7, [r8, #6]
 8015186:	f8c8 0008 	str.w	r0, [r8, #8]
 801518a:	e737      	b.n	8014ffc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 801518c:	f005 fb40 	bl	801a810 <_ZN8touchgfx12TextProviderC1Ev>
 8015190:	682b      	ldr	r3, [r5, #0]
 8015192:	4628      	mov	r0, r5
 8015194:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015196:	4798      	blx	r3
 8015198:	682b      	ldr	r3, [r5, #0]
 801519a:	4607      	mov	r7, r0
 801519c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801519e:	4628      	mov	r0, r5
 80151a0:	4798      	blx	r3
 80151a2:	6823      	ldr	r3, [r4, #0]
 80151a4:	4683      	mov	fp, r0
 80151a6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80151a8:	4620      	mov	r0, r4
 80151aa:	4798      	blx	r3
 80151ac:	6822      	ldr	r2, [r4, #0]
 80151ae:	9005      	str	r0, [sp, #20]
 80151b0:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 80151b4:	4620      	mov	r0, r4
 80151b6:	4790      	blx	r2
 80151b8:	9b05      	ldr	r3, [sp, #20]
 80151ba:	9001      	str	r0, [sp, #4]
 80151bc:	463a      	mov	r2, r7
 80151be:	4649      	mov	r1, r9
 80151c0:	9300      	str	r3, [sp, #0]
 80151c2:	a80f      	add	r0, sp, #60	; 0x3c
 80151c4:	465b      	mov	r3, fp
 80151c6:	f005 fb93 	bl	801a8f0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80151ca:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80151ce:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 80151d2:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80151d4:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 80151d8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80151dc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80151e0:	bf0a      	itet	eq
 80151e2:	464a      	moveq	r2, r9
 80151e4:	461a      	movne	r2, r3
 80151e6:	4699      	moveq	r9, r3
 80151e8:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 80151ec:	1ad2      	subs	r2, r2, r3
 80151ee:	6833      	ldr	r3, [r6, #0]
 80151f0:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 80151f4:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80151f8:	af0f      	add	r7, sp, #60	; 0x3c
 80151fa:	7859      	ldrb	r1, [r3, #1]
 80151fc:	9707      	str	r7, [sp, #28]
 80151fe:	2300      	movs	r3, #0
 8015200:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8015204:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015208:	f88d 1020 	strb.w	r1, [sp, #32]
 801520c:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8015210:	9509      	str	r5, [sp, #36]	; 0x24
 8015212:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8015216:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 801521a:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 801521e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015222:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8015226:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801522a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801522e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015232:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8015236:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 801523a:	b350      	cbz	r0, 8015292 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801523c:	682b      	ldr	r3, [r5, #0]
 801523e:	4628      	mov	r0, r5
 8015240:	695b      	ldr	r3, [r3, #20]
 8015242:	4798      	blx	r3
 8015244:	4607      	mov	r7, r0
 8015246:	b320      	cbz	r0, 8015292 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8015248:	9809      	ldr	r0, [sp, #36]	; 0x24
 801524a:	6803      	ldr	r3, [r0, #0]
 801524c:	4639      	mov	r1, r7
 801524e:	68db      	ldr	r3, [r3, #12]
 8015250:	4798      	blx	r3
 8015252:	4606      	mov	r6, r0
 8015254:	b1e8      	cbz	r0, 8015292 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8015256:	7b43      	ldrb	r3, [r0, #13]
 8015258:	7a82      	ldrb	r2, [r0, #10]
 801525a:	005b      	lsls	r3, r3, #1
 801525c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015260:	4313      	orrs	r3, r2
 8015262:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8015266:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 801526a:	2b06      	cmp	r3, #6
 801526c:	d111      	bne.n	8015292 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801526e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015270:	6803      	ldr	r3, [r0, #0]
 8015272:	4632      	mov	r2, r6
 8015274:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015276:	4639      	mov	r1, r7
 8015278:	4798      	blx	r3
 801527a:	7b73      	ldrb	r3, [r6, #13]
 801527c:	005b      	lsls	r3, r3, #1
 801527e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015282:	7ab3      	ldrb	r3, [r6, #10]
 8015284:	4313      	orrs	r3, r2
 8015286:	4418      	add	r0, r3
 8015288:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801528c:	4418      	add	r0, r3
 801528e:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8015292:	2600      	movs	r6, #0
 8015294:	4637      	mov	r7, r6
 8015296:	a806      	add	r0, sp, #24
 8015298:	f002 fe38 	bl	8017f0c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801529c:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 80152a0:	9b03      	ldr	r3, [sp, #12]
 80152a2:	4286      	cmp	r6, r0
 80152a4:	eba9 0903 	sub.w	r9, r9, r3
 80152a8:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80152ac:	bfb8      	it	lt
 80152ae:	4606      	movlt	r6, r0
 80152b0:	3701      	adds	r7, #1
 80152b2:	b236      	sxth	r6, r6
 80152b4:	b2bf      	uxth	r7, r7
 80152b6:	fa0f f989 	sxth.w	r9, r9
 80152ba:	2b00      	cmp	r3, #0
 80152bc:	f43f af0d 	beq.w	80150da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80152c0:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 80152c4:	2b00      	cmp	r3, #0
 80152c6:	f47f af08 	bne.w	80150da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80152ca:	7a2b      	ldrb	r3, [r5, #8]
 80152cc:	444b      	add	r3, r9
 80152ce:	2b00      	cmp	r3, #0
 80152d0:	dce1      	bgt.n	8015296 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 80152d2:	e702      	b.n	80150da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80152d4:	200138a8 	.word	0x200138a8
 80152d8:	200138a4 	.word	0x200138a4
 80152dc:	200138ac 	.word	0x200138ac
 80152e0:	200138b0 	.word	0x200138b0
 80152e4:	ebaa 0606 	sub.w	r6, sl, r6
 80152e8:	2002      	movs	r0, #2
 80152ea:	fb96 f6f0 	sdiv	r6, r6, r0
 80152ee:	e71d      	b.n	801512c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80152f0:	441e      	add	r6, r3
 80152f2:	ebaa 0606 	sub.w	r6, sl, r6
 80152f6:	e719      	b.n	801512c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80152f8:	8925      	ldrh	r5, [r4, #8]
 80152fa:	1aed      	subs	r5, r5, r3
 80152fc:	eba5 050a 	sub.w	r5, r5, sl
 8015300:	fa0f fb85 	sxth.w	fp, r5
 8015304:	8965      	ldrh	r5, [r4, #10]
 8015306:	eba5 0509 	sub.w	r5, r5, r9
 801530a:	b22d      	sxth	r5, r5
 801530c:	e72e      	b.n	801516c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801530e:	8965      	ldrh	r5, [r4, #10]
 8015310:	1aed      	subs	r5, r5, r3
 8015312:	eba5 050a 	sub.w	r5, r5, sl
 8015316:	4633      	mov	r3, r6
 8015318:	b22d      	sxth	r5, r5
 801531a:	463e      	mov	r6, r7
 801531c:	f04f 0b00 	mov.w	fp, #0
 8015320:	461f      	mov	r7, r3
 8015322:	e723      	b.n	801516c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8015324:	2500      	movs	r5, #0
 8015326:	e721      	b.n	801516c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08015328 <_ZN8touchgfx8TextAreaD0Ev>:
 8015328:	b510      	push	{r4, lr}
 801532a:	2148      	movs	r1, #72	; 0x48
 801532c:	4604      	mov	r4, r0
 801532e:	f017 fcfc 	bl	802cd2a <_ZdlPvj>
 8015332:	4620      	mov	r0, r4
 8015334:	bd10      	pop	{r4, pc}
	...

08015338 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8015338:	b513      	push	{r0, r1, r4, lr}
 801533a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 801533e:	4604      	mov	r4, r0
 8015340:	b1fb      	cbz	r3, 8015382 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8015342:	4b16      	ldr	r3, [pc, #88]	; (801539c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8015344:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8015346:	881b      	ldrh	r3, [r3, #0]
 8015348:	428b      	cmp	r3, r1
 801534a:	d91a      	bls.n	8015382 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801534c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8015350:	2b00      	cmp	r3, #0
 8015352:	dd16      	ble.n	8015382 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8015354:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8015358:	2b00      	cmp	r3, #0
 801535a:	dd12      	ble.n	8015382 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801535c:	4b10      	ldr	r3, [pc, #64]	; (80153a0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 801535e:	6818      	ldr	r0, [r3, #0]
 8015360:	f7f5 fa2a 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8015364:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8015368:	6822      	ldr	r2, [r4, #0]
 801536a:	2b00      	cmp	r3, #0
 801536c:	db06      	blt.n	801537c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801536e:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8015372:	2b00      	cmp	r3, #0
 8015374:	db02      	blt.n	801537c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8015376:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8015378:	4298      	cmp	r0, r3
 801537a:	d004      	beq.n	8015386 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 801537c:	6953      	ldr	r3, [r2, #20]
 801537e:	4620      	mov	r0, r4
 8015380:	4798      	blx	r3
 8015382:	b002      	add	sp, #8
 8015384:	bd10      	pop	{r4, pc}
 8015386:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 801538a:	c903      	ldmia	r1, {r0, r1}
 801538c:	466b      	mov	r3, sp
 801538e:	e883 0003 	stmia.w	r3, {r0, r1}
 8015392:	6912      	ldr	r2, [r2, #16]
 8015394:	4619      	mov	r1, r3
 8015396:	4620      	mov	r0, r4
 8015398:	4790      	blx	r2
 801539a:	e7f2      	b.n	8015382 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801539c:	200138a8 	.word	0x200138a8
 80153a0:	200138b0 	.word	0x200138b0

080153a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80153a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80153a8:	4b44      	ldr	r3, [pc, #272]	; (80154bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 80153aa:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80153ac:	881b      	ldrh	r3, [r3, #0]
 80153ae:	4293      	cmp	r3, r2
 80153b0:	b08e      	sub	sp, #56	; 0x38
 80153b2:	4604      	mov	r4, r0
 80153b4:	d97e      	bls.n	80154b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80153b6:	6808      	ldr	r0, [r1, #0]
 80153b8:	4d41      	ldr	r5, [pc, #260]	; (80154c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 80153ba:	6849      	ldr	r1, [r1, #4]
 80153bc:	ab05      	add	r3, sp, #20
 80153be:	c303      	stmia	r3!, {r0, r1}
 80153c0:	4611      	mov	r1, r2
 80153c2:	6828      	ldr	r0, [r5, #0]
 80153c4:	f7f5 f9f8 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 80153c8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80153cc:	2b00      	cmp	r3, #0
 80153ce:	db11      	blt.n	80153f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80153d0:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80153d4:	2b00      	cmp	r3, #0
 80153d6:	db0d      	blt.n	80153f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80153d8:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80153da:	4298      	cmp	r0, r3
 80153dc:	d10a      	bne.n	80153f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80153de:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 80153e2:	e892 0003 	ldmia.w	r2, {r0, r1}
 80153e6:	ab09      	add	r3, sp, #36	; 0x24
 80153e8:	e883 0003 	stmia.w	r3, {r0, r1}
 80153ec:	4619      	mov	r1, r3
 80153ee:	a805      	add	r0, sp, #20
 80153f0:	f7fd fbec 	bl	8012bcc <_ZN8touchgfx4RectaNERKS0_>
 80153f4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80153f8:	2b00      	cmp	r3, #0
 80153fa:	dd5b      	ble.n	80154b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80153fc:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8015400:	2b00      	cmp	r3, #0
 8015402:	dd57      	ble.n	80154b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8015404:	4f2f      	ldr	r7, [pc, #188]	; (80154c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8015406:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8015408:	683b      	ldr	r3, [r7, #0]
 801540a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801540e:	4b2e      	ldr	r3, [pc, #184]	; (80154c8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8015410:	681b      	ldr	r3, [r3, #0]
 8015412:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8015416:	2e00      	cmp	r6, #0
 8015418:	d04c      	beq.n	80154b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801541a:	6823      	ldr	r3, [r4, #0]
 801541c:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8015420:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8015422:	4620      	mov	r0, r4
 8015424:	4798      	blx	r3
 8015426:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8015428:	683b      	ldr	r3, [r7, #0]
 801542a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 801542e:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8015432:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8015436:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8015438:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801543c:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8015440:	785b      	ldrb	r3, [r3, #1]
 8015442:	9609      	str	r6, [sp, #36]	; 0x24
 8015444:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8015448:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801544c:	4b1f      	ldr	r3, [pc, #124]	; (80154cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 801544e:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8015452:	681b      	ldr	r3, [r3, #0]
 8015454:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8015458:	910b      	str	r1, [sp, #44]	; 0x2c
 801545a:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 801545e:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8015462:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8015466:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 801546a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801546e:	b10a      	cbz	r2, 8015474 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8015470:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8015472:	b906      	cbnz	r6, 8015476 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8015474:	689e      	ldr	r6, [r3, #8]
 8015476:	af07      	add	r7, sp, #28
 8015478:	4621      	mov	r1, r4
 801547a:	4638      	mov	r0, r7
 801547c:	f004 fc7c 	bl	8019d78 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015480:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015482:	6828      	ldr	r0, [r5, #0]
 8015484:	f7f5 f998 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8015488:	6823      	ldr	r3, [r4, #0]
 801548a:	4605      	mov	r5, r0
 801548c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801548e:	4620      	mov	r0, r4
 8015490:	4798      	blx	r3
 8015492:	6823      	ldr	r3, [r4, #0]
 8015494:	4680      	mov	r8, r0
 8015496:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801549a:	4620      	mov	r0, r4
 801549c:	4798      	blx	r3
 801549e:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80154a2:	ab09      	add	r3, sp, #36	; 0x24
 80154a4:	9300      	str	r3, [sp, #0]
 80154a6:	9501      	str	r5, [sp, #4]
 80154a8:	ab05      	add	r3, sp, #20
 80154aa:	e897 0006 	ldmia.w	r7, {r1, r2}
 80154ae:	4630      	mov	r0, r6
 80154b0:	f7f5 f934 	bl	800a71c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80154b4:	b00e      	add	sp, #56	; 0x38
 80154b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80154ba:	bf00      	nop
 80154bc:	200138a8 	.word	0x200138a8
 80154c0:	200138b0 	.word	0x200138b0
 80154c4:	200138a4 	.word	0x200138a4
 80154c8:	200138ac 	.word	0x200138ac
 80154cc:	2001384c 	.word	0x2001384c

080154d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 80154d0:	b538      	push	{r3, r4, r5, lr}
 80154d2:	4b0e      	ldr	r3, [pc, #56]	; (801550c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 80154d4:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80154d6:	881b      	ldrh	r3, [r3, #0]
 80154d8:	429a      	cmp	r2, r3
 80154da:	4604      	mov	r4, r0
 80154dc:	d214      	bcs.n	8015508 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 80154de:	6803      	ldr	r3, [r0, #0]
 80154e0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80154e2:	4798      	blx	r3
 80154e4:	6823      	ldr	r3, [r4, #0]
 80154e6:	4605      	mov	r5, r0
 80154e8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80154ea:	4620      	mov	r0, r4
 80154ec:	4798      	blx	r3
 80154ee:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80154f2:	b22d      	sxth	r5, r5
 80154f4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80154f8:	4601      	mov	r1, r0
 80154fa:	bf06      	itte	eq
 80154fc:	4602      	moveq	r2, r0
 80154fe:	4629      	moveq	r1, r5
 8015500:	462a      	movne	r2, r5
 8015502:	4620      	mov	r0, r4
 8015504:	f7fd f942 	bl	801278c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8015508:	bd38      	pop	{r3, r4, r5, pc}
 801550a:	bf00      	nop
 801550c:	200138a8 	.word	0x200138a8

08015510 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8015510:	b530      	push	{r4, r5, lr}
 8015512:	888b      	ldrh	r3, [r1, #4]
 8015514:	8583      	strh	r3, [r0, #44]	; 0x2c
 8015516:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801551a:	b085      	sub	sp, #20
 801551c:	4604      	mov	r4, r0
 801551e:	b923      	cbnz	r3, 801552a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8015520:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8015524:	b90b      	cbnz	r3, 801552a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8015526:	f7ff ffd3 	bl	80154d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 801552a:	6823      	ldr	r3, [r4, #0]
 801552c:	466d      	mov	r5, sp
 801552e:	4621      	mov	r1, r4
 8015530:	4628      	mov	r0, r5
 8015532:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8015536:	4798      	blx	r3
 8015538:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801553c:	343c      	adds	r4, #60	; 0x3c
 801553e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8015542:	b005      	add	sp, #20
 8015544:	bd30      	pop	{r4, r5, pc}

08015546 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8015546:	2300      	movs	r3, #0
 8015548:	8083      	strh	r3, [r0, #4]
 801554a:	80c3      	strh	r3, [r0, #6]
 801554c:	8003      	strh	r3, [r0, #0]
 801554e:	8043      	strh	r3, [r0, #2]
 8015550:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8015554:	2bff      	cmp	r3, #255	; 0xff
 8015556:	bf01      	itttt	eq
 8015558:	890b      	ldrheq	r3, [r1, #8]
 801555a:	8083      	strheq	r3, [r0, #4]
 801555c:	894b      	ldrheq	r3, [r1, #10]
 801555e:	80c3      	strheq	r3, [r0, #6]
 8015560:	4770      	bx	lr
	...

08015564 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8015564:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8015566:	4604      	mov	r4, r0
 8015568:	6808      	ldr	r0, [r1, #0]
 801556a:	6849      	ldr	r1, [r1, #4]
 801556c:	466b      	mov	r3, sp
 801556e:	c303      	stmia	r3!, {r0, r1}
 8015570:	6823      	ldr	r3, [r4, #0]
 8015572:	4669      	mov	r1, sp
 8015574:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015576:	4620      	mov	r0, r4
 8015578:	4798      	blx	r3
 801557a:	4b08      	ldr	r3, [pc, #32]	; (801559c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 801557c:	681b      	ldr	r3, [r3, #0]
 801557e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015582:	b10a      	cbz	r2, 8015588 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8015584:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015586:	b900      	cbnz	r0, 801558a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8015588:	6898      	ldr	r0, [r3, #8]
 801558a:	6803      	ldr	r3, [r0, #0]
 801558c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 801558e:	6a1d      	ldr	r5, [r3, #32]
 8015590:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8015594:	4669      	mov	r1, sp
 8015596:	47a8      	blx	r5
 8015598:	b003      	add	sp, #12
 801559a:	bd30      	pop	{r4, r5, pc}
 801559c:	2001384c 	.word	0x2001384c

080155a0 <_ZN8touchgfx3BoxD1Ev>:
 80155a0:	4770      	bx	lr

080155a2 <_ZN8touchgfx3BoxD0Ev>:
 80155a2:	b510      	push	{r4, lr}
 80155a4:	212c      	movs	r1, #44	; 0x2c
 80155a6:	4604      	mov	r4, r0
 80155a8:	f017 fbbf 	bl	802cd2a <_ZdlPvj>
 80155ac:	4620      	mov	r0, r4
 80155ae:	bd10      	pop	{r4, pc}

080155b0 <_ZNK8touchgfx3Box17invalidateContentEv>:
 80155b0:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 80155b4:	b12a      	cbz	r2, 80155c2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80155b6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80155ba:	b112      	cbz	r2, 80155c2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80155bc:	6803      	ldr	r3, [r0, #0]
 80155be:	695b      	ldr	r3, [r3, #20]
 80155c0:	4718      	bx	r3
 80155c2:	4770      	bx	lr

080155c4 <_ZN8touchgfx10TiledImage9setOffsetEss>:
 80155c4:	b570      	push	{r4, r5, r6, lr}
 80155c6:	6803      	ldr	r3, [r0, #0]
 80155c8:	4604      	mov	r4, r0
 80155ca:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80155cc:	4615      	mov	r5, r2
 80155ce:	4798      	blx	r3
 80155d0:	6823      	ldr	r3, [r4, #0]
 80155d2:	4629      	mov	r1, r5
 80155d4:	4620      	mov	r0, r4
 80155d6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80155d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80155dc:	4718      	bx	r3

080155de <_ZN8touchgfx10TiledImage9getOffsetERsS1_>:
 80155de:	b570      	push	{r4, r5, r6, lr}
 80155e0:	6803      	ldr	r3, [r0, #0]
 80155e2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80155e4:	4604      	mov	r4, r0
 80155e6:	460e      	mov	r6, r1
 80155e8:	4615      	mov	r5, r2
 80155ea:	4798      	blx	r3
 80155ec:	8030      	strh	r0, [r6, #0]
 80155ee:	6823      	ldr	r3, [r4, #0]
 80155f0:	4620      	mov	r0, r4
 80155f2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80155f4:	4798      	blx	r3
 80155f6:	8028      	strh	r0, [r5, #0]
 80155f8:	bd70      	pop	{r4, r5, r6, pc}

080155fa <_ZN8touchgfx10TiledImage10getXOffsetEv>:
 80155fa:	f9b0 002a 	ldrsh.w	r0, [r0, #42]	; 0x2a
 80155fe:	4770      	bx	lr

08015600 <_ZN8touchgfx10TiledImage10getYOffsetEv>:
 8015600:	f9b0 002c 	ldrsh.w	r0, [r0, #44]	; 0x2c
 8015604:	4770      	bx	lr

08015606 <_ZN8touchgfx10TiledImageD1Ev>:
 8015606:	4770      	bx	lr

08015608 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>:
 8015608:	b510      	push	{r4, lr}
 801560a:	4604      	mov	r4, r0
 801560c:	f000 fd31 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8015610:	6823      	ldr	r3, [r4, #0]
 8015612:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8015616:	f9b4 102a 	ldrsh.w	r1, [r4, #42]	; 0x2a
 801561a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801561c:	4620      	mov	r0, r4
 801561e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015622:	4718      	bx	r3

08015624 <_ZN8touchgfx10TiledImage10setXOffsetEs>:
 8015624:	b538      	push	{r3, r4, r5, lr}
 8015626:	f100 0526 	add.w	r5, r0, #38	; 0x26
 801562a:	4604      	mov	r4, r0
 801562c:	8541      	strh	r1, [r0, #42]	; 0x2a
 801562e:	4628      	mov	r0, r5
 8015630:	f006 fe6e 	bl	801c310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015634:	b188      	cbz	r0, 801565a <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 8015636:	4628      	mov	r0, r5
 8015638:	f006 fe6a 	bl	801c310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801563c:	f9b4 202a 	ldrsh.w	r2, [r4, #42]	; 0x2a
 8015640:	fb92 f3f0 	sdiv	r3, r2, r0
 8015644:	fb03 2010 	mls	r0, r3, r0, r2
 8015648:	2800      	cmp	r0, #0
 801564a:	8560      	strh	r0, [r4, #42]	; 0x2a
 801564c:	da05      	bge.n	801565a <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 801564e:	4628      	mov	r0, r5
 8015650:	f006 fe5e 	bl	801c310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015654:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8015656:	4418      	add	r0, r3
 8015658:	8560      	strh	r0, [r4, #42]	; 0x2a
 801565a:	bd38      	pop	{r3, r4, r5, pc}

0801565c <_ZN8touchgfx10TiledImage10setYOffsetEs>:
 801565c:	b538      	push	{r3, r4, r5, lr}
 801565e:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8015662:	4604      	mov	r4, r0
 8015664:	8581      	strh	r1, [r0, #44]	; 0x2c
 8015666:	4628      	mov	r0, r5
 8015668:	f006 fe86 	bl	801c378 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801566c:	b188      	cbz	r0, 8015692 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 801566e:	4628      	mov	r0, r5
 8015670:	f006 fe82 	bl	801c378 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015674:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8015678:	fb92 f3f0 	sdiv	r3, r2, r0
 801567c:	fb03 2010 	mls	r0, r3, r0, r2
 8015680:	2800      	cmp	r0, #0
 8015682:	85a0      	strh	r0, [r4, #44]	; 0x2c
 8015684:	da05      	bge.n	8015692 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 8015686:	4628      	mov	r0, r5
 8015688:	f006 fe76 	bl	801c378 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801568c:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
 801568e:	4418      	add	r0, r3
 8015690:	85a0      	strh	r0, [r4, #44]	; 0x2c
 8015692:	bd38      	pop	{r3, r4, r5, pc}

08015694 <_ZN8touchgfx10TiledImageD0Ev>:
 8015694:	b510      	push	{r4, lr}
 8015696:	2130      	movs	r1, #48	; 0x30
 8015698:	4604      	mov	r4, r0
 801569a:	f017 fb46 	bl	802cd2a <_ZdlPvj>
 801569e:	4620      	mov	r0, r4
 80156a0:	bd10      	pop	{r4, pc}
	...

080156a4 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE>:
 80156a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156a8:	f100 0b26 	add.w	fp, r0, #38	; 0x26
 80156ac:	b093      	sub	sp, #76	; 0x4c
 80156ae:	4607      	mov	r7, r0
 80156b0:	4658      	mov	r0, fp
 80156b2:	460e      	mov	r6, r1
 80156b4:	f006 fe2c 	bl	801c310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80156b8:	4681      	mov	r9, r0
 80156ba:	4658      	mov	r0, fp
 80156bc:	f006 fe5c 	bl	801c378 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80156c0:	4605      	mov	r5, r0
 80156c2:	f1b9 0f00 	cmp.w	r9, #0
 80156c6:	f000 80c4 	beq.w	8015852 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 80156ca:	2800      	cmp	r0, #0
 80156cc:	f000 80c1 	beq.w	8015852 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 80156d0:	2300      	movs	r3, #0
 80156d2:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
 80156d6:	683b      	ldr	r3, [r7, #0]
 80156d8:	a90e      	add	r1, sp, #56	; 0x38
 80156da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80156dc:	4638      	mov	r0, r7
 80156de:	4798      	blx	r3
 80156e0:	f9b7 202a 	ldrsh.w	r2, [r7, #42]	; 0x2a
 80156e4:	f9b6 3000 	ldrsh.w	r3, [r6]
 80156e8:	88b1      	ldrh	r1, [r6, #4]
 80156ea:	fa1f f889 	uxth.w	r8, r9
 80156ee:	189c      	adds	r4, r3, r2
 80156f0:	440b      	add	r3, r1
 80156f2:	fa02 f383 	sxtah	r3, r2, r3
 80156f6:	fb94 f4f9 	sdiv	r4, r4, r9
 80156fa:	fb14 f408 	smulbb	r4, r4, r8
 80156fe:	1aa4      	subs	r4, r4, r2
 8015700:	3b01      	subs	r3, #1
 8015702:	b2aa      	uxth	r2, r5
 8015704:	fb93 f3f9 	sdiv	r3, r3, r9
 8015708:	fb13 f308 	smulbb	r3, r3, r8
 801570c:	b21b      	sxth	r3, r3
 801570e:	9205      	str	r2, [sp, #20]
 8015710:	f9b7 102c 	ldrsh.w	r1, [r7, #44]	; 0x2c
 8015714:	9805      	ldr	r0, [sp, #20]
 8015716:	930b      	str	r3, [sp, #44]	; 0x2c
 8015718:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801571c:	185a      	adds	r2, r3, r1
 801571e:	fb92 f2f5 	sdiv	r2, r2, r5
 8015722:	fb12 f200 	smulbb	r2, r2, r0
 8015726:	1a52      	subs	r2, r2, r1
 8015728:	b212      	sxth	r2, r2
 801572a:	920c      	str	r2, [sp, #48]	; 0x30
 801572c:	88f2      	ldrh	r2, [r6, #6]
 801572e:	4413      	add	r3, r2
 8015730:	fa01 f383 	sxtah	r3, r1, r3
 8015734:	3b01      	subs	r3, #1
 8015736:	fb93 f3f5 	sdiv	r3, r3, r5
 801573a:	fb13 f300 	smulbb	r3, r3, r0
 801573e:	b2a4      	uxth	r4, r4
 8015740:	b21b      	sxth	r3, r3
 8015742:	930d      	str	r3, [sp, #52]	; 0x34
 8015744:	eb08 0504 	add.w	r5, r8, r4
 8015748:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801574a:	b223      	sxth	r3, r4
 801574c:	4293      	cmp	r3, r2
 801574e:	b2ad      	uxth	r5, r5
 8015750:	9306      	str	r3, [sp, #24]
 8015752:	dc7e      	bgt.n	8015852 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8015754:	b22b      	sxth	r3, r5
 8015756:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801575a:	930a      	str	r3, [sp, #40]	; 0x28
 801575c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801575e:	4599      	cmp	r9, r3
 8015760:	dd03      	ble.n	801576a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xc6>
 8015762:	4444      	add	r4, r8
 8015764:	b2a4      	uxth	r4, r4
 8015766:	4445      	add	r5, r8
 8015768:	e7ee      	b.n	8015748 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xa4>
 801576a:	f9b6 c000 	ldrsh.w	ip, [r6]
 801576e:	88b2      	ldrh	r2, [r6, #4]
 8015770:	9806      	ldr	r0, [sp, #24]
 8015772:	9905      	ldr	r1, [sp, #20]
 8015774:	4462      	add	r2, ip
 8015776:	b292      	uxth	r2, r2
 8015778:	b213      	sxth	r3, r2
 801577a:	9308      	str	r3, [sp, #32]
 801577c:	fa1f f389 	uxth.w	r3, r9
 8015780:	4419      	add	r1, r3
 8015782:	9307      	str	r3, [sp, #28]
 8015784:	4603      	mov	r3, r0
 8015786:	9808      	ldr	r0, [sp, #32]
 8015788:	b289      	uxth	r1, r1
 801578a:	4283      	cmp	r3, r0
 801578c:	fa0f fa81 	sxth.w	sl, r1
 8015790:	da5b      	bge.n	801584a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8015792:	980a      	ldr	r0, [sp, #40]	; 0x28
 8015794:	4584      	cmp	ip, r0
 8015796:	da58      	bge.n	801584a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8015798:	f9b6 0002 	ldrsh.w	r0, [r6, #2]
 801579c:	f8b6 e006 	ldrh.w	lr, [r6, #6]
 80157a0:	4486      	add	lr, r0
 80157a2:	fa1f fe8e 	uxth.w	lr, lr
 80157a6:	fa0f f38e 	sxth.w	r3, lr
 80157aa:	4599      	cmp	r9, r3
 80157ac:	9309      	str	r3, [sp, #36]	; 0x24
 80157ae:	da4c      	bge.n	801584a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80157b0:	4550      	cmp	r0, sl
 80157b2:	da4a      	bge.n	801584a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80157b4:	9b06      	ldr	r3, [sp, #24]
 80157b6:	459c      	cmp	ip, r3
 80157b8:	bfb8      	it	lt
 80157ba:	469c      	movlt	ip, r3
 80157bc:	9b08      	ldr	r3, [sp, #32]
 80157be:	f8ad c040 	strh.w	ip, [sp, #64]	; 0x40
 80157c2:	4548      	cmp	r0, r9
 80157c4:	bfb8      	it	lt
 80157c6:	4648      	movlt	r0, r9
 80157c8:	4699      	mov	r9, r3
 80157ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80157cc:	f8ad 0042 	strh.w	r0, [sp, #66]	; 0x42
 80157d0:	4599      	cmp	r9, r3
 80157d2:	bfc8      	it	gt
 80157d4:	462a      	movgt	r2, r5
 80157d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80157d8:	4553      	cmp	r3, sl
 80157da:	bfd8      	it	le
 80157dc:	4671      	movle	r1, lr
 80157de:	eba2 020c 	sub.w	r2, r2, ip
 80157e2:	1a09      	subs	r1, r1, r0
 80157e4:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
 80157e8:	f8ad 1046 	strh.w	r1, [sp, #70]	; 0x46
 80157ec:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 80157f0:	9b07      	ldr	r3, [sp, #28]
 80157f2:	1b12      	subs	r2, r2, r4
 80157f4:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80157f8:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 80157fc:	1ad2      	subs	r2, r2, r3
 80157fe:	4b16      	ldr	r3, [pc, #88]	; (8015858 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1b4>)
 8015800:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8015804:	681a      	ldr	r2, [r3, #0]
 8015806:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
 801580a:	b109      	cbz	r1, 8015810 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16c>
 801580c:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
 801580e:	b900      	cbnz	r0, 8015812 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16e>
 8015810:	6890      	ldr	r0, [r2, #8]
 8015812:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8015816:	9b07      	ldr	r3, [sp, #28]
 8015818:	6801      	ldr	r1, [r0, #0]
 801581a:	f04f 0c01 	mov.w	ip, #1
 801581e:	f8cd c008 	str.w	ip, [sp, #8]
 8015822:	f897 c028 	ldrb.w	ip, [r7, #40]	; 0x28
 8015826:	f8cd c004 	str.w	ip, [sp, #4]
 801582a:	4413      	add	r3, r2
 801582c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8015830:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
 8015834:	f8cd c000 	str.w	ip, [sp]
 8015838:	4422      	add	r2, r4
 801583a:	f8d1 9008 	ldr.w	r9, [r1, #8]
 801583e:	b21b      	sxth	r3, r3
 8015840:	b212      	sxth	r2, r2
 8015842:	4659      	mov	r1, fp
 8015844:	47c8      	blx	r9
 8015846:	46d1      	mov	r9, sl
 8015848:	e788      	b.n	801575c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xb8>
 801584a:	2300      	movs	r3, #0
 801584c:	e9cd 3310 	strd	r3, r3, [sp, #64]	; 0x40
 8015850:	e7cc      	b.n	80157ec <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x148>
 8015852:	b013      	add	sp, #76	; 0x4c
 8015854:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015858:	2001384c 	.word	0x2001384c

0801585c <_ZNK8touchgfx10TiledImage12getSolidRectEv>:
 801585c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015860:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8015864:	2bff      	cmp	r3, #255	; 0xff
 8015866:	4606      	mov	r6, r0
 8015868:	4689      	mov	r9, r1
 801586a:	d008      	beq.n	801587e <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x22>
 801586c:	2300      	movs	r3, #0
 801586e:	8003      	strh	r3, [r0, #0]
 8015870:	8043      	strh	r3, [r0, #2]
 8015872:	8083      	strh	r3, [r0, #4]
 8015874:	4630      	mov	r0, r6
 8015876:	80f3      	strh	r3, [r6, #6]
 8015878:	b003      	add	sp, #12
 801587a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801587e:	f101 0b26 	add.w	fp, r1, #38	; 0x26
 8015882:	4659      	mov	r1, fp
 8015884:	4668      	mov	r0, sp
 8015886:	f006 fdab 	bl	801c3e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801588a:	4658      	mov	r0, fp
 801588c:	f9bd 4004 	ldrsh.w	r4, [sp, #4]
 8015890:	f9bd 7000 	ldrsh.w	r7, [sp]
 8015894:	f9bd a002 	ldrsh.w	sl, [sp, #2]
 8015898:	f9bd 8006 	ldrsh.w	r8, [sp, #6]
 801589c:	f006 fd38 	bl	801c310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80158a0:	4284      	cmp	r4, r0
 80158a2:	d10d      	bne.n	80158c0 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x64>
 80158a4:	f9b9 5008 	ldrsh.w	r5, [r9, #8]
 80158a8:	4658      	mov	r0, fp
 80158aa:	f006 fd65 	bl	801c378 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80158ae:	4580      	cmp	r8, r0
 80158b0:	d129      	bne.n	8015906 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0xaa>
 80158b2:	f9b9 300a 	ldrsh.w	r3, [r9, #10]
 80158b6:	8037      	strh	r7, [r6, #0]
 80158b8:	f8a6 a002 	strh.w	sl, [r6, #2]
 80158bc:	80b5      	strh	r5, [r6, #4]
 80158be:	e7d9      	b.n	8015874 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x18>
 80158c0:	f8b9 502a 	ldrh.w	r5, [r9, #42]	; 0x2a
 80158c4:	4658      	mov	r0, fp
 80158c6:	f006 fd23 	bl	801c310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80158ca:	1b7f      	subs	r7, r7, r5
 80158cc:	b2bd      	uxth	r5, r7
 80158ce:	b22f      	sxth	r7, r5
 80158d0:	4428      	add	r0, r5
 80158d2:	2f00      	cmp	r7, #0
 80158d4:	b2a3      	uxth	r3, r4
 80158d6:	b280      	uxth	r0, r0
 80158d8:	bfb8      	it	lt
 80158da:	18ed      	addlt	r5, r5, r3
 80158dc:	4403      	add	r3, r0
 80158de:	b29b      	uxth	r3, r3
 80158e0:	f9b9 2008 	ldrsh.w	r2, [r9, #8]
 80158e4:	bfb8      	it	lt
 80158e6:	b22d      	sxthlt	r5, r5
 80158e8:	b219      	sxth	r1, r3
 80158ea:	bfae      	itee	ge
 80158ec:	4625      	movge	r5, r4
 80158ee:	ea25 75e5 	biclt.w	r5, r5, r5, asr #31
 80158f2:	2700      	movlt	r7, #0
 80158f4:	4291      	cmp	r1, r2
 80158f6:	bfc4      	itt	gt
 80158f8:	1a9c      	subgt	r4, r3, r2
 80158fa:	b224      	sxthgt	r4, r4
 80158fc:	42ac      	cmp	r4, r5
 80158fe:	bfc4      	itt	gt
 8015900:	b207      	sxthgt	r7, r0
 8015902:	4625      	movgt	r5, r4
 8015904:	e7d0      	b.n	80158a8 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x4c>
 8015906:	f8b9 402c 	ldrh.w	r4, [r9, #44]	; 0x2c
 801590a:	4658      	mov	r0, fp
 801590c:	f006 fd34 	bl	801c378 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015910:	ebaa 0404 	sub.w	r4, sl, r4
 8015914:	b2a4      	uxth	r4, r4
 8015916:	fa0f fa84 	sxth.w	sl, r4
 801591a:	4420      	add	r0, r4
 801591c:	f1ba 0f00 	cmp.w	sl, #0
 8015920:	fa1f f288 	uxth.w	r2, r8
 8015924:	b280      	uxth	r0, r0
 8015926:	bfb8      	it	lt
 8015928:	18a3      	addlt	r3, r4, r2
 801592a:	4402      	add	r2, r0
 801592c:	b292      	uxth	r2, r2
 801592e:	f9b9 100a 	ldrsh.w	r1, [r9, #10]
 8015932:	bfb8      	it	lt
 8015934:	b21b      	sxthlt	r3, r3
 8015936:	b214      	sxth	r4, r2
 8015938:	bfae      	itee	ge
 801593a:	4643      	movge	r3, r8
 801593c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8015940:	f04f 0a00 	movlt.w	sl, #0
 8015944:	428c      	cmp	r4, r1
 8015946:	bfc4      	itt	gt
 8015948:	eba2 0801 	subgt.w	r8, r2, r1
 801594c:	fa0f f888 	sxthgt.w	r8, r8
 8015950:	4598      	cmp	r8, r3
 8015952:	bfc4      	itt	gt
 8015954:	fa0f fa80 	sxthgt.w	sl, r0
 8015958:	4643      	movgt	r3, r8
 801595a:	e7ac      	b.n	80158b6 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x5a>

0801595c <_ZNK8touchgfx5Image17invalidateContentEv>:
 801595c:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8015960:	b12a      	cbz	r2, 801596e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8015962:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8015966:	b112      	cbz	r2, 801596e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8015968:	6803      	ldr	r3, [r0, #0]
 801596a:	695b      	ldr	r3, [r3, #20]
 801596c:	4718      	bx	r3
 801596e:	4770      	bx	lr

08015970 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8015970:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8015974:	600b      	str	r3, [r1, #0]
 8015976:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 801597a:	6013      	str	r3, [r2, #0]
 801597c:	4770      	bx	lr

0801597e <_ZN8touchgfx5Gauge8setWidthEs>:
 801597e:	8101      	strh	r1, [r0, #8]
 8015980:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8015984:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8015988:	4770      	bx	lr

0801598a <_ZN8touchgfx5Gauge9setHeightEs>:
 801598a:	8141      	strh	r1, [r0, #10]
 801598c:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8015990:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8015994:	4770      	bx	lr

08015996 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8015996:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 801599a:	4770      	bx	lr

0801599c <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 801599c:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 80159a0:	4770      	bx	lr

080159a2 <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 80159a2:	4770      	bx	lr

080159a4 <_ZN8touchgfx5GaugeD1Ev>:
 80159a4:	4770      	bx	lr

080159a6 <_ZN8touchgfx5Gauge8setAlphaEh>:
 80159a6:	b538      	push	{r3, r4, r5, lr}
 80159a8:	4604      	mov	r4, r0
 80159aa:	460d      	mov	r5, r1
 80159ac:	f7fc fe07 	bl	80125be <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 80159b0:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 80159b4:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 80159b8:	bd38      	pop	{r3, r4, r5, pc}

080159ba <_ZN8touchgfx5GaugeD0Ev>:
 80159ba:	b510      	push	{r4, lr}
 80159bc:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 80159c0:	4604      	mov	r4, r0
 80159c2:	f017 f9b2 	bl	802cd2a <_ZdlPvj>
 80159c6:	4620      	mov	r0, r4
 80159c8:	bd10      	pop	{r4, pc}

080159ca <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 80159ca:	b510      	push	{r4, lr}
 80159cc:	6803      	ldr	r3, [r0, #0]
 80159ce:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80159d2:	4604      	mov	r4, r0
 80159d4:	4798      	blx	r3
 80159d6:	b170      	cbz	r0, 80159f6 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80159d8:	6823      	ldr	r3, [r4, #0]
 80159da:	4620      	mov	r0, r4
 80159dc:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80159e0:	4798      	blx	r3
 80159e2:	b140      	cbz	r0, 80159f6 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80159e4:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80159e8:	b12b      	cbz	r3, 80159f6 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80159ea:	6823      	ldr	r3, [r4, #0]
 80159ec:	4620      	mov	r0, r4
 80159ee:	695b      	ldr	r3, [r3, #20]
 80159f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80159f4:	4718      	bx	r3
 80159f6:	bd10      	pop	{r4, pc}

080159f8 <_ZN8touchgfx5GaugeC1Ev>:
 80159f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80159fa:	4604      	mov	r4, r0
 80159fc:	4626      	mov	r6, r4
 80159fe:	f7fc feff 	bl	8012800 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8015a02:	4b18      	ldr	r3, [pc, #96]	; (8015a64 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8015a04:	f846 3bb4 	str.w	r3, [r6], #180
 8015a08:	a902      	add	r1, sp, #8
 8015a0a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015a0e:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8015a12:	4630      	mov	r0, r6
 8015a14:	f015 f9a4 	bl	802ad60 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8015a18:	2500      	movs	r5, #0
 8015a1a:	2301      	movs	r3, #1
 8015a1c:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8015a20:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8015a24:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8015a28:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8015a2c:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8015a30:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8015a34:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8015a38:	4638      	mov	r0, r7
 8015a3a:	f014 fbd5 	bl	802a1e8 <_ZN8touchgfx6CircleC1Ev>
 8015a3e:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8015a42:	4620      	mov	r0, r4
 8015a44:	f7fc ff7d 	bl	8012942 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8015a48:	4639      	mov	r1, r7
 8015a4a:	4620      	mov	r0, r4
 8015a4c:	f7fc ff38 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8015a50:	4620      	mov	r0, r4
 8015a52:	4631      	mov	r1, r6
 8015a54:	f7fc ff34 	bl	80128c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8015a58:	4620      	mov	r0, r4
 8015a5a:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8015a5e:	b003      	add	sp, #12
 8015a60:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015a62:	bf00      	nop
 8015a64:	08031cd8 	.word	0x08031cd8

08015a68 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8015a68:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8015a6c:	4770      	bx	lr

08015a6e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8015a6e:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8015a72:	4770      	bx	lr

08015a74 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8015a74:	b538      	push	{r3, r4, r5, lr}
 8015a76:	8902      	ldrh	r2, [r0, #8]
 8015a78:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8015a7c:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8015a80:	4604      	mov	r4, r0
 8015a82:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8015a86:	2200      	movs	r2, #0
 8015a88:	4611      	mov	r1, r2
 8015a8a:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8015a8e:	4628      	mov	r0, r5
 8015a90:	f7ed fe80 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8015a94:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8015a98:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8015a9c:	1a9b      	subs	r3, r3, r2
 8015a9e:	ee07 3a90 	vmov	s15, r3
 8015aa2:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8015aa6:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8015aaa:	1a9b      	subs	r3, r3, r2
 8015aac:	ee07 3a10 	vmov	s14, r3
 8015ab0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015ab4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015ab8:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8015abc:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8015ac0:	4628      	mov	r0, r5
 8015ac2:	f015 f999 	bl	802adf8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015ac6:	4b16      	ldr	r3, [pc, #88]	; (8015b20 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8015ac8:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8015acc:	4628      	mov	r0, r5
 8015ace:	f015 f993 	bl	802adf8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015ad2:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8015ad6:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8015ada:	ee07 3a90 	vmov	s15, r3
 8015ade:	ee07 2a10 	vmov	s14, r2
 8015ae2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015ae6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015aea:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8015aee:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8015af2:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8015af6:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8015afa:	4628      	mov	r0, r5
 8015afc:	f015 f97c 	bl	802adf8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015b00:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8015b04:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8015b08:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8015b0c:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8015b10:	4628      	mov	r0, r5
 8015b12:	f015 f971 	bl	802adf8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015b16:	2301      	movs	r3, #1
 8015b18:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8015b1c:	bd38      	pop	{r3, r4, r5, pc}
 8015b1e:	bf00      	nop
 8015b20:	43960000 	.word	0x43960000

08015b24 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8015b24:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8015b26:	4604      	mov	r4, r0
 8015b28:	a802      	add	r0, sp, #8
 8015b2a:	4616      	mov	r6, r2
 8015b2c:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8015b30:	461d      	mov	r5, r3
 8015b32:	4601      	mov	r1, r0
 8015b34:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8015b38:	f015 fab4 	bl	802b0a4 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8015b3c:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8015b40:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8015b44:	4620      	mov	r0, r4
 8015b46:	f7ff ff95 	bl	8015a74 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8015b4a:	b002      	add	sp, #8
 8015b4c:	bd70      	pop	{r4, r5, r6, pc}

08015b4e <_ZN8touchgfx5Gauge9setCenterEii>:
 8015b4e:	b570      	push	{r4, r5, r6, lr}
 8015b50:	4606      	mov	r6, r0
 8015b52:	460d      	mov	r5, r1
 8015b54:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8015b58:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8015b5c:	4614      	mov	r4, r2
 8015b5e:	f7ff ff89 	bl	8015a74 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8015b62:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8015b66:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8015b6a:	1aa4      	subs	r4, r4, r2
 8015b6c:	1a6d      	subs	r5, r5, r1
 8015b6e:	0164      	lsls	r4, r4, #5
 8015b70:	016d      	lsls	r5, r5, #5
 8015b72:	3410      	adds	r4, #16
 8015b74:	3510      	adds	r5, #16
 8015b76:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8015b7a:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8015b7e:	bd70      	pop	{r4, r5, r6, pc}

08015b80 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8015b80:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8015b82:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8015b84:	0149      	lsls	r1, r1, #5
 8015b86:	4299      	cmp	r1, r3
 8015b88:	4604      	mov	r4, r0
 8015b8a:	9101      	str	r1, [sp, #4]
 8015b8c:	d00b      	beq.n	8015ba6 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8015b8e:	4601      	mov	r1, r0
 8015b90:	aa01      	add	r2, sp, #4
 8015b92:	a802      	add	r0, sp, #8
 8015b94:	f014 fd26 	bl	802a5e4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8015b98:	9b01      	ldr	r3, [sp, #4]
 8015b9a:	63e3      	str	r3, [r4, #60]	; 0x3c
 8015b9c:	6823      	ldr	r3, [r4, #0]
 8015b9e:	a902      	add	r1, sp, #8
 8015ba0:	691b      	ldr	r3, [r3, #16]
 8015ba2:	4620      	mov	r0, r4
 8015ba4:	4798      	blx	r3
 8015ba6:	b004      	add	sp, #16
 8015ba8:	bd10      	pop	{r4, pc}
	...

08015bac <_ZN8touchgfx5Gauge8setValueEi>:
 8015bac:	b570      	push	{r4, r5, r6, lr}
 8015bae:	4604      	mov	r4, r0
 8015bb0:	f7fc fd58 	bl	8012664 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8015bb4:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8015bb8:	429a      	cmp	r2, r3
 8015bba:	bfac      	ite	ge
 8015bbc:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8015bc0:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8015bc4:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8015bc8:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8015bcc:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8015bd0:	1ac9      	subs	r1, r1, r3
 8015bd2:	2900      	cmp	r1, #0
 8015bd4:	bfb8      	it	lt
 8015bd6:	4249      	neglt	r1, r1
 8015bd8:	b289      	uxth	r1, r1
 8015bda:	4620      	mov	r0, r4
 8015bdc:	f7fc fd64 	bl	80126a8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8015be0:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8015be4:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8015be8:	eddf 6a19 	vldr	s13, [pc, #100]	; 8015c50 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8015bec:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8015c54 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8015bf0:	429a      	cmp	r2, r3
 8015bf2:	4605      	mov	r5, r0
 8015bf4:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8015bf8:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8015bfc:	da15      	bge.n	8015c2a <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8015bfe:	1b5b      	subs	r3, r3, r5
 8015c00:	ee07 3a90 	vmov	s15, r3
 8015c04:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015c08:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8015c0c:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8015c10:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8015c14:	ee21 1a07 	vmul.f32	s2, s2, s14
 8015c18:	f015 f85d 	bl	802acd6 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8015c1c:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8015c20:	1b49      	subs	r1, r1, r5
 8015c22:	4630      	mov	r0, r6
 8015c24:	f7ff ffac 	bl	8015b80 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8015c28:	bd70      	pop	{r4, r5, r6, pc}
 8015c2a:	442b      	add	r3, r5
 8015c2c:	ee07 3a90 	vmov	s15, r3
 8015c30:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015c34:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8015c38:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8015c3c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8015c40:	ee21 1a07 	vmul.f32	s2, s2, s14
 8015c44:	f015 f847 	bl	802acd6 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8015c48:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8015c4c:	4429      	add	r1, r5
 8015c4e:	e7e8      	b.n	8015c22 <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8015c50:	43340000 	.word	0x43340000
 8015c54:	40490fdb 	.word	0x40490fdb

08015c58 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8015c58:	b510      	push	{r4, lr}
 8015c5a:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8015c5e:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8015c62:	0149      	lsls	r1, r1, #5
 8015c64:	0152      	lsls	r2, r2, #5
 8015c66:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8015c6a:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8015c6e:	4604      	mov	r4, r0
 8015c70:	f7fc fca2 	bl	80125b8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8015c74:	4601      	mov	r1, r0
 8015c76:	4620      	mov	r0, r4
 8015c78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015c7c:	f7ff bf96 	b.w	8015bac <_ZN8touchgfx5Gauge8setValueEi>

08015c80 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8015c80:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8015c84:	4770      	bx	lr

08015c86 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8015c86:	b570      	push	{r4, r5, r6, lr}
 8015c88:	880b      	ldrh	r3, [r1, #0]
 8015c8a:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8015c8c:	4605      	mov	r5, r0
 8015c8e:	8813      	ldrh	r3, [r2, #0]
 8015c90:	f825 3f30 	strh.w	r3, [r5, #48]!
 8015c94:	4604      	mov	r4, r0
 8015c96:	4628      	mov	r0, r5
 8015c98:	f006 fb3a 	bl	801c310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015c9c:	4606      	mov	r6, r0
 8015c9e:	4628      	mov	r0, r5
 8015ca0:	f006 fb6a 	bl	801c378 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015ca4:	6823      	ldr	r3, [r4, #0]
 8015ca6:	4605      	mov	r5, r0
 8015ca8:	4631      	mov	r1, r6
 8015caa:	4620      	mov	r0, r4
 8015cac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015cae:	4798      	blx	r3
 8015cb0:	6823      	ldr	r3, [r4, #0]
 8015cb2:	4629      	mov	r1, r5
 8015cb4:	4620      	mov	r0, r4
 8015cb6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015cb8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015cbc:	4718      	bx	r3

08015cbe <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8015cbe:	b510      	push	{r4, lr}
 8015cc0:	4604      	mov	r4, r0
 8015cc2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8015cc4:	b150      	cbz	r0, 8015cdc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8015cc6:	6803      	ldr	r3, [r0, #0]
 8015cc8:	68db      	ldr	r3, [r3, #12]
 8015cca:	4798      	blx	r3
 8015ccc:	b130      	cbz	r0, 8015cdc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8015cce:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8015cd0:	6803      	ldr	r3, [r0, #0]
 8015cd2:	4621      	mov	r1, r4
 8015cd4:	689b      	ldr	r3, [r3, #8]
 8015cd6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015cda:	4718      	bx	r3
 8015cdc:	bd10      	pop	{r4, pc}

08015cde <_ZNK8touchgfx6Button12getSolidRectEv>:
 8015cde:	b510      	push	{r4, lr}
 8015ce0:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8015ce4:	2bff      	cmp	r3, #255	; 0xff
 8015ce6:	4604      	mov	r4, r0
 8015ce8:	d006      	beq.n	8015cf8 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8015cea:	2300      	movs	r3, #0
 8015cec:	8003      	strh	r3, [r0, #0]
 8015cee:	8043      	strh	r3, [r0, #2]
 8015cf0:	8083      	strh	r3, [r0, #4]
 8015cf2:	80c3      	strh	r3, [r0, #6]
 8015cf4:	4620      	mov	r0, r4
 8015cf6:	bd10      	pop	{r4, pc}
 8015cf8:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8015cfc:	b11b      	cbz	r3, 8015d06 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8015cfe:	3130      	adds	r1, #48	; 0x30
 8015d00:	f006 fb6e 	bl	801c3e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8015d04:	e7f6      	b.n	8015cf4 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8015d06:	312e      	adds	r1, #46	; 0x2e
 8015d08:	e7fa      	b.n	8015d00 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08015d0c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8015d0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015d10:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8015d14:	b08a      	sub	sp, #40	; 0x28
 8015d16:	4604      	mov	r4, r0
 8015d18:	4688      	mov	r8, r1
 8015d1a:	2b00      	cmp	r3, #0
 8015d1c:	d066      	beq.n	8015dec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8015d1e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8015d20:	f8ad 3014 	strh.w	r3, [sp, #20]
 8015d24:	a805      	add	r0, sp, #20
 8015d26:	f006 faf3 	bl	801c310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015d2a:	4607      	mov	r7, r0
 8015d2c:	a805      	add	r0, sp, #20
 8015d2e:	f006 fb23 	bl	801c378 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015d32:	f9b8 6000 	ldrsh.w	r6, [r8]
 8015d36:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8015d3a:	4432      	add	r2, r6
 8015d3c:	b292      	uxth	r2, r2
 8015d3e:	2300      	movs	r3, #0
 8015d40:	fa0f fc82 	sxth.w	ip, r2
 8015d44:	459c      	cmp	ip, r3
 8015d46:	9306      	str	r3, [sp, #24]
 8015d48:	dd52      	ble.n	8015df0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015d4a:	42b7      	cmp	r7, r6
 8015d4c:	dd50      	ble.n	8015df0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015d4e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8015d52:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8015d56:	442b      	add	r3, r5
 8015d58:	b29b      	uxth	r3, r3
 8015d5a:	b219      	sxth	r1, r3
 8015d5c:	2900      	cmp	r1, #0
 8015d5e:	dd47      	ble.n	8015df0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015d60:	42a8      	cmp	r0, r5
 8015d62:	dd45      	ble.n	8015df0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015d64:	4567      	cmp	r7, ip
 8015d66:	bfb8      	it	lt
 8015d68:	b2ba      	uxthlt	r2, r7
 8015d6a:	4288      	cmp	r0, r1
 8015d6c:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8015d70:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8015d74:	bfb8      	it	lt
 8015d76:	b283      	uxthlt	r3, r0
 8015d78:	1b92      	subs	r2, r2, r6
 8015d7a:	1b5b      	subs	r3, r3, r5
 8015d7c:	f8ad 201c 	strh.w	r2, [sp, #28]
 8015d80:	f8ad 301e 	strh.w	r3, [sp, #30]
 8015d84:	f8ad 6018 	strh.w	r6, [sp, #24]
 8015d88:	f8ad 501a 	strh.w	r5, [sp, #26]
 8015d8c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8015d90:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015d94:	429a      	cmp	r2, r3
 8015d96:	d026      	beq.n	8015de6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8015d98:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015d9c:	2b00      	cmp	r3, #0
 8015d9e:	dd22      	ble.n	8015de6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8015da0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8015da4:	2b00      	cmp	r3, #0
 8015da6:	dd1e      	ble.n	8015de6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8015da8:	2300      	movs	r3, #0
 8015daa:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8015dae:	6823      	ldr	r3, [r4, #0]
 8015db0:	a908      	add	r1, sp, #32
 8015db2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015db4:	4620      	mov	r0, r4
 8015db6:	4798      	blx	r3
 8015db8:	4b0f      	ldr	r3, [pc, #60]	; (8015df8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8015dba:	681b      	ldr	r3, [r3, #0]
 8015dbc:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015dc0:	b10a      	cbz	r2, 8015dc6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8015dc2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015dc4:	b900      	cbnz	r0, 8015dc8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8015dc6:	6898      	ldr	r0, [r3, #8]
 8015dc8:	6801      	ldr	r1, [r0, #0]
 8015dca:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8015dce:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8015dd2:	2501      	movs	r5, #1
 8015dd4:	9502      	str	r5, [sp, #8]
 8015dd6:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8015dda:	9401      	str	r4, [sp, #4]
 8015ddc:	ac06      	add	r4, sp, #24
 8015dde:	9400      	str	r4, [sp, #0]
 8015de0:	688c      	ldr	r4, [r1, #8]
 8015de2:	a905      	add	r1, sp, #20
 8015de4:	47a0      	blx	r4
 8015de6:	b00a      	add	sp, #40	; 0x28
 8015de8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015dec:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8015dee:	e797      	b.n	8015d20 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8015df0:	2300      	movs	r3, #0
 8015df2:	9307      	str	r3, [sp, #28]
 8015df4:	e7ca      	b.n	8015d8c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8015df6:	bf00      	nop
 8015df8:	2001384c 	.word	0x2001384c

08015dfc <_ZNK8touchgfx6Button17invalidateContentEv>:
 8015dfc:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8015e00:	b12a      	cbz	r2, 8015e0e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8015e02:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8015e06:	b112      	cbz	r2, 8015e0e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8015e08:	6803      	ldr	r3, [r0, #0]
 8015e0a:	695b      	ldr	r3, [r3, #20]
 8015e0c:	4718      	bx	r3
 8015e0e:	4770      	bx	lr

08015e10 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8015e10:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015e14:	4b2f      	ldr	r3, [pc, #188]	; (8015ed4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8015e16:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8015e18:	881b      	ldrh	r3, [r3, #0]
 8015e1a:	4293      	cmp	r3, r2
 8015e1c:	b08d      	sub	sp, #52	; 0x34
 8015e1e:	4604      	mov	r4, r0
 8015e20:	460f      	mov	r7, r1
 8015e22:	d954      	bls.n	8015ece <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8015e24:	4b2c      	ldr	r3, [pc, #176]	; (8015ed8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8015e26:	6819      	ldr	r1, [r3, #0]
 8015e28:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8015e2c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8015e30:	4a2a      	ldr	r2, [pc, #168]	; (8015edc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8015e32:	6812      	ldr	r2, [r2, #0]
 8015e34:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8015e38:	2900      	cmp	r1, #0
 8015e3a:	d048      	beq.n	8015ece <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8015e3c:	785a      	ldrb	r2, [r3, #1]
 8015e3e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8015e42:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8015e46:	4b26      	ldr	r3, [pc, #152]	; (8015ee0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8015e48:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8015e4c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8015e50:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8015e54:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8015e56:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8015e5a:	9107      	str	r1, [sp, #28]
 8015e5c:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8015e60:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8015e64:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8015e68:	681a      	ldr	r2, [r3, #0]
 8015e6a:	f88d 8020 	strb.w	r8, [sp, #32]
 8015e6e:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8015e72:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8015e76:	9609      	str	r6, [sp, #36]	; 0x24
 8015e78:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8015e7c:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8015e80:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8015e84:	b10b      	cbz	r3, 8015e8a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8015e86:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8015e88:	b905      	cbnz	r5, 8015e8c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8015e8a:	6895      	ldr	r5, [r2, #8]
 8015e8c:	ae05      	add	r6, sp, #20
 8015e8e:	4621      	mov	r1, r4
 8015e90:	4630      	mov	r0, r6
 8015e92:	f003 ff71 	bl	8019d78 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015e96:	4b13      	ldr	r3, [pc, #76]	; (8015ee4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8015e98:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015e9a:	6818      	ldr	r0, [r3, #0]
 8015e9c:	f7f4 fc8c 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8015ea0:	6823      	ldr	r3, [r4, #0]
 8015ea2:	4680      	mov	r8, r0
 8015ea4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8015ea6:	4620      	mov	r0, r4
 8015ea8:	4798      	blx	r3
 8015eaa:	6823      	ldr	r3, [r4, #0]
 8015eac:	4681      	mov	r9, r0
 8015eae:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8015eb2:	4620      	mov	r0, r4
 8015eb4:	4798      	blx	r3
 8015eb6:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8015eba:	ab07      	add	r3, sp, #28
 8015ebc:	9300      	str	r3, [sp, #0]
 8015ebe:	f8cd 8004 	str.w	r8, [sp, #4]
 8015ec2:	463b      	mov	r3, r7
 8015ec4:	e896 0006 	ldmia.w	r6, {r1, r2}
 8015ec8:	4628      	mov	r0, r5
 8015eca:	f7f4 fc27 	bl	800a71c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8015ece:	b00d      	add	sp, #52	; 0x34
 8015ed0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015ed4:	200138a8 	.word	0x200138a8
 8015ed8:	200138a4 	.word	0x200138a4
 8015edc:	200138ac 	.word	0x200138ac
 8015ee0:	2001384c 	.word	0x2001384c
 8015ee4:	200138b0 	.word	0x200138b0

08015ee8 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8015ee8:	4770      	bx	lr

08015eea <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8015eea:	4770      	bx	lr

08015eec <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8015eec:	b510      	push	{r4, lr}
 8015eee:	213c      	movs	r1, #60	; 0x3c
 8015ef0:	4604      	mov	r4, r0
 8015ef2:	f016 ff1a 	bl	802cd2a <_ZdlPvj>
 8015ef6:	4620      	mov	r0, r4
 8015ef8:	bd10      	pop	{r4, pc}

08015efa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8015efa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015efe:	461c      	mov	r4, r3
 8015f00:	4606      	mov	r6, r0
 8015f02:	9f06      	ldr	r7, [sp, #24]
 8015f04:	f7ff febf 	bl	8015c86 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8015f08:	8823      	ldrh	r3, [r4, #0]
 8015f0a:	86b3      	strh	r3, [r6, #52]	; 0x34
 8015f0c:	883b      	ldrh	r3, [r7, #0]
 8015f0e:	86f3      	strh	r3, [r6, #54]	; 0x36
 8015f10:	4638      	mov	r0, r7
 8015f12:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8015f16:	f006 f9fb 	bl	801c310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015f1a:	f04f 0802 	mov.w	r8, #2
 8015f1e:	fb95 f5f8 	sdiv	r5, r5, r8
 8015f22:	b2ad      	uxth	r5, r5
 8015f24:	fb90 f0f8 	sdiv	r0, r0, r8
 8015f28:	1a2d      	subs	r5, r5, r0
 8015f2a:	8735      	strh	r5, [r6, #56]	; 0x38
 8015f2c:	4638      	mov	r0, r7
 8015f2e:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8015f32:	fb94 f4f8 	sdiv	r4, r4, r8
 8015f36:	f006 fa1f 	bl	801c378 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015f3a:	b2a4      	uxth	r4, r4
 8015f3c:	fb90 f0f8 	sdiv	r0, r0, r8
 8015f40:	1a24      	subs	r4, r4, r0
 8015f42:	8774      	strh	r4, [r6, #58]	; 0x3a
 8015f44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015f48 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8015f48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015f4c:	4604      	mov	r4, r0
 8015f4e:	b08c      	sub	sp, #48	; 0x30
 8015f50:	460d      	mov	r5, r1
 8015f52:	f7ff fedb 	bl	8015d0c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8015f56:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8015f5a:	2b00      	cmp	r3, #0
 8015f5c:	d05d      	beq.n	801601a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 8015f5e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8015f60:	f8ad 3014 	strh.w	r3, [sp, #20]
 8015f64:	a805      	add	r0, sp, #20
 8015f66:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8015f6a:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 8015f6e:	f006 f9cf 	bl	801c310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015f72:	4606      	mov	r6, r0
 8015f74:	a805      	add	r0, sp, #20
 8015f76:	f006 f9ff 	bl	801c378 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015f7a:	6869      	ldr	r1, [r5, #4]
 8015f7c:	f8ad 001e 	strh.w	r0, [sp, #30]
 8015f80:	6828      	ldr	r0, [r5, #0]
 8015f82:	f8ad 8018 	strh.w	r8, [sp, #24]
 8015f86:	ab08      	add	r3, sp, #32
 8015f88:	ad08      	add	r5, sp, #32
 8015f8a:	c303      	stmia	r3!, {r0, r1}
 8015f8c:	a906      	add	r1, sp, #24
 8015f8e:	4628      	mov	r0, r5
 8015f90:	f8ad 701a 	strh.w	r7, [sp, #26]
 8015f94:	f8ad 601c 	strh.w	r6, [sp, #28]
 8015f98:	f7fc fe18 	bl	8012bcc <_ZN8touchgfx4RectaNERKS0_>
 8015f9c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8015fa0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015fa4:	429a      	cmp	r2, r3
 8015fa6:	d035      	beq.n	8016014 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8015fa8:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8015fac:	2b00      	cmp	r3, #0
 8015fae:	dd31      	ble.n	8016014 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8015fb0:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8015fb4:	2b00      	cmp	r3, #0
 8015fb6:	dd2d      	ble.n	8016014 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8015fb8:	2300      	movs	r3, #0
 8015fba:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 8015fbe:	6823      	ldr	r3, [r4, #0]
 8015fc0:	a90a      	add	r1, sp, #40	; 0x28
 8015fc2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015fc4:	4620      	mov	r0, r4
 8015fc6:	4798      	blx	r3
 8015fc8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8015fcc:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8015fce:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8015fd2:	1a9b      	subs	r3, r3, r2
 8015fd4:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015fd8:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8015fda:	1ac9      	subs	r1, r1, r3
 8015fdc:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8015fe0:	490f      	ldr	r1, [pc, #60]	; (8016020 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 8015fe2:	6809      	ldr	r1, [r1, #0]
 8015fe4:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8015fe8:	b108      	cbz	r0, 8015fee <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8015fea:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8015fec:	b900      	cbnz	r0, 8015ff0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 8015fee:	6888      	ldr	r0, [r1, #8]
 8015ff0:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8015ff4:	440b      	add	r3, r1
 8015ff6:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8015ffa:	2601      	movs	r6, #1
 8015ffc:	440a      	add	r2, r1
 8015ffe:	6801      	ldr	r1, [r0, #0]
 8016000:	9602      	str	r6, [sp, #8]
 8016002:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8016006:	e9cd 5400 	strd	r5, r4, [sp]
 801600a:	b21b      	sxth	r3, r3
 801600c:	688c      	ldr	r4, [r1, #8]
 801600e:	b212      	sxth	r2, r2
 8016010:	a905      	add	r1, sp, #20
 8016012:	47a0      	blx	r4
 8016014:	b00c      	add	sp, #48	; 0x30
 8016016:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801601a:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801601c:	e7a0      	b.n	8015f60 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 801601e:	bf00      	nop
 8016020:	2001384c 	.word	0x2001384c

08016024 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8016024:	b510      	push	{r4, lr}
 8016026:	2101      	movs	r1, #1
 8016028:	2200      	movs	r2, #0
 801602a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801602e:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8016032:	4c0e      	ldr	r4, [pc, #56]	; (801606c <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8016034:	8082      	strh	r2, [r0, #4]
 8016036:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801603a:	80c2      	strh	r2, [r0, #6]
 801603c:	8102      	strh	r2, [r0, #8]
 801603e:	8142      	strh	r2, [r0, #10]
 8016040:	8182      	strh	r2, [r0, #12]
 8016042:	81c2      	strh	r2, [r0, #14]
 8016044:	8202      	strh	r2, [r0, #16]
 8016046:	8242      	strh	r2, [r0, #18]
 8016048:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801604c:	61c2      	str	r2, [r0, #28]
 801604e:	8402      	strh	r2, [r0, #32]
 8016050:	8442      	strh	r2, [r0, #34]	; 0x22
 8016052:	6282      	str	r2, [r0, #40]	; 0x28
 8016054:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8016058:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801605a:	8601      	strh	r1, [r0, #48]	; 0x30
 801605c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8016060:	6004      	str	r4, [r0, #0]
 8016062:	8681      	strh	r1, [r0, #52]	; 0x34
 8016064:	86c1      	strh	r1, [r0, #54]	; 0x36
 8016066:	8702      	strh	r2, [r0, #56]	; 0x38
 8016068:	8742      	strh	r2, [r0, #58]	; 0x3a
 801606a:	bd10      	pop	{r4, pc}
 801606c:	08031dc0 	.word	0x08031dc0

08016070 <_ZN8touchgfx5ImageD1Ev>:
 8016070:	4770      	bx	lr

08016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8016072:	b570      	push	{r4, r5, r6, lr}
 8016074:	880b      	ldrh	r3, [r1, #0]
 8016076:	84c3      	strh	r3, [r0, #38]	; 0x26
 8016078:	4604      	mov	r4, r0
 801607a:	4608      	mov	r0, r1
 801607c:	460d      	mov	r5, r1
 801607e:	f006 f947 	bl	801c310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016082:	4606      	mov	r6, r0
 8016084:	4628      	mov	r0, r5
 8016086:	f006 f977 	bl	801c378 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801608a:	6823      	ldr	r3, [r4, #0]
 801608c:	4605      	mov	r5, r0
 801608e:	4631      	mov	r1, r6
 8016090:	4620      	mov	r0, r4
 8016092:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016094:	4798      	blx	r3
 8016096:	6823      	ldr	r3, [r4, #0]
 8016098:	4629      	mov	r1, r5
 801609a:	4620      	mov	r0, r4
 801609c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801609e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80160a2:	4718      	bx	r3

080160a4 <_ZN8touchgfx5ImageD0Ev>:
 80160a4:	b510      	push	{r4, lr}
 80160a6:	212c      	movs	r1, #44	; 0x2c
 80160a8:	4604      	mov	r4, r0
 80160aa:	f016 fe3e 	bl	802cd2a <_ZdlPvj>
 80160ae:	4620      	mov	r0, r4
 80160b0:	bd10      	pop	{r4, pc}

080160b2 <_ZNK8touchgfx5Image12getSolidRectEv>:
 80160b2:	b510      	push	{r4, lr}
 80160b4:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80160b8:	2bff      	cmp	r3, #255	; 0xff
 80160ba:	4604      	mov	r4, r0
 80160bc:	d006      	beq.n	80160cc <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80160be:	2300      	movs	r3, #0
 80160c0:	8003      	strh	r3, [r0, #0]
 80160c2:	8043      	strh	r3, [r0, #2]
 80160c4:	8083      	strh	r3, [r0, #4]
 80160c6:	80c3      	strh	r3, [r0, #6]
 80160c8:	4620      	mov	r0, r4
 80160ca:	bd10      	pop	{r4, pc}
 80160cc:	3126      	adds	r1, #38	; 0x26
 80160ce:	f006 f987 	bl	801c3e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80160d2:	e7f9      	b.n	80160c8 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

080160d4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 80160d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80160d8:	4604      	mov	r4, r0
 80160da:	b088      	sub	sp, #32
 80160dc:	f854 3b26 	ldr.w	r3, [r4], #38
 80160e0:	2500      	movs	r5, #0
 80160e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80160e4:	460f      	mov	r7, r1
 80160e6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 80160ea:	a904      	add	r1, sp, #16
 80160ec:	4606      	mov	r6, r0
 80160ee:	4798      	blx	r3
 80160f0:	4620      	mov	r0, r4
 80160f2:	f006 f90d 	bl	801c310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80160f6:	4680      	mov	r8, r0
 80160f8:	4620      	mov	r0, r4
 80160fa:	f006 f93d 	bl	801c378 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80160fe:	9506      	str	r5, [sp, #24]
 8016100:	ad06      	add	r5, sp, #24
 8016102:	f8ad 001e 	strh.w	r0, [sp, #30]
 8016106:	4639      	mov	r1, r7
 8016108:	4628      	mov	r0, r5
 801610a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801610e:	f7fc fd5d 	bl	8012bcc <_ZN8touchgfx4RectaNERKS0_>
 8016112:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8016116:	2b00      	cmp	r3, #0
 8016118:	dd19      	ble.n	801614e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801611a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801611e:	2b00      	cmp	r3, #0
 8016120:	dd15      	ble.n	801614e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8016122:	4b0c      	ldr	r3, [pc, #48]	; (8016154 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8016124:	681b      	ldr	r3, [r3, #0]
 8016126:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801612a:	b10a      	cbz	r2, 8016130 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801612c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801612e:	b900      	cbnz	r0, 8016132 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8016130:	6898      	ldr	r0, [r3, #8]
 8016132:	6801      	ldr	r1, [r0, #0]
 8016134:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8016138:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801613c:	2701      	movs	r7, #1
 801613e:	9702      	str	r7, [sp, #8]
 8016140:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8016144:	e9cd 5600 	strd	r5, r6, [sp]
 8016148:	688d      	ldr	r5, [r1, #8]
 801614a:	4621      	mov	r1, r4
 801614c:	47a8      	blx	r5
 801614e:	b008      	add	sp, #32
 8016150:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016154:	2001384c 	.word	0x2001384c

08016158 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8016158:	4770      	bx	lr

0801615a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801615a:	b510      	push	{r4, lr}
 801615c:	2148      	movs	r1, #72	; 0x48
 801615e:	4604      	mov	r4, r0
 8016160:	f016 fde3 	bl	802cd2a <_ZdlPvj>
 8016164:	4620      	mov	r0, r4
 8016166:	bd10      	pop	{r4, pc}

08016168 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8016168:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801616c:	b08d      	sub	sp, #52	; 0x34
 801616e:	4604      	mov	r4, r0
 8016170:	460f      	mov	r7, r1
 8016172:	f7ff fdcb 	bl	8015d0c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8016176:	4a55      	ldr	r2, [pc, #340]	; (80162cc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8016178:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801617a:	8812      	ldrh	r2, [r2, #0]
 801617c:	429a      	cmp	r2, r3
 801617e:	f240 8082 	bls.w	8016286 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8016182:	4d53      	ldr	r5, [pc, #332]	; (80162d0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8016184:	682a      	ldr	r2, [r5, #0]
 8016186:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801618a:	4b52      	ldr	r3, [pc, #328]	; (80162d4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 801618c:	681b      	ldr	r3, [r3, #0]
 801618e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8016192:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 8016196:	2200      	movs	r2, #0
 8016198:	e9cd 2203 	strd	r2, r2, [sp, #12]
 801619c:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80161a0:	2a03      	cmp	r2, #3
 80161a2:	d811      	bhi.n	80161c8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80161a4:	e8df f002 	tbb	[pc, r2]
 80161a8:	89727902 	.word	0x89727902
 80161ac:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80161b0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80161b4:	1ad2      	subs	r2, r2, r3
 80161b6:	2002      	movs	r0, #2
 80161b8:	f8ad 1010 	strh.w	r1, [sp, #16]
 80161bc:	fb92 f2f0 	sdiv	r2, r2, r0
 80161c0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80161c4:	f8ad 200e 	strh.w	r2, [sp, #14]
 80161c8:	f10d 080c 	add.w	r8, sp, #12
 80161cc:	e898 0003 	ldmia.w	r8, {r0, r1}
 80161d0:	f10d 0914 	add.w	r9, sp, #20
 80161d4:	e889 0003 	stmia.w	r9, {r0, r1}
 80161d8:	4639      	mov	r1, r7
 80161da:	4648      	mov	r0, r9
 80161dc:	f7fc fcf6 	bl	8012bcc <_ZN8touchgfx4RectaNERKS0_>
 80161e0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80161e4:	2b00      	cmp	r3, #0
 80161e6:	dd4e      	ble.n	8016286 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80161e8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80161ec:	2b00      	cmp	r3, #0
 80161ee:	dd4a      	ble.n	8016286 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80161f0:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80161f4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80161f8:	1a9b      	subs	r3, r3, r2
 80161fa:	f8ad 3014 	strh.w	r3, [sp, #20]
 80161fe:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8016202:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8016206:	1a9b      	subs	r3, r3, r2
 8016208:	f8ad 3016 	strh.w	r3, [sp, #22]
 801620c:	6823      	ldr	r3, [r4, #0]
 801620e:	4641      	mov	r1, r8
 8016210:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016212:	4620      	mov	r0, r4
 8016214:	4798      	blx	r3
 8016216:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801621a:	2b00      	cmp	r3, #0
 801621c:	d053      	beq.n	80162c6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 801621e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8016220:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8016222:	682b      	ldr	r3, [r5, #0]
 8016224:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8016228:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 801622c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8016230:	785b      	ldrb	r3, [r3, #1]
 8016232:	9209      	str	r2, [sp, #36]	; 0x24
 8016234:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8016238:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801623c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8016240:	2300      	movs	r3, #0
 8016242:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8016246:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801624a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801624e:	4b22      	ldr	r3, [pc, #136]	; (80162d8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8016250:	9607      	str	r6, [sp, #28]
 8016252:	681b      	ldr	r3, [r3, #0]
 8016254:	f88d 5020 	strb.w	r5, [sp, #32]
 8016258:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801625c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8016260:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8016264:	b10a      	cbz	r2, 801626a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8016266:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8016268:	b904      	cbnz	r4, 801626c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 801626a:	689c      	ldr	r4, [r3, #8]
 801626c:	4b1b      	ldr	r3, [pc, #108]	; (80162dc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 801626e:	6818      	ldr	r0, [r3, #0]
 8016270:	f7f4 faa2 	bl	800a7b8 <_ZNK8touchgfx5Texts7getTextEt>
 8016274:	ab07      	add	r3, sp, #28
 8016276:	9001      	str	r0, [sp, #4]
 8016278:	9300      	str	r3, [sp, #0]
 801627a:	e898 0006 	ldmia.w	r8, {r1, r2}
 801627e:	464b      	mov	r3, r9
 8016280:	4620      	mov	r0, r4
 8016282:	f7f4 fa4b 	bl	800a71c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8016286:	b00d      	add	sp, #52	; 0x34
 8016288:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801628c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8016290:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8016294:	1ad2      	subs	r2, r2, r3
 8016296:	3201      	adds	r2, #1
 8016298:	e78d      	b.n	80161b6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 801629a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801629e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80162a2:	1ad2      	subs	r2, r2, r3
 80162a4:	3201      	adds	r2, #1
 80162a6:	2002      	movs	r0, #2
 80162a8:	f8ad 3010 	strh.w	r3, [sp, #16]
 80162ac:	fb92 f2f0 	sdiv	r2, r2, r0
 80162b0:	f8ad 1012 	strh.w	r1, [sp, #18]
 80162b4:	f8ad 200c 	strh.w	r2, [sp, #12]
 80162b8:	e786      	b.n	80161c8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80162ba:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80162be:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80162c2:	1ad2      	subs	r2, r2, r3
 80162c4:	e7ef      	b.n	80162a6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 80162c6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80162c8:	e7aa      	b.n	8016220 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 80162ca:	bf00      	nop
 80162cc:	200138a8 	.word	0x200138a8
 80162d0:	200138a4 	.word	0x200138a4
 80162d4:	200138ac 	.word	0x200138ac
 80162d8:	2001384c 	.word	0x2001384c
 80162dc:	200138b0 	.word	0x200138b0

080162e0 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 80162e0:	b510      	push	{r4, lr}
 80162e2:	2101      	movs	r1, #1
 80162e4:	4c13      	ldr	r4, [pc, #76]	; (8016334 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 80162e6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80162ea:	2200      	movs	r2, #0
 80162ec:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80162f0:	6004      	str	r4, [r0, #0]
 80162f2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80162f6:	4c10      	ldr	r4, [pc, #64]	; (8016338 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 80162f8:	8082      	strh	r2, [r0, #4]
 80162fa:	80c2      	strh	r2, [r0, #6]
 80162fc:	8102      	strh	r2, [r0, #8]
 80162fe:	8142      	strh	r2, [r0, #10]
 8016300:	8182      	strh	r2, [r0, #12]
 8016302:	81c2      	strh	r2, [r0, #14]
 8016304:	8202      	strh	r2, [r0, #16]
 8016306:	8242      	strh	r2, [r0, #18]
 8016308:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801630c:	61c2      	str	r2, [r0, #28]
 801630e:	8402      	strh	r2, [r0, #32]
 8016310:	8442      	strh	r2, [r0, #34]	; 0x22
 8016312:	6282      	str	r2, [r0, #40]	; 0x28
 8016314:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8016318:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801631a:	8601      	strh	r1, [r0, #48]	; 0x30
 801631c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8016320:	6344      	str	r4, [r0, #52]	; 0x34
 8016322:	8701      	strh	r1, [r0, #56]	; 0x38
 8016324:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8016328:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 801632c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8016330:	bd10      	pop	{r4, pc}
 8016332:	bf00      	nop
 8016334:	08031ea4 	.word	0x08031ea4
 8016338:	0802f694 	.word	0x0802f694

0801633c <_ZN8touchgfx7OutlineD1Ev>:
 801633c:	4770      	bx	lr

0801633e <_ZN8touchgfx7OutlineD0Ev>:
 801633e:	b510      	push	{r4, lr}
 8016340:	2130      	movs	r1, #48	; 0x30
 8016342:	4604      	mov	r4, r0
 8016344:	f016 fcf1 	bl	802cd2a <_ZdlPvj>
 8016348:	4620      	mov	r0, r4
 801634a:	bd10      	pop	{r4, pc}

0801634c <_ZN8touchgfx7Outline5resetEv>:
 801634c:	b510      	push	{r4, lr}
 801634e:	4604      	mov	r4, r0
 8016350:	f000 fe96 	bl	8017080 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8016354:	60e0      	str	r0, [r4, #12]
 8016356:	f000 fe99 	bl	801708c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801635a:	68e3      	ldr	r3, [r4, #12]
 801635c:	6123      	str	r3, [r4, #16]
 801635e:	08c0      	lsrs	r0, r0, #3
 8016360:	2200      	movs	r2, #0
 8016362:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8016366:	3801      	subs	r0, #1
 8016368:	6060      	str	r0, [r4, #4]
 801636a:	60a2      	str	r2, [r4, #8]
 801636c:	8019      	strh	r1, [r3, #0]
 801636e:	8059      	strh	r1, [r3, #2]
 8016370:	809a      	strh	r2, [r3, #4]
 8016372:	80da      	strh	r2, [r3, #6]
 8016374:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016376:	f023 0301 	bic.w	r3, r3, #1
 801637a:	f043 0302 	orr.w	r3, r3, #2
 801637e:	6263      	str	r3, [r4, #36]	; 0x24
 8016380:	bd10      	pop	{r4, pc}
	...

08016384 <_ZN8touchgfx7OutlineC1Ev>:
 8016384:	b510      	push	{r4, lr}
 8016386:	4b0a      	ldr	r3, [pc, #40]	; (80163b0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8016388:	6003      	str	r3, [r0, #0]
 801638a:	2300      	movs	r3, #0
 801638c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8016390:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8016394:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8016398:	e9c0 3307 	strd	r3, r3, [r0, #28]
 801639c:	6243      	str	r3, [r0, #36]	; 0x24
 801639e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80163a2:	4604      	mov	r4, r0
 80163a4:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80163a8:	f7ff ffd0 	bl	801634c <_ZN8touchgfx7Outline5resetEv>
 80163ac:	4620      	mov	r0, r4
 80163ae:	bd10      	pop	{r4, pc}
 80163b0:	08031f18 	.word	0x08031f18

080163b4 <_ZN8touchgfx7Outline10renderLineEiiii>:
 80163b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80163b8:	b093      	sub	sp, #76	; 0x4c
 80163ba:	1156      	asrs	r6, r2, #5
 80163bc:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80163be:	9305      	str	r3, [sp, #20]
 80163c0:	f004 051f 	and.w	r5, r4, #31
 80163c4:	1153      	asrs	r3, r2, #5
 80163c6:	9504      	str	r5, [sp, #16]
 80163c8:	1165      	asrs	r5, r4, #5
 80163ca:	9303      	str	r3, [sp, #12]
 80163cc:	42ae      	cmp	r6, r5
 80163ce:	ea4f 1364 	mov.w	r3, r4, asr #5
 80163d2:	9306      	str	r3, [sp, #24]
 80163d4:	f002 031f 	and.w	r3, r2, #31
 80163d8:	f040 80f8 	bne.w	80165cc <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 80163dc:	9c04      	ldr	r4, [sp, #16]
 80163de:	9a05      	ldr	r2, [sp, #20]
 80163e0:	42a3      	cmp	r3, r4
 80163e2:	ea4f 1e62 	mov.w	lr, r2, asr #5
 80163e6:	6902      	ldr	r2, [r0, #16]
 80163e8:	d125      	bne.n	8016436 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 80163ea:	f9b2 3000 	ldrsh.w	r3, [r2]
 80163ee:	459e      	cmp	lr, r3
 80163f0:	d103      	bne.n	80163fa <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 80163f2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 80163f6:	429e      	cmp	r6, r3
 80163f8:	d035      	beq.n	8016466 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80163fa:	88d1      	ldrh	r1, [r2, #6]
 80163fc:	8893      	ldrh	r3, [r2, #4]
 80163fe:	430b      	orrs	r3, r1
 8016400:	d010      	beq.n	8016424 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8016402:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8016406:	2b00      	cmp	r3, #0
 8016408:	db0c      	blt.n	8016424 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801640a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801640c:	428b      	cmp	r3, r1
 801640e:	da09      	bge.n	8016424 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8016410:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8016414:	428b      	cmp	r3, r1
 8016416:	bf38      	it	cc
 8016418:	3208      	addcc	r2, #8
 801641a:	f103 0301 	add.w	r3, r3, #1
 801641e:	bf38      	it	cc
 8016420:	6102      	strcc	r2, [r0, #16]
 8016422:	6083      	str	r3, [r0, #8]
 8016424:	6903      	ldr	r3, [r0, #16]
 8016426:	9a03      	ldr	r2, [sp, #12]
 8016428:	f8a3 e000 	strh.w	lr, [r3]
 801642c:	805a      	strh	r2, [r3, #2]
 801642e:	2200      	movs	r2, #0
 8016430:	809a      	strh	r2, [r3, #4]
 8016432:	80da      	strh	r2, [r3, #6]
 8016434:	e017      	b.n	8016466 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016436:	9c05      	ldr	r4, [sp, #20]
 8016438:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801643c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8016440:	f004 041f 	and.w	r4, r4, #31
 8016444:	114e      	asrs	r6, r1, #5
 8016446:	9402      	str	r4, [sp, #8]
 8016448:	9c04      	ldr	r4, [sp, #16]
 801644a:	4576      	cmp	r6, lr
 801644c:	f001 0c1f 	and.w	ip, r1, #31
 8016450:	eba4 0403 	sub.w	r4, r4, r3
 8016454:	d10a      	bne.n	801646c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8016456:	9b02      	ldr	r3, [sp, #8]
 8016458:	449c      	add	ip, r3
 801645a:	44a0      	add	r8, r4
 801645c:	fb04 a40c 	mla	r4, r4, ip, sl
 8016460:	f8a2 8004 	strh.w	r8, [r2, #4]
 8016464:	80d4      	strh	r4, [r2, #6]
 8016466:	b013      	add	sp, #76	; 0x4c
 8016468:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801646c:	9d05      	ldr	r5, [sp, #20]
 801646e:	1a69      	subs	r1, r5, r1
 8016470:	bf5b      	ittet	pl
 8016472:	f1cc 0520 	rsbpl	r5, ip, #32
 8016476:	436c      	mulpl	r4, r5
 8016478:	2500      	movmi	r5, #0
 801647a:	2520      	movpl	r5, #32
 801647c:	bf44      	itt	mi
 801647e:	fb04 f40c 	mulmi.w	r4, r4, ip
 8016482:	4249      	negmi	r1, r1
 8016484:	9501      	str	r5, [sp, #4]
 8016486:	9f01      	ldr	r7, [sp, #4]
 8016488:	fb94 f5f1 	sdiv	r5, r4, r1
 801648c:	fb01 4415 	mls	r4, r1, r5, r4
 8016490:	bf54      	ite	pl
 8016492:	f04f 0901 	movpl.w	r9, #1
 8016496:	f04f 39ff 	movmi.w	r9, #4294967295
 801649a:	2c00      	cmp	r4, #0
 801649c:	bfb8      	it	lt
 801649e:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80164a2:	44bc      	add	ip, r7
 80164a4:	44a8      	add	r8, r5
 80164a6:	fb05 ac0c 	mla	ip, r5, ip, sl
 80164aa:	f8a2 8004 	strh.w	r8, [r2, #4]
 80164ae:	f8a2 c006 	strh.w	ip, [r2, #6]
 80164b2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80164b6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80164ba:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 80164be:	bfb8      	it	lt
 80164c0:	1864      	addlt	r4, r4, r1
 80164c2:	ea58 0202 	orrs.w	r2, r8, r2
 80164c6:	444e      	add	r6, r9
 80164c8:	d011      	beq.n	80164ee <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80164ca:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80164ce:	f1b8 0f00 	cmp.w	r8, #0
 80164d2:	db0c      	blt.n	80164ee <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80164d4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80164d6:	4590      	cmp	r8, r2
 80164d8:	da09      	bge.n	80164ee <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80164da:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 80164de:	4590      	cmp	r8, r2
 80164e0:	bf3c      	itt	cc
 80164e2:	f10c 0208 	addcc.w	r2, ip, #8
 80164e6:	6102      	strcc	r2, [r0, #16]
 80164e8:	f108 0201 	add.w	r2, r8, #1
 80164ec:	6082      	str	r2, [r0, #8]
 80164ee:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80164f2:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80164f6:	f8ac 6000 	strh.w	r6, [ip]
 80164fa:	2700      	movs	r7, #0
 80164fc:	45b6      	cmp	lr, r6
 80164fe:	f8ac 2002 	strh.w	r2, [ip, #2]
 8016502:	f8ac 7004 	strh.w	r7, [ip, #4]
 8016506:	f8ac 7006 	strh.w	r7, [ip, #6]
 801650a:	442b      	add	r3, r5
 801650c:	d04d      	beq.n	80165aa <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801650e:	9f04      	ldr	r7, [sp, #16]
 8016510:	1aff      	subs	r7, r7, r3
 8016512:	443d      	add	r5, r7
 8016514:	016d      	lsls	r5, r5, #5
 8016516:	fb95 f8f1 	sdiv	r8, r5, r1
 801651a:	fb01 5518 	mls	r5, r1, r8, r5
 801651e:	2d00      	cmp	r5, #0
 8016520:	bfb8      	it	lt
 8016522:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8016526:	f108 0701 	add.w	r7, r8, #1
 801652a:	bfb8      	it	lt
 801652c:	186d      	addlt	r5, r5, r1
 801652e:	1a64      	subs	r4, r4, r1
 8016530:	9703      	str	r7, [sp, #12]
 8016532:	f04f 0a00 	mov.w	sl, #0
 8016536:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801653a:	1964      	adds	r4, r4, r5
 801653c:	bf58      	it	pl
 801653e:	9f03      	ldrpl	r7, [sp, #12]
 8016540:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8016544:	bf48      	it	mi
 8016546:	4647      	movmi	r7, r8
 8016548:	44bb      	add	fp, r7
 801654a:	f8ac b004 	strh.w	fp, [ip, #4]
 801654e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016552:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8016556:	f8ac b006 	strh.w	fp, [ip, #6]
 801655a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801655e:	443b      	add	r3, r7
 8016560:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016564:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016568:	bf58      	it	pl
 801656a:	1a64      	subpl	r4, r4, r1
 801656c:	ea5b 0707 	orrs.w	r7, fp, r7
 8016570:	444e      	add	r6, r9
 8016572:	d011      	beq.n	8016598 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8016574:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8016578:	f1bb 0f00 	cmp.w	fp, #0
 801657c:	db0c      	blt.n	8016598 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801657e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016580:	45bb      	cmp	fp, r7
 8016582:	da09      	bge.n	8016598 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8016584:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8016588:	45bb      	cmp	fp, r7
 801658a:	bf3c      	itt	cc
 801658c:	f10c 0708 	addcc.w	r7, ip, #8
 8016590:	6107      	strcc	r7, [r0, #16]
 8016592:	f10b 0701 	add.w	r7, fp, #1
 8016596:	6087      	str	r7, [r0, #8]
 8016598:	6907      	ldr	r7, [r0, #16]
 801659a:	45b6      	cmp	lr, r6
 801659c:	803e      	strh	r6, [r7, #0]
 801659e:	807a      	strh	r2, [r7, #2]
 80165a0:	f8a7 a004 	strh.w	sl, [r7, #4]
 80165a4:	f8a7 a006 	strh.w	sl, [r7, #6]
 80165a8:	d1c5      	bne.n	8016536 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 80165aa:	9a04      	ldr	r2, [sp, #16]
 80165ac:	1ad3      	subs	r3, r2, r3
 80165ae:	6902      	ldr	r2, [r0, #16]
 80165b0:	8891      	ldrh	r1, [r2, #4]
 80165b2:	88d6      	ldrh	r6, [r2, #6]
 80165b4:	4419      	add	r1, r3
 80165b6:	8091      	strh	r1, [r2, #4]
 80165b8:	9902      	ldr	r1, [sp, #8]
 80165ba:	f101 0c20 	add.w	ip, r1, #32
 80165be:	9901      	ldr	r1, [sp, #4]
 80165c0:	ebac 0c01 	sub.w	ip, ip, r1
 80165c4:	fb03 630c 	mla	r3, r3, ip, r6
 80165c8:	80d3      	strh	r3, [r2, #6]
 80165ca:	e74c      	b.n	8016466 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80165cc:	9d05      	ldr	r5, [sp, #20]
 80165ce:	1aa2      	subs	r2, r4, r2
 80165d0:	eba5 0501 	sub.w	r5, r5, r1
 80165d4:	9508      	str	r5, [sp, #32]
 80165d6:	9202      	str	r2, [sp, #8]
 80165d8:	f140 8128 	bpl.w	801682c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 80165dc:	9a03      	ldr	r2, [sp, #12]
 80165de:	2a00      	cmp	r2, #0
 80165e0:	f6ff af41 	blt.w	8016466 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80165e4:	9a02      	ldr	r2, [sp, #8]
 80165e6:	4252      	negs	r2, r2
 80165e8:	9202      	str	r2, [sp, #8]
 80165ea:	9a06      	ldr	r2, [sp, #24]
 80165ec:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 80165f0:	f04f 34ff 	mov.w	r4, #4294967295
 80165f4:	9206      	str	r2, [sp, #24]
 80165f6:	462a      	mov	r2, r5
 80165f8:	940b      	str	r4, [sp, #44]	; 0x2c
 80165fa:	435a      	muls	r2, r3
 80165fc:	2400      	movs	r4, #0
 80165fe:	9d02      	ldr	r5, [sp, #8]
 8016600:	9401      	str	r4, [sp, #4]
 8016602:	9c02      	ldr	r4, [sp, #8]
 8016604:	fb92 f4f4 	sdiv	r4, r2, r4
 8016608:	fb05 2214 	mls	r2, r5, r4, r2
 801660c:	2a00      	cmp	r2, #0
 801660e:	9207      	str	r2, [sp, #28]
 8016610:	bfbc      	itt	lt
 8016612:	1952      	addlt	r2, r2, r5
 8016614:	9207      	strlt	r2, [sp, #28]
 8016616:	9a01      	ldr	r2, [sp, #4]
 8016618:	6905      	ldr	r5, [r0, #16]
 801661a:	bfb8      	it	lt
 801661c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8016620:	eb04 0901 	add.w	r9, r4, r1
 8016624:	429a      	cmp	r2, r3
 8016626:	ea4f 1669 	mov.w	r6, r9, asr #5
 801662a:	f040 8112 	bne.w	8016852 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801662e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8016632:	429e      	cmp	r6, r3
 8016634:	d104      	bne.n	8016640 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8016636:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801663a:	9a03      	ldr	r2, [sp, #12]
 801663c:	429a      	cmp	r2, r3
 801663e:	d01b      	beq.n	8016678 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8016640:	88ea      	ldrh	r2, [r5, #6]
 8016642:	88ab      	ldrh	r3, [r5, #4]
 8016644:	4313      	orrs	r3, r2
 8016646:	d010      	beq.n	801666a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8016648:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801664c:	2a00      	cmp	r2, #0
 801664e:	db0c      	blt.n	801666a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8016650:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8016652:	429a      	cmp	r2, r3
 8016654:	da09      	bge.n	801666a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8016656:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801665a:	429a      	cmp	r2, r3
 801665c:	bf38      	it	cc
 801665e:	3508      	addcc	r5, #8
 8016660:	f102 0201 	add.w	r2, r2, #1
 8016664:	bf38      	it	cc
 8016666:	6105      	strcc	r5, [r0, #16]
 8016668:	6082      	str	r2, [r0, #8]
 801666a:	6903      	ldr	r3, [r0, #16]
 801666c:	9a03      	ldr	r2, [sp, #12]
 801666e:	805a      	strh	r2, [r3, #2]
 8016670:	2200      	movs	r2, #0
 8016672:	801e      	strh	r6, [r3, #0]
 8016674:	809a      	strh	r2, [r3, #4]
 8016676:	80da      	strh	r2, [r3, #6]
 8016678:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801667a:	9a03      	ldr	r2, [sp, #12]
 801667c:	6901      	ldr	r1, [r0, #16]
 801667e:	441a      	add	r2, r3
 8016680:	f9b1 3000 	ldrsh.w	r3, [r1]
 8016684:	42b3      	cmp	r3, r6
 8016686:	d103      	bne.n	8016690 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8016688:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801668c:	429a      	cmp	r2, r3
 801668e:	d01a      	beq.n	80166c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8016690:	88cc      	ldrh	r4, [r1, #6]
 8016692:	888b      	ldrh	r3, [r1, #4]
 8016694:	4323      	orrs	r3, r4
 8016696:	d010      	beq.n	80166ba <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8016698:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 801669c:	2c00      	cmp	r4, #0
 801669e:	db0c      	blt.n	80166ba <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80166a0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80166a2:	429c      	cmp	r4, r3
 80166a4:	da09      	bge.n	80166ba <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80166a6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80166aa:	429c      	cmp	r4, r3
 80166ac:	bf38      	it	cc
 80166ae:	3108      	addcc	r1, #8
 80166b0:	f104 0401 	add.w	r4, r4, #1
 80166b4:	bf38      	it	cc
 80166b6:	6101      	strcc	r1, [r0, #16]
 80166b8:	6084      	str	r4, [r0, #8]
 80166ba:	6903      	ldr	r3, [r0, #16]
 80166bc:	2100      	movs	r1, #0
 80166be:	801e      	strh	r6, [r3, #0]
 80166c0:	805a      	strh	r2, [r3, #2]
 80166c2:	8099      	strh	r1, [r3, #4]
 80166c4:	80d9      	strh	r1, [r3, #6]
 80166c6:	9b06      	ldr	r3, [sp, #24]
 80166c8:	4293      	cmp	r3, r2
 80166ca:	f000 8082 	beq.w	80167d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 80166ce:	9b08      	ldr	r3, [sp, #32]
 80166d0:	9c02      	ldr	r4, [sp, #8]
 80166d2:	9902      	ldr	r1, [sp, #8]
 80166d4:	015b      	lsls	r3, r3, #5
 80166d6:	fb93 f1f1 	sdiv	r1, r3, r1
 80166da:	fb04 3311 	mls	r3, r4, r1, r3
 80166de:	2b00      	cmp	r3, #0
 80166e0:	9103      	str	r1, [sp, #12]
 80166e2:	9308      	str	r3, [sp, #32]
 80166e4:	da04      	bge.n	80166f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 80166e6:	1e4b      	subs	r3, r1, #1
 80166e8:	9303      	str	r3, [sp, #12]
 80166ea:	9b08      	ldr	r3, [sp, #32]
 80166ec:	4423      	add	r3, r4
 80166ee:	9308      	str	r3, [sp, #32]
 80166f0:	9b07      	ldr	r3, [sp, #28]
 80166f2:	9902      	ldr	r1, [sp, #8]
 80166f4:	1a5b      	subs	r3, r3, r1
 80166f6:	9307      	str	r3, [sp, #28]
 80166f8:	9b01      	ldr	r3, [sp, #4]
 80166fa:	f1c3 0320 	rsb	r3, r3, #32
 80166fe:	930e      	str	r3, [sp, #56]	; 0x38
 8016700:	990e      	ldr	r1, [sp, #56]	; 0x38
 8016702:	9b01      	ldr	r3, [sp, #4]
 8016704:	1a5b      	subs	r3, r3, r1
 8016706:	464f      	mov	r7, r9
 8016708:	930a      	str	r3, [sp, #40]	; 0x28
 801670a:	2600      	movs	r6, #0
 801670c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8016710:	185b      	adds	r3, r3, r1
 8016712:	bf58      	it	pl
 8016714:	9902      	ldrpl	r1, [sp, #8]
 8016716:	9307      	str	r3, [sp, #28]
 8016718:	bf5d      	ittte	pl
 801671a:	1a5b      	subpl	r3, r3, r1
 801671c:	9307      	strpl	r3, [sp, #28]
 801671e:	9b03      	ldrpl	r3, [sp, #12]
 8016720:	9903      	ldrmi	r1, [sp, #12]
 8016722:	bf58      	it	pl
 8016724:	1c59      	addpl	r1, r3, #1
 8016726:	4489      	add	r9, r1
 8016728:	2a00      	cmp	r2, #0
 801672a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801672e:	db2e      	blt.n	801678e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016730:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8016732:	4293      	cmp	r3, r2
 8016734:	dd2b      	ble.n	801678e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016736:	9c01      	ldr	r4, [sp, #4]
 8016738:	6905      	ldr	r5, [r0, #16]
 801673a:	46a0      	mov	r8, r4
 801673c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801673e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8016742:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8016746:	45a0      	cmp	r8, r4
 8016748:	f040 814f 	bne.w	80169ea <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 801674c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8016750:	4551      	cmp	r1, sl
 8016752:	d103      	bne.n	801675c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8016754:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8016758:	4291      	cmp	r1, r2
 801675a:	d018      	beq.n	801678e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801675c:	ea5c 010e 	orrs.w	r1, ip, lr
 8016760:	d00f      	beq.n	8016782 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8016762:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8016766:	2900      	cmp	r1, #0
 8016768:	db0b      	blt.n	8016782 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801676a:	428b      	cmp	r3, r1
 801676c:	dd09      	ble.n	8016782 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801676e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8016772:	4299      	cmp	r1, r3
 8016774:	bf38      	it	cc
 8016776:	3508      	addcc	r5, #8
 8016778:	f101 0101 	add.w	r1, r1, #1
 801677c:	bf38      	it	cc
 801677e:	6105      	strcc	r5, [r0, #16]
 8016780:	6081      	str	r1, [r0, #8]
 8016782:	6903      	ldr	r3, [r0, #16]
 8016784:	f8a3 a000 	strh.w	sl, [r3]
 8016788:	805a      	strh	r2, [r3, #2]
 801678a:	809e      	strh	r6, [r3, #4]
 801678c:	80de      	strh	r6, [r3, #6]
 801678e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016790:	6901      	ldr	r1, [r0, #16]
 8016792:	441a      	add	r2, r3
 8016794:	88cc      	ldrh	r4, [r1, #6]
 8016796:	888b      	ldrh	r3, [r1, #4]
 8016798:	4323      	orrs	r3, r4
 801679a:	d010      	beq.n	80167be <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801679c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80167a0:	2c00      	cmp	r4, #0
 80167a2:	db0c      	blt.n	80167be <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80167a4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80167a6:	429c      	cmp	r4, r3
 80167a8:	da09      	bge.n	80167be <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80167aa:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80167ae:	429c      	cmp	r4, r3
 80167b0:	bf38      	it	cc
 80167b2:	3108      	addcc	r1, #8
 80167b4:	f104 0401 	add.w	r4, r4, #1
 80167b8:	bf38      	it	cc
 80167ba:	6101      	strcc	r1, [r0, #16]
 80167bc:	6084      	str	r4, [r0, #8]
 80167be:	6903      	ldr	r3, [r0, #16]
 80167c0:	f8a3 a000 	strh.w	sl, [r3]
 80167c4:	805a      	strh	r2, [r3, #2]
 80167c6:	809e      	strh	r6, [r3, #4]
 80167c8:	80de      	strh	r6, [r3, #6]
 80167ca:	9b06      	ldr	r3, [sp, #24]
 80167cc:	4293      	cmp	r3, r2
 80167ce:	464f      	mov	r7, r9
 80167d0:	d19c      	bne.n	801670c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 80167d2:	9b01      	ldr	r3, [sp, #4]
 80167d4:	6907      	ldr	r7, [r0, #16]
 80167d6:	f1c3 0620 	rsb	r6, r3, #32
 80167da:	9b05      	ldr	r3, [sp, #20]
 80167dc:	ea4f 1e63 	mov.w	lr, r3, asr #5
 80167e0:	9b04      	ldr	r3, [sp, #16]
 80167e2:	429e      	cmp	r6, r3
 80167e4:	f040 81cc 	bne.w	8016b80 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 80167e8:	f9b7 3000 	ldrsh.w	r3, [r7]
 80167ec:	459e      	cmp	lr, r3
 80167ee:	d104      	bne.n	80167fa <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 80167f0:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80167f4:	429a      	cmp	r2, r3
 80167f6:	f43f ae36 	beq.w	8016466 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80167fa:	88f9      	ldrh	r1, [r7, #6]
 80167fc:	88bb      	ldrh	r3, [r7, #4]
 80167fe:	430b      	orrs	r3, r1
 8016800:	d010      	beq.n	8016824 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8016802:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8016806:	2b00      	cmp	r3, #0
 8016808:	db0c      	blt.n	8016824 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801680a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801680c:	428b      	cmp	r3, r1
 801680e:	da09      	bge.n	8016824 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8016810:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8016814:	428b      	cmp	r3, r1
 8016816:	bf38      	it	cc
 8016818:	3708      	addcc	r7, #8
 801681a:	f103 0301 	add.w	r3, r3, #1
 801681e:	bf38      	it	cc
 8016820:	6107      	strcc	r7, [r0, #16]
 8016822:	6083      	str	r3, [r0, #8]
 8016824:	6903      	ldr	r3, [r0, #16]
 8016826:	f8a3 e000 	strh.w	lr, [r3]
 801682a:	e5ff      	b.n	801642c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 801682c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801682e:	9c03      	ldr	r4, [sp, #12]
 8016830:	42a2      	cmp	r2, r4
 8016832:	f6ff ae18 	blt.w	8016466 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016836:	9c06      	ldr	r4, [sp, #24]
 8016838:	42a2      	cmp	r2, r4
 801683a:	bfb8      	it	lt
 801683c:	3201      	addlt	r2, #1
 801683e:	9c08      	ldr	r4, [sp, #32]
 8016840:	bfb8      	it	lt
 8016842:	9206      	strlt	r2, [sp, #24]
 8016844:	f1c3 0220 	rsb	r2, r3, #32
 8016848:	4362      	muls	r2, r4
 801684a:	2401      	movs	r4, #1
 801684c:	940b      	str	r4, [sp, #44]	; 0x2c
 801684e:	2420      	movs	r4, #32
 8016850:	e6d5      	b.n	80165fe <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8016852:	f009 021f 	and.w	r2, r9, #31
 8016856:	ea4f 1861 	mov.w	r8, r1, asr #5
 801685a:	920c      	str	r2, [sp, #48]	; 0x30
 801685c:	9a01      	ldr	r2, [sp, #4]
 801685e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8016862:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8016866:	45b0      	cmp	r8, r6
 8016868:	f001 011f 	and.w	r1, r1, #31
 801686c:	eba2 0203 	sub.w	r2, r2, r3
 8016870:	d108      	bne.n	8016884 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8016872:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016874:	4419      	add	r1, r3
 8016876:	4496      	add	lr, r2
 8016878:	fb02 a101 	mla	r1, r2, r1, sl
 801687c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8016880:	80e9      	strh	r1, [r5, #6]
 8016882:	e6f9      	b.n	8016678 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8016884:	2c00      	cmp	r4, #0
 8016886:	f2c0 80a9 	blt.w	80169dc <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 801688a:	2701      	movs	r7, #1
 801688c:	f1c1 0c20 	rsb	ip, r1, #32
 8016890:	970a      	str	r7, [sp, #40]	; 0x28
 8016892:	fb02 f20c 	mul.w	r2, r2, ip
 8016896:	2720      	movs	r7, #32
 8016898:	9709      	str	r7, [sp, #36]	; 0x24
 801689a:	fb92 fcf4 	sdiv	ip, r2, r4
 801689e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80168a0:	fb04 221c 	mls	r2, r4, ip, r2
 80168a4:	2a00      	cmp	r2, #0
 80168a6:	bfb8      	it	lt
 80168a8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 80168ac:	4439      	add	r1, r7
 80168ae:	fb0c a101 	mla	r1, ip, r1, sl
 80168b2:	80e9      	strh	r1, [r5, #6]
 80168b4:	44e6      	add	lr, ip
 80168b6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80168b8:	f8a5 e004 	strh.w	lr, [r5, #4]
 80168bc:	eb08 0501 	add.w	r5, r8, r1
 80168c0:	6901      	ldr	r1, [r0, #16]
 80168c2:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 80168c6:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 80168ca:	bfb8      	it	lt
 80168cc:	1912      	addlt	r2, r2, r4
 80168ce:	ea58 070e 	orrs.w	r7, r8, lr
 80168d2:	d010      	beq.n	80168f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80168d4:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 80168d8:	f1be 0f00 	cmp.w	lr, #0
 80168dc:	db0b      	blt.n	80168f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80168de:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80168e0:	45be      	cmp	lr, r7
 80168e2:	da08      	bge.n	80168f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80168e4:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80168e8:	45be      	cmp	lr, r7
 80168ea:	bf3c      	itt	cc
 80168ec:	3108      	addcc	r1, #8
 80168ee:	6101      	strcc	r1, [r0, #16]
 80168f0:	f10e 0101 	add.w	r1, lr, #1
 80168f4:	6081      	str	r1, [r0, #8]
 80168f6:	6901      	ldr	r1, [r0, #16]
 80168f8:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80168fc:	800d      	strh	r5, [r1, #0]
 80168fe:	f04f 0e00 	mov.w	lr, #0
 8016902:	42ae      	cmp	r6, r5
 8016904:	f8a1 8002 	strh.w	r8, [r1, #2]
 8016908:	f8a1 e004 	strh.w	lr, [r1, #4]
 801690c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8016910:	4463      	add	r3, ip
 8016912:	d054      	beq.n	80169be <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8016914:	9901      	ldr	r1, [sp, #4]
 8016916:	1ac9      	subs	r1, r1, r3
 8016918:	4461      	add	r1, ip
 801691a:	0149      	lsls	r1, r1, #5
 801691c:	fb91 fef4 	sdiv	lr, r1, r4
 8016920:	fb04 111e 	mls	r1, r4, lr, r1
 8016924:	2900      	cmp	r1, #0
 8016926:	bfb8      	it	lt
 8016928:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801692c:	f10e 0701 	add.w	r7, lr, #1
 8016930:	bfb8      	it	lt
 8016932:	1909      	addlt	r1, r1, r4
 8016934:	1b12      	subs	r2, r2, r4
 8016936:	970d      	str	r7, [sp, #52]	; 0x34
 8016938:	f8d0 a010 	ldr.w	sl, [r0, #16]
 801693c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801693e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8016942:	1852      	adds	r2, r2, r1
 8016944:	bf54      	ite	pl
 8016946:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 801694a:	46f4      	movmi	ip, lr
 801694c:	44e3      	add	fp, ip
 801694e:	f8aa b004 	strh.w	fp, [sl, #4]
 8016952:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8016956:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 801695a:	f8aa b006 	strh.w	fp, [sl, #6]
 801695e:	4463      	add	r3, ip
 8016960:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016964:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016968:	f8bc a004 	ldrh.w	sl, [ip, #4]
 801696c:	bf58      	it	pl
 801696e:	1b12      	subpl	r2, r2, r4
 8016970:	443d      	add	r5, r7
 8016972:	ea5b 070a 	orrs.w	r7, fp, sl
 8016976:	d014      	beq.n	80169a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8016978:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 801697c:	f1ba 0f00 	cmp.w	sl, #0
 8016980:	db0f      	blt.n	80169a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8016982:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016984:	45ba      	cmp	sl, r7
 8016986:	da0c      	bge.n	80169a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8016988:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 801698c:	45ba      	cmp	sl, r7
 801698e:	bf38      	it	cc
 8016990:	f10c 0c08 	addcc.w	ip, ip, #8
 8016994:	f10a 0a01 	add.w	sl, sl, #1
 8016998:	bf38      	it	cc
 801699a:	f8c0 c010 	strcc.w	ip, [r0, #16]
 801699e:	f8c0 a008 	str.w	sl, [r0, #8]
 80169a2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80169a6:	f04f 0700 	mov.w	r7, #0
 80169aa:	42ae      	cmp	r6, r5
 80169ac:	f8ac 5000 	strh.w	r5, [ip]
 80169b0:	f8ac 8002 	strh.w	r8, [ip, #2]
 80169b4:	f8ac 7004 	strh.w	r7, [ip, #4]
 80169b8:	f8ac 7006 	strh.w	r7, [ip, #6]
 80169bc:	d1bc      	bne.n	8016938 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 80169be:	6904      	ldr	r4, [r0, #16]
 80169c0:	9a01      	ldr	r2, [sp, #4]
 80169c2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80169c4:	1ad3      	subs	r3, r2, r3
 80169c6:	88a2      	ldrh	r2, [r4, #4]
 80169c8:	441a      	add	r2, r3
 80169ca:	80a2      	strh	r2, [r4, #4]
 80169cc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80169ce:	3120      	adds	r1, #32
 80169d0:	1a89      	subs	r1, r1, r2
 80169d2:	88e2      	ldrh	r2, [r4, #6]
 80169d4:	fb03 2301 	mla	r3, r3, r1, r2
 80169d8:	80e3      	strh	r3, [r4, #6]
 80169da:	e64d      	b.n	8016678 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80169dc:	f04f 37ff 	mov.w	r7, #4294967295
 80169e0:	970a      	str	r7, [sp, #40]	; 0x28
 80169e2:	434a      	muls	r2, r1
 80169e4:	4264      	negs	r4, r4
 80169e6:	2700      	movs	r7, #0
 80169e8:	e756      	b.n	8016898 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 80169ea:	ea4f 1867 	mov.w	r8, r7, asr #5
 80169ee:	f009 031f 	and.w	r3, r9, #31
 80169f2:	45d0      	cmp	r8, sl
 80169f4:	f007 071f 	and.w	r7, r7, #31
 80169f8:	930f      	str	r3, [sp, #60]	; 0x3c
 80169fa:	fa1f fc8c 	uxth.w	ip, ip
 80169fe:	fa1f fe8e 	uxth.w	lr, lr
 8016a02:	d10a      	bne.n	8016a1a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8016a04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016a06:	449c      	add	ip, r3
 8016a08:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016a0a:	f8a5 c004 	strh.w	ip, [r5, #4]
 8016a0e:	441f      	add	r7, r3
 8016a10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016a12:	fb03 e707 	mla	r7, r3, r7, lr
 8016a16:	80ef      	strh	r7, [r5, #6]
 8016a18:	e6b9      	b.n	801678e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016a1a:	2900      	cmp	r1, #0
 8016a1c:	f2c0 80a8 	blt.w	8016b70 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8016a20:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016a22:	f1c7 0320 	rsb	r3, r7, #32
 8016a26:	4363      	muls	r3, r4
 8016a28:	2401      	movs	r4, #1
 8016a2a:	940d      	str	r4, [sp, #52]	; 0x34
 8016a2c:	2420      	movs	r4, #32
 8016a2e:	940c      	str	r4, [sp, #48]	; 0x30
 8016a30:	fb93 f4f1 	sdiv	r4, r3, r1
 8016a34:	fb01 3b14 	mls	fp, r1, r4, r3
 8016a38:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016a3a:	f1bb 0f00 	cmp.w	fp, #0
 8016a3e:	bfb8      	it	lt
 8016a40:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8016a44:	441f      	add	r7, r3
 8016a46:	fb04 e707 	mla	r7, r4, r7, lr
 8016a4a:	44a4      	add	ip, r4
 8016a4c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8016a50:	80ef      	strh	r7, [r5, #6]
 8016a52:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016a56:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016a58:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8016a5c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016a60:	bfb8      	it	lt
 8016a62:	448b      	addlt	fp, r1
 8016a64:	eb08 0503 	add.w	r5, r8, r3
 8016a68:	ea5e 0307 	orrs.w	r3, lr, r7
 8016a6c:	d011      	beq.n	8016a92 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8016a6e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8016a72:	f1be 0f00 	cmp.w	lr, #0
 8016a76:	db0c      	blt.n	8016a92 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8016a78:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016a7a:	45be      	cmp	lr, r7
 8016a7c:	da09      	bge.n	8016a92 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8016a7e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8016a82:	45be      	cmp	lr, r7
 8016a84:	bf3c      	itt	cc
 8016a86:	f10c 0708 	addcc.w	r7, ip, #8
 8016a8a:	6107      	strcc	r7, [r0, #16]
 8016a8c:	f10e 0701 	add.w	r7, lr, #1
 8016a90:	6087      	str	r7, [r0, #8]
 8016a92:	6907      	ldr	r7, [r0, #16]
 8016a94:	b213      	sxth	r3, r2
 8016a96:	9310      	str	r3, [sp, #64]	; 0x40
 8016a98:	807b      	strh	r3, [r7, #2]
 8016a9a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016a9c:	803d      	strh	r5, [r7, #0]
 8016a9e:	4555      	cmp	r5, sl
 8016aa0:	80be      	strh	r6, [r7, #4]
 8016aa2:	80fe      	strh	r6, [r7, #6]
 8016aa4:	eb04 0c03 	add.w	ip, r4, r3
 8016aa8:	d051      	beq.n	8016b4e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8016aaa:	9b01      	ldr	r3, [sp, #4]
 8016aac:	eba3 070c 	sub.w	r7, r3, ip
 8016ab0:	443c      	add	r4, r7
 8016ab2:	0164      	lsls	r4, r4, #5
 8016ab4:	fb94 f8f1 	sdiv	r8, r4, r1
 8016ab8:	fb01 4418 	mls	r4, r1, r8, r4
 8016abc:	2c00      	cmp	r4, #0
 8016abe:	bfb8      	it	lt
 8016ac0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8016ac4:	ebab 0301 	sub.w	r3, fp, r1
 8016ac8:	f108 0701 	add.w	r7, r8, #1
 8016acc:	bfb8      	it	lt
 8016ace:	1864      	addlt	r4, r4, r1
 8016ad0:	9309      	str	r3, [sp, #36]	; 0x24
 8016ad2:	9711      	str	r7, [sp, #68]	; 0x44
 8016ad4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016ad6:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8016ada:	191b      	adds	r3, r3, r4
 8016adc:	bf58      	it	pl
 8016ade:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8016ae0:	f8be b004 	ldrh.w	fp, [lr, #4]
 8016ae4:	9309      	str	r3, [sp, #36]	; 0x24
 8016ae6:	bf48      	it	mi
 8016ae8:	4647      	movmi	r7, r8
 8016aea:	44bb      	add	fp, r7
 8016aec:	f8ae b004 	strh.w	fp, [lr, #4]
 8016af0:	f8be b006 	ldrh.w	fp, [lr, #6]
 8016af4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8016af8:	f8ae b006 	strh.w	fp, [lr, #6]
 8016afc:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8016b00:	44bc      	add	ip, r7
 8016b02:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8016b04:	f8be b006 	ldrh.w	fp, [lr, #6]
 8016b08:	443d      	add	r5, r7
 8016b0a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8016b0e:	bf5c      	itt	pl
 8016b10:	1a5b      	subpl	r3, r3, r1
 8016b12:	9309      	strpl	r3, [sp, #36]	; 0x24
 8016b14:	ea5b 0307 	orrs.w	r3, fp, r7
 8016b18:	d011      	beq.n	8016b3e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8016b1a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8016b1e:	f1bb 0f00 	cmp.w	fp, #0
 8016b22:	db0c      	blt.n	8016b3e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8016b24:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016b26:	45bb      	cmp	fp, r7
 8016b28:	da09      	bge.n	8016b3e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8016b2a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8016b2e:	45bb      	cmp	fp, r7
 8016b30:	bf3c      	itt	cc
 8016b32:	f10e 0708 	addcc.w	r7, lr, #8
 8016b36:	6107      	strcc	r7, [r0, #16]
 8016b38:	f10b 0701 	add.w	r7, fp, #1
 8016b3c:	6087      	str	r7, [r0, #8]
 8016b3e:	6907      	ldr	r7, [r0, #16]
 8016b40:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016b42:	803d      	strh	r5, [r7, #0]
 8016b44:	4555      	cmp	r5, sl
 8016b46:	807b      	strh	r3, [r7, #2]
 8016b48:	80be      	strh	r6, [r7, #4]
 8016b4a:	80fe      	strh	r6, [r7, #6]
 8016b4c:	d1c2      	bne.n	8016ad4 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8016b4e:	9b01      	ldr	r3, [sp, #4]
 8016b50:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016b52:	eba3 0c0c 	sub.w	ip, r3, ip
 8016b56:	6903      	ldr	r3, [r0, #16]
 8016b58:	8899      	ldrh	r1, [r3, #4]
 8016b5a:	4461      	add	r1, ip
 8016b5c:	8099      	strh	r1, [r3, #4]
 8016b5e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016b60:	3720      	adds	r7, #32
 8016b62:	1a7f      	subs	r7, r7, r1
 8016b64:	88d9      	ldrh	r1, [r3, #6]
 8016b66:	fb0c 1c07 	mla	ip, ip, r7, r1
 8016b6a:	f8a3 c006 	strh.w	ip, [r3, #6]
 8016b6e:	e60e      	b.n	801678e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016b70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016b72:	f04f 34ff 	mov.w	r4, #4294967295
 8016b76:	940d      	str	r4, [sp, #52]	; 0x34
 8016b78:	437b      	muls	r3, r7
 8016b7a:	4249      	negs	r1, r1
 8016b7c:	2400      	movs	r4, #0
 8016b7e:	e756      	b.n	8016a2e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8016b80:	9905      	ldr	r1, [sp, #20]
 8016b82:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8016b86:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8016b8a:	f001 011f 	and.w	r1, r1, #31
 8016b8e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8016b92:	9102      	str	r1, [sp, #8]
 8016b94:	9904      	ldr	r1, [sp, #16]
 8016b96:	45f3      	cmp	fp, lr
 8016b98:	f009 0c1f 	and.w	ip, r9, #31
 8016b9c:	eba1 0406 	sub.w	r4, r1, r6
 8016ba0:	d108      	bne.n	8016bb4 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8016ba2:	9b02      	ldr	r3, [sp, #8]
 8016ba4:	449c      	add	ip, r3
 8016ba6:	44a0      	add	r8, r4
 8016ba8:	fb04 a40c 	mla	r4, r4, ip, sl
 8016bac:	f8a7 8004 	strh.w	r8, [r7, #4]
 8016bb0:	80fc      	strh	r4, [r7, #6]
 8016bb2:	e458      	b.n	8016466 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016bb4:	9905      	ldr	r1, [sp, #20]
 8016bb6:	ebb1 0109 	subs.w	r1, r1, r9
 8016bba:	bf5b      	ittet	pl
 8016bbc:	f1cc 0520 	rsbpl	r5, ip, #32
 8016bc0:	436c      	mulpl	r4, r5
 8016bc2:	2500      	movmi	r5, #0
 8016bc4:	2520      	movpl	r5, #32
 8016bc6:	bf44      	itt	mi
 8016bc8:	fb04 f40c 	mulmi.w	r4, r4, ip
 8016bcc:	4249      	negmi	r1, r1
 8016bce:	9501      	str	r5, [sp, #4]
 8016bd0:	9b01      	ldr	r3, [sp, #4]
 8016bd2:	fb94 f5f1 	sdiv	r5, r4, r1
 8016bd6:	fb01 4415 	mls	r4, r1, r5, r4
 8016bda:	bf54      	ite	pl
 8016bdc:	f04f 0901 	movpl.w	r9, #1
 8016be0:	f04f 39ff 	movmi.w	r9, #4294967295
 8016be4:	2c00      	cmp	r4, #0
 8016be6:	bfb8      	it	lt
 8016be8:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8016bec:	449c      	add	ip, r3
 8016bee:	44a8      	add	r8, r5
 8016bf0:	fb05 ac0c 	mla	ip, r5, ip, sl
 8016bf4:	f8a7 8004 	strh.w	r8, [r7, #4]
 8016bf8:	f8a7 c006 	strh.w	ip, [r7, #6]
 8016bfc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016c00:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8016c04:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016c08:	bfb8      	it	lt
 8016c0a:	1864      	addlt	r4, r4, r1
 8016c0c:	ea58 0707 	orrs.w	r7, r8, r7
 8016c10:	eb0b 0309 	add.w	r3, fp, r9
 8016c14:	d011      	beq.n	8016c3a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8016c16:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8016c1a:	f1b8 0f00 	cmp.w	r8, #0
 8016c1e:	db0c      	blt.n	8016c3a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8016c20:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016c22:	45b8      	cmp	r8, r7
 8016c24:	da09      	bge.n	8016c3a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8016c26:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8016c2a:	45b8      	cmp	r8, r7
 8016c2c:	bf3c      	itt	cc
 8016c2e:	f10c 0708 	addcc.w	r7, ip, #8
 8016c32:	6107      	strcc	r7, [r0, #16]
 8016c34:	f108 0701 	add.w	r7, r8, #1
 8016c38:	6087      	str	r7, [r0, #8]
 8016c3a:	6907      	ldr	r7, [r0, #16]
 8016c3c:	f04f 0c00 	mov.w	ip, #0
 8016c40:	b212      	sxth	r2, r2
 8016c42:	459e      	cmp	lr, r3
 8016c44:	803b      	strh	r3, [r7, #0]
 8016c46:	807a      	strh	r2, [r7, #2]
 8016c48:	f8a7 c004 	strh.w	ip, [r7, #4]
 8016c4c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8016c50:	442e      	add	r6, r5
 8016c52:	d04d      	beq.n	8016cf0 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8016c54:	9f04      	ldr	r7, [sp, #16]
 8016c56:	1bbf      	subs	r7, r7, r6
 8016c58:	443d      	add	r5, r7
 8016c5a:	016d      	lsls	r5, r5, #5
 8016c5c:	fb95 f8f1 	sdiv	r8, r5, r1
 8016c60:	fb01 5518 	mls	r5, r1, r8, r5
 8016c64:	4565      	cmp	r5, ip
 8016c66:	bfb8      	it	lt
 8016c68:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8016c6c:	f108 0701 	add.w	r7, r8, #1
 8016c70:	bfb8      	it	lt
 8016c72:	186d      	addlt	r5, r5, r1
 8016c74:	1a64      	subs	r4, r4, r1
 8016c76:	9703      	str	r7, [sp, #12]
 8016c78:	f04f 0a00 	mov.w	sl, #0
 8016c7c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016c80:	1964      	adds	r4, r4, r5
 8016c82:	bf58      	it	pl
 8016c84:	9f03      	ldrpl	r7, [sp, #12]
 8016c86:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8016c8a:	bf48      	it	mi
 8016c8c:	4647      	movmi	r7, r8
 8016c8e:	44bb      	add	fp, r7
 8016c90:	f8ac b004 	strh.w	fp, [ip, #4]
 8016c94:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016c98:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8016c9c:	f8ac b006 	strh.w	fp, [ip, #6]
 8016ca0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016ca4:	443e      	add	r6, r7
 8016ca6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016caa:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016cae:	bf58      	it	pl
 8016cb0:	1a64      	subpl	r4, r4, r1
 8016cb2:	ea5b 0707 	orrs.w	r7, fp, r7
 8016cb6:	444b      	add	r3, r9
 8016cb8:	d011      	beq.n	8016cde <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8016cba:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8016cbe:	f1bb 0f00 	cmp.w	fp, #0
 8016cc2:	db0c      	blt.n	8016cde <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8016cc4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016cc6:	45bb      	cmp	fp, r7
 8016cc8:	da09      	bge.n	8016cde <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8016cca:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8016cce:	45bb      	cmp	fp, r7
 8016cd0:	bf3c      	itt	cc
 8016cd2:	f10c 0708 	addcc.w	r7, ip, #8
 8016cd6:	6107      	strcc	r7, [r0, #16]
 8016cd8:	f10b 0701 	add.w	r7, fp, #1
 8016cdc:	6087      	str	r7, [r0, #8]
 8016cde:	6907      	ldr	r7, [r0, #16]
 8016ce0:	459e      	cmp	lr, r3
 8016ce2:	803b      	strh	r3, [r7, #0]
 8016ce4:	807a      	strh	r2, [r7, #2]
 8016ce6:	f8a7 a004 	strh.w	sl, [r7, #4]
 8016cea:	f8a7 a006 	strh.w	sl, [r7, #6]
 8016cee:	d1c5      	bne.n	8016c7c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8016cf0:	9b04      	ldr	r3, [sp, #16]
 8016cf2:	1b9e      	subs	r6, r3, r6
 8016cf4:	6903      	ldr	r3, [r0, #16]
 8016cf6:	889a      	ldrh	r2, [r3, #4]
 8016cf8:	4432      	add	r2, r6
 8016cfa:	809a      	strh	r2, [r3, #4]
 8016cfc:	9a02      	ldr	r2, [sp, #8]
 8016cfe:	f102 0c20 	add.w	ip, r2, #32
 8016d02:	9a01      	ldr	r2, [sp, #4]
 8016d04:	ebac 0c02 	sub.w	ip, ip, r2
 8016d08:	88da      	ldrh	r2, [r3, #6]
 8016d0a:	fb06 260c 	mla	r6, r6, ip, r2
 8016d0e:	80de      	strh	r6, [r3, #6]
 8016d10:	f7ff bba9 	b.w	8016466 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08016d14 <_ZN8touchgfx7Outline6lineToEii>:
 8016d14:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016d16:	079b      	lsls	r3, r3, #30
 8016d18:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8016d1a:	460e      	mov	r6, r1
 8016d1c:	4615      	mov	r5, r2
 8016d1e:	d511      	bpl.n	8016d44 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8016d20:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8016d24:	ea86 0701 	eor.w	r7, r6, r1
 8016d28:	ea85 0302 	eor.w	r3, r5, r2
 8016d2c:	433b      	orrs	r3, r7
 8016d2e:	d009      	beq.n	8016d44 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8016d30:	4633      	mov	r3, r6
 8016d32:	9500      	str	r5, [sp, #0]
 8016d34:	f7ff fb3e 	bl	80163b4 <_ZN8touchgfx7Outline10renderLineEiiii>
 8016d38:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016d3a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8016d3e:	f043 0301 	orr.w	r3, r3, #1
 8016d42:	6243      	str	r3, [r0, #36]	; 0x24
 8016d44:	b003      	add	sp, #12
 8016d46:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016d48 <_ZN8touchgfx7Outline6moveToEii>:
 8016d48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016d4a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016d4c:	4615      	mov	r5, r2
 8016d4e:	079a      	lsls	r2, r3, #30
 8016d50:	4604      	mov	r4, r0
 8016d52:	460e      	mov	r6, r1
 8016d54:	d401      	bmi.n	8016d5a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8016d56:	f7ff faf9 	bl	801634c <_ZN8touchgfx7Outline5resetEv>
 8016d5a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016d5c:	07db      	lsls	r3, r3, #31
 8016d5e:	d504      	bpl.n	8016d6a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8016d60:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8016d64:	4620      	mov	r0, r4
 8016d66:	f7ff ffd5 	bl	8016d14 <_ZN8touchgfx7Outline6lineToEii>
 8016d6a:	6923      	ldr	r3, [r4, #16]
 8016d6c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016d70:	1170      	asrs	r0, r6, #5
 8016d72:	4290      	cmp	r0, r2
 8016d74:	ea4f 1165 	mov.w	r1, r5, asr #5
 8016d78:	d103      	bne.n	8016d82 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8016d7a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8016d7e:	4291      	cmp	r1, r2
 8016d80:	d01a      	beq.n	8016db8 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8016d82:	88df      	ldrh	r7, [r3, #6]
 8016d84:	889a      	ldrh	r2, [r3, #4]
 8016d86:	433a      	orrs	r2, r7
 8016d88:	d010      	beq.n	8016dac <_ZN8touchgfx7Outline6moveToEii+0x64>
 8016d8a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8016d8e:	2a00      	cmp	r2, #0
 8016d90:	db0c      	blt.n	8016dac <_ZN8touchgfx7Outline6moveToEii+0x64>
 8016d92:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8016d94:	42ba      	cmp	r2, r7
 8016d96:	da09      	bge.n	8016dac <_ZN8touchgfx7Outline6moveToEii+0x64>
 8016d98:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8016d9c:	42ba      	cmp	r2, r7
 8016d9e:	bf38      	it	cc
 8016da0:	3308      	addcc	r3, #8
 8016da2:	f102 0201 	add.w	r2, r2, #1
 8016da6:	bf38      	it	cc
 8016da8:	6123      	strcc	r3, [r4, #16]
 8016daa:	60a2      	str	r2, [r4, #8]
 8016dac:	6923      	ldr	r3, [r4, #16]
 8016dae:	2200      	movs	r2, #0
 8016db0:	8018      	strh	r0, [r3, #0]
 8016db2:	8059      	strh	r1, [r3, #2]
 8016db4:	809a      	strh	r2, [r3, #4]
 8016db6:	80da      	strh	r2, [r3, #6]
 8016db8:	6166      	str	r6, [r4, #20]
 8016dba:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8016dbe:	6225      	str	r5, [r4, #32]
 8016dc0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08016dc2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8016dc2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016dc6:	b0d0      	sub	sp, #320	; 0x140
 8016dc8:	466c      	mov	r4, sp
 8016dca:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8016dce:	4627      	mov	r7, r4
 8016dd0:	1a0d      	subs	r5, r1, r0
 8016dd2:	2d48      	cmp	r5, #72	; 0x48
 8016dd4:	f100 0308 	add.w	r3, r0, #8
 8016dd8:	f340 80d5 	ble.w	8016f86 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8016ddc:	112d      	asrs	r5, r5, #4
 8016dde:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8016de2:	f9b0 9000 	ldrsh.w	r9, [r0]
 8016de6:	6816      	ldr	r6, [r2, #0]
 8016de8:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8016dec:	6006      	str	r6, [r0, #0]
 8016dee:	6856      	ldr	r6, [r2, #4]
 8016df0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8016df4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8016df8:	6046      	str	r6, [r0, #4]
 8016dfa:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8016dfe:	f8a2 8002 	strh.w	r8, [r2, #2]
 8016e02:	f8a2 e004 	strh.w	lr, [r2, #4]
 8016e06:	f8a2 c006 	strh.w	ip, [r2, #6]
 8016e0a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8016e0e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8016e12:	4565      	cmp	r5, ip
 8016e14:	f1a1 0208 	sub.w	r2, r1, #8
 8016e18:	db06      	blt.n	8016e28 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8016e1a:	d119      	bne.n	8016e50 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8016e1c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8016e20:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8016e24:	42ae      	cmp	r6, r5
 8016e26:	dd13      	ble.n	8016e50 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8016e28:	460e      	mov	r6, r1
 8016e2a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8016e2e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8016e32:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8016e36:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8016e3a:	601d      	str	r5, [r3, #0]
 8016e3c:	6875      	ldr	r5, [r6, #4]
 8016e3e:	605d      	str	r5, [r3, #4]
 8016e40:	f821 9c08 	strh.w	r9, [r1, #-8]
 8016e44:	f821 cc06 	strh.w	ip, [r1, #-6]
 8016e48:	f821 8c04 	strh.w	r8, [r1, #-4]
 8016e4c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8016e50:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8016e54:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8016e58:	42ae      	cmp	r6, r5
 8016e5a:	db06      	blt.n	8016e6a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8016e5c:	d116      	bne.n	8016e8c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8016e5e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8016e62:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8016e66:	45ac      	cmp	ip, r5
 8016e68:	da10      	bge.n	8016e8c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8016e6a:	681d      	ldr	r5, [r3, #0]
 8016e6c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8016e70:	6005      	str	r5, [r0, #0]
 8016e72:	685d      	ldr	r5, [r3, #4]
 8016e74:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8016e78:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8016e7c:	f8a0 8008 	strh.w	r8, [r0, #8]
 8016e80:	6045      	str	r5, [r0, #4]
 8016e82:	8146      	strh	r6, [r0, #10]
 8016e84:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8016e88:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8016e8c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8016e90:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8016e94:	4565      	cmp	r5, ip
 8016e96:	db06      	blt.n	8016ea6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8016e98:	d119      	bne.n	8016ece <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016e9a:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8016e9e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8016ea2:	42ae      	cmp	r6, r5
 8016ea4:	da13      	bge.n	8016ece <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016ea6:	460e      	mov	r6, r1
 8016ea8:	f9b0 9000 	ldrsh.w	r9, [r0]
 8016eac:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8016eb0:	6005      	str	r5, [r0, #0]
 8016eb2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8016eb6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8016eba:	6875      	ldr	r5, [r6, #4]
 8016ebc:	6045      	str	r5, [r0, #4]
 8016ebe:	f821 9c08 	strh.w	r9, [r1, #-8]
 8016ec2:	f821 cc06 	strh.w	ip, [r1, #-6]
 8016ec6:	f821 8c04 	strh.w	r8, [r1, #-4]
 8016eca:	f821 ec02 	strh.w	lr, [r1, #-2]
 8016ece:	3308      	adds	r3, #8
 8016ed0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8016ed4:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8016ed8:	45e6      	cmp	lr, ip
 8016eda:	dbf8      	blt.n	8016ece <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016edc:	d105      	bne.n	8016eea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8016ede:	f9b3 6000 	ldrsh.w	r6, [r3]
 8016ee2:	f9b0 5000 	ldrsh.w	r5, [r0]
 8016ee6:	42ae      	cmp	r6, r5
 8016ee8:	dbf1      	blt.n	8016ece <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016eea:	4615      	mov	r5, r2
 8016eec:	3a08      	subs	r2, #8
 8016eee:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8016ef2:	45b4      	cmp	ip, r6
 8016ef4:	dbf9      	blt.n	8016eea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8016ef6:	d105      	bne.n	8016f04 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8016ef8:	f9b0 8000 	ldrsh.w	r8, [r0]
 8016efc:	f9b2 6000 	ldrsh.w	r6, [r2]
 8016f00:	45b0      	cmp	r8, r6
 8016f02:	dbf2      	blt.n	8016eea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8016f04:	4293      	cmp	r3, r2
 8016f06:	f1a5 0608 	sub.w	r6, r5, #8
 8016f0a:	d816      	bhi.n	8016f3a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8016f0c:	f8d6 c000 	ldr.w	ip, [r6]
 8016f10:	f9b3 a000 	ldrsh.w	sl, [r3]
 8016f14:	f8c3 c000 	str.w	ip, [r3]
 8016f18:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8016f1c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8016f20:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8016f24:	f8c3 c004 	str.w	ip, [r3, #4]
 8016f28:	f825 ac08 	strh.w	sl, [r5, #-8]
 8016f2c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8016f30:	f825 9c04 	strh.w	r9, [r5, #-4]
 8016f34:	f825 8c02 	strh.w	r8, [r5, #-2]
 8016f38:	e7c9      	b.n	8016ece <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016f3a:	f8d6 e000 	ldr.w	lr, [r6]
 8016f3e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8016f42:	f8c0 e000 	str.w	lr, [r0]
 8016f46:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8016f4a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8016f4e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8016f52:	f8c0 e004 	str.w	lr, [r0, #4]
 8016f56:	f825 ac08 	strh.w	sl, [r5, #-8]
 8016f5a:	f825 cc06 	strh.w	ip, [r5, #-6]
 8016f5e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8016f62:	f825 8c02 	strh.w	r8, [r5, #-2]
 8016f66:	1acd      	subs	r5, r1, r3
 8016f68:	1a16      	subs	r6, r2, r0
 8016f6a:	10ed      	asrs	r5, r5, #3
 8016f6c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8016f70:	bfb5      	itete	lt
 8016f72:	e9c4 0200 	strdlt	r0, r2, [r4]
 8016f76:	e9c4 3100 	strdge	r3, r1, [r4]
 8016f7a:	460a      	movlt	r2, r1
 8016f7c:	4603      	movge	r3, r0
 8016f7e:	3408      	adds	r4, #8
 8016f80:	4618      	mov	r0, r3
 8016f82:	4611      	mov	r1, r2
 8016f84:	e724      	b.n	8016dd0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8016f86:	4299      	cmp	r1, r3
 8016f88:	d928      	bls.n	8016fdc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 8016f8a:	f1a3 0210 	sub.w	r2, r3, #16
 8016f8e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8016f92:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8016f96:	45ac      	cmp	ip, r5
 8016f98:	db06      	blt.n	8016fa8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 8016f9a:	d11d      	bne.n	8016fd8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8016f9c:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8016fa0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8016fa4:	42ae      	cmp	r6, r5
 8016fa6:	da17      	bge.n	8016fd8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8016fa8:	4615      	mov	r5, r2
 8016faa:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8016fae:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8016fb2:	6116      	str	r6, [r2, #16]
 8016fb4:	686e      	ldr	r6, [r5, #4]
 8016fb6:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8016fba:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8016fbe:	f8a2 9008 	strh.w	r9, [r2, #8]
 8016fc2:	42a8      	cmp	r0, r5
 8016fc4:	6156      	str	r6, [r2, #20]
 8016fc6:	f8a2 c00a 	strh.w	ip, [r2, #10]
 8016fca:	f8a2 800c 	strh.w	r8, [r2, #12]
 8016fce:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8016fd2:	f1a2 0208 	sub.w	r2, r2, #8
 8016fd6:	d1da      	bne.n	8016f8e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8016fd8:	3308      	adds	r3, #8
 8016fda:	e7d4      	b.n	8016f86 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8016fdc:	42bc      	cmp	r4, r7
 8016fde:	d903      	bls.n	8016fe8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8016fe0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8016fe4:	3c08      	subs	r4, #8
 8016fe6:	e6f3      	b.n	8016dd0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8016fe8:	b050      	add	sp, #320	; 0x140
 8016fea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08016fee <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8016fee:	b510      	push	{r4, lr}
 8016ff0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016ff2:	07da      	lsls	r2, r3, #31
 8016ff4:	4604      	mov	r4, r0
 8016ff6:	d507      	bpl.n	8017008 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8016ff8:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8016ffc:	f7ff fe8a 	bl	8016d14 <_ZN8touchgfx7Outline6lineToEii>
 8017000:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8017002:	f023 0301 	bic.w	r3, r3, #1
 8017006:	6243      	str	r3, [r0, #36]	; 0x24
 8017008:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801700a:	079b      	lsls	r3, r3, #30
 801700c:	d521      	bpl.n	8017052 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 801700e:	6923      	ldr	r3, [r4, #16]
 8017010:	88d9      	ldrh	r1, [r3, #6]
 8017012:	889a      	ldrh	r2, [r3, #4]
 8017014:	430a      	orrs	r2, r1
 8017016:	d010      	beq.n	801703a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8017018:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801701c:	2a00      	cmp	r2, #0
 801701e:	db0c      	blt.n	801703a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8017020:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8017022:	428a      	cmp	r2, r1
 8017024:	da09      	bge.n	801703a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8017026:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801702a:	4291      	cmp	r1, r2
 801702c:	bf88      	it	hi
 801702e:	3308      	addhi	r3, #8
 8017030:	f102 0201 	add.w	r2, r2, #1
 8017034:	bf88      	it	hi
 8017036:	6123      	strhi	r3, [r4, #16]
 8017038:	60a2      	str	r2, [r4, #8]
 801703a:	68a1      	ldr	r1, [r4, #8]
 801703c:	b129      	cbz	r1, 801704a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801703e:	6863      	ldr	r3, [r4, #4]
 8017040:	4299      	cmp	r1, r3
 8017042:	d802      	bhi.n	801704a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8017044:	68e0      	ldr	r0, [r4, #12]
 8017046:	f7ff febc 	bl	8016dc2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801704a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801704c:	f023 0302 	bic.w	r3, r3, #2
 8017050:	6263      	str	r3, [r4, #36]	; 0x24
 8017052:	68e0      	ldr	r0, [r4, #12]
 8017054:	bd10      	pop	{r4, pc}
	...

08017058 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8017058:	4b02      	ldr	r3, [pc, #8]	; (8017064 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 801705a:	6018      	str	r0, [r3, #0]
 801705c:	4b02      	ldr	r3, [pc, #8]	; (8017068 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 801705e:	6019      	str	r1, [r3, #0]
 8017060:	4770      	bx	lr
 8017062:	bf00      	nop
 8017064:	20013854 	.word	0x20013854
 8017068:	20013858 	.word	0x20013858

0801706c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 801706c:	4a02      	ldr	r2, [pc, #8]	; (8017078 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 801706e:	2300      	movs	r3, #0
 8017070:	6013      	str	r3, [r2, #0]
 8017072:	4a02      	ldr	r2, [pc, #8]	; (801707c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8017074:	6013      	str	r3, [r2, #0]
 8017076:	4770      	bx	lr
 8017078:	20013854 	.word	0x20013854
 801707c:	20013858 	.word	0x20013858

08017080 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8017080:	4b01      	ldr	r3, [pc, #4]	; (8017088 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8017082:	6818      	ldr	r0, [r3, #0]
 8017084:	4770      	bx	lr
 8017086:	bf00      	nop
 8017088:	20013854 	.word	0x20013854

0801708c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 801708c:	4b01      	ldr	r3, [pc, #4]	; (8017094 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 801708e:	6818      	ldr	r0, [r3, #0]
 8017090:	4770      	bx	lr
 8017092:	bf00      	nop
 8017094:	20013858 	.word	0x20013858

08017098 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8017098:	b510      	push	{r4, lr}
 801709a:	6803      	ldr	r3, [r0, #0]
 801709c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801709e:	460c      	mov	r4, r1
 80170a0:	4798      	blx	r3
 80170a2:	1b03      	subs	r3, r0, r4
 80170a4:	4258      	negs	r0, r3
 80170a6:	4158      	adcs	r0, r3
 80170a8:	bd10      	pop	{r4, pc}
	...

080170ac <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80170ac:	4b01      	ldr	r3, [pc, #4]	; (80170b4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80170ae:	6019      	str	r1, [r3, #0]
 80170b0:	4770      	bx	lr
 80170b2:	bf00      	nop
 80170b4:	2001385c 	.word	0x2001385c

080170b8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80170b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80170bc:	4696      	mov	lr, r2
 80170be:	4605      	mov	r5, r0
 80170c0:	4614      	mov	r4, r2
 80170c2:	460e      	mov	r6, r1
 80170c4:	461f      	mov	r7, r3
 80170c6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80170ca:	b097      	sub	sp, #92	; 0x5c
 80170cc:	f10d 0c1c 	add.w	ip, sp, #28
 80170d0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80170d4:	f8de 3000 	ldr.w	r3, [lr]
 80170d8:	f8cc 3000 	str.w	r3, [ip]
 80170dc:	f104 0e14 	add.w	lr, r4, #20
 80170e0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80170e4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80170e8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80170ec:	f8de 3000 	ldr.w	r3, [lr]
 80170f0:	f8cc 3000 	str.w	r3, [ip]
 80170f4:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80170f8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80170fc:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8017100:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017104:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8017108:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801710c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8017110:	f8de 3000 	ldr.w	r3, [lr]
 8017114:	f8cc 3000 	str.w	r3, [ip]
 8017118:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801711a:	682b      	ldr	r3, [r5, #0]
 801711c:	9201      	str	r2, [sp, #4]
 801711e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8017122:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8017124:	9200      	str	r2, [sp, #0]
 8017126:	f8cd 8008 	str.w	r8, [sp, #8]
 801712a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801712e:	aa07      	add	r2, sp, #28
 8017130:	463b      	mov	r3, r7
 8017132:	4631      	mov	r1, r6
 8017134:	4628      	mov	r0, r5
 8017136:	47d8      	blx	fp
 8017138:	46a6      	mov	lr, r4
 801713a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801713e:	f10d 0c1c 	add.w	ip, sp, #28
 8017142:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017146:	f8de 3000 	ldr.w	r3, [lr]
 801714a:	f8cc 3000 	str.w	r3, [ip]
 801714e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8017152:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8017156:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801715a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801715e:	343c      	adds	r4, #60	; 0x3c
 8017160:	f8de 3000 	ldr.w	r3, [lr]
 8017164:	f8cc 3000 	str.w	r3, [ip]
 8017168:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801716a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801716e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017172:	6823      	ldr	r3, [r4, #0]
 8017174:	f8cc 3000 	str.w	r3, [ip]
 8017178:	682b      	ldr	r3, [r5, #0]
 801717a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801717e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8017180:	9201      	str	r2, [sp, #4]
 8017182:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8017184:	9200      	str	r2, [sp, #0]
 8017186:	f8cd 8008 	str.w	r8, [sp, #8]
 801718a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 801718c:	aa07      	add	r2, sp, #28
 801718e:	463b      	mov	r3, r7
 8017190:	4631      	mov	r1, r6
 8017192:	4628      	mov	r0, r5
 8017194:	47a0      	blx	r4
 8017196:	b017      	add	sp, #92	; 0x5c
 8017198:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801719c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 801719c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80171a0:	b08d      	sub	sp, #52	; 0x34
 80171a2:	4688      	mov	r8, r1
 80171a4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80171a6:	f8d3 c000 	ldr.w	ip, [r3]
 80171aa:	680f      	ldr	r7, [r1, #0]
 80171ac:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 80171b0:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 80171b4:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 80171b8:	edd3 6a07 	vldr	s13, [r3, #28]
 80171bc:	9918      	ldr	r1, [sp, #96]	; 0x60
 80171be:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 80171c2:	f9b1 9000 	ldrsh.w	r9, [r1]
 80171c6:	f9ba 1000 	ldrsh.w	r1, [sl]
 80171ca:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 80171ce:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 80171d2:	eba7 070c 	sub.w	r7, r7, ip
 80171d6:	42bc      	cmp	r4, r7
 80171d8:	bfa8      	it	ge
 80171da:	463c      	movge	r4, r7
 80171dc:	ee07 4a90 	vmov	s15, r4
 80171e0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 80171e4:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 80171e8:	ee25 4a04 	vmul.f32	s8, s10, s8
 80171ec:	ee65 4a24 	vmul.f32	s9, s10, s9
 80171f0:	ee25 5a27 	vmul.f32	s10, s10, s15
 80171f4:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80171f8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80171fc:	eb09 0e0c 	add.w	lr, r9, ip
 8017200:	4571      	cmp	r1, lr
 8017202:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8017206:	ee32 1a05 	vadd.f32	s2, s4, s10
 801720a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801720e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8017212:	ee22 2a07 	vmul.f32	s4, s4, s14
 8017216:	f340 808d 	ble.w	8017334 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801721a:	eba1 060e 	sub.w	r6, r1, lr
 801721e:	fb96 f5f4 	sdiv	r5, r6, r4
 8017222:	ee07 5a10 	vmov	s14, r5
 8017226:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801722a:	2d00      	cmp	r5, #0
 801722c:	fb04 6615 	mls	r6, r4, r5, r6
 8017230:	eea7 0a04 	vfma.f32	s0, s14, s8
 8017234:	eee7 0a24 	vfma.f32	s1, s14, s9
 8017238:	eea7 1a05 	vfma.f32	s2, s14, s10
 801723c:	dd13      	ble.n	8017266 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801723e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8017242:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8017246:	eef5 6a40 	vcmp.f32	s13, #0.0
 801724a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801724e:	bf18      	it	ne
 8017250:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8017254:	ee31 2a45 	vsub.f32	s4, s2, s10
 8017258:	bf08      	it	eq
 801725a:	eeb0 7a67 	vmoveq.f32	s14, s15
 801725e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8017262:	ee22 2a07 	vmul.f32	s4, s4, s14
 8017266:	fb05 f204 	mul.w	r2, r5, r4
 801726a:	1abf      	subs	r7, r7, r2
 801726c:	4494      	add	ip, r2
 801726e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8017272:	4411      	add	r1, r2
 8017274:	eb09 020c 	add.w	r2, r9, ip
 8017278:	443a      	add	r2, r7
 801727a:	b209      	sxth	r1, r1
 801727c:	428a      	cmp	r2, r1
 801727e:	bfc4      	itt	gt
 8017280:	eba1 0209 	subgt.w	r2, r1, r9
 8017284:	eba2 070c 	subgt.w	r7, r2, ip
 8017288:	2f00      	cmp	r7, #0
 801728a:	dd50      	ble.n	801732e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 801728c:	fb97 f1f4 	sdiv	r1, r7, r4
 8017290:	fb04 7211 	mls	r2, r4, r1, r7
 8017294:	b90a      	cbnz	r2, 801729a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8017296:	3901      	subs	r1, #1
 8017298:	4622      	mov	r2, r4
 801729a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 801729e:	6840      	ldr	r0, [r0, #4]
 80172a0:	900b      	str	r0, [sp, #44]	; 0x2c
 80172a2:	f8d0 a000 	ldr.w	sl, [r0]
 80172a6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80172a8:	9008      	str	r0, [sp, #32]
 80172aa:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80172ae:	9818      	ldr	r0, [sp, #96]	; 0x60
 80172b0:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 80172b4:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80172b8:	695b      	ldr	r3, [r3, #20]
 80172ba:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80172bc:	445b      	add	r3, fp
 80172be:	eef0 6a42 	vmov.f32	s13, s4
 80172c2:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80172c6:	ee21 3a23 	vmul.f32	s6, s2, s7
 80172ca:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80172ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80172d2:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80172d6:	9307      	str	r3, [sp, #28]
 80172d8:	ee17 7a90 	vmov	r7, s15
 80172dc:	ee73 7a42 	vsub.f32	s15, s6, s4
 80172e0:	eeb0 7a61 	vmov.f32	s14, s3
 80172e4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80172e8:	ee16 3a90 	vmov	r3, s13
 80172ec:	fb97 f7f4 	sdiv	r7, r7, r4
 80172f0:	ee17 ca90 	vmov	ip, s15
 80172f4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80172f8:	fb9c fcf4 	sdiv	ip, ip, r4
 80172fc:	fb0c 3306 	mla	r3, ip, r6, r3
 8017300:	9302      	str	r3, [sp, #8]
 8017302:	ee17 3a10 	vmov	r3, s14
 8017306:	44b6      	add	lr, r6
 8017308:	fb04 e505 	mla	r5, r4, r5, lr
 801730c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8017310:	fb07 3706 	mla	r7, r7, r6, r3
 8017314:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8017318:	e9cd 4700 	strd	r4, r7, [sp]
 801731c:	2900      	cmp	r1, #0
 801731e:	bfcc      	ite	gt
 8017320:	46a1      	movgt	r9, r4
 8017322:	4691      	movle	r9, r2
 8017324:	eba9 0306 	sub.w	r3, r9, r6
 8017328:	f8da 4008 	ldr.w	r4, [sl, #8]
 801732c:	47a0      	blx	r4
 801732e:	b00d      	add	sp, #52	; 0x34
 8017330:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017334:	2500      	movs	r5, #0
 8017336:	462e      	mov	r6, r5
 8017338:	e799      	b.n	801726e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801733c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801733c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017340:	b0db      	sub	sp, #364	; 0x16c
 8017342:	461d      	mov	r5, r3
 8017344:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8017348:	930a      	str	r3, [sp, #40]	; 0x28
 801734a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801734e:	930b      	str	r3, [sp, #44]	; 0x2c
 8017350:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8017354:	9310      	str	r3, [sp, #64]	; 0x40
 8017356:	6803      	ldr	r3, [r0, #0]
 8017358:	910f      	str	r1, [sp, #60]	; 0x3c
 801735a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801735c:	9009      	str	r0, [sp, #36]	; 0x24
 801735e:	4614      	mov	r4, r2
 8017360:	4629      	mov	r1, r5
 8017362:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8017366:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 801736a:	47b8      	blx	r7
 801736c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801736e:	6058      	str	r0, [r3, #4]
 8017370:	2800      	cmp	r0, #0
 8017372:	f000 83a1 	beq.w	8017ab8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017376:	682b      	ldr	r3, [r5, #0]
 8017378:	9314      	str	r3, [sp, #80]	; 0x50
 801737a:	686b      	ldr	r3, [r5, #4]
 801737c:	9315      	str	r3, [sp, #84]	; 0x54
 801737e:	4bc4      	ldr	r3, [pc, #784]	; (8017690 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8017380:	ed94 7a02 	vldr	s14, [r4, #8]
 8017384:	7819      	ldrb	r1, [r3, #0]
 8017386:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 801738a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 801738e:	2900      	cmp	r1, #0
 8017390:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8017394:	bf16      	itet	ne
 8017396:	4619      	movne	r1, r3
 8017398:	4611      	moveq	r1, r2
 801739a:	4613      	movne	r3, r2
 801739c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173a0:	9116      	str	r1, [sp, #88]	; 0x58
 80173a2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 80173a6:	f240 8387 	bls.w	8017ab8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80173aa:	ed94 7a07 	vldr	s14, [r4, #28]
 80173ae:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80173b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173b6:	f240 837f 	bls.w	8017ab8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80173ba:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 80173be:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80173c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173c6:	f240 8377 	bls.w	8017ab8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80173ca:	6822      	ldr	r2, [r4, #0]
 80173cc:	4bb1      	ldr	r3, [pc, #708]	; (8017694 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80173ce:	429a      	cmp	r2, r3
 80173d0:	f2c0 8372 	blt.w	8017ab8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80173d4:	49b0      	ldr	r1, [pc, #704]	; (8017698 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 80173d6:	6963      	ldr	r3, [r4, #20]
 80173d8:	428a      	cmp	r2, r1
 80173da:	f300 836d 	bgt.w	8017ab8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80173de:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80173e2:	48ae      	ldr	r0, [pc, #696]	; (801769c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 80173e4:	33ff      	adds	r3, #255	; 0xff
 80173e6:	4283      	cmp	r3, r0
 80173e8:	f200 8366 	bhi.w	8017ab8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80173ec:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80173ee:	4dac      	ldr	r5, [pc, #688]	; (80176a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 80173f0:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80173f4:	33ff      	adds	r3, #255	; 0xff
 80173f6:	42ab      	cmp	r3, r5
 80173f8:	f200 835e 	bhi.w	8017ab8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80173fc:	6862      	ldr	r2, [r4, #4]
 80173fe:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8017402:	33ff      	adds	r3, #255	; 0xff
 8017404:	4283      	cmp	r3, r0
 8017406:	f200 8357 	bhi.w	8017ab8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801740a:	69a1      	ldr	r1, [r4, #24]
 801740c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8017410:	33ff      	adds	r3, #255	; 0xff
 8017412:	4283      	cmp	r3, r0
 8017414:	f200 8350 	bhi.w	8017ab8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017418:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801741a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 801741e:	30ff      	adds	r0, #255	; 0xff
 8017420:	42a8      	cmp	r0, r5
 8017422:	f200 8349 	bhi.w	8017ab8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017426:	428a      	cmp	r2, r1
 8017428:	f280 8110 	bge.w	801764c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 801742c:	429a      	cmp	r2, r3
 801742e:	f300 8119 	bgt.w	8017664 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8017432:	4299      	cmp	r1, r3
 8017434:	f280 811d 	bge.w	8017672 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8017438:	2502      	movs	r5, #2
 801743a:	2701      	movs	r7, #1
 801743c:	46a9      	mov	r9, r5
 801743e:	46b8      	mov	r8, r7
 8017440:	f04f 0a00 	mov.w	sl, #0
 8017444:	4621      	mov	r1, r4
 8017446:	a849      	add	r0, sp, #292	; 0x124
 8017448:	f003 ff2a 	bl	801b2a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 801744c:	4622      	mov	r2, r4
 801744e:	4653      	mov	r3, sl
 8017450:	a949      	add	r1, sp, #292	; 0x124
 8017452:	f8cd 9000 	str.w	r9, [sp]
 8017456:	a819      	add	r0, sp, #100	; 0x64
 8017458:	f004 f852 	bl	801b500 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801745c:	4622      	mov	r2, r4
 801745e:	4653      	mov	r3, sl
 8017460:	a949      	add	r1, sp, #292	; 0x124
 8017462:	f8cd 8000 	str.w	r8, [sp]
 8017466:	a829      	add	r0, sp, #164	; 0xa4
 8017468:	f004 f84a 	bl	801b500 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801746c:	4643      	mov	r3, r8
 801746e:	4622      	mov	r2, r4
 8017470:	a949      	add	r1, sp, #292	; 0x124
 8017472:	f8cd 9000 	str.w	r9, [sp]
 8017476:	a839      	add	r0, sp, #228	; 0xe4
 8017478:	f004 f842 	bl	801b500 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801747c:	42af      	cmp	r7, r5
 801747e:	bfb5      	itete	lt
 8017480:	2300      	movlt	r3, #0
 8017482:	2301      	movge	r3, #1
 8017484:	930e      	strlt	r3, [sp, #56]	; 0x38
 8017486:	930e      	strge	r3, [sp, #56]	; 0x38
 8017488:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801748a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801748e:	af12      	add	r7, sp, #72	; 0x48
 8017490:	bfb9      	ittee	lt
 8017492:	ad29      	addlt	r5, sp, #164	; 0xa4
 8017494:	ac19      	addlt	r4, sp, #100	; 0x64
 8017496:	ad19      	addge	r5, sp, #100	; 0x64
 8017498:	ac29      	addge	r4, sp, #164	; 0xa4
 801749a:	e887 0003 	stmia.w	r7, {r0, r1}
 801749e:	b928      	cbnz	r0, 80174ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80174a0:	4b80      	ldr	r3, [pc, #512]	; (80176a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80174a2:	6818      	ldr	r0, [r3, #0]
 80174a4:	6803      	ldr	r3, [r0, #0]
 80174a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80174a8:	4798      	blx	r3
 80174aa:	6038      	str	r0, [r7, #0]
 80174ac:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80174ae:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80174b2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80174b6:	930c      	str	r3, [sp, #48]	; 0x30
 80174b8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80174ba:	6963      	ldr	r3, [r4, #20]
 80174bc:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80174be:	440b      	add	r3, r1
 80174c0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80174c4:	4408      	add	r0, r1
 80174c6:	b200      	sxth	r0, r0
 80174c8:	4283      	cmp	r3, r0
 80174ca:	900d      	str	r0, [sp, #52]	; 0x34
 80174cc:	f280 80dd 	bge.w	801768a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80174d0:	428b      	cmp	r3, r1
 80174d2:	da08      	bge.n	80174e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80174d4:	2a00      	cmp	r2, #0
 80174d6:	dd06      	ble.n	80174e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80174d8:	1acb      	subs	r3, r1, r3
 80174da:	429a      	cmp	r2, r3
 80174dc:	f2c0 80e4 	blt.w	80176a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 80174e0:	2b00      	cmp	r3, #0
 80174e2:	f300 80e2 	bgt.w	80176aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 80174e6:	6967      	ldr	r7, [r4, #20]
 80174e8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80174ea:	443b      	add	r3, r7
 80174ec:	461f      	mov	r7, r3
 80174ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80174f0:	1bdf      	subs	r7, r3, r7
 80174f2:	4297      	cmp	r7, r2
 80174f4:	bfa8      	it	ge
 80174f6:	4617      	movge	r7, r2
 80174f8:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80174fc:	2f00      	cmp	r7, #0
 80174fe:	f340 8166 	ble.w	80177ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8017502:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8017504:	6829      	ldr	r1, [r5, #0]
 8017506:	f9b3 2000 	ldrsh.w	r2, [r3]
 801750a:	f9bb 3000 	ldrsh.w	r3, [fp]
 801750e:	6820      	ldr	r0, [r4, #0]
 8017510:	4411      	add	r1, r2
 8017512:	4299      	cmp	r1, r3
 8017514:	dd1a      	ble.n	801754c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8017516:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801751a:	440b      	add	r3, r1
 801751c:	4402      	add	r2, r0
 801751e:	b21b      	sxth	r3, r3
 8017520:	429a      	cmp	r2, r3
 8017522:	dc13      	bgt.n	801754c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8017524:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017526:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017528:	681b      	ldr	r3, [r3, #0]
 801752a:	9206      	str	r2, [sp, #24]
 801752c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801752e:	9205      	str	r2, [sp, #20]
 8017530:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017532:	9500      	str	r5, [sp, #0]
 8017534:	e9cd b203 	strd	fp, r2, [sp, #12]
 8017538:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801753a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801753c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8017540:	a912      	add	r1, sp, #72	; 0x48
 8017542:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8017546:	aa49      	add	r2, sp, #292	; 0x124
 8017548:	4623      	mov	r3, r4
 801754a:	47c8      	blx	r9
 801754c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8017550:	441a      	add	r2, r3
 8017552:	6963      	ldr	r3, [r4, #20]
 8017554:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8017558:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801755c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8017560:	68a1      	ldr	r1, [r4, #8]
 8017562:	ed94 6a08 	vldr	s12, [r4, #32]
 8017566:	6022      	str	r2, [r4, #0]
 8017568:	3301      	adds	r3, #1
 801756a:	6163      	str	r3, [r4, #20]
 801756c:	69a3      	ldr	r3, [r4, #24]
 801756e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8017572:	3b01      	subs	r3, #1
 8017574:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8017578:	61a3      	str	r3, [r4, #24]
 801757a:	6923      	ldr	r3, [r4, #16]
 801757c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8017580:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017584:	edd4 6a07 	vldr	s13, [r4, #28]
 8017588:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801758c:	440b      	add	r3, r1
 801758e:	68e1      	ldr	r1, [r4, #12]
 8017590:	6123      	str	r3, [r4, #16]
 8017592:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017596:	428b      	cmp	r3, r1
 8017598:	edc4 6a07 	vstr	s13, [r4, #28]
 801759c:	db15      	blt.n	80175ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 801759e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80175a2:	ee76 6a26 	vadd.f32	s13, s12, s13
 80175a6:	3201      	adds	r2, #1
 80175a8:	edc4 6a07 	vstr	s13, [r4, #28]
 80175ac:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80175b0:	6022      	str	r2, [r4, #0]
 80175b2:	ee36 7a87 	vadd.f32	s14, s13, s14
 80175b6:	1a5b      	subs	r3, r3, r1
 80175b8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80175bc:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80175c0:	6123      	str	r3, [r4, #16]
 80175c2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80175c6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80175ca:	e9d5 2300 	ldrd	r2, r3, [r5]
 80175ce:	441a      	add	r2, r3
 80175d0:	696b      	ldr	r3, [r5, #20]
 80175d2:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80175d6:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80175da:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80175de:	68a9      	ldr	r1, [r5, #8]
 80175e0:	ed95 6a08 	vldr	s12, [r5, #32]
 80175e4:	602a      	str	r2, [r5, #0]
 80175e6:	3301      	adds	r3, #1
 80175e8:	616b      	str	r3, [r5, #20]
 80175ea:	69ab      	ldr	r3, [r5, #24]
 80175ec:	ee37 7a27 	vadd.f32	s14, s14, s15
 80175f0:	3b01      	subs	r3, #1
 80175f2:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80175f6:	61ab      	str	r3, [r5, #24]
 80175f8:	692b      	ldr	r3, [r5, #16]
 80175fa:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80175fe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017602:	edd5 6a07 	vldr	s13, [r5, #28]
 8017606:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801760a:	440b      	add	r3, r1
 801760c:	68e9      	ldr	r1, [r5, #12]
 801760e:	612b      	str	r3, [r5, #16]
 8017610:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017614:	428b      	cmp	r3, r1
 8017616:	edc5 6a07 	vstr	s13, [r5, #28]
 801761a:	db15      	blt.n	8017648 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801761c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8017620:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017624:	3201      	adds	r2, #1
 8017626:	edc5 6a07 	vstr	s13, [r5, #28]
 801762a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801762e:	602a      	str	r2, [r5, #0]
 8017630:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017634:	1a5b      	subs	r3, r3, r1
 8017636:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801763a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801763e:	612b      	str	r3, [r5, #16]
 8017640:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017644:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017648:	3f01      	subs	r7, #1
 801764a:	e757      	b.n	80174fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801764c:	4299      	cmp	r1, r3
 801764e:	dc13      	bgt.n	8017678 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8017650:	429a      	cmp	r2, r3
 8017652:	da14      	bge.n	801767e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8017654:	2502      	movs	r5, #2
 8017656:	2703      	movs	r7, #3
 8017658:	46a9      	mov	r9, r5
 801765a:	f04f 0800 	mov.w	r8, #0
 801765e:	f04f 0a01 	mov.w	sl, #1
 8017662:	e6ef      	b.n	8017444 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8017664:	2501      	movs	r5, #1
 8017666:	2700      	movs	r7, #0
 8017668:	46a9      	mov	r9, r5
 801766a:	46b8      	mov	r8, r7
 801766c:	f04f 0a02 	mov.w	sl, #2
 8017670:	e6e8      	b.n	8017444 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8017672:	2501      	movs	r5, #1
 8017674:	2702      	movs	r7, #2
 8017676:	e6e1      	b.n	801743c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8017678:	2500      	movs	r5, #0
 801767a:	2701      	movs	r7, #1
 801767c:	e7f4      	b.n	8017668 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801767e:	2702      	movs	r7, #2
 8017680:	2503      	movs	r5, #3
 8017682:	f04f 0900 	mov.w	r9, #0
 8017686:	46b8      	mov	r8, r7
 8017688:	e7e9      	b.n	801765e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801768a:	4613      	mov	r3, r2
 801768c:	e728      	b.n	80174e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801768e:	bf00      	nop
 8017690:	20013844 	.word	0x20013844
 8017694:	fffd8f01 	.word	0xfffd8f01
 8017698:	00027100 	.word	0x00027100
 801769c:	0004e1ff 	.word	0x0004e1ff
 80176a0:	0004e1fe 	.word	0x0004e1fe
 80176a4:	2001384c 	.word	0x2001384c
 80176a8:	4613      	mov	r3, r2
 80176aa:	992b      	ldr	r1, [sp, #172]	; 0xac
 80176ac:	9111      	str	r1, [sp, #68]	; 0x44
 80176ae:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 80176b2:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 80176b6:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 80176b8:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 80176bc:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 80176c0:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 80176c4:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80176c8:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80176cc:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80176d0:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 80176d4:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 80176d8:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 80176dc:	469e      	mov	lr, r3
 80176de:	469c      	mov	ip, r3
 80176e0:	f04f 0900 	mov.w	r9, #0
 80176e4:	f1bc 0f00 	cmp.w	ip, #0
 80176e8:	d147      	bne.n	801777a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 80176ea:	eb03 0c07 	add.w	ip, r3, r7
 80176ee:	1ad7      	subs	r7, r2, r3
 80176f0:	f1b9 0f00 	cmp.w	r9, #0
 80176f4:	d009      	beq.n	801770a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 80176f6:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 80176fa:	9029      	str	r0, [sp, #164]	; 0xa4
 80176fc:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8017700:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8017704:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8017708:	912d      	str	r1, [sp, #180]	; 0xb4
 801770a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801770c:	9111      	str	r1, [sp, #68]	; 0x44
 801770e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8017712:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8017716:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801771a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801771e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8017722:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8017726:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801772a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801772e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8017732:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8017736:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801773a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801773e:	f04f 0800 	mov.w	r8, #0
 8017742:	f1be 0f00 	cmp.w	lr, #0
 8017746:	d031      	beq.n	80177ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8017748:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801774a:	4431      	add	r1, r6
 801774c:	4549      	cmp	r1, r9
 801774e:	4450      	add	r0, sl
 8017750:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8017754:	ee37 7a04 	vadd.f32	s14, s14, s8
 8017758:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801775c:	db08      	blt.n	8017770 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801775e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8017762:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8017766:	ee37 7a06 	vadd.f32	s14, s14, s12
 801776a:	3001      	adds	r0, #1
 801776c:	eba1 0109 	sub.w	r1, r1, r9
 8017770:	f10e 3eff 	add.w	lr, lr, #4294967295
 8017774:	f04f 0801 	mov.w	r8, #1
 8017778:	e7e3      	b.n	8017742 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801777a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801777c:	4431      	add	r1, r6
 801777e:	4541      	cmp	r1, r8
 8017780:	4450      	add	r0, sl
 8017782:	ee37 7a24 	vadd.f32	s14, s14, s9
 8017786:	ee77 7a84 	vadd.f32	s15, s15, s8
 801778a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801778e:	db08      	blt.n	80177a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8017790:	ee76 6a85 	vadd.f32	s13, s13, s10
 8017794:	ee37 7a25 	vadd.f32	s14, s14, s11
 8017798:	ee77 7a86 	vadd.f32	s15, s15, s12
 801779c:	3001      	adds	r0, #1
 801779e:	eba1 0108 	sub.w	r1, r1, r8
 80177a2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80177a6:	f04f 0901 	mov.w	r9, #1
 80177aa:	e79b      	b.n	80176e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80177ac:	449c      	add	ip, r3
 80177ae:	1aff      	subs	r7, r7, r3
 80177b0:	f1b8 0f00 	cmp.w	r8, #0
 80177b4:	d009      	beq.n	80177ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 80177b6:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80177ba:	9019      	str	r0, [sp, #100]	; 0x64
 80177bc:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80177c0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80177c4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80177c8:	911d      	str	r1, [sp, #116]	; 0x74
 80177ca:	1ad2      	subs	r2, r2, r3
 80177cc:	e68b      	b.n	80174e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80177ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80177d0:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 80177d2:	2b00      	cmp	r3, #0
 80177d4:	f000 80d1 	beq.w	801797a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 80177d8:	ad19      	add	r5, sp, #100	; 0x64
 80177da:	ac39      	add	r4, sp, #228	; 0xe4
 80177dc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80177de:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80177e2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80177e6:	930c      	str	r3, [sp, #48]	; 0x30
 80177e8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80177ea:	6963      	ldr	r3, [r4, #20]
 80177ec:	440b      	add	r3, r1
 80177ee:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80177f2:	4408      	add	r0, r1
 80177f4:	b200      	sxth	r0, r0
 80177f6:	4283      	cmp	r3, r0
 80177f8:	900d      	str	r0, [sp, #52]	; 0x34
 80177fa:	f280 80c1 	bge.w	8017980 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 80177fe:	428b      	cmp	r3, r1
 8017800:	da08      	bge.n	8017814 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8017802:	2a00      	cmp	r2, #0
 8017804:	dd06      	ble.n	8017814 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8017806:	1acb      	subs	r3, r1, r3
 8017808:	429a      	cmp	r2, r3
 801780a:	f2c0 80bb 	blt.w	8017984 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801780e:	2b00      	cmp	r3, #0
 8017810:	f300 80b9 	bgt.w	8017986 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8017814:	6967      	ldr	r7, [r4, #20]
 8017816:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017818:	443b      	add	r3, r7
 801781a:	461f      	mov	r7, r3
 801781c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801781e:	1bdf      	subs	r7, r3, r7
 8017820:	4297      	cmp	r7, r2
 8017822:	bfa8      	it	ge
 8017824:	4617      	movge	r7, r2
 8017826:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801782a:	2f00      	cmp	r7, #0
 801782c:	f340 813c 	ble.w	8017aa8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8017830:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8017832:	6829      	ldr	r1, [r5, #0]
 8017834:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017838:	f9bb 3000 	ldrsh.w	r3, [fp]
 801783c:	6820      	ldr	r0, [r4, #0]
 801783e:	4411      	add	r1, r2
 8017840:	4299      	cmp	r1, r3
 8017842:	dd1a      	ble.n	801787a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8017844:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8017848:	440b      	add	r3, r1
 801784a:	4402      	add	r2, r0
 801784c:	b21b      	sxth	r3, r3
 801784e:	429a      	cmp	r2, r3
 8017850:	dc13      	bgt.n	801787a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8017852:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017854:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017856:	681b      	ldr	r3, [r3, #0]
 8017858:	9206      	str	r2, [sp, #24]
 801785a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801785c:	9205      	str	r2, [sp, #20]
 801785e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017860:	9500      	str	r5, [sp, #0]
 8017862:	e9cd b203 	strd	fp, r2, [sp, #12]
 8017866:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8017868:	9809      	ldr	r0, [sp, #36]	; 0x24
 801786a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801786e:	a912      	add	r1, sp, #72	; 0x48
 8017870:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8017874:	aa49      	add	r2, sp, #292	; 0x124
 8017876:	4623      	mov	r3, r4
 8017878:	47c8      	blx	r9
 801787a:	e9d4 2300 	ldrd	r2, r3, [r4]
 801787e:	441a      	add	r2, r3
 8017880:	6963      	ldr	r3, [r4, #20]
 8017882:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8017886:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801788a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801788e:	68a1      	ldr	r1, [r4, #8]
 8017890:	ed94 6a08 	vldr	s12, [r4, #32]
 8017894:	6022      	str	r2, [r4, #0]
 8017896:	3301      	adds	r3, #1
 8017898:	6163      	str	r3, [r4, #20]
 801789a:	69a3      	ldr	r3, [r4, #24]
 801789c:	ee37 7a27 	vadd.f32	s14, s14, s15
 80178a0:	3b01      	subs	r3, #1
 80178a2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80178a6:	61a3      	str	r3, [r4, #24]
 80178a8:	6923      	ldr	r3, [r4, #16]
 80178aa:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80178ae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80178b2:	edd4 6a07 	vldr	s13, [r4, #28]
 80178b6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80178ba:	440b      	add	r3, r1
 80178bc:	68e1      	ldr	r1, [r4, #12]
 80178be:	6123      	str	r3, [r4, #16]
 80178c0:	ee76 6a86 	vadd.f32	s13, s13, s12
 80178c4:	428b      	cmp	r3, r1
 80178c6:	edc4 6a07 	vstr	s13, [r4, #28]
 80178ca:	db15      	blt.n	80178f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 80178cc:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80178d0:	ee76 6a26 	vadd.f32	s13, s12, s13
 80178d4:	3201      	adds	r2, #1
 80178d6:	edc4 6a07 	vstr	s13, [r4, #28]
 80178da:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80178de:	6022      	str	r2, [r4, #0]
 80178e0:	ee36 7a87 	vadd.f32	s14, s13, s14
 80178e4:	1a5b      	subs	r3, r3, r1
 80178e6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80178ea:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80178ee:	6123      	str	r3, [r4, #16]
 80178f0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80178f4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80178f8:	e9d5 2300 	ldrd	r2, r3, [r5]
 80178fc:	441a      	add	r2, r3
 80178fe:	696b      	ldr	r3, [r5, #20]
 8017900:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8017904:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8017908:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801790c:	68a9      	ldr	r1, [r5, #8]
 801790e:	ed95 6a08 	vldr	s12, [r5, #32]
 8017912:	602a      	str	r2, [r5, #0]
 8017914:	3301      	adds	r3, #1
 8017916:	616b      	str	r3, [r5, #20]
 8017918:	69ab      	ldr	r3, [r5, #24]
 801791a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801791e:	3b01      	subs	r3, #1
 8017920:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8017924:	61ab      	str	r3, [r5, #24]
 8017926:	692b      	ldr	r3, [r5, #16]
 8017928:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801792c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017930:	edd5 6a07 	vldr	s13, [r5, #28]
 8017934:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017938:	440b      	add	r3, r1
 801793a:	68e9      	ldr	r1, [r5, #12]
 801793c:	612b      	str	r3, [r5, #16]
 801793e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017942:	428b      	cmp	r3, r1
 8017944:	edc5 6a07 	vstr	s13, [r5, #28]
 8017948:	db15      	blt.n	8017976 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801794a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801794e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017952:	3201      	adds	r2, #1
 8017954:	edc5 6a07 	vstr	s13, [r5, #28]
 8017958:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801795c:	602a      	str	r2, [r5, #0]
 801795e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017962:	1a5b      	subs	r3, r3, r1
 8017964:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8017968:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801796c:	612b      	str	r3, [r5, #16]
 801796e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017972:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017976:	3f01      	subs	r7, #1
 8017978:	e757      	b.n	801782a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801797a:	ad39      	add	r5, sp, #228	; 0xe4
 801797c:	ac19      	add	r4, sp, #100	; 0x64
 801797e:	e72d      	b.n	80177dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8017980:	4613      	mov	r3, r2
 8017982:	e744      	b.n	801780e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8017984:	4613      	mov	r3, r2
 8017986:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 801798a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 801798c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8017990:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8017994:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8017998:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 801799c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 80179a0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 80179a4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 80179a8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 80179aa:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 80179ae:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 80179b2:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 80179b6:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 80179ba:	960e      	str	r6, [sp, #56]	; 0x38
 80179bc:	469e      	mov	lr, r3
 80179be:	461f      	mov	r7, r3
 80179c0:	f04f 0900 	mov.w	r9, #0
 80179c4:	2f00      	cmp	r7, #0
 80179c6:	d146      	bne.n	8017a56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 80179c8:	449c      	add	ip, r3
 80179ca:	1ad7      	subs	r7, r2, r3
 80179cc:	f1b9 0f00 	cmp.w	r9, #0
 80179d0:	d009      	beq.n	80179e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 80179d2:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 80179d6:	9039      	str	r0, [sp, #228]	; 0xe4
 80179d8:	913d      	str	r1, [sp, #244]	; 0xf4
 80179da:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 80179de:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 80179e2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 80179e6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80179e8:	910e      	str	r1, [sp, #56]	; 0x38
 80179ea:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80179ee:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80179f2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80179f6:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80179fa:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80179fe:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8017a02:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8017a06:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8017a0a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8017a0e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8017a12:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8017a16:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8017a1a:	f04f 0800 	mov.w	r8, #0
 8017a1e:	f1be 0f00 	cmp.w	lr, #0
 8017a22:	d030      	beq.n	8017a86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8017a24:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8017a26:	4431      	add	r1, r6
 8017a28:	4549      	cmp	r1, r9
 8017a2a:	4450      	add	r0, sl
 8017a2c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8017a30:	ee37 7a04 	vadd.f32	s14, s14, s8
 8017a34:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8017a38:	db08      	blt.n	8017a4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8017a3a:	ee77 7a85 	vadd.f32	s15, s15, s10
 8017a3e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8017a42:	ee37 7a06 	vadd.f32	s14, s14, s12
 8017a46:	3001      	adds	r0, #1
 8017a48:	eba1 0109 	sub.w	r1, r1, r9
 8017a4c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8017a50:	f04f 0801 	mov.w	r8, #1
 8017a54:	e7e3      	b.n	8017a1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8017a56:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8017a58:	4431      	add	r1, r6
 8017a5a:	4541      	cmp	r1, r8
 8017a5c:	4450      	add	r0, sl
 8017a5e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8017a62:	ee77 7a84 	vadd.f32	s15, s15, s8
 8017a66:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8017a6a:	db08      	blt.n	8017a7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8017a6c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8017a70:	ee37 7a25 	vadd.f32	s14, s14, s11
 8017a74:	ee77 7a86 	vadd.f32	s15, s15, s12
 8017a78:	3001      	adds	r0, #1
 8017a7a:	eba1 0108 	sub.w	r1, r1, r8
 8017a7e:	3f01      	subs	r7, #1
 8017a80:	f04f 0901 	mov.w	r9, #1
 8017a84:	e79e      	b.n	80179c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8017a86:	449c      	add	ip, r3
 8017a88:	1aff      	subs	r7, r7, r3
 8017a8a:	f1b8 0f00 	cmp.w	r8, #0
 8017a8e:	d009      	beq.n	8017aa4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8017a90:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8017a94:	9019      	str	r0, [sp, #100]	; 0x64
 8017a96:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8017a9a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8017a9e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8017aa2:	911d      	str	r1, [sp, #116]	; 0x74
 8017aa4:	1ad2      	subs	r2, r2, r3
 8017aa6:	e6b5      	b.n	8017814 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8017aa8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017aaa:	681b      	ldr	r3, [r3, #0]
 8017aac:	b923      	cbnz	r3, 8017ab8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017aae:	4b04      	ldr	r3, [pc, #16]	; (8017ac0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8017ab0:	6818      	ldr	r0, [r3, #0]
 8017ab2:	6803      	ldr	r3, [r0, #0]
 8017ab4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017ab6:	4798      	blx	r3
 8017ab8:	b05b      	add	sp, #364	; 0x16c
 8017aba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017abe:	bf00      	nop
 8017ac0:	2001384c 	.word	0x2001384c

08017ac4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8017ac4:	b570      	push	{r4, r5, r6, lr}
 8017ac6:	4604      	mov	r4, r0
 8017ac8:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8017acc:	9805      	ldr	r0, [sp, #20]
 8017ace:	6061      	str	r1, [r4, #4]
 8017ad0:	2500      	movs	r5, #0
 8017ad2:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8017ad6:	8263      	strh	r3, [r4, #18]
 8017ad8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8017adc:	8025      	strh	r5, [r4, #0]
 8017ade:	7221      	strb	r1, [r4, #8]
 8017ae0:	7266      	strb	r6, [r4, #9]
 8017ae2:	60e0      	str	r0, [r4, #12]
 8017ae4:	8222      	strh	r2, [r4, #16]
 8017ae6:	82a3      	strh	r3, [r4, #20]
 8017ae8:	82e5      	strh	r5, [r4, #22]
 8017aea:	8325      	strh	r5, [r4, #24]
 8017aec:	8365      	strh	r5, [r4, #26]
 8017aee:	83a5      	strh	r5, [r4, #28]
 8017af0:	83e5      	strh	r5, [r4, #30]
 8017af2:	8425      	strh	r5, [r4, #32]
 8017af4:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8017af8:	b32e      	cbz	r6, 8017b46 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017afa:	6803      	ldr	r3, [r0, #0]
 8017afc:	695b      	ldr	r3, [r3, #20]
 8017afe:	4798      	blx	r3
 8017b00:	4606      	mov	r6, r0
 8017b02:	b300      	cbz	r0, 8017b46 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017b04:	68e0      	ldr	r0, [r4, #12]
 8017b06:	6803      	ldr	r3, [r0, #0]
 8017b08:	4631      	mov	r1, r6
 8017b0a:	68db      	ldr	r3, [r3, #12]
 8017b0c:	4798      	blx	r3
 8017b0e:	4605      	mov	r5, r0
 8017b10:	b1c8      	cbz	r0, 8017b46 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017b12:	7b43      	ldrb	r3, [r0, #13]
 8017b14:	7a82      	ldrb	r2, [r0, #10]
 8017b16:	005b      	lsls	r3, r3, #1
 8017b18:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017b1c:	4313      	orrs	r3, r2
 8017b1e:	8423      	strh	r3, [r4, #32]
 8017b20:	7a63      	ldrb	r3, [r4, #9]
 8017b22:	2b06      	cmp	r3, #6
 8017b24:	d10f      	bne.n	8017b46 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017b26:	68e0      	ldr	r0, [r4, #12]
 8017b28:	6803      	ldr	r3, [r0, #0]
 8017b2a:	462a      	mov	r2, r5
 8017b2c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017b2e:	4631      	mov	r1, r6
 8017b30:	4798      	blx	r3
 8017b32:	7b6b      	ldrb	r3, [r5, #13]
 8017b34:	005b      	lsls	r3, r3, #1
 8017b36:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017b3a:	7aab      	ldrb	r3, [r5, #10]
 8017b3c:	4313      	orrs	r3, r2
 8017b3e:	4418      	add	r0, r3
 8017b40:	8c23      	ldrh	r3, [r4, #32]
 8017b42:	4418      	add	r0, r3
 8017b44:	8420      	strh	r0, [r4, #32]
 8017b46:	4620      	mov	r0, r4
 8017b48:	bd70      	pop	{r4, r5, r6, pc}

08017b4a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8017b4a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b4e:	2400      	movs	r4, #0
 8017b50:	b085      	sub	sp, #20
 8017b52:	4681      	mov	r9, r0
 8017b54:	4688      	mov	r8, r1
 8017b56:	4692      	mov	sl, r2
 8017b58:	469b      	mov	fp, r3
 8017b5a:	4627      	mov	r7, r4
 8017b5c:	4625      	mov	r5, r4
 8017b5e:	4626      	mov	r6, r4
 8017b60:	4554      	cmp	r4, sl
 8017b62:	da2a      	bge.n	8017bba <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8017b64:	2300      	movs	r3, #0
 8017b66:	9303      	str	r3, [sp, #12]
 8017b68:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017b6c:	429d      	cmp	r5, r3
 8017b6e:	d004      	beq.n	8017b7a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8017b70:	f242 030b 	movw	r3, #8203	; 0x200b
 8017b74:	429d      	cmp	r5, r3
 8017b76:	bf18      	it	ne
 8017b78:	462f      	movne	r7, r5
 8017b7a:	ab03      	add	r3, sp, #12
 8017b7c:	4642      	mov	r2, r8
 8017b7e:	4659      	mov	r1, fp
 8017b80:	4648      	mov	r0, r9
 8017b82:	f003 f9a3 	bl	801aecc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017b86:	4605      	mov	r5, r0
 8017b88:	b1b8      	cbz	r0, 8017bba <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8017b8a:	280a      	cmp	r0, #10
 8017b8c:	d015      	beq.n	8017bba <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8017b8e:	9a03      	ldr	r2, [sp, #12]
 8017b90:	b18a      	cbz	r2, 8017bb6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8017b92:	7b50      	ldrb	r0, [r2, #13]
 8017b94:	7a93      	ldrb	r3, [r2, #10]
 8017b96:	8895      	ldrh	r5, [r2, #4]
 8017b98:	0040      	lsls	r0, r0, #1
 8017b9a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8017b9e:	4303      	orrs	r3, r0
 8017ba0:	9301      	str	r3, [sp, #4]
 8017ba2:	f8d8 3000 	ldr.w	r3, [r8]
 8017ba6:	4639      	mov	r1, r7
 8017ba8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017baa:	4640      	mov	r0, r8
 8017bac:	4798      	blx	r3
 8017bae:	9b01      	ldr	r3, [sp, #4]
 8017bb0:	4418      	add	r0, r3
 8017bb2:	4406      	add	r6, r0
 8017bb4:	b2b6      	uxth	r6, r6
 8017bb6:	3401      	adds	r4, #1
 8017bb8:	e7d2      	b.n	8017b60 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8017bba:	4630      	mov	r0, r6
 8017bbc:	b005      	add	sp, #20
 8017bbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017bc2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8017bc2:	2a02      	cmp	r2, #2
 8017bc4:	b530      	push	{r4, r5, lr}
 8017bc6:	d011      	beq.n	8017bec <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8017bc8:	2a03      	cmp	r2, #3
 8017bca:	d01c      	beq.n	8017c06 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8017bcc:	2a01      	cmp	r2, #1
 8017bce:	d10c      	bne.n	8017bea <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8017bd0:	888b      	ldrh	r3, [r1, #4]
 8017bd2:	8801      	ldrh	r1, [r0, #0]
 8017bd4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8017bd8:	8844      	ldrh	r4, [r0, #2]
 8017bda:	8004      	strh	r4, [r0, #0]
 8017bdc:	1a5b      	subs	r3, r3, r1
 8017bde:	1a9b      	subs	r3, r3, r2
 8017be0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8017be4:	8043      	strh	r3, [r0, #2]
 8017be6:	8081      	strh	r1, [r0, #4]
 8017be8:	80c2      	strh	r2, [r0, #6]
 8017bea:	bd30      	pop	{r4, r5, pc}
 8017bec:	88cb      	ldrh	r3, [r1, #6]
 8017bee:	8842      	ldrh	r2, [r0, #2]
 8017bf0:	1a9b      	subs	r3, r3, r2
 8017bf2:	88c2      	ldrh	r2, [r0, #6]
 8017bf4:	1a9b      	subs	r3, r3, r2
 8017bf6:	888a      	ldrh	r2, [r1, #4]
 8017bf8:	8801      	ldrh	r1, [r0, #0]
 8017bfa:	8043      	strh	r3, [r0, #2]
 8017bfc:	1a52      	subs	r2, r2, r1
 8017bfe:	8881      	ldrh	r1, [r0, #4]
 8017c00:	1a52      	subs	r2, r2, r1
 8017c02:	8002      	strh	r2, [r0, #0]
 8017c04:	e7f1      	b.n	8017bea <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8017c06:	88cb      	ldrh	r3, [r1, #6]
 8017c08:	8841      	ldrh	r1, [r0, #2]
 8017c0a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8017c0e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8017c12:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8017c16:	8045      	strh	r5, [r0, #2]
 8017c18:	1a5b      	subs	r3, r3, r1
 8017c1a:	1a9b      	subs	r3, r3, r2
 8017c1c:	8003      	strh	r3, [r0, #0]
 8017c1e:	8082      	strh	r2, [r0, #4]
 8017c20:	80c4      	strh	r4, [r0, #6]
 8017c22:	e7e2      	b.n	8017bea <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08017c24 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8017c24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c28:	b09f      	sub	sp, #124	; 0x7c
 8017c2a:	9116      	str	r1, [sp, #88]	; 0x58
 8017c2c:	9317      	str	r3, [sp, #92]	; 0x5c
 8017c2e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8017c30:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017c32:	8809      	ldrh	r1, [r1, #0]
 8017c34:	889b      	ldrh	r3, [r3, #4]
 8017c36:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8017c3a:	9212      	str	r2, [sp, #72]	; 0x48
 8017c3c:	440b      	add	r3, r1
 8017c3e:	b21b      	sxth	r3, r3
 8017c40:	9310      	str	r3, [sp, #64]	; 0x40
 8017c42:	f8d8 3000 	ldr.w	r3, [r8]
 8017c46:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8017c4a:	7b19      	ldrb	r1, [r3, #12]
 8017c4c:	7adb      	ldrb	r3, [r3, #11]
 8017c4e:	9011      	str	r0, [sp, #68]	; 0x44
 8017c50:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8017c54:	9114      	str	r1, [sp, #80]	; 0x50
 8017c56:	9315      	str	r3, [sp, #84]	; 0x54
 8017c58:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8017c5c:	2a00      	cmp	r2, #0
 8017c5e:	d06a      	beq.n	8017d36 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8017c60:	f898 3010 	ldrb.w	r3, [r8, #16]
 8017c64:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017c66:	2b06      	cmp	r3, #6
 8017c68:	bf14      	ite	ne
 8017c6a:	2301      	movne	r3, #1
 8017c6c:	2302      	moveq	r3, #2
 8017c6e:	4413      	add	r3, r2
 8017c70:	f04f 0900 	mov.w	r9, #0
 8017c74:	930f      	str	r3, [sp, #60]	; 0x3c
 8017c76:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8017c7a:	464c      	mov	r4, r9
 8017c7c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8017c80:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8017c84:	4293      	cmp	r3, r2
 8017c86:	f280 808f 	bge.w	8017da8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8017c8a:	2300      	movs	r3, #0
 8017c8c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8017c90:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8017c94:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017c98:	429c      	cmp	r4, r3
 8017c9a:	d006      	beq.n	8017caa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8017c9c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017c9e:	f242 020b 	movw	r2, #8203	; 0x200b
 8017ca2:	4294      	cmp	r4, r2
 8017ca4:	bf18      	it	ne
 8017ca6:	4623      	movne	r3, r4
 8017ca8:	930d      	str	r3, [sp, #52]	; 0x34
 8017caa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017cac:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8017cae:	f8d8 2000 	ldr.w	r2, [r8]
 8017cb2:	428b      	cmp	r3, r1
 8017cb4:	db41      	blt.n	8017d3a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8017cb6:	6813      	ldr	r3, [r2, #0]
 8017cb8:	4610      	mov	r0, r2
 8017cba:	695b      	ldr	r3, [r3, #20]
 8017cbc:	4798      	blx	r3
 8017cbe:	4604      	mov	r4, r0
 8017cc0:	f8d8 0000 	ldr.w	r0, [r8]
 8017cc4:	6803      	ldr	r3, [r0, #0]
 8017cc6:	aa1d      	add	r2, sp, #116	; 0x74
 8017cc8:	689d      	ldr	r5, [r3, #8]
 8017cca:	4621      	mov	r1, r4
 8017ccc:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8017cd0:	47a8      	blx	r5
 8017cd2:	901c      	str	r0, [sp, #112]	; 0x70
 8017cd4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017cd8:	429c      	cmp	r4, r3
 8017cda:	f000 80eb 	beq.w	8017eb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017cde:	f242 030b 	movw	r3, #8203	; 0x200b
 8017ce2:	429c      	cmp	r4, r3
 8017ce4:	f000 80e6 	beq.w	8017eb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017ce8:	2c00      	cmp	r4, #0
 8017cea:	f000 80f8 	beq.w	8017ede <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8017cee:	2c0a      	cmp	r4, #10
 8017cf0:	d060      	beq.n	8017db4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8017cf2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8017cf4:	b36a      	cbz	r2, 8017d52 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8017cf6:	8894      	ldrh	r4, [r2, #4]
 8017cf8:	f1bb 0f00 	cmp.w	fp, #0
 8017cfc:	d03b      	beq.n	8017d76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8017cfe:	f892 900d 	ldrb.w	r9, [r2, #13]
 8017d02:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017d06:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8017d0a:	f892 900a 	ldrb.w	r9, [r2, #10]
 8017d0e:	f1bb 0f01 	cmp.w	fp, #1
 8017d12:	ea49 0903 	orr.w	r9, r9, r3
 8017d16:	d134      	bne.n	8017d82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8017d18:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017d1a:	eba6 0609 	sub.w	r6, r6, r9
 8017d1e:	2b00      	cmp	r3, #0
 8017d20:	d14f      	bne.n	8017dc2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8017d22:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017d24:	eb09 0306 	add.w	r3, r9, r6
 8017d28:	4413      	add	r3, r2
 8017d2a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017d2c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8017d30:	4293      	cmp	r3, r2
 8017d32:	da51      	bge.n	8017dd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8017d34:	e038      	b.n	8017da8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8017d36:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017d38:	e79a      	b.n	8017c70 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8017d3a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8017d3e:	9301      	str	r3, [sp, #4]
 8017d40:	ab1d      	add	r3, sp, #116	; 0x74
 8017d42:	9300      	str	r3, [sp, #0]
 8017d44:	4659      	mov	r1, fp
 8017d46:	ab1c      	add	r3, sp, #112	; 0x70
 8017d48:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8017d4a:	f003 f908 	bl	801af5e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8017d4e:	4604      	mov	r4, r0
 8017d50:	e7c0      	b.n	8017cd4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8017d52:	f8d8 0000 	ldr.w	r0, [r8]
 8017d56:	6803      	ldr	r3, [r0, #0]
 8017d58:	691b      	ldr	r3, [r3, #16]
 8017d5a:	4798      	blx	r3
 8017d5c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017d60:	4298      	cmp	r0, r3
 8017d62:	f000 80a7 	beq.w	8017eb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017d66:	f242 030b 	movw	r3, #8203	; 0x200b
 8017d6a:	4298      	cmp	r0, r3
 8017d6c:	f000 80a2 	beq.w	8017eb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017d70:	f1bb 0f00 	cmp.w	fp, #0
 8017d74:	d100      	bne.n	8017d78 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8017d76:	444e      	add	r6, r9
 8017d78:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8017d7a:	2a00      	cmp	r2, #0
 8017d7c:	d1bf      	bne.n	8017cfe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8017d7e:	4691      	mov	r9, r2
 8017d80:	e098      	b.n	8017eb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017d82:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017d84:	2b00      	cmp	r3, #0
 8017d86:	f000 80ac 	beq.w	8017ee2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8017d8a:	f1bb 0f00 	cmp.w	fp, #0
 8017d8e:	d118      	bne.n	8017dc2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8017d90:	f8d8 0000 	ldr.w	r0, [r8]
 8017d94:	990d      	ldr	r1, [sp, #52]	; 0x34
 8017d96:	6803      	ldr	r3, [r0, #0]
 8017d98:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017d9a:	4798      	blx	r3
 8017d9c:	4406      	add	r6, r0
 8017d9e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8017da0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017da2:	1af3      	subs	r3, r6, r3
 8017da4:	4293      	cmp	r3, r2
 8017da6:	dd17      	ble.n	8017dd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8017da8:	2c00      	cmp	r4, #0
 8017daa:	f000 8098 	beq.w	8017ede <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8017dae:	2c0a      	cmp	r4, #10
 8017db0:	f040 8086 	bne.w	8017ec0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8017db4:	240a      	movs	r4, #10
 8017db6:	fab4 f084 	clz	r0, r4
 8017dba:	0940      	lsrs	r0, r0, #5
 8017dbc:	b01f      	add	sp, #124	; 0x7c
 8017dbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017dc2:	f8d8 0000 	ldr.w	r0, [r8]
 8017dc6:	990d      	ldr	r1, [sp, #52]	; 0x34
 8017dc8:	6803      	ldr	r3, [r0, #0]
 8017dca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017dcc:	4798      	blx	r3
 8017dce:	f1bb 0f01 	cmp.w	fp, #1
 8017dd2:	eba6 0600 	sub.w	r6, r6, r0
 8017dd6:	d0a4      	beq.n	8017d22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8017dd8:	981c      	ldr	r0, [sp, #112]	; 0x70
 8017dda:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017ddc:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8017de0:	f9b3 7000 	ldrsh.w	r7, [r3]
 8017de4:	7b43      	ldrb	r3, [r0, #13]
 8017de6:	015b      	lsls	r3, r3, #5
 8017de8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017dec:	7983      	ldrb	r3, [r0, #6]
 8017dee:	4431      	add	r1, r6
 8017df0:	4313      	orrs	r3, r2
 8017df2:	440b      	add	r3, r1
 8017df4:	42bb      	cmp	r3, r7
 8017df6:	db5d      	blt.n	8017eb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017df8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017dfa:	4299      	cmp	r1, r3
 8017dfc:	da5a      	bge.n	8017eb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017dfe:	f8d8 0000 	ldr.w	r0, [r8]
 8017e02:	6803      	ldr	r3, [r0, #0]
 8017e04:	42b7      	cmp	r7, r6
 8017e06:	bfc8      	it	gt
 8017e08:	1bbf      	subgt	r7, r7, r6
 8017e0a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017e0c:	bfcc      	ite	gt
 8017e0e:	b2bf      	uxthgt	r7, r7
 8017e10:	2700      	movle	r7, #0
 8017e12:	4798      	blx	r3
 8017e14:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8017e16:	7b5a      	ldrb	r2, [r3, #13]
 8017e18:	00d1      	lsls	r1, r2, #3
 8017e1a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8017e1e:	7a19      	ldrb	r1, [r3, #8]
 8017e20:	4329      	orrs	r1, r5
 8017e22:	0655      	lsls	r5, r2, #25
 8017e24:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8017e26:	bf44      	itt	mi
 8017e28:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8017e2c:	b209      	sxthmi	r1, r1
 8017e2e:	1945      	adds	r5, r0, r5
 8017e30:	1a6d      	subs	r5, r5, r1
 8017e32:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8017e34:	b2ad      	uxth	r5, r5
 8017e36:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8017e3a:	fa0f fa85 	sxth.w	sl, r5
 8017e3e:	4551      	cmp	r1, sl
 8017e40:	dd3c      	ble.n	8017ebc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8017e42:	0112      	lsls	r2, r2, #4
 8017e44:	79d8      	ldrb	r0, [r3, #7]
 8017e46:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8017e4a:	4302      	orrs	r2, r0
 8017e4c:	4492      	add	sl, r2
 8017e4e:	4551      	cmp	r1, sl
 8017e50:	dc30      	bgt.n	8017eb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017e52:	1b4d      	subs	r5, r1, r5
 8017e54:	b22d      	sxth	r5, r5
 8017e56:	468a      	mov	sl, r1
 8017e58:	9319      	str	r3, [sp, #100]	; 0x64
 8017e5a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017e5c:	f8d8 0000 	ldr.w	r0, [r8]
 8017e60:	681a      	ldr	r2, [r3, #0]
 8017e62:	6801      	ldr	r1, [r0, #0]
 8017e64:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8017e66:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8017e68:	9313      	str	r3, [sp, #76]	; 0x4c
 8017e6a:	9218      	str	r2, [sp, #96]	; 0x60
 8017e6c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8017e6e:	4788      	blx	r1
 8017e70:	f898 1006 	ldrb.w	r1, [r8, #6]
 8017e74:	910b      	str	r1, [sp, #44]	; 0x2c
 8017e76:	f898 100e 	ldrb.w	r1, [r8, #14]
 8017e7a:	910a      	str	r1, [sp, #40]	; 0x28
 8017e7c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8017e80:	9109      	str	r1, [sp, #36]	; 0x24
 8017e82:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8017e86:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8017e88:	9305      	str	r3, [sp, #20]
 8017e8a:	b2ad      	uxth	r5, r5
 8017e8c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8017e90:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8017e94:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017e96:	9304      	str	r3, [sp, #16]
 8017e98:	4437      	add	r7, r6
 8017e9a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8017e9c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017e9e:	9206      	str	r2, [sp, #24]
 8017ea0:	b23f      	sxth	r7, r7
 8017ea2:	f8cd a004 	str.w	sl, [sp, #4]
 8017ea6:	9700      	str	r7, [sp, #0]
 8017ea8:	681a      	ldr	r2, [r3, #0]
 8017eaa:	9916      	ldr	r1, [sp, #88]	; 0x58
 8017eac:	685b      	ldr	r3, [r3, #4]
 8017eae:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017eb0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017eb2:	47a8      	blx	r5
 8017eb4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017eb6:	3301      	adds	r3, #1
 8017eb8:	930e      	str	r3, [sp, #56]	; 0x38
 8017eba:	e6e1      	b.n	8017c80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8017ebc:	2500      	movs	r5, #0
 8017ebe:	e7cb      	b.n	8017e58 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8017ec0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8017ec2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017ec4:	3501      	adds	r5, #1
 8017ec6:	429d      	cmp	r5, r3
 8017ec8:	f6bf af75 	bge.w	8017db6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8017ecc:	4659      	mov	r1, fp
 8017ece:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8017ed0:	f7f2 fbe0 	bl	800a694 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017ed4:	4604      	mov	r4, r0
 8017ed6:	b110      	cbz	r0, 8017ede <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8017ed8:	280a      	cmp	r0, #10
 8017eda:	d1f2      	bne.n	8017ec2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8017edc:	e76a      	b.n	8017db4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8017ede:	2400      	movs	r4, #0
 8017ee0:	e769      	b.n	8017db6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8017ee2:	f1bb 0f00 	cmp.w	fp, #0
 8017ee6:	f43f af5a 	beq.w	8017d9e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8017eea:	e775      	b.n	8017dd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08017eec <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8017eec:	b530      	push	{r4, r5, lr}
 8017eee:	8ac4      	ldrh	r4, [r0, #22]
 8017ef0:	8b45      	ldrh	r5, [r0, #26]
 8017ef2:	8343      	strh	r3, [r0, #26]
 8017ef4:	442c      	add	r4, r5
 8017ef6:	1ae4      	subs	r4, r4, r3
 8017ef8:	82c4      	strh	r4, [r0, #22]
 8017efa:	8b83      	ldrh	r3, [r0, #28]
 8017efc:	8b04      	ldrh	r4, [r0, #24]
 8017efe:	4422      	add	r2, r4
 8017f00:	440c      	add	r4, r1
 8017f02:	1a59      	subs	r1, r3, r1
 8017f04:	83c2      	strh	r2, [r0, #30]
 8017f06:	8304      	strh	r4, [r0, #24]
 8017f08:	8381      	strh	r1, [r0, #28]
 8017f0a:	bd30      	pop	{r4, r5, pc}

08017f0c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8017f0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f10:	4604      	mov	r4, r0
 8017f12:	8a47      	ldrh	r7, [r0, #18]
 8017f14:	68c0      	ldr	r0, [r0, #12]
 8017f16:	6803      	ldr	r3, [r0, #0]
 8017f18:	b085      	sub	sp, #20
 8017f1a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017f1c:	4798      	blx	r3
 8017f1e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8017f22:	7a63      	ldrb	r3, [r4, #9]
 8017f24:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8017f28:	42b7      	cmp	r7, r6
 8017f2a:	f103 33ff 	add.w	r3, r3, #4294967295
 8017f2e:	bfac      	ite	ge
 8017f30:	f04f 0900 	movge.w	r9, #0
 8017f34:	f04f 0901 	movlt.w	r9, #1
 8017f38:	2b05      	cmp	r3, #5
 8017f3a:	d804      	bhi.n	8017f46 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8017f3c:	e8df f003 	tbb	[pc, r3]
 8017f40:	470e0854 	.word	0x470e0854
 8017f44:	4c4c      	.short	0x4c4c
 8017f46:	2500      	movs	r5, #0
 8017f48:	46a9      	mov	r9, r5
 8017f4a:	462e      	mov	r6, r5
 8017f4c:	462f      	mov	r7, r5
 8017f4e:	e00d      	b.n	8017f6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8017f50:	42b7      	cmp	r7, r6
 8017f52:	bfb4      	ite	lt
 8017f54:	2600      	movlt	r6, #0
 8017f56:	2601      	movge	r6, #1
 8017f58:	2500      	movs	r5, #0
 8017f5a:	e7f7      	b.n	8017f4c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8017f5c:	42b7      	cmp	r7, r6
 8017f5e:	464d      	mov	r5, r9
 8017f60:	f04f 0900 	mov.w	r9, #0
 8017f64:	bfb4      	ite	lt
 8017f66:	2600      	movlt	r6, #0
 8017f68:	2601      	movge	r6, #1
 8017f6a:	464f      	mov	r7, r9
 8017f6c:	f04f 0800 	mov.w	r8, #0
 8017f70:	f8a4 8016 	strh.w	r8, [r4, #22]
 8017f74:	f8a4 8018 	strh.w	r8, [r4, #24]
 8017f78:	f8cd 8004 	str.w	r8, [sp, #4]
 8017f7c:	2300      	movs	r3, #0
 8017f7e:	9303      	str	r3, [sp, #12]
 8017f80:	8823      	ldrh	r3, [r4, #0]
 8017f82:	2b20      	cmp	r3, #32
 8017f84:	d034      	beq.n	8017ff0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8017f86:	f242 010b 	movw	r1, #8203	; 0x200b
 8017f8a:	1a5a      	subs	r2, r3, r1
 8017f8c:	f1d2 0a00 	rsbs	sl, r2, #0
 8017f90:	eb4a 0a02 	adc.w	sl, sl, r2
 8017f94:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8017f98:	4293      	cmp	r3, r2
 8017f9a:	d009      	beq.n	8017fb0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8017f9c:	428b      	cmp	r3, r1
 8017f9e:	9a01      	ldr	r2, [sp, #4]
 8017fa0:	bf18      	it	ne
 8017fa2:	461a      	movne	r2, r3
 8017fa4:	9201      	str	r2, [sp, #4]
 8017fa6:	bf0c      	ite	eq
 8017fa8:	f04f 0a01 	moveq.w	sl, #1
 8017fac:	f04f 0a00 	movne.w	sl, #0
 8017fb0:	ab03      	add	r3, sp, #12
 8017fb2:	68e2      	ldr	r2, [r4, #12]
 8017fb4:	7a21      	ldrb	r1, [r4, #8]
 8017fb6:	6860      	ldr	r0, [r4, #4]
 8017fb8:	f002 ff88 	bl	801aecc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017fbc:	8020      	strh	r0, [r4, #0]
 8017fbe:	b9d8      	cbnz	r0, 8017ff8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8017fc0:	8ba2      	ldrh	r2, [r4, #28]
 8017fc2:	2300      	movs	r3, #0
 8017fc4:	4611      	mov	r1, r2
 8017fc6:	4620      	mov	r0, r4
 8017fc8:	f7ff ff90 	bl	8017eec <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8017fcc:	e06e      	b.n	80180ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8017fce:	2500      	movs	r5, #0
 8017fd0:	46a9      	mov	r9, r5
 8017fd2:	462e      	mov	r6, r5
 8017fd4:	2701      	movs	r7, #1
 8017fd6:	e7c9      	b.n	8017f6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8017fd8:	42b7      	cmp	r7, r6
 8017fda:	f04f 0500 	mov.w	r5, #0
 8017fde:	bfb4      	ite	lt
 8017fe0:	2700      	movlt	r7, #0
 8017fe2:	2701      	movge	r7, #1
 8017fe4:	462e      	mov	r6, r5
 8017fe6:	e7c1      	b.n	8017f6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8017fe8:	2500      	movs	r5, #0
 8017fea:	46a9      	mov	r9, r5
 8017fec:	2601      	movs	r6, #1
 8017fee:	e7ad      	b.n	8017f4c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8017ff0:	9301      	str	r3, [sp, #4]
 8017ff2:	f04f 0a01 	mov.w	sl, #1
 8017ff6:	e7db      	b.n	8017fb0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8017ff8:	8b63      	ldrh	r3, [r4, #26]
 8017ffa:	280a      	cmp	r0, #10
 8017ffc:	f103 0301 	add.w	r3, r3, #1
 8018000:	8363      	strh	r3, [r4, #26]
 8018002:	d0dd      	beq.n	8017fc0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8018004:	9a03      	ldr	r2, [sp, #12]
 8018006:	bb62      	cbnz	r2, 8018062 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8018008:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801800c:	4298      	cmp	r0, r3
 801800e:	d003      	beq.n	8018018 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8018010:	f242 030b 	movw	r3, #8203	; 0x200b
 8018014:	4298      	cmp	r0, r3
 8018016:	d1b1      	bne.n	8017f7c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018018:	8823      	ldrh	r3, [r4, #0]
 801801a:	8ba1      	ldrh	r1, [r4, #28]
 801801c:	2b20      	cmp	r3, #32
 801801e:	d003      	beq.n	8018028 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8018020:	f242 000b 	movw	r0, #8203	; 0x200b
 8018024:	4283      	cmp	r3, r0
 8018026:	d131      	bne.n	801808c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8018028:	f1ba 0f00 	cmp.w	sl, #0
 801802c:	bf0a      	itet	eq
 801802e:	4688      	moveq	r8, r1
 8018030:	4650      	movne	r0, sl
 8018032:	2001      	moveq	r0, #1
 8018034:	440a      	add	r2, r1
 8018036:	8b23      	ldrh	r3, [r4, #24]
 8018038:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801803c:	b292      	uxth	r2, r2
 801803e:	83a2      	strh	r2, [r4, #28]
 8018040:	4413      	add	r3, r2
 8018042:	f1b9 0f00 	cmp.w	r9, #0
 8018046:	d102      	bne.n	801804e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8018048:	2d00      	cmp	r5, #0
 801804a:	d042      	beq.n	80180d2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801804c:	b300      	cbz	r0, 8018090 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801804e:	8c21      	ldrh	r1, [r4, #32]
 8018050:	4419      	add	r1, r3
 8018052:	458c      	cmp	ip, r1
 8018054:	da37      	bge.n	80180c6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8018056:	8ae1      	ldrh	r1, [r4, #22]
 8018058:	2900      	cmp	r1, #0
 801805a:	d034      	beq.n	80180c6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801805c:	4563      	cmp	r3, ip
 801805e:	dd8d      	ble.n	8017f7c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018060:	e01d      	b.n	801809e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8018062:	8893      	ldrh	r3, [r2, #4]
 8018064:	8023      	strh	r3, [r4, #0]
 8018066:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801806a:	9901      	ldr	r1, [sp, #4]
 801806c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8018070:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8018074:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8018078:	ea4b 0b00 	orr.w	fp, fp, r0
 801807c:	68e0      	ldr	r0, [r4, #12]
 801807e:	6803      	ldr	r3, [r0, #0]
 8018080:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018082:	4798      	blx	r3
 8018084:	eb0b 0200 	add.w	r2, fp, r0
 8018088:	b292      	uxth	r2, r2
 801808a:	e7c5      	b.n	8018018 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801808c:	2000      	movs	r0, #0
 801808e:	e7d1      	b.n	8018034 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8018090:	4563      	cmp	r3, ip
 8018092:	f77f af73 	ble.w	8017f7c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018096:	8ae3      	ldrh	r3, [r4, #22]
 8018098:	2b00      	cmp	r3, #0
 801809a:	f43f af6f 	beq.w	8017f7c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801809e:	2301      	movs	r3, #1
 80180a0:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 80180a4:	8c22      	ldrh	r2, [r4, #32]
 80180a6:	8be3      	ldrh	r3, [r4, #30]
 80180a8:	4413      	add	r3, r2
 80180aa:	83e3      	strh	r3, [r4, #30]
 80180ac:	68e0      	ldr	r0, [r4, #12]
 80180ae:	6803      	ldr	r3, [r0, #0]
 80180b0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80180b2:	4798      	blx	r3
 80180b4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 80180b8:	4418      	add	r0, r3
 80180ba:	8a63      	ldrh	r3, [r4, #18]
 80180bc:	1a18      	subs	r0, r3, r0
 80180be:	8260      	strh	r0, [r4, #18]
 80180c0:	b005      	add	sp, #20
 80180c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80180c6:	2300      	movs	r3, #0
 80180c8:	4611      	mov	r1, r2
 80180ca:	4620      	mov	r0, r4
 80180cc:	f7ff ff0e 	bl	8017eec <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80180d0:	e754      	b.n	8017f7c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80180d2:	4563      	cmp	r3, ip
 80180d4:	dd14      	ble.n	8018100 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 80180d6:	b117      	cbz	r7, 80180de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 80180d8:	2301      	movs	r3, #1
 80180da:	460a      	mov	r2, r1
 80180dc:	e772      	b.n	8017fc4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 80180de:	2e00      	cmp	r6, #0
 80180e0:	f43f af4c 	beq.w	8017f7c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80180e4:	2800      	cmp	r0, #0
 80180e6:	f47f af49 	bne.w	8017f7c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80180ea:	f1ba 0f00 	cmp.w	sl, #0
 80180ee:	d002      	beq.n	80180f6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 80180f0:	2301      	movs	r3, #1
 80180f2:	4642      	mov	r2, r8
 80180f4:	e767      	b.n	8017fc6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 80180f6:	8ae3      	ldrh	r3, [r4, #22]
 80180f8:	2b00      	cmp	r3, #0
 80180fa:	f43f af3f 	beq.w	8017f7c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80180fe:	e7d5      	b.n	80180ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8018100:	2800      	cmp	r0, #0
 8018102:	f47f af3b 	bne.w	8017f7c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018106:	f1ba 0f00 	cmp.w	sl, #0
 801810a:	f43f af37 	beq.w	8017f7c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801810e:	2301      	movs	r3, #1
 8018110:	4642      	mov	r2, r8
 8018112:	e7da      	b.n	80180ca <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08018114 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8018114:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018116:	4605      	mov	r5, r0
 8018118:	b08f      	sub	sp, #60	; 0x3c
 801811a:	4617      	mov	r7, r2
 801811c:	461c      	mov	r4, r3
 801811e:	460e      	mov	r6, r1
 8018120:	b1d1      	cbz	r1, 8018158 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8018122:	681b      	ldr	r3, [r3, #0]
 8018124:	4620      	mov	r0, r4
 8018126:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018128:	4798      	blx	r3
 801812a:	4240      	negs	r0, r0
 801812c:	b200      	sxth	r0, r0
 801812e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8018132:	9603      	str	r6, [sp, #12]
 8018134:	9700      	str	r7, [sp, #0]
 8018136:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801813a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801813e:	4629      	mov	r1, r5
 8018140:	a805      	add	r0, sp, #20
 8018142:	f7ff fcbf 	bl	8017ac4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8018146:	2401      	movs	r4, #1
 8018148:	a805      	add	r0, sp, #20
 801814a:	f7ff fedf 	bl	8017f0c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801814e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8018152:	b163      	cbz	r3, 801816e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8018154:	3401      	adds	r4, #1
 8018156:	e7f7      	b.n	8018148 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8018158:	f002 ff86 	bl	801b068 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801815c:	2401      	movs	r4, #1
 801815e:	280a      	cmp	r0, #10
 8018160:	4628      	mov	r0, r5
 8018162:	bf08      	it	eq
 8018164:	3401      	addeq	r4, #1
 8018166:	f002 ff7f 	bl	801b068 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801816a:	2800      	cmp	r0, #0
 801816c:	d1f7      	bne.n	801815e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801816e:	b2a0      	uxth	r0, r4
 8018170:	b00f      	add	sp, #60	; 0x3c
 8018172:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018174 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8018174:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018178:	b0e3      	sub	sp, #396	; 0x18c
 801817a:	461c      	mov	r4, r3
 801817c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 801817e:	4683      	mov	fp, r0
 8018180:	4688      	mov	r8, r1
 8018182:	2b00      	cmp	r3, #0
 8018184:	f000 8112 	beq.w	80183ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018188:	6823      	ldr	r3, [r4, #0]
 801818a:	2b00      	cmp	r3, #0
 801818c:	f000 810e 	beq.w	80183ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018190:	7ba3      	ldrb	r3, [r4, #14]
 8018192:	2b00      	cmp	r3, #0
 8018194:	f000 810a 	beq.w	80183ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018198:	6810      	ldr	r0, [r2, #0]
 801819a:	6851      	ldr	r1, [r2, #4]
 801819c:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80181a0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80181a4:	ad0a      	add	r5, sp, #40	; 0x28
 80181a6:	462b      	mov	r3, r5
 80181a8:	c303      	stmia	r3!, {r0, r1}
 80181aa:	2100      	movs	r1, #0
 80181ac:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80181b0:	910c      	str	r1, [sp, #48]	; 0x30
 80181b2:	79a2      	ldrb	r2, [r4, #6]
 80181b4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80181b8:	a90c      	add	r1, sp, #48	; 0x30
 80181ba:	4628      	mov	r0, r5
 80181bc:	f7ff fd01 	bl	8017bc2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80181c0:	a90c      	add	r1, sp, #48	; 0x30
 80181c2:	4608      	mov	r0, r1
 80181c4:	79a2      	ldrb	r2, [r4, #6]
 80181c6:	f7ff fcfc 	bl	8017bc2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80181ca:	a817      	add	r0, sp, #92	; 0x5c
 80181cc:	f002 fb20 	bl	801a810 <_ZN8touchgfx12TextProviderC1Ev>
 80181d0:	6820      	ldr	r0, [r4, #0]
 80181d2:	6803      	ldr	r3, [r0, #0]
 80181d4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80181d6:	4798      	blx	r3
 80181d8:	4606      	mov	r6, r0
 80181da:	6820      	ldr	r0, [r4, #0]
 80181dc:	6803      	ldr	r3, [r0, #0]
 80181de:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80181e0:	4798      	blx	r3
 80181e2:	4633      	mov	r3, r6
 80181e4:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80181e6:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80181e8:	9000      	str	r0, [sp, #0]
 80181ea:	a817      	add	r0, sp, #92	; 0x5c
 80181ec:	f002 fb6b 	bl	801a8c6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80181f0:	6820      	ldr	r0, [r4, #0]
 80181f2:	f894 a004 	ldrb.w	sl, [r4, #4]
 80181f6:	6803      	ldr	r3, [r0, #0]
 80181f8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80181fa:	4798      	blx	r3
 80181fc:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8018200:	6823      	ldr	r3, [r4, #0]
 8018202:	4607      	mov	r7, r0
 8018204:	4406      	add	r6, r0
 8018206:	a830      	add	r0, sp, #192	; 0xc0
 8018208:	f893 9009 	ldrb.w	r9, [r3, #9]
 801820c:	f002 fb00 	bl	801a810 <_ZN8touchgfx12TextProviderC1Ev>
 8018210:	7c23      	ldrb	r3, [r4, #16]
 8018212:	b17b      	cbz	r3, 8018234 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8018214:	6820      	ldr	r0, [r4, #0]
 8018216:	6803      	ldr	r3, [r0, #0]
 8018218:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801821a:	4798      	blx	r3
 801821c:	9009      	str	r0, [sp, #36]	; 0x24
 801821e:	6820      	ldr	r0, [r4, #0]
 8018220:	6802      	ldr	r2, [r0, #0]
 8018222:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8018224:	4790      	blx	r2
 8018226:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018228:	9000      	str	r0, [sp, #0]
 801822a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801822c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801822e:	a830      	add	r0, sp, #192	; 0xc0
 8018230:	f002 fb49 	bl	801a8c6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018234:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8018238:	7be2      	ldrb	r2, [r4, #15]
 801823a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801823e:	1a8a      	subs	r2, r1, r2
 8018240:	7c21      	ldrb	r1, [r4, #16]
 8018242:	9103      	str	r1, [sp, #12]
 8018244:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8018248:	9102      	str	r1, [sp, #8]
 801824a:	6821      	ldr	r1, [r4, #0]
 801824c:	9101      	str	r1, [sp, #4]
 801824e:	7961      	ldrb	r1, [r4, #5]
 8018250:	9100      	str	r1, [sp, #0]
 8018252:	b292      	uxth	r2, r2
 8018254:	a930      	add	r1, sp, #192	; 0xc0
 8018256:	a80e      	add	r0, sp, #56	; 0x38
 8018258:	f7ff fc34 	bl	8017ac4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801825c:	2e00      	cmp	r6, #0
 801825e:	dc5b      	bgt.n	8018318 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8018260:	af17      	add	r7, sp, #92	; 0x5c
 8018262:	f04f 0900 	mov.w	r9, #0
 8018266:	7c23      	ldrb	r3, [r4, #16]
 8018268:	2b00      	cmp	r3, #0
 801826a:	f000 80b1 	beq.w	80183d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801826e:	a80e      	add	r0, sp, #56	; 0x38
 8018270:	f7ff fe4c 	bl	8017f0c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8018274:	f1ba 0f00 	cmp.w	sl, #0
 8018278:	f000 80a5 	beq.w	80183c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801827c:	7c23      	ldrb	r3, [r4, #16]
 801827e:	9309      	str	r3, [sp, #36]	; 0x24
 8018280:	2264      	movs	r2, #100	; 0x64
 8018282:	4639      	mov	r1, r7
 8018284:	a849      	add	r0, sp, #292	; 0x124
 8018286:	f015 ff62 	bl	802e14e <memcpy>
 801828a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801828c:	2b00      	cmp	r3, #0
 801828e:	f000 80a7 	beq.w	80183e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8018292:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8018296:	7922      	ldrb	r2, [r4, #4]
 8018298:	2a01      	cmp	r2, #1
 801829a:	f040 808a 	bne.w	80183b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 801829e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 80182a2:	1ac0      	subs	r0, r0, r3
 80182a4:	2302      	movs	r3, #2
 80182a6:	fb90 f0f3 	sdiv	r0, r0, r3
 80182aa:	b200      	sxth	r0, r0
 80182ac:	7c23      	ldrb	r3, [r4, #16]
 80182ae:	2b00      	cmp	r3, #0
 80182b0:	f000 808b 	beq.w	80183ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80182b4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 80182b8:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 80182bc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80182c0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80182c4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80182c8:	4410      	add	r0, r2
 80182ca:	b200      	sxth	r0, r0
 80182cc:	9000      	str	r0, [sp, #0]
 80182ce:	e9cd 9703 	strd	r9, r7, [sp, #12]
 80182d2:	e9cd 5401 	strd	r5, r4, [sp, #4]
 80182d6:	4642      	mov	r2, r8
 80182d8:	2100      	movs	r1, #0
 80182da:	4658      	mov	r0, fp
 80182dc:	f7ff fca2 	bl	8017c24 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 80182e0:	2800      	cmp	r0, #0
 80182e2:	d163      	bne.n	80183ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80182e4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80182e8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80182ec:	b2b2      	uxth	r2, r6
 80182ee:	4413      	add	r3, r2
 80182f0:	1a8a      	subs	r2, r1, r2
 80182f2:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 80182f6:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 80182fa:	b21b      	sxth	r3, r3
 80182fc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018300:	2a00      	cmp	r2, #0
 8018302:	d153      	bne.n	80183ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018304:	6822      	ldr	r2, [r4, #0]
 8018306:	8869      	ldrh	r1, [r5, #2]
 8018308:	7a12      	ldrb	r2, [r2, #8]
 801830a:	1a9b      	subs	r3, r3, r2
 801830c:	88ea      	ldrh	r2, [r5, #6]
 801830e:	440a      	add	r2, r1
 8018310:	b212      	sxth	r2, r2
 8018312:	4293      	cmp	r3, r2
 8018314:	dda7      	ble.n	8018266 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8018316:	e049      	b.n	80183ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018318:	7c23      	ldrb	r3, [r4, #16]
 801831a:	444f      	add	r7, r9
 801831c:	b1c3      	cbz	r3, 8018350 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801831e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8018322:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8018326:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801832a:	443b      	add	r3, r7
 801832c:	4293      	cmp	r3, r2
 801832e:	da97      	bge.n	8018260 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8018330:	a80e      	add	r0, sp, #56	; 0x38
 8018332:	f7ff fdeb 	bl	8017f0c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8018336:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801833a:	3b01      	subs	r3, #1
 801833c:	b29b      	uxth	r3, r3
 801833e:	454b      	cmp	r3, r9
 8018340:	9309      	str	r3, [sp, #36]	; 0x24
 8018342:	d021      	beq.n	8018388 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8018344:	7961      	ldrb	r1, [r4, #5]
 8018346:	a817      	add	r0, sp, #92	; 0x5c
 8018348:	f7f2 f9a4 	bl	800a694 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801834c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801834e:	e7f4      	b.n	801833a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8018350:	fa1f f986 	uxth.w	r9, r6
 8018354:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8018358:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801835c:	443b      	add	r3, r7
 801835e:	4293      	cmp	r3, r2
 8018360:	f6bf af7e 	bge.w	8018260 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8018364:	a817      	add	r0, sp, #92	; 0x5c
 8018366:	f002 fe7f 	bl	801b068 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801836a:	b1f8      	cbz	r0, 80183ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801836c:	280a      	cmp	r0, #10
 801836e:	d1f1      	bne.n	8018354 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8018370:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8018374:	444b      	add	r3, r9
 8018376:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801837a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801837e:	eba3 0309 	sub.w	r3, r3, r9
 8018382:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8018386:	e7e5      	b.n	8018354 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8018388:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801838c:	b2b3      	uxth	r3, r6
 801838e:	441a      	add	r2, r3
 8018390:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8018394:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8018398:	1ad3      	subs	r3, r2, r3
 801839a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801839e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80183a2:	b11b      	cbz	r3, 80183ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80183a4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 80183a8:	2b00      	cmp	r3, #0
 80183aa:	d0ba      	beq.n	8018322 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80183ac:	b063      	add	sp, #396	; 0x18c
 80183ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80183b2:	2a02      	cmp	r2, #2
 80183b4:	d105      	bne.n	80183c2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 80183b6:	7be2      	ldrb	r2, [r4, #15]
 80183b8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80183bc:	1a80      	subs	r0, r0, r2
 80183be:	1ac0      	subs	r0, r0, r3
 80183c0:	e773      	b.n	80182aa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 80183c2:	2000      	movs	r0, #0
 80183c4:	e772      	b.n	80182ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80183c6:	7be0      	ldrb	r0, [r4, #15]
 80183c8:	e770      	b.n	80182ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80183ca:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80183ce:	e773      	b.n	80182b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 80183d0:	f1ba 0f00 	cmp.w	sl, #0
 80183d4:	d0f7      	beq.n	80183c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80183d6:	2264      	movs	r2, #100	; 0x64
 80183d8:	4639      	mov	r1, r7
 80183da:	a849      	add	r0, sp, #292	; 0x124
 80183dc:	f015 feb7 	bl	802e14e <memcpy>
 80183e0:	2300      	movs	r3, #0
 80183e2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80183e6:	6821      	ldr	r1, [r4, #0]
 80183e8:	a849      	add	r0, sp, #292	; 0x124
 80183ea:	f7ff fbae 	bl	8017b4a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80183ee:	b203      	sxth	r3, r0
 80183f0:	e751      	b.n	8018296 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

080183f2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80183f2:	2b03      	cmp	r3, #3
 80183f4:	d818      	bhi.n	8018428 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 80183f6:	e8df f003 	tbb	[pc, r3]
 80183fa:	0602      	.short	0x0602
 80183fc:	130d      	.short	0x130d
 80183fe:	f9b0 2000 	ldrsh.w	r2, [r0]
 8018402:	1850      	adds	r0, r2, r1
 8018404:	4770      	bx	lr
 8018406:	8803      	ldrh	r3, [r0, #0]
 8018408:	8880      	ldrh	r0, [r0, #4]
 801840a:	4418      	add	r0, r3
 801840c:	b200      	sxth	r0, r0
 801840e:	1a80      	subs	r0, r0, r2
 8018410:	3801      	subs	r0, #1
 8018412:	4770      	bx	lr
 8018414:	8803      	ldrh	r3, [r0, #0]
 8018416:	8880      	ldrh	r0, [r0, #4]
 8018418:	4418      	add	r0, r3
 801841a:	b200      	sxth	r0, r0
 801841c:	1a40      	subs	r0, r0, r1
 801841e:	e7f7      	b.n	8018410 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8018420:	f9b0 0000 	ldrsh.w	r0, [r0]
 8018424:	4410      	add	r0, r2
 8018426:	4770      	bx	lr
 8018428:	2000      	movs	r0, #0
 801842a:	4770      	bx	lr

0801842c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801842c:	2b03      	cmp	r3, #3
 801842e:	d817      	bhi.n	8018460 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8018430:	e8df f003 	tbb	[pc, r3]
 8018434:	10090602 	.word	0x10090602
 8018438:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801843c:	1850      	adds	r0, r2, r1
 801843e:	4770      	bx	lr
 8018440:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8018444:	e7fa      	b.n	801843c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8018446:	8843      	ldrh	r3, [r0, #2]
 8018448:	88c0      	ldrh	r0, [r0, #6]
 801844a:	4418      	add	r0, r3
 801844c:	b200      	sxth	r0, r0
 801844e:	1a80      	subs	r0, r0, r2
 8018450:	3801      	subs	r0, #1
 8018452:	4770      	bx	lr
 8018454:	8843      	ldrh	r3, [r0, #2]
 8018456:	88c0      	ldrh	r0, [r0, #6]
 8018458:	4418      	add	r0, r3
 801845a:	b200      	sxth	r0, r0
 801845c:	1a40      	subs	r0, r0, r1
 801845e:	e7f7      	b.n	8018450 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8018460:	2000      	movs	r0, #0
 8018462:	4770      	bx	lr

08018464 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8018464:	4b01      	ldr	r3, [pc, #4]	; (801846c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8018466:	2200      	movs	r2, #0
 8018468:	601a      	str	r2, [r3, #0]
 801846a:	4770      	bx	lr
 801846c:	2001385c 	.word	0x2001385c

08018470 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8018470:	4603      	mov	r3, r0
 8018472:	b1c8      	cbz	r0, 80184a8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8018474:	0c02      	lsrs	r2, r0, #16
 8018476:	0412      	lsls	r2, r2, #16
 8018478:	b9a2      	cbnz	r2, 80184a4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801847a:	0403      	lsls	r3, r0, #16
 801847c:	2010      	movs	r0, #16
 801847e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8018482:	bf04      	itt	eq
 8018484:	021b      	lsleq	r3, r3, #8
 8018486:	3008      	addeq	r0, #8
 8018488:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801848c:	bf04      	itt	eq
 801848e:	011b      	lsleq	r3, r3, #4
 8018490:	3004      	addeq	r0, #4
 8018492:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8018496:	bf04      	itt	eq
 8018498:	009b      	lsleq	r3, r3, #2
 801849a:	3002      	addeq	r0, #2
 801849c:	2b00      	cmp	r3, #0
 801849e:	db04      	blt.n	80184aa <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80184a0:	3001      	adds	r0, #1
 80184a2:	4770      	bx	lr
 80184a4:	2000      	movs	r0, #0
 80184a6:	e7ea      	b.n	801847e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80184a8:	2020      	movs	r0, #32
 80184aa:	4770      	bx	lr

080184ac <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80184ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80184b0:	b087      	sub	sp, #28
 80184b2:	460d      	mov	r5, r1
 80184b4:	4616      	mov	r6, r2
 80184b6:	4698      	mov	r8, r3
 80184b8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80184bc:	4601      	mov	r1, r0
 80184be:	b120      	cbz	r0, 80184ca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80184c0:	b11a      	cbz	r2, 80184ca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80184c2:	2d1f      	cmp	r5, #31
 80184c4:	d801      	bhi.n	80184ca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80184c6:	2b1f      	cmp	r3, #31
 80184c8:	d904      	bls.n	80184d4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 80184ca:	2000      	movs	r0, #0
 80184cc:	6038      	str	r0, [r7, #0]
 80184ce:	b007      	add	sp, #28
 80184d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80184d4:	b97d      	cbnz	r5, 80184f6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 80184d6:	b143      	cbz	r3, 80184ea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 80184d8:	4602      	mov	r2, r0
 80184da:	e9cd 4700 	strd	r4, r7, [sp]
 80184de:	462b      	mov	r3, r5
 80184e0:	4641      	mov	r1, r8
 80184e2:	4630      	mov	r0, r6
 80184e4:	f7ff ffe2 	bl	80184ac <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80184e8:	e7f1      	b.n	80184ce <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80184ea:	f04f 33ff 	mov.w	r3, #4294967295
 80184ee:	603b      	str	r3, [r7, #0]
 80184f0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80184f4:	e7eb      	b.n	80184ce <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80184f6:	fa32 fa05 	lsrs.w	sl, r2, r5
 80184fa:	d106      	bne.n	801850a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 80184fc:	4346      	muls	r6, r0
 80184fe:	fbb6 f0f4 	udiv	r0, r6, r4
 8018502:	fb04 6610 	mls	r6, r4, r0, r6
 8018506:	603e      	str	r6, [r7, #0]
 8018508:	e7e1      	b.n	80184ce <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801850a:	2201      	movs	r2, #1
 801850c:	40aa      	lsls	r2, r5
 801850e:	3a01      	subs	r2, #1
 8018510:	4016      	ands	r6, r2
 8018512:	fa00 fb05 	lsl.w	fp, r0, r5
 8018516:	4630      	mov	r0, r6
 8018518:	fbbb f9f4 	udiv	r9, fp, r4
 801851c:	fb0a f309 	mul.w	r3, sl, r9
 8018520:	9303      	str	r3, [sp, #12]
 8018522:	f7ff ffa5 	bl	8018470 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018526:	462b      	mov	r3, r5
 8018528:	460a      	mov	r2, r1
 801852a:	e9cd 4700 	strd	r4, r7, [sp]
 801852e:	4601      	mov	r1, r0
 8018530:	4630      	mov	r0, r6
 8018532:	f7ff ffbb 	bl	80184ac <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018536:	fb04 b919 	mls	r9, r4, r9, fp
 801853a:	4606      	mov	r6, r0
 801853c:	4648      	mov	r0, r9
 801853e:	eb05 0108 	add.w	r1, r5, r8
 8018542:	f7ff ff95 	bl	8018470 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018546:	ab05      	add	r3, sp, #20
 8018548:	e9cd 4300 	strd	r4, r3, [sp]
 801854c:	464a      	mov	r2, r9
 801854e:	4603      	mov	r3, r0
 8018550:	4650      	mov	r0, sl
 8018552:	f7ff ffab 	bl	80184ac <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018556:	6839      	ldr	r1, [r7, #0]
 8018558:	9a05      	ldr	r2, [sp, #20]
 801855a:	9b03      	ldr	r3, [sp, #12]
 801855c:	4411      	add	r1, r2
 801855e:	fbb1 f2f4 	udiv	r2, r1, r4
 8018562:	18d3      	adds	r3, r2, r3
 8018564:	441e      	add	r6, r3
 8018566:	fb04 1412 	mls	r4, r4, r2, r1
 801856a:	4430      	add	r0, r6
 801856c:	603c      	str	r4, [r7, #0]
 801856e:	e7ae      	b.n	80184ce <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08018570 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8018570:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018574:	b085      	sub	sp, #20
 8018576:	f1b0 0900 	subs.w	r9, r0, #0
 801857a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801857c:	461d      	mov	r5, r3
 801857e:	bfbf      	itttt	lt
 8018580:	6823      	ldrlt	r3, [r4, #0]
 8018582:	425b      	neglt	r3, r3
 8018584:	f1c9 0900 	rsblt	r9, r9, #0
 8018588:	6023      	strlt	r3, [r4, #0]
 801858a:	bfb4      	ite	lt
 801858c:	f04f 36ff 	movlt.w	r6, #4294967295
 8018590:	2601      	movge	r6, #1
 8018592:	2a00      	cmp	r2, #0
 8018594:	4617      	mov	r7, r2
 8018596:	da04      	bge.n	80185a2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8018598:	6823      	ldr	r3, [r4, #0]
 801859a:	425b      	negs	r3, r3
 801859c:	4257      	negs	r7, r2
 801859e:	4276      	negs	r6, r6
 80185a0:	6023      	str	r3, [r4, #0]
 80185a2:	2d00      	cmp	r5, #0
 80185a4:	4638      	mov	r0, r7
 80185a6:	bfba      	itte	lt
 80185a8:	426d      	neglt	r5, r5
 80185aa:	f04f 38ff 	movlt.w	r8, #4294967295
 80185ae:	f04f 0801 	movge.w	r8, #1
 80185b2:	f7ff ff5d 	bl	8018470 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80185b6:	ab03      	add	r3, sp, #12
 80185b8:	e9cd 5300 	strd	r5, r3, [sp]
 80185bc:	463a      	mov	r2, r7
 80185be:	4603      	mov	r3, r0
 80185c0:	4648      	mov	r0, r9
 80185c2:	f7ff ff73 	bl	80184ac <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80185c6:	6823      	ldr	r3, [r4, #0]
 80185c8:	9a03      	ldr	r2, [sp, #12]
 80185ca:	4546      	cmp	r6, r8
 80185cc:	441a      	add	r2, r3
 80185ce:	fb92 f3f5 	sdiv	r3, r2, r5
 80185d2:	4418      	add	r0, r3
 80185d4:	bf18      	it	ne
 80185d6:	4240      	negne	r0, r0
 80185d8:	fb05 2313 	mls	r3, r5, r3, r2
 80185dc:	1c72      	adds	r2, r6, #1
 80185de:	6023      	str	r3, [r4, #0]
 80185e0:	d105      	bne.n	80185ee <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80185e2:	2b00      	cmp	r3, #0
 80185e4:	f1c3 0200 	rsb	r2, r3, #0
 80185e8:	db0b      	blt.n	8018602 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 80185ea:	6022      	str	r2, [r4, #0]
 80185ec:	e006      	b.n	80185fc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80185ee:	2e01      	cmp	r6, #1
 80185f0:	d104      	bne.n	80185fc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80185f2:	2b00      	cmp	r3, #0
 80185f4:	da02      	bge.n	80185fc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80185f6:	442b      	add	r3, r5
 80185f8:	3801      	subs	r0, #1
 80185fa:	6023      	str	r3, [r4, #0]
 80185fc:	b005      	add	sp, #20
 80185fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018602:	3801      	subs	r0, #1
 8018604:	1b52      	subs	r2, r2, r5
 8018606:	e7f0      	b.n	80185ea <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08018608 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8018608:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801860c:	4c1c      	ldr	r4, [pc, #112]	; (8018680 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801860e:	6807      	ldr	r7, [r0, #0]
 8018610:	69a3      	ldr	r3, [r4, #24]
 8018612:	4605      	mov	r5, r0
 8018614:	b92b      	cbnz	r3, 8018622 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8018616:	6840      	ldr	r0, [r0, #4]
 8018618:	e9c5 7000 	strd	r7, r0, [r5]
 801861c:	b004      	add	sp, #16
 801861e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018622:	68a2      	ldr	r2, [r4, #8]
 8018624:	6820      	ldr	r0, [r4, #0]
 8018626:	ae04      	add	r6, sp, #16
 8018628:	f04f 0802 	mov.w	r8, #2
 801862c:	fb93 f1f8 	sdiv	r1, r3, r8
 8018630:	440a      	add	r2, r1
 8018632:	f846 2d04 	str.w	r2, [r6, #-4]!
 8018636:	69e1      	ldr	r1, [r4, #28]
 8018638:	9600      	str	r6, [sp, #0]
 801863a:	463a      	mov	r2, r7
 801863c:	f7ff ff98 	bl	8018570 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018640:	69a3      	ldr	r3, [r4, #24]
 8018642:	686a      	ldr	r2, [r5, #4]
 8018644:	6a21      	ldr	r1, [r4, #32]
 8018646:	9600      	str	r6, [sp, #0]
 8018648:	4607      	mov	r7, r0
 801864a:	6860      	ldr	r0, [r4, #4]
 801864c:	f7ff ff90 	bl	8018570 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018650:	6962      	ldr	r2, [r4, #20]
 8018652:	69a3      	ldr	r3, [r4, #24]
 8018654:	fb93 f8f8 	sdiv	r8, r3, r8
 8018658:	4442      	add	r2, r8
 801865a:	9203      	str	r2, [sp, #12]
 801865c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801865e:	682a      	ldr	r2, [r5, #0]
 8018660:	9600      	str	r6, [sp, #0]
 8018662:	4407      	add	r7, r0
 8018664:	68e0      	ldr	r0, [r4, #12]
 8018666:	f7ff ff83 	bl	8018570 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801866a:	9600      	str	r6, [sp, #0]
 801866c:	4680      	mov	r8, r0
 801866e:	69a3      	ldr	r3, [r4, #24]
 8018670:	686a      	ldr	r2, [r5, #4]
 8018672:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8018674:	6920      	ldr	r0, [r4, #16]
 8018676:	f7ff ff7b 	bl	8018570 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801867a:	4440      	add	r0, r8
 801867c:	e7cc      	b.n	8018618 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801867e:	bf00      	nop
 8018680:	20013860 	.word	0x20013860

08018684 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8018684:	4b07      	ldr	r3, [pc, #28]	; (80186a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8018686:	781b      	ldrb	r3, [r3, #0]
 8018688:	2b01      	cmp	r3, #1
 801868a:	d109      	bne.n	80186a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 801868c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8018690:	f9b0 2000 	ldrsh.w	r2, [r0]
 8018694:	8003      	strh	r3, [r0, #0]
 8018696:	4b04      	ldr	r3, [pc, #16]	; (80186a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8018698:	881b      	ldrh	r3, [r3, #0]
 801869a:	3b01      	subs	r3, #1
 801869c:	1a9b      	subs	r3, r3, r2
 801869e:	800b      	strh	r3, [r1, #0]
 80186a0:	4770      	bx	lr
 80186a2:	bf00      	nop
 80186a4:	20013844 	.word	0x20013844
 80186a8:	20013840 	.word	0x20013840

080186ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80186ac:	b510      	push	{r4, lr}
 80186ae:	4b07      	ldr	r3, [pc, #28]	; (80186cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80186b0:	781b      	ldrb	r3, [r3, #0]
 80186b2:	2b01      	cmp	r3, #1
 80186b4:	d108      	bne.n	80186c8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80186b6:	4b06      	ldr	r3, [pc, #24]	; (80186d0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80186b8:	880c      	ldrh	r4, [r1, #0]
 80186ba:	881b      	ldrh	r3, [r3, #0]
 80186bc:	f9b0 2000 	ldrsh.w	r2, [r0]
 80186c0:	3b01      	subs	r3, #1
 80186c2:	1b1b      	subs	r3, r3, r4
 80186c4:	8003      	strh	r3, [r0, #0]
 80186c6:	800a      	strh	r2, [r1, #0]
 80186c8:	bd10      	pop	{r4, pc}
 80186ca:	bf00      	nop
 80186cc:	20013844 	.word	0x20013844
 80186d0:	20013840 	.word	0x20013840

080186d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80186d4:	b510      	push	{r4, lr}
 80186d6:	4b0a      	ldr	r3, [pc, #40]	; (8018700 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80186d8:	781b      	ldrb	r3, [r3, #0]
 80186da:	2b01      	cmp	r3, #1
 80186dc:	d10e      	bne.n	80186fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 80186de:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80186e2:	8843      	ldrh	r3, [r0, #2]
 80186e4:	f9b0 4000 	ldrsh.w	r4, [r0]
 80186e8:	8044      	strh	r4, [r0, #2]
 80186ea:	18ca      	adds	r2, r1, r3
 80186ec:	4b05      	ldr	r3, [pc, #20]	; (8018704 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80186ee:	881b      	ldrh	r3, [r3, #0]
 80186f0:	1a9b      	subs	r3, r3, r2
 80186f2:	8003      	strh	r3, [r0, #0]
 80186f4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80186f8:	80c3      	strh	r3, [r0, #6]
 80186fa:	8081      	strh	r1, [r0, #4]
 80186fc:	bd10      	pop	{r4, pc}
 80186fe:	bf00      	nop
 8018700:	20013844 	.word	0x20013844
 8018704:	20013840 	.word	0x20013840

08018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8018708:	4b08      	ldr	r3, [pc, #32]	; (801872c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801870a:	781b      	ldrb	r3, [r3, #0]
 801870c:	2b01      	cmp	r3, #1
 801870e:	d10c      	bne.n	801872a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8018710:	8803      	ldrh	r3, [r0, #0]
 8018712:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8018716:	8842      	ldrh	r2, [r0, #2]
 8018718:	8002      	strh	r2, [r0, #0]
 801871a:	185a      	adds	r2, r3, r1
 801871c:	4b04      	ldr	r3, [pc, #16]	; (8018730 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801871e:	881b      	ldrh	r3, [r3, #0]
 8018720:	1a9b      	subs	r3, r3, r2
 8018722:	8043      	strh	r3, [r0, #2]
 8018724:	88c3      	ldrh	r3, [r0, #6]
 8018726:	8083      	strh	r3, [r0, #4]
 8018728:	80c1      	strh	r1, [r0, #6]
 801872a:	4770      	bx	lr
 801872c:	20013844 	.word	0x20013844
 8018730:	20013840 	.word	0x20013840

08018734 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8018734:	b510      	push	{r4, lr}
 8018736:	4b07      	ldr	r3, [pc, #28]	; (8018754 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8018738:	781b      	ldrb	r3, [r3, #0]
 801873a:	2b01      	cmp	r3, #1
 801873c:	d108      	bne.n	8018750 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801873e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8018742:	f9b0 4000 	ldrsh.w	r4, [r0]
 8018746:	8003      	strh	r3, [r0, #0]
 8018748:	8893      	ldrh	r3, [r2, #4]
 801874a:	3b01      	subs	r3, #1
 801874c:	1b1b      	subs	r3, r3, r4
 801874e:	800b      	strh	r3, [r1, #0]
 8018750:	bd10      	pop	{r4, pc}
 8018752:	bf00      	nop
 8018754:	20013844 	.word	0x20013844

08018758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8018758:	4b0b      	ldr	r3, [pc, #44]	; (8018788 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801875a:	781b      	ldrb	r3, [r3, #0]
 801875c:	2b01      	cmp	r3, #1
 801875e:	d111      	bne.n	8018784 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8018760:	680b      	ldr	r3, [r1, #0]
 8018762:	ed90 7a00 	vldr	s14, [r0]
 8018766:	6003      	str	r3, [r0, #0]
 8018768:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 801876c:	eddf 6a07 	vldr	s13, [pc, #28]	; 801878c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8018770:	ee07 3a90 	vmov	s15, r3
 8018774:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018778:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801877c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8018780:	edc1 7a00 	vstr	s15, [r1]
 8018784:	4770      	bx	lr
 8018786:	bf00      	nop
 8018788:	20013844 	.word	0x20013844
 801878c:	38d1b717 	.word	0x38d1b717

08018790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8018790:	b510      	push	{r4, lr}
 8018792:	4b0a      	ldr	r3, [pc, #40]	; (80187bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8018794:	781b      	ldrb	r3, [r3, #0]
 8018796:	2b01      	cmp	r3, #1
 8018798:	460a      	mov	r2, r1
 801879a:	d10d      	bne.n	80187b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 801879c:	8881      	ldrh	r1, [r0, #4]
 801879e:	8803      	ldrh	r3, [r0, #0]
 80187a0:	440b      	add	r3, r1
 80187a2:	4601      	mov	r1, r0
 80187a4:	3b01      	subs	r3, #1
 80187a6:	f821 3b02 	strh.w	r3, [r1], #2
 80187aa:	f7ff ffc3 	bl	8018734 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80187ae:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80187b2:	88c2      	ldrh	r2, [r0, #6]
 80187b4:	8082      	strh	r2, [r0, #4]
 80187b6:	80c3      	strh	r3, [r0, #6]
 80187b8:	bd10      	pop	{r4, pc}
 80187ba:	bf00      	nop
 80187bc:	20013844 	.word	0x20013844

080187c0 <_ZN8touchgfx11Application13requestRedrawEv>:
 80187c0:	4b06      	ldr	r3, [pc, #24]	; (80187dc <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80187c2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80187c6:	4b06      	ldr	r3, [pc, #24]	; (80187e0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80187c8:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 80187cc:	f9b3 3000 	ldrsh.w	r3, [r3]
 80187d0:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 80187d4:	2100      	movs	r1, #0
 80187d6:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 80187da:	4770      	bx	lr
 80187dc:	20013840 	.word	0x20013840
 80187e0:	20013842 	.word	0x20013842

080187e4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80187e4:	4b03      	ldr	r3, [pc, #12]	; (80187f4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80187e6:	6818      	ldr	r0, [r3, #0]
 80187e8:	b110      	cbz	r0, 80187f0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80187ea:	6803      	ldr	r3, [r0, #0]
 80187ec:	699b      	ldr	r3, [r3, #24]
 80187ee:	4718      	bx	r3
 80187f0:	4770      	bx	lr
 80187f2:	bf00      	nop
 80187f4:	20013890 	.word	0x20013890

080187f8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80187f8:	4770      	bx	lr
	...

080187fc <_ZN8touchgfx11Application4drawEv>:
 80187fc:	b507      	push	{r0, r1, r2, lr}
 80187fe:	4b09      	ldr	r3, [pc, #36]	; (8018824 <_ZN8touchgfx11Application4drawEv+0x28>)
 8018800:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018804:	4b08      	ldr	r3, [pc, #32]	; (8018828 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8018806:	f8ad 2004 	strh.w	r2, [sp, #4]
 801880a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801880e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018812:	6803      	ldr	r3, [r0, #0]
 8018814:	2100      	movs	r1, #0
 8018816:	9100      	str	r1, [sp, #0]
 8018818:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801881a:	4669      	mov	r1, sp
 801881c:	4798      	blx	r3
 801881e:	b003      	add	sp, #12
 8018820:	f85d fb04 	ldr.w	pc, [sp], #4
 8018824:	20013840 	.word	0x20013840
 8018828:	20013842 	.word	0x20013842

0801882c <_ZN8touchgfx11Application10invalidateEv>:
 801882c:	4b09      	ldr	r3, [pc, #36]	; (8018854 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801882e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018832:	4b09      	ldr	r3, [pc, #36]	; (8018858 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8018834:	b082      	sub	sp, #8
 8018836:	f9b3 3000 	ldrsh.w	r3, [r3]
 801883a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801883e:	2100      	movs	r1, #0
 8018840:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018844:	9100      	str	r1, [sp, #0]
 8018846:	6803      	ldr	r3, [r0, #0]
 8018848:	aa02      	add	r2, sp, #8
 801884a:	e912 0006 	ldmdb	r2, {r1, r2}
 801884e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8018850:	b002      	add	sp, #8
 8018852:	4718      	bx	r3
 8018854:	20013840 	.word	0x20013840
 8018858:	20013842 	.word	0x20013842

0801885c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801885c:	4b03      	ldr	r3, [pc, #12]	; (801886c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801885e:	6818      	ldr	r0, [r3, #0]
 8018860:	b110      	cbz	r0, 8018868 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8018862:	6803      	ldr	r3, [r0, #0]
 8018864:	69db      	ldr	r3, [r3, #28]
 8018866:	4718      	bx	r3
 8018868:	4770      	bx	lr
 801886a:	bf00      	nop
 801886c:	20013890 	.word	0x20013890

08018870 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8018870:	4b03      	ldr	r3, [pc, #12]	; (8018880 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8018872:	6818      	ldr	r0, [r3, #0]
 8018874:	b110      	cbz	r0, 801887c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8018876:	6803      	ldr	r3, [r0, #0]
 8018878:	6a1b      	ldr	r3, [r3, #32]
 801887a:	4718      	bx	r3
 801887c:	4770      	bx	lr
 801887e:	bf00      	nop
 8018880:	20013890 	.word	0x20013890

08018884 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8018884:	2300      	movs	r3, #0
 8018886:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 801888a:	4770      	bx	lr

0801888c <_ZN8touchgfx11Application14handleKeyEventEh>:
 801888c:	4b03      	ldr	r3, [pc, #12]	; (801889c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801888e:	6818      	ldr	r0, [r3, #0]
 8018890:	b110      	cbz	r0, 8018898 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8018892:	6803      	ldr	r3, [r0, #0]
 8018894:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018896:	4718      	bx	r3
 8018898:	4770      	bx	lr
 801889a:	bf00      	nop
 801889c:	20013890 	.word	0x20013890

080188a0 <_ZN8touchgfx11ApplicationD1Ev>:
 80188a0:	4770      	bx	lr

080188a2 <_ZN8touchgfx11ApplicationD0Ev>:
 80188a2:	b510      	push	{r4, lr}
 80188a4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80188a8:	4604      	mov	r4, r0
 80188aa:	f014 fa3e 	bl	802cd2a <_ZdlPvj>
 80188ae:	4620      	mov	r0, r4
 80188b0:	bd10      	pop	{r4, pc}

080188b2 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80188b2:	b510      	push	{r4, lr}
 80188b4:	f9b1 4000 	ldrsh.w	r4, [r1]
 80188b8:	888a      	ldrh	r2, [r1, #4]
 80188ba:	f9b0 3000 	ldrsh.w	r3, [r0]
 80188be:	4422      	add	r2, r4
 80188c0:	b212      	sxth	r2, r2
 80188c2:	4293      	cmp	r3, r2
 80188c4:	da15      	bge.n	80188f2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80188c6:	8882      	ldrh	r2, [r0, #4]
 80188c8:	4413      	add	r3, r2
 80188ca:	b21b      	sxth	r3, r3
 80188cc:	429c      	cmp	r4, r3
 80188ce:	da10      	bge.n	80188f2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80188d0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80188d4:	88c9      	ldrh	r1, [r1, #6]
 80188d6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80188da:	4419      	add	r1, r3
 80188dc:	b209      	sxth	r1, r1
 80188de:	428a      	cmp	r2, r1
 80188e0:	da07      	bge.n	80188f2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80188e2:	88c0      	ldrh	r0, [r0, #6]
 80188e4:	4410      	add	r0, r2
 80188e6:	b200      	sxth	r0, r0
 80188e8:	4283      	cmp	r3, r0
 80188ea:	bfac      	ite	ge
 80188ec:	2000      	movge	r0, #0
 80188ee:	2001      	movlt	r0, #1
 80188f0:	bd10      	pop	{r4, pc}
 80188f2:	2000      	movs	r0, #0
 80188f4:	e7fc      	b.n	80188f0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

080188f6 <_ZN8touchgfx4Rect10restrictToEss>:
 80188f6:	f9b0 3000 	ldrsh.w	r3, [r0]
 80188fa:	2b00      	cmp	r3, #0
 80188fc:	b510      	push	{r4, lr}
 80188fe:	da04      	bge.n	801890a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8018900:	8884      	ldrh	r4, [r0, #4]
 8018902:	4423      	add	r3, r4
 8018904:	8083      	strh	r3, [r0, #4]
 8018906:	2300      	movs	r3, #0
 8018908:	8003      	strh	r3, [r0, #0]
 801890a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801890e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8018912:	1b09      	subs	r1, r1, r4
 8018914:	428b      	cmp	r3, r1
 8018916:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801891a:	bfc8      	it	gt
 801891c:	8081      	strhgt	r1, [r0, #4]
 801891e:	2b00      	cmp	r3, #0
 8018920:	da04      	bge.n	801892c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8018922:	88c1      	ldrh	r1, [r0, #6]
 8018924:	440b      	add	r3, r1
 8018926:	80c3      	strh	r3, [r0, #6]
 8018928:	2300      	movs	r3, #0
 801892a:	8043      	strh	r3, [r0, #2]
 801892c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8018930:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8018934:	1a52      	subs	r2, r2, r1
 8018936:	4293      	cmp	r3, r2
 8018938:	bfc8      	it	gt
 801893a:	80c2      	strhgt	r2, [r0, #6]
 801893c:	bd10      	pop	{r4, pc}
	...

08018940 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8018940:	b510      	push	{r4, lr}
 8018942:	4b10      	ldr	r3, [pc, #64]	; (8018984 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8018944:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018948:	4b0f      	ldr	r3, [pc, #60]	; (8018988 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801894a:	460c      	mov	r4, r1
 801894c:	4620      	mov	r0, r4
 801894e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8018952:	f7ff ffd0 	bl	80188f6 <_ZN8touchgfx4Rect10restrictToEss>
 8018956:	4b0d      	ldr	r3, [pc, #52]	; (801898c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8018958:	6818      	ldr	r0, [r3, #0]
 801895a:	b190      	cbz	r0, 8018982 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 801895c:	6803      	ldr	r3, [r0, #0]
 801895e:	4621      	mov	r1, r4
 8018960:	689b      	ldr	r3, [r3, #8]
 8018962:	4798      	blx	r3
 8018964:	4b0a      	ldr	r3, [pc, #40]	; (8018990 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8018966:	6818      	ldr	r0, [r3, #0]
 8018968:	b118      	cbz	r0, 8018972 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801896a:	6803      	ldr	r3, [r0, #0]
 801896c:	4621      	mov	r1, r4
 801896e:	689b      	ldr	r3, [r3, #8]
 8018970:	4798      	blx	r3
 8018972:	4b08      	ldr	r3, [pc, #32]	; (8018994 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8018974:	6818      	ldr	r0, [r3, #0]
 8018976:	6803      	ldr	r3, [r0, #0]
 8018978:	4621      	mov	r1, r4
 801897a:	69db      	ldr	r3, [r3, #28]
 801897c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018980:	4718      	bx	r3
 8018982:	bd10      	pop	{r4, pc}
 8018984:	20013842 	.word	0x20013842
 8018988:	20013840 	.word	0x20013840
 801898c:	20013890 	.word	0x20013890
 8018990:	2001388c 	.word	0x2001388c
 8018994:	2001384c 	.word	0x2001384c

08018998 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8018998:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801899a:	4606      	mov	r6, r0
 801899c:	4608      	mov	r0, r1
 801899e:	460f      	mov	r7, r1
 80189a0:	f7fa f957 	bl	8012c52 <_ZNK8touchgfx4Rect7isEmptyEv>
 80189a4:	b9e8      	cbnz	r0, 80189e2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80189a6:	f9b7 5000 	ldrsh.w	r5, [r7]
 80189aa:	f9b6 4000 	ldrsh.w	r4, [r6]
 80189ae:	42a5      	cmp	r5, r4
 80189b0:	db17      	blt.n	80189e2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80189b2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80189b6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80189ba:	429a      	cmp	r2, r3
 80189bc:	db11      	blt.n	80189e2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80189be:	88b9      	ldrh	r1, [r7, #4]
 80189c0:	440d      	add	r5, r1
 80189c2:	88b1      	ldrh	r1, [r6, #4]
 80189c4:	440c      	add	r4, r1
 80189c6:	b22d      	sxth	r5, r5
 80189c8:	b224      	sxth	r4, r4
 80189ca:	42a5      	cmp	r5, r4
 80189cc:	dc09      	bgt.n	80189e2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80189ce:	88f8      	ldrh	r0, [r7, #6]
 80189d0:	4410      	add	r0, r2
 80189d2:	88f2      	ldrh	r2, [r6, #6]
 80189d4:	4413      	add	r3, r2
 80189d6:	b200      	sxth	r0, r0
 80189d8:	b21b      	sxth	r3, r3
 80189da:	4298      	cmp	r0, r3
 80189dc:	bfcc      	ite	gt
 80189de:	2000      	movgt	r0, #0
 80189e0:	2001      	movle	r0, #1
 80189e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080189e4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 80189e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80189e6:	4604      	mov	r4, r0
 80189e8:	4608      	mov	r0, r1
 80189ea:	460d      	mov	r5, r1
 80189ec:	f7fa f931 	bl	8012c52 <_ZNK8touchgfx4Rect7isEmptyEv>
 80189f0:	b978      	cbnz	r0, 8018a12 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 80189f2:	4620      	mov	r0, r4
 80189f4:	f7fa f92d 	bl	8012c52 <_ZNK8touchgfx4Rect7isEmptyEv>
 80189f8:	f9b5 6000 	ldrsh.w	r6, [r5]
 80189fc:	b150      	cbz	r0, 8018a14 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 80189fe:	8026      	strh	r6, [r4, #0]
 8018a00:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8018a04:	8063      	strh	r3, [r4, #2]
 8018a06:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8018a0a:	80a3      	strh	r3, [r4, #4]
 8018a0c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8018a10:	80e3      	strh	r3, [r4, #6]
 8018a12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018a14:	f9b4 1000 	ldrsh.w	r1, [r4]
 8018a18:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8018a1c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8018a20:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8018a24:	88ed      	ldrh	r5, [r5, #6]
 8018a26:	42b1      	cmp	r1, r6
 8018a28:	460f      	mov	r7, r1
 8018a2a:	bfa8      	it	ge
 8018a2c:	4637      	movge	r7, r6
 8018a2e:	4293      	cmp	r3, r2
 8018a30:	4618      	mov	r0, r3
 8018a32:	4466      	add	r6, ip
 8018a34:	bfa8      	it	ge
 8018a36:	4610      	movge	r0, r2
 8018a38:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8018a3c:	8027      	strh	r7, [r4, #0]
 8018a3e:	442a      	add	r2, r5
 8018a40:	88e5      	ldrh	r5, [r4, #6]
 8018a42:	8060      	strh	r0, [r4, #2]
 8018a44:	4461      	add	r1, ip
 8018a46:	442b      	add	r3, r5
 8018a48:	b236      	sxth	r6, r6
 8018a4a:	b209      	sxth	r1, r1
 8018a4c:	b212      	sxth	r2, r2
 8018a4e:	b21b      	sxth	r3, r3
 8018a50:	428e      	cmp	r6, r1
 8018a52:	bfac      	ite	ge
 8018a54:	ebc7 0106 	rsbge	r1, r7, r6
 8018a58:	ebc7 0101 	rsblt	r1, r7, r1
 8018a5c:	429a      	cmp	r2, r3
 8018a5e:	bfac      	ite	ge
 8018a60:	ebc0 0202 	rsbge	r2, r0, r2
 8018a64:	ebc0 0203 	rsblt	r2, r0, r3
 8018a68:	80a1      	strh	r1, [r4, #4]
 8018a6a:	80e2      	strh	r2, [r4, #6]
 8018a6c:	e7d1      	b.n	8018a12 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08018a70 <_ZN8touchgfx11Application11getInstanceEv>:
 8018a70:	4b01      	ldr	r3, [pc, #4]	; (8018a78 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8018a72:	6818      	ldr	r0, [r3, #0]
 8018a74:	4770      	bx	lr
 8018a76:	bf00      	nop
 8018a78:	200138a0 	.word	0x200138a0

08018a7c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8018a7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018a7e:	4b10      	ldr	r3, [pc, #64]	; (8018ac0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8018a80:	781b      	ldrb	r3, [r3, #0]
 8018a82:	4605      	mov	r5, r0
 8018a84:	b1d3      	cbz	r3, 8018abc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8018a86:	4b0f      	ldr	r3, [pc, #60]	; (8018ac4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8018a88:	4f0f      	ldr	r7, [pc, #60]	; (8018ac8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8018a8a:	881c      	ldrh	r4, [r3, #0]
 8018a8c:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8018a90:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8018a94:	42a3      	cmp	r3, r4
 8018a96:	d90e      	bls.n	8018ab6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8018a98:	683b      	ldr	r3, [r7, #0]
 8018a9a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8018a9e:	b10a      	cbz	r2, 8018aa4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8018aa0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8018aa2:	b900      	cbnz	r0, 8018aa6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8018aa4:	6898      	ldr	r0, [r3, #8]
 8018aa6:	6803      	ldr	r3, [r0, #0]
 8018aa8:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8018aac:	69db      	ldr	r3, [r3, #28]
 8018aae:	3401      	adds	r4, #1
 8018ab0:	4798      	blx	r3
 8018ab2:	b2a4      	uxth	r4, r4
 8018ab4:	e7ec      	b.n	8018a90 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8018ab6:	2300      	movs	r3, #0
 8018ab8:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8018abc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018abe:	bf00      	nop
 8018ac0:	2001384a 	.word	0x2001384a
 8018ac4:	20000088 	.word	0x20000088
 8018ac8:	2001384c 	.word	0x2001384c

08018acc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8018acc:	b510      	push	{r4, lr}
 8018ace:	2300      	movs	r3, #0
 8018ad0:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8018ad4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8018ad8:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8018adc:	4604      	mov	r4, r0
 8018ade:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8018ae2:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8018ae6:	429a      	cmp	r2, r3
 8018ae8:	d90e      	bls.n	8018b08 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8018aea:	18e2      	adds	r2, r4, r3
 8018aec:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8018af0:	b122      	cbz	r2, 8018afc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8018af2:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8018af6:	6803      	ldr	r3, [r0, #0]
 8018af8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8018afa:	4798      	blx	r3
 8018afc:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8018b00:	3301      	adds	r3, #1
 8018b02:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8018b06:	e7ea      	b.n	8018ade <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8018b08:	bd10      	pop	{r4, pc}

08018b0a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8018b0a:	b530      	push	{r4, r5, lr}
 8018b0c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8018b10:	2200      	movs	r2, #0
 8018b12:	b293      	uxth	r3, r2
 8018b14:	429d      	cmp	r5, r3
 8018b16:	d90e      	bls.n	8018b36 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8018b18:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8018b1c:	428b      	cmp	r3, r1
 8018b1e:	d10b      	bne.n	8018b38 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8018b20:	1884      	adds	r4, r0, r2
 8018b22:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8018b26:	b13b      	cbz	r3, 8018b38 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8018b28:	3b01      	subs	r3, #1
 8018b2a:	b2db      	uxtb	r3, r3
 8018b2c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8018b30:	b90b      	cbnz	r3, 8018b36 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8018b32:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8018b36:	bd30      	pop	{r4, r5, pc}
 8018b38:	3201      	adds	r2, #1
 8018b3a:	e7ea      	b.n	8018b12 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08018b3c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8018b3c:	2300      	movs	r3, #0
 8018b3e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8018b42:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8018b46:	30a4      	adds	r0, #164	; 0xa4
 8018b48:	f802 3b01 	strb.w	r3, [r2], #1
 8018b4c:	4282      	cmp	r2, r0
 8018b4e:	d1fb      	bne.n	8018b48 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8018b50:	4770      	bx	lr
	...

08018b54 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8018b54:	b570      	push	{r4, r5, r6, lr}
 8018b56:	4c0b      	ldr	r4, [pc, #44]	; (8018b84 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8018b58:	4605      	mov	r5, r0
 8018b5a:	6820      	ldr	r0, [r4, #0]
 8018b5c:	460e      	mov	r6, r1
 8018b5e:	b110      	cbz	r0, 8018b66 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8018b60:	6803      	ldr	r3, [r0, #0]
 8018b62:	695b      	ldr	r3, [r3, #20]
 8018b64:	4798      	blx	r3
 8018b66:	1d28      	adds	r0, r5, #4
 8018b68:	f7ff ffe8 	bl	8018b3c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8018b6c:	6026      	str	r6, [r4, #0]
 8018b6e:	6833      	ldr	r3, [r6, #0]
 8018b70:	4630      	mov	r0, r6
 8018b72:	68db      	ldr	r3, [r3, #12]
 8018b74:	4798      	blx	r3
 8018b76:	682b      	ldr	r3, [r5, #0]
 8018b78:	4628      	mov	r0, r5
 8018b7a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018b7c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018b80:	4718      	bx	r3
 8018b82:	bf00      	nop
 8018b84:	20013890 	.word	0x20013890

08018b88 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8018b88:	2300      	movs	r3, #0
 8018b8a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8018b8e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8018b92:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018b94:	461a      	mov	r2, r3
 8018b96:	461c      	mov	r4, r3
 8018b98:	461d      	mov	r5, r3
 8018b9a:	459c      	cmp	ip, r3
 8018b9c:	dd1a      	ble.n	8018bd4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8018b9e:	18c6      	adds	r6, r0, r3
 8018ba0:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8018ba4:	b16e      	cbz	r6, 8018bc2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8018ba6:	429a      	cmp	r2, r3
 8018ba8:	d008      	beq.n	8018bbc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8018baa:	fa1f fe82 	uxth.w	lr, r2
 8018bae:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8018bb2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8018bb6:	1887      	adds	r7, r0, r2
 8018bb8:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8018bbc:	3201      	adds	r2, #1
 8018bbe:	3301      	adds	r3, #1
 8018bc0:	e7eb      	b.n	8018b9a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8018bc2:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8018bc6:	4299      	cmp	r1, r3
 8018bc8:	bfa8      	it	ge
 8018bca:	3501      	addge	r5, #1
 8018bcc:	429e      	cmp	r6, r3
 8018bce:	bfc8      	it	gt
 8018bd0:	3401      	addgt	r4, #1
 8018bd2:	e7f4      	b.n	8018bbe <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8018bd4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8018bd8:	1b49      	subs	r1, r1, r5
 8018bda:	1b1b      	subs	r3, r3, r4
 8018bdc:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8018be0:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8018be4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8018be8:	4293      	cmp	r3, r2
 8018bea:	dd03      	ble.n	8018bf4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8018bec:	3b01      	subs	r3, #1
 8018bee:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8018bf2:	e7f7      	b.n	8018be4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8018bf4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08018bf8 <_ZN8touchgfx11Application15handleTickEventEv>:
 8018bf8:	b570      	push	{r4, r5, r6, lr}
 8018bfa:	4d16      	ldr	r5, [pc, #88]	; (8018c54 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8018bfc:	4604      	mov	r4, r0
 8018bfe:	6828      	ldr	r0, [r5, #0]
 8018c00:	b140      	cbz	r0, 8018c14 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8018c02:	7a03      	ldrb	r3, [r0, #8]
 8018c04:	b933      	cbnz	r3, 8018c14 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8018c06:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8018c0a:	6803      	ldr	r3, [r0, #0]
 8018c0c:	689b      	ldr	r3, [r3, #8]
 8018c0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018c12:	4718      	bx	r3
 8018c14:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8018c18:	4e0f      	ldr	r6, [pc, #60]	; (8018c58 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8018c1a:	b973      	cbnz	r3, 8018c3a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8018c1c:	b168      	cbz	r0, 8018c3a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8018c1e:	7a03      	ldrb	r3, [r0, #8]
 8018c20:	b15b      	cbz	r3, 8018c3a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8018c22:	6830      	ldr	r0, [r6, #0]
 8018c24:	b110      	cbz	r0, 8018c2c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8018c26:	6803      	ldr	r3, [r0, #0]
 8018c28:	691b      	ldr	r3, [r3, #16]
 8018c2a:	4798      	blx	r3
 8018c2c:	6828      	ldr	r0, [r5, #0]
 8018c2e:	6803      	ldr	r3, [r0, #0]
 8018c30:	68db      	ldr	r3, [r3, #12]
 8018c32:	4798      	blx	r3
 8018c34:	2301      	movs	r3, #1
 8018c36:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8018c3a:	3404      	adds	r4, #4
 8018c3c:	4620      	mov	r0, r4
 8018c3e:	f7ff ff45 	bl	8018acc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8018c42:	4620      	mov	r0, r4
 8018c44:	f7ff ffa0 	bl	8018b88 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8018c48:	6830      	ldr	r0, [r6, #0]
 8018c4a:	b110      	cbz	r0, 8018c52 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8018c4c:	6803      	ldr	r3, [r0, #0]
 8018c4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8018c50:	e7dd      	b.n	8018c0e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8018c52:	bd70      	pop	{r4, r5, r6, pc}
 8018c54:	20013894 	.word	0x20013894
 8018c58:	20013890 	.word	0x20013890

08018c5c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8018c5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018c5e:	2300      	movs	r3, #0
 8018c60:	4604      	mov	r4, r0
 8018c62:	460d      	mov	r5, r1
 8018c64:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8018c68:	4618      	mov	r0, r3
 8018c6a:	b29a      	uxth	r2, r3
 8018c6c:	4291      	cmp	r1, r2
 8018c6e:	d911      	bls.n	8018c94 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8018c70:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8018c74:	18e6      	adds	r6, r4, r3
 8018c76:	42af      	cmp	r7, r5
 8018c78:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8018c7c:	d105      	bne.n	8018c8a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8018c7e:	2aff      	cmp	r2, #255	; 0xff
 8018c80:	d002      	beq.n	8018c88 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8018c82:	3201      	adds	r2, #1
 8018c84:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8018c88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018c8a:	2a00      	cmp	r2, #0
 8018c8c:	bf08      	it	eq
 8018c8e:	2001      	moveq	r0, #1
 8018c90:	3301      	adds	r3, #1
 8018c92:	e7ea      	b.n	8018c6a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8018c94:	b120      	cbz	r0, 8018ca0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8018c96:	2920      	cmp	r1, #32
 8018c98:	d102      	bne.n	8018ca0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8018c9a:	4620      	mov	r0, r4
 8018c9c:	f7ff ff74 	bl	8018b88 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8018ca0:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8018ca4:	2b1f      	cmp	r3, #31
 8018ca6:	d8ef      	bhi.n	8018c88 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8018ca8:	18e2      	adds	r2, r4, r3
 8018caa:	2101      	movs	r1, #1
 8018cac:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8018cb0:	185a      	adds	r2, r3, r1
 8018cb2:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8018cb6:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8018cba:	e7e5      	b.n	8018c88 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08018cbc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8018cbc:	4603      	mov	r3, r0
 8018cbe:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8018cc2:	2200      	movs	r2, #0
 8018cc4:	801a      	strh	r2, [r3, #0]
 8018cc6:	805a      	strh	r2, [r3, #2]
 8018cc8:	809a      	strh	r2, [r3, #4]
 8018cca:	80da      	strh	r2, [r3, #6]
 8018ccc:	3308      	adds	r3, #8
 8018cce:	428b      	cmp	r3, r1
 8018cd0:	d1f8      	bne.n	8018cc4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8018cd2:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8018cd6:	4770      	bx	lr

08018cd8 <_ZN8touchgfx11ApplicationC1Ev>:
 8018cd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018cda:	4606      	mov	r6, r0
 8018cdc:	4b1c      	ldr	r3, [pc, #112]	; (8018d50 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8018cde:	f846 3b04 	str.w	r3, [r6], #4
 8018ce2:	4604      	mov	r4, r0
 8018ce4:	2500      	movs	r5, #0
 8018ce6:	22a8      	movs	r2, #168	; 0xa8
 8018ce8:	2100      	movs	r1, #0
 8018cea:	4630      	mov	r0, r6
 8018cec:	f015 f909 	bl	802df02 <memset>
 8018cf0:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8018cf4:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8018cf8:	f7ff ffe0 	bl	8018cbc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8018cfc:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8018d00:	f7ff ffdc 	bl	8018cbc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8018d04:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8018d08:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8018d0c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8018d10:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8018d14:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8018d18:	490e      	ldr	r1, [pc, #56]	; (8018d54 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8018d1a:	480f      	ldr	r0, [pc, #60]	; (8018d58 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8018d1c:	4f0f      	ldr	r7, [pc, #60]	; (8018d5c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8018d1e:	f010 fe27 	bl	8029970 <CRC_Lock>
 8018d22:	4b0f      	ldr	r3, [pc, #60]	; (8018d60 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8018d24:	b158      	cbz	r0, 8018d3e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8018d26:	801d      	strh	r5, [r3, #0]
 8018d28:	4a0e      	ldr	r2, [pc, #56]	; (8018d64 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8018d2a:	2300      	movs	r3, #0
 8018d2c:	6013      	str	r3, [r2, #0]
 8018d2e:	4a0e      	ldr	r2, [pc, #56]	; (8018d68 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8018d30:	603b      	str	r3, [r7, #0]
 8018d32:	4630      	mov	r0, r6
 8018d34:	6013      	str	r3, [r2, #0]
 8018d36:	f7ff ff01 	bl	8018b3c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8018d3a:	4620      	mov	r0, r4
 8018d3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018d3e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8018d42:	2002      	movs	r0, #2
 8018d44:	801a      	strh	r2, [r3, #0]
 8018d46:	6038      	str	r0, [r7, #0]
 8018d48:	f001 fb4a 	bl	801a3e0 <_ZN8touchgfx6Screen4drawEv>
 8018d4c:	e7ec      	b.n	8018d28 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8018d4e:	bf00      	nop
 8018d50:	08031f28 	.word	0x08031f28
 8018d54:	b5e8b5cd 	.word	0xb5e8b5cd
 8018d58:	f407a5c2 	.word	0xf407a5c2
 8018d5c:	20013890 	.word	0x20013890
 8018d60:	20000088 	.word	0x20000088
 8018d64:	200138a0 	.word	0x200138a0
 8018d68:	20013894 	.word	0x20013894

08018d6c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8018d6c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8018d70:	3b01      	subs	r3, #1
 8018d72:	b29b      	uxth	r3, r3
 8018d74:	428b      	cmp	r3, r1
 8018d76:	b510      	push	{r4, lr}
 8018d78:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8018d7c:	d908      	bls.n	8018d90 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8018d7e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8018d82:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8018d86:	681a      	ldr	r2, [r3, #0]
 8018d88:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8018d8c:	685a      	ldr	r2, [r3, #4]
 8018d8e:	6062      	str	r2, [r4, #4]
 8018d90:	bd10      	pop	{r4, pc}
	...

08018d94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8018d94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d98:	4b8f      	ldr	r3, [pc, #572]	; (8018fd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8018d9a:	b08f      	sub	sp, #60	; 0x3c
 8018d9c:	ac0a      	add	r4, sp, #40	; 0x28
 8018d9e:	e884 0006 	stmia.w	r4, {r1, r2}
 8018da2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018da6:	4b8d      	ldr	r3, [pc, #564]	; (8018fdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8018da8:	4683      	mov	fp, r0
 8018daa:	f9b3 1000 	ldrsh.w	r1, [r3]
 8018dae:	4620      	mov	r0, r4
 8018db0:	f7ff fda1 	bl	80188f6 <_ZN8touchgfx4Rect10restrictToEss>
 8018db4:	4620      	mov	r0, r4
 8018db6:	f7f9 ff4c 	bl	8012c52 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018dba:	2800      	cmp	r0, #0
 8018dbc:	d16a      	bne.n	8018e94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8018dbe:	9403      	str	r4, [sp, #12]
 8018dc0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8018dc4:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8018dc8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8018dcc:	35a4      	adds	r5, #164	; 0xa4
 8018dce:	9301      	str	r3, [sp, #4]
 8018dd0:	b15c      	cbz	r4, 8018dea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8018dd2:	4629      	mov	r1, r5
 8018dd4:	9803      	ldr	r0, [sp, #12]
 8018dd6:	f7ff fddf 	bl	8018998 <_ZNK8touchgfx4Rect8includesERKS0_>
 8018dda:	3c01      	subs	r4, #1
 8018ddc:	b118      	cbz	r0, 8018de6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8018dde:	b2a1      	uxth	r1, r4
 8018de0:	9801      	ldr	r0, [sp, #4]
 8018de2:	f7ff ffc3 	bl	8018d6c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8018de6:	3d08      	subs	r5, #8
 8018de8:	e7f2      	b.n	8018dd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8018dea:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8018dee:	f8cd a010 	str.w	sl, [sp, #16]
 8018df2:	f10a 33ff 	add.w	r3, sl, #4294967295
 8018df6:	9302      	str	r3, [sp, #8]
 8018df8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8018dfc:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8018e00:	9306      	str	r3, [sp, #24]
 8018e02:	445c      	add	r4, fp
 8018e04:	2500      	movs	r5, #0
 8018e06:	4626      	mov	r6, r4
 8018e08:	f8cd a014 	str.w	sl, [sp, #20]
 8018e0c:	462f      	mov	r7, r5
 8018e0e:	9b05      	ldr	r3, [sp, #20]
 8018e10:	2b00      	cmp	r3, #0
 8018e12:	d073      	beq.n	8018efc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8018e14:	9903      	ldr	r1, [sp, #12]
 8018e16:	4630      	mov	r0, r6
 8018e18:	f7ff fd4b 	bl	80188b2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018e1c:	b350      	cbz	r0, 8018e74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8018e1e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8018e22:	f9b6 c000 	ldrsh.w	ip, [r6]
 8018e26:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8018e2a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8018e2e:	45e6      	cmp	lr, ip
 8018e30:	db33      	blt.n	8018e9a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8018e32:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8018e36:	88b3      	ldrh	r3, [r6, #4]
 8018e38:	4472      	add	r2, lr
 8018e3a:	4463      	add	r3, ip
 8018e3c:	b212      	sxth	r2, r2
 8018e3e:	b21b      	sxth	r3, r3
 8018e40:	429a      	cmp	r2, r3
 8018e42:	dc2a      	bgt.n	8018e9a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8018e44:	88f3      	ldrh	r3, [r6, #6]
 8018e46:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8018e4a:	fa1f f289 	uxth.w	r2, r9
 8018e4e:	4413      	add	r3, r2
 8018e50:	b29b      	uxth	r3, r3
 8018e52:	45c8      	cmp	r8, r9
 8018e54:	fa1f fc88 	uxth.w	ip, r8
 8018e58:	fa0f fe83 	sxth.w	lr, r3
 8018e5c:	db0f      	blt.n	8018e7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8018e5e:	eba3 030c 	sub.w	r3, r3, ip
 8018e62:	1ac9      	subs	r1, r1, r3
 8018e64:	b209      	sxth	r1, r1
 8018e66:	2900      	cmp	r1, #0
 8018e68:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8018e6c:	dd12      	ble.n	8018e94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8018e6e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8018e72:	4605      	mov	r5, r0
 8018e74:	9b05      	ldr	r3, [sp, #20]
 8018e76:	3b01      	subs	r3, #1
 8018e78:	9305      	str	r3, [sp, #20]
 8018e7a:	3e08      	subs	r6, #8
 8018e7c:	e7c7      	b.n	8018e0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8018e7e:	4461      	add	r1, ip
 8018e80:	b209      	sxth	r1, r1
 8018e82:	4571      	cmp	r1, lr
 8018e84:	dc38      	bgt.n	8018ef8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018e86:	eba2 020c 	sub.w	r2, r2, ip
 8018e8a:	b212      	sxth	r2, r2
 8018e8c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8018e90:	2a00      	cmp	r2, #0
 8018e92:	dcee      	bgt.n	8018e72 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8018e94:	b00f      	add	sp, #60	; 0x3c
 8018e96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018e9a:	45c8      	cmp	r8, r9
 8018e9c:	db2c      	blt.n	8018ef8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018e9e:	88f3      	ldrh	r3, [r6, #6]
 8018ea0:	4499      	add	r9, r3
 8018ea2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8018ea6:	4498      	add	r8, r3
 8018ea8:	fa0f f989 	sxth.w	r9, r9
 8018eac:	fa0f f888 	sxth.w	r8, r8
 8018eb0:	45c1      	cmp	r9, r8
 8018eb2:	db21      	blt.n	8018ef8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018eb4:	88b3      	ldrh	r3, [r6, #4]
 8018eb6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8018eba:	fa1f f28c 	uxth.w	r2, ip
 8018ebe:	4413      	add	r3, r2
 8018ec0:	b29b      	uxth	r3, r3
 8018ec2:	45e6      	cmp	lr, ip
 8018ec4:	fa1f f88e 	uxth.w	r8, lr
 8018ec8:	fa0f f983 	sxth.w	r9, r3
 8018ecc:	db0a      	blt.n	8018ee4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8018ece:	eba3 0308 	sub.w	r3, r3, r8
 8018ed2:	1ac9      	subs	r1, r1, r3
 8018ed4:	b209      	sxth	r1, r1
 8018ed6:	2900      	cmp	r1, #0
 8018ed8:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8018edc:	ddda      	ble.n	8018e94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8018ede:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8018ee2:	e7c6      	b.n	8018e72 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8018ee4:	4441      	add	r1, r8
 8018ee6:	b209      	sxth	r1, r1
 8018ee8:	4549      	cmp	r1, r9
 8018eea:	dc05      	bgt.n	8018ef8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018eec:	eba2 0208 	sub.w	r2, r2, r8
 8018ef0:	b212      	sxth	r2, r2
 8018ef2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8018ef6:	e7cb      	b.n	8018e90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8018ef8:	4607      	mov	r7, r0
 8018efa:	e7bb      	b.n	8018e74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8018efc:	2d00      	cmp	r5, #0
 8018efe:	d181      	bne.n	8018e04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8018f00:	2f00      	cmp	r7, #0
 8018f02:	f000 81dd 	beq.w	80192c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8018f06:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8018f0a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8018f0e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8018f12:	b2b3      	uxth	r3, r6
 8018f14:	9305      	str	r3, [sp, #20]
 8018f16:	9a05      	ldr	r2, [sp, #20]
 8018f18:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8018f1c:	4413      	add	r3, r2
 8018f1e:	b2ba      	uxth	r2, r7
 8018f20:	4492      	add	sl, r2
 8018f22:	b29b      	uxth	r3, r3
 8018f24:	fa1f fa8a 	uxth.w	sl, sl
 8018f28:	fa0f f883 	sxth.w	r8, r3
 8018f2c:	fa0f f98a 	sxth.w	r9, sl
 8018f30:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8018f34:	9b04      	ldr	r3, [sp, #16]
 8018f36:	2b00      	cmp	r3, #0
 8018f38:	d052      	beq.n	8018fe0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8018f3a:	9903      	ldr	r1, [sp, #12]
 8018f3c:	4620      	mov	r0, r4
 8018f3e:	f7ff fcb8 	bl	80188b2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018f42:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8018f46:	b1c0      	cbz	r0, 8018f7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018f48:	f9b4 e000 	ldrsh.w	lr, [r4]
 8018f4c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8018f50:	4576      	cmp	r6, lr
 8018f52:	dc22      	bgt.n	8018f9a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8018f54:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8018f58:	44f4      	add	ip, lr
 8018f5a:	fa0f fc8c 	sxth.w	ip, ip
 8018f5e:	45e0      	cmp	r8, ip
 8018f60:	db1b      	blt.n	8018f9a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8018f62:	428f      	cmp	r7, r1
 8018f64:	fa1f fc81 	uxth.w	ip, r1
 8018f68:	88e1      	ldrh	r1, [r4, #6]
 8018f6a:	dc0d      	bgt.n	8018f88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8018f6c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8018f70:	eba1 010c 	sub.w	r1, r1, ip
 8018f74:	f8a4 9002 	strh.w	r9, [r4, #2]
 8018f78:	80e1      	strh	r1, [r4, #6]
 8018f7a:	4628      	mov	r0, r5
 8018f7c:	9904      	ldr	r1, [sp, #16]
 8018f7e:	3901      	subs	r1, #1
 8018f80:	9104      	str	r1, [sp, #16]
 8018f82:	3c08      	subs	r4, #8
 8018f84:	4605      	mov	r5, r0
 8018f86:	e7d3      	b.n	8018f30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8018f88:	4461      	add	r1, ip
 8018f8a:	b209      	sxth	r1, r1
 8018f8c:	4549      	cmp	r1, r9
 8018f8e:	dcf5      	bgt.n	8018f7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018f90:	eba2 0c0c 	sub.w	ip, r2, ip
 8018f94:	f8a4 c006 	strh.w	ip, [r4, #6]
 8018f98:	e7ef      	b.n	8018f7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018f9a:	428f      	cmp	r7, r1
 8018f9c:	dcee      	bgt.n	8018f7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018f9e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8018fa2:	4461      	add	r1, ip
 8018fa4:	b209      	sxth	r1, r1
 8018fa6:	4589      	cmp	r9, r1
 8018fa8:	dbe8      	blt.n	8018f7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018faa:	4576      	cmp	r6, lr
 8018fac:	fa1f fc8e 	uxth.w	ip, lr
 8018fb0:	88a1      	ldrh	r1, [r4, #4]
 8018fb2:	dc07      	bgt.n	8018fc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8018fb4:	eba3 0c0c 	sub.w	ip, r3, ip
 8018fb8:	eba1 010c 	sub.w	r1, r1, ip
 8018fbc:	f8a4 8000 	strh.w	r8, [r4]
 8018fc0:	80a1      	strh	r1, [r4, #4]
 8018fc2:	e7da      	b.n	8018f7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018fc4:	4461      	add	r1, ip
 8018fc6:	b209      	sxth	r1, r1
 8018fc8:	4588      	cmp	r8, r1
 8018fca:	dbd7      	blt.n	8018f7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018fcc:	9905      	ldr	r1, [sp, #20]
 8018fce:	eba1 0c0c 	sub.w	ip, r1, ip
 8018fd2:	f8a4 c004 	strh.w	ip, [r4, #4]
 8018fd6:	e7d0      	b.n	8018f7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018fd8:	20013842 	.word	0x20013842
 8018fdc:	20013840 	.word	0x20013840
 8018fe0:	2d00      	cmp	r5, #0
 8018fe2:	f000 816d 	beq.w	80192c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8018fe6:	9b06      	ldr	r3, [sp, #24]
 8018fe8:	445b      	add	r3, fp
 8018fea:	461c      	mov	r4, r3
 8018fec:	9b02      	ldr	r3, [sp, #8]
 8018fee:	3301      	adds	r3, #1
 8018ff0:	f000 8166 	beq.w	80192c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8018ff4:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8018ff8:	4629      	mov	r1, r5
 8018ffa:	9803      	ldr	r0, [sp, #12]
 8018ffc:	f7ff fccc 	bl	8018998 <_ZNK8touchgfx4Rect8includesERKS0_>
 8019000:	b120      	cbz	r0, 801900c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8019002:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8019006:	9801      	ldr	r0, [sp, #4]
 8019008:	f7ff feb0 	bl	8018d6c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801900c:	9903      	ldr	r1, [sp, #12]
 801900e:	4628      	mov	r0, r5
 8019010:	f7ff fc4f 	bl	80188b2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8019014:	2800      	cmp	r0, #0
 8019016:	f000 809c 	beq.w	8019152 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801901a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 801901e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8019022:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8019026:	9309      	str	r3, [sp, #36]	; 0x24
 8019028:	fa1f f189 	uxth.w	r1, r9
 801902c:	eb01 0c03 	add.w	ip, r1, r3
 8019030:	fa1f fa8c 	uxth.w	sl, ip
 8019034:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8019038:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 801903c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8019040:	b283      	uxth	r3, r0
 8019042:	eb03 050c 	add.w	r5, r3, ip
 8019046:	b2ad      	uxth	r5, r5
 8019048:	9505      	str	r5, [sp, #20]
 801904a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801904e:	9504      	str	r5, [sp, #16]
 8019050:	4548      	cmp	r0, r9
 8019052:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8019056:	f340 8099 	ble.w	801918c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801905a:	1a5b      	subs	r3, r3, r1
 801905c:	b29b      	uxth	r3, r3
 801905e:	4596      	cmp	lr, r2
 8019060:	fa0f f08a 	sxth.w	r0, sl
 8019064:	b21e      	sxth	r6, r3
 8019066:	dd2e      	ble.n	80190c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8019068:	9f02      	ldr	r7, [sp, #8]
 801906a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801906e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8019072:	9f04      	ldr	r7, [sp, #16]
 8019074:	1a3f      	subs	r7, r7, r0
 8019076:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 801907a:	fa1f fe8e 	uxth.w	lr, lr
 801907e:	b292      	uxth	r2, r2
 8019080:	ebae 0102 	sub.w	r1, lr, r2
 8019084:	44a6      	add	lr, r4
 8019086:	4402      	add	r2, r0
 8019088:	b289      	uxth	r1, r1
 801908a:	fa0f fe8e 	sxth.w	lr, lr
 801908e:	b212      	sxth	r2, r2
 8019090:	b20d      	sxth	r5, r1
 8019092:	ebae 0202 	sub.w	r2, lr, r2
 8019096:	436f      	muls	r7, r5
 8019098:	4372      	muls	r2, r6
 801909a:	4297      	cmp	r7, r2
 801909c:	db09      	blt.n	80190b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 801909e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 80190a2:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 80190a6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80190aa:	449c      	add	ip, r3
 80190ac:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80190b0:	e686      	b.n	8018dc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80190b2:	4421      	add	r1, r4
 80190b4:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 80190b8:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 80190bc:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80190c0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80190c4:	e67c      	b.n	8018dc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80190c6:	9f04      	ldr	r7, [sp, #16]
 80190c8:	42b8      	cmp	r0, r7
 80190ca:	da27      	bge.n	801911c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80190cc:	9902      	ldr	r1, [sp, #8]
 80190ce:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 80190d2:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 80190d6:	eb05 010e 	add.w	r1, r5, lr
 80190da:	fa1f f881 	uxth.w	r8, r1
 80190de:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 80190e2:	4411      	add	r1, r2
 80190e4:	eba1 0108 	sub.w	r1, r1, r8
 80190e8:	b289      	uxth	r1, r1
 80190ea:	fa0f f988 	sxth.w	r9, r8
 80190ee:	eba2 020e 	sub.w	r2, r2, lr
 80190f2:	fa0f f881 	sxth.w	r8, r1
 80190f6:	1a3f      	subs	r7, r7, r0
 80190f8:	4372      	muls	r2, r6
 80190fa:	fb08 f707 	mul.w	r7, r8, r7
 80190fe:	42ba      	cmp	r2, r7
 8019100:	dc06      	bgt.n	8019110 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8019102:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8019106:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801910a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801910e:	e7ca      	b.n	80190a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8019110:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8019114:	4429      	add	r1, r5
 8019116:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801911a:	e651      	b.n	8018dc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801911c:	9805      	ldr	r0, [sp, #20]
 801911e:	ebaa 0000 	sub.w	r0, sl, r0
 8019122:	b280      	uxth	r0, r0
 8019124:	2d06      	cmp	r5, #6
 8019126:	fa0f fe80 	sxth.w	lr, r0
 801912a:	d817      	bhi.n	801915c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 801912c:	9b04      	ldr	r3, [sp, #16]
 801912e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8019132:	1c6b      	adds	r3, r5, #1
 8019134:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8019138:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801913c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8019140:	9b01      	ldr	r3, [sp, #4]
 8019142:	9801      	ldr	r0, [sp, #4]
 8019144:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8019148:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801914c:	805a      	strh	r2, [r3, #2]
 801914e:	809e      	strh	r6, [r3, #4]
 8019150:	80d9      	strh	r1, [r3, #6]
 8019152:	9b02      	ldr	r3, [sp, #8]
 8019154:	3b01      	subs	r3, #1
 8019156:	9302      	str	r3, [sp, #8]
 8019158:	3c08      	subs	r4, #8
 801915a:	e747      	b.n	8018fec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801915c:	9a02      	ldr	r2, [sp, #8]
 801915e:	45b6      	cmp	lr, r6
 8019160:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8019164:	db0d      	blt.n	8019182 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8019166:	449c      	add	ip, r3
 8019168:	fa1f fc8c 	uxth.w	ip, ip
 801916c:	445a      	add	r2, fp
 801916e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8019172:	448c      	add	ip, r1
 8019174:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8019178:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 801917c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8019180:	e61e      	b.n	8018dc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019182:	445a      	add	r2, fp
 8019184:	4484      	add	ip, r0
 8019186:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 801918a:	e78f      	b.n	80190ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801918c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8019190:	fa1f f18e 	uxth.w	r1, lr
 8019194:	eb01 0806 	add.w	r8, r1, r6
 8019198:	b293      	uxth	r3, r2
 801919a:	fa1f f888 	uxth.w	r8, r8
 801919e:	9306      	str	r3, [sp, #24]
 80191a0:	fa0f f388 	sxth.w	r3, r8
 80191a4:	9307      	str	r3, [sp, #28]
 80191a6:	9f06      	ldr	r7, [sp, #24]
 80191a8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80191ac:	443b      	add	r3, r7
 80191ae:	b29b      	uxth	r3, r3
 80191b0:	4596      	cmp	lr, r2
 80191b2:	9308      	str	r3, [sp, #32]
 80191b4:	da24      	bge.n	8019200 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80191b6:	9905      	ldr	r1, [sp, #20]
 80191b8:	eba3 0308 	sub.w	r3, r3, r8
 80191bc:	ebaa 0401 	sub.w	r4, sl, r1
 80191c0:	b2a4      	uxth	r4, r4
 80191c2:	b29b      	uxth	r3, r3
 80191c4:	b225      	sxth	r5, r4
 80191c6:	b219      	sxth	r1, r3
 80191c8:	eba2 020e 	sub.w	r2, r2, lr
 80191cc:	eba9 0000 	sub.w	r0, r9, r0
 80191d0:	436a      	muls	r2, r5
 80191d2:	4348      	muls	r0, r1
 80191d4:	4282      	cmp	r2, r0
 80191d6:	9a02      	ldr	r2, [sp, #8]
 80191d8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80191dc:	445a      	add	r2, fp
 80191de:	dc06      	bgt.n	80191ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 80191e0:	9b07      	ldr	r3, [sp, #28]
 80191e2:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 80191e6:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 80191ea:	44a4      	add	ip, r4
 80191ec:	e75e      	b.n	80190ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80191ee:	9904      	ldr	r1, [sp, #16]
 80191f0:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 80191f4:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 80191f8:	4433      	add	r3, r6
 80191fa:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80191fe:	e5df      	b.n	8018dc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019200:	9f06      	ldr	r7, [sp, #24]
 8019202:	9b04      	ldr	r3, [sp, #16]
 8019204:	1bc9      	subs	r1, r1, r7
 8019206:	fa0f f78a 	sxth.w	r7, sl
 801920a:	b289      	uxth	r1, r1
 801920c:	429f      	cmp	r7, r3
 801920e:	fa0f fe81 	sxth.w	lr, r1
 8019212:	dd23      	ble.n	801925c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8019214:	9a05      	ldr	r2, [sp, #20]
 8019216:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801921a:	9d07      	ldr	r5, [sp, #28]
 801921c:	ebaa 0202 	sub.w	r2, sl, r2
 8019220:	b292      	uxth	r2, r2
 8019222:	eba5 0a03 	sub.w	sl, r5, r3
 8019226:	b214      	sxth	r4, r2
 8019228:	eba9 0000 	sub.w	r0, r9, r0
 801922c:	9b02      	ldr	r3, [sp, #8]
 801922e:	fb0e f000 	mul.w	r0, lr, r0
 8019232:	fb04 fa0a 	mul.w	sl, r4, sl
 8019236:	00db      	lsls	r3, r3, #3
 8019238:	4550      	cmp	r0, sl
 801923a:	445b      	add	r3, fp
 801923c:	db03      	blt.n	8019246 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801923e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8019242:	4494      	add	ip, r2
 8019244:	e732      	b.n	80190ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8019246:	9a04      	ldr	r2, [sp, #16]
 8019248:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 801924c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8019250:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8019254:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8019258:	4431      	add	r1, r6
 801925a:	e75c      	b.n	8019116 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801925c:	9b08      	ldr	r3, [sp, #32]
 801925e:	eba3 0308 	sub.w	r3, r3, r8
 8019262:	b29b      	uxth	r3, r3
 8019264:	2d06      	cmp	r5, #6
 8019266:	b218      	sxth	r0, r3
 8019268:	d813      	bhi.n	8019292 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801926a:	9b07      	ldr	r3, [sp, #28]
 801926c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8019270:	1c6b      	adds	r3, r5, #1
 8019272:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8019276:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 801927a:	9b01      	ldr	r3, [sp, #4]
 801927c:	9901      	ldr	r1, [sp, #4]
 801927e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8019282:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8019286:	805a      	strh	r2, [r3, #2]
 8019288:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801928a:	809a      	strh	r2, [r3, #4]
 801928c:	f8a3 e006 	strh.w	lr, [r3, #6]
 8019290:	e75f      	b.n	8019152 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8019292:	9c02      	ldr	r4, [sp, #8]
 8019294:	4570      	cmp	r0, lr
 8019296:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801929a:	db0d      	blt.n	80192b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 801929c:	4431      	add	r1, r6
 801929e:	9b06      	ldr	r3, [sp, #24]
 80192a0:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80192a4:	b289      	uxth	r1, r1
 80192a6:	445c      	add	r4, fp
 80192a8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80192ac:	4419      	add	r1, r3
 80192ae:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 80192b2:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 80192b6:	e583      	b.n	8018dc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80192b8:	445c      	add	r4, fp
 80192ba:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 80192be:	e79b      	b.n	80191f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 80192c0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80192c4:	1e65      	subs	r5, r4, #1
 80192c6:	b2ad      	uxth	r5, r5
 80192c8:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 80192cc:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80192d0:	42b5      	cmp	r5, r6
 80192d2:	d044      	beq.n	801935e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 80192d4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80192d8:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 80192dc:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80192e0:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 80192e4:	4282      	cmp	r2, r0
 80192e6:	d11f      	bne.n	8019328 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80192e8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 80192ec:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80192f0:	459c      	cmp	ip, r3
 80192f2:	d119      	bne.n	8019328 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80192f4:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 80192f8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80192fc:	19d8      	adds	r0, r3, r7
 80192fe:	b200      	sxth	r0, r0
 8019300:	4288      	cmp	r0, r1
 8019302:	d109      	bne.n	8019318 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8019304:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8019308:	4413      	add	r3, r2
 801930a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801930e:	4629      	mov	r1, r5
 8019310:	9801      	ldr	r0, [sp, #4]
 8019312:	f7ff fd2b 	bl	8018d6c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8019316:	e003      	b.n	8019320 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8019318:	4411      	add	r1, r2
 801931a:	b209      	sxth	r1, r1
 801931c:	42b9      	cmp	r1, r7
 801931e:	d0f3      	beq.n	8019308 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8019320:	3d01      	subs	r5, #1
 8019322:	b2ad      	uxth	r5, r5
 8019324:	3c08      	subs	r4, #8
 8019326:	e7d3      	b.n	80192d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8019328:	42b9      	cmp	r1, r7
 801932a:	d1f9      	bne.n	8019320 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801932c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8019330:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8019334:	4299      	cmp	r1, r3
 8019336:	d1f3      	bne.n	8019320 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8019338:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801933c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8019340:	181f      	adds	r7, r3, r0
 8019342:	b23f      	sxth	r7, r7
 8019344:	42ba      	cmp	r2, r7
 8019346:	d105      	bne.n	8019354 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8019348:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 801934c:	440b      	add	r3, r1
 801934e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8019352:	e7dc      	b.n	801930e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8019354:	440a      	add	r2, r1
 8019356:	b212      	sxth	r2, r2
 8019358:	4290      	cmp	r0, r2
 801935a:	d1e1      	bne.n	8019320 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801935c:	e7f6      	b.n	801934c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801935e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8019362:	2e07      	cmp	r6, #7
 8019364:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8019368:	d812      	bhi.n	8019390 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801936a:	1c75      	adds	r5, r6, #1
 801936c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8019370:	9d01      	ldr	r5, [sp, #4]
 8019372:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8019376:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801937a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801937e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8019382:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8019386:	442c      	add	r4, r5
 8019388:	8061      	strh	r1, [r4, #2]
 801938a:	80a2      	strh	r2, [r4, #4]
 801938c:	80e3      	strh	r3, [r4, #6]
 801938e:	e581      	b.n	8018e94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8019390:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8019394:	3e01      	subs	r6, #1
 8019396:	445c      	add	r4, fp
 8019398:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 801939c:	f04f 37ff 	mov.w	r7, #4294967295
 80193a0:	2500      	movs	r5, #0
 80193a2:	9305      	str	r3, [sp, #20]
 80193a4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80193a8:	9302      	str	r3, [sp, #8]
 80193aa:	1e72      	subs	r2, r6, #1
 80193ac:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80193b0:	9304      	str	r3, [sp, #16]
 80193b2:	4691      	mov	r9, r2
 80193b4:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 80193b8:	f1b9 3fff 	cmp.w	r9, #4294967295
 80193bc:	bf14      	ite	ne
 80193be:	9905      	ldrne	r1, [sp, #20]
 80193c0:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80193c4:	6818      	ldr	r0, [r3, #0]
 80193c6:	9207      	str	r2, [sp, #28]
 80193c8:	bf18      	it	ne
 80193ca:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80193ce:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80193d2:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80193d6:	f8be 8004 	ldrh.w	r8, [lr, #4]
 80193da:	9306      	str	r3, [sp, #24]
 80193dc:	fb18 f801 	smulbb	r8, r8, r1
 80193e0:	6859      	ldr	r1, [r3, #4]
 80193e2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80193e6:	4671      	mov	r1, lr
 80193e8:	a80c      	add	r0, sp, #48	; 0x30
 80193ea:	f7ff fafb 	bl	80189e4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80193ee:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80193f2:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80193f6:	9b04      	ldr	r3, [sp, #16]
 80193f8:	9a02      	ldr	r2, [sp, #8]
 80193fa:	fb10 f001 	smulbb	r0, r0, r1
 80193fe:	fb02 8803 	mla	r8, r2, r3, r8
 8019402:	eba0 0108 	sub.w	r1, r0, r8
 8019406:	f04f 0c08 	mov.w	ip, #8
 801940a:	fb90 f0fc 	sdiv	r0, r0, ip
 801940e:	4288      	cmp	r0, r1
 8019410:	dc20      	bgt.n	8019454 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8019412:	4551      	cmp	r1, sl
 8019414:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8019418:	da03      	bge.n	8019422 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 801941a:	b1d9      	cbz	r1, 8019454 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801941c:	468a      	mov	sl, r1
 801941e:	464f      	mov	r7, r9
 8019420:	4635      	mov	r5, r6
 8019422:	f109 39ff 	add.w	r9, r9, #4294967295
 8019426:	f119 0f02 	cmn.w	r9, #2
 801942a:	d1c5      	bne.n	80193b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 801942c:	4616      	mov	r6, r2
 801942e:	3201      	adds	r2, #1
 8019430:	f1a4 0408 	sub.w	r4, r4, #8
 8019434:	d1b6      	bne.n	80193a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8019436:	9b01      	ldr	r3, [sp, #4]
 8019438:	b2ac      	uxth	r4, r5
 801943a:	00ed      	lsls	r5, r5, #3
 801943c:	1958      	adds	r0, r3, r5
 801943e:	1c7b      	adds	r3, r7, #1
 8019440:	d10b      	bne.n	801945a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8019442:	4601      	mov	r1, r0
 8019444:	9803      	ldr	r0, [sp, #12]
 8019446:	f7ff facd 	bl	80189e4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801944a:	4621      	mov	r1, r4
 801944c:	9801      	ldr	r0, [sp, #4]
 801944e:	f7ff fc8d 	bl	8018d6c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8019452:	e4b5      	b.n	8018dc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019454:	464f      	mov	r7, r9
 8019456:	4635      	mov	r5, r6
 8019458:	e7ed      	b.n	8019436 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801945a:	9b01      	ldr	r3, [sp, #4]
 801945c:	00ff      	lsls	r7, r7, #3
 801945e:	19d9      	adds	r1, r3, r7
 8019460:	f7ff fac0 	bl	80189e4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8019464:	9b03      	ldr	r3, [sp, #12]
 8019466:	cb03      	ldmia	r3!, {r0, r1}
 8019468:	445f      	add	r7, fp
 801946a:	445d      	add	r5, fp
 801946c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8019470:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8019474:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8019478:	9b03      	ldr	r3, [sp, #12]
 801947a:	6869      	ldr	r1, [r5, #4]
 801947c:	c303      	stmia	r3!, {r0, r1}
 801947e:	e7e4      	b.n	801944a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08019480 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8019480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019484:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8019488:	b09b      	sub	sp, #108	; 0x6c
 801948a:	4604      	mov	r4, r0
 801948c:	4630      	mov	r0, r6
 801948e:	f7f9 fbe0 	bl	8012c52 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019492:	4605      	mov	r5, r0
 8019494:	b948      	cbnz	r0, 80194aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8019496:	6823      	ldr	r3, [r4, #0]
 8019498:	e896 0006 	ldmia.w	r6, {r1, r2}
 801949c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801949e:	4620      	mov	r0, r4
 80194a0:	4798      	blx	r3
 80194a2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80194a6:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 80194aa:	4bc6      	ldr	r3, [pc, #792]	; (80197c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 80194ac:	681b      	ldr	r3, [r3, #0]
 80194ae:	2b00      	cmp	r3, #0
 80194b0:	d03f      	beq.n	8019532 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80194b2:	4dc5      	ldr	r5, [pc, #788]	; (80197c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 80194b4:	4628      	mov	r0, r5
 80194b6:	f7f9 fbcc 	bl	8012c52 <_ZNK8touchgfx4Rect7isEmptyEv>
 80194ba:	4606      	mov	r6, r0
 80194bc:	2800      	cmp	r0, #0
 80194be:	d138      	bne.n	8019532 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80194c0:	4628      	mov	r0, r5
 80194c2:	f7ff f907 	bl	80186d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80194c6:	6823      	ldr	r3, [r4, #0]
 80194c8:	6829      	ldr	r1, [r5, #0]
 80194ca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80194cc:	686a      	ldr	r2, [r5, #4]
 80194ce:	4620      	mov	r0, r4
 80194d0:	4798      	blx	r3
 80194d2:	802e      	strh	r6, [r5, #0]
 80194d4:	806e      	strh	r6, [r5, #2]
 80194d6:	80ae      	strh	r6, [r5, #4]
 80194d8:	80ee      	strh	r6, [r5, #6]
 80194da:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 80194de:	4dbb      	ldr	r5, [pc, #748]	; (80197cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 80194e0:	4640      	mov	r0, r8
 80194e2:	f7ff fbeb 	bl	8018cbc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80194e6:	882e      	ldrh	r6, [r5, #0]
 80194e8:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80194ec:	4633      	mov	r3, r6
 80194ee:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80194f2:	42bb      	cmp	r3, r7
 80194f4:	d224      	bcs.n	8019540 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80194f6:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 80194fa:	2907      	cmp	r1, #7
 80194fc:	d816      	bhi.n	801952c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 80194fe:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8019502:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8019506:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801950a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801950e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8019512:	1c4a      	adds	r2, r1, #1
 8019514:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8019518:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 801951c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8019520:	f8a2 a002 	strh.w	sl, [r2, #2]
 8019524:	f8a2 e004 	strh.w	lr, [r2, #4]
 8019528:	f8a2 c006 	strh.w	ip, [r2, #6]
 801952c:	3301      	adds	r3, #1
 801952e:	b29b      	uxth	r3, r3
 8019530:	e7df      	b.n	80194f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8019532:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8019536:	2b00      	cmp	r3, #0
 8019538:	d1cf      	bne.n	80194da <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801953a:	b01b      	add	sp, #108	; 0x6c
 801953c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019540:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8019544:	42b3      	cmp	r3, r6
 8019546:	d90c      	bls.n	8019562 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8019548:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801954c:	6822      	ldr	r2, [r4, #0]
 801954e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8019552:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8019554:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8019558:	4620      	mov	r0, r4
 801955a:	3601      	adds	r6, #1
 801955c:	47b8      	blx	r7
 801955e:	b2b6      	uxth	r6, r6
 8019560:	e7ee      	b.n	8019540 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8019562:	4a9b      	ldr	r2, [pc, #620]	; (80197d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8019564:	6813      	ldr	r3, [r2, #0]
 8019566:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801956a:	2b01      	cmp	r3, #1
 801956c:	4691      	mov	r9, r2
 801956e:	f040 80e2 	bne.w	8019736 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8019572:	8829      	ldrh	r1, [r5, #0]
 8019574:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8019578:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 801957c:	33ae      	adds	r3, #174	; 0xae
 801957e:	2600      	movs	r6, #0
 8019580:	428f      	cmp	r7, r1
 8019582:	f103 0308 	add.w	r3, r3, #8
 8019586:	dd0a      	ble.n	801959e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8019588:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 801958c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8019590:	4402      	add	r2, r0
 8019592:	b212      	sxth	r2, r2
 8019594:	4296      	cmp	r6, r2
 8019596:	bfb8      	it	lt
 8019598:	4616      	movlt	r6, r2
 801959a:	3101      	adds	r1, #1
 801959c:	e7f0      	b.n	8019580 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 801959e:	4b8d      	ldr	r3, [pc, #564]	; (80197d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80195a0:	f8df 922c 	ldr.w	r9, [pc, #556]	; 80197d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 80195a4:	881b      	ldrh	r3, [r3, #0]
 80195a6:	2b0f      	cmp	r3, #15
 80195a8:	bf88      	it	hi
 80195aa:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80195ae:	f04f 0300 	mov.w	r3, #0
 80195b2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80195b6:	bf98      	it	ls
 80195b8:	f04f 0b01 	movls.w	fp, #1
 80195bc:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 80195c0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 80195c4:	4b82      	ldr	r3, [pc, #520]	; (80197d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80195c6:	4438      	add	r0, r7
 80195c8:	b207      	sxth	r7, r0
 80195ca:	6818      	ldr	r0, [r3, #0]
 80195cc:	42b7      	cmp	r7, r6
 80195ce:	6803      	ldr	r3, [r0, #0]
 80195d0:	f280 8083 	bge.w	80196da <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80195d4:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80195d8:	4798      	blx	r3
 80195da:	eb07 030b 	add.w	r3, r7, fp
 80195de:	4298      	cmp	r0, r3
 80195e0:	da07      	bge.n	80195f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80195e2:	42b0      	cmp	r0, r6
 80195e4:	da05      	bge.n	80195f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80195e6:	4287      	cmp	r7, r0
 80195e8:	dd6c      	ble.n	80196c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80195ea:	2f00      	cmp	r7, #0
 80195ec:	dd6a      	ble.n	80196c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80195ee:	4630      	mov	r0, r6
 80195f0:	e004      	b.n	80195fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 80195f2:	4287      	cmp	r7, r0
 80195f4:	dcfb      	bgt.n	80195ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 80195f6:	42b0      	cmp	r0, r6
 80195f8:	bfa8      	it	ge
 80195fa:	4630      	movge	r0, r6
 80195fc:	4b76      	ldr	r3, [pc, #472]	; (80197d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 80195fe:	f8ad 7016 	strh.w	r7, [sp, #22]
 8019602:	1bc0      	subs	r0, r0, r7
 8019604:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019608:	882f      	ldrh	r7, [r5, #0]
 801960a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801960e:	2200      	movs	r2, #0
 8019610:	f8ad 2014 	strh.w	r2, [sp, #20]
 8019614:	f8ad 001a 	strh.w	r0, [sp, #26]
 8019618:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801961c:	42bb      	cmp	r3, r7
 801961e:	d9cd      	bls.n	80195bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8019620:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8019624:	ab07      	add	r3, sp, #28
 8019626:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801962a:	6851      	ldr	r1, [r2, #4]
 801962c:	c303      	stmia	r3!, {r0, r1}
 801962e:	a905      	add	r1, sp, #20
 8019630:	a807      	add	r0, sp, #28
 8019632:	f7ff f93e 	bl	80188b2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8019636:	2800      	cmp	r0, #0
 8019638:	d04c      	beq.n	80196d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801963a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801963e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8019642:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8019646:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801964a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801964e:	9302      	str	r3, [sp, #8]
 8019650:	4686      	mov	lr, r0
 8019652:	4290      	cmp	r0, r2
 8019654:	4450      	add	r0, sl
 8019656:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801965a:	bfb8      	it	lt
 801965c:	4696      	movlt	lr, r2
 801965e:	4452      	add	r2, sl
 8019660:	4299      	cmp	r1, r3
 8019662:	b280      	uxth	r0, r0
 8019664:	b292      	uxth	r2, r2
 8019666:	468c      	mov	ip, r1
 8019668:	fa0f fa82 	sxth.w	sl, r2
 801966c:	bfb8      	it	lt
 801966e:	469c      	movlt	ip, r3
 8019670:	b203      	sxth	r3, r0
 8019672:	4553      	cmp	r3, sl
 8019674:	bfb8      	it	lt
 8019676:	4602      	movlt	r2, r0
 8019678:	eba2 020e 	sub.w	r2, r2, lr
 801967c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8019680:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8019684:	9b02      	ldr	r3, [sp, #8]
 8019686:	f8ad e01c 	strh.w	lr, [sp, #28]
 801968a:	4411      	add	r1, r2
 801968c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8019690:	f8ad c01e 	strh.w	ip, [sp, #30]
 8019694:	4413      	add	r3, r2
 8019696:	b289      	uxth	r1, r1
 8019698:	b29b      	uxth	r3, r3
 801969a:	b208      	sxth	r0, r1
 801969c:	b21a      	sxth	r2, r3
 801969e:	4290      	cmp	r0, r2
 80196a0:	bfb8      	it	lt
 80196a2:	460b      	movlt	r3, r1
 80196a4:	eba3 030c 	sub.w	r3, r3, ip
 80196a8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80196ac:	a807      	add	r0, sp, #28
 80196ae:	f7f9 fad0 	bl	8012c52 <_ZNK8touchgfx4Rect7isEmptyEv>
 80196b2:	b920      	cbnz	r0, 80196be <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 80196b4:	6823      	ldr	r3, [r4, #0]
 80196b6:	a907      	add	r1, sp, #28
 80196b8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80196ba:	4620      	mov	r0, r4
 80196bc:	4798      	blx	r3
 80196be:	3701      	adds	r7, #1
 80196c0:	b2bf      	uxth	r7, r7
 80196c2:	e7a9      	b.n	8019618 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 80196c4:	f8d9 0000 	ldr.w	r0, [r9]
 80196c8:	6803      	ldr	r3, [r0, #0]
 80196ca:	2101      	movs	r1, #1
 80196cc:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80196d0:	4798      	blx	r3
 80196d2:	e773      	b.n	80195bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80196d4:	e9cd 0007 	strd	r0, r0, [sp, #28]
 80196d8:	e7e8      	b.n	80196ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 80196da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80196dc:	4798      	blx	r3
 80196de:	4b3f      	ldr	r3, [pc, #252]	; (80197dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80196e0:	781b      	ldrb	r3, [r3, #0]
 80196e2:	2b00      	cmp	r3, #0
 80196e4:	f43f af29 	beq.w	801953a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80196e8:	2300      	movs	r3, #0
 80196ea:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 80196ee:	882b      	ldrh	r3, [r5, #0]
 80196f0:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 80196f4:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80196f8:	42ab      	cmp	r3, r5
 80196fa:	f4bf af1e 	bcs.w	801953a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80196fe:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8019702:	2907      	cmp	r1, #7
 8019704:	d814      	bhi.n	8019730 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8019706:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801970a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801970e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8019712:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8019716:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801971a:	1c4a      	adds	r2, r1, #1
 801971c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8019720:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8019724:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8019728:	f8a2 c002 	strh.w	ip, [r2, #2]
 801972c:	8097      	strh	r7, [r2, #4]
 801972e:	80d6      	strh	r6, [r2, #6]
 8019730:	3301      	adds	r3, #1
 8019732:	b29b      	uxth	r3, r3
 8019734:	e7e0      	b.n	80196f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8019736:	2b02      	cmp	r3, #2
 8019738:	f040 8133 	bne.w	80199a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801973c:	4b28      	ldr	r3, [pc, #160]	; (80197e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801973e:	781b      	ldrb	r3, [r3, #0]
 8019740:	2b01      	cmp	r3, #1
 8019742:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8019746:	f000 8098 	beq.w	801987a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801974a:	882a      	ldrh	r2, [r5, #0]
 801974c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8019750:	3201      	adds	r2, #1
 8019752:	b292      	uxth	r2, r2
 8019754:	2900      	cmp	r1, #0
 8019756:	d0c2      	beq.n	80196de <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8019758:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 801975c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8019760:	441e      	add	r6, r3
 8019762:	b236      	sxth	r6, r6
 8019764:	4694      	mov	ip, r2
 8019766:	f04f 0900 	mov.w	r9, #0
 801976a:	fa1f f38c 	uxth.w	r3, ip
 801976e:	4299      	cmp	r1, r3
 8019770:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8019774:	f240 80bf 	bls.w	80198f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8019778:	4427      	add	r7, r4
 801977a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801977e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8019782:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8019786:	4283      	cmp	r3, r0
 8019788:	f340 80a1 	ble.w	80198ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 801978c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8019790:	4406      	add	r6, r0
 8019792:	b236      	sxth	r6, r6
 8019794:	429e      	cmp	r6, r3
 8019796:	bfa8      	it	ge
 8019798:	461e      	movge	r6, r3
 801979a:	46e1      	mov	r9, ip
 801979c:	f10c 0c01 	add.w	ip, ip, #1
 80197a0:	e7e3      	b.n	801976a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 80197a2:	d10a      	bne.n	80197ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 80197a4:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 80197a8:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 80197ac:	4562      	cmp	r2, ip
 80197ae:	bfb8      	it	lt
 80197b0:	4662      	movlt	r2, ip
 80197b2:	4288      	cmp	r0, r1
 80197b4:	bfb8      	it	lt
 80197b6:	461f      	movlt	r7, r3
 80197b8:	e087      	b.n	80198ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80197ba:	428a      	cmp	r2, r1
 80197bc:	bfb8      	it	lt
 80197be:	460a      	movlt	r2, r1
 80197c0:	e083      	b.n	80198ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80197c2:	bf00      	nop
 80197c4:	2001388c 	.word	0x2001388c
 80197c8:	20013898 	.word	0x20013898
 80197cc:	20000088 	.word	0x20000088
 80197d0:	2001384c 	.word	0x2001384c
 80197d4:	20013842 	.word	0x20013842
 80197d8:	20013840 	.word	0x20013840
 80197dc:	2001384a 	.word	0x2001384a
 80197e0:	20013844 	.word	0x20013844
 80197e4:	19a1      	adds	r1, r4, r6
 80197e6:	ab07      	add	r3, sp, #28
 80197e8:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80197ec:	6849      	ldr	r1, [r1, #4]
 80197ee:	c303      	stmia	r3!, {r0, r1}
 80197f0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80197f4:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80197f8:	2b13      	cmp	r3, #19
 80197fa:	bfd8      	it	le
 80197fc:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8019800:	f8ad 201c 	strh.w	r2, [sp, #28]
 8019804:	440b      	add	r3, r1
 8019806:	1a9b      	subs	r3, r3, r2
 8019808:	a807      	add	r0, sp, #28
 801980a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801980e:	f7fe ff7b 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019812:	a807      	add	r0, sp, #28
 8019814:	f7f9 fa1d 	bl	8012c52 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019818:	bb78      	cbnz	r0, 801987a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801981a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801981e:	f8d9 0000 	ldr.w	r0, [r9]
 8019822:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8019826:	f8d0 e000 	ldr.w	lr, [r0]
 801982a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801982e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8019832:	f1bc 0f14 	cmp.w	ip, #20
 8019836:	bfa8      	it	ge
 8019838:	f04f 0c14 	movge.w	ip, #20
 801983c:	fa1f fc8c 	uxth.w	ip, ip
 8019840:	f8cd c000 	str.w	ip, [sp]
 8019844:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8019848:	47d8      	blx	fp
 801984a:	4683      	mov	fp, r0
 801984c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8019850:	a807      	add	r0, sp, #28
 8019852:	f7fe ff3f 	bl	80186d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8019856:	6823      	ldr	r3, [r4, #0]
 8019858:	4426      	add	r6, r4
 801985a:	4620      	mov	r0, r4
 801985c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801985e:	a907      	add	r1, sp, #28
 8019860:	4798      	blx	r3
 8019862:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8019866:	eba0 000b 	sub.w	r0, r0, fp
 801986a:	b200      	sxth	r0, r0
 801986c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8019870:	b918      	cbnz	r0, 801987a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8019872:	b2b9      	uxth	r1, r7
 8019874:	4650      	mov	r0, sl
 8019876:	f7ff fa79 	bl	8018d6c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801987a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 801987e:	f1bb 0f00 	cmp.w	fp, #0
 8019882:	f43f af2c 	beq.w	80196de <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8019886:	882b      	ldrh	r3, [r5, #0]
 8019888:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 801988c:	3301      	adds	r3, #1
 801988e:	b29b      	uxth	r3, r3
 8019890:	2700      	movs	r7, #0
 8019892:	b299      	uxth	r1, r3
 8019894:	458b      	cmp	fp, r1
 8019896:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 801989a:	d9a3      	bls.n	80197e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 801989c:	4426      	add	r6, r4
 801989e:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80198a2:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 80198a6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80198aa:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 80198ae:	4408      	add	r0, r1
 80198b0:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 80198b4:	4461      	add	r1, ip
 80198b6:	b200      	sxth	r0, r0
 80198b8:	b209      	sxth	r1, r1
 80198ba:	4288      	cmp	r0, r1
 80198bc:	f6bf af71 	bge.w	80197a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 80198c0:	4584      	cmp	ip, r0
 80198c2:	4662      	mov	r2, ip
 80198c4:	461f      	mov	r7, r3
 80198c6:	bfb8      	it	lt
 80198c8:	4602      	movlt	r2, r0
 80198ca:	3301      	adds	r3, #1
 80198cc:	e7e1      	b.n	8019892 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 80198ce:	d10e      	bne.n	80198ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 80198d0:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 80198d4:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 80198d8:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 80198dc:	4473      	add	r3, lr
 80198de:	b21b      	sxth	r3, r3
 80198e0:	429e      	cmp	r6, r3
 80198e2:	bfa8      	it	ge
 80198e4:	461e      	movge	r6, r3
 80198e6:	4287      	cmp	r7, r0
 80198e8:	bfb8      	it	lt
 80198ea:	46e1      	movlt	r9, ip
 80198ec:	e756      	b.n	801979c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80198ee:	4286      	cmp	r6, r0
 80198f0:	bfa8      	it	ge
 80198f2:	4606      	movge	r6, r0
 80198f4:	e752      	b.n	801979c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80198f6:	eb0a 0007 	add.w	r0, sl, r7
 80198fa:	4427      	add	r7, r4
 80198fc:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8019900:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8019904:	f1bb 0f13 	cmp.w	fp, #19
 8019908:	bfde      	ittt	le
 801990a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 801990e:	445e      	addle	r6, fp
 8019910:	b236      	sxthle	r6, r6
 8019912:	f7f9 f99e 	bl	8012c52 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019916:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801991a:	2800      	cmp	r0, #0
 801991c:	f47f af1a 	bne.w	8019754 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8019920:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8019924:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8019928:	482a      	ldr	r0, [pc, #168]	; (80199d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801992a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 801992e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8019932:	6800      	ldr	r0, [r0, #0]
 8019934:	f8ad 101c 	strh.w	r1, [sp, #28]
 8019938:	1ab6      	subs	r6, r6, r2
 801993a:	2e14      	cmp	r6, #20
 801993c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8019940:	f8ad 3020 	strh.w	r3, [sp, #32]
 8019944:	bfa8      	it	ge
 8019946:	2614      	movge	r6, #20
 8019948:	f8d0 c000 	ldr.w	ip, [r0]
 801994c:	b2b6      	uxth	r6, r6
 801994e:	fa1f fb8b 	uxth.w	fp, fp
 8019952:	455e      	cmp	r6, fp
 8019954:	bf94      	ite	ls
 8019956:	9600      	strls	r6, [sp, #0]
 8019958:	f8cd b000 	strhi.w	fp, [sp]
 801995c:	b292      	uxth	r2, r2
 801995e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8019962:	b29b      	uxth	r3, r3
 8019964:	b289      	uxth	r1, r1
 8019966:	47b0      	blx	r6
 8019968:	6823      	ldr	r3, [r4, #0]
 801996a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801996e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8019970:	a907      	add	r1, sp, #28
 8019972:	4620      	mov	r0, r4
 8019974:	4798      	blx	r3
 8019976:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801997a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 801997e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8019982:	1a5b      	subs	r3, r3, r1
 8019984:	440a      	add	r2, r1
 8019986:	b21b      	sxth	r3, r3
 8019988:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 801998c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8019990:	2b00      	cmp	r3, #0
 8019992:	f47f aeda 	bne.w	801974a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8019996:	fa1f f189 	uxth.w	r1, r9
 801999a:	4650      	mov	r0, sl
 801999c:	f7ff f9e6 	bl	8018d6c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80199a0:	e6d3      	b.n	801974a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80199a2:	882e      	ldrh	r6, [r5, #0]
 80199a4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80199a8:	42b3      	cmp	r3, r6
 80199aa:	f67f ae98 	bls.w	80196de <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80199ae:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 80199b2:	ab07      	add	r3, sp, #28
 80199b4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80199b8:	6851      	ldr	r1, [r2, #4]
 80199ba:	c303      	stmia	r3!, {r0, r1}
 80199bc:	a807      	add	r0, sp, #28
 80199be:	f7f9 f948 	bl	8012c52 <_ZNK8touchgfx4Rect7isEmptyEv>
 80199c2:	b920      	cbnz	r0, 80199ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 80199c4:	6823      	ldr	r3, [r4, #0]
 80199c6:	a907      	add	r1, sp, #28
 80199c8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80199ca:	4620      	mov	r0, r4
 80199cc:	4798      	blx	r3
 80199ce:	3601      	adds	r6, #1
 80199d0:	b2b6      	uxth	r6, r6
 80199d2:	e7e7      	b.n	80199a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 80199d4:	2001384c 	.word	0x2001384c

080199d8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80199d8:	4b03      	ldr	r3, [pc, #12]	; (80199e8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80199da:	2200      	movs	r2, #0
 80199dc:	801a      	strh	r2, [r3, #0]
 80199de:	805a      	strh	r2, [r3, #2]
 80199e0:	809a      	strh	r2, [r3, #4]
 80199e2:	80da      	strh	r2, [r3, #6]
 80199e4:	4770      	bx	lr
 80199e6:	bf00      	nop
 80199e8:	20013898 	.word	0x20013898

080199ec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80199ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80199f0:	4606      	mov	r6, r0
 80199f2:	b09d      	sub	sp, #116	; 0x74
 80199f4:	a803      	add	r0, sp, #12
 80199f6:	4614      	mov	r4, r2
 80199f8:	468a      	mov	sl, r1
 80199fa:	461d      	mov	r5, r3
 80199fc:	f000 ff08 	bl	801a810 <_ZN8touchgfx12TextProviderC1Ev>
 8019a00:	6833      	ldr	r3, [r6, #0]
 8019a02:	4630      	mov	r0, r6
 8019a04:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019a06:	4798      	blx	r3
 8019a08:	6833      	ldr	r3, [r6, #0]
 8019a0a:	4607      	mov	r7, r0
 8019a0c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019a0e:	4630      	mov	r0, r6
 8019a10:	4798      	blx	r3
 8019a12:	462a      	mov	r2, r5
 8019a14:	9000      	str	r0, [sp, #0]
 8019a16:	4621      	mov	r1, r4
 8019a18:	463b      	mov	r3, r7
 8019a1a:	a803      	add	r0, sp, #12
 8019a1c:	f000 ff53 	bl	801a8c6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019a20:	2500      	movs	r5, #0
 8019a22:	462c      	mov	r4, r5
 8019a24:	46a9      	mov	r9, r5
 8019a26:	46a8      	mov	r8, r5
 8019a28:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8019a2c:	2300      	movs	r3, #0
 8019a2e:	9302      	str	r3, [sp, #8]
 8019a30:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8019a34:	429c      	cmp	r4, r3
 8019a36:	d002      	beq.n	8019a3e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8019a38:	455c      	cmp	r4, fp
 8019a3a:	bf18      	it	ne
 8019a3c:	4625      	movne	r5, r4
 8019a3e:	ab02      	add	r3, sp, #8
 8019a40:	4632      	mov	r2, r6
 8019a42:	4651      	mov	r1, sl
 8019a44:	a803      	add	r0, sp, #12
 8019a46:	f001 fa41 	bl	801aecc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019a4a:	4604      	mov	r4, r0
 8019a4c:	b108      	cbz	r0, 8019a52 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8019a4e:	280a      	cmp	r0, #10
 8019a50:	d10a      	bne.n	8019a68 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8019a52:	45c1      	cmp	r9, r8
 8019a54:	bf38      	it	cc
 8019a56:	46c1      	movcc	r9, r8
 8019a58:	f04f 0800 	mov.w	r8, #0
 8019a5c:	2c00      	cmp	r4, #0
 8019a5e:	d1e5      	bne.n	8019a2c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8019a60:	4648      	mov	r0, r9
 8019a62:	b01d      	add	sp, #116	; 0x74
 8019a64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019a68:	9a02      	ldr	r2, [sp, #8]
 8019a6a:	2a00      	cmp	r2, #0
 8019a6c:	d0de      	beq.n	8019a2c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8019a6e:	7b57      	ldrb	r7, [r2, #13]
 8019a70:	6833      	ldr	r3, [r6, #0]
 8019a72:	8894      	ldrh	r4, [r2, #4]
 8019a74:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8019a76:	007f      	lsls	r7, r7, #1
 8019a78:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8019a7c:	7a97      	ldrb	r7, [r2, #10]
 8019a7e:	4629      	mov	r1, r5
 8019a80:	4307      	orrs	r7, r0
 8019a82:	4630      	mov	r0, r6
 8019a84:	4798      	blx	r3
 8019a86:	4438      	add	r0, r7
 8019a88:	4480      	add	r8, r0
 8019a8a:	fa1f f888 	uxth.w	r8, r8
 8019a8e:	e7e5      	b.n	8019a5c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08019a90 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8019a90:	b508      	push	{r3, lr}
 8019a92:	6803      	ldr	r3, [r0, #0]
 8019a94:	68db      	ldr	r3, [r3, #12]
 8019a96:	4798      	blx	r3
 8019a98:	b128      	cbz	r0, 8019aa6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8019a9a:	7b43      	ldrb	r3, [r0, #13]
 8019a9c:	7a80      	ldrb	r0, [r0, #10]
 8019a9e:	005b      	lsls	r3, r3, #1
 8019aa0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8019aa4:	4318      	orrs	r0, r3
 8019aa6:	bd08      	pop	{r3, pc}

08019aa8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8019aa8:	b40e      	push	{r1, r2, r3}
 8019aaa:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019aac:	b09e      	sub	sp, #120	; 0x78
 8019aae:	ab23      	add	r3, sp, #140	; 0x8c
 8019ab0:	4605      	mov	r5, r0
 8019ab2:	f853 4b04 	ldr.w	r4, [r3], #4
 8019ab6:	9303      	str	r3, [sp, #12]
 8019ab8:	a805      	add	r0, sp, #20
 8019aba:	f000 fea9 	bl	801a810 <_ZN8touchgfx12TextProviderC1Ev>
 8019abe:	682b      	ldr	r3, [r5, #0]
 8019ac0:	4628      	mov	r0, r5
 8019ac2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019ac4:	4798      	blx	r3
 8019ac6:	682b      	ldr	r3, [r5, #0]
 8019ac8:	4606      	mov	r6, r0
 8019aca:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019acc:	4628      	mov	r0, r5
 8019ace:	4798      	blx	r3
 8019ad0:	4633      	mov	r3, r6
 8019ad2:	ae1e      	add	r6, sp, #120	; 0x78
 8019ad4:	4621      	mov	r1, r4
 8019ad6:	9000      	str	r0, [sp, #0]
 8019ad8:	9a03      	ldr	r2, [sp, #12]
 8019ada:	2400      	movs	r4, #0
 8019adc:	a805      	add	r0, sp, #20
 8019ade:	f000 fef2 	bl	801a8c6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019ae2:	f846 4d68 	str.w	r4, [r6, #-104]!
 8019ae6:	462a      	mov	r2, r5
 8019ae8:	4633      	mov	r3, r6
 8019aea:	4621      	mov	r1, r4
 8019aec:	a805      	add	r0, sp, #20
 8019aee:	f001 f9ed 	bl	801aecc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019af2:	b1f0      	cbz	r0, 8019b32 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8019af4:	280a      	cmp	r0, #10
 8019af6:	d018      	beq.n	8019b2a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8019af8:	9f04      	ldr	r7, [sp, #16]
 8019afa:	b1b7      	cbz	r7, 8019b2a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8019afc:	7b78      	ldrb	r0, [r7, #13]
 8019afe:	7a3b      	ldrb	r3, [r7, #8]
 8019b00:	88ea      	ldrh	r2, [r5, #6]
 8019b02:	00c1      	lsls	r1, r0, #3
 8019b04:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8019b08:	4319      	orrs	r1, r3
 8019b0a:	0643      	lsls	r3, r0, #25
 8019b0c:	bf44      	itt	mi
 8019b0e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8019b12:	b219      	sxthmi	r1, r3
 8019b14:	0100      	lsls	r0, r0, #4
 8019b16:	79fb      	ldrb	r3, [r7, #7]
 8019b18:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8019b1c:	4303      	orrs	r3, r0
 8019b1e:	4413      	add	r3, r2
 8019b20:	1a5b      	subs	r3, r3, r1
 8019b22:	b21b      	sxth	r3, r3
 8019b24:	429c      	cmp	r4, r3
 8019b26:	bfb8      	it	lt
 8019b28:	461c      	movlt	r4, r3
 8019b2a:	4633      	mov	r3, r6
 8019b2c:	462a      	mov	r2, r5
 8019b2e:	2100      	movs	r1, #0
 8019b30:	e7dc      	b.n	8019aec <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8019b32:	b2a0      	uxth	r0, r4
 8019b34:	b01e      	add	sp, #120	; 0x78
 8019b36:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8019b3a:	b003      	add	sp, #12
 8019b3c:	4770      	bx	lr

08019b3e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8019b3e:	7a43      	ldrb	r3, [r0, #9]
 8019b40:	8880      	ldrh	r0, [r0, #4]
 8019b42:	4418      	add	r0, r3
 8019b44:	b280      	uxth	r0, r0
 8019b46:	4770      	bx	lr

08019b48 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8019b48:	6803      	ldr	r3, [r0, #0]
 8019b4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8019b4c:	4718      	bx	r3

08019b4e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8019b4e:	b40e      	push	{r1, r2, r3}
 8019b50:	b570      	push	{r4, r5, r6, lr}
 8019b52:	b09d      	sub	sp, #116	; 0x74
 8019b54:	ab21      	add	r3, sp, #132	; 0x84
 8019b56:	4604      	mov	r4, r0
 8019b58:	f853 5b04 	ldr.w	r5, [r3], #4
 8019b5c:	9302      	str	r3, [sp, #8]
 8019b5e:	a803      	add	r0, sp, #12
 8019b60:	f000 fe56 	bl	801a810 <_ZN8touchgfx12TextProviderC1Ev>
 8019b64:	6823      	ldr	r3, [r4, #0]
 8019b66:	4620      	mov	r0, r4
 8019b68:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019b6a:	4798      	blx	r3
 8019b6c:	6823      	ldr	r3, [r4, #0]
 8019b6e:	4606      	mov	r6, r0
 8019b70:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019b72:	4620      	mov	r0, r4
 8019b74:	4798      	blx	r3
 8019b76:	4633      	mov	r3, r6
 8019b78:	9000      	str	r0, [sp, #0]
 8019b7a:	9a02      	ldr	r2, [sp, #8]
 8019b7c:	4629      	mov	r1, r5
 8019b7e:	a803      	add	r0, sp, #12
 8019b80:	f000 fea1 	bl	801a8c6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019b84:	a803      	add	r0, sp, #12
 8019b86:	f001 fa6f 	bl	801b068 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8019b8a:	2401      	movs	r4, #1
 8019b8c:	b2a3      	uxth	r3, r4
 8019b8e:	b140      	cbz	r0, 8019ba2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8019b90:	280a      	cmp	r0, #10
 8019b92:	bf08      	it	eq
 8019b94:	3301      	addeq	r3, #1
 8019b96:	a803      	add	r0, sp, #12
 8019b98:	bf08      	it	eq
 8019b9a:	b21c      	sxtheq	r4, r3
 8019b9c:	f001 fa64 	bl	801b068 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8019ba0:	e7f4      	b.n	8019b8c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8019ba2:	4618      	mov	r0, r3
 8019ba4:	b01d      	add	sp, #116	; 0x74
 8019ba6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019baa:	b003      	add	sp, #12
 8019bac:	4770      	bx	lr

08019bae <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8019bae:	b40e      	push	{r1, r2, r3}
 8019bb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019bb2:	b09e      	sub	sp, #120	; 0x78
 8019bb4:	ab23      	add	r3, sp, #140	; 0x8c
 8019bb6:	4604      	mov	r4, r0
 8019bb8:	f853 5b04 	ldr.w	r5, [r3], #4
 8019bbc:	9303      	str	r3, [sp, #12]
 8019bbe:	a805      	add	r0, sp, #20
 8019bc0:	f000 fe26 	bl	801a810 <_ZN8touchgfx12TextProviderC1Ev>
 8019bc4:	6823      	ldr	r3, [r4, #0]
 8019bc6:	4620      	mov	r0, r4
 8019bc8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019bca:	4798      	blx	r3
 8019bcc:	6823      	ldr	r3, [r4, #0]
 8019bce:	4606      	mov	r6, r0
 8019bd0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019bd2:	4620      	mov	r0, r4
 8019bd4:	4798      	blx	r3
 8019bd6:	4633      	mov	r3, r6
 8019bd8:	4629      	mov	r1, r5
 8019bda:	9000      	str	r0, [sp, #0]
 8019bdc:	9a03      	ldr	r2, [sp, #12]
 8019bde:	a805      	add	r0, sp, #20
 8019be0:	ad1e      	add	r5, sp, #120	; 0x78
 8019be2:	f000 fe70 	bl	801a8c6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019be6:	2100      	movs	r1, #0
 8019be8:	f845 1d68 	str.w	r1, [r5, #-104]!
 8019bec:	4622      	mov	r2, r4
 8019bee:	462b      	mov	r3, r5
 8019bf0:	a805      	add	r0, sp, #20
 8019bf2:	f001 f96b 	bl	801aecc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019bf6:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8019bfa:	b1d8      	cbz	r0, 8019c34 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8019bfc:	280a      	cmp	r0, #10
 8019bfe:	d012      	beq.n	8019c26 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8019c00:	9804      	ldr	r0, [sp, #16]
 8019c02:	b180      	cbz	r0, 8019c26 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8019c04:	7b47      	ldrb	r7, [r0, #13]
 8019c06:	88e2      	ldrh	r2, [r4, #6]
 8019c08:	00fb      	lsls	r3, r7, #3
 8019c0a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8019c0e:	7a03      	ldrb	r3, [r0, #8]
 8019c10:	430b      	orrs	r3, r1
 8019c12:	0679      	lsls	r1, r7, #25
 8019c14:	bf44      	itt	mi
 8019c16:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019c1a:	b21b      	sxthmi	r3, r3
 8019c1c:	1ad3      	subs	r3, r2, r3
 8019c1e:	b21b      	sxth	r3, r3
 8019c20:	429e      	cmp	r6, r3
 8019c22:	bfa8      	it	ge
 8019c24:	461e      	movge	r6, r3
 8019c26:	462b      	mov	r3, r5
 8019c28:	4622      	mov	r2, r4
 8019c2a:	2100      	movs	r1, #0
 8019c2c:	a805      	add	r0, sp, #20
 8019c2e:	f001 f94d 	bl	801aecc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019c32:	e7e2      	b.n	8019bfa <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8019c34:	4630      	mov	r0, r6
 8019c36:	b01e      	add	sp, #120	; 0x78
 8019c38:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8019c3c:	b003      	add	sp, #12
 8019c3e:	4770      	bx	lr

08019c40 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8019c40:	b513      	push	{r0, r1, r4, lr}
 8019c42:	6803      	ldr	r3, [r0, #0]
 8019c44:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8019c48:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8019c4c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8019c50:	2400      	movs	r4, #0
 8019c52:	9400      	str	r4, [sp, #0]
 8019c54:	f8ad 2006 	strh.w	r2, [sp, #6]
 8019c58:	691b      	ldr	r3, [r3, #16]
 8019c5a:	4669      	mov	r1, sp
 8019c5c:	4798      	blx	r3
 8019c5e:	b002      	add	sp, #8
 8019c60:	bd10      	pop	{r4, pc}

08019c62 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8019c62:	b538      	push	{r3, r4, r5, lr}
 8019c64:	680b      	ldr	r3, [r1, #0]
 8019c66:	460c      	mov	r4, r1
 8019c68:	68db      	ldr	r3, [r3, #12]
 8019c6a:	4605      	mov	r5, r0
 8019c6c:	4798      	blx	r3
 8019c6e:	6823      	ldr	r3, [r4, #0]
 8019c70:	4620      	mov	r0, r4
 8019c72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019c74:	4629      	mov	r1, r5
 8019c76:	4798      	blx	r3
 8019c78:	4628      	mov	r0, r5
 8019c7a:	bd38      	pop	{r3, r4, r5, pc}

08019c7c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8019c7c:	b410      	push	{r4}
 8019c7e:	880a      	ldrh	r2, [r1, #0]
 8019c80:	8884      	ldrh	r4, [r0, #4]
 8019c82:	4422      	add	r2, r4
 8019c84:	800a      	strh	r2, [r1, #0]
 8019c86:	88c4      	ldrh	r4, [r0, #6]
 8019c88:	884a      	ldrh	r2, [r1, #2]
 8019c8a:	4422      	add	r2, r4
 8019c8c:	804a      	strh	r2, [r1, #2]
 8019c8e:	6940      	ldr	r0, [r0, #20]
 8019c90:	b120      	cbz	r0, 8019c9c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8019c92:	6803      	ldr	r3, [r0, #0]
 8019c94:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019c98:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019c9a:	4718      	bx	r3
 8019c9c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019ca0:	4770      	bx	lr

08019ca2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8019ca2:	b570      	push	{r4, r5, r6, lr}
 8019ca4:	8882      	ldrh	r2, [r0, #4]
 8019ca6:	880b      	ldrh	r3, [r1, #0]
 8019ca8:	4413      	add	r3, r2
 8019caa:	800b      	strh	r3, [r1, #0]
 8019cac:	88c2      	ldrh	r2, [r0, #6]
 8019cae:	884b      	ldrh	r3, [r1, #2]
 8019cb0:	460c      	mov	r4, r1
 8019cb2:	4413      	add	r3, r2
 8019cb4:	804b      	strh	r3, [r1, #2]
 8019cb6:	4605      	mov	r5, r0
 8019cb8:	1d01      	adds	r1, r0, #4
 8019cba:	4620      	mov	r0, r4
 8019cbc:	f7f8 ff86 	bl	8012bcc <_ZN8touchgfx4RectaNERKS0_>
 8019cc0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8019cc4:	2b00      	cmp	r3, #0
 8019cc6:	dd0b      	ble.n	8019ce0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019cc8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019ccc:	2b00      	cmp	r3, #0
 8019cce:	dd07      	ble.n	8019ce0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019cd0:	6968      	ldr	r0, [r5, #20]
 8019cd2:	b128      	cbz	r0, 8019ce0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019cd4:	6803      	ldr	r3, [r0, #0]
 8019cd6:	4621      	mov	r1, r4
 8019cd8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019cda:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019cde:	4718      	bx	r3
 8019ce0:	bd70      	pop	{r4, r5, r6, pc}
	...

08019ce4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8019ce4:	b570      	push	{r4, r5, r6, lr}
 8019ce6:	8882      	ldrh	r2, [r0, #4]
 8019ce8:	880b      	ldrh	r3, [r1, #0]
 8019cea:	4413      	add	r3, r2
 8019cec:	800b      	strh	r3, [r1, #0]
 8019cee:	88c2      	ldrh	r2, [r0, #6]
 8019cf0:	884b      	ldrh	r3, [r1, #2]
 8019cf2:	460c      	mov	r4, r1
 8019cf4:	4413      	add	r3, r2
 8019cf6:	804b      	strh	r3, [r1, #2]
 8019cf8:	4605      	mov	r5, r0
 8019cfa:	1d01      	adds	r1, r0, #4
 8019cfc:	4620      	mov	r0, r4
 8019cfe:	f7f8 ff65 	bl	8012bcc <_ZN8touchgfx4RectaNERKS0_>
 8019d02:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8019d06:	2b00      	cmp	r3, #0
 8019d08:	dd19      	ble.n	8019d3e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019d0a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019d0e:	2b00      	cmp	r3, #0
 8019d10:	dd15      	ble.n	8019d3e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019d12:	6968      	ldr	r0, [r5, #20]
 8019d14:	b128      	cbz	r0, 8019d22 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8019d16:	6803      	ldr	r3, [r0, #0]
 8019d18:	4621      	mov	r1, r4
 8019d1a:	691b      	ldr	r3, [r3, #16]
 8019d1c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019d20:	4718      	bx	r3
 8019d22:	4b07      	ldr	r3, [pc, #28]	; (8019d40 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8019d24:	681b      	ldr	r3, [r3, #0]
 8019d26:	3304      	adds	r3, #4
 8019d28:	429d      	cmp	r5, r3
 8019d2a:	d108      	bne.n	8019d3e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019d2c:	f7fe fea0 	bl	8018a70 <_ZN8touchgfx11Application11getInstanceEv>
 8019d30:	6803      	ldr	r3, [r0, #0]
 8019d32:	6821      	ldr	r1, [r4, #0]
 8019d34:	6862      	ldr	r2, [r4, #4]
 8019d36:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8019d38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019d3c:	4718      	bx	r3
 8019d3e:	bd70      	pop	{r4, r5, r6, pc}
 8019d40:	20013890 	.word	0x20013890

08019d44 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8019d44:	b570      	push	{r4, r5, r6, lr}
 8019d46:	4604      	mov	r4, r0
 8019d48:	4616      	mov	r6, r2
 8019d4a:	460d      	mov	r5, r1
 8019d4c:	b901      	cbnz	r1, 8019d50 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8019d4e:	b192      	cbz	r2, 8019d76 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8019d50:	6823      	ldr	r3, [r4, #0]
 8019d52:	4620      	mov	r0, r4
 8019d54:	699b      	ldr	r3, [r3, #24]
 8019d56:	4798      	blx	r3
 8019d58:	88e2      	ldrh	r2, [r4, #6]
 8019d5a:	88a1      	ldrh	r1, [r4, #4]
 8019d5c:	4432      	add	r2, r6
 8019d5e:	4429      	add	r1, r5
 8019d60:	4620      	mov	r0, r4
 8019d62:	b212      	sxth	r2, r2
 8019d64:	b209      	sxth	r1, r1
 8019d66:	f7e9 fd15 	bl	8003794 <_ZN8touchgfx8Drawable5setXYEss>
 8019d6a:	6823      	ldr	r3, [r4, #0]
 8019d6c:	4620      	mov	r0, r4
 8019d6e:	699b      	ldr	r3, [r3, #24]
 8019d70:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019d74:	4718      	bx	r3
 8019d76:	bd70      	pop	{r4, r5, r6, pc}

08019d78 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8019d78:	b510      	push	{r4, lr}
 8019d7a:	4604      	mov	r4, r0
 8019d7c:	4608      	mov	r0, r1
 8019d7e:	2300      	movs	r3, #0
 8019d80:	8023      	strh	r3, [r4, #0]
 8019d82:	8063      	strh	r3, [r4, #2]
 8019d84:	6803      	ldr	r3, [r0, #0]
 8019d86:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8019d8a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8019d8e:	80a1      	strh	r1, [r4, #4]
 8019d90:	80e2      	strh	r2, [r4, #6]
 8019d92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019d94:	4621      	mov	r1, r4
 8019d96:	4798      	blx	r3
 8019d98:	4620      	mov	r0, r4
 8019d9a:	bd10      	pop	{r4, pc}

08019d9c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8019d9c:	b530      	push	{r4, r5, lr}
 8019d9e:	8083      	strh	r3, [r0, #4]
 8019da0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8019da4:	80c3      	strh	r3, [r0, #6]
 8019da6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8019daa:	7203      	strb	r3, [r0, #8]
 8019dac:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8019db0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8019db4:	7243      	strb	r3, [r0, #9]
 8019db6:	7a83      	ldrb	r3, [r0, #10]
 8019db8:	6141      	str	r1, [r0, #20]
 8019dba:	f365 0306 	bfi	r3, r5, #0, #7
 8019dbe:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8019dc2:	8302      	strh	r2, [r0, #24]
 8019dc4:	f365 13c7 	bfi	r3, r5, #7, #1
 8019dc8:	7283      	strb	r3, [r0, #10]
 8019dca:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8019dce:	72c3      	strb	r3, [r0, #11]
 8019dd0:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8019dd4:	7303      	strb	r3, [r0, #12]
 8019dd6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8019dda:	81c3      	strh	r3, [r0, #14]
 8019ddc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8019de0:	8203      	strh	r3, [r0, #16]
 8019de2:	4b01      	ldr	r3, [pc, #4]	; (8019de8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8019de4:	6003      	str	r3, [r0, #0]
 8019de6:	bd30      	pop	{r4, r5, pc}
 8019de8:	08031fe4 	.word	0x08031fe4

08019dec <_ZNK8touchgfx9ConstFont4findEt>:
 8019dec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019dee:	6944      	ldr	r4, [r0, #20]
 8019df0:	b3bc      	cbz	r4, 8019e62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019df2:	88a3      	ldrh	r3, [r4, #4]
 8019df4:	8b02      	ldrh	r2, [r0, #24]
 8019df6:	1acb      	subs	r3, r1, r3
 8019df8:	f102 32ff 	add.w	r2, r2, #4294967295
 8019dfc:	d431      	bmi.n	8019e62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019dfe:	4293      	cmp	r3, r2
 8019e00:	dd0c      	ble.n	8019e1c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8019e02:	230e      	movs	r3, #14
 8019e04:	fb03 4302 	mla	r3, r3, r2, r4
 8019e08:	889b      	ldrh	r3, [r3, #4]
 8019e0a:	1a5b      	subs	r3, r3, r1
 8019e0c:	1ad3      	subs	r3, r2, r3
 8019e0e:	429a      	cmp	r2, r3
 8019e10:	db27      	blt.n	8019e62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019e12:	2b00      	cmp	r3, #0
 8019e14:	bfbc      	itt	lt
 8019e16:	2302      	movlt	r3, #2
 8019e18:	fb92 f3f3 	sdivlt	r3, r2, r3
 8019e1c:	2500      	movs	r5, #0
 8019e1e:	260e      	movs	r6, #14
 8019e20:	4295      	cmp	r5, r2
 8019e22:	dc1e      	bgt.n	8019e62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019e24:	fb06 4003 	mla	r0, r6, r3, r4
 8019e28:	8887      	ldrh	r7, [r0, #4]
 8019e2a:	42b9      	cmp	r1, r7
 8019e2c:	d01a      	beq.n	8019e64 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8019e2e:	d20d      	bcs.n	8019e4c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8019e30:	1e5a      	subs	r2, r3, #1
 8019e32:	4295      	cmp	r5, r2
 8019e34:	dc15      	bgt.n	8019e62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019e36:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8019e3a:	1a5b      	subs	r3, r3, r1
 8019e3c:	1ad3      	subs	r3, r2, r3
 8019e3e:	429a      	cmp	r2, r3
 8019e40:	db0f      	blt.n	8019e62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019e42:	429d      	cmp	r5, r3
 8019e44:	ddec      	ble.n	8019e20 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8019e46:	1953      	adds	r3, r2, r5
 8019e48:	105b      	asrs	r3, r3, #1
 8019e4a:	e7e9      	b.n	8019e20 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8019e4c:	1c5d      	adds	r5, r3, #1
 8019e4e:	42aa      	cmp	r2, r5
 8019e50:	db07      	blt.n	8019e62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019e52:	8a43      	ldrh	r3, [r0, #18]
 8019e54:	1acb      	subs	r3, r1, r3
 8019e56:	442b      	add	r3, r5
 8019e58:	429d      	cmp	r5, r3
 8019e5a:	dc02      	bgt.n	8019e62 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019e5c:	429a      	cmp	r2, r3
 8019e5e:	dadf      	bge.n	8019e20 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8019e60:	e7f1      	b.n	8019e46 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8019e62:	2000      	movs	r0, #0
 8019e64:	bdf0      	pop	{r4, r5, r6, r7, pc}

08019e66 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8019e66:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019e68:	4604      	mov	r4, r0
 8019e6a:	4617      	mov	r7, r2
 8019e6c:	461e      	mov	r6, r3
 8019e6e:	b911      	cbnz	r1, 8019e76 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8019e70:	2500      	movs	r5, #0
 8019e72:	4628      	mov	r0, r5
 8019e74:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019e76:	290a      	cmp	r1, #10
 8019e78:	d0fa      	beq.n	8019e70 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019e7a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8019e7e:	4291      	cmp	r1, r2
 8019e80:	d0f6      	beq.n	8019e70 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019e82:	f242 020b 	movw	r2, #8203	; 0x200b
 8019e86:	4291      	cmp	r1, r2
 8019e88:	d0f2      	beq.n	8019e70 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019e8a:	f7ff ffaf 	bl	8019dec <_ZNK8touchgfx9ConstFont4findEt>
 8019e8e:	4605      	mov	r5, r0
 8019e90:	b950      	cbnz	r0, 8019ea8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8019e92:	6823      	ldr	r3, [r4, #0]
 8019e94:	4620      	mov	r0, r4
 8019e96:	691b      	ldr	r3, [r3, #16]
 8019e98:	4798      	blx	r3
 8019e9a:	4601      	mov	r1, r0
 8019e9c:	4620      	mov	r0, r4
 8019e9e:	f7ff ffa5 	bl	8019dec <_ZNK8touchgfx9ConstFont4findEt>
 8019ea2:	4605      	mov	r5, r0
 8019ea4:	2800      	cmp	r0, #0
 8019ea6:	d0e3      	beq.n	8019e70 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019ea8:	6823      	ldr	r3, [r4, #0]
 8019eaa:	4629      	mov	r1, r5
 8019eac:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8019eae:	4620      	mov	r0, r4
 8019eb0:	4798      	blx	r3
 8019eb2:	6038      	str	r0, [r7, #0]
 8019eb4:	6823      	ldr	r3, [r4, #0]
 8019eb6:	4620      	mov	r0, r4
 8019eb8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8019eba:	4798      	blx	r3
 8019ebc:	7030      	strb	r0, [r6, #0]
 8019ebe:	e7d8      	b.n	8019e72 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08019ec0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8019ec0:	b538      	push	{r3, r4, r5, lr}
 8019ec2:	4605      	mov	r5, r0
 8019ec4:	f002 fb94 	bl	801c5f0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8019ec8:	4604      	mov	r4, r0
 8019eca:	4628      	mov	r0, r5
 8019ecc:	f002 fad4 	bl	801c478 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8019ed0:	2800      	cmp	r0, #0
 8019ed2:	bf14      	ite	ne
 8019ed4:	2002      	movne	r0, #2
 8019ed6:	2000      	moveq	r0, #0
 8019ed8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8019edc:	b280      	uxth	r0, r0
 8019ede:	bd38      	pop	{r3, r4, r5, pc}

08019ee0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8019ee0:	b538      	push	{r3, r4, r5, lr}
 8019ee2:	4605      	mov	r5, r0
 8019ee4:	f002 fb84 	bl	801c5f0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8019ee8:	4604      	mov	r4, r0
 8019eea:	4628      	mov	r0, r5
 8019eec:	f002 fac4 	bl	801c478 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8019ef0:	2800      	cmp	r0, #0
 8019ef2:	bf14      	ite	ne
 8019ef4:	2002      	movne	r0, #2
 8019ef6:	2000      	moveq	r0, #0
 8019ef8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8019efc:	f040 0001 	orr.w	r0, r0, #1
 8019f00:	b280      	uxth	r0, r0
 8019f02:	bd38      	pop	{r3, r4, r5, pc}

08019f04 <_ZN8touchgfx4clzuEm>:
 8019f04:	4603      	mov	r3, r0
 8019f06:	b1c8      	cbz	r0, 8019f3c <_ZN8touchgfx4clzuEm+0x38>
 8019f08:	0c02      	lsrs	r2, r0, #16
 8019f0a:	0412      	lsls	r2, r2, #16
 8019f0c:	b9a2      	cbnz	r2, 8019f38 <_ZN8touchgfx4clzuEm+0x34>
 8019f0e:	0403      	lsls	r3, r0, #16
 8019f10:	2010      	movs	r0, #16
 8019f12:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8019f16:	bf04      	itt	eq
 8019f18:	021b      	lsleq	r3, r3, #8
 8019f1a:	3008      	addeq	r0, #8
 8019f1c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8019f20:	bf04      	itt	eq
 8019f22:	011b      	lsleq	r3, r3, #4
 8019f24:	3004      	addeq	r0, #4
 8019f26:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8019f2a:	bf04      	itt	eq
 8019f2c:	009b      	lsleq	r3, r3, #2
 8019f2e:	3002      	addeq	r0, #2
 8019f30:	2b00      	cmp	r3, #0
 8019f32:	db04      	blt.n	8019f3e <_ZN8touchgfx4clzuEm+0x3a>
 8019f34:	3001      	adds	r0, #1
 8019f36:	4770      	bx	lr
 8019f38:	2000      	movs	r0, #0
 8019f3a:	e7ea      	b.n	8019f12 <_ZN8touchgfx4clzuEm+0xe>
 8019f3c:	2020      	movs	r0, #32
 8019f3e:	4770      	bx	lr

08019f40 <_ZN8touchgfx7muldivuEmmmRm>:
 8019f40:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8019f44:	460f      	mov	r7, r1
 8019f46:	4615      	mov	r5, r2
 8019f48:	461e      	mov	r6, r3
 8019f4a:	4601      	mov	r1, r0
 8019f4c:	b100      	cbz	r0, 8019f50 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8019f4e:	b927      	cbnz	r7, 8019f5a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8019f50:	2000      	movs	r0, #0
 8019f52:	6030      	str	r0, [r6, #0]
 8019f54:	b002      	add	sp, #8
 8019f56:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019f5a:	f7ff ffd3 	bl	8019f04 <_ZN8touchgfx4clzuEm>
 8019f5e:	b980      	cbnz	r0, 8019f82 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8019f60:	4638      	mov	r0, r7
 8019f62:	f7ff ffcf 	bl	8019f04 <_ZN8touchgfx4clzuEm>
 8019f66:	2800      	cmp	r0, #0
 8019f68:	dd05      	ble.n	8019f76 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8019f6a:	4633      	mov	r3, r6
 8019f6c:	462a      	mov	r2, r5
 8019f6e:	4638      	mov	r0, r7
 8019f70:	f7ff ffe6 	bl	8019f40 <_ZN8touchgfx7muldivuEmmmRm>
 8019f74:	e7ee      	b.n	8019f54 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8019f76:	f04f 33ff 	mov.w	r3, #4294967295
 8019f7a:	6033      	str	r3, [r6, #0]
 8019f7c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8019f80:	e7e8      	b.n	8019f54 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8019f82:	fa37 f800 	lsrs.w	r8, r7, r0
 8019f86:	fb07 f301 	mul.w	r3, r7, r1
 8019f8a:	d105      	bne.n	8019f98 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8019f8c:	fbb3 f0f5 	udiv	r0, r3, r5
 8019f90:	fb05 3510 	mls	r5, r5, r0, r3
 8019f94:	6035      	str	r5, [r6, #0]
 8019f96:	e7dd      	b.n	8019f54 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8019f98:	2301      	movs	r3, #1
 8019f9a:	fa01 fa00 	lsl.w	sl, r1, r0
 8019f9e:	fa03 f000 	lsl.w	r0, r3, r0
 8019fa2:	3801      	subs	r0, #1
 8019fa4:	462a      	mov	r2, r5
 8019fa6:	4633      	mov	r3, r6
 8019fa8:	4038      	ands	r0, r7
 8019faa:	f7ff ffc9 	bl	8019f40 <_ZN8touchgfx7muldivuEmmmRm>
 8019fae:	fbba f9f5 	udiv	r9, sl, r5
 8019fb2:	462a      	mov	r2, r5
 8019fb4:	4607      	mov	r7, r0
 8019fb6:	ab01      	add	r3, sp, #4
 8019fb8:	fb05 a119 	mls	r1, r5, r9, sl
 8019fbc:	4640      	mov	r0, r8
 8019fbe:	f7ff ffbf 	bl	8019f40 <_ZN8touchgfx7muldivuEmmmRm>
 8019fc2:	9b01      	ldr	r3, [sp, #4]
 8019fc4:	6832      	ldr	r2, [r6, #0]
 8019fc6:	fb08 f409 	mul.w	r4, r8, r9
 8019fca:	441a      	add	r2, r3
 8019fcc:	fbb2 f3f5 	udiv	r3, r2, r5
 8019fd0:	441c      	add	r4, r3
 8019fd2:	443c      	add	r4, r7
 8019fd4:	4420      	add	r0, r4
 8019fd6:	fb05 2513 	mls	r5, r5, r3, r2
 8019fda:	e7db      	b.n	8019f94 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08019fdc <_ZN8touchgfx6muldivElllRl>:
 8019fdc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8019fde:	2800      	cmp	r0, #0
 8019fe0:	bfba      	itte	lt
 8019fe2:	4240      	neglt	r0, r0
 8019fe4:	f04f 34ff 	movlt.w	r4, #4294967295
 8019fe8:	2401      	movge	r4, #1
 8019fea:	2900      	cmp	r1, #0
 8019fec:	bfbc      	itt	lt
 8019fee:	4249      	neglt	r1, r1
 8019ff0:	4264      	neglt	r4, r4
 8019ff2:	2a00      	cmp	r2, #0
 8019ff4:	bfb6      	itet	lt
 8019ff6:	4265      	neglt	r5, r4
 8019ff8:	4625      	movge	r5, r4
 8019ffa:	4252      	neglt	r2, r2
 8019ffc:	4288      	cmp	r0, r1
 8019ffe:	461e      	mov	r6, r3
 801a000:	bfc2      	ittt	gt
 801a002:	4603      	movgt	r3, r0
 801a004:	4608      	movgt	r0, r1
 801a006:	4619      	movgt	r1, r3
 801a008:	ab01      	add	r3, sp, #4
 801a00a:	f7ff ff99 	bl	8019f40 <_ZN8touchgfx7muldivuEmmmRm>
 801a00e:	9b01      	ldr	r3, [sp, #4]
 801a010:	4368      	muls	r0, r5
 801a012:	435c      	muls	r4, r3
 801a014:	6034      	str	r4, [r6, #0]
 801a016:	b002      	add	sp, #8
 801a018:	bd70      	pop	{r4, r5, r6, pc}

0801a01a <_ZN8touchgfx6muldivElll>:
 801a01a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801a01c:	4606      	mov	r6, r0
 801a01e:	ab01      	add	r3, sp, #4
 801a020:	460d      	mov	r5, r1
 801a022:	4614      	mov	r4, r2
 801a024:	f7ff ffda 	bl	8019fdc <_ZN8touchgfx6muldivElllRl>
 801a028:	2e00      	cmp	r6, #0
 801a02a:	db20      	blt.n	801a06e <_ZN8touchgfx6muldivElll+0x54>
 801a02c:	bf14      	ite	ne
 801a02e:	2301      	movne	r3, #1
 801a030:	2300      	moveq	r3, #0
 801a032:	2d00      	cmp	r5, #0
 801a034:	db1e      	blt.n	801a074 <_ZN8touchgfx6muldivElll+0x5a>
 801a036:	bf14      	ite	ne
 801a038:	2201      	movne	r2, #1
 801a03a:	2200      	moveq	r2, #0
 801a03c:	2c00      	cmp	r4, #0
 801a03e:	fb03 f202 	mul.w	r2, r3, r2
 801a042:	db1a      	blt.n	801a07a <_ZN8touchgfx6muldivElll+0x60>
 801a044:	bf14      	ite	ne
 801a046:	2301      	movne	r3, #1
 801a048:	2300      	moveq	r3, #0
 801a04a:	4353      	muls	r3, r2
 801a04c:	2b01      	cmp	r3, #1
 801a04e:	d117      	bne.n	801a080 <_ZN8touchgfx6muldivElll+0x66>
 801a050:	9b01      	ldr	r3, [sp, #4]
 801a052:	2c00      	cmp	r4, #0
 801a054:	bfb8      	it	lt
 801a056:	4264      	neglt	r4, r4
 801a058:	2b00      	cmp	r3, #0
 801a05a:	f104 0401 	add.w	r4, r4, #1
 801a05e:	bfb8      	it	lt
 801a060:	425b      	neglt	r3, r3
 801a062:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801a066:	db00      	blt.n	801a06a <_ZN8touchgfx6muldivElll+0x50>
 801a068:	3001      	adds	r0, #1
 801a06a:	b002      	add	sp, #8
 801a06c:	bd70      	pop	{r4, r5, r6, pc}
 801a06e:	f04f 33ff 	mov.w	r3, #4294967295
 801a072:	e7de      	b.n	801a032 <_ZN8touchgfx6muldivElll+0x18>
 801a074:	f04f 32ff 	mov.w	r2, #4294967295
 801a078:	e7e0      	b.n	801a03c <_ZN8touchgfx6muldivElll+0x22>
 801a07a:	f04f 33ff 	mov.w	r3, #4294967295
 801a07e:	e7e4      	b.n	801a04a <_ZN8touchgfx6muldivElll+0x30>
 801a080:	3301      	adds	r3, #1
 801a082:	d1f2      	bne.n	801a06a <_ZN8touchgfx6muldivElll+0x50>
 801a084:	9b01      	ldr	r3, [sp, #4]
 801a086:	2c00      	cmp	r4, #0
 801a088:	bfb8      	it	lt
 801a08a:	4264      	neglt	r4, r4
 801a08c:	2b00      	cmp	r3, #0
 801a08e:	bfb8      	it	lt
 801a090:	425b      	neglt	r3, r3
 801a092:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801a096:	bfc8      	it	gt
 801a098:	f100 30ff 	addgt.w	r0, r0, #4294967295
 801a09c:	e7e5      	b.n	801a06a <_ZN8touchgfx6muldivElll+0x50>

0801a09e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801a09e:	2000      	movs	r0, #0
 801a0a0:	4770      	bx	lr

0801a0a2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 801a0a2:	2001      	movs	r0, #1
 801a0a4:	4770      	bx	lr

0801a0a6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 801a0a6:	2002      	movs	r0, #2
 801a0a8:	4770      	bx	lr

0801a0aa <_ZN8touchgfx6ScreenD1Ev>:
 801a0aa:	4770      	bx	lr

0801a0ac <_ZN8touchgfx12GestureEventD1Ev>:
 801a0ac:	4770      	bx	lr

0801a0ae <_ZN8touchgfx9DragEventD1Ev>:
 801a0ae:	4770      	bx	lr

0801a0b0 <_ZN8touchgfx10ClickEventD1Ev>:
 801a0b0:	4770      	bx	lr

0801a0b2 <_ZN8touchgfx10ClickEventD0Ev>:
 801a0b2:	b510      	push	{r4, lr}
 801a0b4:	210c      	movs	r1, #12
 801a0b6:	4604      	mov	r4, r0
 801a0b8:	f012 fe37 	bl	802cd2a <_ZdlPvj>
 801a0bc:	4620      	mov	r0, r4
 801a0be:	bd10      	pop	{r4, pc}

0801a0c0 <_ZN8touchgfx9DragEventD0Ev>:
 801a0c0:	b510      	push	{r4, lr}
 801a0c2:	2110      	movs	r1, #16
 801a0c4:	4604      	mov	r4, r0
 801a0c6:	f012 fe30 	bl	802cd2a <_ZdlPvj>
 801a0ca:	4620      	mov	r0, r4
 801a0cc:	bd10      	pop	{r4, pc}

0801a0ce <_ZN8touchgfx12GestureEventD0Ev>:
 801a0ce:	b510      	push	{r4, lr}
 801a0d0:	210c      	movs	r1, #12
 801a0d2:	4604      	mov	r4, r0
 801a0d4:	f012 fe29 	bl	802cd2a <_ZdlPvj>
 801a0d8:	4620      	mov	r0, r4
 801a0da:	bd10      	pop	{r4, pc}

0801a0dc <_ZN8touchgfx6ScreenD0Ev>:
 801a0dc:	b510      	push	{r4, lr}
 801a0de:	213c      	movs	r1, #60	; 0x3c
 801a0e0:	4604      	mov	r4, r0
 801a0e2:	f012 fe22 	bl	802cd2a <_ZdlPvj>
 801a0e6:	4620      	mov	r0, r4
 801a0e8:	bd10      	pop	{r4, pc}
	...

0801a0ec <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801a0ec:	b530      	push	{r4, r5, lr}
 801a0ee:	460d      	mov	r5, r1
 801a0f0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801a0f2:	b087      	sub	sp, #28
 801a0f4:	4604      	mov	r4, r0
 801a0f6:	b301      	cbz	r1, 801a13a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801a0f8:	a801      	add	r0, sp, #4
 801a0fa:	f7ff fe3d 	bl	8019d78 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a0fe:	892a      	ldrh	r2, [r5, #8]
 801a100:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801a104:	7928      	ldrb	r0, [r5, #4]
 801a106:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801a10a:	f88d 0010 	strb.w	r0, [sp, #16]
 801a10e:	1ad2      	subs	r2, r2, r3
 801a110:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801a112:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801a114:	f8ad 1012 	strh.w	r1, [sp, #18]
 801a118:	441a      	add	r2, r3
 801a11a:	896b      	ldrh	r3, [r5, #10]
 801a11c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801a120:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a124:	1b5b      	subs	r3, r3, r5
 801a126:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 801a128:	442b      	add	r3, r5
 801a12a:	4d05      	ldr	r5, [pc, #20]	; (801a140 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801a12c:	9503      	str	r5, [sp, #12]
 801a12e:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a132:	6803      	ldr	r3, [r0, #0]
 801a134:	a903      	add	r1, sp, #12
 801a136:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a138:	4798      	blx	r3
 801a13a:	b007      	add	sp, #28
 801a13c:	bd30      	pop	{r4, r5, pc}
 801a13e:	bf00      	nop
 801a140:	0803206c 	.word	0x0803206c

0801a144 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 801a144:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a148:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801a14a:	b08a      	sub	sp, #40	; 0x28
 801a14c:	4604      	mov	r4, r0
 801a14e:	460d      	mov	r5, r1
 801a150:	b113      	cbz	r3, 801a158 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801a152:	790b      	ldrb	r3, [r1, #4]
 801a154:	2b00      	cmp	r3, #0
 801a156:	d044      	beq.n	801a1e2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a158:	f104 0804 	add.w	r8, r4, #4
 801a15c:	4641      	mov	r1, r8
 801a15e:	a803      	add	r0, sp, #12
 801a160:	f7ff fe0a 	bl	8019d78 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a164:	792b      	ldrb	r3, [r5, #4]
 801a166:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801a16a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801a16e:	b983      	cbnz	r3, 801a192 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 801a170:	892a      	ldrh	r2, [r5, #8]
 801a172:	88e9      	ldrh	r1, [r5, #6]
 801a174:	f104 0336 	add.w	r3, r4, #54	; 0x36
 801a178:	1b92      	subs	r2, r2, r6
 801a17a:	1bc9      	subs	r1, r1, r7
 801a17c:	9301      	str	r3, [sp, #4]
 801a17e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 801a182:	9300      	str	r3, [sp, #0]
 801a184:	b212      	sxth	r2, r2
 801a186:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801a18a:	b209      	sxth	r1, r1
 801a18c:	4640      	mov	r0, r8
 801a18e:	f7f8 fc39 	bl	8012a04 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801a192:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801a194:	b329      	cbz	r1, 801a1e2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a196:	a805      	add	r0, sp, #20
 801a198:	f7ff fdee 	bl	8019d78 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a19c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801a1a0:	792b      	ldrb	r3, [r5, #4]
 801a1a2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801a1a4:	f88d 3020 	strb.w	r3, [sp, #32]
 801a1a8:	1abf      	subs	r7, r7, r2
 801a1aa:	88ea      	ldrh	r2, [r5, #6]
 801a1ac:	4417      	add	r7, r2
 801a1ae:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 801a1b0:	4417      	add	r7, r2
 801a1b2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801a1b6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801a1ba:	1ab6      	subs	r6, r6, r2
 801a1bc:	892a      	ldrh	r2, [r5, #8]
 801a1be:	4416      	add	r6, r2
 801a1c0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801a1c2:	4416      	add	r6, r2
 801a1c4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 801a1c8:	4a07      	ldr	r2, [pc, #28]	; (801a1e8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801a1ca:	9207      	str	r2, [sp, #28]
 801a1cc:	2600      	movs	r6, #0
 801a1ce:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 801a1d2:	6803      	ldr	r3, [r0, #0]
 801a1d4:	a907      	add	r1, sp, #28
 801a1d6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a1d8:	4798      	blx	r3
 801a1da:	792b      	ldrb	r3, [r5, #4]
 801a1dc:	b10b      	cbz	r3, 801a1e2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a1de:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 801a1e2:	b00a      	add	sp, #40	; 0x28
 801a1e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a1e8:	08032044 	.word	0x08032044

0801a1ec <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801a1ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a1f0:	460c      	mov	r4, r1
 801a1f2:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801a1f4:	b088      	sub	sp, #32
 801a1f6:	4605      	mov	r5, r0
 801a1f8:	2900      	cmp	r1, #0
 801a1fa:	d06d      	beq.n	801a2d8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801a1fc:	4668      	mov	r0, sp
 801a1fe:	f7ff fdbb 	bl	8019d78 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a202:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 801a204:	88e3      	ldrh	r3, [r4, #6]
 801a206:	f9bd 8000 	ldrsh.w	r8, [sp]
 801a20a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801a20e:	440b      	add	r3, r1
 801a210:	b21b      	sxth	r3, r3
 801a212:	4543      	cmp	r3, r8
 801a214:	db31      	blt.n	801a27a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a216:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801a21a:	44c4      	add	ip, r8
 801a21c:	fa0f fc8c 	sxth.w	ip, ip
 801a220:	4563      	cmp	r3, ip
 801a222:	da2a      	bge.n	801a27a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a224:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801a226:	8926      	ldrh	r6, [r4, #8]
 801a228:	4416      	add	r6, r2
 801a22a:	b236      	sxth	r6, r6
 801a22c:	42be      	cmp	r6, r7
 801a22e:	db24      	blt.n	801a27a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a230:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801a234:	4438      	add	r0, r7
 801a236:	b200      	sxth	r0, r0
 801a238:	4286      	cmp	r6, r0
 801a23a:	da1e      	bge.n	801a27a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a23c:	8963      	ldrh	r3, [r4, #10]
 801a23e:	4419      	add	r1, r3
 801a240:	b209      	sxth	r1, r1
 801a242:	4541      	cmp	r1, r8
 801a244:	db08      	blt.n	801a258 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a246:	4561      	cmp	r1, ip
 801a248:	da06      	bge.n	801a258 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a24a:	89a3      	ldrh	r3, [r4, #12]
 801a24c:	441a      	add	r2, r3
 801a24e:	b212      	sxth	r2, r2
 801a250:	42ba      	cmp	r2, r7
 801a252:	db01      	blt.n	801a258 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a254:	4282      	cmp	r2, r0
 801a256:	db10      	blt.n	801a27a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a258:	4b21      	ldr	r3, [pc, #132]	; (801a2e0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801a25a:	9304      	str	r3, [sp, #16]
 801a25c:	2302      	movs	r3, #2
 801a25e:	f88d 3014 	strb.w	r3, [sp, #20]
 801a262:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801a264:	2300      	movs	r3, #0
 801a266:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a26a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801a26e:	f8ad 301a 	strh.w	r3, [sp, #26]
 801a272:	6803      	ldr	r3, [r0, #0]
 801a274:	a904      	add	r1, sp, #16
 801a276:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a278:	4798      	blx	r3
 801a27a:	1d29      	adds	r1, r5, #4
 801a27c:	a802      	add	r0, sp, #8
 801a27e:	f7ff fd7b 	bl	8019d78 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a282:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a286:	88e0      	ldrh	r0, [r4, #6]
 801a288:	7921      	ldrb	r1, [r4, #4]
 801a28a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801a28e:	8922      	ldrh	r2, [r4, #8]
 801a290:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 801a292:	f88d 1014 	strb.w	r1, [sp, #20]
 801a296:	eba3 0808 	sub.w	r8, r3, r8
 801a29a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a29e:	1bdf      	subs	r7, r3, r7
 801a2a0:	b2bb      	uxth	r3, r7
 801a2a2:	fa1f f888 	uxth.w	r8, r8
 801a2a6:	8967      	ldrh	r7, [r4, #10]
 801a2a8:	89a4      	ldrh	r4, [r4, #12]
 801a2aa:	4440      	add	r0, r8
 801a2ac:	4460      	add	r0, ip
 801a2ae:	441a      	add	r2, r3
 801a2b0:	44b8      	add	r8, r7
 801a2b2:	4423      	add	r3, r4
 801a2b4:	f8ad 0016 	strh.w	r0, [sp, #22]
 801a2b8:	4433      	add	r3, r6
 801a2ba:	4432      	add	r2, r6
 801a2bc:	44e0      	add	r8, ip
 801a2be:	4c09      	ldr	r4, [pc, #36]	; (801a2e4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 801a2c0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801a2c2:	9404      	str	r4, [sp, #16]
 801a2c4:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a2c8:	f8ad 801a 	strh.w	r8, [sp, #26]
 801a2cc:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a2d0:	6803      	ldr	r3, [r0, #0]
 801a2d2:	a904      	add	r1, sp, #16
 801a2d4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801a2d6:	4798      	blx	r3
 801a2d8:	b008      	add	sp, #32
 801a2da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a2de:	bf00      	nop
 801a2e0:	08032044 	.word	0x08032044
 801a2e4:	08032058 	.word	0x08032058

0801a2e8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801a2e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801a2ea:	4604      	mov	r4, r0
 801a2ec:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 801a2f0:	3201      	adds	r2, #1
 801a2f2:	d112      	bne.n	801a31a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801a2f4:	6803      	ldr	r3, [r0, #0]
 801a2f6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801a2fa:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a2fe:	f8ad 1004 	strh.w	r1, [sp, #4]
 801a302:	2500      	movs	r5, #0
 801a304:	9500      	str	r5, [sp, #0]
 801a306:	466d      	mov	r5, sp
 801a308:	4629      	mov	r1, r5
 801a30a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801a30e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a310:	4798      	blx	r3
 801a312:	e895 0003 	ldmia.w	r5, {r0, r1}
 801a316:	e884 0003 	stmia.w	r4, {r0, r1}
 801a31a:	4620      	mov	r0, r4
 801a31c:	b003      	add	sp, #12
 801a31e:	bd30      	pop	{r4, r5, pc}

0801a320 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 801a320:	b513      	push	{r0, r1, r4, lr}
 801a322:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801a326:	3301      	adds	r3, #1
 801a328:	4604      	mov	r4, r0
 801a32a:	d109      	bne.n	801a340 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801a32c:	4601      	mov	r1, r0
 801a32e:	4668      	mov	r0, sp
 801a330:	f7ff fd22 	bl	8019d78 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a334:	f8bd 3000 	ldrh.w	r3, [sp]
 801a338:	8423      	strh	r3, [r4, #32]
 801a33a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a33e:	8463      	strh	r3, [r4, #34]	; 0x22
 801a340:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801a344:	b002      	add	sp, #8
 801a346:	bd10      	pop	{r4, pc}

0801a348 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801a348:	b513      	push	{r0, r1, r4, lr}
 801a34a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801a34e:	3301      	adds	r3, #1
 801a350:	4604      	mov	r4, r0
 801a352:	d109      	bne.n	801a368 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801a354:	4601      	mov	r1, r0
 801a356:	4668      	mov	r0, sp
 801a358:	f7ff fd0e 	bl	8019d78 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a35c:	f8bd 3000 	ldrh.w	r3, [sp]
 801a360:	8423      	strh	r3, [r4, #32]
 801a362:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a366:	8463      	strh	r3, [r4, #34]	; 0x22
 801a368:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801a36c:	b002      	add	sp, #8
 801a36e:	bd10      	pop	{r4, pc}

0801a370 <_ZN8touchgfx6ScreenC1Ev>:
 801a370:	b570      	push	{r4, r5, r6, lr}
 801a372:	4605      	mov	r5, r0
 801a374:	4b16      	ldr	r3, [pc, #88]	; (801a3d0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801a376:	f845 3b04 	str.w	r3, [r5], #4
 801a37a:	2300      	movs	r3, #0
 801a37c:	8103      	strh	r3, [r0, #8]
 801a37e:	8143      	strh	r3, [r0, #10]
 801a380:	8183      	strh	r3, [r0, #12]
 801a382:	81c3      	strh	r3, [r0, #14]
 801a384:	8203      	strh	r3, [r0, #16]
 801a386:	8243      	strh	r3, [r0, #18]
 801a388:	8283      	strh	r3, [r0, #20]
 801a38a:	82c3      	strh	r3, [r0, #22]
 801a38c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801a390:	6203      	str	r3, [r0, #32]
 801a392:	8483      	strh	r3, [r0, #36]	; 0x24
 801a394:	84c3      	strh	r3, [r0, #38]	; 0x26
 801a396:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801a39a:	4a0e      	ldr	r2, [pc, #56]	; (801a3d4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801a39c:	6343      	str	r3, [r0, #52]	; 0x34
 801a39e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 801a3a2:	4b0d      	ldr	r3, [pc, #52]	; (801a3d8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801a3a4:	6042      	str	r2, [r0, #4]
 801a3a6:	f9b3 6000 	ldrsh.w	r6, [r3]
 801a3aa:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801a3ac:	4a0b      	ldr	r2, [pc, #44]	; (801a3dc <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801a3ae:	4604      	mov	r4, r0
 801a3b0:	2101      	movs	r1, #1
 801a3b2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801a3b6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801a3ba:	f9b2 1000 	ldrsh.w	r1, [r2]
 801a3be:	4628      	mov	r0, r5
 801a3c0:	4798      	blx	r3
 801a3c2:	6863      	ldr	r3, [r4, #4]
 801a3c4:	4628      	mov	r0, r5
 801a3c6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801a3c8:	4631      	mov	r1, r6
 801a3ca:	4798      	blx	r3
 801a3cc:	4620      	mov	r0, r4
 801a3ce:	bd70      	pop	{r4, r5, r6, pc}
 801a3d0:	08032080 	.word	0x08032080
 801a3d4:	08031704 	.word	0x08031704
 801a3d8:	20013842 	.word	0x20013842
 801a3dc:	20013840 	.word	0x20013840

0801a3e0 <_ZN8touchgfx6Screen4drawEv>:
 801a3e0:	b507      	push	{r0, r1, r2, lr}
 801a3e2:	4b09      	ldr	r3, [pc, #36]	; (801a408 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801a3e4:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a3e8:	4b08      	ldr	r3, [pc, #32]	; (801a40c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801a3ea:	f8ad 2004 	strh.w	r2, [sp, #4]
 801a3ee:	f9b3 3000 	ldrsh.w	r3, [r3]
 801a3f2:	f8ad 3006 	strh.w	r3, [sp, #6]
 801a3f6:	6803      	ldr	r3, [r0, #0]
 801a3f8:	2100      	movs	r1, #0
 801a3fa:	9100      	str	r1, [sp, #0]
 801a3fc:	689b      	ldr	r3, [r3, #8]
 801a3fe:	4669      	mov	r1, sp
 801a400:	4798      	blx	r3
 801a402:	b003      	add	sp, #12
 801a404:	f85d fb04 	ldr.w	pc, [sp], #4
 801a408:	20013840 	.word	0x20013840
 801a40c:	20013842 	.word	0x20013842

0801a410 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 801a410:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a414:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801a418:	2b00      	cmp	r3, #0
 801a41a:	b089      	sub	sp, #36	; 0x24
 801a41c:	4680      	mov	r8, r0
 801a41e:	460c      	mov	r4, r1
 801a420:	4615      	mov	r5, r2
 801a422:	dd0e      	ble.n	801a442 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a424:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801a428:	2b00      	cmp	r3, #0
 801a42a:	dd0a      	ble.n	801a442 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a42c:	4628      	mov	r0, r5
 801a42e:	f7ff ff5b 	bl	801a2e8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801a432:	4621      	mov	r1, r4
 801a434:	f7fe fa3d 	bl	80188b2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801a438:	69eb      	ldr	r3, [r5, #28]
 801a43a:	b928      	cbnz	r0, 801a448 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801a43c:	461d      	mov	r5, r3
 801a43e:	2b00      	cmp	r3, #0
 801a440:	d1f4      	bne.n	801a42c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801a442:	b009      	add	sp, #36	; 0x24
 801a444:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a448:	ae04      	add	r6, sp, #16
 801a44a:	2b00      	cmp	r3, #0
 801a44c:	f000 80b5 	beq.w	801a5ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801a450:	682b      	ldr	r3, [r5, #0]
 801a452:	4629      	mov	r1, r5
 801a454:	68db      	ldr	r3, [r3, #12]
 801a456:	a802      	add	r0, sp, #8
 801a458:	4798      	blx	r3
 801a45a:	4628      	mov	r0, r5
 801a45c:	f7ff ff60 	bl	801a320 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801a460:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801a464:	4407      	add	r7, r0
 801a466:	4628      	mov	r0, r5
 801a468:	f7ff ff6e 	bl	801a348 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801a46c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a470:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801a474:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a478:	4418      	add	r0, r3
 801a47a:	4621      	mov	r1, r4
 801a47c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801a480:	f8ad 0012 	strh.w	r0, [sp, #18]
 801a484:	b23f      	sxth	r7, r7
 801a486:	4630      	mov	r0, r6
 801a488:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a48c:	f8ad 7010 	strh.w	r7, [sp, #16]
 801a490:	f7f8 fb9c 	bl	8012bcc <_ZN8touchgfx4RectaNERKS0_>
 801a494:	4628      	mov	r0, r5
 801a496:	f7ff ff27 	bl	801a2e8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801a49a:	4602      	mov	r2, r0
 801a49c:	e896 0003 	ldmia.w	r6, {r0, r1}
 801a4a0:	ab06      	add	r3, sp, #24
 801a4a2:	e883 0003 	stmia.w	r3, {r0, r1}
 801a4a6:	4611      	mov	r1, r2
 801a4a8:	4618      	mov	r0, r3
 801a4aa:	f7f8 fb8f 	bl	8012bcc <_ZN8touchgfx4RectaNERKS0_>
 801a4ae:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801a4b2:	f9b4 1000 	ldrsh.w	r1, [r4]
 801a4b6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801a4ba:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801a4be:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801a4c2:	4299      	cmp	r1, r3
 801a4c4:	d10b      	bne.n	801a4de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801a4c6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801a4ca:	4552      	cmp	r2, sl
 801a4cc:	d107      	bne.n	801a4de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801a4ce:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801a4d2:	455a      	cmp	r2, fp
 801a4d4:	d103      	bne.n	801a4de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801a4d6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801a4da:	454a      	cmp	r2, r9
 801a4dc:	d06d      	beq.n	801a5ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801a4de:	f1bb 0f00 	cmp.w	fp, #0
 801a4e2:	dd65      	ble.n	801a5b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801a4e4:	f1b9 0f00 	cmp.w	r9, #0
 801a4e8:	dd62      	ble.n	801a5b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801a4ea:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801a4ee:	fa1f f08a 	uxth.w	r0, sl
 801a4f2:	4552      	cmp	r2, sl
 801a4f4:	9000      	str	r0, [sp, #0]
 801a4f6:	da12      	bge.n	801a51e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801a4f8:	9301      	str	r3, [sp, #4]
 801a4fa:	9b00      	ldr	r3, [sp, #0]
 801a4fc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a500:	f8ad 2012 	strh.w	r2, [sp, #18]
 801a504:	1a9a      	subs	r2, r3, r2
 801a506:	f8ad 1010 	strh.w	r1, [sp, #16]
 801a50a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801a50e:	f8ad 2016 	strh.w	r2, [sp, #22]
 801a512:	69ea      	ldr	r2, [r5, #28]
 801a514:	4631      	mov	r1, r6
 801a516:	4640      	mov	r0, r8
 801a518:	f7ff ff7a 	bl	801a410 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a51c:	9b01      	ldr	r3, [sp, #4]
 801a51e:	f9b4 2000 	ldrsh.w	r2, [r4]
 801a522:	429a      	cmp	r2, r3
 801a524:	b29f      	uxth	r7, r3
 801a526:	da0d      	bge.n	801a544 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801a528:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a52c:	1aba      	subs	r2, r7, r2
 801a52e:	f8ad a012 	strh.w	sl, [sp, #18]
 801a532:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a536:	f8ad 9016 	strh.w	r9, [sp, #22]
 801a53a:	69ea      	ldr	r2, [r5, #28]
 801a53c:	4631      	mov	r1, r6
 801a53e:	4640      	mov	r0, r8
 801a540:	f7ff ff66 	bl	801a410 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a544:	8822      	ldrh	r2, [r4, #0]
 801a546:	88a3      	ldrh	r3, [r4, #4]
 801a548:	445f      	add	r7, fp
 801a54a:	4413      	add	r3, r2
 801a54c:	b29b      	uxth	r3, r3
 801a54e:	b2bf      	uxth	r7, r7
 801a550:	b23a      	sxth	r2, r7
 801a552:	b219      	sxth	r1, r3
 801a554:	4291      	cmp	r1, r2
 801a556:	dd0d      	ble.n	801a574 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801a558:	1bdb      	subs	r3, r3, r7
 801a55a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a55e:	f8ad a012 	strh.w	sl, [sp, #18]
 801a562:	f8ad 3014 	strh.w	r3, [sp, #20]
 801a566:	f8ad 9016 	strh.w	r9, [sp, #22]
 801a56a:	69ea      	ldr	r2, [r5, #28]
 801a56c:	4631      	mov	r1, r6
 801a56e:	4640      	mov	r0, r8
 801a570:	f7ff ff4e 	bl	801a410 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a574:	88e2      	ldrh	r2, [r4, #6]
 801a576:	8863      	ldrh	r3, [r4, #2]
 801a578:	4413      	add	r3, r2
 801a57a:	9a00      	ldr	r2, [sp, #0]
 801a57c:	444a      	add	r2, r9
 801a57e:	b29b      	uxth	r3, r3
 801a580:	fa1f f982 	uxth.w	r9, r2
 801a584:	fa0f f289 	sxth.w	r2, r9
 801a588:	b219      	sxth	r1, r3
 801a58a:	428a      	cmp	r2, r1
 801a58c:	da15      	bge.n	801a5ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801a58e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a592:	f9b4 0000 	ldrsh.w	r0, [r4]
 801a596:	f8ad 1014 	strh.w	r1, [sp, #20]
 801a59a:	eba3 0309 	sub.w	r3, r3, r9
 801a59e:	f8ad 0010 	strh.w	r0, [sp, #16]
 801a5a2:	f8ad 2012 	strh.w	r2, [sp, #18]
 801a5a6:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a5aa:	69ea      	ldr	r2, [r5, #28]
 801a5ac:	4631      	mov	r1, r6
 801a5ae:	e001      	b.n	801a5b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 801a5b0:	69ea      	ldr	r2, [r5, #28]
 801a5b2:	4621      	mov	r1, r4
 801a5b4:	4640      	mov	r0, r8
 801a5b6:	f7ff ff2b 	bl	801a410 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a5ba:	4628      	mov	r0, r5
 801a5bc:	f7ff fe94 	bl	801a2e8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801a5c0:	6861      	ldr	r1, [r4, #4]
 801a5c2:	4602      	mov	r2, r0
 801a5c4:	6820      	ldr	r0, [r4, #0]
 801a5c6:	4633      	mov	r3, r6
 801a5c8:	c303      	stmia	r3!, {r0, r1}
 801a5ca:	4611      	mov	r1, r2
 801a5cc:	4630      	mov	r0, r6
 801a5ce:	f7f8 fafd 	bl	8012bcc <_ZN8touchgfx4RectaNERKS0_>
 801a5d2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801a5d6:	2b00      	cmp	r3, #0
 801a5d8:	f77f af33 	ble.w	801a442 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a5dc:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801a5e0:	2b00      	cmp	r3, #0
 801a5e2:	f77f af2e 	ble.w	801a442 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a5e6:	4628      	mov	r0, r5
 801a5e8:	f7ff fe9a 	bl	801a320 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801a5ec:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801a5f0:	1a18      	subs	r0, r3, r0
 801a5f2:	f8ad 0010 	strh.w	r0, [sp, #16]
 801a5f6:	4628      	mov	r0, r5
 801a5f8:	f7ff fea6 	bl	801a348 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801a5fc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801a600:	1a18      	subs	r0, r3, r0
 801a602:	f8ad 0012 	strh.w	r0, [sp, #18]
 801a606:	682b      	ldr	r3, [r5, #0]
 801a608:	4631      	mov	r1, r6
 801a60a:	689b      	ldr	r3, [r3, #8]
 801a60c:	4628      	mov	r0, r5
 801a60e:	4798      	blx	r3
 801a610:	e717      	b.n	801a442 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801a612 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801a612:	b570      	push	{r4, r5, r6, lr}
 801a614:	460c      	mov	r4, r1
 801a616:	b086      	sub	sp, #24
 801a618:	1d06      	adds	r6, r0, #4
 801a61a:	2300      	movs	r3, #0
 801a61c:	4631      	mov	r1, r6
 801a61e:	4605      	mov	r5, r0
 801a620:	a802      	add	r0, sp, #8
 801a622:	9301      	str	r3, [sp, #4]
 801a624:	f7ff fba8 	bl	8019d78 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a628:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a62c:	8822      	ldrh	r2, [r4, #0]
 801a62e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801a632:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a636:	f8ad 0014 	strh.w	r0, [sp, #20]
 801a63a:	1ad2      	subs	r2, r2, r3
 801a63c:	8863      	ldrh	r3, [r4, #2]
 801a63e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a642:	1a5b      	subs	r3, r3, r1
 801a644:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801a648:	f8ad 1016 	strh.w	r1, [sp, #22]
 801a64c:	aa01      	add	r2, sp, #4
 801a64e:	a904      	add	r1, sp, #16
 801a650:	4630      	mov	r0, r6
 801a652:	f8ad 3012 	strh.w	r3, [sp, #18]
 801a656:	f7f8 fb91 	bl	8012d7c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801a65a:	9a01      	ldr	r2, [sp, #4]
 801a65c:	b11a      	cbz	r2, 801a666 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801a65e:	4621      	mov	r1, r4
 801a660:	4628      	mov	r0, r5
 801a662:	f7ff fed5 	bl	801a410 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a666:	b006      	add	sp, #24
 801a668:	bd70      	pop	{r4, r5, r6, pc}

0801a66a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801a66a:	b530      	push	{r4, r5, lr}
 801a66c:	4602      	mov	r2, r0
 801a66e:	4604      	mov	r4, r0
 801a670:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801a674:	b085      	sub	sp, #20
 801a676:	460d      	mov	r5, r1
 801a678:	6851      	ldr	r1, [r2, #4]
 801a67a:	466b      	mov	r3, sp
 801a67c:	c303      	stmia	r3!, {r0, r1}
 801a67e:	4629      	mov	r1, r5
 801a680:	4668      	mov	r0, sp
 801a682:	f7f8 faa3 	bl	8012bcc <_ZN8touchgfx4RectaNERKS0_>
 801a686:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801a68a:	b12b      	cbz	r3, 801a698 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801a68c:	4669      	mov	r1, sp
 801a68e:	4620      	mov	r0, r4
 801a690:	f7ff ffbf 	bl	801a612 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801a694:	b005      	add	sp, #20
 801a696:	bd30      	pop	{r4, r5, pc}
 801a698:	3404      	adds	r4, #4
 801a69a:	4621      	mov	r1, r4
 801a69c:	a802      	add	r0, sp, #8
 801a69e:	f7ff fb6b 	bl	8019d78 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a6a2:	f8bd 3000 	ldrh.w	r3, [sp]
 801a6a6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801a6aa:	1a9b      	subs	r3, r3, r2
 801a6ac:	f8ad 3000 	strh.w	r3, [sp]
 801a6b0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801a6b4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a6b8:	4669      	mov	r1, sp
 801a6ba:	1a9b      	subs	r3, r3, r2
 801a6bc:	4620      	mov	r0, r4
 801a6be:	f8ad 3002 	strh.w	r3, [sp, #2]
 801a6c2:	f7f8 fb22 	bl	8012d0a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801a6c6:	e7e5      	b.n	801a694 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0801a6c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 801a6c8:	680a      	ldr	r2, [r1, #0]
 801a6ca:	460b      	mov	r3, r1
 801a6cc:	6992      	ldr	r2, [r2, #24]
 801a6ce:	1d01      	adds	r1, r0, #4
 801a6d0:	4618      	mov	r0, r3
 801a6d2:	4710      	bx	r2

0801a6d4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 801a6d4:	4298      	cmp	r0, r3
 801a6d6:	d200      	bcs.n	801a6da <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 801a6d8:	b913      	cbnz	r3, 801a6e0 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 801a6da:	440a      	add	r2, r1
 801a6dc:	b210      	sxth	r0, r2
 801a6de:	4770      	bx	lr
 801a6e0:	ee07 0a90 	vmov	s15, r0
 801a6e4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801a6e8:	ee07 3a90 	vmov	s15, r3
 801a6ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a6f0:	eddf 4a15 	vldr	s9, [pc, #84]	; 801a748 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 801a6f4:	eddf 5a15 	vldr	s11, [pc, #84]	; 801a74c <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 801a6f8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801a6fc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a700:	ee37 7a66 	vsub.f32	s14, s14, s13
 801a704:	ee07 2a90 	vmov	s15, r2
 801a708:	eee7 5a24 	vfma.f32	s11, s14, s9
 801a70c:	ee27 5a07 	vmul.f32	s10, s14, s14
 801a710:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801a714:	eee5 6a25 	vfma.f32	s13, s10, s11
 801a718:	ee07 1a90 	vmov	s15, r1
 801a71c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a720:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801a724:	eee6 7a26 	vfma.f32	s15, s12, s13
 801a728:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a72c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a730:	bfcc      	ite	gt
 801a732:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801a736:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801a73a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a73e:	ee17 3a90 	vmov	r3, s15
 801a742:	b218      	sxth	r0, r3
 801a744:	4770      	bx	lr
 801a746:	bf00      	nop
 801a748:	402ce6b0 	.word	0x402ce6b0
 801a74c:	3fd9cd60 	.word	0x3fd9cd60

0801a750 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 801a750:	4298      	cmp	r0, r3
 801a752:	d200      	bcs.n	801a756 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 801a754:	b913      	cbnz	r3, 801a75c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801a756:	440a      	add	r2, r1
 801a758:	b210      	sxth	r0, r2
 801a75a:	4770      	bx	lr
 801a75c:	ee07 0a90 	vmov	s15, r0
 801a760:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801a764:	ee07 3a90 	vmov	s15, r3
 801a768:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a76c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801a770:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a774:	ee37 7a66 	vsub.f32	s14, s14, s13
 801a778:	ee07 2a90 	vmov	s15, r2
 801a77c:	ee67 5a07 	vmul.f32	s11, s14, s14
 801a780:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801a784:	eee5 6a87 	vfma.f32	s13, s11, s14
 801a788:	ee07 1a90 	vmov	s15, r1
 801a78c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a790:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801a794:	eee6 7a26 	vfma.f32	s15, s12, s13
 801a798:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a79c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7a0:	bfcc      	ite	gt
 801a7a2:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801a7a6:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801a7aa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a7ae:	ee17 3a90 	vmov	r3, s15
 801a7b2:	b218      	sxth	r0, r3
 801a7b4:	4770      	bx	lr

0801a7b6 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801a7b6:	4298      	cmp	r0, r3
 801a7b8:	d200      	bcs.n	801a7bc <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801a7ba:	b913      	cbnz	r3, 801a7c2 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 801a7bc:	440a      	add	r2, r1
 801a7be:	b210      	sxth	r0, r2
 801a7c0:	4770      	bx	lr
 801a7c2:	ee07 2a90 	vmov	s15, r2
 801a7c6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801a7ca:	ee07 0a90 	vmov	s15, r0
 801a7ce:	eef8 7a67 	vcvt.f32.u32	s15, s15
 801a7d2:	ee67 7a27 	vmul.f32	s15, s14, s15
 801a7d6:	ee07 3a10 	vmov	s14, r3
 801a7da:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801a7de:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801a7e2:	ee07 1a90 	vmov	s15, r1
 801a7e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a7ea:	ee77 7a27 	vadd.f32	s15, s14, s15
 801a7ee:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801a7f2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a7f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7fa:	bfcc      	ite	gt
 801a7fc:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801a800:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801a804:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a808:	ee17 3a90 	vmov	r3, s15
 801a80c:	b218      	sxth	r0, r3
 801a80e:	4770      	bx	lr

0801a810 <_ZN8touchgfx12TextProviderC1Ev>:
 801a810:	b538      	push	{r3, r4, r5, lr}
 801a812:	2500      	movs	r5, #0
 801a814:	2302      	movs	r3, #2
 801a816:	4604      	mov	r4, r0
 801a818:	e9c0 5500 	strd	r5, r5, [r0]
 801a81c:	7403      	strb	r3, [r0, #16]
 801a81e:	6145      	str	r5, [r0, #20]
 801a820:	7605      	strb	r5, [r0, #24]
 801a822:	83c5      	strh	r5, [r0, #30]
 801a824:	8405      	strh	r5, [r0, #32]
 801a826:	86c5      	strh	r5, [r0, #54]	; 0x36
 801a828:	8705      	strh	r5, [r0, #56]	; 0x38
 801a82a:	87c5      	strh	r5, [r0, #62]	; 0x3e
 801a82c:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801a830:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 801a834:	220e      	movs	r2, #14
 801a836:	4629      	mov	r1, r5
 801a838:	304c      	adds	r0, #76	; 0x4c
 801a83a:	f013 fb62 	bl	802df02 <memset>
 801a83e:	2301      	movs	r3, #1
 801a840:	4620      	mov	r0, r4
 801a842:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 801a846:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801a84a:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801a84e:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 801a852:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801a856:	f7ef ff5f 	bl	800a718 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801a85a:	4620      	mov	r0, r4
 801a85c:	bd38      	pop	{r3, r4, r5, pc}

0801a85e <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801a85e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801a860:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a864:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801a866:	fab0 f080 	clz	r0, r0
 801a86a:	0940      	lsrs	r0, r0, #5
 801a86c:	4770      	bx	lr

0801a86e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801a86e:	b530      	push	{r4, r5, lr}
 801a870:	2500      	movs	r5, #0
 801a872:	2401      	movs	r4, #1
 801a874:	6843      	ldr	r3, [r0, #4]
 801a876:	b913      	cbnz	r3, 801a87e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801a878:	6803      	ldr	r3, [r0, #0]
 801a87a:	b313      	cbz	r3, 801a8c2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801a87c:	6043      	str	r3, [r0, #4]
 801a87e:	7e03      	ldrb	r3, [r0, #24]
 801a880:	b143      	cbz	r3, 801a894 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801a882:	6943      	ldr	r3, [r0, #20]
 801a884:	b12b      	cbz	r3, 801a892 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801a886:	881a      	ldrh	r2, [r3, #0]
 801a888:	b11a      	cbz	r2, 801a892 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801a88a:	1c9a      	adds	r2, r3, #2
 801a88c:	6142      	str	r2, [r0, #20]
 801a88e:	8818      	ldrh	r0, [r3, #0]
 801a890:	bd30      	pop	{r4, r5, pc}
 801a892:	7605      	strb	r5, [r0, #24]
 801a894:	6843      	ldr	r3, [r0, #4]
 801a896:	8819      	ldrh	r1, [r3, #0]
 801a898:	b199      	cbz	r1, 801a8c2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801a89a:	1c9a      	adds	r2, r3, #2
 801a89c:	2902      	cmp	r1, #2
 801a89e:	6042      	str	r2, [r0, #4]
 801a8a0:	d1f5      	bne.n	801a88e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801a8a2:	7c03      	ldrb	r3, [r0, #16]
 801a8a4:	2b01      	cmp	r3, #1
 801a8a6:	d8e5      	bhi.n	801a874 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a8a8:	1c5a      	adds	r2, r3, #1
 801a8aa:	3302      	adds	r3, #2
 801a8ac:	7402      	strb	r2, [r0, #16]
 801a8ae:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801a8b2:	6143      	str	r3, [r0, #20]
 801a8b4:	2b00      	cmp	r3, #0
 801a8b6:	d0dd      	beq.n	801a874 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a8b8:	881b      	ldrh	r3, [r3, #0]
 801a8ba:	2b00      	cmp	r3, #0
 801a8bc:	d0da      	beq.n	801a874 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a8be:	7604      	strb	r4, [r0, #24]
 801a8c0:	e7d8      	b.n	801a874 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a8c2:	2000      	movs	r0, #0
 801a8c4:	e7e4      	b.n	801a890 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801a8c6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801a8c6:	b430      	push	{r4, r5}
 801a8c8:	6001      	str	r1, [r0, #0]
 801a8ca:	2100      	movs	r1, #0
 801a8cc:	6041      	str	r1, [r0, #4]
 801a8ce:	6815      	ldr	r5, [r2, #0]
 801a8d0:	6085      	str	r5, [r0, #8]
 801a8d2:	6852      	ldr	r2, [r2, #4]
 801a8d4:	6443      	str	r3, [r0, #68]	; 0x44
 801a8d6:	9b02      	ldr	r3, [sp, #8]
 801a8d8:	60c2      	str	r2, [r0, #12]
 801a8da:	7401      	strb	r1, [r0, #16]
 801a8dc:	6141      	str	r1, [r0, #20]
 801a8de:	7601      	strb	r1, [r0, #24]
 801a8e0:	8701      	strh	r1, [r0, #56]	; 0x38
 801a8e2:	8401      	strh	r1, [r0, #32]
 801a8e4:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801a8e8:	6483      	str	r3, [r0, #72]	; 0x48
 801a8ea:	bc30      	pop	{r4, r5}
 801a8ec:	f7ef bf14 	b.w	800a718 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801a8f0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801a8f0:	b408      	push	{r3}
 801a8f2:	b510      	push	{r4, lr}
 801a8f4:	b085      	sub	sp, #20
 801a8f6:	ac07      	add	r4, sp, #28
 801a8f8:	f854 3b04 	ldr.w	r3, [r4], #4
 801a8fc:	9300      	str	r3, [sp, #0]
 801a8fe:	4613      	mov	r3, r2
 801a900:	4622      	mov	r2, r4
 801a902:	9403      	str	r4, [sp, #12]
 801a904:	f7ff ffdf 	bl	801a8c6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a908:	b005      	add	sp, #20
 801a90a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a90e:	b001      	add	sp, #4
 801a910:	4770      	bx	lr

0801a912 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801a912:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a914:	4605      	mov	r5, r0
 801a916:	4608      	mov	r0, r1
 801a918:	b1e9      	cbz	r1, 801a956 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801a91a:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801a91e:	460b      	mov	r3, r1
 801a920:	f101 0708 	add.w	r7, r1, #8
 801a924:	4622      	mov	r2, r4
 801a926:	6818      	ldr	r0, [r3, #0]
 801a928:	6859      	ldr	r1, [r3, #4]
 801a92a:	4626      	mov	r6, r4
 801a92c:	c603      	stmia	r6!, {r0, r1}
 801a92e:	3308      	adds	r3, #8
 801a930:	42bb      	cmp	r3, r7
 801a932:	4634      	mov	r4, r6
 801a934:	d1f7      	bne.n	801a926 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801a936:	6818      	ldr	r0, [r3, #0]
 801a938:	6030      	str	r0, [r6, #0]
 801a93a:	889b      	ldrh	r3, [r3, #4]
 801a93c:	80b3      	strh	r3, [r6, #4]
 801a93e:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 801a942:	015b      	lsls	r3, r3, #5
 801a944:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801a948:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 801a94c:	430b      	orrs	r3, r1
 801a94e:	425b      	negs	r3, r3
 801a950:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 801a954:	4610      	mov	r0, r2
 801a956:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801a958 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801a958:	b538      	push	{r3, r4, r5, lr}
 801a95a:	460c      	mov	r4, r1
 801a95c:	6811      	ldr	r1, [r2, #0]
 801a95e:	4610      	mov	r0, r2
 801a960:	68cd      	ldr	r5, [r1, #12]
 801a962:	4619      	mov	r1, r3
 801a964:	47a8      	blx	r5
 801a966:	2800      	cmp	r0, #0
 801a968:	bf08      	it	eq
 801a96a:	4620      	moveq	r0, r4
 801a96c:	bd38      	pop	{r3, r4, r5, pc}
	...

0801a970 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801a970:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a972:	4604      	mov	r4, r0
 801a974:	4615      	mov	r5, r2
 801a976:	4608      	mov	r0, r1
 801a978:	b93a      	cbnz	r2, 801a98a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801a97a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801a97e:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 801a982:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801a986:	4628      	mov	r0, r5
 801a988:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801a98a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 801a98e:	8893      	ldrh	r3, [r2, #4]
 801a990:	ea4f 160c 	mov.w	r6, ip, lsl #4
 801a994:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801a998:	79ee      	ldrb	r6, [r5, #7]
 801a99a:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 801a99e:	4316      	orrs	r6, r2
 801a9a0:	19da      	adds	r2, r3, r7
 801a9a2:	b291      	uxth	r1, r2
 801a9a4:	291d      	cmp	r1, #29
 801a9a6:	b2b7      	uxth	r7, r6
 801a9a8:	d87a      	bhi.n	801aaa0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801a9aa:	2201      	movs	r2, #1
 801a9ac:	408a      	lsls	r2, r1
 801a9ae:	4975      	ldr	r1, [pc, #468]	; (801ab84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 801a9b0:	420a      	tst	r2, r1
 801a9b2:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801a9b6:	d12d      	bne.n	801aa14 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801a9b8:	f412 7f60 	tst.w	r2, #896	; 0x380
 801a9bc:	d070      	beq.n	801aaa0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801a9be:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 801a9c2:	462b      	mov	r3, r5
 801a9c4:	f105 0e08 	add.w	lr, r5, #8
 801a9c8:	4615      	mov	r5, r2
 801a9ca:	6818      	ldr	r0, [r3, #0]
 801a9cc:	6859      	ldr	r1, [r3, #4]
 801a9ce:	4694      	mov	ip, r2
 801a9d0:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801a9d4:	3308      	adds	r3, #8
 801a9d6:	4573      	cmp	r3, lr
 801a9d8:	4662      	mov	r2, ip
 801a9da:	d1f6      	bne.n	801a9ca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801a9dc:	6818      	ldr	r0, [r3, #0]
 801a9de:	f8cc 0000 	str.w	r0, [ip]
 801a9e2:	889b      	ldrh	r3, [r3, #4]
 801a9e4:	f8ac 3004 	strh.w	r3, [ip, #4]
 801a9e8:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 801a9ec:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 801a9f0:	b2b3      	uxth	r3, r6
 801a9f2:	1aca      	subs	r2, r1, r3
 801a9f4:	b292      	uxth	r2, r2
 801a9f6:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801a9fa:	10d2      	asrs	r2, r2, #3
 801a9fc:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801aa00:	f002 0260 	and.w	r2, r2, #96	; 0x60
 801aa04:	4302      	orrs	r2, r0
 801aa06:	1bcf      	subs	r7, r1, r7
 801aa08:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801aa0c:	1afb      	subs	r3, r7, r3
 801aa0e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801aa12:	e7b8      	b.n	801a986 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801aa14:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801aa16:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801aa1a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801aa1c:	f640 6333 	movw	r3, #3635	; 0xe33
 801aa20:	4299      	cmp	r1, r3
 801aa22:	d110      	bne.n	801aa46 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 801aa24:	6803      	ldr	r3, [r0, #0]
 801aa26:	68db      	ldr	r3, [r3, #12]
 801aa28:	4798      	blx	r3
 801aa2a:	7b41      	ldrb	r1, [r0, #13]
 801aa2c:	00cb      	lsls	r3, r1, #3
 801aa2e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801aa32:	7a03      	ldrb	r3, [r0, #8]
 801aa34:	0648      	lsls	r0, r1, #25
 801aa36:	ea43 0302 	orr.w	r3, r3, r2
 801aa3a:	bf44      	itt	mi
 801aa3c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801aa40:	b21b      	sxthmi	r3, r3
 801aa42:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801aa46:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801aa4a:	443b      	add	r3, r7
 801aa4c:	4433      	add	r3, r6
 801aa4e:	b29b      	uxth	r3, r3
 801aa50:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 801aa54:	462a      	mov	r2, r5
 801aa56:	f105 0c08 	add.w	ip, r5, #8
 801aa5a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801aa5e:	4635      	mov	r5, r6
 801aa60:	6810      	ldr	r0, [r2, #0]
 801aa62:	6851      	ldr	r1, [r2, #4]
 801aa64:	4637      	mov	r7, r6
 801aa66:	c703      	stmia	r7!, {r0, r1}
 801aa68:	3208      	adds	r2, #8
 801aa6a:	4562      	cmp	r2, ip
 801aa6c:	463e      	mov	r6, r7
 801aa6e:	d1f7      	bne.n	801aa60 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 801aa70:	6810      	ldr	r0, [r2, #0]
 801aa72:	6038      	str	r0, [r7, #0]
 801aa74:	8892      	ldrh	r2, [r2, #4]
 801aa76:	80ba      	strh	r2, [r7, #4]
 801aa78:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801aa7c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801aa80:	10db      	asrs	r3, r3, #3
 801aa82:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801aa86:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801aa8a:	4313      	orrs	r3, r2
 801aa8c:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801aa90:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 801aa94:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801aa98:	1a9b      	subs	r3, r3, r2
 801aa9a:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 801aa9e:	e772      	b.n	801a986 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801aaa0:	f023 0204 	bic.w	r2, r3, #4
 801aaa4:	f640 611b 	movw	r1, #3611	; 0xe1b
 801aaa8:	428a      	cmp	r2, r1
 801aaaa:	d003      	beq.n	801aab4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 801aaac:	f640 621d 	movw	r2, #3613	; 0xe1d
 801aab0:	4293      	cmp	r3, r2
 801aab2:	d120      	bne.n	801aaf6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 801aab4:	3b01      	subs	r3, #1
 801aab6:	4602      	mov	r2, r0
 801aab8:	b29b      	uxth	r3, r3
 801aaba:	4629      	mov	r1, r5
 801aabc:	4620      	mov	r0, r4
 801aabe:	f7ff ff4b 	bl	801a958 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801aac2:	7b41      	ldrb	r1, [r0, #13]
 801aac4:	00cb      	lsls	r3, r1, #3
 801aac6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801aaca:	7a03      	ldrb	r3, [r0, #8]
 801aacc:	0649      	lsls	r1, r1, #25
 801aace:	ea43 0302 	orr.w	r3, r3, r2
 801aad2:	bf44      	itt	mi
 801aad4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801aad8:	b21b      	sxthmi	r3, r3
 801aada:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801aade:	7b6b      	ldrb	r3, [r5, #13]
 801aae0:	7aaa      	ldrb	r2, [r5, #10]
 801aae2:	005b      	lsls	r3, r3, #1
 801aae4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801aae8:	4313      	orrs	r3, r2
 801aaea:	115a      	asrs	r2, r3, #5
 801aaec:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801aaf0:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801aaf4:	e036      	b.n	801ab64 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 801aaf6:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801aafa:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801aafe:	7a2a      	ldrb	r2, [r5, #8]
 801ab00:	f01c 0f40 	tst.w	ip, #64	; 0x40
 801ab04:	ea42 0201 	orr.w	r2, r2, r1
 801ab08:	bf1c      	itt	ne
 801ab0a:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801ab0e:	b212      	sxthne	r2, r2
 801ab10:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801ab14:	f640 6109 	movw	r1, #3593	; 0xe09
 801ab18:	f023 0210 	bic.w	r2, r3, #16
 801ab1c:	428a      	cmp	r2, r1
 801ab1e:	d003      	beq.n	801ab28 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 801ab20:	f640 6213 	movw	r2, #3603	; 0xe13
 801ab24:	4293      	cmp	r3, r2
 801ab26:	d12a      	bne.n	801ab7e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 801ab28:	7b6e      	ldrb	r6, [r5, #13]
 801ab2a:	0076      	lsls	r6, r6, #1
 801ab2c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801ab30:	7aae      	ldrb	r6, [r5, #10]
 801ab32:	4316      	orrs	r6, r2
 801ab34:	f640 6213 	movw	r2, #3603	; 0xe13
 801ab38:	4293      	cmp	r3, r2
 801ab3a:	bf18      	it	ne
 801ab3c:	f103 33ff 	addne.w	r3, r3, #4294967295
 801ab40:	4602      	mov	r2, r0
 801ab42:	bf14      	ite	ne
 801ab44:	b29b      	uxthne	r3, r3
 801ab46:	f640 630c 	movweq	r3, #3596	; 0xe0c
 801ab4a:	4629      	mov	r1, r5
 801ab4c:	4620      	mov	r0, r4
 801ab4e:	f7ff ff03 	bl	801a958 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801ab52:	7b43      	ldrb	r3, [r0, #13]
 801ab54:	7a82      	ldrb	r2, [r0, #10]
 801ab56:	005b      	lsls	r3, r3, #1
 801ab58:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801ab5c:	4313      	orrs	r3, r2
 801ab5e:	1af6      	subs	r6, r6, r3
 801ab60:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 801ab64:	7b69      	ldrb	r1, [r5, #13]
 801ab66:	00cb      	lsls	r3, r1, #3
 801ab68:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801ab6c:	7a2b      	ldrb	r3, [r5, #8]
 801ab6e:	4313      	orrs	r3, r2
 801ab70:	064a      	lsls	r2, r1, #25
 801ab72:	bf44      	itt	mi
 801ab74:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ab78:	b21b      	sxthmi	r3, r3
 801ab7a:	1bdb      	subs	r3, r3, r7
 801ab7c:	e747      	b.n	801aa0e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 801ab7e:	2300      	movs	r3, #0
 801ab80:	e7b6      	b.n	801aaf0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 801ab82:	bf00      	nop
 801ab84:	3fc00079 	.word	0x3fc00079

0801ab88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801ab88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ab8c:	4604      	mov	r4, r0
 801ab8e:	b942      	cbnz	r2, 801aba2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 801ab90:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801ab94:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 801ab98:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 801ab9c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801aba0:	e047      	b.n	801ac32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801aba2:	7b51      	ldrb	r1, [r2, #13]
 801aba4:	8893      	ldrh	r3, [r2, #4]
 801aba6:	010d      	lsls	r5, r1, #4
 801aba8:	f405 7080 	and.w	r0, r5, #256	; 0x100
 801abac:	79d5      	ldrb	r5, [r2, #7]
 801abae:	4305      	orrs	r5, r0
 801abb0:	2d04      	cmp	r5, #4
 801abb2:	bfcc      	ite	gt
 801abb4:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801abb8:	f04f 0e01 	movle.w	lr, #1
 801abbc:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 801abc0:	f200 80ab 	bhi.w	801ad1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 801abc4:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801abc8:	4283      	cmp	r3, r0
 801abca:	d216      	bcs.n	801abfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801abcc:	f240 605b 	movw	r0, #1627	; 0x65b
 801abd0:	4283      	cmp	r3, r0
 801abd2:	d859      	bhi.n	801ac88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 801abd4:	f240 6057 	movw	r0, #1623	; 0x657
 801abd8:	4283      	cmp	r3, r0
 801abda:	d20e      	bcs.n	801abfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801abdc:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801abe0:	d24a      	bcs.n	801ac78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801abe2:	f240 604e 	movw	r0, #1614	; 0x64e
 801abe6:	4283      	cmp	r3, r0
 801abe8:	d207      	bcs.n	801abfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801abea:	f240 601a 	movw	r0, #1562	; 0x61a
 801abee:	4283      	cmp	r3, r0
 801abf0:	d02a      	beq.n	801ac48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801abf2:	d821      	bhi.n	801ac38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 801abf4:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801abf8:	d35b      	bcc.n	801acb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801abfa:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801abfe:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801ac02:	f040 80d0 	bne.w	801ada6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801ac06:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801ac0a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801ac0e:	f040 80ca 	bne.w	801ada6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801ac12:	00cb      	lsls	r3, r1, #3
 801ac14:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801ac18:	7a13      	ldrb	r3, [r2, #8]
 801ac1a:	0649      	lsls	r1, r1, #25
 801ac1c:	ea43 0300 	orr.w	r3, r3, r0
 801ac20:	bf44      	itt	mi
 801ac22:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ac26:	b21b      	sxthmi	r3, r3
 801ac28:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801ac2c:	1b5d      	subs	r5, r3, r5
 801ac2e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801ac32:	4610      	mov	r0, r2
 801ac34:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801ac38:	f240 604b 	movw	r0, #1611	; 0x64b
 801ac3c:	4283      	cmp	r3, r0
 801ac3e:	d338      	bcc.n	801acb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ac40:	f240 604c 	movw	r0, #1612	; 0x64c
 801ac44:	4283      	cmp	r3, r0
 801ac46:	d9d8      	bls.n	801abfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ac48:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 801ac4c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 801ac50:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801ac54:	f040 80f2 	bne.w	801ae3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801ac58:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801ac5c:	f040 80ee 	bne.w	801ae3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801ac60:	00cb      	lsls	r3, r1, #3
 801ac62:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801ac66:	7a13      	ldrb	r3, [r2, #8]
 801ac68:	064e      	lsls	r6, r1, #25
 801ac6a:	ea43 0300 	orr.w	r3, r3, r0
 801ac6e:	bf44      	itt	mi
 801ac70:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ac74:	b21b      	sxthmi	r3, r3
 801ac76:	e7d9      	b.n	801ac2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801ac78:	f240 6054 	movw	r0, #1620	; 0x654
 801ac7c:	4283      	cmp	r3, r0
 801ac7e:	d8e3      	bhi.n	801ac48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ac80:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801ac84:	d9e0      	bls.n	801ac48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ac86:	e7b8      	b.n	801abfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ac88:	f240 6074 	movw	r0, #1652	; 0x674
 801ac8c:	4283      	cmp	r3, r0
 801ac8e:	d0b4      	beq.n	801abfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ac90:	d82d      	bhi.n	801acee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801ac92:	f240 605e 	movw	r0, #1630	; 0x65e
 801ac96:	4283      	cmp	r3, r0
 801ac98:	d804      	bhi.n	801aca4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801ac9a:	f240 605d 	movw	r0, #1629	; 0x65d
 801ac9e:	4283      	cmp	r3, r0
 801aca0:	d3d2      	bcc.n	801ac48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801aca2:	e7aa      	b.n	801abfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801aca4:	f240 605f 	movw	r0, #1631	; 0x65f
 801aca8:	4283      	cmp	r3, r0
 801acaa:	d0cd      	beq.n	801ac48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801acac:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 801acb0:	d0a3      	beq.n	801abfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801acb2:	00cb      	lsls	r3, r1, #3
 801acb4:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801acb8:	7a13      	ldrb	r3, [r2, #8]
 801acba:	0649      	lsls	r1, r1, #25
 801acbc:	ea43 0300 	orr.w	r3, r3, r0
 801acc0:	bf44      	itt	mi
 801acc2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801acc6:	b21b      	sxthmi	r3, r3
 801acc8:	1b5d      	subs	r5, r3, r5
 801acca:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801acce:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801acd2:	7b53      	ldrb	r3, [r2, #13]
 801acd4:	015b      	lsls	r3, r3, #5
 801acd6:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801acda:	7993      	ldrb	r3, [r2, #6]
 801acdc:	430b      	orrs	r3, r1
 801acde:	005b      	lsls	r3, r3, #1
 801ace0:	2105      	movs	r1, #5
 801ace2:	fb93 f3f1 	sdiv	r3, r3, r1
 801ace6:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801acea:	440b      	add	r3, r1
 801acec:	e756      	b.n	801ab9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801acee:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801acf2:	4283      	cmp	r3, r0
 801acf4:	d809      	bhi.n	801ad0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801acf6:	f240 60df 	movw	r0, #1759	; 0x6df
 801acfa:	4283      	cmp	r3, r0
 801acfc:	f4bf af7d 	bcs.w	801abfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ad00:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 801ad04:	2b05      	cmp	r3, #5
 801ad06:	d8d4      	bhi.n	801acb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ad08:	e777      	b.n	801abfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ad0a:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801ad0e:	4283      	cmp	r3, r0
 801ad10:	d09a      	beq.n	801ac48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ad12:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801ad16:	4283      	cmp	r3, r0
 801ad18:	e7ca      	b.n	801acb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801ad1a:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801ad1e:	d22b      	bcs.n	801ad78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 801ad20:	f640 00ed 	movw	r0, #2285	; 0x8ed
 801ad24:	4283      	cmp	r3, r0
 801ad26:	d28f      	bcs.n	801ac48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ad28:	f640 00e5 	movw	r0, #2277	; 0x8e5
 801ad2c:	4283      	cmp	r3, r0
 801ad2e:	d816      	bhi.n	801ad5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 801ad30:	f640 00e4 	movw	r0, #2276	; 0x8e4
 801ad34:	4283      	cmp	r3, r0
 801ad36:	f4bf af60 	bcs.w	801abfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ad3a:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801ad3e:	4283      	cmp	r3, r0
 801ad40:	d80a      	bhi.n	801ad58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801ad42:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801ad46:	4283      	cmp	r3, r0
 801ad48:	f4bf af57 	bcs.w	801abfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ad4c:	f240 60ea 	movw	r0, #1770	; 0x6ea
 801ad50:	4283      	cmp	r3, r0
 801ad52:	f43f af79 	beq.w	801ac48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ad56:	e7ac      	b.n	801acb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ad58:	f240 60ed 	movw	r0, #1773	; 0x6ed
 801ad5c:	e7f8      	b.n	801ad50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801ad5e:	f640 00e8 	movw	r0, #2280	; 0x8e8
 801ad62:	4283      	cmp	r3, r0
 801ad64:	d802      	bhi.n	801ad6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801ad66:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801ad6a:	e798      	b.n	801ac9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 801ad6c:	f640 00e9 	movw	r0, #2281	; 0x8e9
 801ad70:	4283      	cmp	r3, r0
 801ad72:	f47f af42 	bne.w	801abfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ad76:	e767      	b.n	801ac48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ad78:	f640 00f6 	movw	r0, #2294	; 0x8f6
 801ad7c:	4283      	cmp	r3, r0
 801ad7e:	f43f af63 	beq.w	801ac48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ad82:	d802      	bhi.n	801ad8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 801ad84:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801ad88:	e7f2      	b.n	801ad70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801ad8a:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801ad8e:	4283      	cmp	r3, r0
 801ad90:	d805      	bhi.n	801ad9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801ad92:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801ad96:	4283      	cmp	r3, r0
 801ad98:	f4ff af2f 	bcc.w	801abfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ad9c:	e754      	b.n	801ac48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ad9e:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801ada2:	4283      	cmp	r3, r0
 801ada4:	e7af      	b.n	801ad06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801ada6:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801adaa:	4617      	mov	r7, r2
 801adac:	f102 0808 	add.w	r8, r2, #8
 801adb0:	4666      	mov	r6, ip
 801adb2:	6838      	ldr	r0, [r7, #0]
 801adb4:	6879      	ldr	r1, [r7, #4]
 801adb6:	46e6      	mov	lr, ip
 801adb8:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801adbc:	3708      	adds	r7, #8
 801adbe:	4547      	cmp	r7, r8
 801adc0:	46f4      	mov	ip, lr
 801adc2:	d1f6      	bne.n	801adb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 801adc4:	6838      	ldr	r0, [r7, #0]
 801adc6:	f8ce 0000 	str.w	r0, [lr]
 801adca:	88b9      	ldrh	r1, [r7, #4]
 801adcc:	f8ae 1004 	strh.w	r1, [lr, #4]
 801add0:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801add4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801add8:	d009      	beq.n	801adee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801adda:	7b51      	ldrb	r1, [r2, #13]
 801addc:	7992      	ldrb	r2, [r2, #6]
 801adde:	0149      	lsls	r1, r1, #5
 801ade0:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801ade4:	4311      	orrs	r1, r2
 801ade6:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801adea:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801adee:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801adf2:	b2ad      	uxth	r5, r5
 801adf4:	d00d      	beq.n	801ae12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801adf6:	442b      	add	r3, r5
 801adf8:	b29b      	uxth	r3, r3
 801adfa:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801adfe:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801ae02:	10db      	asrs	r3, r3, #3
 801ae04:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801ae08:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801ae0c:	4313      	orrs	r3, r2
 801ae0e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801ae12:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801ae16:	00cb      	lsls	r3, r1, #3
 801ae18:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801ae1c:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801ae20:	064f      	lsls	r7, r1, #25
 801ae22:	ea43 0302 	orr.w	r3, r3, r2
 801ae26:	bf44      	itt	mi
 801ae28:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ae2c:	b21b      	sxthmi	r3, r3
 801ae2e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801ae32:	1b5b      	subs	r3, r3, r5
 801ae34:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801ae38:	4632      	mov	r2, r6
 801ae3a:	e6fa      	b.n	801ac32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801ae3c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801ae40:	4617      	mov	r7, r2
 801ae42:	f102 0908 	add.w	r9, r2, #8
 801ae46:	4666      	mov	r6, ip
 801ae48:	6838      	ldr	r0, [r7, #0]
 801ae4a:	6879      	ldr	r1, [r7, #4]
 801ae4c:	46e0      	mov	r8, ip
 801ae4e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801ae52:	3708      	adds	r7, #8
 801ae54:	454f      	cmp	r7, r9
 801ae56:	46c4      	mov	ip, r8
 801ae58:	d1f6      	bne.n	801ae48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801ae5a:	6838      	ldr	r0, [r7, #0]
 801ae5c:	f8c8 0000 	str.w	r0, [r8]
 801ae60:	88b9      	ldrh	r1, [r7, #4]
 801ae62:	f8a8 1004 	strh.w	r1, [r8, #4]
 801ae66:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801ae6a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801ae6e:	d009      	beq.n	801ae84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 801ae70:	7b51      	ldrb	r1, [r2, #13]
 801ae72:	7992      	ldrb	r2, [r2, #6]
 801ae74:	0149      	lsls	r1, r1, #5
 801ae76:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801ae7a:	4311      	orrs	r1, r2
 801ae7c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801ae80:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801ae84:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801ae88:	d00e      	beq.n	801aea8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801ae8a:	eba3 030e 	sub.w	r3, r3, lr
 801ae8e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801ae92:	b29b      	uxth	r3, r3
 801ae94:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801ae98:	10db      	asrs	r3, r3, #3
 801ae9a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801ae9e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801aea2:	4313      	orrs	r3, r2
 801aea4:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801aea8:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801aeac:	00cb      	lsls	r3, r1, #3
 801aeae:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801aeb2:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801aeb6:	0648      	lsls	r0, r1, #25
 801aeb8:	ea43 0302 	orr.w	r3, r3, r2
 801aebc:	bf44      	itt	mi
 801aebe:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801aec2:	b21b      	sxthmi	r3, r3
 801aec4:	1b5d      	subs	r5, r3, r5
 801aec6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801aeca:	e7b5      	b.n	801ae38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0801aecc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801aecc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801aed0:	461e      	mov	r6, r3
 801aed2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801aed4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801aed8:	4604      	mov	r4, r0
 801aeda:	4617      	mov	r7, r2
 801aedc:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801aee0:	f7ef fbd8 	bl	800a694 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801aee4:	4605      	mov	r5, r0
 801aee6:	b918      	cbnz	r0, 801aef0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801aee8:	6030      	str	r0, [r6, #0]
 801aeea:	4628      	mov	r0, r5
 801aeec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801aef0:	683b      	ldr	r3, [r7, #0]
 801aef2:	4601      	mov	r1, r0
 801aef4:	68db      	ldr	r3, [r3, #12]
 801aef6:	4638      	mov	r0, r7
 801aef8:	4798      	blx	r3
 801aefa:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801aefe:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801af02:	4602      	mov	r2, r0
 801af04:	6030      	str	r0, [r6, #0]
 801af06:	d213      	bcs.n	801af30 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801af08:	4643      	mov	r3, r8
 801af0a:	4639      	mov	r1, r7
 801af0c:	4620      	mov	r0, r4
 801af0e:	f7ff fe3b 	bl	801ab88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801af12:	6030      	str	r0, [r6, #0]
 801af14:	6833      	ldr	r3, [r6, #0]
 801af16:	b143      	cbz	r3, 801af2a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801af18:	7b5a      	ldrb	r2, [r3, #13]
 801af1a:	7a9b      	ldrb	r3, [r3, #10]
 801af1c:	0052      	lsls	r2, r2, #1
 801af1e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801af22:	4313      	orrs	r3, r2
 801af24:	bf0c      	ite	eq
 801af26:	2301      	moveq	r3, #1
 801af28:	2300      	movne	r3, #0
 801af2a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801af2e:	e7dc      	b.n	801aeea <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801af30:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801af34:	b29b      	uxth	r3, r3
 801af36:	2b7f      	cmp	r3, #127	; 0x7f
 801af38:	d804      	bhi.n	801af44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801af3a:	4639      	mov	r1, r7
 801af3c:	4620      	mov	r0, r4
 801af3e:	f7ff fd17 	bl	801a970 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801af42:	e7e6      	b.n	801af12 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 801af44:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801af48:	2b00      	cmp	r3, #0
 801af4a:	d0e3      	beq.n	801af14 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801af4c:	f640 1302 	movw	r3, #2306	; 0x902
 801af50:	429d      	cmp	r5, r3
 801af52:	d1df      	bne.n	801af14 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801af54:	4601      	mov	r1, r0
 801af56:	4620      	mov	r0, r4
 801af58:	f7ff fcdb 	bl	801a912 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801af5c:	e7d9      	b.n	801af12 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801af5e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801af5e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801af62:	461e      	mov	r6, r3
 801af64:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801af66:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801af6a:	4604      	mov	r4, r0
 801af6c:	4617      	mov	r7, r2
 801af6e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801af72:	f7ef fb8f 	bl	800a694 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801af76:	4605      	mov	r5, r0
 801af78:	b918      	cbnz	r0, 801af82 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801af7a:	6030      	str	r0, [r6, #0]
 801af7c:	4628      	mov	r0, r5
 801af7e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801af82:	683b      	ldr	r3, [r7, #0]
 801af84:	4601      	mov	r1, r0
 801af86:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801af8a:	4638      	mov	r0, r7
 801af8c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801af90:	47c8      	blx	r9
 801af92:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801af96:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801af9a:	4602      	mov	r2, r0
 801af9c:	6030      	str	r0, [r6, #0]
 801af9e:	d213      	bcs.n	801afc8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 801afa0:	4643      	mov	r3, r8
 801afa2:	4639      	mov	r1, r7
 801afa4:	4620      	mov	r0, r4
 801afa6:	f7ff fdef 	bl	801ab88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801afaa:	6030      	str	r0, [r6, #0]
 801afac:	6833      	ldr	r3, [r6, #0]
 801afae:	b143      	cbz	r3, 801afc2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 801afb0:	7b5a      	ldrb	r2, [r3, #13]
 801afb2:	7a9b      	ldrb	r3, [r3, #10]
 801afb4:	0052      	lsls	r2, r2, #1
 801afb6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801afba:	4313      	orrs	r3, r2
 801afbc:	bf0c      	ite	eq
 801afbe:	2301      	moveq	r3, #1
 801afc0:	2300      	movne	r3, #0
 801afc2:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801afc6:	e7d9      	b.n	801af7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801afc8:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801afcc:	b29b      	uxth	r3, r3
 801afce:	2b7f      	cmp	r3, #127	; 0x7f
 801afd0:	d804      	bhi.n	801afdc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801afd2:	4639      	mov	r1, r7
 801afd4:	4620      	mov	r0, r4
 801afd6:	f7ff fccb 	bl	801a970 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801afda:	e7e6      	b.n	801afaa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 801afdc:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801afe0:	2b00      	cmp	r3, #0
 801afe2:	d0e3      	beq.n	801afac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801afe4:	f640 1302 	movw	r3, #2306	; 0x902
 801afe8:	429d      	cmp	r5, r3
 801afea:	d1df      	bne.n	801afac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801afec:	4601      	mov	r1, r0
 801afee:	4620      	mov	r0, r4
 801aff0:	f7ff fc8f 	bl	801a912 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801aff4:	e7d9      	b.n	801afaa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801aff6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801aff6:	b510      	push	{r4, lr}
 801aff8:	4604      	mov	r4, r0
 801affa:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801affe:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b000:	b1f1      	cbz	r1, 801b040 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801b002:	2b0a      	cmp	r3, #10
 801b004:	d02f      	beq.n	801b066 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801b006:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801b008:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801b00c:	3901      	subs	r1, #1
 801b00e:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801b010:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 801b014:	1c51      	adds	r1, r2, #1
 801b016:	b289      	uxth	r1, r1
 801b018:	2901      	cmp	r1, #1
 801b01a:	bf84      	itt	hi
 801b01c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801b020:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801b022:	f103 0201 	add.w	r2, r3, #1
 801b026:	8722      	strh	r2, [r4, #56]	; 0x38
 801b028:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801b02a:	bf98      	it	ls
 801b02c:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801b02e:	4413      	add	r3, r2
 801b030:	b29b      	uxth	r3, r3
 801b032:	2b09      	cmp	r3, #9
 801b034:	bf88      	it	hi
 801b036:	3b0a      	subhi	r3, #10
 801b038:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b03c:	8458      	strh	r0, [r3, #34]	; 0x22
 801b03e:	e7dc      	b.n	801affa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801b040:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b042:	2b0a      	cmp	r3, #10
 801b044:	d00f      	beq.n	801b066 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801b046:	4620      	mov	r0, r4
 801b048:	f7ff fc11 	bl	801a86e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801b04c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801b04e:	1c5a      	adds	r2, r3, #1
 801b050:	8722      	strh	r2, [r4, #56]	; 0x38
 801b052:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801b054:	4413      	add	r3, r2
 801b056:	b29b      	uxth	r3, r3
 801b058:	2b09      	cmp	r3, #9
 801b05a:	bf88      	it	hi
 801b05c:	3b0a      	subhi	r3, #10
 801b05e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b062:	8458      	strh	r0, [r3, #34]	; 0x22
 801b064:	e7ec      	b.n	801b040 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801b066:	bd10      	pop	{r4, pc}

0801b068 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801b068:	b538      	push	{r3, r4, r5, lr}
 801b06a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801b06c:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801b070:	4604      	mov	r4, r0
 801b072:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 801b074:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801b076:	3a01      	subs	r2, #1
 801b078:	8702      	strh	r2, [r0, #56]	; 0x38
 801b07a:	1c5a      	adds	r2, r3, #1
 801b07c:	b292      	uxth	r2, r2
 801b07e:	2a09      	cmp	r2, #9
 801b080:	bf86      	itte	hi
 801b082:	3b09      	subhi	r3, #9
 801b084:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801b086:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801b088:	f7ff ffb5 	bl	801aff6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801b08c:	8c23      	ldrh	r3, [r4, #32]
 801b08e:	2b01      	cmp	r3, #1
 801b090:	bf9c      	itt	ls
 801b092:	3301      	addls	r3, #1
 801b094:	8423      	strhls	r3, [r4, #32]
 801b096:	8be3      	ldrh	r3, [r4, #30]
 801b098:	b90b      	cbnz	r3, 801b09e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801b09a:	2302      	movs	r3, #2
 801b09c:	83e3      	strh	r3, [r4, #30]
 801b09e:	8be3      	ldrh	r3, [r4, #30]
 801b0a0:	3b01      	subs	r3, #1
 801b0a2:	b29b      	uxth	r3, r3
 801b0a4:	83e3      	strh	r3, [r4, #30]
 801b0a6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b0aa:	4628      	mov	r0, r5
 801b0ac:	8365      	strh	r5, [r4, #26]
 801b0ae:	bd38      	pop	{r3, r4, r5, pc}

0801b0b0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801b0b0:	428a      	cmp	r2, r1
 801b0b2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b0b6:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801b0b8:	d931      	bls.n	801b11e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801b0ba:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 801b0bc:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 801b0c0:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 801b0c4:	19ee      	adds	r6, r5, r7
 801b0c6:	1a54      	subs	r4, r2, r1
 801b0c8:	3e01      	subs	r6, #1
 801b0ca:	fa1f fe84 	uxth.w	lr, r4
 801b0ce:	b2b4      	uxth	r4, r6
 801b0d0:	eba4 090e 	sub.w	r9, r4, lr
 801b0d4:	fa1f f989 	uxth.w	r9, r9
 801b0d8:	2c09      	cmp	r4, #9
 801b0da:	4626      	mov	r6, r4
 801b0dc:	bf88      	it	hi
 801b0de:	f1a4 060a 	subhi.w	r6, r4, #10
 801b0e2:	f1bc 0f00 	cmp.w	ip, #0
 801b0e6:	bf08      	it	eq
 801b0e8:	f04f 0c02 	moveq.w	ip, #2
 801b0ec:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801b0f0:	f10c 3cff 	add.w	ip, ip, #4294967295
 801b0f4:	fa1f fc8c 	uxth.w	ip, ip
 801b0f8:	3c01      	subs	r4, #1
 801b0fa:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801b0fe:	b2a4      	uxth	r4, r4
 801b100:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 801b104:	454c      	cmp	r4, r9
 801b106:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801b10a:	d1e5      	bne.n	801b0d8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801b10c:	eba5 050e 	sub.w	r5, r5, lr
 801b110:	eb0e 0408 	add.w	r4, lr, r8
 801b114:	8705      	strh	r5, [r0, #56]	; 0x38
 801b116:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801b11a:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801b11e:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801b120:	1a64      	subs	r4, r4, r1
 801b122:	4439      	add	r1, r7
 801b124:	b289      	uxth	r1, r1
 801b126:	2909      	cmp	r1, #9
 801b128:	bf88      	it	hi
 801b12a:	390a      	subhi	r1, #10
 801b12c:	8704      	strh	r4, [r0, #56]	; 0x38
 801b12e:	86c1      	strh	r1, [r0, #54]	; 0x36
 801b130:	250a      	movs	r5, #10
 801b132:	b18a      	cbz	r2, 801b158 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801b134:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801b136:	3a01      	subs	r2, #1
 801b138:	b292      	uxth	r2, r2
 801b13a:	3101      	adds	r1, #1
 801b13c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801b140:	8701      	strh	r1, [r0, #56]	; 0x38
 801b142:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801b144:	b901      	cbnz	r1, 801b148 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801b146:	86c5      	strh	r5, [r0, #54]	; 0x36
 801b148:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801b14a:	3901      	subs	r1, #1
 801b14c:	b289      	uxth	r1, r1
 801b14e:	86c1      	strh	r1, [r0, #54]	; 0x36
 801b150:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801b154:	844c      	strh	r4, [r1, #34]	; 0x22
 801b156:	e7ec      	b.n	801b132 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801b158:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b15c:	f7ff bf4b 	b.w	801aff6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801b160 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801b160:	b570      	push	{r4, r5, r6, lr}
 801b162:	2500      	movs	r5, #0
 801b164:	4295      	cmp	r5, r2
 801b166:	d011      	beq.n	801b18c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801b168:	8bc4      	ldrh	r4, [r0, #30]
 801b16a:	f831 6b02 	ldrh.w	r6, [r1], #2
 801b16e:	4414      	add	r4, r2
 801b170:	3c01      	subs	r4, #1
 801b172:	1b64      	subs	r4, r4, r5
 801b174:	b2a4      	uxth	r4, r4
 801b176:	2c01      	cmp	r4, #1
 801b178:	bf88      	it	hi
 801b17a:	3c02      	subhi	r4, #2
 801b17c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b180:	8b64      	ldrh	r4, [r4, #26]
 801b182:	42b4      	cmp	r4, r6
 801b184:	d117      	bne.n	801b1b6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801b186:	3501      	adds	r5, #1
 801b188:	b2ad      	uxth	r5, r5
 801b18a:	e7eb      	b.n	801b164 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801b18c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b190:	2400      	movs	r4, #0
 801b192:	4413      	add	r3, r2
 801b194:	b2a2      	uxth	r2, r4
 801b196:	429a      	cmp	r2, r3
 801b198:	da0f      	bge.n	801b1ba <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801b19a:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 801b19c:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801b1a0:	4432      	add	r2, r6
 801b1a2:	b292      	uxth	r2, r2
 801b1a4:	2a09      	cmp	r2, #9
 801b1a6:	bf88      	it	hi
 801b1a8:	3a0a      	subhi	r2, #10
 801b1aa:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801b1ae:	3401      	adds	r4, #1
 801b1b0:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801b1b2:	42aa      	cmp	r2, r5
 801b1b4:	d0ee      	beq.n	801b194 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801b1b6:	2000      	movs	r0, #0
 801b1b8:	bd70      	pop	{r4, r5, r6, pc}
 801b1ba:	2001      	movs	r0, #1
 801b1bc:	e7fc      	b.n	801b1b8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801b1be <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801b1be:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b1c2:	4605      	mov	r5, r0
 801b1c4:	4616      	mov	r6, r2
 801b1c6:	1c8c      	adds	r4, r1, #2
 801b1c8:	8809      	ldrh	r1, [r1, #0]
 801b1ca:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801b1ce:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801b1d2:	42b3      	cmp	r3, r6
 801b1d4:	d124      	bne.n	801b220 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801b1d6:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801b1da:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801b1de:	f001 070f 	and.w	r7, r1, #15
 801b1e2:	f8cd 8000 	str.w	r8, [sp]
 801b1e6:	464b      	mov	r3, r9
 801b1e8:	4652      	mov	r2, sl
 801b1ea:	4621      	mov	r1, r4
 801b1ec:	4628      	mov	r0, r5
 801b1ee:	f7ff ffb7 	bl	801b160 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801b1f2:	4683      	mov	fp, r0
 801b1f4:	b168      	cbz	r0, 801b212 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801b1f6:	eb0a 0109 	add.w	r1, sl, r9
 801b1fa:	4441      	add	r1, r8
 801b1fc:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801b200:	463a      	mov	r2, r7
 801b202:	4649      	mov	r1, r9
 801b204:	4628      	mov	r0, r5
 801b206:	f7ff ff53 	bl	801b0b0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801b20a:	4658      	mov	r0, fp
 801b20c:	b003      	add	sp, #12
 801b20e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b212:	eb07 010a 	add.w	r1, r7, sl
 801b216:	4449      	add	r1, r9
 801b218:	4441      	add	r1, r8
 801b21a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801b21e:	e7d2      	b.n	801b1c6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801b220:	f04f 0b00 	mov.w	fp, #0
 801b224:	e7f1      	b.n	801b20a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801b226 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801b226:	b570      	push	{r4, r5, r6, lr}
 801b228:	8810      	ldrh	r0, [r2, #0]
 801b22a:	4298      	cmp	r0, r3
 801b22c:	d817      	bhi.n	801b25e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b22e:	1e48      	subs	r0, r1, #1
 801b230:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801b234:	4298      	cmp	r0, r3
 801b236:	d312      	bcc.n	801b25e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b238:	2400      	movs	r4, #0
 801b23a:	428c      	cmp	r4, r1
 801b23c:	d20f      	bcs.n	801b25e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b23e:	1860      	adds	r0, r4, r1
 801b240:	1040      	asrs	r0, r0, #1
 801b242:	0085      	lsls	r5, r0, #2
 801b244:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801b248:	42b3      	cmp	r3, r6
 801b24a:	d902      	bls.n	801b252 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801b24c:	3001      	adds	r0, #1
 801b24e:	b284      	uxth	r4, r0
 801b250:	e7f3      	b.n	801b23a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b252:	d201      	bcs.n	801b258 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801b254:	b281      	uxth	r1, r0
 801b256:	e7f0      	b.n	801b23a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b258:	442a      	add	r2, r5
 801b25a:	8850      	ldrh	r0, [r2, #2]
 801b25c:	bd70      	pop	{r4, r5, r6, pc}
 801b25e:	2000      	movs	r0, #0
 801b260:	e7fc      	b.n	801b25c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801b262 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801b262:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b266:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801b268:	886f      	ldrh	r7, [r5, #2]
 801b26a:	4604      	mov	r4, r0
 801b26c:	087f      	lsrs	r7, r7, #1
 801b26e:	260b      	movs	r6, #11
 801b270:	3e01      	subs	r6, #1
 801b272:	d013      	beq.n	801b29c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801b274:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801b276:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b27a:	462a      	mov	r2, r5
 801b27c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b280:	4639      	mov	r1, r7
 801b282:	4643      	mov	r3, r8
 801b284:	4620      	mov	r0, r4
 801b286:	f7ff ffce 	bl	801b226 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801b28a:	b138      	cbz	r0, 801b29c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801b28c:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801b290:	4642      	mov	r2, r8
 801b292:	4620      	mov	r0, r4
 801b294:	f7ff ff93 	bl	801b1be <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801b298:	2800      	cmp	r0, #0
 801b29a:	d1e9      	bne.n	801b270 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801b29c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801b2a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801b2a0:	b570      	push	{r4, r5, r6, lr}
 801b2a2:	694a      	ldr	r2, [r1, #20]
 801b2a4:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801b2a6:	684b      	ldr	r3, [r1, #4]
 801b2a8:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801b2aa:	1b54      	subs	r4, r2, r5
 801b2ac:	f000 8106 	beq.w	801b4bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801b2b0:	1b9b      	subs	r3, r3, r6
 801b2b2:	d003      	beq.n	801b2bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801b2b4:	4363      	muls	r3, r4
 801b2b6:	2210      	movs	r2, #16
 801b2b8:	fb93 f3f2 	sdiv	r3, r3, r2
 801b2bc:	680c      	ldr	r4, [r1, #0]
 801b2be:	698a      	ldr	r2, [r1, #24]
 801b2c0:	1b65      	subs	r5, r4, r5
 801b2c2:	f000 80fd 	beq.w	801b4c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801b2c6:	1b92      	subs	r2, r2, r6
 801b2c8:	d003      	beq.n	801b2d2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801b2ca:	436a      	muls	r2, r5
 801b2cc:	2410      	movs	r4, #16
 801b2ce:	fb92 f2f4 	sdiv	r2, r2, r4
 801b2d2:	1a9b      	subs	r3, r3, r2
 801b2d4:	ee07 3a90 	vmov	s15, r3
 801b2d8:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801b4fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801b2dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b2e0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b2e4:	ee67 7a84 	vmul.f32	s15, s15, s8
 801b2e8:	460a      	mov	r2, r1
 801b2ea:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801b2ee:	4603      	mov	r3, r0
 801b2f0:	f100 040c 	add.w	r4, r0, #12
 801b2f4:	eeb1 6a43 	vneg.f32	s12, s6
 801b2f8:	edd2 7a02 	vldr	s15, [r2, #8]
 801b2fc:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801b300:	3214      	adds	r2, #20
 801b302:	ece3 6a01 	vstmia	r3!, {s13}
 801b306:	ed52 7a02 	vldr	s15, [r2, #-8]
 801b30a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b30e:	429c      	cmp	r4, r3
 801b310:	edc3 7a02 	vstr	s15, [r3, #8]
 801b314:	ed52 7a01 	vldr	s15, [r2, #-4]
 801b318:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b31c:	edc3 7a05 	vstr	s15, [r3, #20]
 801b320:	d1ea      	bne.n	801b2f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801b322:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b324:	698b      	ldr	r3, [r1, #24]
 801b326:	edd0 4a02 	vldr	s9, [r0, #8]
 801b32a:	edd0 3a00 	vldr	s7, [r0]
 801b32e:	edd0 6a01 	vldr	s13, [r0, #4]
 801b332:	ed90 5a05 	vldr	s10, [r0, #20]
 801b336:	ed90 2a03 	vldr	s4, [r0, #12]
 801b33a:	edd0 5a04 	vldr	s11, [r0, #16]
 801b33e:	ed90 1a07 	vldr	s2, [r0, #28]
 801b342:	edd0 2a06 	vldr	s5, [r0, #24]
 801b346:	1a9b      	subs	r3, r3, r2
 801b348:	ee07 3a90 	vmov	s15, r3
 801b34c:	684b      	ldr	r3, [r1, #4]
 801b34e:	1a9b      	subs	r3, r3, r2
 801b350:	ee07 3a10 	vmov	s14, r3
 801b354:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b358:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801b35c:	ee67 7a84 	vmul.f32	s15, s15, s8
 801b360:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801b364:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b368:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801b36c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b370:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801b374:	eee6 7a87 	vfma.f32	s15, s13, s14
 801b378:	ee32 5a45 	vsub.f32	s10, s4, s10
 801b37c:	ee67 7a83 	vmul.f32	s15, s15, s6
 801b380:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 801b384:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b386:	694a      	ldr	r2, [r1, #20]
 801b388:	1b13      	subs	r3, r2, r4
 801b38a:	ee07 3a10 	vmov	s14, r3
 801b38e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b392:	680b      	ldr	r3, [r1, #0]
 801b394:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b398:	1b1b      	subs	r3, r3, r4
 801b39a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801b39e:	ee07 3a10 	vmov	s14, r3
 801b3a2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b3a6:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b3aa:	eee6 4a87 	vfma.f32	s9, s13, s14
 801b3ae:	ee64 4a86 	vmul.f32	s9, s9, s12
 801b3b2:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801b3b6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b3b8:	698b      	ldr	r3, [r1, #24]
 801b3ba:	1a9b      	subs	r3, r3, r2
 801b3bc:	ee06 3a90 	vmov	s13, r3
 801b3c0:	684b      	ldr	r3, [r1, #4]
 801b3c2:	1a9b      	subs	r3, r3, r2
 801b3c4:	ee07 3a10 	vmov	s14, r3
 801b3c8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801b3cc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b3d0:	ee66 6a84 	vmul.f32	s13, s13, s8
 801b3d4:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b3d8:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801b3dc:	eee5 6a87 	vfma.f32	s13, s11, s14
 801b3e0:	ee66 6a83 	vmul.f32	s13, s13, s6
 801b3e4:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801b3e8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b3ea:	694a      	ldr	r2, [r1, #20]
 801b3ec:	1b13      	subs	r3, r2, r4
 801b3ee:	ee07 3a10 	vmov	s14, r3
 801b3f2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b3f6:	680b      	ldr	r3, [r1, #0]
 801b3f8:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b3fc:	1b1b      	subs	r3, r3, r4
 801b3fe:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801b402:	ee07 3a10 	vmov	s14, r3
 801b406:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b40a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b40e:	eea5 5a87 	vfma.f32	s10, s11, s14
 801b412:	edd0 5a08 	vldr	s11, [r0, #32]
 801b416:	ee25 5a06 	vmul.f32	s10, s10, s12
 801b41a:	ee31 1a65 	vsub.f32	s2, s2, s11
 801b41e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801b422:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b424:	698b      	ldr	r3, [r1, #24]
 801b426:	1a9b      	subs	r3, r3, r2
 801b428:	ee07 3a10 	vmov	s14, r3
 801b42c:	684b      	ldr	r3, [r1, #4]
 801b42e:	1a9b      	subs	r3, r3, r2
 801b430:	ee01 3a90 	vmov	s3, r3
 801b434:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b438:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801b43c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b440:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801b444:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801b448:	ee61 1a84 	vmul.f32	s3, s3, s8
 801b44c:	eea1 7a21 	vfma.f32	s14, s2, s3
 801b450:	ee27 7a03 	vmul.f32	s14, s14, s6
 801b454:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801b458:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b45a:	694a      	ldr	r2, [r1, #20]
 801b45c:	1b13      	subs	r3, r2, r4
 801b45e:	ee03 3a10 	vmov	s6, r3
 801b462:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801b466:	680b      	ldr	r3, [r1, #0]
 801b468:	ee23 3a04 	vmul.f32	s6, s6, s8
 801b46c:	1b1b      	subs	r3, r3, r4
 801b46e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801b472:	ee03 3a10 	vmov	s6, r3
 801b476:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801b47a:	ee23 4a04 	vmul.f32	s8, s6, s8
 801b47e:	eee1 5a04 	vfma.f32	s11, s2, s8
 801b482:	ee25 6a86 	vmul.f32	s12, s11, s12
 801b486:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801b48a:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801b48e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801b492:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801b496:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b49a:	dd13      	ble.n	801b4c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801b49c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801b4a0:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801b4a4:	63c3      	str	r3, [r0, #60]	; 0x3c
 801b4a6:	eee3 7a87 	vfma.f32	s15, s7, s14
 801b4aa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801b4ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4b2:	dd15      	ble.n	801b4e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801b4b4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801b4b8:	6403      	str	r3, [r0, #64]	; 0x40
 801b4ba:	bd70      	pop	{r4, r5, r6, pc}
 801b4bc:	4623      	mov	r3, r4
 801b4be:	e6fd      	b.n	801b2bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801b4c0:	462a      	mov	r2, r5
 801b4c2:	e706      	b.n	801b2d2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801b4c4:	d502      	bpl.n	801b4cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801b4c6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801b4ca:	e7e9      	b.n	801b4a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801b4cc:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801b4d0:	eea3 2a85 	vfma.f32	s4, s7, s10
 801b4d4:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801b4d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4dc:	dade      	bge.n	801b49c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801b4de:	e7f2      	b.n	801b4c6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801b4e0:	d502      	bpl.n	801b4e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801b4e2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801b4e6:	e7e7      	b.n	801b4b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801b4e8:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801b4ec:	eee3 4a86 	vfma.f32	s9, s7, s12
 801b4f0:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801b4f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b4f8:	dadc      	bge.n	801b4b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801b4fa:	e7f2      	b.n	801b4e2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801b4fc:	3d800000 	.word	0x3d800000

0801b500 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801b500:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b504:	2714      	movs	r7, #20
 801b506:	435f      	muls	r7, r3
 801b508:	eb02 0c07 	add.w	ip, r2, r7
 801b50c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801b510:	f115 0e0f 	adds.w	lr, r5, #15
 801b514:	f100 80a2 	bmi.w	801b65c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801b518:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801b51c:	9c08      	ldr	r4, [sp, #32]
 801b51e:	f8c0 e014 	str.w	lr, [r0, #20]
 801b522:	2614      	movs	r6, #20
 801b524:	4366      	muls	r6, r4
 801b526:	eb02 0806 	add.w	r8, r2, r6
 801b52a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801b52e:	f115 040f 	adds.w	r4, r5, #15
 801b532:	f100 809f 	bmi.w	801b674 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801b536:	1124      	asrs	r4, r4, #4
 801b538:	eba4 040e 	sub.w	r4, r4, lr
 801b53c:	6184      	str	r4, [r0, #24]
 801b53e:	2c00      	cmp	r4, #0
 801b540:	f000 808a 	beq.w	801b658 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801b544:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801b548:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801b54c:	5995      	ldr	r5, [r2, r6]
 801b54e:	eba4 0809 	sub.w	r8, r4, r9
 801b552:	59d4      	ldr	r4, [r2, r7]
 801b554:	eba5 0a04 	sub.w	sl, r5, r4
 801b558:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801b55c:	fb0e fe05 	mul.w	lr, lr, r5
 801b560:	fb0a ee19 	mls	lr, sl, r9, lr
 801b564:	fb08 e404 	mla	r4, r8, r4, lr
 801b568:	ea4f 1608 	mov.w	r6, r8, lsl #4
 801b56c:	3c01      	subs	r4, #1
 801b56e:	19a4      	adds	r4, r4, r6
 801b570:	f100 808c 	bmi.w	801b68c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801b574:	fb94 fef6 	sdiv	lr, r4, r6
 801b578:	f8c0 e000 	str.w	lr, [r0]
 801b57c:	fb06 441e 	mls	r4, r6, lr, r4
 801b580:	6104      	str	r4, [r0, #16]
 801b582:	2d00      	cmp	r5, #0
 801b584:	f2c0 8095 	blt.w	801b6b2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801b588:	fb95 f4f6 	sdiv	r4, r5, r6
 801b58c:	6044      	str	r4, [r0, #4]
 801b58e:	fb06 5514 	mls	r5, r6, r4, r5
 801b592:	6085      	str	r5, [r0, #8]
 801b594:	60c6      	str	r6, [r0, #12]
 801b596:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801b59a:	6945      	ldr	r5, [r0, #20]
 801b59c:	59d2      	ldr	r2, [r2, r7]
 801b59e:	eddf 6a4d 	vldr	s13, [pc, #308]	; 801b6d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801b5a2:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801b5a6:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801b5aa:	ee07 4a10 	vmov	s14, r4
 801b5ae:	6804      	ldr	r4, [r0, #0]
 801b5b0:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801b5b4:	ee07 2a90 	vmov	s15, r2
 801b5b8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b5bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b5c0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b5c4:	ee27 7a26 	vmul.f32	s14, s14, s13
 801b5c8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b5cc:	edd3 6a00 	vldr	s13, [r3]
 801b5d0:	eee6 6a07 	vfma.f32	s13, s12, s14
 801b5d4:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801b5d8:	eee6 6a27 	vfma.f32	s13, s12, s15
 801b5dc:	edc0 6a07 	vstr	s13, [r0, #28]
 801b5e0:	edd0 6a01 	vldr	s13, [r0, #4]
 801b5e4:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801b5e8:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801b5ec:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801b5f0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801b5f4:	ed80 6a08 	vstr	s12, [r0, #32]
 801b5f8:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801b5fa:	6242      	str	r2, [r0, #36]	; 0x24
 801b5fc:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801b600:	ed93 6a03 	vldr	s12, [r3, #12]
 801b604:	eea5 6a87 	vfma.f32	s12, s11, s14
 801b608:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801b60c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801b610:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 801b614:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801b618:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 801b61c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801b620:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 801b624:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b626:	6302      	str	r2, [r0, #48]	; 0x30
 801b628:	ed93 6a06 	vldr	s12, [r3, #24]
 801b62c:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801b630:	eea5 6a87 	vfma.f32	s12, s11, s14
 801b634:	eeb0 7a46 	vmov.f32	s14, s12
 801b638:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 801b63c:	eea6 7a27 	vfma.f32	s14, s12, s15
 801b640:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801b644:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 801b648:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 801b64c:	eee6 7a87 	vfma.f32	s15, s13, s14
 801b650:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 801b654:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801b656:	63c3      	str	r3, [r0, #60]	; 0x3c
 801b658:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b65c:	f1c5 0501 	rsb	r5, r5, #1
 801b660:	f015 050f 	ands.w	r5, r5, #15
 801b664:	bf18      	it	ne
 801b666:	2501      	movne	r5, #1
 801b668:	2410      	movs	r4, #16
 801b66a:	fb9e fef4 	sdiv	lr, lr, r4
 801b66e:	ebae 0e05 	sub.w	lr, lr, r5
 801b672:	e753      	b.n	801b51c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 801b674:	f1c5 0501 	rsb	r5, r5, #1
 801b678:	f015 050f 	ands.w	r5, r5, #15
 801b67c:	bf18      	it	ne
 801b67e:	2501      	movne	r5, #1
 801b680:	f04f 0910 	mov.w	r9, #16
 801b684:	fb94 f4f9 	sdiv	r4, r4, r9
 801b688:	1b64      	subs	r4, r4, r5
 801b68a:	e755      	b.n	801b538 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 801b68c:	4264      	negs	r4, r4
 801b68e:	fb94 fef6 	sdiv	lr, r4, r6
 801b692:	f1ce 0800 	rsb	r8, lr, #0
 801b696:	fb06 441e 	mls	r4, r6, lr, r4
 801b69a:	f8c0 8000 	str.w	r8, [r0]
 801b69e:	6104      	str	r4, [r0, #16]
 801b6a0:	2c00      	cmp	r4, #0
 801b6a2:	f43f af6e 	beq.w	801b582 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801b6a6:	ea6f 0e0e 	mvn.w	lr, lr
 801b6aa:	f8c0 e000 	str.w	lr, [r0]
 801b6ae:	1b34      	subs	r4, r6, r4
 801b6b0:	e766      	b.n	801b580 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801b6b2:	426d      	negs	r5, r5
 801b6b4:	fb95 f4f6 	sdiv	r4, r5, r6
 801b6b8:	f1c4 0e00 	rsb	lr, r4, #0
 801b6bc:	fb06 5514 	mls	r5, r6, r4, r5
 801b6c0:	f8c0 e004 	str.w	lr, [r0, #4]
 801b6c4:	6085      	str	r5, [r0, #8]
 801b6c6:	2d00      	cmp	r5, #0
 801b6c8:	f43f af64 	beq.w	801b594 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801b6cc:	43e4      	mvns	r4, r4
 801b6ce:	6044      	str	r4, [r0, #4]
 801b6d0:	1b75      	subs	r5, r6, r5
 801b6d2:	e75e      	b.n	801b592 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 801b6d4:	3d800000 	.word	0x3d800000

0801b6d8 <_ZN8touchgfx7Unicode6strlenEPKt>:
 801b6d8:	4602      	mov	r2, r0
 801b6da:	b148      	cbz	r0, 801b6f0 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801b6dc:	2300      	movs	r3, #0
 801b6de:	b298      	uxth	r0, r3
 801b6e0:	3301      	adds	r3, #1
 801b6e2:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801b6e6:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801b6ea:	2900      	cmp	r1, #0
 801b6ec:	d1f7      	bne.n	801b6de <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801b6ee:	4770      	bx	lr
 801b6f0:	4770      	bx	lr

0801b6f2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801b6f2:	b530      	push	{r4, r5, lr}
 801b6f4:	4604      	mov	r4, r0
 801b6f6:	b159      	cbz	r1, 801b710 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801b6f8:	b148      	cbz	r0, 801b70e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801b6fa:	2300      	movs	r3, #0
 801b6fc:	b298      	uxth	r0, r3
 801b6fe:	4282      	cmp	r2, r0
 801b700:	d905      	bls.n	801b70e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801b702:	5ccd      	ldrb	r5, [r1, r3]
 801b704:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801b708:	3301      	adds	r3, #1
 801b70a:	2d00      	cmp	r5, #0
 801b70c:	d1f6      	bne.n	801b6fc <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801b70e:	bd30      	pop	{r4, r5, pc}
 801b710:	4608      	mov	r0, r1
 801b712:	e7fc      	b.n	801b70e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801b714 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 801b714:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b716:	b08b      	sub	sp, #44	; 0x2c
 801b718:	468c      	mov	ip, r1
 801b71a:	2100      	movs	r1, #0
 801b71c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801b720:	4604      	mov	r4, r0
 801b722:	261f      	movs	r6, #31
 801b724:	af01      	add	r7, sp, #4
 801b726:	fb94 fef3 	sdiv	lr, r4, r3
 801b72a:	fb03 441e 	mls	r4, r3, lr, r4
 801b72e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801b732:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801b736:	b2ec      	uxtb	r4, r5
 801b738:	2d09      	cmp	r5, #9
 801b73a:	bfd4      	ite	le
 801b73c:	3430      	addle	r4, #48	; 0x30
 801b73e:	3457      	addgt	r4, #87	; 0x57
 801b740:	b2e4      	uxtb	r4, r4
 801b742:	55bc      	strb	r4, [r7, r6]
 801b744:	4674      	mov	r4, lr
 801b746:	1e71      	subs	r1, r6, #1
 801b748:	b974      	cbnz	r4, 801b768 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801b74a:	2800      	cmp	r0, #0
 801b74c:	da05      	bge.n	801b75a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801b74e:	ab0a      	add	r3, sp, #40	; 0x28
 801b750:	4419      	add	r1, r3
 801b752:	232d      	movs	r3, #45	; 0x2d
 801b754:	f801 3c24 	strb.w	r3, [r1, #-36]
 801b758:	1eb1      	subs	r1, r6, #2
 801b75a:	3101      	adds	r1, #1
 801b75c:	4439      	add	r1, r7
 801b75e:	4660      	mov	r0, ip
 801b760:	f7ff ffc7 	bl	801b6f2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801b764:	b00b      	add	sp, #44	; 0x2c
 801b766:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b768:	460e      	mov	r6, r1
 801b76a:	e7dc      	b.n	801b726 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

0801b76c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 801b76c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b76e:	b08b      	sub	sp, #44	; 0x2c
 801b770:	468c      	mov	ip, r1
 801b772:	2100      	movs	r1, #0
 801b774:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801b778:	ae01      	add	r6, sp, #4
 801b77a:	211f      	movs	r1, #31
 801b77c:	fbb0 f7f3 	udiv	r7, r0, r3
 801b780:	fb03 0517 	mls	r5, r3, r7, r0
 801b784:	b2ec      	uxtb	r4, r5
 801b786:	2d09      	cmp	r5, #9
 801b788:	bfd4      	ite	le
 801b78a:	3430      	addle	r4, #48	; 0x30
 801b78c:	3457      	addgt	r4, #87	; 0x57
 801b78e:	b2e4      	uxtb	r4, r4
 801b790:	558c      	strb	r4, [r1, r6]
 801b792:	4638      	mov	r0, r7
 801b794:	1e4c      	subs	r4, r1, #1
 801b796:	b92f      	cbnz	r7, 801b7a4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801b798:	4431      	add	r1, r6
 801b79a:	4660      	mov	r0, ip
 801b79c:	f7ff ffa9 	bl	801b6f2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801b7a0:	b00b      	add	sp, #44	; 0x2c
 801b7a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b7a4:	4621      	mov	r1, r4
 801b7a6:	e7e9      	b.n	801b77c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801b7a8 <_ZN8touchgfx7Unicode4itoaElPtti>:
 801b7a8:	b410      	push	{r4}
 801b7aa:	b131      	cbz	r1, 801b7ba <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 801b7ac:	1e9c      	subs	r4, r3, #2
 801b7ae:	2c22      	cmp	r4, #34	; 0x22
 801b7b0:	d803      	bhi.n	801b7ba <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 801b7b2:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b7b6:	f7ff bfad 	b.w	801b714 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801b7ba:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b7be:	4770      	bx	lr

0801b7c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801b7c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b7c4:	4691      	mov	r9, r2
 801b7c6:	b085      	sub	sp, #20
 801b7c8:	6802      	ldr	r2, [r0, #0]
 801b7ca:	9201      	str	r2, [sp, #4]
 801b7cc:	4688      	mov	r8, r1
 801b7ce:	4683      	mov	fp, r0
 801b7d0:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 801b7d4:	9103      	str	r1, [sp, #12]
 801b7d6:	4610      	mov	r0, r2
 801b7d8:	461c      	mov	r4, r3
 801b7da:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801b7de:	9302      	str	r3, [sp, #8]
 801b7e0:	f7ff ff7a 	bl	801b6d8 <_ZN8touchgfx7Unicode6strlenEPKt>
 801b7e4:	f1b8 0f00 	cmp.w	r8, #0
 801b7e8:	bf0c      	ite	eq
 801b7ea:	4684      	moveq	ip, r0
 801b7ec:	f100 0c01 	addne.w	ip, r0, #1
 801b7f0:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 801b7f4:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801b7f8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801b7fa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b7fc:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 801b800:	9903      	ldr	r1, [sp, #12]
 801b802:	fa1f fc8c 	uxth.w	ip, ip
 801b806:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801b80a:	d041      	beq.n	801b890 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801b80c:	d834      	bhi.n	801b878 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801b80e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801b812:	d059      	beq.n	801b8c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 801b814:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801b818:	d03a      	beq.n	801b890 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801b81a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801b81e:	d034      	beq.n	801b88a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801b820:	2400      	movs	r4, #0
 801b822:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801b826:	3a01      	subs	r2, #1
 801b828:	b169      	cbz	r1, 801b846 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b82a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b82c:	458c      	cmp	ip, r1
 801b82e:	da09      	bge.n	801b844 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801b830:	eba1 010c 	sub.w	r1, r1, ip
 801b834:	b289      	uxth	r1, r1
 801b836:	b933      	cbnz	r3, 801b846 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b838:	2e00      	cmp	r6, #0
 801b83a:	d051      	beq.n	801b8e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801b83c:	2800      	cmp	r0, #0
 801b83e:	d04f      	beq.n	801b8e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801b840:	440c      	add	r4, r1
 801b842:	b2a4      	uxth	r4, r4
 801b844:	2100      	movs	r1, #0
 801b846:	682b      	ldr	r3, [r5, #0]
 801b848:	4293      	cmp	r3, r2
 801b84a:	da07      	bge.n	801b85c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801b84c:	f1b8 0f00 	cmp.w	r8, #0
 801b850:	d004      	beq.n	801b85c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801b852:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801b856:	682b      	ldr	r3, [r5, #0]
 801b858:	3301      	adds	r3, #1
 801b85a:	602b      	str	r3, [r5, #0]
 801b85c:	2730      	movs	r7, #48	; 0x30
 801b85e:	2c00      	cmp	r4, #0
 801b860:	d04e      	beq.n	801b900 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801b862:	682e      	ldr	r6, [r5, #0]
 801b864:	3c01      	subs	r4, #1
 801b866:	42b2      	cmp	r2, r6
 801b868:	b2a4      	uxth	r4, r4
 801b86a:	dd49      	ble.n	801b900 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801b86c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801b870:	682b      	ldr	r3, [r5, #0]
 801b872:	3301      	adds	r3, #1
 801b874:	602b      	str	r3, [r5, #0]
 801b876:	e7f2      	b.n	801b85e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801b878:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 801b87c:	d01d      	beq.n	801b8ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801b87e:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801b882:	d002      	beq.n	801b88a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801b884:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801b888:	e7c9      	b.n	801b81e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801b88a:	4684      	mov	ip, r0
 801b88c:	f04f 0800 	mov.w	r8, #0
 801b890:	2c00      	cmp	r4, #0
 801b892:	d0c6      	beq.n	801b822 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b894:	b947      	cbnz	r7, 801b8a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801b896:	2801      	cmp	r0, #1
 801b898:	d106      	bne.n	801b8a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801b89a:	8814      	ldrh	r4, [r2, #0]
 801b89c:	2c30      	cmp	r4, #48	; 0x30
 801b89e:	bf02      	ittt	eq
 801b8a0:	3202      	addeq	r2, #2
 801b8a2:	f8cb 2000 	streq.w	r2, [fp]
 801b8a6:	4638      	moveq	r0, r7
 801b8a8:	45bc      	cmp	ip, r7
 801b8aa:	da14      	bge.n	801b8d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801b8ac:	b2bf      	uxth	r7, r7
 801b8ae:	eba7 040c 	sub.w	r4, r7, ip
 801b8b2:	b2a4      	uxth	r4, r4
 801b8b4:	46bc      	mov	ip, r7
 801b8b6:	2600      	movs	r6, #0
 801b8b8:	e7b3      	b.n	801b822 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b8ba:	4684      	mov	ip, r0
 801b8bc:	b16c      	cbz	r4, 801b8da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801b8be:	42b8      	cmp	r0, r7
 801b8c0:	dd00      	ble.n	801b8c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801b8c2:	b2b8      	uxth	r0, r7
 801b8c4:	2400      	movs	r4, #0
 801b8c6:	e003      	b.n	801b8d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801b8c8:	f04f 0c01 	mov.w	ip, #1
 801b8cc:	2400      	movs	r4, #0
 801b8ce:	4660      	mov	r0, ip
 801b8d0:	4626      	mov	r6, r4
 801b8d2:	46a0      	mov	r8, r4
 801b8d4:	e7a5      	b.n	801b822 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b8d6:	2400      	movs	r4, #0
 801b8d8:	e7ed      	b.n	801b8b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801b8da:	4626      	mov	r6, r4
 801b8dc:	46a0      	mov	r8, r4
 801b8de:	e7a0      	b.n	801b822 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b8e0:	2900      	cmp	r1, #0
 801b8e2:	d0b0      	beq.n	801b846 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b8e4:	2720      	movs	r7, #32
 801b8e6:	682e      	ldr	r6, [r5, #0]
 801b8e8:	2900      	cmp	r1, #0
 801b8ea:	d0ac      	beq.n	801b846 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b8ec:	3901      	subs	r1, #1
 801b8ee:	4296      	cmp	r6, r2
 801b8f0:	b289      	uxth	r1, r1
 801b8f2:	daa7      	bge.n	801b844 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801b8f4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801b8f8:	682b      	ldr	r3, [r5, #0]
 801b8fa:	3301      	adds	r3, #1
 801b8fc:	602b      	str	r3, [r5, #0]
 801b8fe:	e7f2      	b.n	801b8e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801b900:	b188      	cbz	r0, 801b926 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801b902:	682b      	ldr	r3, [r5, #0]
 801b904:	3801      	subs	r0, #1
 801b906:	429a      	cmp	r2, r3
 801b908:	b280      	uxth	r0, r0
 801b90a:	dd0c      	ble.n	801b926 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801b90c:	f8db 3000 	ldr.w	r3, [fp]
 801b910:	1c9c      	adds	r4, r3, #2
 801b912:	f8cb 4000 	str.w	r4, [fp]
 801b916:	881c      	ldrh	r4, [r3, #0]
 801b918:	682b      	ldr	r3, [r5, #0]
 801b91a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801b91e:	682b      	ldr	r3, [r5, #0]
 801b920:	3301      	adds	r3, #1
 801b922:	602b      	str	r3, [r5, #0]
 801b924:	e7ec      	b.n	801b900 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801b926:	2620      	movs	r6, #32
 801b928:	b151      	cbz	r1, 801b940 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801b92a:	6828      	ldr	r0, [r5, #0]
 801b92c:	3901      	subs	r1, #1
 801b92e:	4282      	cmp	r2, r0
 801b930:	b289      	uxth	r1, r1
 801b932:	dd05      	ble.n	801b940 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801b934:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801b938:	682b      	ldr	r3, [r5, #0]
 801b93a:	3301      	adds	r3, #1
 801b93c:	602b      	str	r3, [r5, #0]
 801b93e:	e7f3      	b.n	801b928 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801b940:	b005      	add	sp, #20
 801b942:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b946 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801b946:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801b94a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801b94e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801b952:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801b956:	2400      	movs	r4, #0
 801b958:	8014      	strh	r4, [r2, #0]
 801b95a:	701c      	strb	r4, [r3, #0]
 801b95c:	f888 4000 	strb.w	r4, [r8]
 801b960:	f88c 4000 	strb.w	r4, [ip]
 801b964:	f88e 4000 	strb.w	r4, [lr]
 801b968:	703c      	strb	r4, [r7, #0]
 801b96a:	6804      	ldr	r4, [r0, #0]
 801b96c:	b1a4      	cbz	r4, 801b998 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801b96e:	8824      	ldrh	r4, [r4, #0]
 801b970:	f04f 0901 	mov.w	r9, #1
 801b974:	b314      	cbz	r4, 801b9bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801b976:	2c2b      	cmp	r4, #43	; 0x2b
 801b978:	d001      	beq.n	801b97e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801b97a:	2c20      	cmp	r4, #32
 801b97c:	d110      	bne.n	801b9a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801b97e:	8014      	strh	r4, [r2, #0]
 801b980:	6804      	ldr	r4, [r0, #0]
 801b982:	b10c      	cbz	r4, 801b988 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 801b984:	3402      	adds	r4, #2
 801b986:	6004      	str	r4, [r0, #0]
 801b988:	680c      	ldr	r4, [r1, #0]
 801b98a:	b10c      	cbz	r4, 801b990 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801b98c:	3401      	adds	r4, #1
 801b98e:	600c      	str	r4, [r1, #0]
 801b990:	6804      	ldr	r4, [r0, #0]
 801b992:	b17c      	cbz	r4, 801b9b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 801b994:	8824      	ldrh	r4, [r4, #0]
 801b996:	e7ed      	b.n	801b974 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801b998:	680c      	ldr	r4, [r1, #0]
 801b99a:	b17c      	cbz	r4, 801b9bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801b99c:	7824      	ldrb	r4, [r4, #0]
 801b99e:	e7e7      	b.n	801b970 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801b9a0:	2c2d      	cmp	r4, #45	; 0x2d
 801b9a2:	d102      	bne.n	801b9aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801b9a4:	f883 9000 	strb.w	r9, [r3]
 801b9a8:	e7ea      	b.n	801b980 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801b9aa:	2c23      	cmp	r4, #35	; 0x23
 801b9ac:	d107      	bne.n	801b9be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801b9ae:	f888 9000 	strb.w	r9, [r8]
 801b9b2:	e7e5      	b.n	801b980 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801b9b4:	680c      	ldr	r4, [r1, #0]
 801b9b6:	b10c      	cbz	r4, 801b9bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801b9b8:	7824      	ldrb	r4, [r4, #0]
 801b9ba:	e7db      	b.n	801b974 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801b9bc:	2400      	movs	r4, #0
 801b9be:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801b9c2:	2b09      	cmp	r3, #9
 801b9c4:	d901      	bls.n	801b9ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801b9c6:	2c2a      	cmp	r4, #42	; 0x2a
 801b9c8:	d122      	bne.n	801ba10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801b9ca:	2301      	movs	r3, #1
 801b9cc:	2c30      	cmp	r4, #48	; 0x30
 801b9ce:	f88e 3000 	strb.w	r3, [lr]
 801b9d2:	d10d      	bne.n	801b9f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801b9d4:	f88c 3000 	strb.w	r3, [ip]
 801b9d8:	6803      	ldr	r3, [r0, #0]
 801b9da:	b10b      	cbz	r3, 801b9e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801b9dc:	3302      	adds	r3, #2
 801b9de:	6003      	str	r3, [r0, #0]
 801b9e0:	680b      	ldr	r3, [r1, #0]
 801b9e2:	b10b      	cbz	r3, 801b9e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801b9e4:	3301      	adds	r3, #1
 801b9e6:	600b      	str	r3, [r1, #0]
 801b9e8:	6803      	ldr	r3, [r0, #0]
 801b9ea:	2b00      	cmp	r3, #0
 801b9ec:	d02f      	beq.n	801ba4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801b9ee:	881c      	ldrh	r4, [r3, #0]
 801b9f0:	2c2a      	cmp	r4, #42	; 0x2a
 801b9f2:	d135      	bne.n	801ba60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801b9f4:	f04f 33ff 	mov.w	r3, #4294967295
 801b9f8:	6033      	str	r3, [r6, #0]
 801b9fa:	6803      	ldr	r3, [r0, #0]
 801b9fc:	b10b      	cbz	r3, 801ba02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801b9fe:	3302      	adds	r3, #2
 801ba00:	6003      	str	r3, [r0, #0]
 801ba02:	680b      	ldr	r3, [r1, #0]
 801ba04:	b10b      	cbz	r3, 801ba0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801ba06:	3301      	adds	r3, #1
 801ba08:	600b      	str	r3, [r1, #0]
 801ba0a:	6803      	ldr	r3, [r0, #0]
 801ba0c:	b31b      	cbz	r3, 801ba56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801ba0e:	881c      	ldrh	r4, [r3, #0]
 801ba10:	2c2e      	cmp	r4, #46	; 0x2e
 801ba12:	d11a      	bne.n	801ba4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801ba14:	2301      	movs	r3, #1
 801ba16:	703b      	strb	r3, [r7, #0]
 801ba18:	6803      	ldr	r3, [r0, #0]
 801ba1a:	b10b      	cbz	r3, 801ba20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801ba1c:	3302      	adds	r3, #2
 801ba1e:	6003      	str	r3, [r0, #0]
 801ba20:	680b      	ldr	r3, [r1, #0]
 801ba22:	b10b      	cbz	r3, 801ba28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801ba24:	3301      	adds	r3, #1
 801ba26:	600b      	str	r3, [r1, #0]
 801ba28:	6803      	ldr	r3, [r0, #0]
 801ba2a:	2b00      	cmp	r3, #0
 801ba2c:	d036      	beq.n	801ba9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801ba2e:	881b      	ldrh	r3, [r3, #0]
 801ba30:	2b2a      	cmp	r3, #42	; 0x2a
 801ba32:	d137      	bne.n	801baa4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801ba34:	f04f 33ff 	mov.w	r3, #4294967295
 801ba38:	602b      	str	r3, [r5, #0]
 801ba3a:	6803      	ldr	r3, [r0, #0]
 801ba3c:	b10b      	cbz	r3, 801ba42 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801ba3e:	3302      	adds	r3, #2
 801ba40:	6003      	str	r3, [r0, #0]
 801ba42:	680b      	ldr	r3, [r1, #0]
 801ba44:	b10b      	cbz	r3, 801ba4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801ba46:	3301      	adds	r3, #1
 801ba48:	600b      	str	r3, [r1, #0]
 801ba4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801ba4e:	680c      	ldr	r4, [r1, #0]
 801ba50:	b134      	cbz	r4, 801ba60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801ba52:	7824      	ldrb	r4, [r4, #0]
 801ba54:	e7cc      	b.n	801b9f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801ba56:	680b      	ldr	r3, [r1, #0]
 801ba58:	2b00      	cmp	r3, #0
 801ba5a:	d0f6      	beq.n	801ba4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801ba5c:	781c      	ldrb	r4, [r3, #0]
 801ba5e:	e7d7      	b.n	801ba10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801ba60:	2300      	movs	r3, #0
 801ba62:	6033      	str	r3, [r6, #0]
 801ba64:	220a      	movs	r2, #10
 801ba66:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801ba6a:	fa1f f38c 	uxth.w	r3, ip
 801ba6e:	2b09      	cmp	r3, #9
 801ba70:	d8ce      	bhi.n	801ba10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801ba72:	6833      	ldr	r3, [r6, #0]
 801ba74:	fb02 c303 	mla	r3, r2, r3, ip
 801ba78:	6033      	str	r3, [r6, #0]
 801ba7a:	6803      	ldr	r3, [r0, #0]
 801ba7c:	b10b      	cbz	r3, 801ba82 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801ba7e:	3302      	adds	r3, #2
 801ba80:	6003      	str	r3, [r0, #0]
 801ba82:	680b      	ldr	r3, [r1, #0]
 801ba84:	b10b      	cbz	r3, 801ba8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801ba86:	3301      	adds	r3, #1
 801ba88:	600b      	str	r3, [r1, #0]
 801ba8a:	6803      	ldr	r3, [r0, #0]
 801ba8c:	b10b      	cbz	r3, 801ba92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801ba8e:	881c      	ldrh	r4, [r3, #0]
 801ba90:	e7e9      	b.n	801ba66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801ba92:	680c      	ldr	r4, [r1, #0]
 801ba94:	2c00      	cmp	r4, #0
 801ba96:	d0e6      	beq.n	801ba66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801ba98:	7824      	ldrb	r4, [r4, #0]
 801ba9a:	e7e4      	b.n	801ba66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801ba9c:	680b      	ldr	r3, [r1, #0]
 801ba9e:	b10b      	cbz	r3, 801baa4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801baa0:	781b      	ldrb	r3, [r3, #0]
 801baa2:	e7c5      	b.n	801ba30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801baa4:	2200      	movs	r2, #0
 801baa6:	602a      	str	r2, [r5, #0]
 801baa8:	240a      	movs	r4, #10
 801baaa:	3b30      	subs	r3, #48	; 0x30
 801baac:	b29e      	uxth	r6, r3
 801baae:	2e09      	cmp	r6, #9
 801bab0:	682a      	ldr	r2, [r5, #0]
 801bab2:	d813      	bhi.n	801badc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801bab4:	fb04 3302 	mla	r3, r4, r2, r3
 801bab8:	602b      	str	r3, [r5, #0]
 801baba:	6803      	ldr	r3, [r0, #0]
 801babc:	b10b      	cbz	r3, 801bac2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801babe:	3302      	adds	r3, #2
 801bac0:	6003      	str	r3, [r0, #0]
 801bac2:	680b      	ldr	r3, [r1, #0]
 801bac4:	b10b      	cbz	r3, 801baca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801bac6:	3301      	adds	r3, #1
 801bac8:	600b      	str	r3, [r1, #0]
 801baca:	6803      	ldr	r3, [r0, #0]
 801bacc:	b10b      	cbz	r3, 801bad2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801bace:	881b      	ldrh	r3, [r3, #0]
 801bad0:	e7eb      	b.n	801baaa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801bad2:	680b      	ldr	r3, [r1, #0]
 801bad4:	2b00      	cmp	r3, #0
 801bad6:	d0e8      	beq.n	801baaa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801bad8:	781b      	ldrb	r3, [r3, #0]
 801bada:	e7e6      	b.n	801baaa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801badc:	2a06      	cmp	r2, #6
 801bade:	bfa8      	it	ge
 801bae0:	2206      	movge	r2, #6
 801bae2:	602a      	str	r2, [r5, #0]
 801bae4:	e7b1      	b.n	801ba4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801bae6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801bae6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801baea:	b0a3      	sub	sp, #140	; 0x8c
 801baec:	2600      	movs	r6, #0
 801baee:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 801baf2:	4607      	mov	r7, r0
 801baf4:	4688      	mov	r8, r1
 801baf6:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801bafa:	4631      	mov	r1, r6
 801bafc:	2242      	movs	r2, #66	; 0x42
 801bafe:	4648      	mov	r0, r9
 801bb00:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801bb02:	960d      	str	r6, [sp, #52]	; 0x34
 801bb04:	f012 f9fd 	bl	802df02 <memset>
 801bb08:	b15f      	cbz	r7, 801bb22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801bb0a:	f108 3aff 	add.w	sl, r8, #4294967295
 801bb0e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bb10:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bb12:	b152      	cbz	r2, 801bb2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801bb14:	8812      	ldrh	r2, [r2, #0]
 801bb16:	b10a      	cbz	r2, 801bb1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801bb18:	459a      	cmp	sl, r3
 801bb1a:	dc2e      	bgt.n	801bb7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801bb1c:	2200      	movs	r2, #0
 801bb1e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801bb22:	4638      	mov	r0, r7
 801bb24:	b023      	add	sp, #140	; 0x8c
 801bb26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bb2a:	9a08      	ldr	r2, [sp, #32]
 801bb2c:	2a00      	cmp	r2, #0
 801bb2e:	d0f5      	beq.n	801bb1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801bb30:	7812      	ldrb	r2, [r2, #0]
 801bb32:	e7f0      	b.n	801bb16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801bb34:	2d00      	cmp	r5, #0
 801bb36:	d0ea      	beq.n	801bb0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bb38:	782a      	ldrb	r2, [r5, #0]
 801bb3a:	b142      	cbz	r2, 801bb4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801bb3c:	2a25      	cmp	r2, #37	; 0x25
 801bb3e:	d001      	beq.n	801bb44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801bb40:	459a      	cmp	sl, r3
 801bb42:	dc08      	bgt.n	801bb56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801bb44:	f1bb 0f00 	cmp.w	fp, #0
 801bb48:	d121      	bne.n	801bb8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801bb4a:	2d00      	cmp	r5, #0
 801bb4c:	d0df      	beq.n	801bb0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bb4e:	782a      	ldrb	r2, [r5, #0]
 801bb50:	f04f 0b00 	mov.w	fp, #0
 801bb54:	e01d      	b.n	801bb92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801bb56:	f1bb 0f00 	cmp.w	fp, #0
 801bb5a:	d078      	beq.n	801bc4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801bb5c:	f8bb 2000 	ldrh.w	r2, [fp]
 801bb60:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801bb64:	f1bb 0f00 	cmp.w	fp, #0
 801bb68:	d002      	beq.n	801bb70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801bb6a:	f10b 0202 	add.w	r2, fp, #2
 801bb6e:	9209      	str	r2, [sp, #36]	; 0x24
 801bb70:	b10d      	cbz	r5, 801bb76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801bb72:	3501      	adds	r5, #1
 801bb74:	9508      	str	r5, [sp, #32]
 801bb76:	3301      	adds	r3, #1
 801bb78:	930d      	str	r3, [sp, #52]	; 0x34
 801bb7a:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801bb7e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bb80:	f1bb 0f00 	cmp.w	fp, #0
 801bb84:	d0d6      	beq.n	801bb34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801bb86:	f8bb 2000 	ldrh.w	r2, [fp]
 801bb8a:	2a00      	cmp	r2, #0
 801bb8c:	d1d6      	bne.n	801bb3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801bb8e:	f8bb 2000 	ldrh.w	r2, [fp]
 801bb92:	2a00      	cmp	r2, #0
 801bb94:	d0bb      	beq.n	801bb0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bb96:	459a      	cmp	sl, r3
 801bb98:	ddb9      	ble.n	801bb0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bb9a:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 801bb9e:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 801bba2:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801bba6:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801bbaa:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 801bbae:	960e      	str	r6, [sp, #56]	; 0x38
 801bbb0:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 801bbb4:	960f      	str	r6, [sp, #60]	; 0x3c
 801bbb6:	f1bb 0f00 	cmp.w	fp, #0
 801bbba:	d002      	beq.n	801bbc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801bbbc:	f10b 0302 	add.w	r3, fp, #2
 801bbc0:	9309      	str	r3, [sp, #36]	; 0x24
 801bbc2:	b10d      	cbz	r5, 801bbc8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 801bbc4:	1c6b      	adds	r3, r5, #1
 801bbc6:	9308      	str	r3, [sp, #32]
 801bbc8:	ab0f      	add	r3, sp, #60	; 0x3c
 801bbca:	9305      	str	r3, [sp, #20]
 801bbcc:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801bbd0:	9304      	str	r3, [sp, #16]
 801bbd2:	ab0e      	add	r3, sp, #56	; 0x38
 801bbd4:	9303      	str	r3, [sp, #12]
 801bbd6:	ab0c      	add	r3, sp, #48	; 0x30
 801bbd8:	9302      	str	r3, [sp, #8]
 801bbda:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801bbde:	9301      	str	r3, [sp, #4]
 801bbe0:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801bbe4:	9300      	str	r3, [sp, #0]
 801bbe6:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801bbea:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801bbee:	a908      	add	r1, sp, #32
 801bbf0:	a809      	add	r0, sp, #36	; 0x24
 801bbf2:	f7ff fea8 	bl	801b946 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801bbf6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bbf8:	2b00      	cmp	r3, #0
 801bbfa:	bfbe      	ittt	lt
 801bbfc:	6823      	ldrlt	r3, [r4, #0]
 801bbfe:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801bc02:	930e      	strlt	r3, [sp, #56]	; 0x38
 801bc04:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bc06:	bfb8      	it	lt
 801bc08:	3404      	addlt	r4, #4
 801bc0a:	2b00      	cmp	r3, #0
 801bc0c:	bfb8      	it	lt
 801bc0e:	6823      	ldrlt	r3, [r4, #0]
 801bc10:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801bc14:	bfbe      	ittt	lt
 801bc16:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801bc1a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801bc1c:	3404      	addlt	r4, #4
 801bc1e:	b1d9      	cbz	r1, 801bc58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801bc20:	880b      	ldrh	r3, [r1, #0]
 801bc22:	2b69      	cmp	r3, #105	; 0x69
 801bc24:	d01f      	beq.n	801bc66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bc26:	d82f      	bhi.n	801bc88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801bc28:	2b58      	cmp	r3, #88	; 0x58
 801bc2a:	d01c      	beq.n	801bc66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bc2c:	d818      	bhi.n	801bc60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801bc2e:	2b25      	cmp	r3, #37	; 0x25
 801bc30:	d034      	beq.n	801bc9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801bc32:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801bc36:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bc38:	f1bb 0f00 	cmp.w	fp, #0
 801bc3c:	f000 80b8 	beq.w	801bdb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801bc40:	f8bb 5000 	ldrh.w	r5, [fp]
 801bc44:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801bc48:	3301      	adds	r3, #1
 801bc4a:	930d      	str	r3, [sp, #52]	; 0x34
 801bc4c:	e029      	b.n	801bca2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801bc4e:	b10d      	cbz	r5, 801bc54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801bc50:	782a      	ldrb	r2, [r5, #0]
 801bc52:	e785      	b.n	801bb60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801bc54:	462a      	mov	r2, r5
 801bc56:	e783      	b.n	801bb60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801bc58:	2a00      	cmp	r2, #0
 801bc5a:	d0ea      	beq.n	801bc32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801bc5c:	7813      	ldrb	r3, [r2, #0]
 801bc5e:	e7e0      	b.n	801bc22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801bc60:	3b63      	subs	r3, #99	; 0x63
 801bc62:	2b01      	cmp	r3, #1
 801bc64:	d8e5      	bhi.n	801bc32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801bc66:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801bc6a:	b329      	cbz	r1, 801bcb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801bc6c:	880b      	ldrh	r3, [r1, #0]
 801bc6e:	2b69      	cmp	r3, #105	; 0x69
 801bc70:	d063      	beq.n	801bd3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801bc72:	d825      	bhi.n	801bcc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801bc74:	2b63      	cmp	r3, #99	; 0x63
 801bc76:	d038      	beq.n	801bcea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801bc78:	2b64      	cmp	r3, #100	; 0x64
 801bc7a:	d05e      	beq.n	801bd3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801bc7c:	2b58      	cmp	r3, #88	; 0x58
 801bc7e:	d07b      	beq.n	801bd78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801bc80:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801bc84:	4625      	mov	r5, r4
 801bc86:	e036      	b.n	801bcf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bc88:	2b73      	cmp	r3, #115	; 0x73
 801bc8a:	d0ec      	beq.n	801bc66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bc8c:	d802      	bhi.n	801bc94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801bc8e:	2b6f      	cmp	r3, #111	; 0x6f
 801bc90:	d1cf      	bne.n	801bc32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801bc92:	e7e8      	b.n	801bc66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bc94:	2b75      	cmp	r3, #117	; 0x75
 801bc96:	d0e6      	beq.n	801bc66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bc98:	2b78      	cmp	r3, #120	; 0x78
 801bc9a:	e7f9      	b.n	801bc90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801bc9c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bc9e:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801bca2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bca4:	b10b      	cbz	r3, 801bcaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801bca6:	3302      	adds	r3, #2
 801bca8:	9309      	str	r3, [sp, #36]	; 0x24
 801bcaa:	9b08      	ldr	r3, [sp, #32]
 801bcac:	2b00      	cmp	r3, #0
 801bcae:	f43f af2e 	beq.w	801bb0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bcb2:	3301      	adds	r3, #1
 801bcb4:	9308      	str	r3, [sp, #32]
 801bcb6:	e72a      	b.n	801bb0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bcb8:	2a00      	cmp	r2, #0
 801bcba:	d0e1      	beq.n	801bc80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801bcbc:	7813      	ldrb	r3, [r2, #0]
 801bcbe:	e7d6      	b.n	801bc6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801bcc0:	2b73      	cmp	r3, #115	; 0x73
 801bcc2:	d036      	beq.n	801bd32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801bcc4:	d807      	bhi.n	801bcd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801bcc6:	2b6f      	cmp	r3, #111	; 0x6f
 801bcc8:	d1da      	bne.n	801bc80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801bcca:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bccc:	1d25      	adds	r5, r4, #4
 801bcce:	eba8 0202 	sub.w	r2, r8, r2
 801bcd2:	2308      	movs	r3, #8
 801bcd4:	e04a      	b.n	801bd6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801bcd6:	2b75      	cmp	r3, #117	; 0x75
 801bcd8:	d043      	beq.n	801bd62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801bcda:	2b78      	cmp	r3, #120	; 0x78
 801bcdc:	d1d0      	bne.n	801bc80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801bcde:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bce0:	1d25      	adds	r5, r4, #4
 801bce2:	eba8 0202 	sub.w	r2, r8, r2
 801bce6:	2310      	movs	r3, #16
 801bce8:	e040      	b.n	801bd6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801bcea:	6823      	ldr	r3, [r4, #0]
 801bcec:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801bcf0:	1d25      	adds	r5, r4, #4
 801bcf2:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801bcf6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bcf8:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801bcfc:	2b00      	cmp	r3, #0
 801bcfe:	d052      	beq.n	801bda6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801bd00:	881a      	ldrh	r2, [r3, #0]
 801bd02:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801bd06:	a80d      	add	r0, sp, #52	; 0x34
 801bd08:	9005      	str	r0, [sp, #20]
 801bd0a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801bd0e:	9004      	str	r0, [sp, #16]
 801bd10:	980e      	ldr	r0, [sp, #56]	; 0x38
 801bd12:	9003      	str	r0, [sp, #12]
 801bd14:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801bd18:	9002      	str	r0, [sp, #8]
 801bd1a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801bd1c:	9001      	str	r0, [sp, #4]
 801bd1e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801bd22:	9000      	str	r0, [sp, #0]
 801bd24:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801bd28:	a810      	add	r0, sp, #64	; 0x40
 801bd2a:	f7ff fd49 	bl	801b7c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801bd2e:	462c      	mov	r4, r5
 801bd30:	e7b7      	b.n	801bca2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801bd32:	6823      	ldr	r3, [r4, #0]
 801bd34:	1d25      	adds	r5, r4, #4
 801bd36:	9310      	str	r3, [sp, #64]	; 0x40
 801bd38:	e7dd      	b.n	801bcf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bd3a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bd3c:	6820      	ldr	r0, [r4, #0]
 801bd3e:	eba8 0202 	sub.w	r2, r8, r2
 801bd42:	230a      	movs	r3, #10
 801bd44:	b292      	uxth	r2, r2
 801bd46:	4649      	mov	r1, r9
 801bd48:	f7ff fce4 	bl	801b714 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801bd4c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801bd50:	2b2d      	cmp	r3, #45	; 0x2d
 801bd52:	f104 0504 	add.w	r5, r4, #4
 801bd56:	d1ce      	bne.n	801bcf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bd58:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801bd5c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bd5e:	3302      	adds	r3, #2
 801bd60:	e7e9      	b.n	801bd36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801bd62:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bd64:	1d25      	adds	r5, r4, #4
 801bd66:	eba8 0202 	sub.w	r2, r8, r2
 801bd6a:	230a      	movs	r3, #10
 801bd6c:	b292      	uxth	r2, r2
 801bd6e:	4649      	mov	r1, r9
 801bd70:	6820      	ldr	r0, [r4, #0]
 801bd72:	f7ff fcfb 	bl	801b76c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801bd76:	e7be      	b.n	801bcf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bd78:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bd7a:	6820      	ldr	r0, [r4, #0]
 801bd7c:	eba8 0202 	sub.w	r2, r8, r2
 801bd80:	b292      	uxth	r2, r2
 801bd82:	2310      	movs	r3, #16
 801bd84:	4649      	mov	r1, r9
 801bd86:	f7ff fcf1 	bl	801b76c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801bd8a:	1d25      	adds	r5, r4, #4
 801bd8c:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801bd90:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801bd94:	2b00      	cmp	r3, #0
 801bd96:	d0ae      	beq.n	801bcf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bd98:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 801bd9c:	2919      	cmp	r1, #25
 801bd9e:	d8f7      	bhi.n	801bd90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801bda0:	3b20      	subs	r3, #32
 801bda2:	8013      	strh	r3, [r2, #0]
 801bda4:	e7f4      	b.n	801bd90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801bda6:	9a08      	ldr	r2, [sp, #32]
 801bda8:	2a00      	cmp	r2, #0
 801bdaa:	d0aa      	beq.n	801bd02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801bdac:	7812      	ldrb	r2, [r2, #0]
 801bdae:	e7a8      	b.n	801bd02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801bdb0:	2d00      	cmp	r5, #0
 801bdb2:	f43f af47 	beq.w	801bc44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801bdb6:	782d      	ldrb	r5, [r5, #0]
 801bdb8:	e744      	b.n	801bc44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801bdba <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801bdba:	b507      	push	{r0, r1, r2, lr}
 801bdbc:	9300      	str	r3, [sp, #0]
 801bdbe:	4613      	mov	r3, r2
 801bdc0:	2200      	movs	r2, #0
 801bdc2:	f7ff fe90 	bl	801bae6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801bdc6:	b003      	add	sp, #12
 801bdc8:	f85d fb04 	ldr.w	pc, [sp], #4

0801bdcc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801bdcc:	b40c      	push	{r2, r3}
 801bdce:	b507      	push	{r0, r1, r2, lr}
 801bdd0:	ab04      	add	r3, sp, #16
 801bdd2:	f853 2b04 	ldr.w	r2, [r3], #4
 801bdd6:	9301      	str	r3, [sp, #4]
 801bdd8:	f7ff ffef 	bl	801bdba <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801bddc:	b003      	add	sp, #12
 801bdde:	f85d eb04 	ldr.w	lr, [sp], #4
 801bde2:	b002      	add	sp, #8
 801bde4:	4770      	bx	lr
	...

0801bde8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 801bde8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bdec:	b0c5      	sub	sp, #276	; 0x114
 801bdee:	2400      	movs	r4, #0
 801bdf0:	af11      	add	r7, sp, #68	; 0x44
 801bdf2:	4606      	mov	r6, r0
 801bdf4:	468a      	mov	sl, r1
 801bdf6:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801bdfa:	4621      	mov	r1, r4
 801bdfc:	22c8      	movs	r2, #200	; 0xc8
 801bdfe:	4638      	mov	r0, r7
 801be00:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 801be04:	940d      	str	r4, [sp, #52]	; 0x34
 801be06:	f012 f87c 	bl	802df02 <memset>
 801be0a:	b16e      	cbz	r6, 801be28 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 801be0c:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 801c0b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 801be10:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801be12:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801be14:	b162      	cbz	r2, 801be30 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 801be16:	8812      	ldrh	r2, [r2, #0]
 801be18:	b11a      	cbz	r2, 801be22 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801be1a:	f10a 31ff 	add.w	r1, sl, #4294967295
 801be1e:	4299      	cmp	r1, r3
 801be20:	dc2e      	bgt.n	801be80 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 801be22:	2200      	movs	r2, #0
 801be24:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801be28:	4630      	mov	r0, r6
 801be2a:	b045      	add	sp, #276	; 0x114
 801be2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801be30:	9a08      	ldr	r2, [sp, #32]
 801be32:	2a00      	cmp	r2, #0
 801be34:	d0f5      	beq.n	801be22 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801be36:	7812      	ldrb	r2, [r2, #0]
 801be38:	e7ee      	b.n	801be18 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 801be3a:	2d00      	cmp	r5, #0
 801be3c:	d0e8      	beq.n	801be10 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801be3e:	782a      	ldrb	r2, [r5, #0]
 801be40:	b142      	cbz	r2, 801be54 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 801be42:	2a25      	cmp	r2, #37	; 0x25
 801be44:	d001      	beq.n	801be4a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 801be46:	4299      	cmp	r1, r3
 801be48:	dc08      	bgt.n	801be5c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 801be4a:	f1b8 0f00 	cmp.w	r8, #0
 801be4e:	d121      	bne.n	801be94 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 801be50:	2d00      	cmp	r5, #0
 801be52:	d0dd      	beq.n	801be10 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801be54:	782a      	ldrb	r2, [r5, #0]
 801be56:	f04f 0800 	mov.w	r8, #0
 801be5a:	e01d      	b.n	801be98 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 801be5c:	f1b8 0f00 	cmp.w	r8, #0
 801be60:	d07f      	beq.n	801bf62 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 801be62:	f8b8 2000 	ldrh.w	r2, [r8]
 801be66:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801be6a:	f1b8 0f00 	cmp.w	r8, #0
 801be6e:	d002      	beq.n	801be76 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 801be70:	f108 0202 	add.w	r2, r8, #2
 801be74:	9209      	str	r2, [sp, #36]	; 0x24
 801be76:	b10d      	cbz	r5, 801be7c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 801be78:	3501      	adds	r5, #1
 801be7a:	9508      	str	r5, [sp, #32]
 801be7c:	3301      	adds	r3, #1
 801be7e:	930d      	str	r3, [sp, #52]	; 0x34
 801be80:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 801be84:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801be86:	f1b8 0f00 	cmp.w	r8, #0
 801be8a:	d0d6      	beq.n	801be3a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 801be8c:	f8b8 2000 	ldrh.w	r2, [r8]
 801be90:	2a00      	cmp	r2, #0
 801be92:	d1d6      	bne.n	801be42 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 801be94:	f8b8 2000 	ldrh.w	r2, [r8]
 801be98:	2a00      	cmp	r2, #0
 801be9a:	d0b9      	beq.n	801be10 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801be9c:	4299      	cmp	r1, r3
 801be9e:	ddb7      	ble.n	801be10 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bea0:	2300      	movs	r3, #0
 801bea2:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801bea6:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801beaa:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 801beae:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 801beb2:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 801beb6:	930e      	str	r3, [sp, #56]	; 0x38
 801beb8:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801bebc:	930f      	str	r3, [sp, #60]	; 0x3c
 801bebe:	f1b8 0f00 	cmp.w	r8, #0
 801bec2:	d002      	beq.n	801beca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 801bec4:	f108 0302 	add.w	r3, r8, #2
 801bec8:	9309      	str	r3, [sp, #36]	; 0x24
 801beca:	b10d      	cbz	r5, 801bed0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 801becc:	1c6b      	adds	r3, r5, #1
 801bece:	9308      	str	r3, [sp, #32]
 801bed0:	ab0f      	add	r3, sp, #60	; 0x3c
 801bed2:	9305      	str	r3, [sp, #20]
 801bed4:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801bed8:	9304      	str	r3, [sp, #16]
 801beda:	ab0e      	add	r3, sp, #56	; 0x38
 801bedc:	9303      	str	r3, [sp, #12]
 801bede:	ab0c      	add	r3, sp, #48	; 0x30
 801bee0:	9302      	str	r3, [sp, #8]
 801bee2:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801bee6:	9301      	str	r3, [sp, #4]
 801bee8:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801beec:	9300      	str	r3, [sp, #0]
 801beee:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801bef2:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801bef6:	a908      	add	r1, sp, #32
 801bef8:	a809      	add	r0, sp, #36	; 0x24
 801befa:	f7ff fd24 	bl	801b946 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801befe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bf00:	2b00      	cmp	r3, #0
 801bf02:	da0b      	bge.n	801bf1c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 801bf04:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801bf08:	edd3 7a00 	vldr	s15, [r3]
 801bf0c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801bf10:	3401      	adds	r4, #1
 801bf12:	ee17 3a90 	vmov	r3, s15
 801bf16:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bf1a:	930e      	str	r3, [sp, #56]	; 0x38
 801bf1c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bf1e:	2b00      	cmp	r3, #0
 801bf20:	da0b      	bge.n	801bf3a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 801bf22:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801bf26:	edd3 7a00 	vldr	s15, [r3]
 801bf2a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801bf2e:	3401      	adds	r4, #1
 801bf30:	ee17 3a90 	vmov	r3, s15
 801bf34:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bf38:	930f      	str	r3, [sp, #60]	; 0x3c
 801bf3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bf3c:	b1b3      	cbz	r3, 801bf6c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 801bf3e:	881a      	ldrh	r2, [r3, #0]
 801bf40:	2a25      	cmp	r2, #37	; 0x25
 801bf42:	d018      	beq.n	801bf76 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 801bf44:	2a66      	cmp	r2, #102	; 0x66
 801bf46:	d01c      	beq.n	801bf82 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 801bf48:	e9cd 5808 	strd	r5, r8, [sp, #32]
 801bf4c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bf4e:	f1b8 0f00 	cmp.w	r8, #0
 801bf52:	f000 8121 	beq.w	801c198 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 801bf56:	f8b8 5000 	ldrh.w	r5, [r8]
 801bf5a:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 801bf5e:	3301      	adds	r3, #1
 801bf60:	e00d      	b.n	801bf7e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 801bf62:	b10d      	cbz	r5, 801bf68 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 801bf64:	782a      	ldrb	r2, [r5, #0]
 801bf66:	e77e      	b.n	801be66 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801bf68:	462a      	mov	r2, r5
 801bf6a:	e77c      	b.n	801be66 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801bf6c:	9b08      	ldr	r3, [sp, #32]
 801bf6e:	2b00      	cmp	r3, #0
 801bf70:	d0ea      	beq.n	801bf48 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 801bf72:	781a      	ldrb	r2, [r3, #0]
 801bf74:	e7e4      	b.n	801bf40 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801bf76:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bf78:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801bf7c:	3302      	adds	r3, #2
 801bf7e:	930d      	str	r3, [sp, #52]	; 0x34
 801bf80:	e041      	b.n	801c006 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 801bf82:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801bf86:	edd3 7a00 	vldr	s15, [r3]
 801bf8a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801bf8e:	9710      	str	r7, [sp, #64]	; 0x40
 801bf90:	3401      	adds	r4, #1
 801bf92:	b923      	cbnz	r3, 801bf9e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 801bf94:	2301      	movs	r3, #1
 801bf96:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801bf9a:	2306      	movs	r3, #6
 801bf9c:	930f      	str	r3, [sp, #60]	; 0x3c
 801bf9e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801bfa2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bfa6:	bf48      	it	mi
 801bfa8:	eef1 7a67 	vnegmi.f32	s15, s15
 801bfac:	eeb0 7ae7 	vabs.f32	s14, s15
 801bfb0:	bf48      	it	mi
 801bfb2:	232d      	movmi	r3, #45	; 0x2d
 801bfb4:	eeb4 7a45 	vcmp.f32	s14, s10
 801bfb8:	bf48      	it	mi
 801bfba:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 801bfbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bfc2:	dd2b      	ble.n	801c01c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 801bfc4:	4b3b      	ldr	r3, [pc, #236]	; (801c0b4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801bfc6:	9311      	str	r3, [sp, #68]	; 0x44
 801bfc8:	2366      	movs	r3, #102	; 0x66
 801bfca:	9312      	str	r3, [sp, #72]	; 0x48
 801bfcc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bfce:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801bfd2:	2b00      	cmp	r3, #0
 801bfd4:	f000 80da 	beq.w	801c18c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 801bfd8:	881a      	ldrh	r2, [r3, #0]
 801bfda:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801bfde:	a80d      	add	r0, sp, #52	; 0x34
 801bfe0:	9005      	str	r0, [sp, #20]
 801bfe2:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801bfe6:	9004      	str	r0, [sp, #16]
 801bfe8:	980e      	ldr	r0, [sp, #56]	; 0x38
 801bfea:	9003      	str	r0, [sp, #12]
 801bfec:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801bff0:	9002      	str	r0, [sp, #8]
 801bff2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801bff4:	9001      	str	r0, [sp, #4]
 801bff6:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801bffa:	9000      	str	r0, [sp, #0]
 801bffc:	e9cd a606 	strd	sl, r6, [sp, #24]
 801c000:	a810      	add	r0, sp, #64	; 0x40
 801c002:	f7ff fbdd 	bl	801b7c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801c006:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c008:	b10b      	cbz	r3, 801c00e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801c00a:	3302      	adds	r3, #2
 801c00c:	9309      	str	r3, [sp, #36]	; 0x24
 801c00e:	9b08      	ldr	r3, [sp, #32]
 801c010:	2b00      	cmp	r3, #0
 801c012:	f43f aefd 	beq.w	801be10 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801c016:	3301      	adds	r3, #1
 801c018:	9308      	str	r3, [sp, #32]
 801c01a:	e6f9      	b.n	801be10 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801c01c:	eef4 7a67 	vcmp.f32	s15, s15
 801c020:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c024:	d63a      	bvs.n	801c09c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 801c026:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 801c02a:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 801c02e:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 801c032:	eeb0 6a67 	vmov.f32	s12, s15
 801c036:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c03a:	eef0 5a47 	vmov.f32	s11, s14
 801c03e:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801c042:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c046:	da2d      	bge.n	801c0a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 801c048:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801c04a:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 801c04e:	2100      	movs	r1, #0
 801c050:	eef0 4a46 	vmov.f32	s9, s12
 801c054:	ebaa 0202 	sub.w	r2, sl, r2
 801c058:	eef4 6ac6 	vcmpe.f32	s13, s12
 801c05c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c060:	b28d      	uxth	r5, r1
 801c062:	db2c      	blt.n	801c0be <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801c064:	1a53      	subs	r3, r2, r1
 801c066:	2b00      	cmp	r3, #0
 801c068:	dd29      	ble.n	801c0be <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801c06a:	3101      	adds	r1, #1
 801c06c:	2964      	cmp	r1, #100	; 0x64
 801c06e:	d025      	beq.n	801c0bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 801c070:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801c074:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801c078:	ee17 3a10 	vmov	r3, s14
 801c07c:	2b09      	cmp	r3, #9
 801c07e:	bfa8      	it	ge
 801c080:	2309      	movge	r3, #9
 801c082:	ee07 3a10 	vmov	s14, r3
 801c086:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801c08a:	f103 0030 	add.w	r0, r3, #48	; 0x30
 801c08e:	eee7 7a66 	vfms.f32	s15, s14, s13
 801c092:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 801c096:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 801c09a:	e7dd      	b.n	801c058 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 801c09c:	4b06      	ldr	r3, [pc, #24]	; (801c0b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 801c09e:	9311      	str	r3, [sp, #68]	; 0x44
 801c0a0:	236e      	movs	r3, #110	; 0x6e
 801c0a2:	e792      	b.n	801bfca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 801c0a4:	ee66 6a87 	vmul.f32	s13, s13, s14
 801c0a8:	ee86 6a07 	vdiv.f32	s12, s12, s14
 801c0ac:	e7c7      	b.n	801c03e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 801c0ae:	bf00      	nop
 801c0b0:	7f7fffff 	.word	0x7f7fffff
 801c0b4:	006e0069 	.word	0x006e0069
 801c0b8:	0061006e 	.word	0x0061006e
 801c0bc:	2563      	movs	r5, #99	; 0x63
 801c0be:	2a63      	cmp	r2, #99	; 0x63
 801c0c0:	bfd4      	ite	le
 801c0c2:	ebc5 0202 	rsble	r2, r5, r2
 801c0c6:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 801c0ca:	2a00      	cmp	r2, #0
 801c0cc:	dd43      	ble.n	801c156 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801c0ce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c0d0:	2b00      	cmp	r3, #0
 801c0d2:	dd40      	ble.n	801c156 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801c0d4:	f04f 0901 	mov.w	r9, #1
 801c0d8:	210a      	movs	r1, #10
 801c0da:	f113 33ff 	adds.w	r3, r3, #4294967295
 801c0de:	d30c      	bcc.n	801c0fa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 801c0e0:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801c0e4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801c0e8:	ee17 0a10 	vmov	r0, s14
 801c0ec:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801c0f0:	fb01 0909 	mla	r9, r1, r9, r0
 801c0f4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801c0f8:	e7ef      	b.n	801c0da <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 801c0fa:	3501      	adds	r5, #1
 801c0fc:	930f      	str	r3, [sp, #60]	; 0x3c
 801c0fe:	b292      	uxth	r2, r2
 801c100:	230a      	movs	r3, #10
 801c102:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801c106:	4648      	mov	r0, r9
 801c108:	f7ff fb4e 	bl	801b7a8 <_ZN8touchgfx7Unicode4itoaElPtti>
 801c10c:	f1b9 0f01 	cmp.w	r9, #1
 801c110:	dc1f      	bgt.n	801c152 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 801c112:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 801c116:	2b00      	cmp	r3, #0
 801c118:	bf0c      	ite	eq
 801c11a:	2300      	moveq	r3, #0
 801c11c:	232e      	movne	r3, #46	; 0x2e
 801c11e:	aa44      	add	r2, sp, #272	; 0x110
 801c120:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801c124:	eef4 7ae4 	vcmpe.f32	s15, s9
 801c128:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c12c:	f825 3ccc 	strh.w	r3, [r5, #-204]
 801c130:	f6ff af4c 	blt.w	801bfcc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801c134:	2300      	movs	r3, #0
 801c136:	f838 2b02 	ldrh.w	r2, [r8], #2
 801c13a:	1c59      	adds	r1, r3, #1
 801c13c:	b98a      	cbnz	r2, 801c162 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 801c13e:	b29b      	uxth	r3, r3
 801c140:	2130      	movs	r1, #48	; 0x30
 801c142:	b983      	cbnz	r3, 801c166 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 801c144:	2331      	movs	r3, #49	; 0x31
 801c146:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801c14a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c14c:	3b02      	subs	r3, #2
 801c14e:	9310      	str	r3, [sp, #64]	; 0x40
 801c150:	e73c      	b.n	801bfcc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801c152:	232e      	movs	r3, #46	; 0x2e
 801c154:	e7e3      	b.n	801c11e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 801c156:	ab44      	add	r3, sp, #272	; 0x110
 801c158:	3501      	adds	r5, #1
 801c15a:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801c15e:	2300      	movs	r3, #0
 801c160:	e7e0      	b.n	801c124 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 801c162:	460b      	mov	r3, r1
 801c164:	e7e7      	b.n	801c136 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 801c166:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 801c16a:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 801c16e:	2808      	cmp	r0, #8
 801c170:	d806      	bhi.n	801c180 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 801c172:	a944      	add	r1, sp, #272	; 0x110
 801c174:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801c178:	3201      	adds	r2, #1
 801c17a:	f823 2ccc 	strh.w	r2, [r3, #-204]
 801c17e:	e725      	b.n	801bfcc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801c180:	2a39      	cmp	r2, #57	; 0x39
 801c182:	bf08      	it	eq
 801c184:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 801c188:	3b01      	subs	r3, #1
 801c18a:	e7da      	b.n	801c142 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 801c18c:	9a08      	ldr	r2, [sp, #32]
 801c18e:	2a00      	cmp	r2, #0
 801c190:	f43f af23 	beq.w	801bfda <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801c194:	7812      	ldrb	r2, [r2, #0]
 801c196:	e720      	b.n	801bfda <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801c198:	2d00      	cmp	r5, #0
 801c19a:	f43f aede 	beq.w	801bf5a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801c19e:	782d      	ldrb	r5, [r5, #0]
 801c1a0:	e6db      	b.n	801bf5a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801c1a2:	bf00      	nop

0801c1a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 801c1a4:	b507      	push	{r0, r1, r2, lr}
 801c1a6:	9300      	str	r3, [sp, #0]
 801c1a8:	4613      	mov	r3, r2
 801c1aa:	2200      	movs	r2, #0
 801c1ac:	f7ff fe1c 	bl	801bde8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 801c1b0:	b003      	add	sp, #12
 801c1b2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801c1b8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801c1b8:	4b01      	ldr	r3, [pc, #4]	; (801c1c0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801c1ba:	6018      	str	r0, [r3, #0]
 801c1bc:	4770      	bx	lr
 801c1be:	bf00      	nop
 801c1c0:	200138b4 	.word	0x200138b4

0801c1c4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801c1c4:	4b06      	ldr	r3, [pc, #24]	; (801c1e0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801c1c6:	881a      	ldrh	r2, [r3, #0]
 801c1c8:	4282      	cmp	r2, r0
 801c1ca:	d807      	bhi.n	801c1dc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801c1cc:	4b05      	ldr	r3, [pc, #20]	; (801c1e4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801c1ce:	881b      	ldrh	r3, [r3, #0]
 801c1d0:	4413      	add	r3, r2
 801c1d2:	4298      	cmp	r0, r3
 801c1d4:	bfac      	ite	ge
 801c1d6:	2000      	movge	r0, #0
 801c1d8:	2001      	movlt	r0, #1
 801c1da:	4770      	bx	lr
 801c1dc:	2000      	movs	r0, #0
 801c1de:	4770      	bx	lr
 801c1e0:	200138d4 	.word	0x200138d4
 801c1e4:	200138d8 	.word	0x200138d8

0801c1e8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801c1e8:	b508      	push	{r3, lr}
 801c1ea:	4601      	mov	r1, r0
 801c1ec:	f7ff ffea 	bl	801c1c4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801c1f0:	b118      	cbz	r0, 801c1fa <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801c1f2:	4b02      	ldr	r3, [pc, #8]	; (801c1fc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801c1f4:	681b      	ldr	r3, [r3, #0]
 801c1f6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801c1fa:	bd08      	pop	{r3, pc}
 801c1fc:	200138b8 	.word	0x200138b8

0801c200 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801c200:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c202:	4c24      	ldr	r4, [pc, #144]	; (801c294 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801c204:	6823      	ldr	r3, [r4, #0]
 801c206:	2b00      	cmp	r3, #0
 801c208:	d042      	beq.n	801c290 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c20a:	4a23      	ldr	r2, [pc, #140]	; (801c298 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801c20c:	4d23      	ldr	r5, [pc, #140]	; (801c29c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801c20e:	8811      	ldrh	r1, [r2, #0]
 801c210:	f8b5 c000 	ldrh.w	ip, [r5]
 801c214:	4822      	ldr	r0, [pc, #136]	; (801c2a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801c216:	4461      	add	r1, ip
 801c218:	1c4a      	adds	r2, r1, #1
 801c21a:	f022 0201 	bic.w	r2, r2, #1
 801c21e:	008f      	lsls	r7, r1, #2
 801c220:	0412      	lsls	r2, r2, #16
 801c222:	19de      	adds	r6, r3, r7
 801c224:	0c12      	lsrs	r2, r2, #16
 801c226:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801c22a:	6006      	str	r6, [r0, #0]
 801c22c:	4e1d      	ldr	r6, [pc, #116]	; (801c2a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801c22e:	19da      	adds	r2, r3, r7
 801c230:	6032      	str	r2, [r6, #0]
 801c232:	220e      	movs	r2, #14
 801c234:	fb02 f20c 	mul.w	r2, r2, ip
 801c238:	3203      	adds	r2, #3
 801c23a:	f022 0203 	bic.w	r2, r2, #3
 801c23e:	443a      	add	r2, r7
 801c240:	4f19      	ldr	r7, [pc, #100]	; (801c2a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801c242:	4413      	add	r3, r2
 801c244:	603b      	str	r3, [r7, #0]
 801c246:	4f19      	ldr	r7, [pc, #100]	; (801c2ac <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801c248:	2300      	movs	r3, #0
 801c24a:	803b      	strh	r3, [r7, #0]
 801c24c:	4f18      	ldr	r7, [pc, #96]	; (801c2b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801c24e:	683f      	ldr	r7, [r7, #0]
 801c250:	1aba      	subs	r2, r7, r2
 801c252:	4f18      	ldr	r7, [pc, #96]	; (801c2b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801c254:	603a      	str	r2, [r7, #0]
 801c256:	4a18      	ldr	r2, [pc, #96]	; (801c2b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801c258:	469c      	mov	ip, r3
 801c25a:	8013      	strh	r3, [r2, #0]
 801c25c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801c260:	428b      	cmp	r3, r1
 801c262:	d10d      	bne.n	801c280 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801c264:	882d      	ldrh	r5, [r5, #0]
 801c266:	6830      	ldr	r0, [r6, #0]
 801c268:	2300      	movs	r3, #0
 801c26a:	240e      	movs	r4, #14
 801c26c:	429d      	cmp	r5, r3
 801c26e:	d90f      	bls.n	801c290 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c270:	fb04 0203 	mla	r2, r4, r3, r0
 801c274:	3301      	adds	r3, #1
 801c276:	7b11      	ldrb	r1, [r2, #12]
 801c278:	f36f 1145 	bfc	r1, #5, #1
 801c27c:	7311      	strb	r1, [r2, #12]
 801c27e:	e7f5      	b.n	801c26c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801c280:	6822      	ldr	r2, [r4, #0]
 801c282:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801c286:	6802      	ldr	r2, [r0, #0]
 801c288:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801c28c:	3301      	adds	r3, #1
 801c28e:	e7e7      	b.n	801c260 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801c290:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c292:	bf00      	nop
 801c294:	200138b8 	.word	0x200138b8
 801c298:	200138d4 	.word	0x200138d4
 801c29c:	200138d8 	.word	0x200138d8
 801c2a0:	200138cc 	.word	0x200138cc
 801c2a4:	200138bc 	.word	0x200138bc
 801c2a8:	200138c4 	.word	0x200138c4
 801c2ac:	200138d6 	.word	0x200138d6
 801c2b0:	200138c0 	.word	0x200138c0
 801c2b4:	200138d0 	.word	0x200138d0
 801c2b8:	200138c8 	.word	0x200138c8

0801c2bc <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801c2bc:	4b06      	ldr	r3, [pc, #24]	; (801c2d8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801c2be:	681b      	ldr	r3, [r3, #0]
 801c2c0:	b943      	cbnz	r3, 801c2d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801c2c2:	b139      	cbz	r1, 801c2d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801c2c4:	4b05      	ldr	r3, [pc, #20]	; (801c2dc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801c2c6:	801a      	strh	r2, [r3, #0]
 801c2c8:	4b05      	ldr	r3, [pc, #20]	; (801c2e0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801c2ca:	6019      	str	r1, [r3, #0]
 801c2cc:	4b05      	ldr	r3, [pc, #20]	; (801c2e4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801c2ce:	6018      	str	r0, [r3, #0]
 801c2d0:	f7ff bf96 	b.w	801c200 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801c2d4:	4770      	bx	lr
 801c2d6:	bf00      	nop
 801c2d8:	200138c4 	.word	0x200138c4
 801c2dc:	200138d8 	.word	0x200138d8
 801c2e0:	200138c0 	.word	0x200138c0
 801c2e4:	200138b8 	.word	0x200138b8

0801c2e8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801c2e8:	b470      	push	{r4, r5, r6}
 801c2ea:	4c07      	ldr	r4, [pc, #28]	; (801c308 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801c2ec:	6826      	ldr	r6, [r4, #0]
 801c2ee:	4605      	mov	r5, r0
 801c2f0:	4610      	mov	r0, r2
 801c2f2:	9a03      	ldr	r2, [sp, #12]
 801c2f4:	b936      	cbnz	r6, 801c304 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801c2f6:	6025      	str	r5, [r4, #0]
 801c2f8:	4c04      	ldr	r4, [pc, #16]	; (801c30c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801c2fa:	8021      	strh	r1, [r4, #0]
 801c2fc:	bc70      	pop	{r4, r5, r6}
 801c2fe:	4619      	mov	r1, r3
 801c300:	f7ff bfdc 	b.w	801c2bc <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801c304:	bc70      	pop	{r4, r5, r6}
 801c306:	4770      	bx	lr
 801c308:	200138dc 	.word	0x200138dc
 801c30c:	200138d4 	.word	0x200138d4

0801c310 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801c310:	4a12      	ldr	r2, [pc, #72]	; (801c35c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801c312:	8803      	ldrh	r3, [r0, #0]
 801c314:	8812      	ldrh	r2, [r2, #0]
 801c316:	4293      	cmp	r3, r2
 801c318:	d207      	bcs.n	801c32a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801c31a:	4a11      	ldr	r2, [pc, #68]	; (801c360 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801c31c:	6812      	ldr	r2, [r2, #0]
 801c31e:	2114      	movs	r1, #20
 801c320:	fb01 2303 	mla	r3, r1, r3, r2
 801c324:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801c328:	4770      	bx	lr
 801c32a:	490e      	ldr	r1, [pc, #56]	; (801c364 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801c32c:	8809      	ldrh	r1, [r1, #0]
 801c32e:	4411      	add	r1, r2
 801c330:	428b      	cmp	r3, r1
 801c332:	da04      	bge.n	801c33e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801c334:	1a9b      	subs	r3, r3, r2
 801c336:	4a0c      	ldr	r2, [pc, #48]	; (801c368 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801c338:	210e      	movs	r1, #14
 801c33a:	6812      	ldr	r2, [r2, #0]
 801c33c:	e7f0      	b.n	801c320 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801c33e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c342:	4293      	cmp	r3, r2
 801c344:	d108      	bne.n	801c358 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801c346:	4b09      	ldr	r3, [pc, #36]	; (801c36c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801c348:	781b      	ldrb	r3, [r3, #0]
 801c34a:	b91b      	cbnz	r3, 801c354 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801c34c:	4b08      	ldr	r3, [pc, #32]	; (801c370 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801c34e:	f9b3 0000 	ldrsh.w	r0, [r3]
 801c352:	4770      	bx	lr
 801c354:	4b07      	ldr	r3, [pc, #28]	; (801c374 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801c356:	e7fa      	b.n	801c34e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801c358:	2000      	movs	r0, #0
 801c35a:	4770      	bx	lr
 801c35c:	200138d4 	.word	0x200138d4
 801c360:	200138dc 	.word	0x200138dc
 801c364:	200138d8 	.word	0x200138d8
 801c368:	200138bc 	.word	0x200138bc
 801c36c:	20013844 	.word	0x20013844
 801c370:	20013846 	.word	0x20013846
 801c374:	20013848 	.word	0x20013848

0801c378 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801c378:	4a12      	ldr	r2, [pc, #72]	; (801c3c4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801c37a:	8803      	ldrh	r3, [r0, #0]
 801c37c:	8812      	ldrh	r2, [r2, #0]
 801c37e:	4293      	cmp	r3, r2
 801c380:	d207      	bcs.n	801c392 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801c382:	4a11      	ldr	r2, [pc, #68]	; (801c3c8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801c384:	6812      	ldr	r2, [r2, #0]
 801c386:	2114      	movs	r1, #20
 801c388:	fb01 2303 	mla	r3, r1, r3, r2
 801c38c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801c390:	4770      	bx	lr
 801c392:	490e      	ldr	r1, [pc, #56]	; (801c3cc <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801c394:	8809      	ldrh	r1, [r1, #0]
 801c396:	4411      	add	r1, r2
 801c398:	428b      	cmp	r3, r1
 801c39a:	da04      	bge.n	801c3a6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801c39c:	1a9b      	subs	r3, r3, r2
 801c39e:	4a0c      	ldr	r2, [pc, #48]	; (801c3d0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801c3a0:	210e      	movs	r1, #14
 801c3a2:	6812      	ldr	r2, [r2, #0]
 801c3a4:	e7f0      	b.n	801c388 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801c3a6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c3aa:	4293      	cmp	r3, r2
 801c3ac:	d108      	bne.n	801c3c0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801c3ae:	4b09      	ldr	r3, [pc, #36]	; (801c3d4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801c3b0:	781b      	ldrb	r3, [r3, #0]
 801c3b2:	b91b      	cbnz	r3, 801c3bc <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801c3b4:	4b08      	ldr	r3, [pc, #32]	; (801c3d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801c3b6:	f9b3 0000 	ldrsh.w	r0, [r3]
 801c3ba:	4770      	bx	lr
 801c3bc:	4b07      	ldr	r3, [pc, #28]	; (801c3dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801c3be:	e7fa      	b.n	801c3b6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801c3c0:	2000      	movs	r0, #0
 801c3c2:	4770      	bx	lr
 801c3c4:	200138d4 	.word	0x200138d4
 801c3c8:	200138dc 	.word	0x200138dc
 801c3cc:	200138d8 	.word	0x200138d8
 801c3d0:	200138bc 	.word	0x200138bc
 801c3d4:	20013844 	.word	0x20013844
 801c3d8:	20013848 	.word	0x20013848
 801c3dc:	20013846 	.word	0x20013846

0801c3e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801c3e0:	b510      	push	{r4, lr}
 801c3e2:	4a1f      	ldr	r2, [pc, #124]	; (801c460 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801c3e4:	880b      	ldrh	r3, [r1, #0]
 801c3e6:	8812      	ldrh	r2, [r2, #0]
 801c3e8:	4293      	cmp	r3, r2
 801c3ea:	d213      	bcs.n	801c414 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801c3ec:	4a1d      	ldr	r2, [pc, #116]	; (801c464 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801c3ee:	6812      	ldr	r2, [r2, #0]
 801c3f0:	2114      	movs	r1, #20
 801c3f2:	fb01 2303 	mla	r3, r1, r3, r2
 801c3f6:	8a1a      	ldrh	r2, [r3, #16]
 801c3f8:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801c3fc:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801c400:	8a5b      	ldrh	r3, [r3, #18]
 801c402:	8004      	strh	r4, [r0, #0]
 801c404:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801c408:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801c40c:	8041      	strh	r1, [r0, #2]
 801c40e:	8082      	strh	r2, [r0, #4]
 801c410:	80c3      	strh	r3, [r0, #6]
 801c412:	e00e      	b.n	801c432 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801c414:	4914      	ldr	r1, [pc, #80]	; (801c468 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801c416:	8809      	ldrh	r1, [r1, #0]
 801c418:	4411      	add	r1, r2
 801c41a:	428b      	cmp	r3, r1
 801c41c:	da0a      	bge.n	801c434 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801c41e:	1a9b      	subs	r3, r3, r2
 801c420:	4a12      	ldr	r2, [pc, #72]	; (801c46c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801c422:	6812      	ldr	r2, [r2, #0]
 801c424:	210e      	movs	r1, #14
 801c426:	fb01 2303 	mla	r3, r1, r3, r2
 801c42a:	681a      	ldr	r2, [r3, #0]
 801c42c:	6002      	str	r2, [r0, #0]
 801c42e:	685a      	ldr	r2, [r3, #4]
 801c430:	6042      	str	r2, [r0, #4]
 801c432:	bd10      	pop	{r4, pc}
 801c434:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c438:	4293      	cmp	r3, r2
 801c43a:	d10b      	bne.n	801c454 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801c43c:	4b0c      	ldr	r3, [pc, #48]	; (801c470 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801c43e:	f9b3 1000 	ldrsh.w	r1, [r3]
 801c442:	4b0c      	ldr	r3, [pc, #48]	; (801c474 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801c444:	8081      	strh	r1, [r0, #4]
 801c446:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c44a:	80c2      	strh	r2, [r0, #6]
 801c44c:	2300      	movs	r3, #0
 801c44e:	8003      	strh	r3, [r0, #0]
 801c450:	8043      	strh	r3, [r0, #2]
 801c452:	e7ee      	b.n	801c432 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801c454:	2300      	movs	r3, #0
 801c456:	8003      	strh	r3, [r0, #0]
 801c458:	8043      	strh	r3, [r0, #2]
 801c45a:	8083      	strh	r3, [r0, #4]
 801c45c:	e7d8      	b.n	801c410 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801c45e:	bf00      	nop
 801c460:	200138d4 	.word	0x200138d4
 801c464:	200138dc 	.word	0x200138dc
 801c468:	200138d8 	.word	0x200138d8
 801c46c:	200138bc 	.word	0x200138bc
 801c470:	20013840 	.word	0x20013840
 801c474:	20013842 	.word	0x20013842

0801c478 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801c478:	4a17      	ldr	r2, [pc, #92]	; (801c4d8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801c47a:	8803      	ldrh	r3, [r0, #0]
 801c47c:	8812      	ldrh	r2, [r2, #0]
 801c47e:	4293      	cmp	r3, r2
 801c480:	d213      	bcs.n	801c4aa <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801c482:	4a16      	ldr	r2, [pc, #88]	; (801c4dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801c484:	6812      	ldr	r2, [r2, #0]
 801c486:	2114      	movs	r1, #20
 801c488:	fb01 2303 	mla	r3, r1, r3, r2
 801c48c:	8a1a      	ldrh	r2, [r3, #16]
 801c48e:	8919      	ldrh	r1, [r3, #8]
 801c490:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801c494:	428a      	cmp	r2, r1
 801c496:	db1d      	blt.n	801c4d4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801c498:	8a58      	ldrh	r0, [r3, #18]
 801c49a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801c49e:	895b      	ldrh	r3, [r3, #10]
 801c4a0:	4298      	cmp	r0, r3
 801c4a2:	bfac      	ite	ge
 801c4a4:	2000      	movge	r0, #0
 801c4a6:	2001      	movlt	r0, #1
 801c4a8:	4770      	bx	lr
 801c4aa:	490d      	ldr	r1, [pc, #52]	; (801c4e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801c4ac:	8809      	ldrh	r1, [r1, #0]
 801c4ae:	4411      	add	r1, r2
 801c4b0:	428b      	cmp	r3, r1
 801c4b2:	da0d      	bge.n	801c4d0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801c4b4:	1a9b      	subs	r3, r3, r2
 801c4b6:	4a0b      	ldr	r2, [pc, #44]	; (801c4e4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801c4b8:	6812      	ldr	r2, [r2, #0]
 801c4ba:	210e      	movs	r1, #14
 801c4bc:	fb01 2303 	mla	r3, r1, r3, r2
 801c4c0:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801c4c4:	891a      	ldrh	r2, [r3, #8]
 801c4c6:	4291      	cmp	r1, r2
 801c4c8:	db04      	blt.n	801c4d4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801c4ca:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801c4ce:	e7e6      	b.n	801c49e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801c4d0:	2000      	movs	r0, #0
 801c4d2:	4770      	bx	lr
 801c4d4:	2001      	movs	r0, #1
 801c4d6:	4770      	bx	lr
 801c4d8:	200138d4 	.word	0x200138d4
 801c4dc:	200138dc 	.word	0x200138dc
 801c4e0:	200138d8 	.word	0x200138d8
 801c4e4:	200138bc 	.word	0x200138bc

0801c4e8 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801c4e8:	4a12      	ldr	r2, [pc, #72]	; (801c534 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801c4ea:	8803      	ldrh	r3, [r0, #0]
 801c4ec:	8811      	ldrh	r1, [r2, #0]
 801c4ee:	428b      	cmp	r3, r1
 801c4f0:	d20b      	bcs.n	801c50a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801c4f2:	4a11      	ldr	r2, [pc, #68]	; (801c538 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801c4f4:	6812      	ldr	r2, [r2, #0]
 801c4f6:	b112      	cbz	r2, 801c4fe <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801c4f8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801c4fc:	b9c0      	cbnz	r0, 801c530 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801c4fe:	4a0f      	ldr	r2, [pc, #60]	; (801c53c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801c500:	6811      	ldr	r1, [r2, #0]
 801c502:	2214      	movs	r2, #20
 801c504:	4353      	muls	r3, r2
 801c506:	58c8      	ldr	r0, [r1, r3]
 801c508:	4770      	bx	lr
 801c50a:	4a0d      	ldr	r2, [pc, #52]	; (801c540 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801c50c:	8812      	ldrh	r2, [r2, #0]
 801c50e:	440a      	add	r2, r1
 801c510:	4293      	cmp	r3, r2
 801c512:	da04      	bge.n	801c51e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801c514:	4a08      	ldr	r2, [pc, #32]	; (801c538 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801c516:	6812      	ldr	r2, [r2, #0]
 801c518:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801c51c:	4770      	bx	lr
 801c51e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c522:	4293      	cmp	r3, r2
 801c524:	d103      	bne.n	801c52e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801c526:	4b07      	ldr	r3, [pc, #28]	; (801c544 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801c528:	681b      	ldr	r3, [r3, #0]
 801c52a:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801c52c:	4770      	bx	lr
 801c52e:	2000      	movs	r0, #0
 801c530:	4770      	bx	lr
 801c532:	bf00      	nop
 801c534:	200138d4 	.word	0x200138d4
 801c538:	200138b8 	.word	0x200138b8
 801c53c:	200138dc 	.word	0x200138dc
 801c540:	200138d8 	.word	0x200138d8
 801c544:	2001384c 	.word	0x2001384c

0801c548 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801c548:	4b24      	ldr	r3, [pc, #144]	; (801c5dc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801c54a:	8802      	ldrh	r2, [r0, #0]
 801c54c:	8818      	ldrh	r0, [r3, #0]
 801c54e:	4282      	cmp	r2, r0
 801c550:	d221      	bcs.n	801c596 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801c552:	4b23      	ldr	r3, [pc, #140]	; (801c5e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801c554:	6819      	ldr	r1, [r3, #0]
 801c556:	2314      	movs	r3, #20
 801c558:	fb03 1302 	mla	r3, r3, r2, r1
 801c55c:	6858      	ldr	r0, [r3, #4]
 801c55e:	2800      	cmp	r0, #0
 801c560:	d03a      	beq.n	801c5d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c562:	4920      	ldr	r1, [pc, #128]	; (801c5e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801c564:	6809      	ldr	r1, [r1, #0]
 801c566:	2900      	cmp	r1, #0
 801c568:	d036      	beq.n	801c5d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c56a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801c56e:	2900      	cmp	r1, #0
 801c570:	d032      	beq.n	801c5d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c572:	891a      	ldrh	r2, [r3, #8]
 801c574:	8958      	ldrh	r0, [r3, #10]
 801c576:	4350      	muls	r0, r2
 801c578:	7c5a      	ldrb	r2, [r3, #17]
 801c57a:	7cdb      	ldrb	r3, [r3, #19]
 801c57c:	0952      	lsrs	r2, r2, #5
 801c57e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801c582:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801c586:	2b0b      	cmp	r3, #11
 801c588:	bf18      	it	ne
 801c58a:	0040      	lslne	r0, r0, #1
 801c58c:	3003      	adds	r0, #3
 801c58e:	f020 0003 	bic.w	r0, r0, #3
 801c592:	4408      	add	r0, r1
 801c594:	4770      	bx	lr
 801c596:	4b14      	ldr	r3, [pc, #80]	; (801c5e8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801c598:	881b      	ldrh	r3, [r3, #0]
 801c59a:	4403      	add	r3, r0
 801c59c:	429a      	cmp	r2, r3
 801c59e:	da1a      	bge.n	801c5d6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801c5a0:	4b12      	ldr	r3, [pc, #72]	; (801c5ec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801c5a2:	681b      	ldr	r3, [r3, #0]
 801c5a4:	1a10      	subs	r0, r2, r0
 801c5a6:	210e      	movs	r1, #14
 801c5a8:	fb01 3000 	mla	r0, r1, r0, r3
 801c5ac:	7b03      	ldrb	r3, [r0, #12]
 801c5ae:	f003 031f 	and.w	r3, r3, #31
 801c5b2:	2b0b      	cmp	r3, #11
 801c5b4:	d10b      	bne.n	801c5ce <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801c5b6:	8903      	ldrh	r3, [r0, #8]
 801c5b8:	8940      	ldrh	r0, [r0, #10]
 801c5ba:	4358      	muls	r0, r3
 801c5bc:	4b09      	ldr	r3, [pc, #36]	; (801c5e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801c5be:	6819      	ldr	r1, [r3, #0]
 801c5c0:	3003      	adds	r0, #3
 801c5c2:	f020 0303 	bic.w	r3, r0, #3
 801c5c6:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801c5ca:	4418      	add	r0, r3
 801c5cc:	4770      	bx	lr
 801c5ce:	2b0d      	cmp	r3, #13
 801c5d0:	d101      	bne.n	801c5d6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801c5d2:	300d      	adds	r0, #13
 801c5d4:	4770      	bx	lr
 801c5d6:	2000      	movs	r0, #0
 801c5d8:	4770      	bx	lr
 801c5da:	bf00      	nop
 801c5dc:	200138d4 	.word	0x200138d4
 801c5e0:	200138dc 	.word	0x200138dc
 801c5e4:	200138b8 	.word	0x200138b8
 801c5e8:	200138d8 	.word	0x200138d8
 801c5ec:	200138bc 	.word	0x200138bc

0801c5f0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801c5f0:	b510      	push	{r4, lr}
 801c5f2:	4a17      	ldr	r2, [pc, #92]	; (801c650 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801c5f4:	8803      	ldrh	r3, [r0, #0]
 801c5f6:	8812      	ldrh	r2, [r2, #0]
 801c5f8:	4293      	cmp	r3, r2
 801c5fa:	d20c      	bcs.n	801c616 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801c5fc:	4a15      	ldr	r2, [pc, #84]	; (801c654 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801c5fe:	6812      	ldr	r2, [r2, #0]
 801c600:	2114      	movs	r1, #20
 801c602:	fb01 2303 	mla	r3, r1, r3, r2
 801c606:	7c58      	ldrb	r0, [r3, #17]
 801c608:	0942      	lsrs	r2, r0, #5
 801c60a:	7cd8      	ldrb	r0, [r3, #19]
 801c60c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801c610:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801c614:	bd10      	pop	{r4, pc}
 801c616:	4910      	ldr	r1, [pc, #64]	; (801c658 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801c618:	8809      	ldrh	r1, [r1, #0]
 801c61a:	4411      	add	r1, r2
 801c61c:	428b      	cmp	r3, r1
 801c61e:	da09      	bge.n	801c634 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801c620:	1a9b      	subs	r3, r3, r2
 801c622:	4a0e      	ldr	r2, [pc, #56]	; (801c65c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801c624:	6812      	ldr	r2, [r2, #0]
 801c626:	210e      	movs	r1, #14
 801c628:	fb01 2303 	mla	r3, r1, r3, r2
 801c62c:	7b18      	ldrb	r0, [r3, #12]
 801c62e:	f000 001f 	and.w	r0, r0, #31
 801c632:	e7ef      	b.n	801c614 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801c634:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c638:	4293      	cmp	r3, r2
 801c63a:	d106      	bne.n	801c64a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801c63c:	f7e8 ffe4 	bl	8005608 <_ZN8touchgfx3HAL3lcdEv>
 801c640:	6803      	ldr	r3, [r0, #0]
 801c642:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c646:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c648:	4718      	bx	r3
 801c64a:	2000      	movs	r0, #0
 801c64c:	e7e2      	b.n	801c614 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801c64e:	bf00      	nop
 801c650:	200138d4 	.word	0x200138d4
 801c654:	200138dc 	.word	0x200138dc
 801c658:	200138d8 	.word	0x200138d8
 801c65c:	200138bc 	.word	0x200138bc

0801c660 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801c660:	2010      	movs	r0, #16
 801c662:	4770      	bx	lr

0801c664 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801c664:	2000      	movs	r0, #0
 801c666:	4770      	bx	lr

0801c668 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801c668:	4b02      	ldr	r3, [pc, #8]	; (801c674 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801c66a:	8818      	ldrh	r0, [r3, #0]
 801c66c:	0040      	lsls	r0, r0, #1
 801c66e:	b280      	uxth	r0, r0
 801c670:	4770      	bx	lr
 801c672:	bf00      	nop
 801c674:	20013846 	.word	0x20013846

0801c678 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801c678:	2bff      	cmp	r3, #255	; 0xff
 801c67a:	d050      	beq.n	801c71e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801c67c:	2a0b      	cmp	r2, #11
 801c67e:	d04a      	beq.n	801c716 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801c680:	d80e      	bhi.n	801c6a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801c682:	2a03      	cmp	r2, #3
 801c684:	d03f      	beq.n	801c706 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801c686:	d804      	bhi.n	801c692 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801c688:	2a01      	cmp	r2, #1
 801c68a:	d03e      	beq.n	801c70a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801c68c:	d93f      	bls.n	801c70e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801c68e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801c690:	4770      	bx	lr
 801c692:	2a09      	cmp	r2, #9
 801c694:	d03f      	beq.n	801c716 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801c696:	d83c      	bhi.n	801c712 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801c698:	2a08      	cmp	r2, #8
 801c69a:	d03a      	beq.n	801c712 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801c69c:	2000      	movs	r0, #0
 801c69e:	4770      	bx	lr
 801c6a0:	2a2f      	cmp	r2, #47	; 0x2f
 801c6a2:	d024      	beq.n	801c6ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801c6a4:	d80d      	bhi.n	801c6c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801c6a6:	2a2d      	cmp	r2, #45	; 0x2d
 801c6a8:	d014      	beq.n	801c6d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801c6aa:	d826      	bhi.n	801c6fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801c6ac:	2a2c      	cmp	r2, #44	; 0x2c
 801c6ae:	d1f5      	bne.n	801c69c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c6b0:	684b      	ldr	r3, [r1, #4]
 801c6b2:	781b      	ldrb	r3, [r3, #0]
 801c6b4:	2b01      	cmp	r3, #1
 801c6b6:	d018      	beq.n	801c6ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801c6b8:	d323      	bcc.n	801c702 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801c6ba:	2b02      	cmp	r3, #2
 801c6bc:	d1ee      	bne.n	801c69c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c6be:	6880      	ldr	r0, [r0, #8]
 801c6c0:	4770      	bx	lr
 801c6c2:	2a31      	cmp	r2, #49	; 0x31
 801c6c4:	d004      	beq.n	801c6d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801c6c6:	d328      	bcc.n	801c71a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801c6c8:	2a32      	cmp	r2, #50	; 0x32
 801c6ca:	d026      	beq.n	801c71a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801c6cc:	2a33      	cmp	r2, #51	; 0x33
 801c6ce:	d1e5      	bne.n	801c69c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c6d0:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801c6d2:	4770      	bx	lr
 801c6d4:	684b      	ldr	r3, [r1, #4]
 801c6d6:	781b      	ldrb	r3, [r3, #0]
 801c6d8:	2b01      	cmp	r3, #1
 801c6da:	d004      	beq.n	801c6e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801c6dc:	d30b      	bcc.n	801c6f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801c6de:	2b02      	cmp	r3, #2
 801c6e0:	d1dc      	bne.n	801c69c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c6e2:	6900      	ldr	r0, [r0, #16]
 801c6e4:	4770      	bx	lr
 801c6e6:	6a00      	ldr	r0, [r0, #32]
 801c6e8:	4770      	bx	lr
 801c6ea:	6980      	ldr	r0, [r0, #24]
 801c6ec:	4770      	bx	lr
 801c6ee:	684b      	ldr	r3, [r1, #4]
 801c6f0:	781b      	ldrb	r3, [r3, #0]
 801c6f2:	2b00      	cmp	r3, #0
 801c6f4:	d1d2      	bne.n	801c69c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c6f6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801c6f8:	4770      	bx	lr
 801c6fa:	684b      	ldr	r3, [r1, #4]
 801c6fc:	781b      	ldrb	r3, [r3, #0]
 801c6fe:	2b00      	cmp	r3, #0
 801c700:	d1cc      	bne.n	801c69c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c702:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801c704:	4770      	bx	lr
 801c706:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801c708:	4770      	bx	lr
 801c70a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801c70c:	4770      	bx	lr
 801c70e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801c710:	4770      	bx	lr
 801c712:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801c714:	4770      	bx	lr
 801c716:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801c718:	4770      	bx	lr
 801c71a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801c71c:	4770      	bx	lr
 801c71e:	2a0b      	cmp	r2, #11
 801c720:	d049      	beq.n	801c7b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801c722:	d80e      	bhi.n	801c742 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801c724:	2a03      	cmp	r2, #3
 801c726:	d040      	beq.n	801c7aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801c728:	d804      	bhi.n	801c734 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801c72a:	2a01      	cmp	r2, #1
 801c72c:	d03f      	beq.n	801c7ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801c72e:	d940      	bls.n	801c7b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801c730:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801c732:	4770      	bx	lr
 801c734:	2a09      	cmp	r2, #9
 801c736:	d03e      	beq.n	801c7b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801c738:	d801      	bhi.n	801c73e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801c73a:	2a08      	cmp	r2, #8
 801c73c:	d1ae      	bne.n	801c69c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c73e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801c740:	4770      	bx	lr
 801c742:	2a2f      	cmp	r2, #47	; 0x2f
 801c744:	d024      	beq.n	801c790 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801c746:	d80d      	bhi.n	801c764 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801c748:	2a2d      	cmp	r2, #45	; 0x2d
 801c74a:	d014      	beq.n	801c776 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801c74c:	d826      	bhi.n	801c79c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801c74e:	2a2c      	cmp	r2, #44	; 0x2c
 801c750:	d1a4      	bne.n	801c69c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c752:	684b      	ldr	r3, [r1, #4]
 801c754:	781b      	ldrb	r3, [r3, #0]
 801c756:	2b01      	cmp	r3, #1
 801c758:	d018      	beq.n	801c78c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801c75a:	d324      	bcc.n	801c7a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801c75c:	2b02      	cmp	r3, #2
 801c75e:	d19d      	bne.n	801c69c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c760:	68c0      	ldr	r0, [r0, #12]
 801c762:	4770      	bx	lr
 801c764:	2a31      	cmp	r2, #49	; 0x31
 801c766:	d004      	beq.n	801c772 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801c768:	d327      	bcc.n	801c7ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801c76a:	2a32      	cmp	r2, #50	; 0x32
 801c76c:	d025      	beq.n	801c7ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801c76e:	2a33      	cmp	r2, #51	; 0x33
 801c770:	d194      	bne.n	801c69c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c772:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801c774:	4770      	bx	lr
 801c776:	684b      	ldr	r3, [r1, #4]
 801c778:	781b      	ldrb	r3, [r3, #0]
 801c77a:	2b01      	cmp	r3, #1
 801c77c:	d004      	beq.n	801c788 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801c77e:	d30b      	bcc.n	801c798 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801c780:	2b02      	cmp	r3, #2
 801c782:	d18b      	bne.n	801c69c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c784:	6940      	ldr	r0, [r0, #20]
 801c786:	4770      	bx	lr
 801c788:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801c78a:	4770      	bx	lr
 801c78c:	69c0      	ldr	r0, [r0, #28]
 801c78e:	4770      	bx	lr
 801c790:	684b      	ldr	r3, [r1, #4]
 801c792:	781b      	ldrb	r3, [r3, #0]
 801c794:	2b00      	cmp	r3, #0
 801c796:	d181      	bne.n	801c69c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c798:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801c79a:	4770      	bx	lr
 801c79c:	684b      	ldr	r3, [r1, #4]
 801c79e:	781b      	ldrb	r3, [r3, #0]
 801c7a0:	2b00      	cmp	r3, #0
 801c7a2:	f47f af7b 	bne.w	801c69c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c7a6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801c7a8:	4770      	bx	lr
 801c7aa:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801c7ac:	4770      	bx	lr
 801c7ae:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801c7b0:	4770      	bx	lr
 801c7b2:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801c7b4:	4770      	bx	lr
 801c7b6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801c7b8:	4770      	bx	lr
 801c7ba:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801c7bc:	4770      	bx	lr

0801c7be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c7be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c7c2:	b087      	sub	sp, #28
 801c7c4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c7c6:	9205      	str	r2, [sp, #20]
 801c7c8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c7cc:	9202      	str	r2, [sp, #8]
 801c7ce:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801c7d2:	9101      	str	r1, [sp, #4]
 801c7d4:	6841      	ldr	r1, [r0, #4]
 801c7d6:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801c7da:	fb01 2404 	mla	r4, r1, r4, r2
 801c7de:	6802      	ldr	r2, [r0, #0]
 801c7e0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c7e4:	f8de 2000 	ldr.w	r2, [lr]
 801c7e8:	9203      	str	r2, [sp, #12]
 801c7ea:	f8de 2004 	ldr.w	r2, [lr, #4]
 801c7ee:	3204      	adds	r2, #4
 801c7f0:	9204      	str	r2, [sp, #16]
 801c7f2:	9a02      	ldr	r2, [sp, #8]
 801c7f4:	43d6      	mvns	r6, r2
 801c7f6:	b2f6      	uxtb	r6, r6
 801c7f8:	9a01      	ldr	r2, [sp, #4]
 801c7fa:	2a00      	cmp	r2, #0
 801c7fc:	dc03      	bgt.n	801c806 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c7fe:	9a05      	ldr	r2, [sp, #20]
 801c800:	2a00      	cmp	r2, #0
 801c802:	f340 8129 	ble.w	801ca58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801c806:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c808:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801c80c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801c810:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c814:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c816:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c81a:	2b00      	cmp	r3, #0
 801c81c:	dd0e      	ble.n	801c83c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c81e:	1408      	asrs	r0, r1, #16
 801c820:	d405      	bmi.n	801c82e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c822:	4560      	cmp	r0, ip
 801c824:	da03      	bge.n	801c82e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c826:	1410      	asrs	r0, r2, #16
 801c828:	d401      	bmi.n	801c82e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c82a:	42b8      	cmp	r0, r7
 801c82c:	db07      	blt.n	801c83e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c82e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c830:	4401      	add	r1, r0
 801c832:	9814      	ldr	r0, [sp, #80]	; 0x50
 801c834:	3b01      	subs	r3, #1
 801c836:	4402      	add	r2, r0
 801c838:	3402      	adds	r4, #2
 801c83a:	e7ee      	b.n	801c81a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801c83c:	d071      	beq.n	801c922 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c83e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c840:	1e58      	subs	r0, r3, #1
 801c842:	fb05 1500 	mla	r5, r5, r0, r1
 801c846:	142d      	asrs	r5, r5, #16
 801c848:	d45f      	bmi.n	801c90a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c84a:	4565      	cmp	r5, ip
 801c84c:	da5d      	bge.n	801c90a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c84e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c850:	fb05 2000 	mla	r0, r5, r0, r2
 801c854:	1400      	asrs	r0, r0, #16
 801c856:	d458      	bmi.n	801c90a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c858:	42b8      	cmp	r0, r7
 801c85a:	da56      	bge.n	801c90a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c85c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801c860:	4699      	mov	r9, r3
 801c862:	46a2      	mov	sl, r4
 801c864:	f1b9 0f00 	cmp.w	r9, #0
 801c868:	dd57      	ble.n	801c91a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801c86a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801c86e:	9803      	ldr	r0, [sp, #12]
 801c870:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801c874:	140d      	asrs	r5, r1, #16
 801c876:	fb07 000c 	mla	r0, r7, ip, r0
 801c87a:	f109 39ff 	add.w	r9, r9, #4294967295
 801c87e:	5d40      	ldrb	r0, [r0, r5]
 801c880:	9d04      	ldr	r5, [sp, #16]
 801c882:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801c886:	f8ba 5000 	ldrh.w	r5, [sl]
 801c88a:	122f      	asrs	r7, r5, #8
 801c88c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801c890:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c894:	fb17 f706 	smulbb	r7, r7, r6
 801c898:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801c89c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c8a0:	00ed      	lsls	r5, r5, #3
 801c8a2:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801c8a6:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801c8aa:	10c7      	asrs	r7, r0, #3
 801c8ac:	b2ed      	uxtb	r5, r5
 801c8ae:	00c0      	lsls	r0, r0, #3
 801c8b0:	fb18 f806 	smulbb	r8, r8, r6
 801c8b4:	fb15 f506 	smulbb	r5, r5, r6
 801c8b8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c8bc:	b2c0      	uxtb	r0, r0
 801c8be:	fa1f fc8c 	uxth.w	ip, ip
 801c8c2:	fb07 870b 	mla	r7, r7, fp, r8
 801c8c6:	fb00 500b 	mla	r0, r0, fp, r5
 801c8ca:	b280      	uxth	r0, r0
 801c8cc:	b2bf      	uxth	r7, r7
 801c8ce:	f10c 0501 	add.w	r5, ip, #1
 801c8d2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c8d6:	f107 0801 	add.w	r8, r7, #1
 801c8da:	1c45      	adds	r5, r0, #1
 801c8dc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c8e0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801c8e4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c8e6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c8ea:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c8ee:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801c8f2:	ea45 0c0c 	orr.w	ip, r5, ip
 801c8f6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c8fa:	4401      	add	r1, r0
 801c8fc:	9814      	ldr	r0, [sp, #80]	; 0x50
 801c8fe:	ea4c 0c08 	orr.w	ip, ip, r8
 801c902:	f82a cb02 	strh.w	ip, [sl], #2
 801c906:	4402      	add	r2, r0
 801c908:	e7ac      	b.n	801c864 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c90a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801c90e:	f04f 0800 	mov.w	r8, #0
 801c912:	eb03 0008 	add.w	r0, r3, r8
 801c916:	2800      	cmp	r0, #0
 801c918:	dc41      	bgt.n	801c99e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801c91a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c91e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c922:	9b01      	ldr	r3, [sp, #4]
 801c924:	2b00      	cmp	r3, #0
 801c926:	f340 8097 	ble.w	801ca58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801c92a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c92e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c932:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c936:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c938:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c93c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c940:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c944:	eef0 6a62 	vmov.f32	s13, s5
 801c948:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c94c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c950:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c954:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801c958:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c95c:	eef0 6a43 	vmov.f32	s13, s6
 801c960:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c964:	ee12 2a90 	vmov	r2, s5
 801c968:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c96c:	fb92 f3f3 	sdiv	r3, r2, r3
 801c970:	ee13 2a10 	vmov	r2, s6
 801c974:	9313      	str	r3, [sp, #76]	; 0x4c
 801c976:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c978:	fb92 f3f3 	sdiv	r3, r2, r3
 801c97c:	9314      	str	r3, [sp, #80]	; 0x50
 801c97e:	9b01      	ldr	r3, [sp, #4]
 801c980:	9a05      	ldr	r2, [sp, #20]
 801c982:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c986:	3b01      	subs	r3, #1
 801c988:	9301      	str	r3, [sp, #4]
 801c98a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801c98e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c990:	eeb0 3a67 	vmov.f32	s6, s15
 801c994:	bf08      	it	eq
 801c996:	4613      	moveq	r3, r2
 801c998:	eef0 2a47 	vmov.f32	s5, s14
 801c99c:	e72c      	b.n	801c7f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c99e:	140f      	asrs	r7, r1, #16
 801c9a0:	d453      	bmi.n	801ca4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c9a2:	f8de 5008 	ldr.w	r5, [lr, #8]
 801c9a6:	42bd      	cmp	r5, r7
 801c9a8:	dd4f      	ble.n	801ca4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c9aa:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801c9ae:	d44c      	bmi.n	801ca4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c9b0:	f8de 000c 	ldr.w	r0, [lr, #12]
 801c9b4:	4560      	cmp	r0, ip
 801c9b6:	dd48      	ble.n	801ca4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c9b8:	9803      	ldr	r0, [sp, #12]
 801c9ba:	b22d      	sxth	r5, r5
 801c9bc:	fb0c 0505 	mla	r5, ip, r5, r0
 801c9c0:	5de8      	ldrb	r0, [r5, r7]
 801c9c2:	9d04      	ldr	r5, [sp, #16]
 801c9c4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801c9c8:	f06f 0501 	mvn.w	r5, #1
 801c9cc:	fb05 fb08 	mul.w	fp, r5, r8
 801c9d0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801c9d4:	f834 500b 	ldrh.w	r5, [r4, fp]
 801c9d8:	122f      	asrs	r7, r5, #8
 801c9da:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c9de:	fb17 f706 	smulbb	r7, r7, r6
 801c9e2:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801c9e6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c9ea:	00ed      	lsls	r5, r5, #3
 801c9ec:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801c9f0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801c9f4:	10c7      	asrs	r7, r0, #3
 801c9f6:	b2ed      	uxtb	r5, r5
 801c9f8:	00c0      	lsls	r0, r0, #3
 801c9fa:	fb19 f906 	smulbb	r9, r9, r6
 801c9fe:	fb15 f506 	smulbb	r5, r5, r6
 801ca02:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ca06:	b2c0      	uxtb	r0, r0
 801ca08:	fa1f fc8c 	uxth.w	ip, ip
 801ca0c:	fb07 970a 	mla	r7, r7, sl, r9
 801ca10:	fb00 500a 	mla	r0, r0, sl, r5
 801ca14:	b2bf      	uxth	r7, r7
 801ca16:	b280      	uxth	r0, r0
 801ca18:	f10c 0501 	add.w	r5, ip, #1
 801ca1c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ca20:	f107 0901 	add.w	r9, r7, #1
 801ca24:	1c45      	adds	r5, r0, #1
 801ca26:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ca2a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801ca2e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ca32:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ca36:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ca3a:	ea45 0c0c 	orr.w	ip, r5, ip
 801ca3e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ca42:	ea4c 0c09 	orr.w	ip, ip, r9
 801ca46:	f824 c00b 	strh.w	ip, [r4, fp]
 801ca4a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ca4c:	4401      	add	r1, r0
 801ca4e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801ca50:	f108 38ff 	add.w	r8, r8, #4294967295
 801ca54:	4402      	add	r2, r0
 801ca56:	e75c      	b.n	801c912 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801ca58:	b007      	add	sp, #28
 801ca5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ca5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ca5e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ca62:	b085      	sub	sp, #20
 801ca64:	4693      	mov	fp, r2
 801ca66:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801ca68:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801ca6a:	6870      	ldr	r0, [r6, #4]
 801ca6c:	9100      	str	r1, [sp, #0]
 801ca6e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801ca72:	fb00 2404 	mla	r4, r0, r4, r2
 801ca76:	6832      	ldr	r2, [r6, #0]
 801ca78:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ca7c:	682a      	ldr	r2, [r5, #0]
 801ca7e:	9201      	str	r2, [sp, #4]
 801ca80:	686a      	ldr	r2, [r5, #4]
 801ca82:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801ca86:	3204      	adds	r2, #4
 801ca88:	9202      	str	r2, [sp, #8]
 801ca8a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ca8e:	9a00      	ldr	r2, [sp, #0]
 801ca90:	2a00      	cmp	r2, #0
 801ca92:	dc03      	bgt.n	801ca9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ca94:	f1bb 0f00 	cmp.w	fp, #0
 801ca98:	f340 80a0 	ble.w	801cbdc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801ca9c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ca9e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801caa2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801caa6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801caaa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801caac:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801cab0:	2b00      	cmp	r3, #0
 801cab2:	dd0c      	ble.n	801cace <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cab4:	1406      	asrs	r6, r0, #16
 801cab6:	d405      	bmi.n	801cac4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801cab8:	454e      	cmp	r6, r9
 801caba:	da03      	bge.n	801cac4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801cabc:	1416      	asrs	r6, r2, #16
 801cabe:	d401      	bmi.n	801cac4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801cac0:	4546      	cmp	r6, r8
 801cac2:	db05      	blt.n	801cad0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cac4:	4470      	add	r0, lr
 801cac6:	4462      	add	r2, ip
 801cac8:	3b01      	subs	r3, #1
 801caca:	3402      	adds	r4, #2
 801cacc:	e7f0      	b.n	801cab0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801cace:	d00f      	beq.n	801caf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801cad0:	1e5e      	subs	r6, r3, #1
 801cad2:	fb0e 0706 	mla	r7, lr, r6, r0
 801cad6:	143f      	asrs	r7, r7, #16
 801cad8:	d541      	bpl.n	801cb5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801cada:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801cade:	4698      	mov	r8, r3
 801cae0:	9603      	str	r6, [sp, #12]
 801cae2:	f1b8 0f00 	cmp.w	r8, #0
 801cae6:	dc59      	bgt.n	801cb9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801cae8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801caec:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801caf0:	9b00      	ldr	r3, [sp, #0]
 801caf2:	2b00      	cmp	r3, #0
 801caf4:	dd72      	ble.n	801cbdc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801caf6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cafa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cafe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801cb02:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cb04:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cb08:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cb0c:	eeb0 6a62 	vmov.f32	s12, s5
 801cb10:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cb14:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cb18:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cb1c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801cb20:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cb24:	eeb0 6a43 	vmov.f32	s12, s6
 801cb28:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cb2c:	ee12 2a90 	vmov	r2, s5
 801cb30:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cb34:	fb92 fef3 	sdiv	lr, r2, r3
 801cb38:	ee13 2a10 	vmov	r2, s6
 801cb3c:	fb92 fcf3 	sdiv	ip, r2, r3
 801cb40:	9b00      	ldr	r3, [sp, #0]
 801cb42:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cb46:	3b01      	subs	r3, #1
 801cb48:	9300      	str	r3, [sp, #0]
 801cb4a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801cb4e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cb50:	eeb0 3a67 	vmov.f32	s6, s15
 801cb54:	bf08      	it	eq
 801cb56:	465b      	moveq	r3, fp
 801cb58:	eef0 2a47 	vmov.f32	s5, s14
 801cb5c:	e797      	b.n	801ca8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801cb5e:	454f      	cmp	r7, r9
 801cb60:	dabb      	bge.n	801cada <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cb62:	fb0c 2606 	mla	r6, ip, r6, r2
 801cb66:	1436      	asrs	r6, r6, #16
 801cb68:	d4b7      	bmi.n	801cada <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cb6a:	4546      	cmp	r6, r8
 801cb6c:	dab5      	bge.n	801cada <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cb6e:	461e      	mov	r6, r3
 801cb70:	46a0      	mov	r8, r4
 801cb72:	2e00      	cmp	r6, #0
 801cb74:	ddb8      	ble.n	801cae8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cb76:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801cb7a:	9901      	ldr	r1, [sp, #4]
 801cb7c:	1417      	asrs	r7, r2, #16
 801cb7e:	ea4f 4920 	mov.w	r9, r0, asr #16
 801cb82:	fb0a 1707 	mla	r7, sl, r7, r1
 801cb86:	9902      	ldr	r1, [sp, #8]
 801cb88:	f817 7009 	ldrb.w	r7, [r7, r9]
 801cb8c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801cb90:	f828 7b02 	strh.w	r7, [r8], #2
 801cb94:	4470      	add	r0, lr
 801cb96:	4462      	add	r2, ip
 801cb98:	3e01      	subs	r6, #1
 801cb9a:	e7ea      	b.n	801cb72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801cb9c:	ea5f 4920 	movs.w	r9, r0, asr #16
 801cba0:	d417      	bmi.n	801cbd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cba2:	68ae      	ldr	r6, [r5, #8]
 801cba4:	454e      	cmp	r6, r9
 801cba6:	dd14      	ble.n	801cbd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cba8:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801cbac:	d411      	bmi.n	801cbd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cbae:	68ef      	ldr	r7, [r5, #12]
 801cbb0:	4557      	cmp	r7, sl
 801cbb2:	dd0e      	ble.n	801cbd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cbb4:	9f01      	ldr	r7, [sp, #4]
 801cbb6:	b236      	sxth	r6, r6
 801cbb8:	fb0a 7606 	mla	r6, sl, r6, r7
 801cbbc:	9f02      	ldr	r7, [sp, #8]
 801cbbe:	f816 6009 	ldrb.w	r6, [r6, r9]
 801cbc2:	f06f 0101 	mvn.w	r1, #1
 801cbc6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801cbca:	fb01 f608 	mul.w	r6, r1, r8
 801cbce:	9903      	ldr	r1, [sp, #12]
 801cbd0:	538f      	strh	r7, [r1, r6]
 801cbd2:	4470      	add	r0, lr
 801cbd4:	4462      	add	r2, ip
 801cbd6:	f108 38ff 	add.w	r8, r8, #4294967295
 801cbda:	e782      	b.n	801cae2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cbdc:	b005      	add	sp, #20
 801cbde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cbe2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cbe2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cbe6:	b087      	sub	sp, #28
 801cbe8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801cbea:	9205      	str	r2, [sp, #20]
 801cbec:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cbf0:	9203      	str	r2, [sp, #12]
 801cbf2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801cbf6:	9102      	str	r1, [sp, #8]
 801cbf8:	6861      	ldr	r1, [r4, #4]
 801cbfa:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801cbfe:	fb01 2000 	mla	r0, r1, r0, r2
 801cc02:	6822      	ldr	r2, [r4, #0]
 801cc04:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801cc08:	9200      	str	r2, [sp, #0]
 801cc0a:	f8dc 2000 	ldr.w	r2, [ip]
 801cc0e:	9204      	str	r2, [sp, #16]
 801cc10:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801cc14:	3204      	adds	r2, #4
 801cc16:	9201      	str	r2, [sp, #4]
 801cc18:	9a03      	ldr	r2, [sp, #12]
 801cc1a:	43d5      	mvns	r5, r2
 801cc1c:	b2ed      	uxtb	r5, r5
 801cc1e:	9a02      	ldr	r2, [sp, #8]
 801cc20:	2a00      	cmp	r2, #0
 801cc22:	dc03      	bgt.n	801cc2c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801cc24:	9a05      	ldr	r2, [sp, #20]
 801cc26:	2a00      	cmp	r2, #0
 801cc28:	f340 812c 	ble.w	801ce84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801cc2c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801cc2e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801cc32:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801cc36:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801cc3a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801cc3c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801cc40:	2b00      	cmp	r3, #0
 801cc42:	dd10      	ble.n	801cc66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cc44:	140c      	asrs	r4, r1, #16
 801cc46:	d405      	bmi.n	801cc54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cc48:	4574      	cmp	r4, lr
 801cc4a:	da03      	bge.n	801cc54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cc4c:	1414      	asrs	r4, r2, #16
 801cc4e:	d401      	bmi.n	801cc54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cc50:	42bc      	cmp	r4, r7
 801cc52:	db09      	blt.n	801cc68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801cc54:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801cc56:	9800      	ldr	r0, [sp, #0]
 801cc58:	4421      	add	r1, r4
 801cc5a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801cc5c:	3002      	adds	r0, #2
 801cc5e:	4422      	add	r2, r4
 801cc60:	3b01      	subs	r3, #1
 801cc62:	9000      	str	r0, [sp, #0]
 801cc64:	e7ec      	b.n	801cc40 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801cc66:	d071      	beq.n	801cd4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801cc68:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801cc6a:	1e5c      	subs	r4, r3, #1
 801cc6c:	fb06 1604 	mla	r6, r6, r4, r1
 801cc70:	1436      	asrs	r6, r6, #16
 801cc72:	d45d      	bmi.n	801cd30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cc74:	4576      	cmp	r6, lr
 801cc76:	da5b      	bge.n	801cd30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cc78:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801cc7a:	fb06 2404 	mla	r4, r6, r4, r2
 801cc7e:	1424      	asrs	r4, r4, #16
 801cc80:	d456      	bmi.n	801cd30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cc82:	42bc      	cmp	r4, r7
 801cc84:	da54      	bge.n	801cd30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cc86:	f8dd 9000 	ldr.w	r9, [sp]
 801cc8a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801cc8e:	4698      	mov	r8, r3
 801cc90:	f1b8 0f00 	cmp.w	r8, #0
 801cc94:	dd54      	ble.n	801cd40 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801cc96:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801cc9a:	9804      	ldr	r0, [sp, #16]
 801cc9c:	1414      	asrs	r4, r2, #16
 801cc9e:	fb07 0404 	mla	r4, r7, r4, r0
 801cca2:	140e      	asrs	r6, r1, #16
 801cca4:	9801      	ldr	r0, [sp, #4]
 801cca6:	f814 e006 	ldrb.w	lr, [r4, r6]
 801ccaa:	f8b9 4000 	ldrh.w	r4, [r9]
 801ccae:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801ccb2:	eb00 0b0e 	add.w	fp, r0, lr
 801ccb6:	1227      	asrs	r7, r4, #8
 801ccb8:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801ccbc:	f89b b001 	ldrb.w	fp, [fp, #1]
 801ccc0:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801ccc4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ccc6:	fb16 f60a 	smulbb	r6, r6, sl
 801ccca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ccce:	fb07 6705 	mla	r7, r7, r5, r6
 801ccd2:	10e6      	asrs	r6, r4, #3
 801ccd4:	00e4      	lsls	r4, r4, #3
 801ccd6:	b2e4      	uxtb	r4, r4
 801ccd8:	fb1b fb0a 	smulbb	fp, fp, sl
 801ccdc:	fb14 f405 	smulbb	r4, r4, r5
 801cce0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cce4:	b2bf      	uxth	r7, r7
 801cce6:	fb06 b605 	mla	r6, r6, r5, fp
 801ccea:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801ccee:	b2b6      	uxth	r6, r6
 801ccf0:	fa1f fe8e 	uxth.w	lr, lr
 801ccf4:	1c7c      	adds	r4, r7, #1
 801ccf6:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801ccfa:	f106 0b01 	add.w	fp, r6, #1
 801ccfe:	f10e 0401 	add.w	r4, lr, #1
 801cd02:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801cd06:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801cd0a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801cd0e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801cd12:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801cd16:	4327      	orrs	r7, r4
 801cd18:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801cd1c:	4401      	add	r1, r0
 801cd1e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cd20:	ea47 070b 	orr.w	r7, r7, fp
 801cd24:	f829 7b02 	strh.w	r7, [r9], #2
 801cd28:	4402      	add	r2, r0
 801cd2a:	f108 38ff 	add.w	r8, r8, #4294967295
 801cd2e:	e7af      	b.n	801cc90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801cd30:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801cd34:	f04f 0e00 	mov.w	lr, #0
 801cd38:	eb03 040e 	add.w	r4, r3, lr
 801cd3c:	2c00      	cmp	r4, #0
 801cd3e:	dc43      	bgt.n	801cdc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801cd40:	9a00      	ldr	r2, [sp, #0]
 801cd42:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cd46:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cd4a:	9300      	str	r3, [sp, #0]
 801cd4c:	9b02      	ldr	r3, [sp, #8]
 801cd4e:	2b00      	cmp	r3, #0
 801cd50:	f340 8098 	ble.w	801ce84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801cd54:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cd58:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cd5c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cd60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cd62:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cd66:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cd6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cd6e:	eef0 6a62 	vmov.f32	s13, s5
 801cd72:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cd76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cd7a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cd7e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801cd82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cd86:	eef0 6a43 	vmov.f32	s13, s6
 801cd8a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cd8e:	ee12 2a90 	vmov	r2, s5
 801cd92:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cd96:	fb92 f3f3 	sdiv	r3, r2, r3
 801cd9a:	ee13 2a10 	vmov	r2, s6
 801cd9e:	9313      	str	r3, [sp, #76]	; 0x4c
 801cda0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cda2:	fb92 f3f3 	sdiv	r3, r2, r3
 801cda6:	9314      	str	r3, [sp, #80]	; 0x50
 801cda8:	9b02      	ldr	r3, [sp, #8]
 801cdaa:	9a05      	ldr	r2, [sp, #20]
 801cdac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cdb0:	3b01      	subs	r3, #1
 801cdb2:	9302      	str	r3, [sp, #8]
 801cdb4:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801cdb8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cdba:	eeb0 3a67 	vmov.f32	s6, s15
 801cdbe:	bf08      	it	eq
 801cdc0:	4613      	moveq	r3, r2
 801cdc2:	eef0 2a47 	vmov.f32	s5, s14
 801cdc6:	e72a      	b.n	801cc1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801cdc8:	140f      	asrs	r7, r1, #16
 801cdca:	d454      	bmi.n	801ce76 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cdcc:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801cdd0:	42be      	cmp	r6, r7
 801cdd2:	dd50      	ble.n	801ce76 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cdd4:	ea5f 4822 	movs.w	r8, r2, asr #16
 801cdd8:	d44d      	bmi.n	801ce76 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cdda:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801cdde:	4544      	cmp	r4, r8
 801cde0:	dd49      	ble.n	801ce76 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cde2:	9c04      	ldr	r4, [sp, #16]
 801cde4:	b236      	sxth	r6, r6
 801cde6:	fb08 4606 	mla	r6, r8, r6, r4
 801cdea:	f06f 0001 	mvn.w	r0, #1
 801cdee:	f816 8007 	ldrb.w	r8, [r6, r7]
 801cdf2:	9c01      	ldr	r4, [sp, #4]
 801cdf4:	fb00 fa0e 	mul.w	sl, r0, lr
 801cdf8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801cdfc:	9800      	ldr	r0, [sp, #0]
 801cdfe:	eb04 0b08 	add.w	fp, r4, r8
 801ce02:	f830 400a 	ldrh.w	r4, [r0, sl]
 801ce06:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801ce0a:	9801      	ldr	r0, [sp, #4]
 801ce0c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801ce10:	f810 8008 	ldrb.w	r8, [r0, r8]
 801ce14:	9800      	ldr	r0, [sp, #0]
 801ce16:	1227      	asrs	r7, r4, #8
 801ce18:	fb16 f609 	smulbb	r6, r6, r9
 801ce1c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ce20:	fb07 6705 	mla	r7, r7, r5, r6
 801ce24:	10e6      	asrs	r6, r4, #3
 801ce26:	00e4      	lsls	r4, r4, #3
 801ce28:	b2e4      	uxtb	r4, r4
 801ce2a:	fb1b fb09 	smulbb	fp, fp, r9
 801ce2e:	fb14 f405 	smulbb	r4, r4, r5
 801ce32:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ce36:	b2bf      	uxth	r7, r7
 801ce38:	fb06 b605 	mla	r6, r6, r5, fp
 801ce3c:	fb08 4809 	mla	r8, r8, r9, r4
 801ce40:	b2b6      	uxth	r6, r6
 801ce42:	fa1f f888 	uxth.w	r8, r8
 801ce46:	1c7c      	adds	r4, r7, #1
 801ce48:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801ce4c:	f106 0b01 	add.w	fp, r6, #1
 801ce50:	f108 0401 	add.w	r4, r8, #1
 801ce54:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801ce58:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801ce5c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ce60:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801ce64:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801ce68:	4327      	orrs	r7, r4
 801ce6a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801ce6e:	ea47 070b 	orr.w	r7, r7, fp
 801ce72:	f820 700a 	strh.w	r7, [r0, sl]
 801ce76:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ce78:	4401      	add	r1, r0
 801ce7a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801ce7c:	f10e 3eff 	add.w	lr, lr, #4294967295
 801ce80:	4402      	add	r2, r0
 801ce82:	e759      	b.n	801cd38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801ce84:	b007      	add	sp, #28
 801ce86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801ce8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ce8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ce90:	b085      	sub	sp, #20
 801ce92:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ce96:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801ce98:	9203      	str	r2, [sp, #12]
 801ce9a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801ce9e:	6870      	ldr	r0, [r6, #4]
 801cea0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801cea2:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801cea6:	686f      	ldr	r7, [r5, #4]
 801cea8:	9101      	str	r1, [sp, #4]
 801ceaa:	fb00 2404 	mla	r4, r0, r4, r2
 801ceae:	6832      	ldr	r2, [r6, #0]
 801ceb0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ceb4:	682a      	ldr	r2, [r5, #0]
 801ceb6:	9202      	str	r2, [sp, #8]
 801ceb8:	3704      	adds	r7, #4
 801ceba:	9a01      	ldr	r2, [sp, #4]
 801cebc:	2a00      	cmp	r2, #0
 801cebe:	dc03      	bgt.n	801cec8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801cec0:	9a03      	ldr	r2, [sp, #12]
 801cec2:	2a00      	cmp	r2, #0
 801cec4:	f340 80cc 	ble.w	801d060 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801cec8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ceca:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801cece:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801ced2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ced6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ced8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801cedc:	2b00      	cmp	r3, #0
 801cede:	dd0d      	ble.n	801cefc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cee0:	1406      	asrs	r6, r0, #16
 801cee2:	d405      	bmi.n	801cef0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801cee4:	454e      	cmp	r6, r9
 801cee6:	da03      	bge.n	801cef0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801cee8:	1416      	asrs	r6, r2, #16
 801ceea:	d401      	bmi.n	801cef0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801ceec:	4546      	cmp	r6, r8
 801ceee:	db06      	blt.n	801cefe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cef0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801cef2:	4460      	add	r0, ip
 801cef4:	4432      	add	r2, r6
 801cef6:	3b01      	subs	r3, #1
 801cef8:	3402      	adds	r4, #2
 801cefa:	e7ef      	b.n	801cedc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801cefc:	d00f      	beq.n	801cf1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801cefe:	1e5e      	subs	r6, r3, #1
 801cf00:	fb0c 0e06 	mla	lr, ip, r6, r0
 801cf04:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801cf08:	d543      	bpl.n	801cf92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801cf0a:	4698      	mov	r8, r3
 801cf0c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801cf10:	f1b8 0f00 	cmp.w	r8, #0
 801cf14:	dc71      	bgt.n	801cffa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801cf16:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cf1a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cf1e:	9b01      	ldr	r3, [sp, #4]
 801cf20:	2b00      	cmp	r3, #0
 801cf22:	f340 809d 	ble.w	801d060 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801cf26:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cf2a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cf2e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801cf32:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cf34:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cf38:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cf3c:	eeb0 6a62 	vmov.f32	s12, s5
 801cf40:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cf44:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cf48:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cf4c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801cf50:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cf54:	eeb0 6a43 	vmov.f32	s12, s6
 801cf58:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cf5c:	ee12 2a90 	vmov	r2, s5
 801cf60:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cf64:	fb92 fcf3 	sdiv	ip, r2, r3
 801cf68:	ee13 2a10 	vmov	r2, s6
 801cf6c:	fb92 f3f3 	sdiv	r3, r2, r3
 801cf70:	9312      	str	r3, [sp, #72]	; 0x48
 801cf72:	9b01      	ldr	r3, [sp, #4]
 801cf74:	9a03      	ldr	r2, [sp, #12]
 801cf76:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cf7a:	3b01      	subs	r3, #1
 801cf7c:	9301      	str	r3, [sp, #4]
 801cf7e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801cf82:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cf84:	eeb0 3a67 	vmov.f32	s6, s15
 801cf88:	bf08      	it	eq
 801cf8a:	4613      	moveq	r3, r2
 801cf8c:	eef0 2a47 	vmov.f32	s5, s14
 801cf90:	e793      	b.n	801ceba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801cf92:	45ce      	cmp	lr, r9
 801cf94:	dab9      	bge.n	801cf0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cf96:	9912      	ldr	r1, [sp, #72]	; 0x48
 801cf98:	fb01 2606 	mla	r6, r1, r6, r2
 801cf9c:	1436      	asrs	r6, r6, #16
 801cf9e:	d4b4      	bmi.n	801cf0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cfa0:	4546      	cmp	r6, r8
 801cfa2:	dab2      	bge.n	801cf0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cfa4:	4698      	mov	r8, r3
 801cfa6:	46a2      	mov	sl, r4
 801cfa8:	f1b8 0f00 	cmp.w	r8, #0
 801cfac:	ddb3      	ble.n	801cf16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cfae:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801cfb2:	9902      	ldr	r1, [sp, #8]
 801cfb4:	1416      	asrs	r6, r2, #16
 801cfb6:	fb09 1606 	mla	r6, r9, r6, r1
 801cfba:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801cfbe:	492a      	ldr	r1, [pc, #168]	; (801d068 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801cfc0:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801cfc4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801cfc8:	eb07 0b0e 	add.w	fp, r7, lr
 801cfcc:	4460      	add	r0, ip
 801cfce:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801cfd2:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801cfd6:	00f6      	lsls	r6, r6, #3
 801cfd8:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801cfdc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801cfe0:	ea49 0606 	orr.w	r6, r9, r6
 801cfe4:	f817 900e 	ldrb.w	r9, [r7, lr]
 801cfe8:	9912      	ldr	r1, [sp, #72]	; 0x48
 801cfea:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801cfee:	f82a 6b02 	strh.w	r6, [sl], #2
 801cff2:	440a      	add	r2, r1
 801cff4:	f108 38ff 	add.w	r8, r8, #4294967295
 801cff8:	e7d6      	b.n	801cfa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801cffa:	ea5f 4920 	movs.w	r9, r0, asr #16
 801cffe:	d429      	bmi.n	801d054 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d000:	68ae      	ldr	r6, [r5, #8]
 801d002:	454e      	cmp	r6, r9
 801d004:	dd26      	ble.n	801d054 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d006:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801d00a:	d423      	bmi.n	801d054 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d00c:	68e9      	ldr	r1, [r5, #12]
 801d00e:	4559      	cmp	r1, fp
 801d010:	dd20      	ble.n	801d054 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d012:	9902      	ldr	r1, [sp, #8]
 801d014:	fa0f fe86 	sxth.w	lr, r6
 801d018:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801d01c:	f06f 0101 	mvn.w	r1, #1
 801d020:	f81e e009 	ldrb.w	lr, [lr, r9]
 801d024:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d028:	eb07 060e 	add.w	r6, r7, lr
 801d02c:	fb01 f908 	mul.w	r9, r1, r8
 801d030:	f896 b002 	ldrb.w	fp, [r6, #2]
 801d034:	7876      	ldrb	r6, [r6, #1]
 801d036:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801d03a:	00f6      	lsls	r6, r6, #3
 801d03c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801d040:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d044:	ea4b 0606 	orr.w	r6, fp, r6
 801d048:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801d04c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801d050:	f82a 6009 	strh.w	r6, [sl, r9]
 801d054:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d056:	4460      	add	r0, ip
 801d058:	440a      	add	r2, r1
 801d05a:	f108 38ff 	add.w	r8, r8, #4294967295
 801d05e:	e757      	b.n	801cf10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d060:	b005      	add	sp, #20
 801d062:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d066:	bf00      	nop
 801d068:	fffff800 	.word	0xfffff800

0801d06c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d06c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d070:	b087      	sub	sp, #28
 801d072:	468b      	mov	fp, r1
 801d074:	9815      	ldr	r0, [sp, #84]	; 0x54
 801d076:	9204      	str	r2, [sp, #16]
 801d078:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d07c:	9205      	str	r2, [sp, #20]
 801d07e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801d082:	6841      	ldr	r1, [r0, #4]
 801d084:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801d088:	fb01 2404 	mla	r4, r1, r4, r2
 801d08c:	6802      	ldr	r2, [r0, #0]
 801d08e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d092:	f8dc 2000 	ldr.w	r2, [ip]
 801d096:	9201      	str	r2, [sp, #4]
 801d098:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801d09c:	3204      	adds	r2, #4
 801d09e:	9202      	str	r2, [sp, #8]
 801d0a0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d0a4:	f1bb 0f00 	cmp.w	fp, #0
 801d0a8:	dc03      	bgt.n	801d0b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801d0aa:	9a04      	ldr	r2, [sp, #16]
 801d0ac:	2a00      	cmp	r2, #0
 801d0ae:	f340 8138 	ble.w	801d322 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801d0b2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d0b4:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801d0b8:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801d0bc:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801d0c0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d0c2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d0c6:	2b00      	cmp	r3, #0
 801d0c8:	dd0e      	ble.n	801d0e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d0ca:	1402      	asrs	r2, r0, #16
 801d0cc:	d405      	bmi.n	801d0da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d0ce:	42ba      	cmp	r2, r7
 801d0d0:	da03      	bge.n	801d0da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d0d2:	140a      	asrs	r2, r1, #16
 801d0d4:	d401      	bmi.n	801d0da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d0d6:	42b2      	cmp	r2, r6
 801d0d8:	db07      	blt.n	801d0ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d0da:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d0dc:	4410      	add	r0, r2
 801d0de:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d0e0:	3b01      	subs	r3, #1
 801d0e2:	4411      	add	r1, r2
 801d0e4:	3402      	adds	r4, #2
 801d0e6:	e7ee      	b.n	801d0c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801d0e8:	d019      	beq.n	801d11e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d0ea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d0ec:	1e5a      	subs	r2, r3, #1
 801d0ee:	fb05 0502 	mla	r5, r5, r2, r0
 801d0f2:	142d      	asrs	r5, r5, #16
 801d0f4:	d409      	bmi.n	801d10a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d0f6:	42bd      	cmp	r5, r7
 801d0f8:	da07      	bge.n	801d10a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d0fa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d0fc:	fb05 1202 	mla	r2, r5, r2, r1
 801d100:	1412      	asrs	r2, r2, #16
 801d102:	d402      	bmi.n	801d10a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d104:	42b2      	cmp	r2, r6
 801d106:	f2c0 80ac 	blt.w	801d262 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801d10a:	f04f 0e00 	mov.w	lr, #0
 801d10e:	eb03 020e 	add.w	r2, r3, lr
 801d112:	2a00      	cmp	r2, #0
 801d114:	dc3e      	bgt.n	801d194 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801d116:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d11a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d11e:	f1bb 0f00 	cmp.w	fp, #0
 801d122:	f340 80fe 	ble.w	801d322 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801d126:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d12a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d12e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d132:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d134:	f1bb 0b01 	subs.w	fp, fp, #1
 801d138:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d13c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d140:	eeb0 6a62 	vmov.f32	s12, s5
 801d144:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d148:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d14c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d150:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d154:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d158:	eeb0 6a43 	vmov.f32	s12, s6
 801d15c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d160:	ee12 2a90 	vmov	r2, s5
 801d164:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d168:	fb92 f3f3 	sdiv	r3, r2, r3
 801d16c:	ee13 2a10 	vmov	r2, s6
 801d170:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d174:	9313      	str	r3, [sp, #76]	; 0x4c
 801d176:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d178:	fb92 f3f3 	sdiv	r3, r2, r3
 801d17c:	9a04      	ldr	r2, [sp, #16]
 801d17e:	9314      	str	r3, [sp, #80]	; 0x50
 801d180:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d184:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d186:	eeb0 3a67 	vmov.f32	s6, s15
 801d18a:	bf08      	it	eq
 801d18c:	4613      	moveq	r3, r2
 801d18e:	eef0 2a47 	vmov.f32	s5, s14
 801d192:	e787      	b.n	801d0a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d194:	1406      	asrs	r6, r0, #16
 801d196:	d45d      	bmi.n	801d254 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d198:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801d19c:	42b5      	cmp	r5, r6
 801d19e:	dd59      	ble.n	801d254 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d1a0:	140f      	asrs	r7, r1, #16
 801d1a2:	d457      	bmi.n	801d254 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d1a4:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801d1a8:	42ba      	cmp	r2, r7
 801d1aa:	dd53      	ble.n	801d254 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d1ac:	9a01      	ldr	r2, [sp, #4]
 801d1ae:	b22d      	sxth	r5, r5
 801d1b0:	fb07 2505 	mla	r5, r7, r5, r2
 801d1b4:	5daa      	ldrb	r2, [r5, r6]
 801d1b6:	9d02      	ldr	r5, [sp, #8]
 801d1b8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d1bc:	0e2e      	lsrs	r6, r5, #24
 801d1be:	d049      	beq.n	801d254 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d1c0:	f06f 0201 	mvn.w	r2, #1
 801d1c4:	fb02 f20e 	mul.w	r2, r2, lr
 801d1c8:	9203      	str	r2, [sp, #12]
 801d1ca:	f834 8002 	ldrh.w	r8, [r4, r2]
 801d1ce:	9a05      	ldr	r2, [sp, #20]
 801d1d0:	4356      	muls	r6, r2
 801d1d2:	1c72      	adds	r2, r6, #1
 801d1d4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d1d8:	1212      	asrs	r2, r2, #8
 801d1da:	fa1f f982 	uxth.w	r9, r2
 801d1de:	ea4f 2728 	mov.w	r7, r8, asr #8
 801d1e2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d1e6:	43d2      	mvns	r2, r2
 801d1e8:	b2d2      	uxtb	r2, r2
 801d1ea:	fb16 f609 	smulbb	r6, r6, r9
 801d1ee:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d1f2:	fb07 6702 	mla	r7, r7, r2, r6
 801d1f6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d1fa:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801d1fe:	b2ed      	uxtb	r5, r5
 801d200:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d204:	fa5f f888 	uxtb.w	r8, r8
 801d208:	fb15 f509 	smulbb	r5, r5, r9
 801d20c:	fb08 5502 	mla	r5, r8, r2, r5
 801d210:	b2bf      	uxth	r7, r7
 801d212:	fb1a fa09 	smulbb	sl, sl, r9
 801d216:	b2ad      	uxth	r5, r5
 801d218:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d21c:	fb06 a602 	mla	r6, r6, r2, sl
 801d220:	1c7a      	adds	r2, r7, #1
 801d222:	f105 0a01 	add.w	sl, r5, #1
 801d226:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d22a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d22e:	b2b6      	uxth	r6, r6
 801d230:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d234:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d238:	ea4a 0707 	orr.w	r7, sl, r7
 801d23c:	f106 0a01 	add.w	sl, r6, #1
 801d240:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d244:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d248:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d24c:	9a03      	ldr	r2, [sp, #12]
 801d24e:	ea47 070a 	orr.w	r7, r7, sl
 801d252:	52a7      	strh	r7, [r4, r2]
 801d254:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d256:	4410      	add	r0, r2
 801d258:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d25a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801d25e:	4411      	add	r1, r2
 801d260:	e755      	b.n	801d10e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801d262:	f04f 0800 	mov.w	r8, #0
 801d266:	eba3 0208 	sub.w	r2, r3, r8
 801d26a:	2a00      	cmp	r2, #0
 801d26c:	f77f af53 	ble.w	801d116 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801d270:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801d274:	9f01      	ldr	r7, [sp, #4]
 801d276:	140a      	asrs	r2, r1, #16
 801d278:	1405      	asrs	r5, r0, #16
 801d27a:	fb06 7202 	mla	r2, r6, r2, r7
 801d27e:	5d52      	ldrb	r2, [r2, r5]
 801d280:	9d02      	ldr	r5, [sp, #8]
 801d282:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d286:	0e2e      	lsrs	r6, r5, #24
 801d288:	d044      	beq.n	801d314 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801d28a:	9a05      	ldr	r2, [sp, #20]
 801d28c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801d290:	4356      	muls	r6, r2
 801d292:	1c72      	adds	r2, r6, #1
 801d294:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d298:	1212      	asrs	r2, r2, #8
 801d29a:	fa1f f982 	uxth.w	r9, r2
 801d29e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801d2a2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d2a6:	43d2      	mvns	r2, r2
 801d2a8:	b2d2      	uxtb	r2, r2
 801d2aa:	fb16 f609 	smulbb	r6, r6, r9
 801d2ae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d2b2:	fb07 6702 	mla	r7, r7, r2, r6
 801d2b6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d2ba:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d2be:	b2ed      	uxtb	r5, r5
 801d2c0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d2c4:	fa5f fe8e 	uxtb.w	lr, lr
 801d2c8:	fb15 f509 	smulbb	r5, r5, r9
 801d2cc:	fb0e 5502 	mla	r5, lr, r2, r5
 801d2d0:	b2bf      	uxth	r7, r7
 801d2d2:	fb1a fa09 	smulbb	sl, sl, r9
 801d2d6:	b2ad      	uxth	r5, r5
 801d2d8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d2dc:	fb06 a602 	mla	r6, r6, r2, sl
 801d2e0:	1c7a      	adds	r2, r7, #1
 801d2e2:	f105 0a01 	add.w	sl, r5, #1
 801d2e6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d2ea:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d2ee:	b2b6      	uxth	r6, r6
 801d2f0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d2f4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d2f8:	ea4a 0707 	orr.w	r7, sl, r7
 801d2fc:	f106 0a01 	add.w	sl, r6, #1
 801d300:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d304:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d308:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d30c:	ea47 070a 	orr.w	r7, r7, sl
 801d310:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801d314:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d316:	4410      	add	r0, r2
 801d318:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d31a:	f108 0801 	add.w	r8, r8, #1
 801d31e:	4411      	add	r1, r2
 801d320:	e7a1      	b.n	801d266 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801d322:	b007      	add	sp, #28
 801d324:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d328 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d328:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d32c:	b085      	sub	sp, #20
 801d32e:	468b      	mov	fp, r1
 801d330:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d332:	9203      	str	r2, [sp, #12]
 801d334:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801d338:	6841      	ldr	r1, [r0, #4]
 801d33a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801d33e:	fb01 2404 	mla	r4, r1, r4, r2
 801d342:	6802      	ldr	r2, [r0, #0]
 801d344:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d348:	f8de 2000 	ldr.w	r2, [lr]
 801d34c:	9200      	str	r2, [sp, #0]
 801d34e:	f8de 2004 	ldr.w	r2, [lr, #4]
 801d352:	3204      	adds	r2, #4
 801d354:	9201      	str	r2, [sp, #4]
 801d356:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d35a:	f1bb 0f00 	cmp.w	fp, #0
 801d35e:	dc03      	bgt.n	801d368 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801d360:	9a03      	ldr	r2, [sp, #12]
 801d362:	2a00      	cmp	r2, #0
 801d364:	f340 8153 	ble.w	801d60e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d368:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d36a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801d36e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801d372:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d376:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d378:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d37c:	2b00      	cmp	r3, #0
 801d37e:	dd0e      	ble.n	801d39e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d380:	1408      	asrs	r0, r1, #16
 801d382:	d405      	bmi.n	801d390 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d384:	42b8      	cmp	r0, r7
 801d386:	da03      	bge.n	801d390 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d388:	1410      	asrs	r0, r2, #16
 801d38a:	d401      	bmi.n	801d390 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d38c:	42b0      	cmp	r0, r6
 801d38e:	db07      	blt.n	801d3a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d390:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d392:	4401      	add	r1, r0
 801d394:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d396:	3b01      	subs	r3, #1
 801d398:	4402      	add	r2, r0
 801d39a:	3402      	adds	r4, #2
 801d39c:	e7ee      	b.n	801d37c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801d39e:	d017      	beq.n	801d3d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801d3a0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d3a2:	1e58      	subs	r0, r3, #1
 801d3a4:	fb05 1500 	mla	r5, r5, r0, r1
 801d3a8:	142d      	asrs	r5, r5, #16
 801d3aa:	d409      	bmi.n	801d3c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d3ac:	42bd      	cmp	r5, r7
 801d3ae:	da07      	bge.n	801d3c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d3b0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d3b2:	fb05 2000 	mla	r0, r5, r0, r2
 801d3b6:	1400      	asrs	r0, r0, #16
 801d3b8:	d402      	bmi.n	801d3c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d3ba:	42b0      	cmp	r0, r6
 801d3bc:	f2c0 80bc 	blt.w	801d538 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801d3c0:	2600      	movs	r6, #0
 801d3c2:	1998      	adds	r0, r3, r6
 801d3c4:	2800      	cmp	r0, #0
 801d3c6:	dc3e      	bgt.n	801d446 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801d3c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d3cc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d3d0:	f1bb 0f00 	cmp.w	fp, #0
 801d3d4:	f340 811b 	ble.w	801d60e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d3d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d3dc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d3e0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d3e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d3e6:	f1bb 0b01 	subs.w	fp, fp, #1
 801d3ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d3ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d3f2:	eeb0 6a62 	vmov.f32	s12, s5
 801d3f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d3fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d3fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d402:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d406:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d40a:	eeb0 6a43 	vmov.f32	s12, s6
 801d40e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d412:	ee12 2a90 	vmov	r2, s5
 801d416:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d41a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d41e:	ee13 2a10 	vmov	r2, s6
 801d422:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d426:	9311      	str	r3, [sp, #68]	; 0x44
 801d428:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d42a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d42e:	9a03      	ldr	r2, [sp, #12]
 801d430:	9312      	str	r3, [sp, #72]	; 0x48
 801d432:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d436:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d438:	eeb0 3a67 	vmov.f32	s6, s15
 801d43c:	bf08      	it	eq
 801d43e:	4613      	moveq	r3, r2
 801d440:	eef0 2a47 	vmov.f32	s5, s14
 801d444:	e789      	b.n	801d35a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801d446:	140f      	asrs	r7, r1, #16
 801d448:	d426      	bmi.n	801d498 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d44a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801d44e:	42bd      	cmp	r5, r7
 801d450:	dd22      	ble.n	801d498 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d452:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801d456:	d41f      	bmi.n	801d498 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d458:	f8de 000c 	ldr.w	r0, [lr, #12]
 801d45c:	4560      	cmp	r0, ip
 801d45e:	dd1b      	ble.n	801d498 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d460:	9800      	ldr	r0, [sp, #0]
 801d462:	b22d      	sxth	r5, r5
 801d464:	fb0c 0505 	mla	r5, ip, r5, r0
 801d468:	5de8      	ldrb	r0, [r5, r7]
 801d46a:	9d01      	ldr	r5, [sp, #4]
 801d46c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801d470:	0e07      	lsrs	r7, r0, #24
 801d472:	2fff      	cmp	r7, #255	; 0xff
 801d474:	d116      	bne.n	801d4a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801d476:	f06f 0501 	mvn.w	r5, #1
 801d47a:	fb05 f706 	mul.w	r7, r5, r6
 801d47e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801d482:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801d486:	0945      	lsrs	r5, r0, #5
 801d488:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d48c:	ea4c 0505 	orr.w	r5, ip, r5
 801d490:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801d494:	4305      	orrs	r5, r0
 801d496:	53e5      	strh	r5, [r4, r7]
 801d498:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d49a:	4401      	add	r1, r0
 801d49c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d49e:	3e01      	subs	r6, #1
 801d4a0:	4402      	add	r2, r0
 801d4a2:	e78e      	b.n	801d3c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d4a4:	b2fd      	uxtb	r5, r7
 801d4a6:	2f00      	cmp	r7, #0
 801d4a8:	d0f6      	beq.n	801d498 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d4aa:	f06f 0701 	mvn.w	r7, #1
 801d4ae:	4377      	muls	r7, r6
 801d4b0:	fa1f f985 	uxth.w	r9, r5
 801d4b4:	f834 8007 	ldrh.w	r8, [r4, r7]
 801d4b8:	9702      	str	r7, [sp, #8]
 801d4ba:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801d4be:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801d4c2:	43ed      	mvns	r5, r5
 801d4c4:	b2ed      	uxtb	r5, r5
 801d4c6:	fb17 f709 	smulbb	r7, r7, r9
 801d4ca:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d4ce:	fb0c 7c05 	mla	ip, ip, r5, r7
 801d4d2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801d4d6:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801d4da:	b2c0      	uxtb	r0, r0
 801d4dc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d4e0:	fa5f f888 	uxtb.w	r8, r8
 801d4e4:	fb10 f009 	smulbb	r0, r0, r9
 801d4e8:	fb08 0005 	mla	r0, r8, r5, r0
 801d4ec:	b280      	uxth	r0, r0
 801d4ee:	fa1f fc8c 	uxth.w	ip, ip
 801d4f2:	fb1a fa09 	smulbb	sl, sl, r9
 801d4f6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d4fa:	fb07 a705 	mla	r7, r7, r5, sl
 801d4fe:	f100 0a01 	add.w	sl, r0, #1
 801d502:	f10c 0501 	add.w	r5, ip, #1
 801d506:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801d50a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801d50e:	b2bf      	uxth	r7, r7
 801d510:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d514:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d518:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d51c:	f107 0a01 	add.w	sl, r7, #1
 801d520:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801d524:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d528:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d52c:	9802      	ldr	r0, [sp, #8]
 801d52e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d532:	f824 c000 	strh.w	ip, [r4, r0]
 801d536:	e7af      	b.n	801d498 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d538:	f04f 0800 	mov.w	r8, #0
 801d53c:	eba3 0008 	sub.w	r0, r3, r8
 801d540:	2800      	cmp	r0, #0
 801d542:	f77f af41 	ble.w	801d3c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d546:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801d54a:	9f00      	ldr	r7, [sp, #0]
 801d54c:	1410      	asrs	r0, r2, #16
 801d54e:	140d      	asrs	r5, r1, #16
 801d550:	fb06 7000 	mla	r0, r6, r0, r7
 801d554:	5d40      	ldrb	r0, [r0, r5]
 801d556:	9d01      	ldr	r5, [sp, #4]
 801d558:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801d55c:	0e2e      	lsrs	r6, r5, #24
 801d55e:	2eff      	cmp	r6, #255	; 0xff
 801d560:	d112      	bne.n	801d588 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801d562:	482c      	ldr	r0, [pc, #176]	; (801d614 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801d564:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801d568:	0968      	lsrs	r0, r5, #5
 801d56a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d56e:	4330      	orrs	r0, r6
 801d570:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801d574:	4328      	orrs	r0, r5
 801d576:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801d57a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d57c:	4401      	add	r1, r0
 801d57e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d580:	f108 0801 	add.w	r8, r8, #1
 801d584:	4402      	add	r2, r0
 801d586:	e7d9      	b.n	801d53c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d588:	b2f0      	uxtb	r0, r6
 801d58a:	2e00      	cmp	r6, #0
 801d58c:	d0f5      	beq.n	801d57a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d58e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801d592:	fa1f f980 	uxth.w	r9, r0
 801d596:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d59a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d59e:	43c0      	mvns	r0, r0
 801d5a0:	b2c0      	uxtb	r0, r0
 801d5a2:	fb16 f609 	smulbb	r6, r6, r9
 801d5a6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d5aa:	fb07 6700 	mla	r7, r7, r0, r6
 801d5ae:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d5b2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801d5b6:	b2ed      	uxtb	r5, r5
 801d5b8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d5bc:	fa5f fc8c 	uxtb.w	ip, ip
 801d5c0:	fb15 f509 	smulbb	r5, r5, r9
 801d5c4:	fb0c 5500 	mla	r5, ip, r0, r5
 801d5c8:	b2bf      	uxth	r7, r7
 801d5ca:	fb1a fa09 	smulbb	sl, sl, r9
 801d5ce:	b2ad      	uxth	r5, r5
 801d5d0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d5d4:	fb06 a600 	mla	r6, r6, r0, sl
 801d5d8:	1c78      	adds	r0, r7, #1
 801d5da:	f105 0a01 	add.w	sl, r5, #1
 801d5de:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801d5e2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d5e6:	b2b6      	uxth	r6, r6
 801d5e8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d5ec:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d5f0:	ea4a 0707 	orr.w	r7, sl, r7
 801d5f4:	f106 0a01 	add.w	sl, r6, #1
 801d5f8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d5fc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d600:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d604:	ea47 070a 	orr.w	r7, r7, sl
 801d608:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801d60c:	e7b5      	b.n	801d57a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d60e:	b005      	add	sp, #20
 801d610:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d614:	fffff800 	.word	0xfffff800

0801d618 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d618:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d61c:	b087      	sub	sp, #28
 801d61e:	468b      	mov	fp, r1
 801d620:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d622:	9204      	str	r2, [sp, #16]
 801d624:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d628:	9205      	str	r2, [sp, #20]
 801d62a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801d62e:	6861      	ldr	r1, [r4, #4]
 801d630:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801d634:	fb01 2000 	mla	r0, r1, r0, r2
 801d638:	6822      	ldr	r2, [r4, #0]
 801d63a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801d63e:	f8de 2000 	ldr.w	r2, [lr]
 801d642:	9201      	str	r2, [sp, #4]
 801d644:	f8de 2004 	ldr.w	r2, [lr, #4]
 801d648:	9202      	str	r2, [sp, #8]
 801d64a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d64e:	f1bb 0f00 	cmp.w	fp, #0
 801d652:	dc03      	bgt.n	801d65c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801d654:	9a04      	ldr	r2, [sp, #16]
 801d656:	2a00      	cmp	r2, #0
 801d658:	f340 8142 	ble.w	801d8e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801d65c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d65e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801d662:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801d666:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d66a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d66c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d670:	2b00      	cmp	r3, #0
 801d672:	dd0e      	ble.n	801d692 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d674:	140c      	asrs	r4, r1, #16
 801d676:	d405      	bmi.n	801d684 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d678:	42bc      	cmp	r4, r7
 801d67a:	da03      	bge.n	801d684 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d67c:	1414      	asrs	r4, r2, #16
 801d67e:	d401      	bmi.n	801d684 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d680:	42b4      	cmp	r4, r6
 801d682:	db07      	blt.n	801d694 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d684:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d686:	4421      	add	r1, r4
 801d688:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d68a:	3b01      	subs	r3, #1
 801d68c:	4422      	add	r2, r4
 801d68e:	3002      	adds	r0, #2
 801d690:	e7ee      	b.n	801d670 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d692:	d019      	beq.n	801d6c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801d694:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d696:	1e5c      	subs	r4, r3, #1
 801d698:	fb05 1504 	mla	r5, r5, r4, r1
 801d69c:	142d      	asrs	r5, r5, #16
 801d69e:	d409      	bmi.n	801d6b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d6a0:	42bd      	cmp	r5, r7
 801d6a2:	da07      	bge.n	801d6b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d6a4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d6a6:	fb05 2404 	mla	r4, r5, r4, r2
 801d6aa:	1424      	asrs	r4, r4, #16
 801d6ac:	d402      	bmi.n	801d6b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d6ae:	42b4      	cmp	r4, r6
 801d6b0:	f2c0 80b1 	blt.w	801d816 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801d6b4:	f04f 0800 	mov.w	r8, #0
 801d6b8:	eb03 0408 	add.w	r4, r3, r8
 801d6bc:	2c00      	cmp	r4, #0
 801d6be:	dc3e      	bgt.n	801d73e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801d6c0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d6c4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d6c8:	f1bb 0f00 	cmp.w	fp, #0
 801d6cc:	f340 8108 	ble.w	801d8e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801d6d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d6d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d6d8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d6dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d6de:	f1bb 0b01 	subs.w	fp, fp, #1
 801d6e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d6e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d6ea:	eeb0 6a62 	vmov.f32	s12, s5
 801d6ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d6f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d6f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d6fa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d6fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d702:	eeb0 6a43 	vmov.f32	s12, s6
 801d706:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d70a:	ee12 2a90 	vmov	r2, s5
 801d70e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d712:	fb92 f3f3 	sdiv	r3, r2, r3
 801d716:	ee13 2a10 	vmov	r2, s6
 801d71a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d71e:	9313      	str	r3, [sp, #76]	; 0x4c
 801d720:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d722:	fb92 f3f3 	sdiv	r3, r2, r3
 801d726:	9a04      	ldr	r2, [sp, #16]
 801d728:	9314      	str	r3, [sp, #80]	; 0x50
 801d72a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d72e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d730:	eeb0 3a67 	vmov.f32	s6, s15
 801d734:	bf08      	it	eq
 801d736:	4613      	moveq	r3, r2
 801d738:	eef0 2a47 	vmov.f32	s5, s14
 801d73c:	e787      	b.n	801d64e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801d73e:	140e      	asrs	r6, r1, #16
 801d740:	d462      	bmi.n	801d808 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d742:	f8de 5008 	ldr.w	r5, [lr, #8]
 801d746:	42b5      	cmp	r5, r6
 801d748:	dd5e      	ble.n	801d808 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d74a:	1417      	asrs	r7, r2, #16
 801d74c:	d45c      	bmi.n	801d808 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d74e:	f8de 400c 	ldr.w	r4, [lr, #12]
 801d752:	42bc      	cmp	r4, r7
 801d754:	dd58      	ble.n	801d808 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d756:	b22d      	sxth	r5, r5
 801d758:	fb07 6505 	mla	r5, r7, r5, r6
 801d75c:	9c02      	ldr	r4, [sp, #8]
 801d75e:	5d66      	ldrb	r6, [r4, r5]
 801d760:	2e00      	cmp	r6, #0
 801d762:	d051      	beq.n	801d808 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d764:	9c01      	ldr	r4, [sp, #4]
 801d766:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801d76a:	f06f 0401 	mvn.w	r4, #1
 801d76e:	fb04 f408 	mul.w	r4, r4, r8
 801d772:	9403      	str	r4, [sp, #12]
 801d774:	5b05      	ldrh	r5, [r0, r4]
 801d776:	9c05      	ldr	r4, [sp, #20]
 801d778:	4366      	muls	r6, r4
 801d77a:	1c74      	adds	r4, r6, #1
 801d77c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801d780:	1224      	asrs	r4, r4, #8
 801d782:	b2a7      	uxth	r7, r4
 801d784:	122e      	asrs	r6, r5, #8
 801d786:	43e4      	mvns	r4, r4
 801d788:	b2e4      	uxtb	r4, r4
 801d78a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801d78e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d792:	fb16 f604 	smulbb	r6, r6, r4
 801d796:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d79a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d79e:	00ed      	lsls	r5, r5, #3
 801d7a0:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d7a4:	b2ed      	uxtb	r5, r5
 801d7a6:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801d7aa:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801d7ae:	fb15 f504 	smulbb	r5, r5, r4
 801d7b2:	fa5f f989 	uxtb.w	r9, r9
 801d7b6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d7ba:	fb09 5507 	mla	r5, r9, r7, r5
 801d7be:	fb1a fa04 	smulbb	sl, sl, r4
 801d7c2:	fa1f fc8c 	uxth.w	ip, ip
 801d7c6:	b2ad      	uxth	r5, r5
 801d7c8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d7cc:	fb06 a607 	mla	r6, r6, r7, sl
 801d7d0:	f10c 0401 	add.w	r4, ip, #1
 801d7d4:	f105 0a01 	add.w	sl, r5, #1
 801d7d8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801d7dc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d7e0:	b2b6      	uxth	r6, r6
 801d7e2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d7e6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d7ea:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d7ee:	f106 0a01 	add.w	sl, r6, #1
 801d7f2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d7f6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d7fa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d7fe:	9c03      	ldr	r4, [sp, #12]
 801d800:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d804:	f820 c004 	strh.w	ip, [r0, r4]
 801d808:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d80a:	4421      	add	r1, r4
 801d80c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d80e:	f108 38ff 	add.w	r8, r8, #4294967295
 801d812:	4422      	add	r2, r4
 801d814:	e750      	b.n	801d6b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d816:	f04f 0900 	mov.w	r9, #0
 801d81a:	eba3 0409 	sub.w	r4, r3, r9
 801d81e:	2c00      	cmp	r4, #0
 801d820:	f77f af4e 	ble.w	801d6c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801d824:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801d828:	140d      	asrs	r5, r1, #16
 801d82a:	1414      	asrs	r4, r2, #16
 801d82c:	fb06 5404 	mla	r4, r6, r4, r5
 801d830:	9d02      	ldr	r5, [sp, #8]
 801d832:	5d2e      	ldrb	r6, [r5, r4]
 801d834:	2e00      	cmp	r6, #0
 801d836:	d04c      	beq.n	801d8d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801d838:	9d01      	ldr	r5, [sp, #4]
 801d83a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801d83e:	9c05      	ldr	r4, [sp, #20]
 801d840:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801d844:	4366      	muls	r6, r4
 801d846:	1c74      	adds	r4, r6, #1
 801d848:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801d84c:	1224      	asrs	r4, r4, #8
 801d84e:	b2a7      	uxth	r7, r4
 801d850:	122e      	asrs	r6, r5, #8
 801d852:	43e4      	mvns	r4, r4
 801d854:	b2e4      	uxtb	r4, r4
 801d856:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801d85a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d85e:	fb16 f604 	smulbb	r6, r6, r4
 801d862:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d866:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d86a:	00ed      	lsls	r5, r5, #3
 801d86c:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d870:	b2ed      	uxtb	r5, r5
 801d872:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801d876:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d87a:	fb15 f504 	smulbb	r5, r5, r4
 801d87e:	fa5f f888 	uxtb.w	r8, r8
 801d882:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d886:	fb08 5507 	mla	r5, r8, r7, r5
 801d88a:	fb1a fa04 	smulbb	sl, sl, r4
 801d88e:	fa1f fc8c 	uxth.w	ip, ip
 801d892:	b2ad      	uxth	r5, r5
 801d894:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d898:	fb06 a607 	mla	r6, r6, r7, sl
 801d89c:	f10c 0401 	add.w	r4, ip, #1
 801d8a0:	f105 0a01 	add.w	sl, r5, #1
 801d8a4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801d8a8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d8ac:	b2b6      	uxth	r6, r6
 801d8ae:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d8b2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d8b6:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d8ba:	f106 0a01 	add.w	sl, r6, #1
 801d8be:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d8c2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d8c6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d8ca:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d8ce:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801d8d2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d8d4:	4421      	add	r1, r4
 801d8d6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d8d8:	f109 0901 	add.w	r9, r9, #1
 801d8dc:	4422      	add	r2, r4
 801d8de:	e79c      	b.n	801d81a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801d8e0:	b007      	add	sp, #28
 801d8e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d8e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d8e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d8ea:	b085      	sub	sp, #20
 801d8ec:	468b      	mov	fp, r1
 801d8ee:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d8f0:	9203      	str	r2, [sp, #12]
 801d8f2:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801d8f6:	6861      	ldr	r1, [r4, #4]
 801d8f8:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801d8fc:	fb01 2000 	mla	r0, r1, r0, r2
 801d900:	6822      	ldr	r2, [r4, #0]
 801d902:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801d906:	f8d8 2000 	ldr.w	r2, [r8]
 801d90a:	9200      	str	r2, [sp, #0]
 801d90c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801d910:	9201      	str	r2, [sp, #4]
 801d912:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d916:	f1bb 0f00 	cmp.w	fp, #0
 801d91a:	dc03      	bgt.n	801d924 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801d91c:	9a03      	ldr	r2, [sp, #12]
 801d91e:	2a00      	cmp	r2, #0
 801d920:	f340 8146 	ble.w	801dbb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801d924:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d926:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801d92a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801d92e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d932:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d934:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d938:	2b00      	cmp	r3, #0
 801d93a:	dd0e      	ble.n	801d95a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801d93c:	140c      	asrs	r4, r1, #16
 801d93e:	d405      	bmi.n	801d94c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d940:	42bc      	cmp	r4, r7
 801d942:	da03      	bge.n	801d94c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d944:	1414      	asrs	r4, r2, #16
 801d946:	d401      	bmi.n	801d94c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d948:	42b4      	cmp	r4, r6
 801d94a:	db07      	blt.n	801d95c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d94c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801d94e:	4421      	add	r1, r4
 801d950:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d952:	3b01      	subs	r3, #1
 801d954:	4422      	add	r2, r4
 801d956:	3002      	adds	r0, #2
 801d958:	e7ee      	b.n	801d938 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801d95a:	d017      	beq.n	801d98c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801d95c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d95e:	1e5c      	subs	r4, r3, #1
 801d960:	fb05 1504 	mla	r5, r5, r4, r1
 801d964:	142d      	asrs	r5, r5, #16
 801d966:	d409      	bmi.n	801d97c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d968:	42bd      	cmp	r5, r7
 801d96a:	da07      	bge.n	801d97c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d96c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d96e:	fb05 2404 	mla	r4, r5, r4, r2
 801d972:	1424      	asrs	r4, r4, #16
 801d974:	d402      	bmi.n	801d97c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d976:	42b4      	cmp	r4, r6
 801d978:	f2c0 80b3 	blt.w	801dae2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801d97c:	2600      	movs	r6, #0
 801d97e:	199c      	adds	r4, r3, r6
 801d980:	2c00      	cmp	r4, #0
 801d982:	dc3e      	bgt.n	801da02 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d984:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d988:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d98c:	f1bb 0f00 	cmp.w	fp, #0
 801d990:	f340 810e 	ble.w	801dbb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801d994:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d998:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d99c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d9a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d9a2:	f1bb 0b01 	subs.w	fp, fp, #1
 801d9a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d9aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d9ae:	eeb0 6a62 	vmov.f32	s12, s5
 801d9b2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d9b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d9ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d9be:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d9c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d9c6:	eeb0 6a43 	vmov.f32	s12, s6
 801d9ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d9ce:	ee12 2a90 	vmov	r2, s5
 801d9d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d9d6:	fb92 f3f3 	sdiv	r3, r2, r3
 801d9da:	ee13 2a10 	vmov	r2, s6
 801d9de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d9e2:	9311      	str	r3, [sp, #68]	; 0x44
 801d9e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d9e6:	fb92 f3f3 	sdiv	r3, r2, r3
 801d9ea:	9a03      	ldr	r2, [sp, #12]
 801d9ec:	9312      	str	r3, [sp, #72]	; 0x48
 801d9ee:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d9f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d9f4:	eeb0 3a67 	vmov.f32	s6, s15
 801d9f8:	bf08      	it	eq
 801d9fa:	4613      	moveq	r3, r2
 801d9fc:	eef0 2a47 	vmov.f32	s5, s14
 801da00:	e789      	b.n	801d916 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801da02:	140f      	asrs	r7, r1, #16
 801da04:	d418      	bmi.n	801da38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801da06:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801da0a:	42bd      	cmp	r5, r7
 801da0c:	dd14      	ble.n	801da38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801da0e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801da12:	d411      	bmi.n	801da38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801da14:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801da18:	4564      	cmp	r4, ip
 801da1a:	dd0d      	ble.n	801da38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801da1c:	b22d      	sxth	r5, r5
 801da1e:	fb0c 7505 	mla	r5, ip, r5, r7
 801da22:	9c01      	ldr	r4, [sp, #4]
 801da24:	5d64      	ldrb	r4, [r4, r5]
 801da26:	2cff      	cmp	r4, #255	; 0xff
 801da28:	d10c      	bne.n	801da44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801da2a:	9c00      	ldr	r4, [sp, #0]
 801da2c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801da30:	f06f 0401 	mvn.w	r4, #1
 801da34:	4374      	muls	r4, r6
 801da36:	5305      	strh	r5, [r0, r4]
 801da38:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801da3a:	4421      	add	r1, r4
 801da3c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801da3e:	3e01      	subs	r6, #1
 801da40:	4422      	add	r2, r4
 801da42:	e79c      	b.n	801d97e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801da44:	2c00      	cmp	r4, #0
 801da46:	d0f7      	beq.n	801da38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801da48:	9f00      	ldr	r7, [sp, #0]
 801da4a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801da4e:	f06f 0501 	mvn.w	r5, #1
 801da52:	4375      	muls	r5, r6
 801da54:	9502      	str	r5, [sp, #8]
 801da56:	5b45      	ldrh	r5, [r0, r5]
 801da58:	fa1f fc84 	uxth.w	ip, r4
 801da5c:	122f      	asrs	r7, r5, #8
 801da5e:	43e4      	mvns	r4, r4
 801da60:	b2e4      	uxtb	r4, r4
 801da62:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801da66:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801da6a:	fb17 f704 	smulbb	r7, r7, r4
 801da6e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801da72:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801da76:	00ed      	lsls	r5, r5, #3
 801da78:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801da7c:	b2ed      	uxtb	r5, r5
 801da7e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801da82:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801da86:	fb15 f504 	smulbb	r5, r5, r4
 801da8a:	fa5f f989 	uxtb.w	r9, r9
 801da8e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801da92:	fb09 550c 	mla	r5, r9, ip, r5
 801da96:	fb1a fa04 	smulbb	sl, sl, r4
 801da9a:	fa1f fe8e 	uxth.w	lr, lr
 801da9e:	b2ad      	uxth	r5, r5
 801daa0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801daa4:	fb07 a70c 	mla	r7, r7, ip, sl
 801daa8:	f10e 0401 	add.w	r4, lr, #1
 801daac:	f105 0a01 	add.w	sl, r5, #1
 801dab0:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801dab4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801dab8:	b2bf      	uxth	r7, r7
 801daba:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801dabe:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801dac2:	ea4a 0e0e 	orr.w	lr, sl, lr
 801dac6:	f107 0a01 	add.w	sl, r7, #1
 801daca:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801dace:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dad2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801dad6:	9c02      	ldr	r4, [sp, #8]
 801dad8:	ea4e 0e0a 	orr.w	lr, lr, sl
 801dadc:	f820 e004 	strh.w	lr, [r0, r4]
 801dae0:	e7aa      	b.n	801da38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801dae2:	f04f 0900 	mov.w	r9, #0
 801dae6:	eba3 0409 	sub.w	r4, r3, r9
 801daea:	2c00      	cmp	r4, #0
 801daec:	f77f af4a 	ble.w	801d984 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801daf0:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801daf4:	1414      	asrs	r4, r2, #16
 801daf6:	140d      	asrs	r5, r1, #16
 801daf8:	fb06 5504 	mla	r5, r6, r4, r5
 801dafc:	9c01      	ldr	r4, [sp, #4]
 801dafe:	5d64      	ldrb	r4, [r4, r5]
 801db00:	2cff      	cmp	r4, #255	; 0xff
 801db02:	d10b      	bne.n	801db1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801db04:	9c00      	ldr	r4, [sp, #0]
 801db06:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801db0a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801db0e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801db10:	4421      	add	r1, r4
 801db12:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801db14:	f109 0901 	add.w	r9, r9, #1
 801db18:	4422      	add	r2, r4
 801db1a:	e7e4      	b.n	801dae6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801db1c:	2c00      	cmp	r4, #0
 801db1e:	d0f6      	beq.n	801db0e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801db20:	9e00      	ldr	r6, [sp, #0]
 801db22:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801db26:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801db2a:	b2a7      	uxth	r7, r4
 801db2c:	122e      	asrs	r6, r5, #8
 801db2e:	43e4      	mvns	r4, r4
 801db30:	b2e4      	uxtb	r4, r4
 801db32:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801db36:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801db3a:	fb16 f604 	smulbb	r6, r6, r4
 801db3e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801db42:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801db46:	00ed      	lsls	r5, r5, #3
 801db48:	fb0c 6c07 	mla	ip, ip, r7, r6
 801db4c:	b2ed      	uxtb	r5, r5
 801db4e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801db52:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801db56:	fb15 f504 	smulbb	r5, r5, r4
 801db5a:	fa5f fe8e 	uxtb.w	lr, lr
 801db5e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801db62:	fb0e 5507 	mla	r5, lr, r7, r5
 801db66:	fb1a fa04 	smulbb	sl, sl, r4
 801db6a:	fa1f fc8c 	uxth.w	ip, ip
 801db6e:	b2ad      	uxth	r5, r5
 801db70:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801db74:	fb06 a607 	mla	r6, r6, r7, sl
 801db78:	f10c 0401 	add.w	r4, ip, #1
 801db7c:	f105 0a01 	add.w	sl, r5, #1
 801db80:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801db84:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801db88:	b2b6      	uxth	r6, r6
 801db8a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801db8e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801db92:	ea4a 0c0c 	orr.w	ip, sl, ip
 801db96:	f106 0a01 	add.w	sl, r6, #1
 801db9a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801db9e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dba2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801dba6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801dbaa:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801dbae:	e7ae      	b.n	801db0e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801dbb0:	b005      	add	sp, #20
 801dbb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dbb6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dbb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dbba:	b085      	sub	sp, #20
 801dbbc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801dbbe:	9203      	str	r2, [sp, #12]
 801dbc0:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801dbc4:	9201      	str	r2, [sp, #4]
 801dbc6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801dbca:	9100      	str	r1, [sp, #0]
 801dbcc:	6841      	ldr	r1, [r0, #4]
 801dbce:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801dbd2:	fb01 2404 	mla	r4, r1, r4, r2
 801dbd6:	6802      	ldr	r2, [r0, #0]
 801dbd8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801dbdc:	f8de 2000 	ldr.w	r2, [lr]
 801dbe0:	9202      	str	r2, [sp, #8]
 801dbe2:	9a01      	ldr	r2, [sp, #4]
 801dbe4:	43d6      	mvns	r6, r2
 801dbe6:	b2f6      	uxtb	r6, r6
 801dbe8:	9a00      	ldr	r2, [sp, #0]
 801dbea:	2a00      	cmp	r2, #0
 801dbec:	dc03      	bgt.n	801dbf6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801dbee:	9a03      	ldr	r2, [sp, #12]
 801dbf0:	2a00      	cmp	r2, #0
 801dbf2:	f340 8124 	ble.w	801de3e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801dbf6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801dbf8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801dbfc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801dc00:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801dc04:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801dc06:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801dc0a:	2b00      	cmp	r3, #0
 801dc0c:	dd0e      	ble.n	801dc2c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dc0e:	1408      	asrs	r0, r1, #16
 801dc10:	d405      	bmi.n	801dc1e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801dc12:	4560      	cmp	r0, ip
 801dc14:	da03      	bge.n	801dc1e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801dc16:	1410      	asrs	r0, r2, #16
 801dc18:	d401      	bmi.n	801dc1e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801dc1a:	42b8      	cmp	r0, r7
 801dc1c:	db07      	blt.n	801dc2e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801dc1e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dc20:	4401      	add	r1, r0
 801dc22:	9812      	ldr	r0, [sp, #72]	; 0x48
 801dc24:	3b01      	subs	r3, #1
 801dc26:	4402      	add	r2, r0
 801dc28:	3402      	adds	r4, #2
 801dc2a:	e7ee      	b.n	801dc0a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801dc2c:	d06e      	beq.n	801dd0c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801dc2e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801dc30:	1e58      	subs	r0, r3, #1
 801dc32:	fb05 1500 	mla	r5, r5, r0, r1
 801dc36:	142d      	asrs	r5, r5, #16
 801dc38:	d45c      	bmi.n	801dcf4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801dc3a:	4565      	cmp	r5, ip
 801dc3c:	da5a      	bge.n	801dcf4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801dc3e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801dc40:	fb05 2000 	mla	r0, r5, r0, r2
 801dc44:	1400      	asrs	r0, r0, #16
 801dc46:	d455      	bmi.n	801dcf4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801dc48:	42b8      	cmp	r0, r7
 801dc4a:	da53      	bge.n	801dcf4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801dc4c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801dc50:	4699      	mov	r9, r3
 801dc52:	46a2      	mov	sl, r4
 801dc54:	f1b9 0f00 	cmp.w	r9, #0
 801dc58:	dd54      	ble.n	801dd04 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801dc5a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801dc5e:	140d      	asrs	r5, r1, #16
 801dc60:	1410      	asrs	r0, r2, #16
 801dc62:	fb07 5000 	mla	r0, r7, r0, r5
 801dc66:	9d02      	ldr	r5, [sp, #8]
 801dc68:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801dc6c:	f8ba 5000 	ldrh.w	r5, [sl]
 801dc70:	122f      	asrs	r7, r5, #8
 801dc72:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801dc76:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801dc7a:	fb17 f706 	smulbb	r7, r7, r6
 801dc7e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801dc82:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dc86:	00ed      	lsls	r5, r5, #3
 801dc88:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801dc8c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801dc90:	10c7      	asrs	r7, r0, #3
 801dc92:	b2ed      	uxtb	r5, r5
 801dc94:	00c0      	lsls	r0, r0, #3
 801dc96:	fb18 f806 	smulbb	r8, r8, r6
 801dc9a:	fb15 f506 	smulbb	r5, r5, r6
 801dc9e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801dca2:	b2c0      	uxtb	r0, r0
 801dca4:	fa1f fc8c 	uxth.w	ip, ip
 801dca8:	fb07 870b 	mla	r7, r7, fp, r8
 801dcac:	fb00 500b 	mla	r0, r0, fp, r5
 801dcb0:	b280      	uxth	r0, r0
 801dcb2:	b2bf      	uxth	r7, r7
 801dcb4:	f10c 0501 	add.w	r5, ip, #1
 801dcb8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801dcbc:	f107 0801 	add.w	r8, r7, #1
 801dcc0:	1c45      	adds	r5, r0, #1
 801dcc2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801dcc6:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801dcca:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dccc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dcd0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801dcd4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801dcd8:	ea45 0c0c 	orr.w	ip, r5, ip
 801dcdc:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801dce0:	4401      	add	r1, r0
 801dce2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801dce4:	ea4c 0c08 	orr.w	ip, ip, r8
 801dce8:	f82a cb02 	strh.w	ip, [sl], #2
 801dcec:	4402      	add	r2, r0
 801dcee:	f109 39ff 	add.w	r9, r9, #4294967295
 801dcf2:	e7af      	b.n	801dc54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801dcf4:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801dcf8:	f04f 0800 	mov.w	r8, #0
 801dcfc:	eb03 0008 	add.w	r0, r3, r8
 801dd00:	2800      	cmp	r0, #0
 801dd02:	dc41      	bgt.n	801dd88 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801dd04:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801dd08:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801dd0c:	9b00      	ldr	r3, [sp, #0]
 801dd0e:	2b00      	cmp	r3, #0
 801dd10:	f340 8095 	ble.w	801de3e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801dd14:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dd18:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801dd1c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801dd20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dd22:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dd26:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dd2a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dd2e:	eef0 6a62 	vmov.f32	s13, s5
 801dd32:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dd36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dd3a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dd3e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801dd42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dd46:	eef0 6a43 	vmov.f32	s13, s6
 801dd4a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dd4e:	ee12 2a90 	vmov	r2, s5
 801dd52:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dd56:	fb92 f3f3 	sdiv	r3, r2, r3
 801dd5a:	ee13 2a10 	vmov	r2, s6
 801dd5e:	9311      	str	r3, [sp, #68]	; 0x44
 801dd60:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dd62:	fb92 f3f3 	sdiv	r3, r2, r3
 801dd66:	9312      	str	r3, [sp, #72]	; 0x48
 801dd68:	9b00      	ldr	r3, [sp, #0]
 801dd6a:	9a03      	ldr	r2, [sp, #12]
 801dd6c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dd70:	3b01      	subs	r3, #1
 801dd72:	9300      	str	r3, [sp, #0]
 801dd74:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801dd78:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dd7a:	eeb0 3a67 	vmov.f32	s6, s15
 801dd7e:	bf08      	it	eq
 801dd80:	4613      	moveq	r3, r2
 801dd82:	eef0 2a47 	vmov.f32	s5, s14
 801dd86:	e72f      	b.n	801dbe8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801dd88:	140f      	asrs	r7, r1, #16
 801dd8a:	d451      	bmi.n	801de30 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801dd8c:	f8de 5008 	ldr.w	r5, [lr, #8]
 801dd90:	42bd      	cmp	r5, r7
 801dd92:	dd4d      	ble.n	801de30 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801dd94:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801dd98:	d44a      	bmi.n	801de30 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801dd9a:	f8de 000c 	ldr.w	r0, [lr, #12]
 801dd9e:	4560      	cmp	r0, ip
 801dda0:	dd46      	ble.n	801de30 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801dda2:	b22d      	sxth	r5, r5
 801dda4:	fb0c 7505 	mla	r5, ip, r5, r7
 801dda8:	9802      	ldr	r0, [sp, #8]
 801ddaa:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801ddae:	f06f 0501 	mvn.w	r5, #1
 801ddb2:	fb05 fb08 	mul.w	fp, r5, r8
 801ddb6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ddba:	f834 500b 	ldrh.w	r5, [r4, fp]
 801ddbe:	122f      	asrs	r7, r5, #8
 801ddc0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ddc4:	fb17 f706 	smulbb	r7, r7, r6
 801ddc8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801ddcc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ddd0:	00ed      	lsls	r5, r5, #3
 801ddd2:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801ddd6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801ddda:	10c7      	asrs	r7, r0, #3
 801dddc:	b2ed      	uxtb	r5, r5
 801ddde:	00c0      	lsls	r0, r0, #3
 801dde0:	fb19 f906 	smulbb	r9, r9, r6
 801dde4:	fb15 f506 	smulbb	r5, r5, r6
 801dde8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ddec:	b2c0      	uxtb	r0, r0
 801ddee:	fa1f fc8c 	uxth.w	ip, ip
 801ddf2:	fb07 970a 	mla	r7, r7, sl, r9
 801ddf6:	fb00 500a 	mla	r0, r0, sl, r5
 801ddfa:	b2bf      	uxth	r7, r7
 801ddfc:	b280      	uxth	r0, r0
 801ddfe:	f10c 0501 	add.w	r5, ip, #1
 801de02:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801de06:	f107 0901 	add.w	r9, r7, #1
 801de0a:	1c45      	adds	r5, r0, #1
 801de0c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801de10:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801de14:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801de18:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801de1c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801de20:	ea45 0c0c 	orr.w	ip, r5, ip
 801de24:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801de28:	ea4c 0c09 	orr.w	ip, ip, r9
 801de2c:	f824 c00b 	strh.w	ip, [r4, fp]
 801de30:	9811      	ldr	r0, [sp, #68]	; 0x44
 801de32:	4401      	add	r1, r0
 801de34:	9812      	ldr	r0, [sp, #72]	; 0x48
 801de36:	f108 38ff 	add.w	r8, r8, #4294967295
 801de3a:	4402      	add	r2, r0
 801de3c:	e75e      	b.n	801dcfc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801de3e:	b005      	add	sp, #20
 801de40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801de44 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801de44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801de48:	b085      	sub	sp, #20
 801de4a:	4693      	mov	fp, r2
 801de4c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801de4e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801de50:	6870      	ldr	r0, [r6, #4]
 801de52:	9101      	str	r1, [sp, #4]
 801de54:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801de58:	fb00 2404 	mla	r4, r0, r4, r2
 801de5c:	6832      	ldr	r2, [r6, #0]
 801de5e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801de62:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801de66:	682a      	ldr	r2, [r5, #0]
 801de68:	9202      	str	r2, [sp, #8]
 801de6a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801de6e:	9a01      	ldr	r2, [sp, #4]
 801de70:	2a00      	cmp	r2, #0
 801de72:	dc03      	bgt.n	801de7c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801de74:	f1bb 0f00 	cmp.w	fp, #0
 801de78:	f340 809a 	ble.w	801dfb0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801de7c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801de7e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801de82:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801de86:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801de8a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801de8c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801de90:	2b00      	cmp	r3, #0
 801de92:	dd0c      	ble.n	801deae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801de94:	1406      	asrs	r6, r0, #16
 801de96:	d405      	bmi.n	801dea4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801de98:	454e      	cmp	r6, r9
 801de9a:	da03      	bge.n	801dea4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801de9c:	1416      	asrs	r6, r2, #16
 801de9e:	d401      	bmi.n	801dea4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801dea0:	4546      	cmp	r6, r8
 801dea2:	db05      	blt.n	801deb0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801dea4:	4470      	add	r0, lr
 801dea6:	4462      	add	r2, ip
 801dea8:	3b01      	subs	r3, #1
 801deaa:	3402      	adds	r4, #2
 801deac:	e7f0      	b.n	801de90 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801deae:	d00f      	beq.n	801ded0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801deb0:	1e5e      	subs	r6, r3, #1
 801deb2:	fb0e 0706 	mla	r7, lr, r6, r0
 801deb6:	143f      	asrs	r7, r7, #16
 801deb8:	d541      	bpl.n	801df3e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801deba:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801debe:	4698      	mov	r8, r3
 801dec0:	9603      	str	r6, [sp, #12]
 801dec2:	f1b8 0f00 	cmp.w	r8, #0
 801dec6:	dc56      	bgt.n	801df76 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801dec8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801decc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ded0:	9b01      	ldr	r3, [sp, #4]
 801ded2:	2b00      	cmp	r3, #0
 801ded4:	dd6c      	ble.n	801dfb0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801ded6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801deda:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dede:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801dee2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dee4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dee8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801deec:	eeb0 6a62 	vmov.f32	s12, s5
 801def0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801def4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801def8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801defc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801df00:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801df04:	eeb0 6a43 	vmov.f32	s12, s6
 801df08:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801df0c:	ee12 2a90 	vmov	r2, s5
 801df10:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801df14:	fb92 fef3 	sdiv	lr, r2, r3
 801df18:	ee13 2a10 	vmov	r2, s6
 801df1c:	fb92 fcf3 	sdiv	ip, r2, r3
 801df20:	9b01      	ldr	r3, [sp, #4]
 801df22:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801df26:	3b01      	subs	r3, #1
 801df28:	9301      	str	r3, [sp, #4]
 801df2a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801df2e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801df30:	eeb0 3a67 	vmov.f32	s6, s15
 801df34:	bf08      	it	eq
 801df36:	465b      	moveq	r3, fp
 801df38:	eef0 2a47 	vmov.f32	s5, s14
 801df3c:	e797      	b.n	801de6e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801df3e:	454f      	cmp	r7, r9
 801df40:	dabb      	bge.n	801deba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801df42:	fb0c 2606 	mla	r6, ip, r6, r2
 801df46:	1436      	asrs	r6, r6, #16
 801df48:	d4b7      	bmi.n	801deba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801df4a:	4546      	cmp	r6, r8
 801df4c:	dab5      	bge.n	801deba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801df4e:	461e      	mov	r6, r3
 801df50:	46a0      	mov	r8, r4
 801df52:	2e00      	cmp	r6, #0
 801df54:	ddb8      	ble.n	801dec8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801df56:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801df5a:	9902      	ldr	r1, [sp, #8]
 801df5c:	1417      	asrs	r7, r2, #16
 801df5e:	ea4f 4920 	mov.w	r9, r0, asr #16
 801df62:	fb0a 9707 	mla	r7, sl, r7, r9
 801df66:	4470      	add	r0, lr
 801df68:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801df6c:	f828 7b02 	strh.w	r7, [r8], #2
 801df70:	4462      	add	r2, ip
 801df72:	3e01      	subs	r6, #1
 801df74:	e7ed      	b.n	801df52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801df76:	ea5f 4920 	movs.w	r9, r0, asr #16
 801df7a:	d414      	bmi.n	801dfa6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801df7c:	68ae      	ldr	r6, [r5, #8]
 801df7e:	454e      	cmp	r6, r9
 801df80:	dd11      	ble.n	801dfa6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801df82:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801df86:	d40e      	bmi.n	801dfa6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801df88:	68ef      	ldr	r7, [r5, #12]
 801df8a:	4557      	cmp	r7, sl
 801df8c:	dd0b      	ble.n	801dfa6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801df8e:	b236      	sxth	r6, r6
 801df90:	fb0a 9606 	mla	r6, sl, r6, r9
 801df94:	9f02      	ldr	r7, [sp, #8]
 801df96:	f06f 0101 	mvn.w	r1, #1
 801df9a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801df9e:	fb01 f608 	mul.w	r6, r1, r8
 801dfa2:	9903      	ldr	r1, [sp, #12]
 801dfa4:	538f      	strh	r7, [r1, r6]
 801dfa6:	4470      	add	r0, lr
 801dfa8:	4462      	add	r2, ip
 801dfaa:	f108 38ff 	add.w	r8, r8, #4294967295
 801dfae:	e788      	b.n	801dec2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801dfb0:	b005      	add	sp, #20
 801dfb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dfb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dfb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dfba:	b087      	sub	sp, #28
 801dfbc:	468b      	mov	fp, r1
 801dfbe:	9815      	ldr	r0, [sp, #84]	; 0x54
 801dfc0:	9203      	str	r2, [sp, #12]
 801dfc2:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801dfc6:	9204      	str	r2, [sp, #16]
 801dfc8:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801dfcc:	6841      	ldr	r1, [r0, #4]
 801dfce:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801dfd2:	fb01 2505 	mla	r5, r1, r5, r2
 801dfd6:	6802      	ldr	r2, [r0, #0]
 801dfd8:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801dfdc:	f8d9 2000 	ldr.w	r2, [r9]
 801dfe0:	9201      	str	r2, [sp, #4]
 801dfe2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801dfe6:	f1bb 0f00 	cmp.w	fp, #0
 801dfea:	dc03      	bgt.n	801dff4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801dfec:	9a03      	ldr	r2, [sp, #12]
 801dfee:	2a00      	cmp	r2, #0
 801dff0:	f340 8159 	ble.w	801e2a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801dff4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801dff6:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801dffa:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801dffe:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e002:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e004:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e008:	2b00      	cmp	r3, #0
 801e00a:	dd0e      	ble.n	801e02a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e00c:	1402      	asrs	r2, r0, #16
 801e00e:	d405      	bmi.n	801e01c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e010:	42ba      	cmp	r2, r7
 801e012:	da03      	bge.n	801e01c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e014:	140a      	asrs	r2, r1, #16
 801e016:	d401      	bmi.n	801e01c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e018:	42b2      	cmp	r2, r6
 801e01a:	db07      	blt.n	801e02c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e01c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e01e:	4410      	add	r0, r2
 801e020:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e022:	3b01      	subs	r3, #1
 801e024:	4411      	add	r1, r2
 801e026:	3502      	adds	r5, #2
 801e028:	e7ee      	b.n	801e008 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801e02a:	d017      	beq.n	801e05c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801e02c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801e02e:	1e5a      	subs	r2, r3, #1
 801e030:	fb04 0402 	mla	r4, r4, r2, r0
 801e034:	1424      	asrs	r4, r4, #16
 801e036:	d409      	bmi.n	801e04c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e038:	42bc      	cmp	r4, r7
 801e03a:	da07      	bge.n	801e04c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e03c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801e03e:	fb04 1202 	mla	r2, r4, r2, r1
 801e042:	1412      	asrs	r2, r2, #16
 801e044:	d402      	bmi.n	801e04c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e046:	42b2      	cmp	r2, r6
 801e048:	f2c0 80bf 	blt.w	801e1ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e04c:	2700      	movs	r7, #0
 801e04e:	19da      	adds	r2, r3, r7
 801e050:	2a00      	cmp	r2, #0
 801e052:	dc3e      	bgt.n	801e0d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e054:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e058:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801e05c:	f1bb 0f00 	cmp.w	fp, #0
 801e060:	f340 8121 	ble.w	801e2a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e064:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e068:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e06c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e070:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e072:	f1bb 0b01 	subs.w	fp, fp, #1
 801e076:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e07a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e07e:	eeb0 6a62 	vmov.f32	s12, s5
 801e082:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e086:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e08a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e08e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801e092:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e096:	eeb0 6a43 	vmov.f32	s12, s6
 801e09a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e09e:	ee12 2a90 	vmov	r2, s5
 801e0a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e0a6:	fb92 f3f3 	sdiv	r3, r2, r3
 801e0aa:	ee13 2a10 	vmov	r2, s6
 801e0ae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e0b2:	9313      	str	r3, [sp, #76]	; 0x4c
 801e0b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e0b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801e0ba:	9a03      	ldr	r2, [sp, #12]
 801e0bc:	9314      	str	r3, [sp, #80]	; 0x50
 801e0be:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e0c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e0c4:	eeb0 3a67 	vmov.f32	s6, s15
 801e0c8:	bf08      	it	eq
 801e0ca:	4613      	moveq	r3, r2
 801e0cc:	eef0 2a47 	vmov.f32	s5, s14
 801e0d0:	e789      	b.n	801dfe6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801e0d2:	1406      	asrs	r6, r0, #16
 801e0d4:	d42d      	bmi.n	801e132 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e0d6:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801e0da:	42b4      	cmp	r4, r6
 801e0dc:	dd29      	ble.n	801e132 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e0de:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801e0e2:	d426      	bmi.n	801e132 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e0e4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801e0e8:	4562      	cmp	r2, ip
 801e0ea:	dd22      	ble.n	801e132 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e0ec:	b224      	sxth	r4, r4
 801e0ee:	9a01      	ldr	r2, [sp, #4]
 801e0f0:	fb0c 6404 	mla	r4, ip, r4, r6
 801e0f4:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801e0f8:	0e22      	lsrs	r2, r4, #24
 801e0fa:	d01a      	beq.n	801e132 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e0fc:	9e04      	ldr	r6, [sp, #16]
 801e0fe:	4372      	muls	r2, r6
 801e100:	1c56      	adds	r6, r2, #1
 801e102:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801e106:	1212      	asrs	r2, r2, #8
 801e108:	0a26      	lsrs	r6, r4, #8
 801e10a:	2aff      	cmp	r2, #255	; 0xff
 801e10c:	9605      	str	r6, [sp, #20]
 801e10e:	d116      	bne.n	801e13e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801e110:	f06f 0201 	mvn.w	r2, #1
 801e114:	fb02 fc07 	mul.w	ip, r2, r7
 801e118:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e11c:	0962      	lsrs	r2, r4, #5
 801e11e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e122:	f026 0607 	bic.w	r6, r6, #7
 801e126:	4316      	orrs	r6, r2
 801e128:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e12c:	4326      	orrs	r6, r4
 801e12e:	f825 600c 	strh.w	r6, [r5, ip]
 801e132:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e134:	4410      	add	r0, r2
 801e136:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e138:	3f01      	subs	r7, #1
 801e13a:	4411      	add	r1, r2
 801e13c:	e787      	b.n	801e04e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e13e:	f06f 0601 	mvn.w	r6, #1
 801e142:	437e      	muls	r6, r7
 801e144:	fa1f fa82 	uxth.w	sl, r2
 801e148:	f835 8006 	ldrh.w	r8, [r5, r6]
 801e14c:	9602      	str	r6, [sp, #8]
 801e14e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801e152:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801e156:	43d2      	mvns	r2, r2
 801e158:	b2d2      	uxtb	r2, r2
 801e15a:	fb1c fc0a 	smulbb	ip, ip, sl
 801e15e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e162:	fb0e ce02 	mla	lr, lr, r2, ip
 801e166:	b2e4      	uxtb	r4, r4
 801e168:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801e16c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801e170:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801e174:	fa5f f888 	uxtb.w	r8, r8
 801e178:	fb14 f40a 	smulbb	r4, r4, sl
 801e17c:	fb08 4402 	mla	r4, r8, r2, r4
 801e180:	fa1f fe8e 	uxth.w	lr, lr
 801e184:	fb16 f60a 	smulbb	r6, r6, sl
 801e188:	b2a4      	uxth	r4, r4
 801e18a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e18e:	fb0c 6c02 	mla	ip, ip, r2, r6
 801e192:	f10e 0201 	add.w	r2, lr, #1
 801e196:	1c66      	adds	r6, r4, #1
 801e198:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801e19c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e1a0:	fa1f fc8c 	uxth.w	ip, ip
 801e1a4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e1a8:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801e1ac:	ea46 0e0e 	orr.w	lr, r6, lr
 801e1b0:	f10c 0601 	add.w	r6, ip, #1
 801e1b4:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801e1b8:	0976      	lsrs	r6, r6, #5
 801e1ba:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e1be:	9a02      	ldr	r2, [sp, #8]
 801e1c0:	ea4e 0e06 	orr.w	lr, lr, r6
 801e1c4:	f825 e002 	strh.w	lr, [r5, r2]
 801e1c8:	e7b3      	b.n	801e132 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e1ca:	f04f 0800 	mov.w	r8, #0
 801e1ce:	eba3 0208 	sub.w	r2, r3, r8
 801e1d2:	2a00      	cmp	r2, #0
 801e1d4:	f77f af3e 	ble.w	801e054 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801e1d8:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801e1dc:	1404      	asrs	r4, r0, #16
 801e1de:	140a      	asrs	r2, r1, #16
 801e1e0:	fb06 4202 	mla	r2, r6, r2, r4
 801e1e4:	9c01      	ldr	r4, [sp, #4]
 801e1e6:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801e1ea:	0e22      	lsrs	r2, r4, #24
 801e1ec:	d016      	beq.n	801e21c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e1ee:	9e04      	ldr	r6, [sp, #16]
 801e1f0:	4372      	muls	r2, r6
 801e1f2:	1c56      	adds	r6, r2, #1
 801e1f4:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801e1f8:	1212      	asrs	r2, r2, #8
 801e1fa:	2aff      	cmp	r2, #255	; 0xff
 801e1fc:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801e200:	d113      	bne.n	801e22a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801e202:	0962      	lsrs	r2, r4, #5
 801e204:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e208:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e20c:	f026 0607 	bic.w	r6, r6, #7
 801e210:	4316      	orrs	r6, r2
 801e212:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e216:	4326      	orrs	r6, r4
 801e218:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801e21c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e21e:	4410      	add	r0, r2
 801e220:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e222:	f108 0801 	add.w	r8, r8, #1
 801e226:	4411      	add	r1, r2
 801e228:	e7d1      	b.n	801e1ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801e22a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801e22e:	fa1f fa82 	uxth.w	sl, r2
 801e232:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e236:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801e23a:	43d2      	mvns	r2, r2
 801e23c:	b2d2      	uxtb	r2, r2
 801e23e:	fb17 f70a 	smulbb	r7, r7, sl
 801e242:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e246:	fb0c 7c02 	mla	ip, ip, r2, r7
 801e24a:	b2e4      	uxtb	r4, r4
 801e24c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e250:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e254:	fa5f fe8e 	uxtb.w	lr, lr
 801e258:	fb14 f40a 	smulbb	r4, r4, sl
 801e25c:	fb0e 4402 	mla	r4, lr, r2, r4
 801e260:	b2f6      	uxtb	r6, r6
 801e262:	fa1f fc8c 	uxth.w	ip, ip
 801e266:	fb16 f60a 	smulbb	r6, r6, sl
 801e26a:	b2a4      	uxth	r4, r4
 801e26c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e270:	fb07 6702 	mla	r7, r7, r2, r6
 801e274:	f10c 0201 	add.w	r2, ip, #1
 801e278:	1c66      	adds	r6, r4, #1
 801e27a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e27e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e282:	b2bf      	uxth	r7, r7
 801e284:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e288:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e28c:	ea46 0c0c 	orr.w	ip, r6, ip
 801e290:	1c7e      	adds	r6, r7, #1
 801e292:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801e296:	0976      	lsrs	r6, r6, #5
 801e298:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e29c:	ea4c 0c06 	orr.w	ip, ip, r6
 801e2a0:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801e2a4:	e7ba      	b.n	801e21c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e2a6:	b007      	add	sp, #28
 801e2a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e2ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e2ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e2b0:	b085      	sub	sp, #20
 801e2b2:	468b      	mov	fp, r1
 801e2b4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e2b6:	9203      	str	r2, [sp, #12]
 801e2b8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801e2bc:	6841      	ldr	r1, [r0, #4]
 801e2be:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801e2c2:	fb01 2404 	mla	r4, r1, r4, r2
 801e2c6:	6802      	ldr	r2, [r0, #0]
 801e2c8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e2cc:	f8d8 2000 	ldr.w	r2, [r8]
 801e2d0:	9201      	str	r2, [sp, #4]
 801e2d2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e2d6:	f1bb 0f00 	cmp.w	fp, #0
 801e2da:	dc03      	bgt.n	801e2e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e2dc:	9a03      	ldr	r2, [sp, #12]
 801e2de:	2a00      	cmp	r2, #0
 801e2e0:	f340 814f 	ble.w	801e582 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e2e4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e2e6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801e2ea:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801e2ee:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e2f2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e2f4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801e2f8:	2b00      	cmp	r3, #0
 801e2fa:	dd0e      	ble.n	801e31a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e2fc:	1408      	asrs	r0, r1, #16
 801e2fe:	d405      	bmi.n	801e30c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e300:	42b8      	cmp	r0, r7
 801e302:	da03      	bge.n	801e30c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e304:	1410      	asrs	r0, r2, #16
 801e306:	d401      	bmi.n	801e30c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e308:	42b0      	cmp	r0, r6
 801e30a:	db07      	blt.n	801e31c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e30c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e30e:	4401      	add	r1, r0
 801e310:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e312:	3b01      	subs	r3, #1
 801e314:	4402      	add	r2, r0
 801e316:	3402      	adds	r4, #2
 801e318:	e7ee      	b.n	801e2f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e31a:	d017      	beq.n	801e34c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e31c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e31e:	1e58      	subs	r0, r3, #1
 801e320:	fb05 1500 	mla	r5, r5, r0, r1
 801e324:	142d      	asrs	r5, r5, #16
 801e326:	d409      	bmi.n	801e33c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e328:	42bd      	cmp	r5, r7
 801e32a:	da07      	bge.n	801e33c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e32c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e32e:	fb05 2000 	mla	r0, r5, r0, r2
 801e332:	1400      	asrs	r0, r0, #16
 801e334:	d402      	bmi.n	801e33c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e336:	42b0      	cmp	r0, r6
 801e338:	f2c0 80ba 	blt.w	801e4b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e33c:	2600      	movs	r6, #0
 801e33e:	1998      	adds	r0, r3, r6
 801e340:	2800      	cmp	r0, #0
 801e342:	dc3e      	bgt.n	801e3c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e344:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e348:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e34c:	f1bb 0f00 	cmp.w	fp, #0
 801e350:	f340 8117 	ble.w	801e582 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e354:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e358:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e35c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e360:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e362:	f1bb 0b01 	subs.w	fp, fp, #1
 801e366:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e36a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e36e:	eeb0 6a62 	vmov.f32	s12, s5
 801e372:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e376:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e37a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e37e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801e382:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e386:	eeb0 6a43 	vmov.f32	s12, s6
 801e38a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e38e:	ee12 2a90 	vmov	r2, s5
 801e392:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e396:	fb92 f3f3 	sdiv	r3, r2, r3
 801e39a:	ee13 2a10 	vmov	r2, s6
 801e39e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e3a2:	9311      	str	r3, [sp, #68]	; 0x44
 801e3a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e3a6:	fb92 f3f3 	sdiv	r3, r2, r3
 801e3aa:	9a03      	ldr	r2, [sp, #12]
 801e3ac:	9312      	str	r3, [sp, #72]	; 0x48
 801e3ae:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801e3b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e3b4:	eeb0 3a67 	vmov.f32	s6, s15
 801e3b8:	bf08      	it	eq
 801e3ba:	4613      	moveq	r3, r2
 801e3bc:	eef0 2a47 	vmov.f32	s5, s14
 801e3c0:	e789      	b.n	801e2d6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e3c2:	140f      	asrs	r7, r1, #16
 801e3c4:	d424      	bmi.n	801e410 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e3c6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801e3ca:	42bd      	cmp	r5, r7
 801e3cc:	dd20      	ble.n	801e410 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e3ce:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801e3d2:	d41d      	bmi.n	801e410 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e3d4:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801e3d8:	4560      	cmp	r0, ip
 801e3da:	dd19      	ble.n	801e410 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e3dc:	b22d      	sxth	r5, r5
 801e3de:	fb0c 7505 	mla	r5, ip, r5, r7
 801e3e2:	9801      	ldr	r0, [sp, #4]
 801e3e4:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801e3e8:	0e07      	lsrs	r7, r0, #24
 801e3ea:	2fff      	cmp	r7, #255	; 0xff
 801e3ec:	d116      	bne.n	801e41c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801e3ee:	f06f 0501 	mvn.w	r5, #1
 801e3f2:	fb05 f706 	mul.w	r7, r5, r6
 801e3f6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801e3fa:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801e3fe:	0945      	lsrs	r5, r0, #5
 801e400:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e404:	ea4c 0505 	orr.w	r5, ip, r5
 801e408:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801e40c:	4305      	orrs	r5, r0
 801e40e:	53e5      	strh	r5, [r4, r7]
 801e410:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e412:	4401      	add	r1, r0
 801e414:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e416:	3e01      	subs	r6, #1
 801e418:	4402      	add	r2, r0
 801e41a:	e790      	b.n	801e33e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e41c:	b2fd      	uxtb	r5, r7
 801e41e:	2f00      	cmp	r7, #0
 801e420:	d0f6      	beq.n	801e410 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e422:	f06f 0701 	mvn.w	r7, #1
 801e426:	4377      	muls	r7, r6
 801e428:	fa1f f985 	uxth.w	r9, r5
 801e42c:	f834 e007 	ldrh.w	lr, [r4, r7]
 801e430:	9702      	str	r7, [sp, #8]
 801e432:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e436:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801e43a:	43ed      	mvns	r5, r5
 801e43c:	b2ed      	uxtb	r5, r5
 801e43e:	fb17 f709 	smulbb	r7, r7, r9
 801e442:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e446:	fb0c 7c05 	mla	ip, ip, r5, r7
 801e44a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801e44e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e452:	b2c0      	uxtb	r0, r0
 801e454:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e458:	fa5f fe8e 	uxtb.w	lr, lr
 801e45c:	fb10 f009 	smulbb	r0, r0, r9
 801e460:	fb0e 0005 	mla	r0, lr, r5, r0
 801e464:	b280      	uxth	r0, r0
 801e466:	fa1f fc8c 	uxth.w	ip, ip
 801e46a:	fb1a fa09 	smulbb	sl, sl, r9
 801e46e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e472:	fb07 a705 	mla	r7, r7, r5, sl
 801e476:	f100 0a01 	add.w	sl, r0, #1
 801e47a:	f10c 0501 	add.w	r5, ip, #1
 801e47e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801e482:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801e486:	b2bf      	uxth	r7, r7
 801e488:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e48c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e490:	ea4a 0c0c 	orr.w	ip, sl, ip
 801e494:	f107 0a01 	add.w	sl, r7, #1
 801e498:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801e49c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e4a0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e4a4:	9802      	ldr	r0, [sp, #8]
 801e4a6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801e4aa:	f824 c000 	strh.w	ip, [r4, r0]
 801e4ae:	e7af      	b.n	801e410 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e4b0:	f04f 0e00 	mov.w	lr, #0
 801e4b4:	eba3 000e 	sub.w	r0, r3, lr
 801e4b8:	2800      	cmp	r0, #0
 801e4ba:	f77f af43 	ble.w	801e344 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e4be:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801e4c2:	140d      	asrs	r5, r1, #16
 801e4c4:	1410      	asrs	r0, r2, #16
 801e4c6:	fb06 5000 	mla	r0, r6, r0, r5
 801e4ca:	9d01      	ldr	r5, [sp, #4]
 801e4cc:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801e4d0:	0e2e      	lsrs	r6, r5, #24
 801e4d2:	2eff      	cmp	r6, #255	; 0xff
 801e4d4:	d112      	bne.n	801e4fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801e4d6:	482c      	ldr	r0, [pc, #176]	; (801e588 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801e4d8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801e4dc:	0968      	lsrs	r0, r5, #5
 801e4de:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e4e2:	4330      	orrs	r0, r6
 801e4e4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e4e8:	4328      	orrs	r0, r5
 801e4ea:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801e4ee:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e4f0:	4401      	add	r1, r0
 801e4f2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e4f4:	f10e 0e01 	add.w	lr, lr, #1
 801e4f8:	4402      	add	r2, r0
 801e4fa:	e7db      	b.n	801e4b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801e4fc:	b2f0      	uxtb	r0, r6
 801e4fe:	2e00      	cmp	r6, #0
 801e500:	d0f5      	beq.n	801e4ee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e502:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801e506:	fa1f f980 	uxth.w	r9, r0
 801e50a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e50e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801e512:	43c0      	mvns	r0, r0
 801e514:	b2c0      	uxtb	r0, r0
 801e516:	fb16 f609 	smulbb	r6, r6, r9
 801e51a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e51e:	fb07 6700 	mla	r7, r7, r0, r6
 801e522:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801e526:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801e52a:	b2ed      	uxtb	r5, r5
 801e52c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e530:	fa5f fc8c 	uxtb.w	ip, ip
 801e534:	fb15 f509 	smulbb	r5, r5, r9
 801e538:	fb0c 5500 	mla	r5, ip, r0, r5
 801e53c:	b2bf      	uxth	r7, r7
 801e53e:	fb1a fa09 	smulbb	sl, sl, r9
 801e542:	b2ad      	uxth	r5, r5
 801e544:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e548:	fb06 a600 	mla	r6, r6, r0, sl
 801e54c:	1c78      	adds	r0, r7, #1
 801e54e:	f105 0a01 	add.w	sl, r5, #1
 801e552:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801e556:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e55a:	b2b6      	uxth	r6, r6
 801e55c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e560:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801e564:	ea4a 0707 	orr.w	r7, sl, r7
 801e568:	f106 0a01 	add.w	sl, r6, #1
 801e56c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801e570:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e574:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e578:	ea47 070a 	orr.w	r7, r7, sl
 801e57c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801e580:	e7b5      	b.n	801e4ee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e582:	b005      	add	sp, #20
 801e584:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e588:	fffff800 	.word	0xfffff800

0801e58c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e58c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e590:	b087      	sub	sp, #28
 801e592:	468b      	mov	fp, r1
 801e594:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e596:	9203      	str	r2, [sp, #12]
 801e598:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801e59c:	9204      	str	r2, [sp, #16]
 801e59e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801e5a2:	6841      	ldr	r1, [r0, #4]
 801e5a4:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801e5a8:	fb01 2404 	mla	r4, r1, r4, r2
 801e5ac:	6802      	ldr	r2, [r0, #0]
 801e5ae:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e5b2:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801e5b6:	3201      	adds	r2, #1
 801e5b8:	f022 0201 	bic.w	r2, r2, #1
 801e5bc:	9200      	str	r2, [sp, #0]
 801e5be:	f8d9 2000 	ldr.w	r2, [r9]
 801e5c2:	9201      	str	r2, [sp, #4]
 801e5c4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e5c8:	f1bb 0f00 	cmp.w	fp, #0
 801e5cc:	dc03      	bgt.n	801e5d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801e5ce:	9a03      	ldr	r2, [sp, #12]
 801e5d0:	2a00      	cmp	r2, #0
 801e5d2:	f340 8169 	ble.w	801e8a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e5d6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e5d8:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801e5dc:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801e5e0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e5e4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e5e6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e5ea:	2b00      	cmp	r3, #0
 801e5ec:	dd0e      	ble.n	801e60c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e5ee:	1402      	asrs	r2, r0, #16
 801e5f0:	d405      	bmi.n	801e5fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e5f2:	42ba      	cmp	r2, r7
 801e5f4:	da03      	bge.n	801e5fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e5f6:	140a      	asrs	r2, r1, #16
 801e5f8:	d401      	bmi.n	801e5fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e5fa:	42b2      	cmp	r2, r6
 801e5fc:	db07      	blt.n	801e60e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e5fe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e600:	4410      	add	r0, r2
 801e602:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e604:	3b01      	subs	r3, #1
 801e606:	4411      	add	r1, r2
 801e608:	3402      	adds	r4, #2
 801e60a:	e7ee      	b.n	801e5ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801e60c:	d017      	beq.n	801e63e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801e60e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e610:	1e5a      	subs	r2, r3, #1
 801e612:	fb05 0502 	mla	r5, r5, r2, r0
 801e616:	142d      	asrs	r5, r5, #16
 801e618:	d409      	bmi.n	801e62e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e61a:	42bd      	cmp	r5, r7
 801e61c:	da07      	bge.n	801e62e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e61e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e620:	fb05 1202 	mla	r2, r5, r2, r1
 801e624:	1412      	asrs	r2, r2, #16
 801e626:	d402      	bmi.n	801e62e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e628:	42b2      	cmp	r2, r6
 801e62a:	f2c0 80c7 	blt.w	801e7bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801e62e:	2700      	movs	r7, #0
 801e630:	19da      	adds	r2, r3, r7
 801e632:	2a00      	cmp	r2, #0
 801e634:	dc3e      	bgt.n	801e6b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801e636:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e63a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e63e:	f1bb 0f00 	cmp.w	fp, #0
 801e642:	f340 8131 	ble.w	801e8a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e646:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e64a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e64e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e652:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e654:	f1bb 0b01 	subs.w	fp, fp, #1
 801e658:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e65c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e660:	eeb0 6a62 	vmov.f32	s12, s5
 801e664:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e668:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e66c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e670:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801e674:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e678:	eeb0 6a43 	vmov.f32	s12, s6
 801e67c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e680:	ee12 2a90 	vmov	r2, s5
 801e684:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e688:	fb92 f3f3 	sdiv	r3, r2, r3
 801e68c:	ee13 2a10 	vmov	r2, s6
 801e690:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e694:	9313      	str	r3, [sp, #76]	; 0x4c
 801e696:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e698:	fb92 f3f3 	sdiv	r3, r2, r3
 801e69c:	9a03      	ldr	r2, [sp, #12]
 801e69e:	9314      	str	r3, [sp, #80]	; 0x50
 801e6a0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e6a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e6a6:	eeb0 3a67 	vmov.f32	s6, s15
 801e6aa:	bf08      	it	eq
 801e6ac:	4613      	moveq	r3, r2
 801e6ae:	eef0 2a47 	vmov.f32	s5, s14
 801e6b2:	e789      	b.n	801e5c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801e6b4:	1405      	asrs	r5, r0, #16
 801e6b6:	d435      	bmi.n	801e724 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e6b8:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801e6bc:	42aa      	cmp	r2, r5
 801e6be:	dd31      	ble.n	801e724 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e6c0:	140e      	asrs	r6, r1, #16
 801e6c2:	d42f      	bmi.n	801e724 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e6c4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801e6c8:	42b2      	cmp	r2, r6
 801e6ca:	dd2b      	ble.n	801e724 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e6cc:	9a00      	ldr	r2, [sp, #0]
 801e6ce:	fb06 5502 	mla	r5, r6, r2, r5
 801e6d2:	086a      	lsrs	r2, r5, #1
 801e6d4:	9e01      	ldr	r6, [sp, #4]
 801e6d6:	5cb2      	ldrb	r2, [r6, r2]
 801e6d8:	07ee      	lsls	r6, r5, #31
 801e6da:	bf54      	ite	pl
 801e6dc:	f002 020f 	andpl.w	r2, r2, #15
 801e6e0:	1112      	asrmi	r2, r2, #4
 801e6e2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e6e6:	b2d2      	uxtb	r2, r2
 801e6e8:	b1e2      	cbz	r2, 801e724 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e6ea:	9d04      	ldr	r5, [sp, #16]
 801e6ec:	436a      	muls	r2, r5
 801e6ee:	1c55      	adds	r5, r2, #1
 801e6f0:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801e6f4:	4d6e      	ldr	r5, [pc, #440]	; (801e8b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801e6f6:	682d      	ldr	r5, [r5, #0]
 801e6f8:	1212      	asrs	r2, r2, #8
 801e6fa:	0a2e      	lsrs	r6, r5, #8
 801e6fc:	2aff      	cmp	r2, #255	; 0xff
 801e6fe:	9605      	str	r6, [sp, #20]
 801e700:	d116      	bne.n	801e730 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801e702:	f06f 0201 	mvn.w	r2, #1
 801e706:	fb02 fc07 	mul.w	ip, r2, r7
 801e70a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e70e:	096a      	lsrs	r2, r5, #5
 801e710:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e714:	f026 0607 	bic.w	r6, r6, #7
 801e718:	4316      	orrs	r6, r2
 801e71a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e71e:	432e      	orrs	r6, r5
 801e720:	f824 600c 	strh.w	r6, [r4, ip]
 801e724:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e726:	4410      	add	r0, r2
 801e728:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e72a:	3f01      	subs	r7, #1
 801e72c:	4411      	add	r1, r2
 801e72e:	e77f      	b.n	801e630 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801e730:	f06f 0601 	mvn.w	r6, #1
 801e734:	437e      	muls	r6, r7
 801e736:	fa1f fa82 	uxth.w	sl, r2
 801e73a:	f834 8006 	ldrh.w	r8, [r4, r6]
 801e73e:	9602      	str	r6, [sp, #8]
 801e740:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801e744:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801e748:	43d2      	mvns	r2, r2
 801e74a:	b2d2      	uxtb	r2, r2
 801e74c:	fb1c fc0a 	smulbb	ip, ip, sl
 801e750:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e754:	fb0e ce02 	mla	lr, lr, r2, ip
 801e758:	b2ed      	uxtb	r5, r5
 801e75a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801e75e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801e762:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801e766:	fa5f f888 	uxtb.w	r8, r8
 801e76a:	fb15 f50a 	smulbb	r5, r5, sl
 801e76e:	fb08 5502 	mla	r5, r8, r2, r5
 801e772:	fa1f fe8e 	uxth.w	lr, lr
 801e776:	fb16 f60a 	smulbb	r6, r6, sl
 801e77a:	b2ad      	uxth	r5, r5
 801e77c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e780:	fb0c 6c02 	mla	ip, ip, r2, r6
 801e784:	f10e 0201 	add.w	r2, lr, #1
 801e788:	1c6e      	adds	r6, r5, #1
 801e78a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801e78e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801e792:	fa1f fc8c 	uxth.w	ip, ip
 801e796:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e79a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801e79e:	ea46 0e0e 	orr.w	lr, r6, lr
 801e7a2:	f10c 0601 	add.w	r6, ip, #1
 801e7a6:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801e7aa:	0976      	lsrs	r6, r6, #5
 801e7ac:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e7b0:	9a02      	ldr	r2, [sp, #8]
 801e7b2:	ea4e 0e06 	orr.w	lr, lr, r6
 801e7b6:	f824 e002 	strh.w	lr, [r4, r2]
 801e7ba:	e7b3      	b.n	801e724 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e7bc:	f04f 0800 	mov.w	r8, #0
 801e7c0:	eba3 0208 	sub.w	r2, r3, r8
 801e7c4:	2a00      	cmp	r2, #0
 801e7c6:	f77f af36 	ble.w	801e636 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801e7ca:	9e00      	ldr	r6, [sp, #0]
 801e7cc:	1402      	asrs	r2, r0, #16
 801e7ce:	140d      	asrs	r5, r1, #16
 801e7d0:	fb06 2505 	mla	r5, r6, r5, r2
 801e7d4:	086a      	lsrs	r2, r5, #1
 801e7d6:	9e01      	ldr	r6, [sp, #4]
 801e7d8:	5cb2      	ldrb	r2, [r6, r2]
 801e7da:	07ed      	lsls	r5, r5, #31
 801e7dc:	bf54      	ite	pl
 801e7de:	f002 020f 	andpl.w	r2, r2, #15
 801e7e2:	1112      	asrmi	r2, r2, #4
 801e7e4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e7e8:	b2d2      	uxtb	r2, r2
 801e7ea:	b1c2      	cbz	r2, 801e81e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801e7ec:	9d04      	ldr	r5, [sp, #16]
 801e7ee:	436a      	muls	r2, r5
 801e7f0:	1c55      	adds	r5, r2, #1
 801e7f2:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801e7f6:	4d2e      	ldr	r5, [pc, #184]	; (801e8b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801e7f8:	1212      	asrs	r2, r2, #8
 801e7fa:	682e      	ldr	r6, [r5, #0]
 801e7fc:	2aff      	cmp	r2, #255	; 0xff
 801e7fe:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801e802:	d113      	bne.n	801e82c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801e804:	0972      	lsrs	r2, r6, #5
 801e806:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801e80a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e80e:	f025 0507 	bic.w	r5, r5, #7
 801e812:	4315      	orrs	r5, r2
 801e814:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801e818:	4335      	orrs	r5, r6
 801e81a:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801e81e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e820:	4410      	add	r0, r2
 801e822:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e824:	f108 0801 	add.w	r8, r8, #1
 801e828:	4411      	add	r1, r2
 801e82a:	e7c9      	b.n	801e7c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e82c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801e830:	fa1f fa82 	uxth.w	sl, r2
 801e834:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e838:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801e83c:	43d2      	mvns	r2, r2
 801e83e:	b2d2      	uxtb	r2, r2
 801e840:	fb17 f70a 	smulbb	r7, r7, sl
 801e844:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e848:	fb0c 7c02 	mla	ip, ip, r2, r7
 801e84c:	b2f6      	uxtb	r6, r6
 801e84e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e852:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e856:	fa5f fe8e 	uxtb.w	lr, lr
 801e85a:	fb16 f60a 	smulbb	r6, r6, sl
 801e85e:	fb0e 6602 	mla	r6, lr, r2, r6
 801e862:	b2ed      	uxtb	r5, r5
 801e864:	fa1f fc8c 	uxth.w	ip, ip
 801e868:	fb15 f50a 	smulbb	r5, r5, sl
 801e86c:	b2b6      	uxth	r6, r6
 801e86e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e872:	fb07 5702 	mla	r7, r7, r2, r5
 801e876:	f10c 0201 	add.w	r2, ip, #1
 801e87a:	1c75      	adds	r5, r6, #1
 801e87c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e880:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801e884:	b2bf      	uxth	r7, r7
 801e886:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e88a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e88e:	ea45 0c0c 	orr.w	ip, r5, ip
 801e892:	1c7d      	adds	r5, r7, #1
 801e894:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801e898:	096d      	lsrs	r5, r5, #5
 801e89a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e89e:	ea4c 0c05 	orr.w	ip, ip, r5
 801e8a2:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801e8a6:	e7ba      	b.n	801e81e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801e8a8:	b007      	add	sp, #28
 801e8aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e8ae:	bf00      	nop
 801e8b0:	2001385c 	.word	0x2001385c

0801e8b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e8b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e8b8:	b087      	sub	sp, #28
 801e8ba:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801ebc8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801e8be:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e8c0:	9205      	str	r2, [sp, #20]
 801e8c2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801e8c6:	9101      	str	r1, [sp, #4]
 801e8c8:	6841      	ldr	r1, [r0, #4]
 801e8ca:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801e8ce:	fb01 2404 	mla	r4, r1, r4, r2
 801e8d2:	6802      	ldr	r2, [r0, #0]
 801e8d4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e8d8:	f8db 2008 	ldr.w	r2, [fp, #8]
 801e8dc:	3201      	adds	r2, #1
 801e8de:	f022 0201 	bic.w	r2, r2, #1
 801e8e2:	9202      	str	r2, [sp, #8]
 801e8e4:	f8db 2000 	ldr.w	r2, [fp]
 801e8e8:	9203      	str	r2, [sp, #12]
 801e8ea:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e8ee:	9a01      	ldr	r2, [sp, #4]
 801e8f0:	2a00      	cmp	r2, #0
 801e8f2:	dc03      	bgt.n	801e8fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e8f4:	9a05      	ldr	r2, [sp, #20]
 801e8f6:	2a00      	cmp	r2, #0
 801e8f8:	f340 8162 	ble.w	801ebc0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801e8fc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e8fe:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801e902:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801e906:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e90a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e90c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e910:	2b00      	cmp	r3, #0
 801e912:	dd0e      	ble.n	801e932 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801e914:	1402      	asrs	r2, r0, #16
 801e916:	d405      	bmi.n	801e924 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e918:	42ba      	cmp	r2, r7
 801e91a:	da03      	bge.n	801e924 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e91c:	140a      	asrs	r2, r1, #16
 801e91e:	d401      	bmi.n	801e924 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e920:	42b2      	cmp	r2, r6
 801e922:	db07      	blt.n	801e934 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e924:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e926:	4410      	add	r0, r2
 801e928:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e92a:	3b01      	subs	r3, #1
 801e92c:	4411      	add	r1, r2
 801e92e:	3402      	adds	r4, #2
 801e930:	e7ee      	b.n	801e910 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801e932:	d017      	beq.n	801e964 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801e934:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e936:	1e5a      	subs	r2, r3, #1
 801e938:	fb05 0502 	mla	r5, r5, r2, r0
 801e93c:	142d      	asrs	r5, r5, #16
 801e93e:	d409      	bmi.n	801e954 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e940:	42bd      	cmp	r5, r7
 801e942:	da07      	bge.n	801e954 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e944:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e946:	fb05 1202 	mla	r2, r5, r2, r1
 801e94a:	1412      	asrs	r2, r2, #16
 801e94c:	d402      	bmi.n	801e954 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e94e:	42b2      	cmp	r2, r6
 801e950:	f2c0 80c3 	blt.w	801eada <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801e954:	2500      	movs	r5, #0
 801e956:	195a      	adds	r2, r3, r5
 801e958:	2a00      	cmp	r2, #0
 801e95a:	dc3f      	bgt.n	801e9dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801e95c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e960:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e964:	9b01      	ldr	r3, [sp, #4]
 801e966:	2b00      	cmp	r3, #0
 801e968:	f340 812a 	ble.w	801ebc0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801e96c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e970:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e974:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e978:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e97a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e97e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e982:	eeb0 6a62 	vmov.f32	s12, s5
 801e986:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e98a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e98e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e992:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801e996:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e99a:	eeb0 6a43 	vmov.f32	s12, s6
 801e99e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e9a2:	ee12 2a90 	vmov	r2, s5
 801e9a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e9aa:	fb92 f3f3 	sdiv	r3, r2, r3
 801e9ae:	ee13 2a10 	vmov	r2, s6
 801e9b2:	9313      	str	r3, [sp, #76]	; 0x4c
 801e9b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e9b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801e9ba:	9314      	str	r3, [sp, #80]	; 0x50
 801e9bc:	9b01      	ldr	r3, [sp, #4]
 801e9be:	9a05      	ldr	r2, [sp, #20]
 801e9c0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e9c4:	3b01      	subs	r3, #1
 801e9c6:	9301      	str	r3, [sp, #4]
 801e9c8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e9cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e9ce:	eeb0 3a67 	vmov.f32	s6, s15
 801e9d2:	bf08      	it	eq
 801e9d4:	4613      	moveq	r3, r2
 801e9d6:	eef0 2a47 	vmov.f32	s5, s14
 801e9da:	e788      	b.n	801e8ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e9dc:	1406      	asrs	r6, r0, #16
 801e9de:	d42c      	bmi.n	801ea3a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e9e0:	f8db 2008 	ldr.w	r2, [fp, #8]
 801e9e4:	42b2      	cmp	r2, r6
 801e9e6:	dd28      	ble.n	801ea3a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e9e8:	140f      	asrs	r7, r1, #16
 801e9ea:	d426      	bmi.n	801ea3a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e9ec:	f8db 200c 	ldr.w	r2, [fp, #12]
 801e9f0:	42ba      	cmp	r2, r7
 801e9f2:	dd22      	ble.n	801ea3a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e9f4:	9a02      	ldr	r2, [sp, #8]
 801e9f6:	fb07 6602 	mla	r6, r7, r2, r6
 801e9fa:	0872      	lsrs	r2, r6, #1
 801e9fc:	9f03      	ldr	r7, [sp, #12]
 801e9fe:	5cba      	ldrb	r2, [r7, r2]
 801ea00:	07f6      	lsls	r6, r6, #31
 801ea02:	bf54      	ite	pl
 801ea04:	f002 020f 	andpl.w	r2, r2, #15
 801ea08:	1112      	asrmi	r2, r2, #4
 801ea0a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ea0e:	b2d2      	uxtb	r2, r2
 801ea10:	2aff      	cmp	r2, #255	; 0xff
 801ea12:	d118      	bne.n	801ea46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801ea14:	f8d8 2000 	ldr.w	r2, [r8]
 801ea18:	f06f 0601 	mvn.w	r6, #1
 801ea1c:	fb06 f705 	mul.w	r7, r6, r5
 801ea20:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801ea24:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801ea28:	0956      	lsrs	r6, r2, #5
 801ea2a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ea2e:	ea4c 0606 	orr.w	r6, ip, r6
 801ea32:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ea36:	4316      	orrs	r6, r2
 801ea38:	53e6      	strh	r6, [r4, r7]
 801ea3a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ea3c:	4410      	add	r0, r2
 801ea3e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ea40:	3d01      	subs	r5, #1
 801ea42:	4411      	add	r1, r2
 801ea44:	e787      	b.n	801e956 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ea46:	2a00      	cmp	r2, #0
 801ea48:	d0f7      	beq.n	801ea3a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ea4a:	f06f 0601 	mvn.w	r6, #1
 801ea4e:	436e      	muls	r6, r5
 801ea50:	f8d8 c000 	ldr.w	ip, [r8]
 801ea54:	f834 e006 	ldrh.w	lr, [r4, r6]
 801ea58:	9604      	str	r6, [sp, #16]
 801ea5a:	fa1f f982 	uxth.w	r9, r2
 801ea5e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801ea62:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801ea66:	43d2      	mvns	r2, r2
 801ea68:	b2d2      	uxtb	r2, r2
 801ea6a:	fb16 f609 	smulbb	r6, r6, r9
 801ea6e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ea72:	fb07 6702 	mla	r7, r7, r2, r6
 801ea76:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801ea7a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ea7e:	fa5f fc8c 	uxtb.w	ip, ip
 801ea82:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ea86:	fa5f fe8e 	uxtb.w	lr, lr
 801ea8a:	fb1c fc09 	smulbb	ip, ip, r9
 801ea8e:	fb0e cc02 	mla	ip, lr, r2, ip
 801ea92:	b2bf      	uxth	r7, r7
 801ea94:	fb1a fa09 	smulbb	sl, sl, r9
 801ea98:	fa1f fc8c 	uxth.w	ip, ip
 801ea9c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801eaa0:	fb06 a602 	mla	r6, r6, r2, sl
 801eaa4:	1c7a      	adds	r2, r7, #1
 801eaa6:	f10c 0a01 	add.w	sl, ip, #1
 801eaaa:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801eaae:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801eab2:	b2b6      	uxth	r6, r6
 801eab4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801eab8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801eabc:	ea4a 0707 	orr.w	r7, sl, r7
 801eac0:	f106 0a01 	add.w	sl, r6, #1
 801eac4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801eac8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801eacc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ead0:	9a04      	ldr	r2, [sp, #16]
 801ead2:	ea47 070a 	orr.w	r7, r7, sl
 801ead6:	52a7      	strh	r7, [r4, r2]
 801ead8:	e7af      	b.n	801ea3a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801eada:	f04f 0e00 	mov.w	lr, #0
 801eade:	eba3 020e 	sub.w	r2, r3, lr
 801eae2:	2a00      	cmp	r2, #0
 801eae4:	f77f af3a 	ble.w	801e95c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801eae8:	9e02      	ldr	r6, [sp, #8]
 801eaea:	1402      	asrs	r2, r0, #16
 801eaec:	140d      	asrs	r5, r1, #16
 801eaee:	fb06 2505 	mla	r5, r6, r5, r2
 801eaf2:	086a      	lsrs	r2, r5, #1
 801eaf4:	9e03      	ldr	r6, [sp, #12]
 801eaf6:	5cb2      	ldrb	r2, [r6, r2]
 801eaf8:	07ed      	lsls	r5, r5, #31
 801eafa:	bf54      	ite	pl
 801eafc:	f002 020f 	andpl.w	r2, r2, #15
 801eb00:	1112      	asrmi	r2, r2, #4
 801eb02:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801eb06:	b2d2      	uxtb	r2, r2
 801eb08:	2aff      	cmp	r2, #255	; 0xff
 801eb0a:	d115      	bne.n	801eb38 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801eb0c:	f8d8 5000 	ldr.w	r5, [r8]
 801eb10:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801eb14:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801eb18:	096a      	lsrs	r2, r5, #5
 801eb1a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801eb1e:	4332      	orrs	r2, r6
 801eb20:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801eb24:	432a      	orrs	r2, r5
 801eb26:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801eb2a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801eb2c:	4410      	add	r0, r2
 801eb2e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801eb30:	f10e 0e01 	add.w	lr, lr, #1
 801eb34:	4411      	add	r1, r2
 801eb36:	e7d2      	b.n	801eade <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801eb38:	2a00      	cmp	r2, #0
 801eb3a:	d0f6      	beq.n	801eb2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801eb3c:	f8d8 7000 	ldr.w	r7, [r8]
 801eb40:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801eb44:	fa1f f982 	uxth.w	r9, r2
 801eb48:	ea4f 262c 	mov.w	r6, ip, asr #8
 801eb4c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801eb50:	43d2      	mvns	r2, r2
 801eb52:	b2d2      	uxtb	r2, r2
 801eb54:	fb15 f509 	smulbb	r5, r5, r9
 801eb58:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801eb5c:	fb06 5602 	mla	r6, r6, r2, r5
 801eb60:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801eb64:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801eb68:	b2ff      	uxtb	r7, r7
 801eb6a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801eb6e:	fa5f fc8c 	uxtb.w	ip, ip
 801eb72:	fb17 f709 	smulbb	r7, r7, r9
 801eb76:	fb0c 7702 	mla	r7, ip, r2, r7
 801eb7a:	b2b6      	uxth	r6, r6
 801eb7c:	fb1a fa09 	smulbb	sl, sl, r9
 801eb80:	b2bf      	uxth	r7, r7
 801eb82:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801eb86:	fb05 a502 	mla	r5, r5, r2, sl
 801eb8a:	1c72      	adds	r2, r6, #1
 801eb8c:	f107 0a01 	add.w	sl, r7, #1
 801eb90:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801eb94:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801eb98:	b2ad      	uxth	r5, r5
 801eb9a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801eb9e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801eba2:	ea4a 0606 	orr.w	r6, sl, r6
 801eba6:	f105 0a01 	add.w	sl, r5, #1
 801ebaa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ebae:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ebb2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ebb6:	ea46 060a 	orr.w	r6, r6, sl
 801ebba:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801ebbe:	e7b4      	b.n	801eb2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ebc0:	b007      	add	sp, #28
 801ebc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ebc6:	bf00      	nop
 801ebc8:	2001385c 	.word	0x2001385c

0801ebcc <_ZN8touchgfx8LCD16bppD1Ev>:
 801ebcc:	4770      	bx	lr

0801ebce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801ebce:	4770      	bx	lr

0801ebd0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801ebd0:	4770      	bx	lr

0801ebd2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801ebd2:	4770      	bx	lr

0801ebd4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801ebd4:	4770      	bx	lr

0801ebd6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801ebd6:	4770      	bx	lr

0801ebd8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801ebd8:	4770      	bx	lr

0801ebda <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801ebda:	4770      	bx	lr

0801ebdc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ebdc:	4770      	bx	lr

0801ebde <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ebde:	4770      	bx	lr

0801ebe0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ebe0:	4770      	bx	lr

0801ebe2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ebe2:	4770      	bx	lr

0801ebe4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ebe4:	4770      	bx	lr

0801ebe6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801ebe6:	4770      	bx	lr

0801ebe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ebe8:	4770      	bx	lr

0801ebea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ebea:	4770      	bx	lr

0801ebec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ebec:	4770      	bx	lr

0801ebee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ebee:	4770      	bx	lr

0801ebf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ebf0:	4770      	bx	lr

0801ebf2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ebf2:	4770      	bx	lr

0801ebf4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ebf4:	4770      	bx	lr

0801ebf6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ebf6:	4770      	bx	lr

0801ebf8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ebf8:	4770      	bx	lr

0801ebfa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ebfa:	4770      	bx	lr

0801ebfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ebfc:	4770      	bx	lr

0801ebfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801ebfe:	4770      	bx	lr

0801ec00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ec00:	4770      	bx	lr

0801ec02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801ec02:	4770      	bx	lr

0801ec04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ec04:	4770      	bx	lr

0801ec06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801ec06:	4770      	bx	lr

0801ec08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ec08:	4770      	bx	lr

0801ec0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ec0a:	4770      	bx	lr

0801ec0c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801ec0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ec10:	b088      	sub	sp, #32
 801ec12:	ac08      	add	r4, sp, #32
 801ec14:	4606      	mov	r6, r0
 801ec16:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801ec1a:	4620      	mov	r0, r4
 801ec1c:	4688      	mov	r8, r1
 801ec1e:	4691      	mov	r9, r2
 801ec20:	f7fd fc62 	bl	801c4e8 <_ZNK8touchgfx6Bitmap7getDataEv>
 801ec24:	6833      	ldr	r3, [r6, #0]
 801ec26:	4605      	mov	r5, r0
 801ec28:	4620      	mov	r0, r4
 801ec2a:	699f      	ldr	r7, [r3, #24]
 801ec2c:	f7fd fb70 	bl	801c310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801ec30:	4682      	mov	sl, r0
 801ec32:	4620      	mov	r0, r4
 801ec34:	f7fd fba0 	bl	801c378 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801ec38:	9500      	str	r5, [sp, #0]
 801ec3a:	e9cd a001 	strd	sl, r0, [sp, #4]
 801ec3e:	464b      	mov	r3, r9
 801ec40:	a806      	add	r0, sp, #24
 801ec42:	4642      	mov	r2, r8
 801ec44:	4631      	mov	r1, r6
 801ec46:	47b8      	blx	r7
 801ec48:	4628      	mov	r0, r5
 801ec4a:	b008      	add	sp, #32
 801ec4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801ec50 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801ec50:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801ec54:	2300      	movs	r3, #0
 801ec56:	9300      	str	r3, [sp, #0]
 801ec58:	4b3d      	ldr	r3, [pc, #244]	; (801ed50 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801ec5a:	781b      	ldrb	r3, [r3, #0]
 801ec5c:	2b00      	cmp	r3, #0
 801ec5e:	d137      	bne.n	801ecd0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801ec60:	4a3c      	ldr	r2, [pc, #240]	; (801ed54 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ec62:	f9b2 2000 	ldrsh.w	r2, [r2]
 801ec66:	f8ad 2004 	strh.w	r2, [sp, #4]
 801ec6a:	2b00      	cmp	r3, #0
 801ec6c:	d132      	bne.n	801ecd4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801ec6e:	4b3a      	ldr	r3, [pc, #232]	; (801ed58 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801ec70:	f9b3 3000 	ldrsh.w	r3, [r3]
 801ec74:	6808      	ldr	r0, [r1, #0]
 801ec76:	6849      	ldr	r1, [r1, #4]
 801ec78:	f8ad 3006 	strh.w	r3, [sp, #6]
 801ec7c:	ac02      	add	r4, sp, #8
 801ec7e:	ab02      	add	r3, sp, #8
 801ec80:	c303      	stmia	r3!, {r0, r1}
 801ec82:	4669      	mov	r1, sp
 801ec84:	4620      	mov	r0, r4
 801ec86:	f7f9 fd83 	bl	8018790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ec8a:	4668      	mov	r0, sp
 801ec8c:	f7f9 fd3c 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ec90:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801ec94:	f8bd 2000 	ldrh.w	r2, [sp]
 801ec98:	4d30      	ldr	r5, [pc, #192]	; (801ed5c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801ec9a:	4413      	add	r3, r2
 801ec9c:	f8ad 3008 	strh.w	r3, [sp, #8]
 801eca0:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801eca4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801eca8:	6828      	ldr	r0, [r5, #0]
 801ecaa:	4413      	add	r3, r2
 801ecac:	f8ad 300a 	strh.w	r3, [sp, #10]
 801ecb0:	6803      	ldr	r3, [r0, #0]
 801ecb2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ecb4:	4798      	blx	r3
 801ecb6:	f010 0f01 	tst.w	r0, #1
 801ecba:	462f      	mov	r7, r5
 801ecbc:	d00c      	beq.n	801ecd8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801ecbe:	6828      	ldr	r0, [r5, #0]
 801ecc0:	6803      	ldr	r3, [r0, #0]
 801ecc2:	e894 0006 	ldmia.w	r4, {r1, r2}
 801ecc6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801ecc8:	4798      	blx	r3
 801ecca:	b004      	add	sp, #16
 801eccc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ecd0:	4a21      	ldr	r2, [pc, #132]	; (801ed58 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801ecd2:	e7c6      	b.n	801ec62 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801ecd4:	4b1f      	ldr	r3, [pc, #124]	; (801ed54 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ecd6:	e7cb      	b.n	801ec70 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801ecd8:	6838      	ldr	r0, [r7, #0]
 801ecda:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801ecde:	6803      	ldr	r3, [r0, #0]
 801ece0:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801ece4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ece6:	4798      	blx	r3
 801ece8:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801ecec:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ecf0:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801ecf4:	fb16 3602 	smlabb	r6, r6, r2, r3
 801ecf8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801ecfc:	6838      	ldr	r0, [r7, #0]
 801ecfe:	6803      	ldr	r3, [r0, #0]
 801ed00:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ed02:	4798      	blx	r3
 801ed04:	4a13      	ldr	r2, [pc, #76]	; (801ed54 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ed06:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801ed0a:	8813      	ldrh	r3, [r2, #0]
 801ed0c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801ed10:	fb03 1404 	mla	r4, r3, r4, r1
 801ed14:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ed18:	435d      	muls	r5, r3
 801ed1a:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ed1e:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801ed22:	4691      	mov	r9, r2
 801ed24:	6838      	ldr	r0, [r7, #0]
 801ed26:	42ac      	cmp	r4, r5
 801ed28:	6803      	ldr	r3, [r0, #0]
 801ed2a:	d20e      	bcs.n	801ed4a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801ed2c:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801ed30:	4632      	mov	r2, r6
 801ed32:	4643      	mov	r3, r8
 801ed34:	4621      	mov	r1, r4
 801ed36:	47d0      	blx	sl
 801ed38:	f8b9 3000 	ldrh.w	r3, [r9]
 801ed3c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ed40:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801ed44:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ed48:	e7ec      	b.n	801ed24 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801ed4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ed4c:	4798      	blx	r3
 801ed4e:	e7bc      	b.n	801ecca <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801ed50:	20013844 	.word	0x20013844
 801ed54:	20013846 	.word	0x20013846
 801ed58:	20013848 	.word	0x20013848
 801ed5c:	2001384c 	.word	0x2001384c

0801ed60 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801ed60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ed64:	b08b      	sub	sp, #44	; 0x2c
 801ed66:	460f      	mov	r7, r1
 801ed68:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801ed6c:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801ed70:	4616      	mov	r6, r2
 801ed72:	f1bb 0f00 	cmp.w	fp, #0
 801ed76:	d04a      	beq.n	801ee0e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801ed78:	6810      	ldr	r0, [r2, #0]
 801ed7a:	6851      	ldr	r1, [r2, #4]
 801ed7c:	ad06      	add	r5, sp, #24
 801ed7e:	c503      	stmia	r5!, {r0, r1}
 801ed80:	6818      	ldr	r0, [r3, #0]
 801ed82:	6859      	ldr	r1, [r3, #4]
 801ed84:	ad08      	add	r5, sp, #32
 801ed86:	c503      	stmia	r5!, {r0, r1}
 801ed88:	a806      	add	r0, sp, #24
 801ed8a:	f7f9 fcbd 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ed8e:	4631      	mov	r1, r6
 801ed90:	a808      	add	r0, sp, #32
 801ed92:	f7f9 fcfd 	bl	8018790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ed96:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801ed9a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801ed9e:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801eda2:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801eda6:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801edaa:	fb16 2103 	smlabb	r1, r6, r3, r2
 801edae:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801edb2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801edb6:	4f5f      	ldr	r7, [pc, #380]	; (801ef34 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801edb8:	440a      	add	r2, r1
 801edba:	f8ad 2020 	strh.w	r2, [sp, #32]
 801edbe:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801edc2:	6838      	ldr	r0, [r7, #0]
 801edc4:	4413      	add	r3, r2
 801edc6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801edca:	6803      	ldr	r3, [r0, #0]
 801edcc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801edce:	4798      	blx	r3
 801edd0:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801edd4:	46b9      	mov	r9, r7
 801edd6:	d11d      	bne.n	801ee14 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801edd8:	b9fc      	cbnz	r4, 801ee1a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801edda:	f010 0f01 	tst.w	r0, #1
 801edde:	d01c      	beq.n	801ee1a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ede0:	f8d9 0000 	ldr.w	r0, [r9]
 801ede4:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801ede8:	6801      	ldr	r1, [r0, #0]
 801edea:	f8cd b00c 	str.w	fp, [sp, #12]
 801edee:	2700      	movs	r7, #0
 801edf0:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801edf4:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801edf8:	9402      	str	r4, [sp, #8]
 801edfa:	b2ad      	uxth	r5, r5
 801edfc:	fa1f f488 	uxth.w	r4, r8
 801ee00:	9501      	str	r5, [sp, #4]
 801ee02:	9400      	str	r4, [sp, #0]
 801ee04:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801ee06:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801ee0a:	4631      	mov	r1, r6
 801ee0c:	47a0      	blx	r4
 801ee0e:	b00b      	add	sp, #44	; 0x2c
 801ee10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ee14:	f010 0f04 	tst.w	r0, #4
 801ee18:	e7e1      	b.n	801edde <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801ee1a:	f8d9 0000 	ldr.w	r0, [r9]
 801ee1e:	6803      	ldr	r3, [r0, #0]
 801ee20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ee22:	4798      	blx	r3
 801ee24:	4b44      	ldr	r3, [pc, #272]	; (801ef38 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801ee26:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801ee2a:	881a      	ldrh	r2, [r3, #0]
 801ee2c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801ee30:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801ee34:	fb02 1404 	mla	r4, r2, r4, r1
 801ee38:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ee3c:	469a      	mov	sl, r3
 801ee3e:	fb05 f502 	mul.w	r5, r5, r2
 801ee42:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801ee46:	d059      	beq.n	801eefc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801ee48:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801ee4c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ee50:	fa1f f28b 	uxth.w	r2, fp
 801ee54:	fa1f f989 	uxth.w	r9, r9
 801ee58:	469e      	mov	lr, r3
 801ee5a:	42ac      	cmp	r4, r5
 801ee5c:	d264      	bcs.n	801ef28 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801ee5e:	eb04 0a07 	add.w	sl, r4, r7
 801ee62:	4554      	cmp	r4, sl
 801ee64:	d23d      	bcs.n	801eee2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801ee66:	8821      	ldrh	r1, [r4, #0]
 801ee68:	f836 3b02 	ldrh.w	r3, [r6], #2
 801ee6c:	1208      	asrs	r0, r1, #8
 801ee6e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801ee72:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ee76:	fb10 f009 	smulbb	r0, r0, r9
 801ee7a:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801ee7e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ee82:	00c9      	lsls	r1, r1, #3
 801ee84:	fb0c 0c02 	mla	ip, ip, r2, r0
 801ee88:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801ee8c:	10d8      	asrs	r0, r3, #3
 801ee8e:	b2c9      	uxtb	r1, r1
 801ee90:	00db      	lsls	r3, r3, #3
 801ee92:	fa1f fc8c 	uxth.w	ip, ip
 801ee96:	fb1b fb09 	smulbb	fp, fp, r9
 801ee9a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ee9e:	b2db      	uxtb	r3, r3
 801eea0:	fb11 f109 	smulbb	r1, r1, r9
 801eea4:	fb00 b002 	mla	r0, r0, r2, fp
 801eea8:	fb03 1302 	mla	r3, r3, r2, r1
 801eeac:	f10c 0b01 	add.w	fp, ip, #1
 801eeb0:	b29b      	uxth	r3, r3
 801eeb2:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801eeb6:	b280      	uxth	r0, r0
 801eeb8:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801eebc:	f103 0c01 	add.w	ip, r3, #1
 801eec0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801eec4:	1c43      	adds	r3, r0, #1
 801eec6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801eeca:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801eece:	0940      	lsrs	r0, r0, #5
 801eed0:	ea4c 0c0b 	orr.w	ip, ip, fp
 801eed4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801eed8:	ea4c 0c00 	orr.w	ip, ip, r0
 801eedc:	f824 cb02 	strh.w	ip, [r4], #2
 801eee0:	e7bf      	b.n	801ee62 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801eee2:	f8be 3000 	ldrh.w	r3, [lr]
 801eee6:	eba3 0308 	sub.w	r3, r3, r8
 801eeea:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801eeee:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801eef2:	eba3 0308 	sub.w	r3, r3, r8
 801eef6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801eefa:	e7ae      	b.n	801ee5a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801eefc:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ef00:	f8d9 0000 	ldr.w	r0, [r9]
 801ef04:	42ac      	cmp	r4, r5
 801ef06:	6803      	ldr	r3, [r0, #0]
 801ef08:	d20e      	bcs.n	801ef28 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801ef0a:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801ef0e:	4632      	mov	r2, r6
 801ef10:	463b      	mov	r3, r7
 801ef12:	4621      	mov	r1, r4
 801ef14:	47c0      	blx	r8
 801ef16:	f8ba 3000 	ldrh.w	r3, [sl]
 801ef1a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ef1e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801ef22:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ef26:	e7eb      	b.n	801ef00 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801ef28:	4b02      	ldr	r3, [pc, #8]	; (801ef34 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801ef2a:	6818      	ldr	r0, [r3, #0]
 801ef2c:	6803      	ldr	r3, [r0, #0]
 801ef2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ef30:	4798      	blx	r3
 801ef32:	e76c      	b.n	801ee0e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801ef34:	2001384c 	.word	0x2001384c
 801ef38:	20013846 	.word	0x20013846

0801ef3c <_ZN8touchgfx8LCD16bppD0Ev>:
 801ef3c:	b510      	push	{r4, lr}
 801ef3e:	2184      	movs	r1, #132	; 0x84
 801ef40:	4604      	mov	r4, r0
 801ef42:	f00d fef2 	bl	802cd2a <_ZdlPvj>
 801ef46:	4620      	mov	r0, r4
 801ef48:	bd10      	pop	{r4, pc}

0801ef4a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801ef4a:	b510      	push	{r4, lr}
 801ef4c:	2104      	movs	r1, #4
 801ef4e:	4604      	mov	r4, r0
 801ef50:	f00d feeb 	bl	802cd2a <_ZdlPvj>
 801ef54:	4620      	mov	r0, r4
 801ef56:	bd10      	pop	{r4, pc}

0801ef58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801ef58:	b510      	push	{r4, lr}
 801ef5a:	2104      	movs	r1, #4
 801ef5c:	4604      	mov	r4, r0
 801ef5e:	f00d fee4 	bl	802cd2a <_ZdlPvj>
 801ef62:	4620      	mov	r0, r4
 801ef64:	bd10      	pop	{r4, pc}

0801ef66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801ef66:	b510      	push	{r4, lr}
 801ef68:	f640 0144 	movw	r1, #2116	; 0x844
 801ef6c:	4604      	mov	r4, r0
 801ef6e:	f00d fedc 	bl	802cd2a <_ZdlPvj>
 801ef72:	4620      	mov	r0, r4
 801ef74:	bd10      	pop	{r4, pc}

0801ef76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801ef76:	b510      	push	{r4, lr}
 801ef78:	2104      	movs	r1, #4
 801ef7a:	4604      	mov	r4, r0
 801ef7c:	f00d fed5 	bl	802cd2a <_ZdlPvj>
 801ef80:	4620      	mov	r0, r4
 801ef82:	bd10      	pop	{r4, pc}

0801ef84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801ef84:	b510      	push	{r4, lr}
 801ef86:	2104      	movs	r1, #4
 801ef88:	4604      	mov	r4, r0
 801ef8a:	f00d fece 	bl	802cd2a <_ZdlPvj>
 801ef8e:	4620      	mov	r0, r4
 801ef90:	bd10      	pop	{r4, pc}

0801ef92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801ef92:	b510      	push	{r4, lr}
 801ef94:	2104      	movs	r1, #4
 801ef96:	4604      	mov	r4, r0
 801ef98:	f00d fec7 	bl	802cd2a <_ZdlPvj>
 801ef9c:	4620      	mov	r0, r4
 801ef9e:	bd10      	pop	{r4, pc}

0801efa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801efa0:	b510      	push	{r4, lr}
 801efa2:	2104      	movs	r1, #4
 801efa4:	4604      	mov	r4, r0
 801efa6:	f00d fec0 	bl	802cd2a <_ZdlPvj>
 801efaa:	4620      	mov	r0, r4
 801efac:	bd10      	pop	{r4, pc}

0801efae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801efae:	b510      	push	{r4, lr}
 801efb0:	2104      	movs	r1, #4
 801efb2:	4604      	mov	r4, r0
 801efb4:	f00d feb9 	bl	802cd2a <_ZdlPvj>
 801efb8:	4620      	mov	r0, r4
 801efba:	bd10      	pop	{r4, pc}

0801efbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801efbc:	b510      	push	{r4, lr}
 801efbe:	2104      	movs	r1, #4
 801efc0:	4604      	mov	r4, r0
 801efc2:	f00d feb2 	bl	802cd2a <_ZdlPvj>
 801efc6:	4620      	mov	r0, r4
 801efc8:	bd10      	pop	{r4, pc}

0801efca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801efca:	b510      	push	{r4, lr}
 801efcc:	2104      	movs	r1, #4
 801efce:	4604      	mov	r4, r0
 801efd0:	f00d feab 	bl	802cd2a <_ZdlPvj>
 801efd4:	4620      	mov	r0, r4
 801efd6:	bd10      	pop	{r4, pc}

0801efd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801efd8:	b510      	push	{r4, lr}
 801efda:	2104      	movs	r1, #4
 801efdc:	4604      	mov	r4, r0
 801efde:	f00d fea4 	bl	802cd2a <_ZdlPvj>
 801efe2:	4620      	mov	r0, r4
 801efe4:	bd10      	pop	{r4, pc}

0801efe6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801efe6:	b510      	push	{r4, lr}
 801efe8:	2104      	movs	r1, #4
 801efea:	4604      	mov	r4, r0
 801efec:	f00d fe9d 	bl	802cd2a <_ZdlPvj>
 801eff0:	4620      	mov	r0, r4
 801eff2:	bd10      	pop	{r4, pc}

0801eff4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801eff4:	b510      	push	{r4, lr}
 801eff6:	2104      	movs	r1, #4
 801eff8:	4604      	mov	r4, r0
 801effa:	f00d fe96 	bl	802cd2a <_ZdlPvj>
 801effe:	4620      	mov	r0, r4
 801f000:	bd10      	pop	{r4, pc}

0801f002 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801f002:	b510      	push	{r4, lr}
 801f004:	2104      	movs	r1, #4
 801f006:	4604      	mov	r4, r0
 801f008:	f00d fe8f 	bl	802cd2a <_ZdlPvj>
 801f00c:	4620      	mov	r0, r4
 801f00e:	bd10      	pop	{r4, pc}

0801f010 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f010:	b510      	push	{r4, lr}
 801f012:	2104      	movs	r1, #4
 801f014:	4604      	mov	r4, r0
 801f016:	f00d fe88 	bl	802cd2a <_ZdlPvj>
 801f01a:	4620      	mov	r0, r4
 801f01c:	bd10      	pop	{r4, pc}

0801f01e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801f01e:	b510      	push	{r4, lr}
 801f020:	2104      	movs	r1, #4
 801f022:	4604      	mov	r4, r0
 801f024:	f00d fe81 	bl	802cd2a <_ZdlPvj>
 801f028:	4620      	mov	r0, r4
 801f02a:	bd10      	pop	{r4, pc}

0801f02c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801f02c:	b510      	push	{r4, lr}
 801f02e:	2104      	movs	r1, #4
 801f030:	4604      	mov	r4, r0
 801f032:	f00d fe7a 	bl	802cd2a <_ZdlPvj>
 801f036:	4620      	mov	r0, r4
 801f038:	bd10      	pop	{r4, pc}

0801f03a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801f03a:	b510      	push	{r4, lr}
 801f03c:	2104      	movs	r1, #4
 801f03e:	4604      	mov	r4, r0
 801f040:	f00d fe73 	bl	802cd2a <_ZdlPvj>
 801f044:	4620      	mov	r0, r4
 801f046:	bd10      	pop	{r4, pc}

0801f048 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801f048:	b510      	push	{r4, lr}
 801f04a:	2104      	movs	r1, #4
 801f04c:	4604      	mov	r4, r0
 801f04e:	f00d fe6c 	bl	802cd2a <_ZdlPvj>
 801f052:	4620      	mov	r0, r4
 801f054:	bd10      	pop	{r4, pc}

0801f056 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801f056:	b510      	push	{r4, lr}
 801f058:	2104      	movs	r1, #4
 801f05a:	4604      	mov	r4, r0
 801f05c:	f00d fe65 	bl	802cd2a <_ZdlPvj>
 801f060:	4620      	mov	r0, r4
 801f062:	bd10      	pop	{r4, pc}

0801f064 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801f064:	b510      	push	{r4, lr}
 801f066:	2104      	movs	r1, #4
 801f068:	4604      	mov	r4, r0
 801f06a:	f00d fe5e 	bl	802cd2a <_ZdlPvj>
 801f06e:	4620      	mov	r0, r4
 801f070:	bd10      	pop	{r4, pc}

0801f072 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801f072:	b510      	push	{r4, lr}
 801f074:	2104      	movs	r1, #4
 801f076:	4604      	mov	r4, r0
 801f078:	f00d fe57 	bl	802cd2a <_ZdlPvj>
 801f07c:	4620      	mov	r0, r4
 801f07e:	bd10      	pop	{r4, pc}

0801f080 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f080:	b510      	push	{r4, lr}
 801f082:	2104      	movs	r1, #4
 801f084:	4604      	mov	r4, r0
 801f086:	f00d fe50 	bl	802cd2a <_ZdlPvj>
 801f08a:	4620      	mov	r0, r4
 801f08c:	bd10      	pop	{r4, pc}

0801f08e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801f08e:	b510      	push	{r4, lr}
 801f090:	2104      	movs	r1, #4
 801f092:	4604      	mov	r4, r0
 801f094:	f00d fe49 	bl	802cd2a <_ZdlPvj>
 801f098:	4620      	mov	r0, r4
 801f09a:	bd10      	pop	{r4, pc}

0801f09c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801f09c:	b510      	push	{r4, lr}
 801f09e:	2104      	movs	r1, #4
 801f0a0:	4604      	mov	r4, r0
 801f0a2:	f00d fe42 	bl	802cd2a <_ZdlPvj>
 801f0a6:	4620      	mov	r0, r4
 801f0a8:	bd10      	pop	{r4, pc}

0801f0aa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801f0aa:	b510      	push	{r4, lr}
 801f0ac:	2104      	movs	r1, #4
 801f0ae:	4604      	mov	r4, r0
 801f0b0:	f00d fe3b 	bl	802cd2a <_ZdlPvj>
 801f0b4:	4620      	mov	r0, r4
 801f0b6:	bd10      	pop	{r4, pc}

0801f0b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801f0b8:	b510      	push	{r4, lr}
 801f0ba:	2104      	movs	r1, #4
 801f0bc:	4604      	mov	r4, r0
 801f0be:	f00d fe34 	bl	802cd2a <_ZdlPvj>
 801f0c2:	4620      	mov	r0, r4
 801f0c4:	bd10      	pop	{r4, pc}

0801f0c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801f0c6:	b510      	push	{r4, lr}
 801f0c8:	2104      	movs	r1, #4
 801f0ca:	4604      	mov	r4, r0
 801f0cc:	f00d fe2d 	bl	802cd2a <_ZdlPvj>
 801f0d0:	4620      	mov	r0, r4
 801f0d2:	bd10      	pop	{r4, pc}

0801f0d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801f0d4:	b510      	push	{r4, lr}
 801f0d6:	2104      	movs	r1, #4
 801f0d8:	4604      	mov	r4, r0
 801f0da:	f00d fe26 	bl	802cd2a <_ZdlPvj>
 801f0de:	4620      	mov	r0, r4
 801f0e0:	bd10      	pop	{r4, pc}

0801f0e2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801f0e2:	b510      	push	{r4, lr}
 801f0e4:	2104      	movs	r1, #4
 801f0e6:	4604      	mov	r4, r0
 801f0e8:	f00d fe1f 	bl	802cd2a <_ZdlPvj>
 801f0ec:	4620      	mov	r0, r4
 801f0ee:	bd10      	pop	{r4, pc}

0801f0f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801f0f0:	b510      	push	{r4, lr}
 801f0f2:	2104      	movs	r1, #4
 801f0f4:	4604      	mov	r4, r0
 801f0f6:	f00d fe18 	bl	802cd2a <_ZdlPvj>
 801f0fa:	4620      	mov	r0, r4
 801f0fc:	bd10      	pop	{r4, pc}
	...

0801f100 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801f100:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f104:	b08f      	sub	sp, #60	; 0x3c
 801f106:	461c      	mov	r4, r3
 801f108:	9205      	str	r2, [sp, #20]
 801f10a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801f10e:	9100      	str	r1, [sp, #0]
 801f110:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f112:	9201      	str	r2, [sp, #4]
 801f114:	2a00      	cmp	r2, #0
 801f116:	f000 8115 	beq.w	801f344 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801f11a:	6820      	ldr	r0, [r4, #0]
 801f11c:	6861      	ldr	r1, [r4, #4]
 801f11e:	aa0a      	add	r2, sp, #40	; 0x28
 801f120:	c203      	stmia	r2!, {r0, r1}
 801f122:	6818      	ldr	r0, [r3, #0]
 801f124:	6859      	ldr	r1, [r3, #4]
 801f126:	aa0c      	add	r2, sp, #48	; 0x30
 801f128:	c203      	stmia	r2!, {r0, r1}
 801f12a:	a80a      	add	r0, sp, #40	; 0x28
 801f12c:	f7f9 faec 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f130:	4621      	mov	r1, r4
 801f132:	a80c      	add	r0, sp, #48	; 0x30
 801f134:	f7f9 fb2c 	bl	8018790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f138:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801f13c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801f140:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801f144:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801f148:	bfde      	ittt	le
 801f14a:	b2b3      	uxthle	r3, r6
 801f14c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801f150:	fb92 f3f3 	sdivle	r3, r2, r3
 801f154:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f158:	bfc8      	it	gt
 801f15a:	2301      	movgt	r3, #1
 801f15c:	fb92 f1f3 	sdiv	r1, r2, r3
 801f160:	fa1f fc81 	uxth.w	ip, r1
 801f164:	fb0c 2413 	mls	r4, ip, r3, r2
 801f168:	fb14 f406 	smulbb	r4, r4, r6
 801f16c:	441d      	add	r5, r3
 801f16e:	4404      	add	r4, r0
 801f170:	4661      	mov	r1, ip
 801f172:	3d01      	subs	r5, #1
 801f174:	b2a4      	uxth	r4, r4
 801f176:	fb95 f5f3 	sdiv	r5, r5, r3
 801f17a:	b131      	cbz	r1, 801f18a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801f17c:	9b05      	ldr	r3, [sp, #20]
 801f17e:	9900      	ldr	r1, [sp, #0]
 801f180:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f184:	ba1b      	rev	r3, r3
 801f186:	4419      	add	r1, r3
 801f188:	9100      	str	r1, [sp, #0]
 801f18a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801f18e:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801f192:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801f196:	4418      	add	r0, r3
 801f198:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801f19c:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801f1a0:	441a      	add	r2, r3
 801f1a2:	4b6a      	ldr	r3, [pc, #424]	; (801f34c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801f1a4:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801f1a8:	6818      	ldr	r0, [r3, #0]
 801f1aa:	6803      	ldr	r3, [r0, #0]
 801f1ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f1ae:	4798      	blx	r3
 801f1b0:	4967      	ldr	r1, [pc, #412]	; (801f350 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801f1b2:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f1b6:	880b      	ldrh	r3, [r1, #0]
 801f1b8:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801f1bc:	9109      	str	r1, [sp, #36]	; 0x24
 801f1be:	fb03 c202 	mla	r2, r3, r2, ip
 801f1c2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f1c6:	4373      	muls	r3, r6
 801f1c8:	b2ad      	uxth	r5, r5
 801f1ca:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f1ce:	00ad      	lsls	r5, r5, #2
 801f1d0:	9306      	str	r3, [sp, #24]
 801f1d2:	1d2b      	adds	r3, r5, #4
 801f1d4:	9307      	str	r3, [sp, #28]
 801f1d6:	9b01      	ldr	r3, [sp, #4]
 801f1d8:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801f1dc:	9103      	str	r1, [sp, #12]
 801f1de:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801f1e2:	2c00      	cmp	r4, #0
 801f1e4:	bf0c      	ite	eq
 801f1e6:	46c6      	moveq	lr, r8
 801f1e8:	f04f 0e00 	movne.w	lr, #0
 801f1ec:	2300      	movs	r3, #0
 801f1ee:	b292      	uxth	r2, r2
 801f1f0:	fa1f fe8e 	uxth.w	lr, lr
 801f1f4:	9302      	str	r3, [sp, #8]
 801f1f6:	9204      	str	r2, [sp, #16]
 801f1f8:	9a06      	ldr	r2, [sp, #24]
 801f1fa:	4282      	cmp	r2, r0
 801f1fc:	f240 809d 	bls.w	801f33a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801f200:	b963      	cbnz	r3, 801f21c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801f202:	9b00      	ldr	r3, [sp, #0]
 801f204:	781a      	ldrb	r2, [r3, #0]
 801f206:	0993      	lsrs	r3, r2, #6
 801f208:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801f20c:	9202      	str	r2, [sp, #8]
 801f20e:	1e5a      	subs	r2, r3, #1
 801f210:	2a02      	cmp	r2, #2
 801f212:	d815      	bhi.n	801f240 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801f214:	9a00      	ldr	r2, [sp, #0]
 801f216:	3201      	adds	r2, #1
 801f218:	9200      	str	r2, [sp, #0]
 801f21a:	b29b      	uxth	r3, r3
 801f21c:	b1b4      	cbz	r4, 801f24c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801f21e:	429c      	cmp	r4, r3
 801f220:	bf95      	itete	ls
 801f222:	1b1c      	subls	r4, r3, r4
 801f224:	1ae4      	subhi	r4, r4, r3
 801f226:	fa1f fa84 	uxthls.w	sl, r4
 801f22a:	b2a4      	uxthhi	r4, r4
 801f22c:	bf87      	ittee	hi
 801f22e:	4671      	movhi	r1, lr
 801f230:	f04f 0a00 	movhi.w	sl, #0
 801f234:	fa1f f188 	uxthls.w	r1, r8
 801f238:	2400      	movls	r4, #0
 801f23a:	4653      	mov	r3, sl
 801f23c:	468e      	mov	lr, r1
 801f23e:	e7db      	b.n	801f1f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801f240:	9a00      	ldr	r2, [sp, #0]
 801f242:	9b00      	ldr	r3, [sp, #0]
 801f244:	3202      	adds	r2, #2
 801f246:	785b      	ldrb	r3, [r3, #1]
 801f248:	9200      	str	r2, [sp, #0]
 801f24a:	e7e7      	b.n	801f21c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801f24c:	2202      	movs	r2, #2
 801f24e:	4615      	mov	r5, r2
 801f250:	9907      	ldr	r1, [sp, #28]
 801f252:	9a02      	ldr	r2, [sp, #8]
 801f254:	fb15 1202 	smlabb	r2, r5, r2, r1
 801f258:	9905      	ldr	r1, [sp, #20]
 801f25a:	4573      	cmp	r3, lr
 801f25c:	f831 c002 	ldrh.w	ip, [r1, r2]
 801f260:	9a01      	ldr	r2, [sp, #4]
 801f262:	bf2b      	itete	cs
 801f264:	eba3 0a0e 	subcs.w	sl, r3, lr
 801f268:	ebae 0103 	subcc.w	r1, lr, r3
 801f26c:	46f1      	movcs	r9, lr
 801f26e:	4699      	movcc	r9, r3
 801f270:	bf27      	ittee	cs
 801f272:	fa1f fa8a 	uxthcs.w	sl, sl
 801f276:	4621      	movcs	r1, r4
 801f278:	b289      	uxthcc	r1, r1
 801f27a:	46a2      	movcc	sl, r4
 801f27c:	2aff      	cmp	r2, #255	; 0xff
 801f27e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f282:	d105      	bne.n	801f290 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801f284:	4481      	add	r9, r0
 801f286:	4581      	cmp	r9, r0
 801f288:	d045      	beq.n	801f316 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801f28a:	f820 cb02 	strh.w	ip, [r0], #2
 801f28e:	e7fa      	b.n	801f286 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801f290:	9d03      	ldr	r5, [sp, #12]
 801f292:	ea4f 222c 	mov.w	r2, ip, asr #8
 801f296:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f29a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f29e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f2a2:	436a      	muls	r2, r5
 801f2a4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f2a8:	fa5f fc8c 	uxtb.w	ip, ip
 801f2ac:	9208      	str	r2, [sp, #32]
 801f2ae:	fb0b fb05 	mul.w	fp, fp, r5
 801f2b2:	fb0c fc05 	mul.w	ip, ip, r5
 801f2b6:	4481      	add	r9, r0
 801f2b8:	4581      	cmp	r9, r0
 801f2ba:	d02c      	beq.n	801f316 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801f2bc:	8802      	ldrh	r2, [r0, #0]
 801f2be:	9d04      	ldr	r5, [sp, #16]
 801f2c0:	9f04      	ldr	r7, [sp, #16]
 801f2c2:	1216      	asrs	r6, r2, #8
 801f2c4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f2c8:	fb16 f605 	smulbb	r6, r6, r5
 801f2cc:	9d08      	ldr	r5, [sp, #32]
 801f2ce:	442e      	add	r6, r5
 801f2d0:	10d5      	asrs	r5, r2, #3
 801f2d2:	00d2      	lsls	r2, r2, #3
 801f2d4:	b2d2      	uxtb	r2, r2
 801f2d6:	fb12 f207 	smulbb	r2, r2, r7
 801f2da:	b2b6      	uxth	r6, r6
 801f2dc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f2e0:	4462      	add	r2, ip
 801f2e2:	fb15 f507 	smulbb	r5, r5, r7
 801f2e6:	b292      	uxth	r2, r2
 801f2e8:	1c77      	adds	r7, r6, #1
 801f2ea:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801f2ee:	1c57      	adds	r7, r2, #1
 801f2f0:	445d      	add	r5, fp
 801f2f2:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801f2f6:	b2ad      	uxth	r5, r5
 801f2f8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f2fc:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f300:	4316      	orrs	r6, r2
 801f302:	1c6a      	adds	r2, r5, #1
 801f304:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801f308:	096d      	lsrs	r5, r5, #5
 801f30a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f30e:	432e      	orrs	r6, r5
 801f310:	f820 6b02 	strh.w	r6, [r0], #2
 801f314:	e7d0      	b.n	801f2b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801f316:	4573      	cmp	r3, lr
 801f318:	d38f      	bcc.n	801f23a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801f31a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801f31e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f320:	fa1f f188 	uxth.w	r1, r8
 801f324:	1a64      	subs	r4, r4, r1
 801f326:	881b      	ldrh	r3, [r3, #0]
 801f328:	b2a4      	uxth	r4, r4
 801f32a:	2c00      	cmp	r4, #0
 801f32c:	eba3 0308 	sub.w	r3, r3, r8
 801f330:	bf18      	it	ne
 801f332:	2100      	movne	r1, #0
 801f334:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f338:	e77f      	b.n	801f23a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801f33a:	4b04      	ldr	r3, [pc, #16]	; (801f34c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801f33c:	6818      	ldr	r0, [r3, #0]
 801f33e:	6803      	ldr	r3, [r0, #0]
 801f340:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f342:	4798      	blx	r3
 801f344:	b00f      	add	sp, #60	; 0x3c
 801f346:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f34a:	bf00      	nop
 801f34c:	2001384c 	.word	0x2001384c
 801f350:	20013846 	.word	0x20013846

0801f354 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801f354:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f358:	b09f      	sub	sp, #124	; 0x7c
 801f35a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801f35e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801f362:	9209      	str	r2, [sp, #36]	; 0x24
 801f364:	461d      	mov	r5, r3
 801f366:	4604      	mov	r4, r0
 801f368:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f36a:	2a00      	cmp	r2, #0
 801f36c:	f000 81eb 	beq.w	801f746 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801f370:	6828      	ldr	r0, [r5, #0]
 801f372:	6869      	ldr	r1, [r5, #4]
 801f374:	aa1a      	add	r2, sp, #104	; 0x68
 801f376:	c203      	stmia	r2!, {r0, r1}
 801f378:	6818      	ldr	r0, [r3, #0]
 801f37a:	6859      	ldr	r1, [r3, #4]
 801f37c:	aa1c      	add	r2, sp, #112	; 0x70
 801f37e:	c203      	stmia	r2!, {r0, r1}
 801f380:	a81a      	add	r0, sp, #104	; 0x68
 801f382:	f7f9 f9c1 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f386:	4629      	mov	r1, r5
 801f388:	a81c      	add	r0, sp, #112	; 0x70
 801f38a:	f7f9 fa01 	bl	8018790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f38e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801f392:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801f396:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801f39a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801f39e:	bfd7      	itett	le
 801f3a0:	b29a      	uxthle	r2, r3
 801f3a2:	2201      	movgt	r2, #1
 801f3a4:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801f3a8:	fb91 f2f2 	sdivle	r2, r1, r2
 801f3ac:	9202      	str	r2, [sp, #8]
 801f3ae:	9802      	ldr	r0, [sp, #8]
 801f3b0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801f3b4:	fb92 f0f0 	sdiv	r0, r2, r0
 801f3b8:	b280      	uxth	r0, r0
 801f3ba:	9010      	str	r0, [sp, #64]	; 0x40
 801f3bc:	9902      	ldr	r1, [sp, #8]
 801f3be:	9802      	ldr	r0, [sp, #8]
 801f3c0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f3c2:	4488      	add	r8, r1
 801f3c4:	fb05 2510 	mls	r5, r5, r0, r2
 801f3c8:	fb15 f503 	smulbb	r5, r5, r3
 801f3cc:	f108 38ff 	add.w	r8, r8, #4294967295
 801f3d0:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801f3d4:	fb98 f8f1 	sdiv	r8, r8, r1
 801f3d8:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801f3dc:	440d      	add	r5, r1
 801f3de:	4419      	add	r1, r3
 801f3e0:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801f3e4:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801f3e8:	441a      	add	r2, r3
 801f3ea:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801f3ee:	9304      	str	r3, [sp, #16]
 801f3f0:	4b95      	ldr	r3, [pc, #596]	; (801f648 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801f3f2:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801f3f6:	6818      	ldr	r0, [r3, #0]
 801f3f8:	6803      	ldr	r3, [r0, #0]
 801f3fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f3fc:	4798      	blx	r3
 801f3fe:	4b93      	ldr	r3, [pc, #588]	; (801f64c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801f400:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801f404:	881a      	ldrh	r2, [r3, #0]
 801f406:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801f40a:	9318      	str	r3, [sp, #96]	; 0x60
 801f40c:	fb02 7101 	mla	r1, r2, r1, r7
 801f410:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f414:	4356      	muls	r6, r2
 801f416:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801f41a:	f108 0801 	add.w	r8, r8, #1
 801f41e:	920a      	str	r2, [sp, #40]	; 0x28
 801f420:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f422:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801f426:	930f      	str	r3, [sp, #60]	; 0x3c
 801f428:	fa1f f888 	uxth.w	r8, r8
 801f42c:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801f430:	f108 0204 	add.w	r2, r8, #4
 801f434:	9211      	str	r2, [sp, #68]	; 0x44
 801f436:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f438:	4b85      	ldr	r3, [pc, #532]	; (801f650 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801f43a:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801f43e:	b2ad      	uxth	r5, r5
 801f440:	9215      	str	r2, [sp, #84]	; 0x54
 801f442:	2d00      	cmp	r5, #0
 801f444:	9a04      	ldr	r2, [sp, #16]
 801f446:	f04f 0100 	mov.w	r1, #0
 801f44a:	bf18      	it	ne
 801f44c:	2200      	movne	r2, #0
 801f44e:	1b1b      	subs	r3, r3, r4
 801f450:	b292      	uxth	r2, r2
 801f452:	910d      	str	r1, [sp, #52]	; 0x34
 801f454:	9319      	str	r3, [sp, #100]	; 0x64
 801f456:	9910      	ldr	r1, [sp, #64]	; 0x40
 801f458:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f45a:	fa11 f383 	uxtah	r3, r1, r3
 801f45e:	9914      	ldr	r1, [sp, #80]	; 0x50
 801f460:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801f464:	3304      	adds	r3, #4
 801f466:	9306      	str	r3, [sp, #24]
 801f468:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f46a:	4283      	cmp	r3, r0
 801f46c:	f240 8166 	bls.w	801f73c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801f470:	9902      	ldr	r1, [sp, #8]
 801f472:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801f476:	fbb5 f3f3 	udiv	r3, r5, r3
 801f47a:	1acb      	subs	r3, r1, r3
 801f47c:	b29b      	uxth	r3, r3
 801f47e:	9316      	str	r3, [sp, #88]	; 0x58
 801f480:	9b06      	ldr	r3, [sp, #24]
 801f482:	9e06      	ldr	r6, [sp, #24]
 801f484:	7859      	ldrb	r1, [r3, #1]
 801f486:	789b      	ldrb	r3, [r3, #2]
 801f488:	7836      	ldrb	r6, [r6, #0]
 801f48a:	9612      	str	r6, [sp, #72]	; 0x48
 801f48c:	021b      	lsls	r3, r3, #8
 801f48e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801f492:	9906      	ldr	r1, [sp, #24]
 801f494:	78c9      	ldrb	r1, [r1, #3]
 801f496:	430b      	orrs	r3, r1
 801f498:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801f49a:	3601      	adds	r6, #1
 801f49c:	4419      	add	r1, r3
 801f49e:	9605      	str	r6, [sp, #20]
 801f4a0:	1c4e      	adds	r6, r1, #1
 801f4a2:	9603      	str	r6, [sp, #12]
 801f4a4:	7849      	ldrb	r1, [r1, #1]
 801f4a6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801f4a8:	0209      	lsls	r1, r1, #8
 801f4aa:	5cf3      	ldrb	r3, [r6, r3]
 801f4ac:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801f4b0:	4319      	orrs	r1, r3
 801f4b2:	b28b      	uxth	r3, r1
 801f4b4:	930c      	str	r3, [sp, #48]	; 0x30
 801f4b6:	2300      	movs	r3, #0
 801f4b8:	f04f 0a01 	mov.w	sl, #1
 801f4bc:	9307      	str	r3, [sp, #28]
 801f4be:	469c      	mov	ip, r3
 801f4c0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801f4c4:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801f4c8:	46d3      	mov	fp, sl
 801f4ca:	4657      	mov	r7, sl
 801f4cc:	930e      	str	r3, [sp, #56]	; 0x38
 801f4ce:	2d00      	cmp	r5, #0
 801f4d0:	d07e      	beq.n	801f5d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801f4d2:	42af      	cmp	r7, r5
 801f4d4:	d26e      	bcs.n	801f5b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801f4d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f4d8:	9201      	str	r2, [sp, #4]
 801f4da:	1bed      	subs	r5, r5, r7
 801f4dc:	4283      	cmp	r3, r0
 801f4de:	b2ad      	uxth	r5, r5
 801f4e0:	d802      	bhi.n	801f4e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801f4e2:	e073      	b.n	801f5cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801f4e4:	2b00      	cmp	r3, #0
 801f4e6:	d15f      	bne.n	801f5a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801f4e8:	9b03      	ldr	r3, [sp, #12]
 801f4ea:	785b      	ldrb	r3, [r3, #1]
 801f4ec:	f1cb 0207 	rsb	r2, fp, #7
 801f4f0:	4093      	lsls	r3, r2
 801f4f2:	005b      	lsls	r3, r3, #1
 801f4f4:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801f4f8:	9b03      	ldr	r3, [sp, #12]
 801f4fa:	781b      	ldrb	r3, [r3, #0]
 801f4fc:	fa43 f30b 	asr.w	r3, r3, fp
 801f500:	b2db      	uxtb	r3, r3
 801f502:	4313      	orrs	r3, r2
 801f504:	f10b 0201 	add.w	r2, fp, #1
 801f508:	fa5f fb82 	uxtb.w	fp, r2
 801f50c:	9a03      	ldr	r2, [sp, #12]
 801f50e:	f1bb 0f08 	cmp.w	fp, #8
 801f512:	bf15      	itete	ne
 801f514:	3201      	addne	r2, #1
 801f516:	3202      	addeq	r2, #2
 801f518:	9203      	strne	r2, [sp, #12]
 801f51a:	9203      	streq	r2, [sp, #12]
 801f51c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f51e:	b29f      	uxth	r7, r3
 801f520:	bf08      	it	eq
 801f522:	f04f 0b00 	moveq.w	fp, #0
 801f526:	42ba      	cmp	r2, r7
 801f528:	d309      	bcc.n	801f53e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801f52a:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801f52e:	2301      	movs	r3, #1
 801f530:	9a05      	ldr	r2, [sp, #20]
 801f532:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801f536:	d30e      	bcc.n	801f556 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801f538:	469a      	mov	sl, r3
 801f53a:	2600      	movs	r6, #0
 801f53c:	e035      	b.n	801f5aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801f53e:	9b05      	ldr	r3, [sp, #20]
 801f540:	429f      	cmp	r7, r3
 801f542:	d318      	bcc.n	801f576 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801f544:	eb04 030a 	add.w	r3, r4, sl
 801f548:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801f54c:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801f550:	f10a 0301 	add.w	r3, sl, #1
 801f554:	b29b      	uxth	r3, r3
 801f556:	9a05      	ldr	r2, [sp, #20]
 801f558:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801f55c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f55e:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801f562:	7116      	strb	r6, [r2, #4]
 801f564:	f10a 0601 	add.w	r6, sl, #1
 801f568:	80d1      	strh	r1, [r2, #6]
 801f56a:	7156      	strb	r6, [r2, #5]
 801f56c:	9a05      	ldr	r2, [sp, #20]
 801f56e:	3201      	adds	r2, #1
 801f570:	b292      	uxth	r2, r2
 801f572:	9205      	str	r2, [sp, #20]
 801f574:	e7e0      	b.n	801f538 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801f576:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801f57a:	463a      	mov	r2, r7
 801f57c:	795b      	ldrb	r3, [r3, #5]
 801f57e:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801f582:	4426      	add	r6, r4
 801f584:	9919      	ldr	r1, [sp, #100]	; 0x64
 801f586:	eb01 0c06 	add.w	ip, r1, r6
 801f58a:	f1bc 0f00 	cmp.w	ip, #0
 801f58e:	dd07      	ble.n	801f5a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801f590:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801f594:	f892 c004 	ldrb.w	ip, [r2, #4]
 801f598:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801f59c:	88d2      	ldrh	r2, [r2, #6]
 801f59e:	e7f1      	b.n	801f584 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801f5a0:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801f5a4:	b29b      	uxth	r3, r3
 801f5a6:	e7c3      	b.n	801f530 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801f5a8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801f5aa:	970c      	str	r7, [sp, #48]	; 0x30
 801f5ac:	9a01      	ldr	r2, [sp, #4]
 801f5ae:	46b4      	mov	ip, r6
 801f5b0:	461f      	mov	r7, r3
 801f5b2:	e78c      	b.n	801f4ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801f5b4:	1b7b      	subs	r3, r7, r5
 801f5b6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f5ba:	9201      	str	r2, [sp, #4]
 801f5bc:	eb0c 0605 	add.w	r6, ip, r5
 801f5c0:	b29b      	uxth	r3, r3
 801f5c2:	b2b6      	uxth	r6, r6
 801f5c4:	2500      	movs	r5, #0
 801f5c6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f5c8:	4282      	cmp	r2, r0
 801f5ca:	d88b      	bhi.n	801f4e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801f5cc:	9a01      	ldr	r2, [sp, #4]
 801f5ce:	e74b      	b.n	801f468 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801f5d0:	4297      	cmp	r7, r2
 801f5d2:	d332      	bcc.n	801f63a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801f5d4:	1abb      	subs	r3, r7, r2
 801f5d6:	b29b      	uxth	r3, r3
 801f5d8:	9208      	str	r2, [sp, #32]
 801f5da:	9501      	str	r5, [sp, #4]
 801f5dc:	9909      	ldr	r1, [sp, #36]	; 0x24
 801f5de:	29ff      	cmp	r1, #255	; 0xff
 801f5e0:	9908      	ldr	r1, [sp, #32]
 801f5e2:	eb0c 0601 	add.w	r6, ip, r1
 801f5e6:	d135      	bne.n	801f654 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801f5e8:	f1a0 0e02 	sub.w	lr, r0, #2
 801f5ec:	b2b6      	uxth	r6, r6
 801f5ee:	45b4      	cmp	ip, r6
 801f5f0:	f040 808c 	bne.w	801f70c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801f5f4:	9908      	ldr	r1, [sp, #32]
 801f5f6:	4297      	cmp	r7, r2
 801f5f8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f5fc:	d3e2      	bcc.n	801f5c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801f5fe:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801f600:	9904      	ldr	r1, [sp, #16]
 801f602:	8812      	ldrh	r2, [r2, #0]
 801f604:	1a52      	subs	r2, r2, r1
 801f606:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f60a:	9a07      	ldr	r2, [sp, #28]
 801f60c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801f60e:	3201      	adds	r2, #1
 801f610:	428a      	cmp	r2, r1
 801f612:	9207      	str	r2, [sp, #28]
 801f614:	f040 8087 	bne.w	801f726 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801f618:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801f61c:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801f620:	9b04      	ldr	r3, [sp, #16]
 801f622:	1bed      	subs	r5, r5, r7
 801f624:	b2ad      	uxth	r5, r5
 801f626:	2d00      	cmp	r5, #0
 801f628:	bf08      	it	eq
 801f62a:	461a      	moveq	r2, r3
 801f62c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f62e:	bf18      	it	ne
 801f630:	2200      	movne	r2, #0
 801f632:	3301      	adds	r3, #1
 801f634:	930d      	str	r3, [sp, #52]	; 0x34
 801f636:	b292      	uxth	r2, r2
 801f638:	e70d      	b.n	801f456 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801f63a:	1bd1      	subs	r1, r2, r7
 801f63c:	b28b      	uxth	r3, r1
 801f63e:	9301      	str	r3, [sp, #4]
 801f640:	9708      	str	r7, [sp, #32]
 801f642:	462b      	mov	r3, r5
 801f644:	e7ca      	b.n	801f5dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801f646:	bf00      	nop
 801f648:	2001384c 	.word	0x2001384c
 801f64c:	20013846 	.word	0x20013846
 801f650:	fffff7fb 	.word	0xfffff7fb
 801f654:	b2b6      	uxth	r6, r6
 801f656:	900b      	str	r0, [sp, #44]	; 0x2c
 801f658:	45b4      	cmp	ip, r6
 801f65a:	d0cb      	beq.n	801f5f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801f65c:	f10c 0101 	add.w	r1, ip, #1
 801f660:	44a4      	add	ip, r4
 801f662:	9117      	str	r1, [sp, #92]	; 0x5c
 801f664:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801f668:	9911      	ldr	r1, [sp, #68]	; 0x44
 801f66a:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801f66e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801f670:	f8b1 c000 	ldrh.w	ip, [r1]
 801f674:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f676:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801f67a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801f67e:	fb1e fe01 	smulbb	lr, lr, r1
 801f682:	ea4f 2825 	mov.w	r8, r5, asr #8
 801f686:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f688:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801f68c:	fb08 e801 	mla	r8, r8, r1, lr
 801f690:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801f694:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f696:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801f69a:	fb19 f901 	smulbb	r9, r9, r1
 801f69e:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801f6a2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f6a4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f6a8:	fb0e 9e01 	mla	lr, lr, r1, r9
 801f6ac:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f6b0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f6b2:	fa5f fc8c 	uxtb.w	ip, ip
 801f6b6:	fb1c fc01 	smulbb	ip, ip, r1
 801f6ba:	00ed      	lsls	r5, r5, #3
 801f6bc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f6be:	b2ed      	uxtb	r5, r5
 801f6c0:	fb05 c501 	mla	r5, r5, r1, ip
 801f6c4:	fa1f f888 	uxth.w	r8, r8
 801f6c8:	fa1f fe8e 	uxth.w	lr, lr
 801f6cc:	b2ad      	uxth	r5, r5
 801f6ce:	f108 0c01 	add.w	ip, r8, #1
 801f6d2:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801f6d6:	f10e 0901 	add.w	r9, lr, #1
 801f6da:	f105 0c01 	add.w	ip, r5, #1
 801f6de:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801f6e2:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801f6e6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f6ea:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801f6ee:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801f6f2:	ea4c 0808 	orr.w	r8, ip, r8
 801f6f6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801f6f8:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801f6fc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801f700:	ea48 0809 	orr.w	r8, r8, r9
 801f704:	f821 8b02 	strh.w	r8, [r1], #2
 801f708:	910b      	str	r1, [sp, #44]	; 0x2c
 801f70a:	e7a5      	b.n	801f658 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801f70c:	f10c 0801 	add.w	r8, ip, #1
 801f710:	44a4      	add	ip, r4
 801f712:	9911      	ldr	r1, [sp, #68]	; 0x44
 801f714:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801f718:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801f71c:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801f720:	fa1f fc88 	uxth.w	ip, r8
 801f724:	e763      	b.n	801f5ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801f726:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f72a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801f72e:	1aad      	subs	r5, r5, r2
 801f730:	b2ad      	uxth	r5, r5
 801f732:	2d00      	cmp	r5, #0
 801f734:	bf18      	it	ne
 801f736:	2200      	movne	r2, #0
 801f738:	9201      	str	r2, [sp, #4]
 801f73a:	e744      	b.n	801f5c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801f73c:	4b03      	ldr	r3, [pc, #12]	; (801f74c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801f73e:	6818      	ldr	r0, [r3, #0]
 801f740:	6803      	ldr	r3, [r0, #0]
 801f742:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f744:	4798      	blx	r3
 801f746:	b01f      	add	sp, #124	; 0x7c
 801f748:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f74c:	2001384c 	.word	0x2001384c

0801f750 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801f750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f754:	b08f      	sub	sp, #60	; 0x3c
 801f756:	461c      	mov	r4, r3
 801f758:	9203      	str	r2, [sp, #12]
 801f75a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801f75e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f760:	9202      	str	r2, [sp, #8]
 801f762:	460f      	mov	r7, r1
 801f764:	2a00      	cmp	r2, #0
 801f766:	f000 8128 	beq.w	801f9ba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801f76a:	6820      	ldr	r0, [r4, #0]
 801f76c:	6861      	ldr	r1, [r4, #4]
 801f76e:	aa0a      	add	r2, sp, #40	; 0x28
 801f770:	c203      	stmia	r2!, {r0, r1}
 801f772:	6818      	ldr	r0, [r3, #0]
 801f774:	6859      	ldr	r1, [r3, #4]
 801f776:	aa0c      	add	r2, sp, #48	; 0x30
 801f778:	c203      	stmia	r2!, {r0, r1}
 801f77a:	a80a      	add	r0, sp, #40	; 0x28
 801f77c:	f7f8 ffc4 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f780:	4621      	mov	r1, r4
 801f782:	a80c      	add	r0, sp, #48	; 0x30
 801f784:	f7f9 f804 	bl	8018790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f788:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801f78c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801f790:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801f794:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801f798:	bfde      	ittt	le
 801f79a:	b2b3      	uxthle	r3, r6
 801f79c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801f7a0:	fb92 f3f3 	sdivle	r3, r2, r3
 801f7a4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f7a8:	bfc8      	it	gt
 801f7aa:	2301      	movgt	r3, #1
 801f7ac:	fb92 f1f3 	sdiv	r1, r2, r3
 801f7b0:	fa1f fc81 	uxth.w	ip, r1
 801f7b4:	fb0c 2413 	mls	r4, ip, r3, r2
 801f7b8:	fb14 f406 	smulbb	r4, r4, r6
 801f7bc:	441d      	add	r5, r3
 801f7be:	4404      	add	r4, r0
 801f7c0:	4661      	mov	r1, ip
 801f7c2:	3d01      	subs	r5, #1
 801f7c4:	b2a4      	uxth	r4, r4
 801f7c6:	fb95 f5f3 	sdiv	r5, r5, r3
 801f7ca:	b121      	cbz	r1, 801f7d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801f7cc:	9b03      	ldr	r3, [sp, #12]
 801f7ce:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f7d2:	ba1b      	rev	r3, r3
 801f7d4:	441f      	add	r7, r3
 801f7d6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801f7da:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801f7de:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801f7e2:	4418      	add	r0, r3
 801f7e4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801f7e8:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801f7ec:	441a      	add	r2, r3
 801f7ee:	4b74      	ldr	r3, [pc, #464]	; (801f9c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801f7f0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801f7f4:	6818      	ldr	r0, [r3, #0]
 801f7f6:	6803      	ldr	r3, [r0, #0]
 801f7f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f7fa:	4798      	blx	r3
 801f7fc:	4a71      	ldr	r2, [pc, #452]	; (801f9c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801f7fe:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801f802:	8813      	ldrh	r3, [r2, #0]
 801f804:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801f808:	9209      	str	r2, [sp, #36]	; 0x24
 801f80a:	fb03 c101 	mla	r1, r3, r1, ip
 801f80e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f812:	4373      	muls	r3, r6
 801f814:	b2ad      	uxth	r5, r5
 801f816:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f81a:	00ad      	lsls	r5, r5, #2
 801f81c:	2c00      	cmp	r4, #0
 801f81e:	9304      	str	r3, [sp, #16]
 801f820:	f105 0304 	add.w	r3, r5, #4
 801f824:	9305      	str	r3, [sp, #20]
 801f826:	bf0c      	ite	eq
 801f828:	46c8      	moveq	r8, r9
 801f82a:	f04f 0800 	movne.w	r8, #0
 801f82e:	2300      	movs	r3, #0
 801f830:	fa1f f888 	uxth.w	r8, r8
 801f834:	9301      	str	r3, [sp, #4]
 801f836:	9a04      	ldr	r2, [sp, #16]
 801f838:	4282      	cmp	r2, r0
 801f83a:	f240 80b9 	bls.w	801f9b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801f83e:	b95b      	cbnz	r3, 801f858 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801f840:	783a      	ldrb	r2, [r7, #0]
 801f842:	0993      	lsrs	r3, r2, #6
 801f844:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801f848:	9201      	str	r2, [sp, #4]
 801f84a:	1e5a      	subs	r2, r3, #1
 801f84c:	2a02      	cmp	r2, #2
 801f84e:	bf8d      	iteet	hi
 801f850:	787b      	ldrbhi	r3, [r7, #1]
 801f852:	3701      	addls	r7, #1
 801f854:	b29b      	uxthls	r3, r3
 801f856:	3702      	addhi	r7, #2
 801f858:	b184      	cbz	r4, 801f87c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801f85a:	429c      	cmp	r4, r3
 801f85c:	bf95      	itete	ls
 801f85e:	1b1c      	subls	r4, r3, r4
 801f860:	1ae4      	subhi	r4, r4, r3
 801f862:	fa1f fa84 	uxthls.w	sl, r4
 801f866:	b2a4      	uxthhi	r4, r4
 801f868:	bf87      	ittee	hi
 801f86a:	46c4      	movhi	ip, r8
 801f86c:	f04f 0a00 	movhi.w	sl, #0
 801f870:	fa1f fc89 	uxthls.w	ip, r9
 801f874:	2400      	movls	r4, #0
 801f876:	4653      	mov	r3, sl
 801f878:	46e0      	mov	r8, ip
 801f87a:	e7dc      	b.n	801f836 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801f87c:	2204      	movs	r2, #4
 801f87e:	4615      	mov	r5, r2
 801f880:	9905      	ldr	r1, [sp, #20]
 801f882:	9a01      	ldr	r2, [sp, #4]
 801f884:	fb15 1202 	smlabb	r2, r5, r2, r1
 801f888:	9903      	ldr	r1, [sp, #12]
 801f88a:	588a      	ldr	r2, [r1, r2]
 801f88c:	4543      	cmp	r3, r8
 801f88e:	bf27      	ittee	cs
 801f890:	eba3 0a08 	subcs.w	sl, r3, r8
 801f894:	46c6      	movcs	lr, r8
 801f896:	eba8 0c03 	subcc.w	ip, r8, r3
 801f89a:	469e      	movcc	lr, r3
 801f89c:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801f8a0:	bf27      	ittee	cs
 801f8a2:	fa1f fa8a 	uxthcs.w	sl, sl
 801f8a6:	46a4      	movcs	ip, r4
 801f8a8:	fa1f fc8c 	uxthcc.w	ip, ip
 801f8ac:	46a2      	movcc	sl, r4
 801f8ae:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801f8b2:	2900      	cmp	r1, #0
 801f8b4:	d066      	beq.n	801f984 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801f8b6:	29ff      	cmp	r1, #255	; 0xff
 801f8b8:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f8bc:	d114      	bne.n	801f8e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801f8be:	9d02      	ldr	r5, [sp, #8]
 801f8c0:	2dff      	cmp	r5, #255	; 0xff
 801f8c2:	d111      	bne.n	801f8e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801f8c4:	0951      	lsrs	r1, r2, #5
 801f8c6:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801f8ca:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f8ce:	f026 0607 	bic.w	r6, r6, #7
 801f8d2:	430e      	orrs	r6, r1
 801f8d4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f8d8:	4316      	orrs	r6, r2
 801f8da:	b2b6      	uxth	r6, r6
 801f8dc:	4486      	add	lr, r0
 801f8de:	4586      	cmp	lr, r0
 801f8e0:	d051      	beq.n	801f986 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801f8e2:	f820 6b02 	strh.w	r6, [r0], #2
 801f8e6:	e7fa      	b.n	801f8de <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801f8e8:	9d02      	ldr	r5, [sp, #8]
 801f8ea:	4369      	muls	r1, r5
 801f8ec:	1c4d      	adds	r5, r1, #1
 801f8ee:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801f8f2:	122d      	asrs	r5, r5, #8
 801f8f4:	ea6f 0b05 	mvn.w	fp, r5
 801f8f8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f8fc:	b2ad      	uxth	r5, r5
 801f8fe:	b2f6      	uxtb	r6, r6
 801f900:	b2d2      	uxtb	r2, r2
 801f902:	fb11 f105 	smulbb	r1, r1, r5
 801f906:	fb16 f605 	smulbb	r6, r6, r5
 801f90a:	fb12 f205 	smulbb	r2, r2, r5
 801f90e:	b289      	uxth	r1, r1
 801f910:	b2b6      	uxth	r6, r6
 801f912:	b292      	uxth	r2, r2
 801f914:	9106      	str	r1, [sp, #24]
 801f916:	9607      	str	r6, [sp, #28]
 801f918:	9208      	str	r2, [sp, #32]
 801f91a:	4486      	add	lr, r0
 801f91c:	fa5f fb8b 	uxtb.w	fp, fp
 801f920:	4586      	cmp	lr, r0
 801f922:	d030      	beq.n	801f986 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801f924:	8802      	ldrh	r2, [r0, #0]
 801f926:	9906      	ldr	r1, [sp, #24]
 801f928:	1216      	asrs	r6, r2, #8
 801f92a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f92e:	10d5      	asrs	r5, r2, #3
 801f930:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801f934:	fb06 160b 	mla	r6, r6, fp, r1
 801f938:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f93c:	9907      	ldr	r1, [sp, #28]
 801f93e:	00d2      	lsls	r2, r2, #3
 801f940:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801f944:	fb05 150b 	mla	r5, r5, fp, r1
 801f948:	b2d2      	uxtb	r2, r2
 801f94a:	9908      	ldr	r1, [sp, #32]
 801f94c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801f950:	b2b6      	uxth	r6, r6
 801f952:	fb02 120b 	mla	r2, r2, fp, r1
 801f956:	b292      	uxth	r2, r2
 801f958:	1c71      	adds	r1, r6, #1
 801f95a:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801f95e:	1c51      	adds	r1, r2, #1
 801f960:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f964:	b2ad      	uxth	r5, r5
 801f966:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f96a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f96e:	4316      	orrs	r6, r2
 801f970:	1c6a      	adds	r2, r5, #1
 801f972:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801f976:	096d      	lsrs	r5, r5, #5
 801f978:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f97c:	432e      	orrs	r6, r5
 801f97e:	f820 6b02 	strh.w	r6, [r0], #2
 801f982:	e7cd      	b.n	801f920 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801f984:	4470      	add	r0, lr
 801f986:	4543      	cmp	r3, r8
 801f988:	f4ff af75 	bcc.w	801f876 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801f98c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801f990:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f992:	fa1f fc89 	uxth.w	ip, r9
 801f996:	eba4 040c 	sub.w	r4, r4, ip
 801f99a:	881b      	ldrh	r3, [r3, #0]
 801f99c:	b2a4      	uxth	r4, r4
 801f99e:	2c00      	cmp	r4, #0
 801f9a0:	eba3 0309 	sub.w	r3, r3, r9
 801f9a4:	bf18      	it	ne
 801f9a6:	f04f 0c00 	movne.w	ip, #0
 801f9aa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f9ae:	e762      	b.n	801f876 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801f9b0:	4b03      	ldr	r3, [pc, #12]	; (801f9c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801f9b2:	6818      	ldr	r0, [r3, #0]
 801f9b4:	6803      	ldr	r3, [r0, #0]
 801f9b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f9b8:	4798      	blx	r3
 801f9ba:	b00f      	add	sp, #60	; 0x3c
 801f9bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f9c0:	2001384c 	.word	0x2001384c
 801f9c4:	20013846 	.word	0x20013846

0801f9c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801f9c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f9cc:	b093      	sub	sp, #76	; 0x4c
 801f9ce:	461c      	mov	r4, r3
 801f9d0:	9205      	str	r2, [sp, #20]
 801f9d2:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801f9d6:	9101      	str	r1, [sp, #4]
 801f9d8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f9da:	9202      	str	r2, [sp, #8]
 801f9dc:	2a00      	cmp	r2, #0
 801f9de:	f000 812c 	beq.w	801fc3a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801f9e2:	6820      	ldr	r0, [r4, #0]
 801f9e4:	6861      	ldr	r1, [r4, #4]
 801f9e6:	aa0e      	add	r2, sp, #56	; 0x38
 801f9e8:	c203      	stmia	r2!, {r0, r1}
 801f9ea:	6818      	ldr	r0, [r3, #0]
 801f9ec:	6859      	ldr	r1, [r3, #4]
 801f9ee:	aa10      	add	r2, sp, #64	; 0x40
 801f9f0:	c203      	stmia	r2!, {r0, r1}
 801f9f2:	a80e      	add	r0, sp, #56	; 0x38
 801f9f4:	f7f8 fe88 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f9f8:	4621      	mov	r1, r4
 801f9fa:	a810      	add	r0, sp, #64	; 0x40
 801f9fc:	f7f8 fec8 	bl	8018790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fa00:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801fa04:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801fa08:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801fa0c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801fa10:	bfde      	ittt	le
 801fa12:	b2b3      	uxthle	r3, r6
 801fa14:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801fa18:	fb92 f3f3 	sdivle	r3, r2, r3
 801fa1c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801fa20:	bfc8      	it	gt
 801fa22:	2301      	movgt	r3, #1
 801fa24:	fb92 f1f3 	sdiv	r1, r2, r3
 801fa28:	fa1f fc81 	uxth.w	ip, r1
 801fa2c:	fb0c 2413 	mls	r4, ip, r3, r2
 801fa30:	fb14 f406 	smulbb	r4, r4, r6
 801fa34:	441d      	add	r5, r3
 801fa36:	4404      	add	r4, r0
 801fa38:	4661      	mov	r1, ip
 801fa3a:	3d01      	subs	r5, #1
 801fa3c:	b2a4      	uxth	r4, r4
 801fa3e:	fb95 f5f3 	sdiv	r5, r5, r3
 801fa42:	b131      	cbz	r1, 801fa52 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801fa44:	9b05      	ldr	r3, [sp, #20]
 801fa46:	9901      	ldr	r1, [sp, #4]
 801fa48:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801fa4c:	ba1b      	rev	r3, r3
 801fa4e:	4419      	add	r1, r3
 801fa50:	9101      	str	r1, [sp, #4]
 801fa52:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801fa56:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801fa5a:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801fa5e:	4418      	add	r0, r3
 801fa60:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801fa64:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801fa68:	441a      	add	r2, r3
 801fa6a:	4b75      	ldr	r3, [pc, #468]	; (801fc40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801fa6c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801fa70:	6818      	ldr	r0, [r3, #0]
 801fa72:	6803      	ldr	r3, [r0, #0]
 801fa74:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fa76:	4798      	blx	r3
 801fa78:	4972      	ldr	r1, [pc, #456]	; (801fc44 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801fa7a:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801fa7e:	880b      	ldrh	r3, [r1, #0]
 801fa80:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801fa84:	910d      	str	r1, [sp, #52]	; 0x34
 801fa86:	fb03 c202 	mla	r2, r3, r2, ip
 801fa8a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801fa8e:	4373      	muls	r3, r6
 801fa90:	b2ad      	uxth	r5, r5
 801fa92:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801fa96:	00ad      	lsls	r5, r5, #2
 801fa98:	9308      	str	r3, [sp, #32]
 801fa9a:	1d2b      	adds	r3, r5, #4
 801fa9c:	9309      	str	r3, [sp, #36]	; 0x24
 801fa9e:	9b02      	ldr	r3, [sp, #8]
 801faa0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801faa4:	9106      	str	r1, [sp, #24]
 801faa6:	43da      	mvns	r2, r3
 801faa8:	2c00      	cmp	r4, #0
 801faaa:	bf0c      	ite	eq
 801faac:	46dc      	moveq	ip, fp
 801faae:	f04f 0c00 	movne.w	ip, #0
 801fab2:	2300      	movs	r3, #0
 801fab4:	b2d2      	uxtb	r2, r2
 801fab6:	fa1f fc8c 	uxth.w	ip, ip
 801faba:	9303      	str	r3, [sp, #12]
 801fabc:	9207      	str	r2, [sp, #28]
 801fabe:	9a08      	ldr	r2, [sp, #32]
 801fac0:	4282      	cmp	r2, r0
 801fac2:	f240 80b5 	bls.w	801fc30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801fac6:	b963      	cbnz	r3, 801fae2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801fac8:	9b01      	ldr	r3, [sp, #4]
 801faca:	781a      	ldrb	r2, [r3, #0]
 801facc:	0993      	lsrs	r3, r2, #6
 801face:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801fad2:	9203      	str	r2, [sp, #12]
 801fad4:	1e5a      	subs	r2, r3, #1
 801fad6:	2a02      	cmp	r2, #2
 801fad8:	d815      	bhi.n	801fb06 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801fada:	9a01      	ldr	r2, [sp, #4]
 801fadc:	3201      	adds	r2, #1
 801fade:	9201      	str	r2, [sp, #4]
 801fae0:	b29b      	uxth	r3, r3
 801fae2:	b1b4      	cbz	r4, 801fb12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801fae4:	429c      	cmp	r4, r3
 801fae6:	bf95      	itete	ls
 801fae8:	1b1c      	subls	r4, r3, r4
 801faea:	1ae4      	subhi	r4, r4, r3
 801faec:	fa1f f884 	uxthls.w	r8, r4
 801faf0:	b2a4      	uxthhi	r4, r4
 801faf2:	bf87      	ittee	hi
 801faf4:	4666      	movhi	r6, ip
 801faf6:	f04f 0800 	movhi.w	r8, #0
 801fafa:	fa1f f68b 	uxthls.w	r6, fp
 801fafe:	2400      	movls	r4, #0
 801fb00:	4643      	mov	r3, r8
 801fb02:	46b4      	mov	ip, r6
 801fb04:	e7db      	b.n	801fabe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801fb06:	9a01      	ldr	r2, [sp, #4]
 801fb08:	9b01      	ldr	r3, [sp, #4]
 801fb0a:	3202      	adds	r2, #2
 801fb0c:	785b      	ldrb	r3, [r3, #1]
 801fb0e:	9201      	str	r2, [sp, #4]
 801fb10:	e7e7      	b.n	801fae2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801fb12:	2203      	movs	r2, #3
 801fb14:	4615      	mov	r5, r2
 801fb16:	9909      	ldr	r1, [sp, #36]	; 0x24
 801fb18:	9a03      	ldr	r2, [sp, #12]
 801fb1a:	fb15 1202 	smlabb	r2, r5, r2, r1
 801fb1e:	9905      	ldr	r1, [sp, #20]
 801fb20:	4563      	cmp	r3, ip
 801fb22:	eb01 0502 	add.w	r5, r1, r2
 801fb26:	9902      	ldr	r1, [sp, #8]
 801fb28:	bf29      	itett	cs
 801fb2a:	eba3 080c 	subcs.w	r8, r3, ip
 801fb2e:	ebac 0603 	subcc.w	r6, ip, r3
 801fb32:	fa1f f888 	uxthcs.w	r8, r8
 801fb36:	46e1      	movcs	r9, ip
 801fb38:	bf2f      	iteee	cs
 801fb3a:	4626      	movcs	r6, r4
 801fb3c:	b2b6      	uxthcc	r6, r6
 801fb3e:	4699      	movcc	r9, r3
 801fb40:	46a0      	movcc	r8, r4
 801fb42:	29ff      	cmp	r1, #255	; 0xff
 801fb44:	d04a      	beq.n	801fbdc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801fb46:	9f06      	ldr	r7, [sp, #24]
 801fb48:	78a9      	ldrb	r1, [r5, #2]
 801fb4a:	9004      	str	r0, [sp, #16]
 801fb4c:	4379      	muls	r1, r7
 801fb4e:	910a      	str	r1, [sp, #40]	; 0x28
 801fb50:	7869      	ldrb	r1, [r5, #1]
 801fb52:	4379      	muls	r1, r7
 801fb54:	910b      	str	r1, [sp, #44]	; 0x2c
 801fb56:	9905      	ldr	r1, [sp, #20]
 801fb58:	5c8a      	ldrb	r2, [r1, r2]
 801fb5a:	437a      	muls	r2, r7
 801fb5c:	920c      	str	r2, [sp, #48]	; 0x30
 801fb5e:	46ca      	mov	sl, r9
 801fb60:	f1ba 0f00 	cmp.w	sl, #0
 801fb64:	d03d      	beq.n	801fbe2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801fb66:	9a04      	ldr	r2, [sp, #16]
 801fb68:	9f07      	ldr	r7, [sp, #28]
 801fb6a:	8812      	ldrh	r2, [r2, #0]
 801fb6c:	1215      	asrs	r5, r2, #8
 801fb6e:	46be      	mov	lr, r7
 801fb70:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801fb74:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801fb76:	10d1      	asrs	r1, r2, #3
 801fb78:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801fb7c:	fb05 750e 	mla	r5, r5, lr, r7
 801fb80:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fb84:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801fb86:	00d2      	lsls	r2, r2, #3
 801fb88:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801fb8c:	fb01 710e 	mla	r1, r1, lr, r7
 801fb90:	b2d2      	uxtb	r2, r2
 801fb92:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801fb94:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801fb98:	b2ad      	uxth	r5, r5
 801fb9a:	fb02 720e 	mla	r2, r2, lr, r7
 801fb9e:	b292      	uxth	r2, r2
 801fba0:	f105 0e01 	add.w	lr, r5, #1
 801fba4:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801fba8:	f102 0e01 	add.w	lr, r2, #1
 801fbac:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801fbb0:	b289      	uxth	r1, r1
 801fbb2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fbb6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801fbba:	4315      	orrs	r5, r2
 801fbbc:	1c4a      	adds	r2, r1, #1
 801fbbe:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fbc2:	0949      	lsrs	r1, r1, #5
 801fbc4:	9a04      	ldr	r2, [sp, #16]
 801fbc6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fbca:	430d      	orrs	r5, r1
 801fbcc:	f822 5b02 	strh.w	r5, [r2], #2
 801fbd0:	f10a 3aff 	add.w	sl, sl, #4294967295
 801fbd4:	9204      	str	r2, [sp, #16]
 801fbd6:	fa1f fa8a 	uxth.w	sl, sl
 801fbda:	e7c1      	b.n	801fb60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801fbdc:	4649      	mov	r1, r9
 801fbde:	4686      	mov	lr, r0
 801fbe0:	b999      	cbnz	r1, 801fc0a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801fbe2:	4563      	cmp	r3, ip
 801fbe4:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801fbe8:	d38a      	bcc.n	801fb00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801fbea:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801fbee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fbf0:	fa1f f68b 	uxth.w	r6, fp
 801fbf4:	1ba4      	subs	r4, r4, r6
 801fbf6:	881b      	ldrh	r3, [r3, #0]
 801fbf8:	b2a4      	uxth	r4, r4
 801fbfa:	2c00      	cmp	r4, #0
 801fbfc:	eba3 030b 	sub.w	r3, r3, fp
 801fc00:	bf18      	it	ne
 801fc02:	2600      	movne	r6, #0
 801fc04:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801fc08:	e77a      	b.n	801fb00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801fc0a:	78aa      	ldrb	r2, [r5, #2]
 801fc0c:	4f0e      	ldr	r7, [pc, #56]	; (801fc48 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801fc0e:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801fc12:	786a      	ldrb	r2, [r5, #1]
 801fc14:	00d2      	lsls	r2, r2, #3
 801fc16:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fc1a:	ea4a 0202 	orr.w	r2, sl, r2
 801fc1e:	f895 a000 	ldrb.w	sl, [r5]
 801fc22:	3901      	subs	r1, #1
 801fc24:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801fc28:	f82e 2b02 	strh.w	r2, [lr], #2
 801fc2c:	b289      	uxth	r1, r1
 801fc2e:	e7d7      	b.n	801fbe0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801fc30:	4b03      	ldr	r3, [pc, #12]	; (801fc40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801fc32:	6818      	ldr	r0, [r3, #0]
 801fc34:	6803      	ldr	r3, [r0, #0]
 801fc36:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fc38:	4798      	blx	r3
 801fc3a:	b013      	add	sp, #76	; 0x4c
 801fc3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fc40:	2001384c 	.word	0x2001384c
 801fc44:	20013846 	.word	0x20013846
 801fc48:	fffff800 	.word	0xfffff800

0801fc4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801fc4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fc50:	b09d      	sub	sp, #116	; 0x74
 801fc52:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801fc56:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801fc5a:	920e      	str	r2, [sp, #56]	; 0x38
 801fc5c:	461c      	mov	r4, r3
 801fc5e:	4683      	mov	fp, r0
 801fc60:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fc62:	2a00      	cmp	r2, #0
 801fc64:	f000 81e0 	beq.w	8020028 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801fc68:	6820      	ldr	r0, [r4, #0]
 801fc6a:	6861      	ldr	r1, [r4, #4]
 801fc6c:	aa18      	add	r2, sp, #96	; 0x60
 801fc6e:	c203      	stmia	r2!, {r0, r1}
 801fc70:	6818      	ldr	r0, [r3, #0]
 801fc72:	6859      	ldr	r1, [r3, #4]
 801fc74:	aa1a      	add	r2, sp, #104	; 0x68
 801fc76:	c203      	stmia	r2!, {r0, r1}
 801fc78:	a818      	add	r0, sp, #96	; 0x60
 801fc7a:	f7f8 fd45 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fc7e:	4621      	mov	r1, r4
 801fc80:	a81a      	add	r0, sp, #104	; 0x68
 801fc82:	f7f8 fd85 	bl	8018790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fc86:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801fc8a:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801fc8e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801fc92:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801fc96:	bfd7      	itett	le
 801fc98:	b29a      	uxthle	r2, r3
 801fc9a:	2201      	movgt	r2, #1
 801fc9c:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801fca0:	fb91 f2f2 	sdivle	r2, r1, r2
 801fca4:	9202      	str	r2, [sp, #8]
 801fca6:	9802      	ldr	r0, [sp, #8]
 801fca8:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801fcac:	fb92 f0f0 	sdiv	r0, r2, r0
 801fcb0:	b280      	uxth	r0, r0
 801fcb2:	900f      	str	r0, [sp, #60]	; 0x3c
 801fcb4:	9902      	ldr	r1, [sp, #8]
 801fcb6:	9802      	ldr	r0, [sp, #8]
 801fcb8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801fcba:	440c      	add	r4, r1
 801fcbc:	fb05 2510 	mls	r5, r5, r0, r2
 801fcc0:	fb15 f503 	smulbb	r5, r5, r3
 801fcc4:	3c01      	subs	r4, #1
 801fcc6:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801fcca:	fb94 f4f1 	sdiv	r4, r4, r1
 801fcce:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801fcd2:	440d      	add	r5, r1
 801fcd4:	4419      	add	r1, r3
 801fcd6:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801fcda:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801fcde:	441a      	add	r2, r3
 801fce0:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801fce4:	9306      	str	r3, [sp, #24]
 801fce6:	4bb3      	ldr	r3, [pc, #716]	; (801ffb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801fce8:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801fcec:	6818      	ldr	r0, [r3, #0]
 801fcee:	6803      	ldr	r3, [r0, #0]
 801fcf0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fcf2:	4798      	blx	r3
 801fcf4:	4bb0      	ldr	r3, [pc, #704]	; (801ffb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801fcf6:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801fcfa:	881a      	ldrh	r2, [r3, #0]
 801fcfc:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801fd00:	9316      	str	r3, [sp, #88]	; 0x58
 801fd02:	fb02 7101 	mla	r1, r2, r1, r7
 801fd06:	3401      	adds	r4, #1
 801fd08:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801fd0c:	b2a4      	uxth	r4, r4
 801fd0e:	4356      	muls	r6, r2
 801fd10:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801fd14:	00a4      	lsls	r4, r4, #2
 801fd16:	920a      	str	r2, [sp, #40]	; 0x28
 801fd18:	1d22      	adds	r2, r4, #4
 801fd1a:	b2ad      	uxth	r5, r5
 801fd1c:	9213      	str	r2, [sp, #76]	; 0x4c
 801fd1e:	4ba7      	ldr	r3, [pc, #668]	; (801ffbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801fd20:	9a06      	ldr	r2, [sp, #24]
 801fd22:	2d00      	cmp	r5, #0
 801fd24:	bf0c      	ite	eq
 801fd26:	4611      	moveq	r1, r2
 801fd28:	2100      	movne	r1, #0
 801fd2a:	2200      	movs	r2, #0
 801fd2c:	eba3 030b 	sub.w	r3, r3, fp
 801fd30:	b289      	uxth	r1, r1
 801fd32:	920d      	str	r2, [sp, #52]	; 0x34
 801fd34:	9317      	str	r3, [sp, #92]	; 0x5c
 801fd36:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801fd38:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fd3a:	fa12 f383 	uxtah	r3, r2, r3
 801fd3e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801fd40:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801fd44:	3304      	adds	r3, #4
 801fd46:	9308      	str	r3, [sp, #32]
 801fd48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fd4a:	4543      	cmp	r3, r8
 801fd4c:	f240 8167 	bls.w	802001e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801fd50:	9a02      	ldr	r2, [sp, #8]
 801fd52:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801fd56:	fbb5 f3f3 	udiv	r3, r5, r3
 801fd5a:	1ad3      	subs	r3, r2, r3
 801fd5c:	b29b      	uxth	r3, r3
 801fd5e:	9314      	str	r3, [sp, #80]	; 0x50
 801fd60:	9b08      	ldr	r3, [sp, #32]
 801fd62:	9808      	ldr	r0, [sp, #32]
 801fd64:	785a      	ldrb	r2, [r3, #1]
 801fd66:	789b      	ldrb	r3, [r3, #2]
 801fd68:	7800      	ldrb	r0, [r0, #0]
 801fd6a:	9010      	str	r0, [sp, #64]	; 0x40
 801fd6c:	021b      	lsls	r3, r3, #8
 801fd6e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801fd72:	9a08      	ldr	r2, [sp, #32]
 801fd74:	78d2      	ldrb	r2, [r2, #3]
 801fd76:	4313      	orrs	r3, r2
 801fd78:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801fd7a:	3001      	adds	r0, #1
 801fd7c:	441a      	add	r2, r3
 801fd7e:	9007      	str	r0, [sp, #28]
 801fd80:	1c50      	adds	r0, r2, #1
 801fd82:	9005      	str	r0, [sp, #20]
 801fd84:	7852      	ldrb	r2, [r2, #1]
 801fd86:	9811      	ldr	r0, [sp, #68]	; 0x44
 801fd88:	0212      	lsls	r2, r2, #8
 801fd8a:	5cc3      	ldrb	r3, [r0, r3]
 801fd8c:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801fd90:	431a      	orrs	r2, r3
 801fd92:	b293      	uxth	r3, r2
 801fd94:	930b      	str	r3, [sp, #44]	; 0x2c
 801fd96:	2300      	movs	r3, #0
 801fd98:	9309      	str	r3, [sp, #36]	; 0x24
 801fd9a:	2301      	movs	r3, #1
 801fd9c:	9301      	str	r3, [sp, #4]
 801fd9e:	9304      	str	r3, [sp, #16]
 801fda0:	2300      	movs	r3, #0
 801fda2:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801fda6:	9303      	str	r3, [sp, #12]
 801fda8:	f04f 0e01 	mov.w	lr, #1
 801fdac:	2d00      	cmp	r5, #0
 801fdae:	d07c      	beq.n	801feaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801fdb0:	45ae      	cmp	lr, r5
 801fdb2:	d26b      	bcs.n	801fe8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801fdb4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fdb6:	eba5 050e 	sub.w	r5, r5, lr
 801fdba:	4543      	cmp	r3, r8
 801fdbc:	b2ad      	uxth	r5, r5
 801fdbe:	460c      	mov	r4, r1
 801fdc0:	d802      	bhi.n	801fdc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801fdc2:	e070      	b.n	801fea6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801fdc4:	2b00      	cmp	r3, #0
 801fdc6:	d15c      	bne.n	801fe82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801fdc8:	9b05      	ldr	r3, [sp, #20]
 801fdca:	9a04      	ldr	r2, [sp, #16]
 801fdcc:	785b      	ldrb	r3, [r3, #1]
 801fdce:	9904      	ldr	r1, [sp, #16]
 801fdd0:	f1c2 0207 	rsb	r2, r2, #7
 801fdd4:	4093      	lsls	r3, r2
 801fdd6:	005b      	lsls	r3, r3, #1
 801fdd8:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801fddc:	9b05      	ldr	r3, [sp, #20]
 801fdde:	781b      	ldrb	r3, [r3, #0]
 801fde0:	410b      	asrs	r3, r1
 801fde2:	3101      	adds	r1, #1
 801fde4:	b2c9      	uxtb	r1, r1
 801fde6:	2908      	cmp	r1, #8
 801fde8:	9104      	str	r1, [sp, #16]
 801fdea:	9905      	ldr	r1, [sp, #20]
 801fdec:	bf0a      	itet	eq
 801fdee:	3102      	addeq	r1, #2
 801fdf0:	3101      	addne	r1, #1
 801fdf2:	9105      	streq	r1, [sp, #20]
 801fdf4:	b2db      	uxtb	r3, r3
 801fdf6:	bf0a      	itet	eq
 801fdf8:	2100      	moveq	r1, #0
 801fdfa:	9105      	strne	r1, [sp, #20]
 801fdfc:	9104      	streq	r1, [sp, #16]
 801fdfe:	4313      	orrs	r3, r2
 801fe00:	9910      	ldr	r1, [sp, #64]	; 0x40
 801fe02:	b29a      	uxth	r2, r3
 801fe04:	4291      	cmp	r1, r2
 801fe06:	d30a      	bcc.n	801fe1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801fe08:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801fe0c:	2301      	movs	r3, #1
 801fe0e:	9907      	ldr	r1, [sp, #28]
 801fe10:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801fe14:	d30f      	bcc.n	801fe36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801fe16:	2100      	movs	r1, #0
 801fe18:	9301      	str	r3, [sp, #4]
 801fe1a:	9103      	str	r1, [sp, #12]
 801fe1c:	e032      	b.n	801fe84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801fe1e:	9b07      	ldr	r3, [sp, #28]
 801fe20:	429a      	cmp	r2, r3
 801fe22:	d318      	bcc.n	801fe56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801fe24:	9b01      	ldr	r3, [sp, #4]
 801fe26:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801fe2a:	445b      	add	r3, fp
 801fe2c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801fe30:	9b01      	ldr	r3, [sp, #4]
 801fe32:	3301      	adds	r3, #1
 801fe34:	b29b      	uxth	r3, r3
 801fe36:	9907      	ldr	r1, [sp, #28]
 801fe38:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801fe3c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801fe40:	7108      	strb	r0, [r1, #4]
 801fe42:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801fe44:	80c8      	strh	r0, [r1, #6]
 801fe46:	9801      	ldr	r0, [sp, #4]
 801fe48:	3001      	adds	r0, #1
 801fe4a:	7148      	strb	r0, [r1, #5]
 801fe4c:	9907      	ldr	r1, [sp, #28]
 801fe4e:	3101      	adds	r1, #1
 801fe50:	b289      	uxth	r1, r1
 801fe52:	9107      	str	r1, [sp, #28]
 801fe54:	e7df      	b.n	801fe16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801fe56:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801fe5a:	4611      	mov	r1, r2
 801fe5c:	795b      	ldrb	r3, [r3, #5]
 801fe5e:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801fe62:	4458      	add	r0, fp
 801fe64:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801fe66:	4406      	add	r6, r0
 801fe68:	2e00      	cmp	r6, #0
 801fe6a:	dd06      	ble.n	801fe7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801fe6c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801fe70:	790e      	ldrb	r6, [r1, #4]
 801fe72:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801fe76:	88c9      	ldrh	r1, [r1, #6]
 801fe78:	e7f4      	b.n	801fe64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801fe7a:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801fe7e:	b29b      	uxth	r3, r3
 801fe80:	e7c5      	b.n	801fe0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801fe82:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fe84:	920b      	str	r2, [sp, #44]	; 0x2c
 801fe86:	4621      	mov	r1, r4
 801fe88:	469e      	mov	lr, r3
 801fe8a:	e78f      	b.n	801fdac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801fe8c:	9a03      	ldr	r2, [sp, #12]
 801fe8e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801fe92:	442a      	add	r2, r5
 801fe94:	ebae 0305 	sub.w	r3, lr, r5
 801fe98:	b292      	uxth	r2, r2
 801fe9a:	b29b      	uxth	r3, r3
 801fe9c:	9203      	str	r2, [sp, #12]
 801fe9e:	2500      	movs	r5, #0
 801fea0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fea2:	4542      	cmp	r2, r8
 801fea4:	d88e      	bhi.n	801fdc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801fea6:	4621      	mov	r1, r4
 801fea8:	e74e      	b.n	801fd48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801feaa:	458e      	cmp	lr, r1
 801feac:	bf29      	itett	cs
 801feae:	ebae 0301 	subcs.w	r3, lr, r1
 801feb2:	eba1 040e 	subcc.w	r4, r1, lr
 801feb6:	b29b      	uxthcs	r3, r3
 801feb8:	910c      	strcs	r1, [sp, #48]	; 0x30
 801feba:	bf2f      	iteee	cs
 801febc:	462c      	movcs	r4, r5
 801febe:	b2a4      	uxthcc	r4, r4
 801fec0:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801fec4:	462b      	movcc	r3, r5
 801fec6:	f04f 0900 	mov.w	r9, #0
 801feca:	9a03      	ldr	r2, [sp, #12]
 801fecc:	980c      	ldr	r0, [sp, #48]	; 0x30
 801fece:	444a      	add	r2, r9
 801fed0:	4548      	cmp	r0, r9
 801fed2:	b292      	uxth	r2, r2
 801fed4:	d074      	beq.n	801ffc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801fed6:	445a      	add	r2, fp
 801fed8:	2004      	movs	r0, #4
 801feda:	4605      	mov	r5, r0
 801fedc:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801fee0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801fee2:	fb15 0202 	smlabb	r2, r5, r2, r0
 801fee6:	9812      	ldr	r0, [sp, #72]	; 0x48
 801fee8:	5880      	ldr	r0, [r0, r2]
 801feea:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801feee:	d014      	beq.n	801ff1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801fef0:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801fef4:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801fef8:	d112      	bne.n	801ff20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801fefa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fefc:	2aff      	cmp	r2, #255	; 0xff
 801fefe:	d10f      	bne.n	801ff20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801ff00:	0942      	lsrs	r2, r0, #5
 801ff02:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801ff06:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ff0a:	f025 0507 	bic.w	r5, r5, #7
 801ff0e:	4315      	orrs	r5, r2
 801ff10:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801ff14:	4305      	orrs	r5, r0
 801ff16:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801ff1a:	f109 0901 	add.w	r9, r9, #1
 801ff1e:	e7d4      	b.n	801feca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801ff20:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801ff24:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801ff28:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801ff2c:	9215      	str	r2, [sp, #84]	; 0x54
 801ff2e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ff30:	fb02 fa0a 	mul.w	sl, r2, sl
 801ff34:	f10a 0201 	add.w	r2, sl, #1
 801ff38:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801ff3c:	ea4f 272c 	mov.w	r7, ip, asr #8
 801ff40:	1212      	asrs	r2, r2, #8
 801ff42:	fa1f fa82 	uxth.w	sl, r2
 801ff46:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801ff4a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ff4e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ff52:	43d2      	mvns	r2, r2
 801ff54:	b2d2      	uxtb	r2, r2
 801ff56:	fb16 f60a 	smulbb	r6, r6, sl
 801ff5a:	fa5f fc8c 	uxtb.w	ip, ip
 801ff5e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801ff62:	b2c0      	uxtb	r0, r0
 801ff64:	fb07 6702 	mla	r7, r7, r2, r6
 801ff68:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801ff6c:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801ff6e:	fb10 f00a 	smulbb	r0, r0, sl
 801ff72:	fb0c 0002 	mla	r0, ip, r2, r0
 801ff76:	b2ed      	uxtb	r5, r5
 801ff78:	b2bf      	uxth	r7, r7
 801ff7a:	fb15 f50a 	smulbb	r5, r5, sl
 801ff7e:	b280      	uxth	r0, r0
 801ff80:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801ff84:	fb06 5602 	mla	r6, r6, r2, r5
 801ff88:	1c7a      	adds	r2, r7, #1
 801ff8a:	1c45      	adds	r5, r0, #1
 801ff8c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801ff90:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ff94:	b2b6      	uxth	r6, r6
 801ff96:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ff9a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ff9e:	432f      	orrs	r7, r5
 801ffa0:	1c75      	adds	r5, r6, #1
 801ffa2:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801ffa6:	096d      	lsrs	r5, r5, #5
 801ffa8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ffac:	432f      	orrs	r7, r5
 801ffae:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801ffb2:	e7b2      	b.n	801ff1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801ffb4:	2001384c 	.word	0x2001384c
 801ffb8:	20013846 	.word	0x20013846
 801ffbc:	fffff7fb 	.word	0xfffff7fb
 801ffc0:	9203      	str	r2, [sp, #12]
 801ffc2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ffc4:	458e      	cmp	lr, r1
 801ffc6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801ffca:	f4ff af68 	bcc.w	801fe9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801ffce:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801ffd0:	9906      	ldr	r1, [sp, #24]
 801ffd2:	8812      	ldrh	r2, [r2, #0]
 801ffd4:	1a52      	subs	r2, r2, r1
 801ffd6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801ffda:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ffdc:	9914      	ldr	r1, [sp, #80]	; 0x50
 801ffde:	3201      	adds	r2, #1
 801ffe0:	428a      	cmp	r2, r1
 801ffe2:	9209      	str	r2, [sp, #36]	; 0x24
 801ffe4:	d111      	bne.n	802000a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801ffe6:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801ffea:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801ffee:	9b06      	ldr	r3, [sp, #24]
 801fff0:	eba5 0509 	sub.w	r5, r5, r9
 801fff4:	b2ad      	uxth	r5, r5
 801fff6:	2d00      	cmp	r5, #0
 801fff8:	bf08      	it	eq
 801fffa:	4619      	moveq	r1, r3
 801fffc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fffe:	bf18      	it	ne
 8020000:	2100      	movne	r1, #0
 8020002:	3301      	adds	r3, #1
 8020004:	930d      	str	r3, [sp, #52]	; 0x34
 8020006:	b289      	uxth	r1, r1
 8020008:	e695      	b.n	801fd36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 802000a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 802000e:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8020012:	1b2d      	subs	r5, r5, r4
 8020014:	b2ad      	uxth	r5, r5
 8020016:	2d00      	cmp	r5, #0
 8020018:	bf18      	it	ne
 802001a:	2400      	movne	r4, #0
 802001c:	e740      	b.n	801fea0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 802001e:	4b04      	ldr	r3, [pc, #16]	; (8020030 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8020020:	6818      	ldr	r0, [r3, #0]
 8020022:	6803      	ldr	r3, [r0, #0]
 8020024:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020026:	4798      	blx	r3
 8020028:	b01d      	add	sp, #116	; 0x74
 802002a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802002e:	bf00      	nop
 8020030:	2001384c 	.word	0x2001384c

08020034 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8020034:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020038:	b09f      	sub	sp, #124	; 0x7c
 802003a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 802003e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 8020042:	920a      	str	r2, [sp, #40]	; 0x28
 8020044:	461d      	mov	r5, r3
 8020046:	4604      	mov	r4, r0
 8020048:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802004a:	2a00      	cmp	r2, #0
 802004c:	f000 81fa 	beq.w	8020444 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 8020050:	6828      	ldr	r0, [r5, #0]
 8020052:	6869      	ldr	r1, [r5, #4]
 8020054:	aa1a      	add	r2, sp, #104	; 0x68
 8020056:	c203      	stmia	r2!, {r0, r1}
 8020058:	6818      	ldr	r0, [r3, #0]
 802005a:	6859      	ldr	r1, [r3, #4]
 802005c:	aa1c      	add	r2, sp, #112	; 0x70
 802005e:	c203      	stmia	r2!, {r0, r1}
 8020060:	a81a      	add	r0, sp, #104	; 0x68
 8020062:	f7f8 fb51 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020066:	4629      	mov	r1, r5
 8020068:	a81c      	add	r0, sp, #112	; 0x70
 802006a:	f7f8 fb91 	bl	8018790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802006e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8020072:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 8020076:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 802007a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 802007e:	bfd7      	itett	le
 8020080:	b29a      	uxthle	r2, r3
 8020082:	2201      	movgt	r2, #1
 8020084:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8020088:	fb91 f2f2 	sdivle	r2, r1, r2
 802008c:	9201      	str	r2, [sp, #4]
 802008e:	9801      	ldr	r0, [sp, #4]
 8020090:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 8020094:	fb92 f0f0 	sdiv	r0, r2, r0
 8020098:	b280      	uxth	r0, r0
 802009a:	9010      	str	r0, [sp, #64]	; 0x40
 802009c:	9901      	ldr	r1, [sp, #4]
 802009e:	9801      	ldr	r0, [sp, #4]
 80200a0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80200a2:	440e      	add	r6, r1
 80200a4:	fb05 2510 	mls	r5, r5, r0, r2
 80200a8:	fb15 f503 	smulbb	r5, r5, r3
 80200ac:	3e01      	subs	r6, #1
 80200ae:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80200b2:	fb96 f6f1 	sdiv	r6, r6, r1
 80200b6:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 80200ba:	440d      	add	r5, r1
 80200bc:	4419      	add	r1, r3
 80200be:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 80200c2:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 80200c6:	441a      	add	r2, r3
 80200c8:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 80200cc:	9304      	str	r3, [sp, #16]
 80200ce:	4b96      	ldr	r3, [pc, #600]	; (8020328 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 80200d0:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 80200d4:	6818      	ldr	r0, [r3, #0]
 80200d6:	6803      	ldr	r3, [r0, #0]
 80200d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80200da:	4798      	blx	r3
 80200dc:	4b93      	ldr	r3, [pc, #588]	; (802032c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 80200de:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 80200e2:	881a      	ldrh	r2, [r3, #0]
 80200e4:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 80200e8:	9318      	str	r3, [sp, #96]	; 0x60
 80200ea:	fb02 c101 	mla	r1, r2, r1, ip
 80200ee:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 80200f2:	4357      	muls	r7, r2
 80200f4:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 80200f8:	3601      	adds	r6, #1
 80200fa:	920b      	str	r2, [sp, #44]	; 0x2c
 80200fc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80200fe:	4b8c      	ldr	r3, [pc, #560]	; (8020330 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8020100:	b2b6      	uxth	r6, r6
 8020102:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8020106:	1d32      	adds	r2, r6, #4
 8020108:	9206      	str	r2, [sp, #24]
 802010a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802010c:	43d2      	mvns	r2, r2
 802010e:	b2d2      	uxtb	r2, r2
 8020110:	b2ad      	uxth	r5, r5
 8020112:	9215      	str	r2, [sp, #84]	; 0x54
 8020114:	9a04      	ldr	r2, [sp, #16]
 8020116:	2d00      	cmp	r5, #0
 8020118:	bf0c      	ite	eq
 802011a:	4611      	moveq	r1, r2
 802011c:	2100      	movne	r1, #0
 802011e:	2200      	movs	r2, #0
 8020120:	1b1b      	subs	r3, r3, r4
 8020122:	b289      	uxth	r1, r1
 8020124:	920d      	str	r2, [sp, #52]	; 0x34
 8020126:	9319      	str	r3, [sp, #100]	; 0x64
 8020128:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802012a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802012c:	fa12 f383 	uxtah	r3, r2, r3
 8020130:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020132:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8020136:	3304      	adds	r3, #4
 8020138:	9307      	str	r3, [sp, #28]
 802013a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802013c:	455b      	cmp	r3, fp
 802013e:	f240 817c 	bls.w	802043a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 8020142:	9a01      	ldr	r2, [sp, #4]
 8020144:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8020148:	fbb5 f3f3 	udiv	r3, r5, r3
 802014c:	1ad3      	subs	r3, r2, r3
 802014e:	b29b      	uxth	r3, r3
 8020150:	9316      	str	r3, [sp, #88]	; 0x58
 8020152:	9b07      	ldr	r3, [sp, #28]
 8020154:	9807      	ldr	r0, [sp, #28]
 8020156:	785a      	ldrb	r2, [r3, #1]
 8020158:	789b      	ldrb	r3, [r3, #2]
 802015a:	7800      	ldrb	r0, [r0, #0]
 802015c:	9011      	str	r0, [sp, #68]	; 0x44
 802015e:	021b      	lsls	r3, r3, #8
 8020160:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8020164:	9a07      	ldr	r2, [sp, #28]
 8020166:	78d2      	ldrb	r2, [r2, #3]
 8020168:	4313      	orrs	r3, r2
 802016a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 802016c:	3001      	adds	r0, #1
 802016e:	441a      	add	r2, r3
 8020170:	9005      	str	r0, [sp, #20]
 8020172:	1c50      	adds	r0, r2, #1
 8020174:	9003      	str	r0, [sp, #12]
 8020176:	7852      	ldrb	r2, [r2, #1]
 8020178:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802017a:	0212      	lsls	r2, r2, #8
 802017c:	5cc3      	ldrb	r3, [r0, r3]
 802017e:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 8020182:	431a      	orrs	r2, r3
 8020184:	b293      	uxth	r3, r2
 8020186:	930c      	str	r3, [sp, #48]	; 0x30
 8020188:	2300      	movs	r3, #0
 802018a:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 802018e:	9308      	str	r3, [sp, #32]
 8020190:	461a      	mov	r2, r3
 8020192:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8020196:	930e      	str	r3, [sp, #56]	; 0x38
 8020198:	f04f 0801 	mov.w	r8, #1
 802019c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80201a0:	f8cd 8008 	str.w	r8, [sp, #8]
 80201a4:	46c4      	mov	ip, r8
 80201a6:	930f      	str	r3, [sp, #60]	; 0x3c
 80201a8:	2d00      	cmp	r5, #0
 80201aa:	d07c      	beq.n	80202a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 80201ac:	45ac      	cmp	ip, r5
 80201ae:	d26c      	bcs.n	802028a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 80201b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80201b2:	eba5 050c 	sub.w	r5, r5, ip
 80201b6:	455b      	cmp	r3, fp
 80201b8:	b2ad      	uxth	r5, r5
 80201ba:	4608      	mov	r0, r1
 80201bc:	d802      	bhi.n	80201c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80201be:	e070      	b.n	80202a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 80201c0:	2b00      	cmp	r3, #0
 80201c2:	d15c      	bne.n	802027e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80201c4:	9b03      	ldr	r3, [sp, #12]
 80201c6:	9a02      	ldr	r2, [sp, #8]
 80201c8:	785b      	ldrb	r3, [r3, #1]
 80201ca:	9902      	ldr	r1, [sp, #8]
 80201cc:	f1c2 0207 	rsb	r2, r2, #7
 80201d0:	4093      	lsls	r3, r2
 80201d2:	005b      	lsls	r3, r3, #1
 80201d4:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 80201d8:	9b03      	ldr	r3, [sp, #12]
 80201da:	781b      	ldrb	r3, [r3, #0]
 80201dc:	410b      	asrs	r3, r1
 80201de:	3101      	adds	r1, #1
 80201e0:	b2c9      	uxtb	r1, r1
 80201e2:	2908      	cmp	r1, #8
 80201e4:	9102      	str	r1, [sp, #8]
 80201e6:	9903      	ldr	r1, [sp, #12]
 80201e8:	bf0a      	itet	eq
 80201ea:	3102      	addeq	r1, #2
 80201ec:	3101      	addne	r1, #1
 80201ee:	9103      	streq	r1, [sp, #12]
 80201f0:	b2db      	uxtb	r3, r3
 80201f2:	bf0a      	itet	eq
 80201f4:	2100      	moveq	r1, #0
 80201f6:	9103      	strne	r1, [sp, #12]
 80201f8:	9102      	streq	r1, [sp, #8]
 80201fa:	4313      	orrs	r3, r2
 80201fc:	9911      	ldr	r1, [sp, #68]	; 0x44
 80201fe:	b29a      	uxth	r2, r3
 8020200:	4291      	cmp	r1, r2
 8020202:	d30a      	bcc.n	802021a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8020204:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 8020208:	2301      	movs	r3, #1
 802020a:	9905      	ldr	r1, [sp, #20]
 802020c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8020210:	d30f      	bcc.n	8020232 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 8020212:	2100      	movs	r1, #0
 8020214:	4698      	mov	r8, r3
 8020216:	9100      	str	r1, [sp, #0]
 8020218:	e032      	b.n	8020280 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 802021a:	9b05      	ldr	r3, [sp, #20]
 802021c:	429a      	cmp	r2, r3
 802021e:	d318      	bcc.n	8020252 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8020220:	eb04 0308 	add.w	r3, r4, r8
 8020224:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 8020228:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 802022c:	f108 0301 	add.w	r3, r8, #1
 8020230:	b29b      	uxth	r3, r3
 8020232:	9905      	ldr	r1, [sp, #20]
 8020234:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8020238:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 802023c:	710e      	strb	r6, [r1, #4]
 802023e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8020240:	80ce      	strh	r6, [r1, #6]
 8020242:	f108 0601 	add.w	r6, r8, #1
 8020246:	714e      	strb	r6, [r1, #5]
 8020248:	9905      	ldr	r1, [sp, #20]
 802024a:	3101      	adds	r1, #1
 802024c:	b289      	uxth	r1, r1
 802024e:	9105      	str	r1, [sp, #20]
 8020250:	e7df      	b.n	8020212 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 8020252:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8020256:	4611      	mov	r1, r2
 8020258:	795b      	ldrb	r3, [r3, #5]
 802025a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 802025e:	4426      	add	r6, r4
 8020260:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8020262:	4437      	add	r7, r6
 8020264:	2f00      	cmp	r7, #0
 8020266:	dd06      	ble.n	8020276 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8020268:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 802026c:	790f      	ldrb	r7, [r1, #4]
 802026e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8020272:	88c9      	ldrh	r1, [r1, #6]
 8020274:	e7f4      	b.n	8020260 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 8020276:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 802027a:	b29b      	uxth	r3, r3
 802027c:	e7c5      	b.n	802020a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 802027e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020280:	920c      	str	r2, [sp, #48]	; 0x30
 8020282:	4601      	mov	r1, r0
 8020284:	9a00      	ldr	r2, [sp, #0]
 8020286:	469c      	mov	ip, r3
 8020288:	e78e      	b.n	80201a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 802028a:	1957      	adds	r7, r2, r5
 802028c:	ebac 0305 	sub.w	r3, ip, r5
 8020290:	b2ba      	uxth	r2, r7
 8020292:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8020296:	9200      	str	r2, [sp, #0]
 8020298:	b29b      	uxth	r3, r3
 802029a:	2500      	movs	r5, #0
 802029c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802029e:	455a      	cmp	r2, fp
 80202a0:	d88e      	bhi.n	80201c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 80202a2:	4601      	mov	r1, r0
 80202a4:	e749      	b.n	802013a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 80202a6:	458c      	cmp	ip, r1
 80202a8:	bf2c      	ite	cs
 80202aa:	4628      	movcs	r0, r5
 80202ac:	462b      	movcc	r3, r5
 80202ae:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80202b0:	bf27      	ittee	cs
 80202b2:	9109      	strcs	r1, [sp, #36]	; 0x24
 80202b4:	ebac 0301 	subcs.w	r3, ip, r1
 80202b8:	eba1 000c 	subcc.w	r0, r1, ip
 80202bc:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 80202c0:	bf2c      	ite	cs
 80202c2:	b29b      	uxthcs	r3, r3
 80202c4:	b280      	uxthcc	r0, r0
 80202c6:	2dff      	cmp	r5, #255	; 0xff
 80202c8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80202ca:	eb02 0705 	add.w	r7, r2, r5
 80202ce:	b2bd      	uxth	r5, r7
 80202d0:	9500      	str	r5, [sp, #0]
 80202d2:	d12f      	bne.n	8020334 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 80202d4:	465e      	mov	r6, fp
 80202d6:	9d00      	ldr	r5, [sp, #0]
 80202d8:	42aa      	cmp	r2, r5
 80202da:	f040 8084 	bne.w	80203e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 80202de:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80202e0:	458c      	cmp	ip, r1
 80202e2:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80202e6:	d3d8      	bcc.n	802029a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 80202e8:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80202ea:	9904      	ldr	r1, [sp, #16]
 80202ec:	8812      	ldrh	r2, [r2, #0]
 80202ee:	1a52      	subs	r2, r2, r1
 80202f0:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80202f4:	9a08      	ldr	r2, [sp, #32]
 80202f6:	9916      	ldr	r1, [sp, #88]	; 0x58
 80202f8:	3201      	adds	r2, #1
 80202fa:	428a      	cmp	r2, r1
 80202fc:	9208      	str	r2, [sp, #32]
 80202fe:	f040 8092 	bne.w	8020426 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 8020302:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 8020306:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 802030a:	9b04      	ldr	r3, [sp, #16]
 802030c:	eba5 050c 	sub.w	r5, r5, ip
 8020310:	b2ad      	uxth	r5, r5
 8020312:	2d00      	cmp	r5, #0
 8020314:	bf08      	it	eq
 8020316:	4619      	moveq	r1, r3
 8020318:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802031a:	bf18      	it	ne
 802031c:	2100      	movne	r1, #0
 802031e:	3301      	adds	r3, #1
 8020320:	930d      	str	r3, [sp, #52]	; 0x34
 8020322:	b289      	uxth	r1, r1
 8020324:	e700      	b.n	8020128 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8020326:	bf00      	nop
 8020328:	2001384c 	.word	0x2001384c
 802032c:	20013846 	.word	0x20013846
 8020330:	fffff7fb 	.word	0xfffff7fb
 8020334:	46d9      	mov	r9, fp
 8020336:	9d00      	ldr	r5, [sp, #0]
 8020338:	42aa      	cmp	r2, r5
 802033a:	d0d0      	beq.n	80202de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 802033c:	1c55      	adds	r5, r2, #1
 802033e:	4422      	add	r2, r4
 8020340:	9517      	str	r5, [sp, #92]	; 0x5c
 8020342:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 8020346:	9a06      	ldr	r2, [sp, #24]
 8020348:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802034c:	4472      	add	r2, lr
 802034e:	9212      	str	r2, [sp, #72]	; 0x48
 8020350:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8020352:	f8b9 2000 	ldrh.w	r2, [r9]
 8020356:	f897 a002 	ldrb.w	sl, [r7, #2]
 802035a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 802035c:	1216      	asrs	r6, r2, #8
 802035e:	fb1a fa07 	smulbb	sl, sl, r7
 8020362:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020366:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8020368:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 802036c:	fb06 a607 	mla	r6, r6, r7, sl
 8020370:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8020372:	f897 a001 	ldrb.w	sl, [r7, #1]
 8020376:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8020378:	10d5      	asrs	r5, r2, #3
 802037a:	fb1a fa07 	smulbb	sl, sl, r7
 802037e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020382:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8020384:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8020388:	fb05 a507 	mla	r5, r5, r7, sl
 802038c:	9f06      	ldr	r7, [sp, #24]
 802038e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8020392:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8020394:	00d2      	lsls	r2, r2, #3
 8020396:	fb1e fe07 	smulbb	lr, lr, r7
 802039a:	b2d2      	uxtb	r2, r2
 802039c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 802039e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80203a2:	b2b6      	uxth	r6, r6
 80203a4:	fb02 e207 	mla	r2, r2, r7, lr
 80203a8:	b292      	uxth	r2, r2
 80203aa:	b2ad      	uxth	r5, r5
 80203ac:	f106 0a01 	add.w	sl, r6, #1
 80203b0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80203b4:	f102 0e01 	add.w	lr, r2, #1
 80203b8:	f105 0a01 	add.w	sl, r5, #1
 80203bc:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 80203c0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80203c4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80203c8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80203cc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80203d0:	ea4e 0606 	orr.w	r6, lr, r6
 80203d4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80203d8:	ea46 060a 	orr.w	r6, r6, sl
 80203dc:	f829 6b02 	strh.w	r6, [r9], #2
 80203e0:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 80203e4:	e7a7      	b.n	8020336 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 80203e6:	f102 0e01 	add.w	lr, r2, #1
 80203ea:	4422      	add	r2, r4
 80203ec:	9f06      	ldr	r7, [sp, #24]
 80203ee:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 80203f2:	9a06      	ldr	r2, [sp, #24]
 80203f4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80203f8:	eb02 0a05 	add.w	sl, r2, r5
 80203fc:	4a13      	ldr	r2, [pc, #76]	; (802044c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 80203fe:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020402:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 8020406:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802040a:	00d2      	lsls	r2, r2, #3
 802040c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020410:	ea49 0202 	orr.w	r2, r9, r2
 8020414:	f817 9005 	ldrb.w	r9, [r7, r5]
 8020418:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802041c:	f826 2b02 	strh.w	r2, [r6], #2
 8020420:	fa1f f28e 	uxth.w	r2, lr
 8020424:	e757      	b.n	80202d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 8020426:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 802042a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 802042e:	1a2d      	subs	r5, r5, r0
 8020430:	b2ad      	uxth	r5, r5
 8020432:	2d00      	cmp	r5, #0
 8020434:	bf18      	it	ne
 8020436:	2000      	movne	r0, #0
 8020438:	e730      	b.n	802029c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 802043a:	4b05      	ldr	r3, [pc, #20]	; (8020450 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 802043c:	6818      	ldr	r0, [r3, #0]
 802043e:	6803      	ldr	r3, [r0, #0]
 8020440:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020442:	4798      	blx	r3
 8020444:	b01f      	add	sp, #124	; 0x7c
 8020446:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802044a:	bf00      	nop
 802044c:	fffff800 	.word	0xfffff800
 8020450:	2001384c 	.word	0x2001384c

08020454 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8020454:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020458:	b091      	sub	sp, #68	; 0x44
 802045a:	469b      	mov	fp, r3
 802045c:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8020460:	4616      	mov	r6, r2
 8020462:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 8020466:	f9b3 2000 	ldrsh.w	r2, [r3]
 802046a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 802046e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8020472:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8020476:	4604      	mov	r4, r0
 8020478:	460d      	mov	r5, r1
 802047a:	4640      	mov	r0, r8
 802047c:	4659      	mov	r1, fp
 802047e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8020482:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8020486:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 802048a:	f7f2 fb9f 	bl	8012bcc <_ZN8touchgfx4RectaNERKS0_>
 802048e:	4631      	mov	r1, r6
 8020490:	4640      	mov	r0, r8
 8020492:	f7f2 fb9b 	bl	8012bcc <_ZN8touchgfx4RectaNERKS0_>
 8020496:	4b74      	ldr	r3, [pc, #464]	; (8020668 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8020498:	8818      	ldrh	r0, [r3, #0]
 802049a:	4b74      	ldr	r3, [pc, #464]	; (802066c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 802049c:	8819      	ldrh	r1, [r3, #0]
 802049e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80204a2:	2b00      	cmp	r3, #0
 80204a4:	b202      	sxth	r2, r0
 80204a6:	b20e      	sxth	r6, r1
 80204a8:	da07      	bge.n	80204ba <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 80204aa:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80204ae:	4463      	add	r3, ip
 80204b0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80204b4:	2300      	movs	r3, #0
 80204b6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80204ba:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80204be:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 80204c2:	1ad2      	subs	r2, r2, r3
 80204c4:	4594      	cmp	ip, r2
 80204c6:	bfc4      	itt	gt
 80204c8:	1ac2      	subgt	r2, r0, r3
 80204ca:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 80204ce:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80204d2:	2a00      	cmp	r2, #0
 80204d4:	da07      	bge.n	80204e6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 80204d6:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 80204da:	4462      	add	r2, ip
 80204dc:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80204e0:	2200      	movs	r2, #0
 80204e2:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80204e6:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 80204ea:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 80204ee:	eba6 060a 	sub.w	r6, r6, sl
 80204f2:	42b2      	cmp	r2, r6
 80204f4:	bfc4      	itt	gt
 80204f6:	eba1 020a 	subgt.w	r2, r1, sl
 80204fa:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 80204fe:	4a5c      	ldr	r2, [pc, #368]	; (8020670 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8020500:	7812      	ldrb	r2, [r2, #0]
 8020502:	b9a2      	cbnz	r2, 802052e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8020504:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8020508:	4286      	cmp	r6, r0
 802050a:	4640      	mov	r0, r8
 802050c:	9303      	str	r3, [sp, #12]
 802050e:	bf14      	ite	ne
 8020510:	2600      	movne	r6, #0
 8020512:	2601      	moveq	r6, #1
 8020514:	f7f2 fb9d 	bl	8012c52 <_ZNK8touchgfx4Rect7isEmptyEv>
 8020518:	9b03      	ldr	r3, [sp, #12]
 802051a:	b160      	cbz	r0, 8020536 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 802051c:	2300      	movs	r3, #0
 802051e:	8023      	strh	r3, [r4, #0]
 8020520:	8063      	strh	r3, [r4, #2]
 8020522:	80a3      	strh	r3, [r4, #4]
 8020524:	4620      	mov	r0, r4
 8020526:	80e3      	strh	r3, [r4, #6]
 8020528:	b011      	add	sp, #68	; 0x44
 802052a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802052e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8020532:	428e      	cmp	r6, r1
 8020534:	e7e9      	b.n	802050a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8020536:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 802053a:	9205      	str	r2, [sp, #20]
 802053c:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8020540:	9206      	str	r2, [sp, #24]
 8020542:	f8bb 2000 	ldrh.w	r2, [fp]
 8020546:	900e      	str	r0, [sp, #56]	; 0x38
 8020548:	1a9b      	subs	r3, r3, r2
 802054a:	b21b      	sxth	r3, r3
 802054c:	9303      	str	r3, [sp, #12]
 802054e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8020552:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 8020556:	ebaa 0a03 	sub.w	sl, sl, r3
 802055a:	fa0f f38a 	sxth.w	r3, sl
 802055e:	9304      	str	r3, [sp, #16]
 8020560:	9b03      	ldr	r3, [sp, #12]
 8020562:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8020566:	9b04      	ldr	r3, [sp, #16]
 8020568:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 802056c:	9b05      	ldr	r3, [sp, #20]
 802056e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8020572:	a90e      	add	r1, sp, #56	; 0x38
 8020574:	9b06      	ldr	r3, [sp, #24]
 8020576:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 802057a:	a80c      	add	r0, sp, #48	; 0x30
 802057c:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8020580:	f7f8 f906 	bl	8018790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020584:	4640      	mov	r0, r8
 8020586:	f7f8 f8bf 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802058a:	a80e      	add	r0, sp, #56	; 0x38
 802058c:	f7f8 f8bc 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020590:	4b38      	ldr	r3, [pc, #224]	; (8020674 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8020592:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 8020596:	881b      	ldrh	r3, [r3, #0]
 8020598:	9307      	str	r3, [sp, #28]
 802059a:	682b      	ldr	r3, [r5, #0]
 802059c:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8020678 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80205a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80205a2:	4628      	mov	r0, r5
 80205a4:	4798      	blx	r3
 80205a6:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 80205aa:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80205ae:	4681      	mov	r9, r0
 80205b0:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80205b4:	f8db 0000 	ldr.w	r0, [fp]
 80205b8:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80205ba:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80205be:	6803      	ldr	r3, [r0, #0]
 80205c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80205c2:	4798      	blx	r3
 80205c4:	4607      	mov	r7, r0
 80205c6:	f8db 0000 	ldr.w	r0, [fp]
 80205ca:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80205ce:	6803      	ldr	r3, [r0, #0]
 80205d0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80205d4:	9109      	str	r1, [sp, #36]	; 0x24
 80205d6:	9208      	str	r2, [sp, #32]
 80205d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80205da:	4798      	blx	r3
 80205dc:	f010 0f01 	tst.w	r0, #1
 80205e0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80205e4:	d012      	beq.n	802060c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 80205e6:	f8db 0000 	ldr.w	r0, [fp]
 80205ea:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 80205ee:	6803      	ldr	r3, [r0, #0]
 80205f0:	9200      	str	r2, [sp, #0]
 80205f2:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80205f4:	e898 0006 	ldmia.w	r8, {r1, r2}
 80205f8:	462b      	mov	r3, r5
 80205fa:	47b0      	blx	r6
 80205fc:	9b03      	ldr	r3, [sp, #12]
 80205fe:	8023      	strh	r3, [r4, #0]
 8020600:	9b04      	ldr	r3, [sp, #16]
 8020602:	8063      	strh	r3, [r4, #2]
 8020604:	9b05      	ldr	r3, [sp, #20]
 8020606:	80a3      	strh	r3, [r4, #4]
 8020608:	9b06      	ldr	r3, [sp, #24]
 802060a:	e78b      	b.n	8020524 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 802060c:	fb09 f202 	mul.w	r2, r9, r2
 8020610:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8020614:	440f      	add	r7, r1
 8020616:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 802061a:	b166      	cbz	r6, 8020636 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 802061c:	9a07      	ldr	r2, [sp, #28]
 802061e:	4592      	cmp	sl, r2
 8020620:	d109      	bne.n	8020636 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8020622:	f8db 0000 	ldr.w	r0, [fp]
 8020626:	6802      	ldr	r2, [r0, #0]
 8020628:	fb09 f303 	mul.w	r3, r9, r3
 802062c:	6b56      	ldr	r6, [r2, #52]	; 0x34
 802062e:	4629      	mov	r1, r5
 8020630:	463a      	mov	r2, r7
 8020632:	47b0      	blx	r6
 8020634:	e7e2      	b.n	80205fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8020636:	fb0a f303 	mul.w	r3, sl, r3
 802063a:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8020678 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 802063e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8020642:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8020646:	4545      	cmp	r5, r8
 8020648:	d2d8      	bcs.n	80205fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 802064a:	f8db 0000 	ldr.w	r0, [fp]
 802064e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8020652:	6802      	ldr	r2, [r0, #0]
 8020654:	4629      	mov	r1, r5
 8020656:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 802065a:	005b      	lsls	r3, r3, #1
 802065c:	463a      	mov	r2, r7
 802065e:	47d0      	blx	sl
 8020660:	444f      	add	r7, r9
 8020662:	4435      	add	r5, r6
 8020664:	e7ef      	b.n	8020646 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8020666:	bf00      	nop
 8020668:	20013840 	.word	0x20013840
 802066c:	20013842 	.word	0x20013842
 8020670:	20013844 	.word	0x20013844
 8020674:	20013846 	.word	0x20013846
 8020678:	2001384c 	.word	0x2001384c

0802067c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 802067c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802067e:	4606      	mov	r6, r0
 8020680:	b087      	sub	sp, #28
 8020682:	460c      	mov	r4, r1
 8020684:	4617      	mov	r7, r2
 8020686:	461d      	mov	r5, r3
 8020688:	b333      	cbz	r3, 80206d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 802068a:	4608      	mov	r0, r1
 802068c:	f7f2 fae1 	bl	8012c52 <_ZNK8touchgfx4Rect7isEmptyEv>
 8020690:	bb10      	cbnz	r0, 80206d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8020692:	6820      	ldr	r0, [r4, #0]
 8020694:	6861      	ldr	r1, [r4, #4]
 8020696:	4c1c      	ldr	r4, [pc, #112]	; (8020708 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8020698:	ab04      	add	r3, sp, #16
 802069a:	c303      	stmia	r3!, {r0, r1}
 802069c:	a804      	add	r0, sp, #16
 802069e:	f7f8 f833 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80206a2:	6820      	ldr	r0, [r4, #0]
 80206a4:	6803      	ldr	r3, [r0, #0]
 80206a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80206a8:	4798      	blx	r3
 80206aa:	2dff      	cmp	r5, #255	; 0xff
 80206ac:	d016      	beq.n	80206dc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80206ae:	f010 0f08 	tst.w	r0, #8
 80206b2:	6820      	ldr	r0, [r4, #0]
 80206b4:	d015      	beq.n	80206e2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80206b6:	2400      	movs	r4, #0
 80206b8:	6801      	ldr	r1, [r0, #0]
 80206ba:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80206be:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80206c2:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80206c6:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80206ca:	9401      	str	r4, [sp, #4]
 80206cc:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80206d0:	9400      	str	r4, [sp, #0]
 80206d2:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 80206d4:	4639      	mov	r1, r7
 80206d6:	47a0      	blx	r4
 80206d8:	b007      	add	sp, #28
 80206da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80206dc:	f010 0f02 	tst.w	r0, #2
 80206e0:	e7e7      	b.n	80206b2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80206e2:	6803      	ldr	r3, [r0, #0]
 80206e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80206e6:	4798      	blx	r3
 80206e8:	4b08      	ldr	r3, [pc, #32]	; (802070c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80206ea:	881a      	ldrh	r2, [r3, #0]
 80206ec:	6833      	ldr	r3, [r6, #0]
 80206ee:	e9cd 7500 	strd	r7, r5, [sp]
 80206f2:	4601      	mov	r1, r0
 80206f4:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80206f6:	4630      	mov	r0, r6
 80206f8:	ab04      	add	r3, sp, #16
 80206fa:	47a8      	blx	r5
 80206fc:	6820      	ldr	r0, [r4, #0]
 80206fe:	6803      	ldr	r3, [r0, #0]
 8020700:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020702:	4798      	blx	r3
 8020704:	e7e8      	b.n	80206d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8020706:	bf00      	nop
 8020708:	2001384c 	.word	0x2001384c
 802070c:	20013846 	.word	0x20013846

08020710 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8020710:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020714:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8020718:	9e08      	ldr	r6, [sp, #32]
 802071a:	4688      	mov	r8, r1
 802071c:	4614      	mov	r4, r2
 802071e:	461d      	mov	r5, r3
 8020720:	2f00      	cmp	r7, #0
 8020722:	f000 80a9 	beq.w	8020878 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020726:	4618      	mov	r0, r3
 8020728:	f7f2 fa93 	bl	8012c52 <_ZNK8touchgfx4Rect7isEmptyEv>
 802072c:	2800      	cmp	r0, #0
 802072e:	f040 80a3 	bne.w	8020878 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020732:	f9b5 1000 	ldrsh.w	r1, [r5]
 8020736:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 802073a:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 802073e:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8020742:	fb04 1303 	mla	r3, r4, r3, r1
 8020746:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 802074a:	4365      	muls	r5, r4
 802074c:	2fff      	cmp	r7, #255	; 0xff
 802074e:	eba4 0200 	sub.w	r2, r4, r0
 8020752:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8020756:	ea4f 2816 	mov.w	r8, r6, lsr #8
 802075a:	d04a      	beq.n	80207f2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 802075c:	b2bc      	uxth	r4, r7
 802075e:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8020762:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8020766:	fa5f f788 	uxtb.w	r7, r8
 802076a:	b2f3      	uxtb	r3, r6
 802076c:	0040      	lsls	r0, r0, #1
 802076e:	fb0e fe04 	mul.w	lr, lr, r4
 8020772:	4367      	muls	r7, r4
 8020774:	4363      	muls	r3, r4
 8020776:	ea4f 0842 	mov.w	r8, r2, lsl #1
 802077a:	fa1f fc8c 	uxth.w	ip, ip
 802077e:	42a9      	cmp	r1, r5
 8020780:	d27a      	bcs.n	8020878 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020782:	eb01 0900 	add.w	r9, r1, r0
 8020786:	4549      	cmp	r1, r9
 8020788:	d231      	bcs.n	80207ee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 802078a:	880a      	ldrh	r2, [r1, #0]
 802078c:	1214      	asrs	r4, r2, #8
 802078e:	10d6      	asrs	r6, r2, #3
 8020790:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8020794:	00d2      	lsls	r2, r2, #3
 8020796:	b2d2      	uxtb	r2, r2
 8020798:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802079c:	fb14 f40c 	smulbb	r4, r4, ip
 80207a0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80207a4:	4474      	add	r4, lr
 80207a6:	fb12 f20c 	smulbb	r2, r2, ip
 80207aa:	b2a4      	uxth	r4, r4
 80207ac:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80207b0:	441a      	add	r2, r3
 80207b2:	b292      	uxth	r2, r2
 80207b4:	f104 0a01 	add.w	sl, r4, #1
 80207b8:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80207bc:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80207c0:	fb16 f60c 	smulbb	r6, r6, ip
 80207c4:	f102 0a01 	add.w	sl, r2, #1
 80207c8:	443e      	add	r6, r7
 80207ca:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 80207ce:	b2b6      	uxth	r6, r6
 80207d0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80207d4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80207d8:	4322      	orrs	r2, r4
 80207da:	1c74      	adds	r4, r6, #1
 80207dc:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80207e0:	0976      	lsrs	r6, r6, #5
 80207e2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80207e6:	4332      	orrs	r2, r6
 80207e8:	f821 2b02 	strh.w	r2, [r1], #2
 80207ec:	e7cb      	b.n	8020786 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 80207ee:	4441      	add	r1, r8
 80207f0:	e7c5      	b.n	802077e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 80207f2:	4f22      	ldr	r7, [pc, #136]	; (802087c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 80207f4:	0973      	lsrs	r3, r6, #5
 80207f6:	ea08 0707 	and.w	r7, r8, r7
 80207fa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80207fe:	433b      	orrs	r3, r7
 8020800:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8020804:	4333      	orrs	r3, r6
 8020806:	07e7      	lsls	r7, r4, #31
 8020808:	b29b      	uxth	r3, r3
 802080a:	d50b      	bpl.n	8020824 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 802080c:	0040      	lsls	r0, r0, #1
 802080e:	0052      	lsls	r2, r2, #1
 8020810:	42a9      	cmp	r1, r5
 8020812:	d231      	bcs.n	8020878 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020814:	180c      	adds	r4, r1, r0
 8020816:	42a1      	cmp	r1, r4
 8020818:	d202      	bcs.n	8020820 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 802081a:	f821 3b02 	strh.w	r3, [r1], #2
 802081e:	e7fa      	b.n	8020816 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8020820:	4411      	add	r1, r2
 8020822:	e7f5      	b.n	8020810 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8020824:	078e      	lsls	r6, r1, #30
 8020826:	d008      	beq.n	802083a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8020828:	0066      	lsls	r6, r4, #1
 802082a:	460a      	mov	r2, r1
 802082c:	42aa      	cmp	r2, r5
 802082e:	d202      	bcs.n	8020836 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8020830:	8013      	strh	r3, [r2, #0]
 8020832:	4432      	add	r2, r6
 8020834:	e7fa      	b.n	802082c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8020836:	3102      	adds	r1, #2
 8020838:	3801      	subs	r0, #1
 802083a:	07c2      	lsls	r2, r0, #31
 802083c:	d50b      	bpl.n	8020856 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 802083e:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8020842:	3a01      	subs	r2, #1
 8020844:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8020848:	0066      	lsls	r6, r4, #1
 802084a:	42aa      	cmp	r2, r5
 802084c:	d202      	bcs.n	8020854 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 802084e:	8013      	strh	r3, [r2, #0]
 8020850:	4432      	add	r2, r6
 8020852:	e7fa      	b.n	802084a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8020854:	3801      	subs	r0, #1
 8020856:	b178      	cbz	r0, 8020878 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020858:	1040      	asrs	r0, r0, #1
 802085a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 802085e:	0080      	lsls	r0, r0, #2
 8020860:	0064      	lsls	r4, r4, #1
 8020862:	42a9      	cmp	r1, r5
 8020864:	d208      	bcs.n	8020878 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020866:	180e      	adds	r6, r1, r0
 8020868:	460a      	mov	r2, r1
 802086a:	42b2      	cmp	r2, r6
 802086c:	d202      	bcs.n	8020874 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 802086e:	f842 3b04 	str.w	r3, [r2], #4
 8020872:	e7fa      	b.n	802086a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8020874:	4421      	add	r1, r4
 8020876:	e7f4      	b.n	8020862 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8020878:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802087c:	00fff800 	.word	0x00fff800

08020880 <_ZN8touchgfx8LCD16bppC1Ev>:
 8020880:	2200      	movs	r2, #0
 8020882:	4912      	ldr	r1, [pc, #72]	; (80208cc <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8020884:	6042      	str	r2, [r0, #4]
 8020886:	6001      	str	r1, [r0, #0]
 8020888:	e9c0 2202 	strd	r2, r2, [r0, #8]
 802088c:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8020890:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8020894:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8020898:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 802089c:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 80208a0:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80208a4:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80208a8:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80208ac:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80208b0:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80208b4:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80208b8:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80208bc:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80208c0:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 80208c4:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 80208c8:	4770      	bx	lr
 80208ca:	bf00      	nop
 80208cc:	08032338 	.word	0x08032338

080208d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80208d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80208d4:	460d      	mov	r5, r1
 80208d6:	b08d      	sub	sp, #52	; 0x34
 80208d8:	4604      	mov	r4, r0
 80208da:	6808      	ldr	r0, [r1, #0]
 80208dc:	6849      	ldr	r1, [r1, #4]
 80208de:	4699      	mov	r9, r3
 80208e0:	ab08      	add	r3, sp, #32
 80208e2:	c303      	stmia	r3!, {r0, r1}
 80208e4:	6810      	ldr	r0, [r2, #0]
 80208e6:	6851      	ldr	r1, [r2, #4]
 80208e8:	ab0a      	add	r3, sp, #40	; 0x28
 80208ea:	c303      	stmia	r3!, {r0, r1}
 80208ec:	a808      	add	r0, sp, #32
 80208ee:	f7f7 ff0b 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80208f2:	4629      	mov	r1, r5
 80208f4:	a80a      	add	r0, sp, #40	; 0x28
 80208f6:	f7f7 ff4b 	bl	8018790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80208fa:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80208fe:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8020902:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8020906:	4d63      	ldr	r5, [pc, #396]	; (8020a94 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8020908:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 802090c:	6828      	ldr	r0, [r5, #0]
 802090e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8020912:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020916:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802091a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 802091e:	440a      	add	r2, r1
 8020920:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8020924:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8020928:	4413      	add	r3, r2
 802092a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 802092e:	6803      	ldr	r3, [r0, #0]
 8020930:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020932:	4798      	blx	r3
 8020934:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020938:	d119      	bne.n	802096e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 802093a:	f010 0f20 	tst.w	r0, #32
 802093e:	6828      	ldr	r0, [r5, #0]
 8020940:	d018      	beq.n	8020974 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8020942:	2500      	movs	r5, #0
 8020944:	6801      	ldr	r1, [r0, #0]
 8020946:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802094a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 802094e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8020952:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8020956:	9502      	str	r5, [sp, #8]
 8020958:	b2b6      	uxth	r6, r6
 802095a:	fa1f f588 	uxth.w	r5, r8
 802095e:	9601      	str	r6, [sp, #4]
 8020960:	9500      	str	r5, [sp, #0]
 8020962:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8020964:	4621      	mov	r1, r4
 8020966:	47a8      	blx	r5
 8020968:	b00d      	add	sp, #52	; 0x34
 802096a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802096e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8020972:	e7e4      	b.n	802093e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8020974:	6803      	ldr	r3, [r0, #0]
 8020976:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020978:	4798      	blx	r3
 802097a:	4947      	ldr	r1, [pc, #284]	; (8020a98 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 802097c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8020980:	880b      	ldrh	r3, [r1, #0]
 8020982:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8020986:	fb03 5202 	mla	r2, r3, r2, r5
 802098a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 802098e:	4373      	muls	r3, r6
 8020990:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8020994:	9307      	str	r3, [sp, #28]
 8020996:	ea4f 0348 	mov.w	r3, r8, lsl #1
 802099a:	9306      	str	r3, [sp, #24]
 802099c:	468a      	mov	sl, r1
 802099e:	9b07      	ldr	r3, [sp, #28]
 80209a0:	4298      	cmp	r0, r3
 80209a2:	d270      	bcs.n	8020a86 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 80209a4:	9b06      	ldr	r3, [sp, #24]
 80209a6:	4621      	mov	r1, r4
 80209a8:	eb00 0b03 	add.w	fp, r0, r3
 80209ac:	4558      	cmp	r0, fp
 80209ae:	d25d      	bcs.n	8020a6c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 80209b0:	f851 4b04 	ldr.w	r4, [r1], #4
 80209b4:	0e23      	lsrs	r3, r4, #24
 80209b6:	d014      	beq.n	80209e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80209b8:	2bff      	cmp	r3, #255	; 0xff
 80209ba:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 80209be:	d112      	bne.n	80209e6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80209c0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80209c4:	d10f      	bne.n	80209e6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80209c6:	0963      	lsrs	r3, r4, #5
 80209c8:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80209cc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80209d0:	f02c 0c07 	bic.w	ip, ip, #7
 80209d4:	ea43 0c0c 	orr.w	ip, r3, ip
 80209d8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80209dc:	ea4c 0404 	orr.w	r4, ip, r4
 80209e0:	8004      	strh	r4, [r0, #0]
 80209e2:	3002      	adds	r0, #2
 80209e4:	e7e2      	b.n	80209ac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 80209e6:	fb09 f303 	mul.w	r3, r9, r3
 80209ea:	8807      	ldrh	r7, [r0, #0]
 80209ec:	1c5a      	adds	r2, r3, #1
 80209ee:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80209f2:	1212      	asrs	r2, r2, #8
 80209f4:	123e      	asrs	r6, r7, #8
 80209f6:	b293      	uxth	r3, r2
 80209f8:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 80209fc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020a00:	43d2      	mvns	r2, r2
 8020a02:	b2d2      	uxtb	r2, r2
 8020a04:	10fd      	asrs	r5, r7, #3
 8020a06:	fb1e fe03 	smulbb	lr, lr, r3
 8020a0a:	00ff      	lsls	r7, r7, #3
 8020a0c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8020a10:	fb06 e602 	mla	r6, r6, r2, lr
 8020a14:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020a18:	b2ff      	uxtb	r7, r7
 8020a1a:	fa5f fc8c 	uxtb.w	ip, ip
 8020a1e:	b2e4      	uxtb	r4, r4
 8020a20:	b2b6      	uxth	r6, r6
 8020a22:	fb1c fc03 	smulbb	ip, ip, r3
 8020a26:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8020a2a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8020a2e:	fb14 f403 	smulbb	r4, r4, r3
 8020a32:	fb05 c502 	mla	r5, r5, r2, ip
 8020a36:	f106 0e01 	add.w	lr, r6, #1
 8020a3a:	fb07 4702 	mla	r7, r7, r2, r4
 8020a3e:	b2ad      	uxth	r5, r5
 8020a40:	b2bf      	uxth	r7, r7
 8020a42:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8020a46:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8020a4a:	f105 0c01 	add.w	ip, r5, #1
 8020a4e:	1c7e      	adds	r6, r7, #1
 8020a50:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8020a54:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020a58:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8020a5c:	096d      	lsrs	r5, r5, #5
 8020a5e:	ea46 060e 	orr.w	r6, r6, lr
 8020a62:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020a66:	432e      	orrs	r6, r5
 8020a68:	8006      	strh	r6, [r0, #0]
 8020a6a:	e7ba      	b.n	80209e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8020a6c:	f8ba 3000 	ldrh.w	r3, [sl]
 8020a70:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8020a74:	eba3 0308 	sub.w	r3, r3, r8
 8020a78:	eba4 0408 	sub.w	r4, r4, r8
 8020a7c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020a80:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8020a84:	e78b      	b.n	802099e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8020a86:	4b03      	ldr	r3, [pc, #12]	; (8020a94 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8020a88:	6818      	ldr	r0, [r3, #0]
 8020a8a:	6803      	ldr	r3, [r0, #0]
 8020a8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020a8e:	4798      	blx	r3
 8020a90:	e76a      	b.n	8020968 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8020a92:	bf00      	nop
 8020a94:	2001384c 	.word	0x2001384c
 8020a98:	20013846 	.word	0x20013846

08020a9c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8020a9c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8020aa0:	460c      	mov	r4, r1
 8020aa2:	b085      	sub	sp, #20
 8020aa4:	6810      	ldr	r0, [r2, #0]
 8020aa6:	6851      	ldr	r1, [r2, #4]
 8020aa8:	466d      	mov	r5, sp
 8020aaa:	c503      	stmia	r5!, {r0, r1}
 8020aac:	6818      	ldr	r0, [r3, #0]
 8020aae:	6859      	ldr	r1, [r3, #4]
 8020ab0:	4616      	mov	r6, r2
 8020ab2:	c503      	stmia	r5!, {r0, r1}
 8020ab4:	4668      	mov	r0, sp
 8020ab6:	f7f7 fe27 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020aba:	4631      	mov	r1, r6
 8020abc:	a802      	add	r0, sp, #8
 8020abe:	f7f7 fe67 	bl	8018790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020ac2:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8020ac6:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8020aca:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8020ace:	4d28      	ldr	r5, [pc, #160]	; (8020b70 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8020ad0:	4e28      	ldr	r6, [pc, #160]	; (8020b74 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8020ad2:	6828      	ldr	r0, [r5, #0]
 8020ad4:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8020ad8:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8020adc:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020ae0:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8020ae4:	f8bd 1000 	ldrh.w	r1, [sp]
 8020ae8:	440a      	add	r2, r1
 8020aea:	f8ad 2008 	strh.w	r2, [sp, #8]
 8020aee:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8020af2:	4413      	add	r3, r2
 8020af4:	f8ad 300a 	strh.w	r3, [sp, #10]
 8020af8:	6803      	ldr	r3, [r0, #0]
 8020afa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020afc:	4798      	blx	r3
 8020afe:	8833      	ldrh	r3, [r6, #0]
 8020b00:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8020b04:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8020b08:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8020b78 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8020b0c:	fb03 1202 	mla	r2, r3, r2, r1
 8020b10:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020b14:	fb08 f303 	mul.w	r3, r8, r3
 8020b18:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8020b1c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8020b20:	4298      	cmp	r0, r3
 8020b22:	d21d      	bcs.n	8020b60 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8020b24:	eb00 080c 	add.w	r8, r0, ip
 8020b28:	4540      	cmp	r0, r8
 8020b2a:	d20f      	bcs.n	8020b4c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8020b2c:	f854 1b04 	ldr.w	r1, [r4], #4
 8020b30:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8020b34:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8020b38:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020b3c:	ea42 0209 	orr.w	r2, r2, r9
 8020b40:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8020b44:	430a      	orrs	r2, r1
 8020b46:	f820 2b02 	strh.w	r2, [r0], #2
 8020b4a:	e7ed      	b.n	8020b28 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8020b4c:	8832      	ldrh	r2, [r6, #0]
 8020b4e:	1bd2      	subs	r2, r2, r7
 8020b50:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020b54:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8020b58:	1bd2      	subs	r2, r2, r7
 8020b5a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8020b5e:	e7df      	b.n	8020b20 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8020b60:	6828      	ldr	r0, [r5, #0]
 8020b62:	6803      	ldr	r3, [r0, #0]
 8020b64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020b66:	4798      	blx	r3
 8020b68:	b005      	add	sp, #20
 8020b6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8020b6e:	bf00      	nop
 8020b70:	2001384c 	.word	0x2001384c
 8020b74:	20013846 	.word	0x20013846
 8020b78:	fffff800 	.word	0xfffff800

08020b7c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8020b7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020b80:	460e      	mov	r6, r1
 8020b82:	b08e      	sub	sp, #56	; 0x38
 8020b84:	4604      	mov	r4, r0
 8020b86:	6808      	ldr	r0, [r1, #0]
 8020b88:	6849      	ldr	r1, [r1, #4]
 8020b8a:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8020d64 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8020b8e:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8020d68 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8020b92:	461d      	mov	r5, r3
 8020b94:	ab0a      	add	r3, sp, #40	; 0x28
 8020b96:	c303      	stmia	r3!, {r0, r1}
 8020b98:	6810      	ldr	r0, [r2, #0]
 8020b9a:	6851      	ldr	r1, [r2, #4]
 8020b9c:	ab0c      	add	r3, sp, #48	; 0x30
 8020b9e:	c303      	stmia	r3!, {r0, r1}
 8020ba0:	a80a      	add	r0, sp, #40	; 0x28
 8020ba2:	f7f7 fdb1 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020ba6:	4631      	mov	r1, r6
 8020ba8:	a80c      	add	r0, sp, #48	; 0x30
 8020baa:	f7f7 fdf1 	bl	8018790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020bae:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8020bb2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8020bb6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8020bba:	f8d8 0000 	ldr.w	r0, [r8]
 8020bbe:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8020bc2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8020bc6:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020bca:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020bce:	440c      	add	r4, r1
 8020bd0:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8020bd4:	440a      	add	r2, r1
 8020bd6:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8020bda:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8020bde:	4413      	add	r3, r2
 8020be0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8020be4:	6803      	ldr	r3, [r0, #0]
 8020be6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020be8:	4798      	blx	r3
 8020bea:	2dff      	cmp	r5, #255	; 0xff
 8020bec:	d124      	bne.n	8020c38 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8020bee:	f010 0f01 	tst.w	r0, #1
 8020bf2:	f8d8 0000 	ldr.w	r0, [r8]
 8020bf6:	d022      	beq.n	8020c3e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8020bf8:	2100      	movs	r1, #0
 8020bfa:	f8d0 c000 	ldr.w	ip, [r0]
 8020bfe:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8020c02:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8020c06:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8020c0a:	f04f 0e01 	mov.w	lr, #1
 8020c0e:	f8cd e018 	str.w	lr, [sp, #24]
 8020c12:	f8b9 e000 	ldrh.w	lr, [r9]
 8020c16:	9503      	str	r5, [sp, #12]
 8020c18:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8020c1c:	b2b6      	uxth	r6, r6
 8020c1e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8020c22:	9102      	str	r1, [sp, #8]
 8020c24:	b2bf      	uxth	r7, r7
 8020c26:	9601      	str	r6, [sp, #4]
 8020c28:	9700      	str	r7, [sp, #0]
 8020c2a:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8020c2e:	4621      	mov	r1, r4
 8020c30:	47a8      	blx	r5
 8020c32:	b00e      	add	sp, #56	; 0x38
 8020c34:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020c38:	f010 0f04 	tst.w	r0, #4
 8020c3c:	e7d9      	b.n	8020bf2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8020c3e:	6803      	ldr	r3, [r0, #0]
 8020c40:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020c42:	4798      	blx	r3
 8020c44:	f8b9 3000 	ldrh.w	r3, [r9]
 8020c48:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8020c4c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8020c50:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8020c54:	fb03 1202 	mla	r2, r3, r2, r1
 8020c58:	ebac 0c07 	sub.w	ip, ip, r7
 8020c5c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020c60:	435e      	muls	r6, r3
 8020c62:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8020c66:	2dff      	cmp	r5, #255	; 0xff
 8020c68:	eba3 0707 	sub.w	r7, r3, r7
 8020c6c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8020c70:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8020c74:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8020c78:	d049      	beq.n	8020d0e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8020c7a:	43eb      	mvns	r3, r5
 8020c7c:	fa1f f985 	uxth.w	r9, r5
 8020c80:	b2db      	uxtb	r3, r3
 8020c82:	42b0      	cmp	r0, r6
 8020c84:	d266      	bcs.n	8020d54 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8020c86:	eb00 0a0e 	add.w	sl, r0, lr
 8020c8a:	4550      	cmp	r0, sl
 8020c8c:	4621      	mov	r1, r4
 8020c8e:	f104 0403 	add.w	r4, r4, #3
 8020c92:	d25b      	bcs.n	8020d4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8020c94:	8802      	ldrh	r2, [r0, #0]
 8020c96:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8020c9a:	ea4f 2822 	mov.w	r8, r2, asr #8
 8020c9e:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8020ca2:	fb11 f109 	smulbb	r1, r1, r9
 8020ca6:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8020caa:	10d5      	asrs	r5, r2, #3
 8020cac:	fb08 1803 	mla	r8, r8, r3, r1
 8020cb0:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8020cb4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020cb8:	fb11 f109 	smulbb	r1, r1, r9
 8020cbc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8020cc0:	fb05 1503 	mla	r5, r5, r3, r1
 8020cc4:	00d2      	lsls	r2, r2, #3
 8020cc6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8020cca:	b2d2      	uxtb	r2, r2
 8020ccc:	fb11 f109 	smulbb	r1, r1, r9
 8020cd0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020cd4:	fa1f f888 	uxth.w	r8, r8
 8020cd8:	fb02 1203 	mla	r2, r2, r3, r1
 8020cdc:	b292      	uxth	r2, r2
 8020cde:	f108 0101 	add.w	r1, r8, #1
 8020ce2:	b2ad      	uxth	r5, r5
 8020ce4:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8020ce8:	1c51      	adds	r1, r2, #1
 8020cea:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020cee:	1c69      	adds	r1, r5, #1
 8020cf0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8020cf4:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8020cf8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020cfc:	096d      	lsrs	r5, r5, #5
 8020cfe:	ea42 0208 	orr.w	r2, r2, r8
 8020d02:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020d06:	432a      	orrs	r2, r5
 8020d08:	f820 2b02 	strh.w	r2, [r0], #2
 8020d0c:	e7bd      	b.n	8020c8a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8020d0e:	4a14      	ldr	r2, [pc, #80]	; (8020d60 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8020d10:	42b0      	cmp	r0, r6
 8020d12:	d21f      	bcs.n	8020d54 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8020d14:	eb00 050e 	add.w	r5, r0, lr
 8020d18:	42a8      	cmp	r0, r5
 8020d1a:	4621      	mov	r1, r4
 8020d1c:	f104 0403 	add.w	r4, r4, #3
 8020d20:	d210      	bcs.n	8020d44 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8020d22:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8020d26:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8020d2a:	00db      	lsls	r3, r3, #3
 8020d2c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8020d30:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020d34:	430b      	orrs	r3, r1
 8020d36:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8020d3a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8020d3e:	f820 3b02 	strh.w	r3, [r0], #2
 8020d42:	e7e9      	b.n	8020d18 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8020d44:	4438      	add	r0, r7
 8020d46:	eb01 040c 	add.w	r4, r1, ip
 8020d4a:	e7e1      	b.n	8020d10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8020d4c:	4438      	add	r0, r7
 8020d4e:	eb01 040c 	add.w	r4, r1, ip
 8020d52:	e796      	b.n	8020c82 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8020d54:	4b03      	ldr	r3, [pc, #12]	; (8020d64 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8020d56:	6818      	ldr	r0, [r3, #0]
 8020d58:	6803      	ldr	r3, [r0, #0]
 8020d5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020d5c:	4798      	blx	r3
 8020d5e:	e768      	b.n	8020c32 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8020d60:	fffff800 	.word	0xfffff800
 8020d64:	2001384c 	.word	0x2001384c
 8020d68:	20013846 	.word	0x20013846

08020d6c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8020d6c:	b4f0      	push	{r4, r5, r6, r7}
 8020d6e:	4616      	mov	r6, r2
 8020d70:	2e01      	cmp	r6, #1
 8020d72:	461c      	mov	r4, r3
 8020d74:	460d      	mov	r5, r1
 8020d76:	9a04      	ldr	r2, [sp, #16]
 8020d78:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8020d7c:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8020d80:	d012      	beq.n	8020da8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8020d82:	d303      	bcc.n	8020d8c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8020d84:	2e02      	cmp	r6, #2
 8020d86:	d00a      	beq.n	8020d9e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8020d88:	bcf0      	pop	{r4, r5, r6, r7}
 8020d8a:	4770      	bx	lr
 8020d8c:	6805      	ldr	r5, [r0, #0]
 8020d8e:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8020d92:	68ed      	ldr	r5, [r5, #12]
 8020d94:	4613      	mov	r3, r2
 8020d96:	46ac      	mov	ip, r5
 8020d98:	4622      	mov	r2, r4
 8020d9a:	bcf0      	pop	{r4, r5, r6, r7}
 8020d9c:	4760      	bx	ip
 8020d9e:	4621      	mov	r1, r4
 8020da0:	4628      	mov	r0, r5
 8020da2:	bcf0      	pop	{r4, r5, r6, r7}
 8020da4:	f7ff bd94 	b.w	80208d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8020da8:	4621      	mov	r1, r4
 8020daa:	4628      	mov	r0, r5
 8020dac:	bcf0      	pop	{r4, r5, r6, r7}
 8020dae:	f7ff bee5 	b.w	8020b7c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08020db4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8020db4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020db8:	4681      	mov	r9, r0
 8020dba:	b093      	sub	sp, #76	; 0x4c
 8020dbc:	6810      	ldr	r0, [r2, #0]
 8020dbe:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8020dc2:	4f6d      	ldr	r7, [pc, #436]	; (8020f78 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8020dc4:	4688      	mov	r8, r1
 8020dc6:	6851      	ldr	r1, [r2, #4]
 8020dc8:	ac0e      	add	r4, sp, #56	; 0x38
 8020dca:	c403      	stmia	r4!, {r0, r1}
 8020dcc:	6818      	ldr	r0, [r3, #0]
 8020dce:	6859      	ldr	r1, [r3, #4]
 8020dd0:	ac10      	add	r4, sp, #64	; 0x40
 8020dd2:	4616      	mov	r6, r2
 8020dd4:	c403      	stmia	r4!, {r0, r1}
 8020dd6:	a80e      	add	r0, sp, #56	; 0x38
 8020dd8:	f7f7 fc96 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020ddc:	4631      	mov	r1, r6
 8020dde:	a810      	add	r0, sp, #64	; 0x40
 8020de0:	f7f7 fcd6 	bl	8018790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020de4:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8020de8:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8020dec:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8020df0:	4e62      	ldr	r6, [pc, #392]	; (8020f7c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8020df2:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8020df6:	6830      	ldr	r0, [r6, #0]
 8020df8:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8020dfc:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020e00:	4489      	add	r9, r1
 8020e02:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8020e06:	440a      	add	r2, r1
 8020e08:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8020e0c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8020e10:	4413      	add	r3, r2
 8020e12:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8020e16:	6803      	ldr	r3, [r0, #0]
 8020e18:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020e1a:	4798      	blx	r3
 8020e1c:	f010 0f80 	tst.w	r0, #128	; 0x80
 8020e20:	6830      	ldr	r0, [r6, #0]
 8020e22:	d01d      	beq.n	8020e60 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8020e24:	2200      	movs	r2, #0
 8020e26:	6801      	ldr	r1, [r0, #0]
 8020e28:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8020e2c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8020e30:	220b      	movs	r2, #11
 8020e32:	9207      	str	r2, [sp, #28]
 8020e34:	883a      	ldrh	r2, [r7, #0]
 8020e36:	9206      	str	r2, [sp, #24]
 8020e38:	2201      	movs	r2, #1
 8020e3a:	e9cd a204 	strd	sl, r2, [sp, #16]
 8020e3e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8020e42:	9203      	str	r2, [sp, #12]
 8020e44:	b2a4      	uxth	r4, r4
 8020e46:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8020e4a:	9200      	str	r2, [sp, #0]
 8020e4c:	b2ad      	uxth	r5, r5
 8020e4e:	9502      	str	r5, [sp, #8]
 8020e50:	9401      	str	r4, [sp, #4]
 8020e52:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8020e54:	4642      	mov	r2, r8
 8020e56:	4649      	mov	r1, r9
 8020e58:	47a0      	blx	r4
 8020e5a:	b013      	add	sp, #76	; 0x4c
 8020e5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020e60:	6803      	ldr	r3, [r0, #0]
 8020e62:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020e64:	4798      	blx	r3
 8020e66:	883b      	ldrh	r3, [r7, #0]
 8020e68:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8020e6c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8020e70:	fb03 1202 	mla	r2, r3, r2, r1
 8020e74:	435d      	muls	r5, r3
 8020e76:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020e7a:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8020e7e:	920c      	str	r2, [sp, #48]	; 0x30
 8020e80:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8020e84:	1b12      	subs	r2, r2, r4
 8020e86:	920d      	str	r2, [sp, #52]	; 0x34
 8020e88:	0062      	lsls	r2, r4, #1
 8020e8a:	1b1c      	subs	r4, r3, r4
 8020e8c:	0063      	lsls	r3, r4, #1
 8020e8e:	920a      	str	r2, [sp, #40]	; 0x28
 8020e90:	930b      	str	r3, [sp, #44]	; 0x2c
 8020e92:	f04f 0e04 	mov.w	lr, #4
 8020e96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020e98:	4298      	cmp	r0, r3
 8020e9a:	d266      	bcs.n	8020f6a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8020e9c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020e9e:	eb00 0b03 	add.w	fp, r0, r3
 8020ea2:	4558      	cmp	r0, fp
 8020ea4:	d25c      	bcs.n	8020f60 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8020ea6:	f819 3b01 	ldrb.w	r3, [r9], #1
 8020eaa:	fb1e e303 	smlabb	r3, lr, r3, lr
 8020eae:	f858 2003 	ldr.w	r2, [r8, r3]
 8020eb2:	0e11      	lsrs	r1, r2, #24
 8020eb4:	d012      	beq.n	8020edc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8020eb6:	29ff      	cmp	r1, #255	; 0xff
 8020eb8:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8020ebc:	d110      	bne.n	8020ee0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8020ebe:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8020ec2:	d10d      	bne.n	8020ee0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8020ec4:	0953      	lsrs	r3, r2, #5
 8020ec6:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8020eca:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020ece:	f027 0707 	bic.w	r7, r7, #7
 8020ed2:	431f      	orrs	r7, r3
 8020ed4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020ed8:	433a      	orrs	r2, r7
 8020eda:	8002      	strh	r2, [r0, #0]
 8020edc:	3002      	adds	r0, #2
 8020ede:	e7e0      	b.n	8020ea2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8020ee0:	fb0a f101 	mul.w	r1, sl, r1
 8020ee4:	8806      	ldrh	r6, [r0, #0]
 8020ee6:	1c4b      	adds	r3, r1, #1
 8020ee8:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8020eec:	1235      	asrs	r5, r6, #8
 8020eee:	10f4      	asrs	r4, r6, #3
 8020ef0:	121b      	asrs	r3, r3, #8
 8020ef2:	00f6      	lsls	r6, r6, #3
 8020ef4:	b299      	uxth	r1, r3
 8020ef6:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8020efa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020efe:	b2f6      	uxtb	r6, r6
 8020f00:	43db      	mvns	r3, r3
 8020f02:	b2d2      	uxtb	r2, r2
 8020f04:	b2db      	uxtb	r3, r3
 8020f06:	fb1c fc01 	smulbb	ip, ip, r1
 8020f0a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8020f0e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8020f12:	fb12 f201 	smulbb	r2, r2, r1
 8020f16:	fb05 c503 	mla	r5, r5, r3, ip
 8020f1a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8020f1e:	b2ff      	uxtb	r7, r7
 8020f20:	fb06 2203 	mla	r2, r6, r3, r2
 8020f24:	b2ad      	uxth	r5, r5
 8020f26:	fb17 f701 	smulbb	r7, r7, r1
 8020f2a:	b292      	uxth	r2, r2
 8020f2c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8020f30:	fb04 7403 	mla	r4, r4, r3, r7
 8020f34:	f105 0c01 	add.w	ip, r5, #1
 8020f38:	1c57      	adds	r7, r2, #1
 8020f3a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020f3e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8020f42:	b2a4      	uxth	r4, r4
 8020f44:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020f48:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020f4c:	433d      	orrs	r5, r7
 8020f4e:	1c67      	adds	r7, r4, #1
 8020f50:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8020f54:	0964      	lsrs	r4, r4, #5
 8020f56:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020f5a:	4325      	orrs	r5, r4
 8020f5c:	8005      	strh	r5, [r0, #0]
 8020f5e:	e7bd      	b.n	8020edc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8020f60:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020f62:	4418      	add	r0, r3
 8020f64:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020f66:	4499      	add	r9, r3
 8020f68:	e795      	b.n	8020e96 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8020f6a:	4b04      	ldr	r3, [pc, #16]	; (8020f7c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8020f6c:	6818      	ldr	r0, [r3, #0]
 8020f6e:	6803      	ldr	r3, [r0, #0]
 8020f70:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020f72:	4798      	blx	r3
 8020f74:	e771      	b.n	8020e5a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8020f76:	bf00      	nop
 8020f78:	20013846 	.word	0x20013846
 8020f7c:	2001384c 	.word	0x2001384c

08020f80 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8020f80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020f84:	b087      	sub	sp, #28
 8020f86:	4680      	mov	r8, r0
 8020f88:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8020f8c:	460d      	mov	r5, r1
 8020f8e:	4614      	mov	r4, r2
 8020f90:	2e00      	cmp	r6, #0
 8020f92:	f000 80b9 	beq.w	8021108 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8020f96:	6810      	ldr	r0, [r2, #0]
 8020f98:	6851      	ldr	r1, [r2, #4]
 8020f9a:	af02      	add	r7, sp, #8
 8020f9c:	c703      	stmia	r7!, {r0, r1}
 8020f9e:	6818      	ldr	r0, [r3, #0]
 8020fa0:	6859      	ldr	r1, [r3, #4]
 8020fa2:	af04      	add	r7, sp, #16
 8020fa4:	c703      	stmia	r7!, {r0, r1}
 8020fa6:	a802      	add	r0, sp, #8
 8020fa8:	f7f7 fbae 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020fac:	4621      	mov	r1, r4
 8020fae:	a804      	add	r0, sp, #16
 8020fb0:	f7f7 fbee 	bl	8018790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020fb4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8020fb8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8020fbc:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8020fc0:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8020fc4:	fb14 2103 	smlabb	r1, r4, r3, r2
 8020fc8:	eb08 0401 	add.w	r4, r8, r1
 8020fcc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8020fd0:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8020fd4:	440a      	add	r2, r1
 8020fd6:	f8ad 2010 	strh.w	r2, [sp, #16]
 8020fda:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8020fde:	4413      	add	r3, r2
 8020fe0:	f8ad 3012 	strh.w	r3, [sp, #18]
 8020fe4:	4b4a      	ldr	r3, [pc, #296]	; (8021110 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8020fe6:	6818      	ldr	r0, [r3, #0]
 8020fe8:	6803      	ldr	r3, [r0, #0]
 8020fea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020fec:	4798      	blx	r3
 8020fee:	4b49      	ldr	r3, [pc, #292]	; (8021114 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8020ff0:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8020ff4:	881a      	ldrh	r2, [r3, #0]
 8020ff6:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8020ffa:	2eff      	cmp	r6, #255	; 0xff
 8020ffc:	fb02 c101 	mla	r1, r2, r1, ip
 8021000:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8021004:	fb02 f207 	mul.w	r2, r2, r7
 8021008:	f105 0104 	add.w	r1, r5, #4
 802100c:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8021010:	461d      	mov	r5, r3
 8021012:	d05a      	beq.n	80210ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8021014:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8021018:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 802101c:	b2b6      	uxth	r6, r6
 802101e:	fa1f fe8e 	uxth.w	lr, lr
 8021022:	9301      	str	r3, [sp, #4]
 8021024:	4282      	cmp	r2, r0
 8021026:	d96a      	bls.n	80210fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8021028:	eb00 0b0a 	add.w	fp, r0, sl
 802102c:	4583      	cmp	fp, r0
 802102e:	d940      	bls.n	80210b2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8021030:	f814 3b01 	ldrb.w	r3, [r4], #1
 8021034:	8805      	ldrh	r5, [r0, #0]
 8021036:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 802103a:	122f      	asrs	r7, r5, #8
 802103c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8021040:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8021044:	fb17 f70e 	smulbb	r7, r7, lr
 8021048:	ea4f 09e5 	mov.w	r9, r5, asr #3
 802104c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8021050:	00ed      	lsls	r5, r5, #3
 8021052:	fb0c 7c06 	mla	ip, ip, r6, r7
 8021056:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 802105a:	10df      	asrs	r7, r3, #3
 802105c:	b2ed      	uxtb	r5, r5
 802105e:	00db      	lsls	r3, r3, #3
 8021060:	fa1f fc8c 	uxth.w	ip, ip
 8021064:	fb19 f90e 	smulbb	r9, r9, lr
 8021068:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802106c:	b2db      	uxtb	r3, r3
 802106e:	fb15 f50e 	smulbb	r5, r5, lr
 8021072:	fb07 9706 	mla	r7, r7, r6, r9
 8021076:	fb03 5306 	mla	r3, r3, r6, r5
 802107a:	f10c 0901 	add.w	r9, ip, #1
 802107e:	b29b      	uxth	r3, r3
 8021080:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8021084:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8021088:	f103 0c01 	add.w	ip, r3, #1
 802108c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8021090:	b2bf      	uxth	r7, r7
 8021092:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8021096:	ea4c 0c09 	orr.w	ip, ip, r9
 802109a:	f107 0901 	add.w	r9, r7, #1
 802109e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 80210a2:	097f      	lsrs	r7, r7, #5
 80210a4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80210a8:	ea4c 0c07 	orr.w	ip, ip, r7
 80210ac:	f820 cb02 	strh.w	ip, [r0], #2
 80210b0:	e7bc      	b.n	802102c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 80210b2:	9b01      	ldr	r3, [sp, #4]
 80210b4:	881b      	ldrh	r3, [r3, #0]
 80210b6:	eba3 0308 	sub.w	r3, r3, r8
 80210ba:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80210be:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80210c2:	eba3 0308 	sub.w	r3, r3, r8
 80210c6:	441c      	add	r4, r3
 80210c8:	e7ac      	b.n	8021024 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 80210ca:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80210ce:	4282      	cmp	r2, r0
 80210d0:	d915      	bls.n	80210fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80210d2:	eb00 060a 	add.w	r6, r0, sl
 80210d6:	4286      	cmp	r6, r0
 80210d8:	d906      	bls.n	80210e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 80210da:	f814 3b01 	ldrb.w	r3, [r4], #1
 80210de:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80210e2:	f820 3b02 	strh.w	r3, [r0], #2
 80210e6:	e7f6      	b.n	80210d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 80210e8:	882b      	ldrh	r3, [r5, #0]
 80210ea:	eba3 0308 	sub.w	r3, r3, r8
 80210ee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80210f2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80210f6:	eba3 0308 	sub.w	r3, r3, r8
 80210fa:	441c      	add	r4, r3
 80210fc:	e7e7      	b.n	80210ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 80210fe:	4b04      	ldr	r3, [pc, #16]	; (8021110 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8021100:	6818      	ldr	r0, [r3, #0]
 8021102:	6803      	ldr	r3, [r0, #0]
 8021104:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021106:	4798      	blx	r3
 8021108:	b007      	add	sp, #28
 802110a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802110e:	bf00      	nop
 8021110:	2001384c 	.word	0x2001384c
 8021114:	20013846 	.word	0x20013846

08021118 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8021118:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802111c:	b091      	sub	sp, #68	; 0x44
 802111e:	4680      	mov	r8, r0
 8021120:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8021124:	460f      	mov	r7, r1
 8021126:	4614      	mov	r4, r2
 8021128:	2d00      	cmp	r5, #0
 802112a:	d051      	beq.n	80211d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 802112c:	6810      	ldr	r0, [r2, #0]
 802112e:	6851      	ldr	r1, [r2, #4]
 8021130:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8021334 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8021134:	ae0c      	add	r6, sp, #48	; 0x30
 8021136:	c603      	stmia	r6!, {r0, r1}
 8021138:	6818      	ldr	r0, [r3, #0]
 802113a:	6859      	ldr	r1, [r3, #4]
 802113c:	ae0e      	add	r6, sp, #56	; 0x38
 802113e:	c603      	stmia	r6!, {r0, r1}
 8021140:	a80c      	add	r0, sp, #48	; 0x30
 8021142:	f7f7 fae1 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021146:	4621      	mov	r1, r4
 8021148:	a80e      	add	r0, sp, #56	; 0x38
 802114a:	f7f7 fb21 	bl	8018790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802114e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8021152:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8021156:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 802115a:	f8d9 0000 	ldr.w	r0, [r9]
 802115e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8021162:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8021166:	fb11 2103 	smlabb	r1, r1, r3, r2
 802116a:	eb08 0401 	add.w	r4, r8, r1
 802116e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8021172:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8021338 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8021176:	440a      	add	r2, r1
 8021178:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 802117c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8021180:	4413      	add	r3, r2
 8021182:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8021186:	6803      	ldr	r3, [r0, #0]
 8021188:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 802118a:	4798      	blx	r3
 802118c:	f010 0f80 	tst.w	r0, #128	; 0x80
 8021190:	f8d9 0000 	ldr.w	r0, [r9]
 8021194:	d01f      	beq.n	80211d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8021196:	2200      	movs	r2, #0
 8021198:	6801      	ldr	r1, [r0, #0]
 802119a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 802119e:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80211a2:	220b      	movs	r2, #11
 80211a4:	9207      	str	r2, [sp, #28]
 80211a6:	f8b8 2000 	ldrh.w	r2, [r8]
 80211aa:	9206      	str	r2, [sp, #24]
 80211ac:	2201      	movs	r2, #1
 80211ae:	e9cd 5204 	strd	r5, r2, [sp, #16]
 80211b2:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80211b6:	9203      	str	r2, [sp, #12]
 80211b8:	fa1f f28a 	uxth.w	r2, sl
 80211bc:	9202      	str	r2, [sp, #8]
 80211be:	b2b6      	uxth	r6, r6
 80211c0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80211c4:	9200      	str	r2, [sp, #0]
 80211c6:	9601      	str	r6, [sp, #4]
 80211c8:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 80211ca:	463a      	mov	r2, r7
 80211cc:	4621      	mov	r1, r4
 80211ce:	47a8      	blx	r5
 80211d0:	b011      	add	sp, #68	; 0x44
 80211d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80211d6:	6803      	ldr	r3, [r0, #0]
 80211d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80211da:	4798      	blx	r3
 80211dc:	f8b8 2000 	ldrh.w	r2, [r8]
 80211e0:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80211e4:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 80211e8:	2dff      	cmp	r5, #255	; 0xff
 80211ea:	fb02 1303 	mla	r3, r2, r3, r1
 80211ee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80211f2:	ea4f 0946 	mov.w	r9, r6, lsl #1
 80211f6:	fb0a fa02 	mul.w	sl, sl, r2
 80211fa:	d062      	beq.n	80212c2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 80211fc:	ea6f 0c05 	mvn.w	ip, r5
 8021200:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8021204:	930a      	str	r3, [sp, #40]	; 0x28
 8021206:	b2ad      	uxth	r5, r5
 8021208:	fa5f fc8c 	uxtb.w	ip, ip
 802120c:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8021210:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021212:	4298      	cmp	r0, r3
 8021214:	f080 8085 	bcs.w	8021322 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8021218:	eb00 0b09 	add.w	fp, r0, r9
 802121c:	4558      	cmp	r0, fp
 802121e:	d246      	bcs.n	80212ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8021220:	f814 eb01 	ldrb.w	lr, [r4], #1
 8021224:	2303      	movs	r3, #3
 8021226:	2204      	movs	r2, #4
 8021228:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 802122c:	eb07 0a0e 	add.w	sl, r7, lr
 8021230:	8803      	ldrh	r3, [r0, #0]
 8021232:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8021236:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802123a:	1219      	asrs	r1, r3, #8
 802123c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021240:	fb18 f805 	smulbb	r8, r8, r5
 8021244:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8021248:	10da      	asrs	r2, r3, #3
 802124a:	fb01 810c 	mla	r1, r1, ip, r8
 802124e:	00db      	lsls	r3, r3, #3
 8021250:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021254:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021258:	b2db      	uxtb	r3, r3
 802125a:	fb18 f805 	smulbb	r8, r8, r5
 802125e:	fb1e fe05 	smulbb	lr, lr, r5
 8021262:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8021266:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 802126a:	b289      	uxth	r1, r1
 802126c:	fb02 820c 	mla	r2, r2, ip, r8
 8021270:	fb03 e30c 	mla	r3, r3, ip, lr
 8021274:	b292      	uxth	r2, r2
 8021276:	b29b      	uxth	r3, r3
 8021278:	f101 0801 	add.w	r8, r1, #1
 802127c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8021280:	f103 0e01 	add.w	lr, r3, #1
 8021284:	f102 0801 	add.w	r8, r2, #1
 8021288:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 802128c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8021290:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8021294:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8021298:	ea4f 1858 	mov.w	r8, r8, lsr #5
 802129c:	ea4e 0101 	orr.w	r1, lr, r1
 80212a0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80212a4:	ea41 0108 	orr.w	r1, r1, r8
 80212a8:	f820 1b02 	strh.w	r1, [r0], #2
 80212ac:	e7b6      	b.n	802121c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 80212ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80212b0:	881b      	ldrh	r3, [r3, #0]
 80212b2:	1b9b      	subs	r3, r3, r6
 80212b4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80212b8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80212bc:	1b9b      	subs	r3, r3, r6
 80212be:	441c      	add	r4, r3
 80212c0:	e7a6      	b.n	8021210 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 80212c2:	491b      	ldr	r1, [pc, #108]	; (8021330 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 80212c4:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80212c8:	2203      	movs	r2, #3
 80212ca:	2504      	movs	r5, #4
 80212cc:	4550      	cmp	r0, sl
 80212ce:	d228      	bcs.n	8021322 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80212d0:	eb00 0c09 	add.w	ip, r0, r9
 80212d4:	4560      	cmp	r0, ip
 80212d6:	4623      	mov	r3, r4
 80212d8:	d219      	bcs.n	802130e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 80212da:	f893 e000 	ldrb.w	lr, [r3]
 80212de:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80212e2:	eb07 0b0e 	add.w	fp, r7, lr
 80212e6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80212ea:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80212ee:	f89b b001 	ldrb.w	fp, [fp, #1]
 80212f2:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80212f6:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80212fa:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80212fe:	ea43 030b 	orr.w	r3, r3, fp
 8021302:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8021306:	3401      	adds	r4, #1
 8021308:	f820 3b02 	strh.w	r3, [r0], #2
 802130c:	e7e2      	b.n	80212d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 802130e:	f8b8 3000 	ldrh.w	r3, [r8]
 8021312:	1b9b      	subs	r3, r3, r6
 8021314:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021318:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802131c:	1b9b      	subs	r3, r3, r6
 802131e:	441c      	add	r4, r3
 8021320:	e7d4      	b.n	80212cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8021322:	4b04      	ldr	r3, [pc, #16]	; (8021334 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8021324:	6818      	ldr	r0, [r3, #0]
 8021326:	6803      	ldr	r3, [r0, #0]
 8021328:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802132a:	4798      	blx	r3
 802132c:	e750      	b.n	80211d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 802132e:	bf00      	nop
 8021330:	fffff800 	.word	0xfffff800
 8021334:	2001384c 	.word	0x2001384c
 8021338:	20013846 	.word	0x20013846

0802133c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 802133c:	b4f0      	push	{r4, r5, r6, r7}
 802133e:	460c      	mov	r4, r1
 8021340:	4611      	mov	r1, r2
 8021342:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8021346:	780f      	ldrb	r7, [r1, #0]
 8021348:	784e      	ldrb	r6, [r1, #1]
 802134a:	2f01      	cmp	r7, #1
 802134c:	461a      	mov	r2, r3
 802134e:	9b04      	ldr	r3, [sp, #16]
 8021350:	d036      	beq.n	80213c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 8021352:	d31e      	bcc.n	8021392 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 8021354:	2f02      	cmp	r7, #2
 8021356:	d14a      	bne.n	80213ee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021358:	2e03      	cmp	r6, #3
 802135a:	d848      	bhi.n	80213ee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 802135c:	e8df f006 	tbb	[pc, r6]
 8021360:	16140702 	.word	0x16140702
 8021364:	9504      	str	r5, [sp, #16]
 8021366:	4620      	mov	r0, r4
 8021368:	bcf0      	pop	{r4, r5, r6, r7}
 802136a:	f7ff be09 	b.w	8020f80 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 802136e:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8021370:	2800      	cmp	r0, #0
 8021372:	d03c      	beq.n	80213ee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021374:	6806      	ldr	r6, [r0, #0]
 8021376:	e9cd 3504 	strd	r3, r5, [sp, #16]
 802137a:	68b5      	ldr	r5, [r6, #8]
 802137c:	4613      	mov	r3, r2
 802137e:	46ac      	mov	ip, r5
 8021380:	460a      	mov	r2, r1
 8021382:	4621      	mov	r1, r4
 8021384:	bcf0      	pop	{r4, r5, r6, r7}
 8021386:	4760      	bx	ip
 8021388:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 802138a:	e7f1      	b.n	8021370 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 802138c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 8021390:	e7ee      	b.n	8021370 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8021392:	2e03      	cmp	r6, #3
 8021394:	d82b      	bhi.n	80213ee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021396:	e8df f006 	tbb	[pc, r6]
 802139a:	0702      	.short	0x0702
 802139c:	100e      	.short	0x100e
 802139e:	9504      	str	r5, [sp, #16]
 80213a0:	4620      	mov	r0, r4
 80213a2:	bcf0      	pop	{r4, r5, r6, r7}
 80213a4:	f7ff bd06 	b.w	8020db4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80213a8:	6f80      	ldr	r0, [r0, #120]	; 0x78
 80213aa:	b300      	cbz	r0, 80213ee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80213ac:	6806      	ldr	r6, [r0, #0]
 80213ae:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80213b2:	68f5      	ldr	r5, [r6, #12]
 80213b4:	e7e2      	b.n	802137c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80213b6:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 80213b8:	e7f7      	b.n	80213aa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 80213ba:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 80213be:	e7f4      	b.n	80213aa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 80213c0:	2e03      	cmp	r6, #3
 80213c2:	d814      	bhi.n	80213ee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80213c4:	e8df f006 	tbb	[pc, r6]
 80213c8:	100e0702 	.word	0x100e0702
 80213cc:	9504      	str	r5, [sp, #16]
 80213ce:	4620      	mov	r0, r4
 80213d0:	bcf0      	pop	{r4, r5, r6, r7}
 80213d2:	f7ff bea1 	b.w	8021118 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80213d6:	6f80      	ldr	r0, [r0, #120]	; 0x78
 80213d8:	b148      	cbz	r0, 80213ee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80213da:	6806      	ldr	r6, [r0, #0]
 80213dc:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80213e0:	6935      	ldr	r5, [r6, #16]
 80213e2:	e7cb      	b.n	802137c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80213e4:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 80213e6:	e7f7      	b.n	80213d8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 80213e8:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 80213ec:	e7f4      	b.n	80213d8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 80213ee:	bcf0      	pop	{r4, r5, r6, r7}
 80213f0:	4770      	bx	lr
	...

080213f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80213f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80213f8:	4604      	mov	r4, r0
 80213fa:	b087      	sub	sp, #28
 80213fc:	6810      	ldr	r0, [r2, #0]
 80213fe:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8021402:	f8df 9238 	ldr.w	r9, [pc, #568]	; 802163c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8021406:	460e      	mov	r6, r1
 8021408:	6851      	ldr	r1, [r2, #4]
 802140a:	ad02      	add	r5, sp, #8
 802140c:	c503      	stmia	r5!, {r0, r1}
 802140e:	6818      	ldr	r0, [r3, #0]
 8021410:	6859      	ldr	r1, [r3, #4]
 8021412:	ad04      	add	r5, sp, #16
 8021414:	4617      	mov	r7, r2
 8021416:	c503      	stmia	r5!, {r0, r1}
 8021418:	a802      	add	r0, sp, #8
 802141a:	f7f7 f975 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802141e:	4639      	mov	r1, r7
 8021420:	a804      	add	r0, sp, #16
 8021422:	f7f7 f9b5 	bl	8018790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021426:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802142a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802142e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8021432:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8021436:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 802143a:	fb11 2103 	smlabb	r1, r1, r3, r2
 802143e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8021442:	440e      	add	r6, r1
 8021444:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8021448:	440a      	add	r2, r1
 802144a:	f8ad 2010 	strh.w	r2, [sp, #16]
 802144e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8021452:	4413      	add	r3, r2
 8021454:	f8ad 3012 	strh.w	r3, [sp, #18]
 8021458:	4b77      	ldr	r3, [pc, #476]	; (8021638 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 802145a:	6818      	ldr	r0, [r3, #0]
 802145c:	6803      	ldr	r3, [r0, #0]
 802145e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021460:	4798      	blx	r3
 8021462:	f8b9 b000 	ldrh.w	fp, [r9]
 8021466:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802146a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802146e:	fb0b 2303 	mla	r3, fp, r3, r2
 8021472:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021476:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 802147a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 802147e:	fb05 f50b 	mul.w	r5, r5, fp
 8021482:	9300      	str	r3, [sp, #0]
 8021484:	d069      	beq.n	802155a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8021486:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 802148a:	4558      	cmp	r0, fp
 802148c:	f080 80cc 	bcs.w	8021628 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8021490:	9b00      	ldr	r3, [sp, #0]
 8021492:	18c3      	adds	r3, r0, r3
 8021494:	9301      	str	r3, [sp, #4]
 8021496:	4631      	mov	r1, r6
 8021498:	9b01      	ldr	r3, [sp, #4]
 802149a:	4298      	cmp	r0, r3
 802149c:	d24f      	bcs.n	802153e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 802149e:	f811 2b01 	ldrb.w	r2, [r1], #1
 80214a2:	2a00      	cmp	r2, #0
 80214a4:	d048      	beq.n	8021538 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80214a6:	fb0a f202 	mul.w	r2, sl, r2
 80214aa:	1c53      	adds	r3, r2, #1
 80214ac:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80214b0:	121b      	asrs	r3, r3, #8
 80214b2:	d041      	beq.n	8021538 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80214b4:	8802      	ldrh	r2, [r0, #0]
 80214b6:	f8b4 c000 	ldrh.w	ip, [r4]
 80214ba:	b29e      	uxth	r6, r3
 80214bc:	1215      	asrs	r5, r2, #8
 80214be:	43db      	mvns	r3, r3
 80214c0:	b2db      	uxtb	r3, r3
 80214c2:	ea4f 272c 	mov.w	r7, ip, asr #8
 80214c6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80214ca:	fb15 f503 	smulbb	r5, r5, r3
 80214ce:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80214d2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80214d6:	00d2      	lsls	r2, r2, #3
 80214d8:	fb07 5706 	mla	r7, r7, r6, r5
 80214dc:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80214e0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80214e4:	b2d2      	uxtb	r2, r2
 80214e6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80214ea:	b2bf      	uxth	r7, r7
 80214ec:	fb1e fe03 	smulbb	lr, lr, r3
 80214f0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80214f4:	fa5f fc8c 	uxtb.w	ip, ip
 80214f8:	fb12 f203 	smulbb	r2, r2, r3
 80214fc:	fb05 e506 	mla	r5, r5, r6, lr
 8021500:	fb0c 2c06 	mla	ip, ip, r6, r2
 8021504:	f107 0e01 	add.w	lr, r7, #1
 8021508:	fa1f fc8c 	uxth.w	ip, ip
 802150c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8021510:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8021514:	f10c 0701 	add.w	r7, ip, #1
 8021518:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802151c:	b2ad      	uxth	r5, r5
 802151e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021522:	ea47 070e 	orr.w	r7, r7, lr
 8021526:	f105 0e01 	add.w	lr, r5, #1
 802152a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 802152e:	096d      	lsrs	r5, r5, #5
 8021530:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021534:	432f      	orrs	r7, r5
 8021536:	8007      	strh	r7, [r0, #0]
 8021538:	3002      	adds	r0, #2
 802153a:	3402      	adds	r4, #2
 802153c:	e7ac      	b.n	8021498 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 802153e:	f8b9 3000 	ldrh.w	r3, [r9]
 8021542:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8021546:	eba3 0308 	sub.w	r3, r3, r8
 802154a:	eba6 0608 	sub.w	r6, r6, r8
 802154e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8021552:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021556:	440e      	add	r6, r1
 8021558:	e797      	b.n	802148a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 802155a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 802155e:	42a8      	cmp	r0, r5
 8021560:	d262      	bcs.n	8021628 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8021562:	9b00      	ldr	r3, [sp, #0]
 8021564:	4631      	mov	r1, r6
 8021566:	eb00 0b03 	add.w	fp, r0, r3
 802156a:	4558      	cmp	r0, fp
 802156c:	d24e      	bcs.n	802160c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 802156e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8021572:	b12b      	cbz	r3, 8021580 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8021574:	2bff      	cmp	r3, #255	; 0xff
 8021576:	f8b4 e000 	ldrh.w	lr, [r4]
 802157a:	d104      	bne.n	8021586 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 802157c:	f8a0 e000 	strh.w	lr, [r0]
 8021580:	3002      	adds	r0, #2
 8021582:	3402      	adds	r4, #2
 8021584:	e7f1      	b.n	802156a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8021586:	8802      	ldrh	r2, [r0, #0]
 8021588:	b29f      	uxth	r7, r3
 802158a:	1216      	asrs	r6, r2, #8
 802158c:	43db      	mvns	r3, r3
 802158e:	b2db      	uxtb	r3, r3
 8021590:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8021594:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8021598:	fb16 f603 	smulbb	r6, r6, r3
 802159c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80215a0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80215a4:	00d2      	lsls	r2, r2, #3
 80215a6:	fb0c 6c07 	mla	ip, ip, r7, r6
 80215aa:	b2d2      	uxtb	r2, r2
 80215ac:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80215b0:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80215b4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80215b8:	fb1a fa03 	smulbb	sl, sl, r3
 80215bc:	fa1f fc8c 	uxth.w	ip, ip
 80215c0:	fb12 f303 	smulbb	r3, r2, r3
 80215c4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80215c8:	fa5f fe8e 	uxtb.w	lr, lr
 80215cc:	fb06 a607 	mla	r6, r6, r7, sl
 80215d0:	f10c 0201 	add.w	r2, ip, #1
 80215d4:	fb0e 3307 	mla	r3, lr, r7, r3
 80215d8:	b2b6      	uxth	r6, r6
 80215da:	b29b      	uxth	r3, r3
 80215dc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80215e0:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 80215e4:	f106 0a01 	add.w	sl, r6, #1
 80215e8:	f103 0c01 	add.w	ip, r3, #1
 80215ec:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80215f0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80215f4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80215f8:	0976      	lsrs	r6, r6, #5
 80215fa:	ea4c 0c02 	orr.w	ip, ip, r2
 80215fe:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8021602:	ea4c 0c06 	orr.w	ip, ip, r6
 8021606:	f8a0 c000 	strh.w	ip, [r0]
 802160a:	e7b9      	b.n	8021580 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 802160c:	f8b9 3000 	ldrh.w	r3, [r9]
 8021610:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8021614:	eba3 0308 	sub.w	r3, r3, r8
 8021618:	eba6 0608 	sub.w	r6, r6, r8
 802161c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8021620:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021624:	440e      	add	r6, r1
 8021626:	e79a      	b.n	802155e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8021628:	4b03      	ldr	r3, [pc, #12]	; (8021638 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 802162a:	6818      	ldr	r0, [r3, #0]
 802162c:	6803      	ldr	r3, [r0, #0]
 802162e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021630:	4798      	blx	r3
 8021632:	b007      	add	sp, #28
 8021634:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021638:	2001384c 	.word	0x2001384c
 802163c:	20013846 	.word	0x20013846

08021640 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8021640:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021644:	b089      	sub	sp, #36	; 0x24
 8021646:	4682      	mov	sl, r0
 8021648:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 802164c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802164e:	460f      	mov	r7, r1
 8021650:	4691      	mov	r9, r2
 8021652:	4698      	mov	r8, r3
 8021654:	2e00      	cmp	r6, #0
 8021656:	d03d      	beq.n	80216d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021658:	4608      	mov	r0, r1
 802165a:	f7fa fe59 	bl	801c310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802165e:	4605      	mov	r5, r0
 8021660:	4638      	mov	r0, r7
 8021662:	f7fa fe89 	bl	801c378 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8021666:	f8ad 000e 	strh.w	r0, [sp, #14]
 802166a:	4638      	mov	r0, r7
 802166c:	f8ad 9008 	strh.w	r9, [sp, #8]
 8021670:	f8ad 500c 	strh.w	r5, [sp, #12]
 8021674:	f8ad 800a 	strh.w	r8, [sp, #10]
 8021678:	f7fa ff36 	bl	801c4e8 <_ZNK8touchgfx6Bitmap7getDataEv>
 802167c:	4605      	mov	r5, r0
 802167e:	4638      	mov	r0, r7
 8021680:	f7fa ff62 	bl	801c548 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8021684:	4681      	mov	r9, r0
 8021686:	4638      	mov	r0, r7
 8021688:	f7fa ffb2 	bl	801c5f0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802168c:	280b      	cmp	r0, #11
 802168e:	d821      	bhi.n	80216d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021690:	e8df f000 	tbb	[pc, r0]
 8021694:	2006aebe 	.word	0x2006aebe
 8021698:	20202020 	.word	0x20202020
 802169c:	b5202020 	.word	0xb5202020
 80216a0:	4bb0      	ldr	r3, [pc, #704]	; (8021964 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 80216a2:	6818      	ldr	r0, [r3, #0]
 80216a4:	6803      	ldr	r3, [r0, #0]
 80216a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80216a8:	4798      	blx	r3
 80216aa:	2eff      	cmp	r6, #255	; 0xff
 80216ac:	d101      	bne.n	80216b2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 80216ae:	0683      	lsls	r3, r0, #26
 80216b0:	d506      	bpl.n	80216c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 80216b2:	4633      	mov	r3, r6
 80216b4:	4622      	mov	r2, r4
 80216b6:	a902      	add	r1, sp, #8
 80216b8:	4628      	mov	r0, r5
 80216ba:	f7ff f909 	bl	80208d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80216be:	e009      	b.n	80216d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80216c0:	4638      	mov	r0, r7
 80216c2:	f7fa fed9 	bl	801c478 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80216c6:	b940      	cbnz	r0, 80216da <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 80216c8:	4623      	mov	r3, r4
 80216ca:	aa02      	add	r2, sp, #8
 80216cc:	4629      	mov	r1, r5
 80216ce:	4650      	mov	r0, sl
 80216d0:	f7ff f9e4 	bl	8020a9c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80216d4:	b009      	add	sp, #36	; 0x24
 80216d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80216da:	f10d 0818 	add.w	r8, sp, #24
 80216de:	4639      	mov	r1, r7
 80216e0:	4640      	mov	r0, r8
 80216e2:	f7fa fe7d 	bl	801c3e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80216e6:	e898 0003 	ldmia.w	r8, {r0, r1}
 80216ea:	af04      	add	r7, sp, #16
 80216ec:	e887 0003 	stmia.w	r7, {r0, r1}
 80216f0:	4638      	mov	r0, r7
 80216f2:	4621      	mov	r1, r4
 80216f4:	f7f1 fa6a 	bl	8012bcc <_ZN8touchgfx4RectaNERKS0_>
 80216f8:	4638      	mov	r0, r7
 80216fa:	f7f1 faaa 	bl	8012c52 <_ZNK8touchgfx4Rect7isEmptyEv>
 80216fe:	2800      	cmp	r0, #0
 8021700:	d1d7      	bne.n	80216b2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 8021702:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8021706:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 802170a:	4293      	cmp	r3, r2
 802170c:	dd12      	ble.n	8021734 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 802170e:	1a9b      	subs	r3, r3, r2
 8021710:	f9b4 0000 	ldrsh.w	r0, [r4]
 8021714:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8021718:	f8ad 0018 	strh.w	r0, [sp, #24]
 802171c:	f8ad 201a 	strh.w	r2, [sp, #26]
 8021720:	f8ad 101c 	strh.w	r1, [sp, #28]
 8021724:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021728:	4642      	mov	r2, r8
 802172a:	4633      	mov	r3, r6
 802172c:	a902      	add	r1, sp, #8
 802172e:	4628      	mov	r0, r5
 8021730:	f7ff f8ce 	bl	80208d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8021734:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8021738:	f9b4 2000 	ldrsh.w	r2, [r4]
 802173c:	4293      	cmp	r3, r2
 802173e:	dd12      	ble.n	8021766 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 8021740:	1a9b      	subs	r3, r3, r2
 8021742:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8021746:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 802174a:	f8ad 2018 	strh.w	r2, [sp, #24]
 802174e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8021752:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021756:	f8ad 101e 	strh.w	r1, [sp, #30]
 802175a:	23ff      	movs	r3, #255	; 0xff
 802175c:	4642      	mov	r2, r8
 802175e:	a902      	add	r1, sp, #8
 8021760:	4628      	mov	r0, r5
 8021762:	f7ff f8b5 	bl	80208d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8021766:	463b      	mov	r3, r7
 8021768:	aa02      	add	r2, sp, #8
 802176a:	4629      	mov	r1, r5
 802176c:	4650      	mov	r0, sl
 802176e:	f7ff f995 	bl	8020a9c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8021772:	88a2      	ldrh	r2, [r4, #4]
 8021774:	8823      	ldrh	r3, [r4, #0]
 8021776:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 802177a:	4413      	add	r3, r2
 802177c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8021780:	440a      	add	r2, r1
 8021782:	b29b      	uxth	r3, r3
 8021784:	b292      	uxth	r2, r2
 8021786:	b211      	sxth	r1, r2
 8021788:	b218      	sxth	r0, r3
 802178a:	4288      	cmp	r0, r1
 802178c:	dd12      	ble.n	80217b4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 802178e:	1a9b      	subs	r3, r3, r2
 8021790:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8021794:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8021798:	f8ad 1018 	strh.w	r1, [sp, #24]
 802179c:	f8ad 301c 	strh.w	r3, [sp, #28]
 80217a0:	f8ad 001e 	strh.w	r0, [sp, #30]
 80217a4:	23ff      	movs	r3, #255	; 0xff
 80217a6:	4642      	mov	r2, r8
 80217a8:	a902      	add	r1, sp, #8
 80217aa:	4628      	mov	r0, r5
 80217ac:	f8ad 601a 	strh.w	r6, [sp, #26]
 80217b0:	f7ff f88e 	bl	80208d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80217b4:	88e2      	ldrh	r2, [r4, #6]
 80217b6:	8863      	ldrh	r3, [r4, #2]
 80217b8:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80217bc:	4413      	add	r3, r2
 80217be:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80217c2:	440a      	add	r2, r1
 80217c4:	b29b      	uxth	r3, r3
 80217c6:	b292      	uxth	r2, r2
 80217c8:	b211      	sxth	r1, r2
 80217ca:	b218      	sxth	r0, r3
 80217cc:	4288      	cmp	r0, r1
 80217ce:	dd81      	ble.n	80216d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80217d0:	1a9b      	subs	r3, r3, r2
 80217d2:	f9b4 6000 	ldrsh.w	r6, [r4]
 80217d6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80217da:	f8ad 301e 	strh.w	r3, [sp, #30]
 80217de:	f8ad 6018 	strh.w	r6, [sp, #24]
 80217e2:	f8ad 101a 	strh.w	r1, [sp, #26]
 80217e6:	f8ad 001c 	strh.w	r0, [sp, #28]
 80217ea:	23ff      	movs	r3, #255	; 0xff
 80217ec:	4642      	mov	r2, r8
 80217ee:	e762      	b.n	80216b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 80217f0:	4633      	mov	r3, r6
 80217f2:	4622      	mov	r2, r4
 80217f4:	a902      	add	r1, sp, #8
 80217f6:	4628      	mov	r0, r5
 80217f8:	f7ff f9c0 	bl	8020b7c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80217fc:	e76a      	b.n	80216d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80217fe:	e9cd 4600 	strd	r4, r6, [sp]
 8021802:	ab02      	add	r3, sp, #8
 8021804:	464a      	mov	r2, r9
 8021806:	4629      	mov	r1, r5
 8021808:	4650      	mov	r0, sl
 802180a:	f7ff fd97 	bl	802133c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 802180e:	e761      	b.n	80216d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021810:	4638      	mov	r0, r7
 8021812:	f7fa fe31 	bl	801c478 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8021816:	b950      	cbnz	r0, 802182e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 8021818:	e9cd 6000 	strd	r6, r0, [sp]
 802181c:	f8da 3000 	ldr.w	r3, [sl]
 8021820:	aa02      	add	r2, sp, #8
 8021822:	68de      	ldr	r6, [r3, #12]
 8021824:	4629      	mov	r1, r5
 8021826:	4623      	mov	r3, r4
 8021828:	4650      	mov	r0, sl
 802182a:	47b0      	blx	r6
 802182c:	e752      	b.n	80216d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 802182e:	f10d 0818 	add.w	r8, sp, #24
 8021832:	4639      	mov	r1, r7
 8021834:	4640      	mov	r0, r8
 8021836:	f7fa fdd3 	bl	801c3e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 802183a:	e898 0003 	ldmia.w	r8, {r0, r1}
 802183e:	af04      	add	r7, sp, #16
 8021840:	e887 0003 	stmia.w	r7, {r0, r1}
 8021844:	4638      	mov	r0, r7
 8021846:	4621      	mov	r1, r4
 8021848:	f7f1 f9c0 	bl	8012bcc <_ZN8touchgfx4RectaNERKS0_>
 802184c:	4638      	mov	r0, r7
 802184e:	f7f1 fa00 	bl	8012c52 <_ZNK8touchgfx4Rect7isEmptyEv>
 8021852:	b138      	cbz	r0, 8021864 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8021854:	9600      	str	r6, [sp, #0]
 8021856:	4623      	mov	r3, r4
 8021858:	aa02      	add	r2, sp, #8
 802185a:	4649      	mov	r1, r9
 802185c:	4628      	mov	r0, r5
 802185e:	f7ff fdc9 	bl	80213f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021862:	e737      	b.n	80216d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021864:	e9cd 6000 	strd	r6, r0, [sp]
 8021868:	f8da 3000 	ldr.w	r3, [sl]
 802186c:	aa02      	add	r2, sp, #8
 802186e:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8021872:	4629      	mov	r1, r5
 8021874:	463b      	mov	r3, r7
 8021876:	4650      	mov	r0, sl
 8021878:	47d8      	blx	fp
 802187a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802187e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8021882:	4293      	cmp	r3, r2
 8021884:	dd13      	ble.n	80218ae <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 8021886:	f9b4 0000 	ldrsh.w	r0, [r4]
 802188a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802188e:	f8ad 0018 	strh.w	r0, [sp, #24]
 8021892:	1a9b      	subs	r3, r3, r2
 8021894:	f8ad 201a 	strh.w	r2, [sp, #26]
 8021898:	f8ad 101c 	strh.w	r1, [sp, #28]
 802189c:	f8ad 301e 	strh.w	r3, [sp, #30]
 80218a0:	9600      	str	r6, [sp, #0]
 80218a2:	4643      	mov	r3, r8
 80218a4:	aa02      	add	r2, sp, #8
 80218a6:	4649      	mov	r1, r9
 80218a8:	4628      	mov	r0, r5
 80218aa:	f7ff fda3 	bl	80213f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80218ae:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80218b2:	f9b4 2000 	ldrsh.w	r2, [r4]
 80218b6:	4293      	cmp	r3, r2
 80218b8:	dd13      	ble.n	80218e2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 80218ba:	1a9b      	subs	r3, r3, r2
 80218bc:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80218c0:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80218c4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80218c8:	f8ad 001a 	strh.w	r0, [sp, #26]
 80218cc:	f8ad 301c 	strh.w	r3, [sp, #28]
 80218d0:	f8ad 101e 	strh.w	r1, [sp, #30]
 80218d4:	9600      	str	r6, [sp, #0]
 80218d6:	4643      	mov	r3, r8
 80218d8:	aa02      	add	r2, sp, #8
 80218da:	4649      	mov	r1, r9
 80218dc:	4628      	mov	r0, r5
 80218de:	f7ff fd89 	bl	80213f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80218e2:	88a2      	ldrh	r2, [r4, #4]
 80218e4:	8823      	ldrh	r3, [r4, #0]
 80218e6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80218ea:	4413      	add	r3, r2
 80218ec:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80218f0:	440a      	add	r2, r1
 80218f2:	b29b      	uxth	r3, r3
 80218f4:	b292      	uxth	r2, r2
 80218f6:	b211      	sxth	r1, r2
 80218f8:	b218      	sxth	r0, r3
 80218fa:	4288      	cmp	r0, r1
 80218fc:	dd13      	ble.n	8021926 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 80218fe:	1a9b      	subs	r3, r3, r2
 8021900:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8021904:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8021908:	f8ad 1018 	strh.w	r1, [sp, #24]
 802190c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021910:	f8ad 001e 	strh.w	r0, [sp, #30]
 8021914:	9600      	str	r6, [sp, #0]
 8021916:	4643      	mov	r3, r8
 8021918:	aa02      	add	r2, sp, #8
 802191a:	4649      	mov	r1, r9
 802191c:	4628      	mov	r0, r5
 802191e:	f8ad 701a 	strh.w	r7, [sp, #26]
 8021922:	f7ff fd67 	bl	80213f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021926:	88e2      	ldrh	r2, [r4, #6]
 8021928:	8863      	ldrh	r3, [r4, #2]
 802192a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 802192e:	4413      	add	r3, r2
 8021930:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8021934:	440a      	add	r2, r1
 8021936:	b29b      	uxth	r3, r3
 8021938:	b292      	uxth	r2, r2
 802193a:	b211      	sxth	r1, r2
 802193c:	b218      	sxth	r0, r3
 802193e:	4288      	cmp	r0, r1
 8021940:	f77f aec8 	ble.w	80216d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021944:	f9b4 7000 	ldrsh.w	r7, [r4]
 8021948:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 802194c:	f8ad 7018 	strh.w	r7, [sp, #24]
 8021950:	1a9b      	subs	r3, r3, r2
 8021952:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021956:	f8ad 101a 	strh.w	r1, [sp, #26]
 802195a:	f8ad 001c 	strh.w	r0, [sp, #28]
 802195e:	9600      	str	r6, [sp, #0]
 8021960:	4643      	mov	r3, r8
 8021962:	e779      	b.n	8021858 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 8021964:	2001384c 	.word	0x2001384c

08021968 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8021968:	b180      	cbz	r0, 802198c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 802196a:	2903      	cmp	r1, #3
 802196c:	d81c      	bhi.n	80219a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 802196e:	e8df f001 	tbb	[pc, r1]
 8021972:	1d02      	.short	0x1d02
 8021974:	1f08      	.short	0x1f08
 8021976:	4b10      	ldr	r3, [pc, #64]	; (80219b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8021978:	8818      	ldrh	r0, [r3, #0]
 802197a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 802197e:	4240      	negs	r0, r0
 8021980:	4770      	bx	lr
 8021982:	4b0d      	ldr	r3, [pc, #52]	; (80219b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8021984:	8818      	ldrh	r0, [r3, #0]
 8021986:	f3c0 000e 	ubfx	r0, r0, #0, #15
 802198a:	4770      	bx	lr
 802198c:	2903      	cmp	r1, #3
 802198e:	d80b      	bhi.n	80219a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8021990:	a301      	add	r3, pc, #4	; (adr r3, 8021998 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8021992:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8021996:	bf00      	nop
 8021998:	080219ad 	.word	0x080219ad
 802199c:	08021983 	.word	0x08021983
 80219a0:	080219b1 	.word	0x080219b1
 80219a4:	08021977 	.word	0x08021977
 80219a8:	2000      	movs	r0, #0
 80219aa:	4770      	bx	lr
 80219ac:	2001      	movs	r0, #1
 80219ae:	4770      	bx	lr
 80219b0:	f04f 30ff 	mov.w	r0, #4294967295
 80219b4:	4770      	bx	lr
 80219b6:	bf00      	nop
 80219b8:	20013846 	.word	0x20013846

080219bc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80219bc:	b180      	cbz	r0, 80219e0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 80219be:	2903      	cmp	r1, #3
 80219c0:	d81c      	bhi.n	80219fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80219c2:	e8df f001 	tbb	[pc, r1]
 80219c6:	021d      	.short	0x021d
 80219c8:	071f      	.short	0x071f
 80219ca:	4b10      	ldr	r3, [pc, #64]	; (8021a0c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80219cc:	8818      	ldrh	r0, [r3, #0]
 80219ce:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80219d2:	4770      	bx	lr
 80219d4:	4b0d      	ldr	r3, [pc, #52]	; (8021a0c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80219d6:	8818      	ldrh	r0, [r3, #0]
 80219d8:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80219dc:	4240      	negs	r0, r0
 80219de:	4770      	bx	lr
 80219e0:	2903      	cmp	r1, #3
 80219e2:	d80b      	bhi.n	80219fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80219e4:	a301      	add	r3, pc, #4	; (adr r3, 80219ec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 80219e6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80219ea:	bf00      	nop
 80219ec:	080219cb 	.word	0x080219cb
 80219f0:	08021a05 	.word	0x08021a05
 80219f4:	080219d5 	.word	0x080219d5
 80219f8:	08021a01 	.word	0x08021a01
 80219fc:	2000      	movs	r0, #0
 80219fe:	4770      	bx	lr
 8021a00:	2001      	movs	r0, #1
 8021a02:	4770      	bx	lr
 8021a04:	f04f 30ff 	mov.w	r0, #4294967295
 8021a08:	4770      	bx	lr
 8021a0a:	bf00      	nop
 8021a0c:	20013846 	.word	0x20013846

08021a10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8021a10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021a14:	b099      	sub	sp, #100	; 0x64
 8021a16:	910b      	str	r1, [sp, #44]	; 0x2c
 8021a18:	a914      	add	r1, sp, #80	; 0x50
 8021a1a:	e881 000c 	stmia.w	r1, {r2, r3}
 8021a1e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8021a22:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8021a26:	f891 900d 	ldrb.w	r9, [r1, #13]
 8021a2a:	9309      	str	r3, [sp, #36]	; 0x24
 8021a2c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8021a30:	9310      	str	r3, [sp, #64]	; 0x40
 8021a32:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8021a36:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8021a3a:	930c      	str	r3, [sp, #48]	; 0x30
 8021a3c:	f407 7380 	and.w	r3, r7, #256	; 0x100
 8021a40:	798f      	ldrb	r7, [r1, #6]
 8021a42:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8021a46:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 8021a4a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 8021a4e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8021a52:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8021a56:	431f      	orrs	r7, r3
 8021a58:	f000 8195 	beq.w	8021d86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021a5c:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8021a60:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8021a64:	f891 9007 	ldrb.w	r9, [r1, #7]
 8021a68:	ea59 0903 	orrs.w	r9, r9, r3
 8021a6c:	f000 818b 	beq.w	8021d86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021a70:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8021a74:	b29b      	uxth	r3, r3
 8021a76:	2d00      	cmp	r5, #0
 8021a78:	f000 812e 	beq.w	8021cd8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8021a7c:	1aed      	subs	r5, r5, r3
 8021a7e:	b2ad      	uxth	r5, r5
 8021a80:	042b      	lsls	r3, r5, #16
 8021a82:	d502      	bpl.n	8021a8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8021a84:	1b64      	subs	r4, r4, r5
 8021a86:	b224      	sxth	r4, r4
 8021a88:	2500      	movs	r5, #0
 8021a8a:	f9b2 1000 	ldrsh.w	r1, [r2]
 8021a8e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8021a92:	428c      	cmp	r4, r1
 8021a94:	b28b      	uxth	r3, r1
 8021a96:	bfbf      	itttt	lt
 8021a98:	18ed      	addlt	r5, r5, r3
 8021a9a:	1b2c      	sublt	r4, r5, r4
 8021a9c:	b2a5      	uxthlt	r5, r4
 8021a9e:	460c      	movlt	r4, r1
 8021aa0:	8891      	ldrh	r1, [r2, #4]
 8021aa2:	440b      	add	r3, r1
 8021aa4:	b21b      	sxth	r3, r3
 8021aa6:	930f      	str	r3, [sp, #60]	; 0x3c
 8021aa8:	88d3      	ldrh	r3, [r2, #6]
 8021aaa:	8852      	ldrh	r2, [r2, #2]
 8021aac:	4413      	add	r3, r2
 8021aae:	b21b      	sxth	r3, r3
 8021ab0:	930d      	str	r3, [sp, #52]	; 0x34
 8021ab2:	4bbe      	ldr	r3, [pc, #760]	; (8021dac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8021ab4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021ab6:	f893 b000 	ldrb.w	fp, [r3]
 8021aba:	f10b 3cff 	add.w	ip, fp, #4294967295
 8021abe:	f1dc 0300 	rsbs	r3, ip, #0
 8021ac2:	eb43 030c 	adc.w	r3, r3, ip
 8021ac6:	930e      	str	r3, [sp, #56]	; 0x38
 8021ac8:	4621      	mov	r1, r4
 8021aca:	4653      	mov	r3, sl
 8021acc:	a814      	add	r0, sp, #80	; 0x50
 8021ace:	f7f6 fc90 	bl	80183f2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8021ad2:	4621      	mov	r1, r4
 8021ad4:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8021ad8:	4653      	mov	r3, sl
 8021ada:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021adc:	a814      	add	r0, sp, #80	; 0x50
 8021ade:	f7f6 fca5 	bl	801842c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8021ae2:	a918      	add	r1, sp, #96	; 0x60
 8021ae4:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8021ae8:	a817      	add	r0, sp, #92	; 0x5c
 8021aea:	f7f6 fdcb 	bl	8018684 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8021aee:	f1ba 0f00 	cmp.w	sl, #0
 8021af2:	f040 80f4 	bne.w	8021cde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8021af6:	f1bb 0f01 	cmp.w	fp, #1
 8021afa:	f040 80f8 	bne.w	8021cee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8021afe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021b00:	2b00      	cmp	r3, #0
 8021b02:	f040 8145 	bne.w	8021d90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8021b06:	b2ba      	uxth	r2, r7
 8021b08:	b905      	cbnz	r5, 8021b0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8021b0a:	b16e      	cbz	r6, 8021b28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8021b0c:	fb06 5302 	mla	r3, r6, r2, r5
 8021b10:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8021b12:	fb08 f303 	mul.w	r3, r8, r3
 8021b16:	4631      	mov	r1, r6
 8021b18:	f003 0607 	and.w	r6, r3, #7
 8021b1c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8021b20:	9328      	str	r3, [sp, #160]	; 0xa0
 8021b22:	eba9 0301 	sub.w	r3, r9, r1
 8021b26:	930a      	str	r3, [sp, #40]	; 0x28
 8021b28:	4651      	mov	r1, sl
 8021b2a:	980e      	ldr	r0, [sp, #56]	; 0x38
 8021b2c:	f7ff ff1c 	bl	8021968 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8021b30:	4681      	mov	r9, r0
 8021b32:	980e      	ldr	r0, [sp, #56]	; 0x38
 8021b34:	f7ff ff42 	bl	80219bc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8021b38:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021b3a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8021b3c:	eba3 0a01 	sub.w	sl, r3, r1
 8021b40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021b42:	459a      	cmp	sl, r3
 8021b44:	bfa8      	it	ge
 8021b46:	469a      	movge	sl, r3
 8021b48:	f1ba 0f00 	cmp.w	sl, #0
 8021b4c:	4683      	mov	fp, r0
 8021b4e:	f340 811a 	ble.w	8021d86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021b52:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021b54:	1b64      	subs	r4, r4, r5
 8021b56:	1b1c      	subs	r4, r3, r4
 8021b58:	42bc      	cmp	r4, r7
 8021b5a:	bfd4      	ite	le
 8021b5c:	ebc5 0504 	rsble	r5, r5, r4
 8021b60:	ebc5 0507 	rsbgt	r5, r5, r7
 8021b64:	2d00      	cmp	r5, #0
 8021b66:	f340 810e 	ble.w	8021d86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021b6a:	1b52      	subs	r2, r2, r5
 8021b6c:	fb08 f302 	mul.w	r3, r8, r2
 8021b70:	930f      	str	r3, [sp, #60]	; 0x3c
 8021b72:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021b74:	2b00      	cmp	r3, #0
 8021b76:	f040 8116 	bne.w	8021da6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8021b7a:	4b8d      	ldr	r3, [pc, #564]	; (8021db0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8021b7c:	6818      	ldr	r0, [r3, #0]
 8021b7e:	6803      	ldr	r3, [r0, #0]
 8021b80:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021b82:	4798      	blx	r3
 8021b84:	2301      	movs	r3, #1
 8021b86:	fa03 f308 	lsl.w	r3, r3, r8
 8021b8a:	4a8a      	ldr	r2, [pc, #552]	; (8021db4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8021b8c:	3b01      	subs	r3, #1
 8021b8e:	b2db      	uxtb	r3, r3
 8021b90:	8811      	ldrh	r1, [r2, #0]
 8021b92:	930e      	str	r3, [sp, #56]	; 0x38
 8021b94:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8021b98:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8021b9c:	fb01 2303 	mla	r3, r1, r3, r2
 8021ba0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8021ba4:	930a      	str	r3, [sp, #40]	; 0x28
 8021ba6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021ba8:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8021bac:	9313      	str	r3, [sp, #76]	; 0x4c
 8021bae:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021bb0:	0a19      	lsrs	r1, r3, #8
 8021bb2:	b2cb      	uxtb	r3, r1
 8021bb4:	9312      	str	r3, [sp, #72]	; 0x48
 8021bb6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021bb8:	b2db      	uxtb	r3, r3
 8021bba:	9311      	str	r3, [sp, #68]	; 0x44
 8021bbc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021bbe:	095a      	lsrs	r2, r3, #5
 8021bc0:	4b7d      	ldr	r3, [pc, #500]	; (8021db8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8021bc2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021bc6:	400b      	ands	r3, r1
 8021bc8:	4313      	orrs	r3, r2
 8021bca:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8021bcc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021bd0:	4313      	orrs	r3, r2
 8021bd2:	b29b      	uxth	r3, r3
 8021bd4:	9310      	str	r3, [sp, #64]	; 0x40
 8021bd6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021bd8:	781a      	ldrb	r2, [r3, #0]
 8021bda:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8021bde:	4132      	asrs	r2, r6
 8021be0:	fb05 b919 	mls	r9, r5, r9, fp
 8021be4:	fb03 fb05 	mul.w	fp, r3, r5
 8021be8:	b2d2      	uxtb	r2, r2
 8021bea:	930d      	str	r3, [sp, #52]	; 0x34
 8021bec:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8021bf0:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8021bf4:	f0c0 80f5 	bcc.w	8021de2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8021bf8:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8021bfc:	46ae      	mov	lr, r5
 8021bfe:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8021c02:	f0c0 80dd 	bcc.w	8021dc0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8021c06:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021c08:	4013      	ands	r3, r2
 8021c0a:	d055      	beq.n	8021cb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8021c0c:	20ff      	movs	r0, #255	; 0xff
 8021c0e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8021c10:	fb90 f1f1 	sdiv	r1, r0, r1
 8021c14:	434b      	muls	r3, r1
 8021c16:	2bfe      	cmp	r3, #254	; 0xfe
 8021c18:	dd03      	ble.n	8021c22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8021c1a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021c1c:	4281      	cmp	r1, r0
 8021c1e:	f000 80cd 	beq.w	8021dbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8021c22:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021c24:	f8bc 4000 	ldrh.w	r4, [ip]
 8021c28:	fb11 f303 	smulbb	r3, r1, r3
 8021c2c:	b29b      	uxth	r3, r3
 8021c2e:	1c59      	adds	r1, r3, #1
 8021c30:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8021c34:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021c38:	b29f      	uxth	r7, r3
 8021c3a:	43db      	mvns	r3, r3
 8021c3c:	b2db      	uxtb	r3, r3
 8021c3e:	9309      	str	r3, [sp, #36]	; 0x24
 8021c40:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021c42:	1220      	asrs	r0, r4, #8
 8021c44:	fb13 f907 	smulbb	r9, r3, r7
 8021c48:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021c4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021c4e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8021c52:	fb00 9003 	mla	r0, r0, r3, r9
 8021c56:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8021c58:	10e1      	asrs	r1, r4, #3
 8021c5a:	fb13 f907 	smulbb	r9, r3, r7
 8021c5e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021c62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021c64:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8021c68:	fb01 9103 	mla	r1, r1, r3, r9
 8021c6c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021c6e:	00e4      	lsls	r4, r4, #3
 8021c70:	fb13 f707 	smulbb	r7, r3, r7
 8021c74:	b2e4      	uxtb	r4, r4
 8021c76:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021c78:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8021c7c:	fb04 7403 	mla	r4, r4, r3, r7
 8021c80:	b280      	uxth	r0, r0
 8021c82:	b2a4      	uxth	r4, r4
 8021c84:	1c43      	adds	r3, r0, #1
 8021c86:	f104 0901 	add.w	r9, r4, #1
 8021c8a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021c8e:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8021c92:	b289      	uxth	r1, r1
 8021c94:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8021c98:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8021c9c:	ea49 0000 	orr.w	r0, r9, r0
 8021ca0:	f101 0901 	add.w	r9, r1, #1
 8021ca4:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8021ca8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021cac:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021cb0:	ea40 0009 	orr.w	r0, r0, r9
 8021cb4:	f8ac 0000 	strh.w	r0, [ip]
 8021cb8:	4446      	add	r6, r8
 8021cba:	b2b6      	uxth	r6, r6
 8021cbc:	2e07      	cmp	r6, #7
 8021cbe:	bf81      	itttt	hi
 8021cc0:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8021cc2:	785a      	ldrbhi	r2, [r3, #1]
 8021cc4:	3301      	addhi	r3, #1
 8021cc6:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8021cc8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021cca:	bf9a      	itte	ls
 8021ccc:	fa42 f208 	asrls.w	r2, r2, r8
 8021cd0:	b2d2      	uxtbls	r2, r2
 8021cd2:	2600      	movhi	r6, #0
 8021cd4:	449c      	add	ip, r3
 8021cd6:	e792      	b.n	8021bfe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8021cd8:	441c      	add	r4, r3
 8021cda:	b224      	sxth	r4, r4
 8021cdc:	e6d5      	b.n	8021a8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8021cde:	f1ba 0f01 	cmp.w	sl, #1
 8021ce2:	f47f af0c 	bne.w	8021afe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021ce6:	f1bb 0f01 	cmp.w	fp, #1
 8021cea:	f47f af08 	bne.w	8021afe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021cee:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8021db0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8021cf2:	f8db 0000 	ldr.w	r0, [fp]
 8021cf6:	6803      	ldr	r3, [r0, #0]
 8021cf8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8021cfa:	4798      	blx	r3
 8021cfc:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8021d00:	465a      	mov	r2, fp
 8021d02:	d006      	beq.n	8021d12 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8021d04:	f1b8 0f04 	cmp.w	r8, #4
 8021d08:	d140      	bne.n	8021d8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8021d0a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021d0c:	3300      	adds	r3, #0
 8021d0e:	bf18      	it	ne
 8021d10:	2301      	movne	r3, #1
 8021d12:	0580      	lsls	r0, r0, #22
 8021d14:	d56e      	bpl.n	8021df4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8021d16:	f1b8 0f08 	cmp.w	r8, #8
 8021d1a:	d16b      	bne.n	8021df4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8021d1c:	2b00      	cmp	r3, #0
 8021d1e:	bf0c      	ite	eq
 8021d20:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8021d24:	f44f 7180 	movne.w	r1, #256	; 0x100
 8021d28:	2d00      	cmp	r5, #0
 8021d2a:	f47f aee8 	bne.w	8021afe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021d2e:	2e00      	cmp	r6, #0
 8021d30:	f47f aee5 	bne.w	8021afe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021d34:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021d36:	19e3      	adds	r3, r4, r7
 8021d38:	4283      	cmp	r3, r0
 8021d3a:	f73f aee0 	bgt.w	8021afe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021d3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021d40:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021d42:	444b      	add	r3, r9
 8021d44:	4283      	cmp	r3, r0
 8021d46:	f73f aeda 	bgt.w	8021afe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021d4a:	6810      	ldr	r0, [r2, #0]
 8021d4c:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8021d50:	6804      	ldr	r4, [r0, #0]
 8021d52:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8021d56:	b2bf      	uxth	r7, r7
 8021d58:	f1b8 0f08 	cmp.w	r8, #8
 8021d5c:	f04f 0500 	mov.w	r5, #0
 8021d60:	bf18      	it	ne
 8021d62:	3701      	addne	r7, #1
 8021d64:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8021d68:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021d6a:	9104      	str	r1, [sp, #16]
 8021d6c:	bf18      	it	ne
 8021d6e:	f027 0701 	bicne.w	r7, r7, #1
 8021d72:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8021d74:	bf18      	it	ne
 8021d76:	b2bf      	uxthne	r7, r7
 8021d78:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8021d7c:	e9cd 7900 	strd	r7, r9, [sp]
 8021d80:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8021d82:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8021d84:	47a0      	blx	r4
 8021d86:	b019      	add	sp, #100	; 0x64
 8021d88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021d8c:	2300      	movs	r3, #0
 8021d8e:	e7c0      	b.n	8021d12 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8021d90:	2208      	movs	r2, #8
 8021d92:	fb92 f3f8 	sdiv	r3, r2, r8
 8021d96:	1e5a      	subs	r2, r3, #1
 8021d98:	443a      	add	r2, r7
 8021d9a:	fb92 f2f3 	sdiv	r2, r2, r3
 8021d9e:	fb12 f203 	smulbb	r2, r2, r3
 8021da2:	b292      	uxth	r2, r2
 8021da4:	e6b0      	b.n	8021b08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8021da6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8021da8:	e6ec      	b.n	8021b84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8021daa:	bf00      	nop
 8021dac:	20013844 	.word	0x20013844
 8021db0:	2001384c 	.word	0x2001384c
 8021db4:	20013846 	.word	0x20013846
 8021db8:	00fff800 	.word	0x00fff800
 8021dbc:	9810      	ldr	r0, [sp, #64]	; 0x40
 8021dbe:	e779      	b.n	8021cb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8021dc0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021dc2:	b153      	cbz	r3, 8021dda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8021dc4:	441e      	add	r6, r3
 8021dc6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021dc8:	b2b6      	uxth	r6, r6
 8021dca:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8021dce:	f006 0607 	and.w	r6, r6, #7
 8021dd2:	781a      	ldrb	r2, [r3, #0]
 8021dd4:	9328      	str	r3, [sp, #160]	; 0xa0
 8021dd6:	4132      	asrs	r2, r6
 8021dd8:	b2d2      	uxtb	r2, r2
 8021dda:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021ddc:	445b      	add	r3, fp
 8021dde:	930a      	str	r3, [sp, #40]	; 0x28
 8021de0:	e706      	b.n	8021bf0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8021de2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021de4:	2b00      	cmp	r3, #0
 8021de6:	d1ce      	bne.n	8021d86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021de8:	4b05      	ldr	r3, [pc, #20]	; (8021e00 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8021dea:	6818      	ldr	r0, [r3, #0]
 8021dec:	6803      	ldr	r3, [r0, #0]
 8021dee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021df0:	4798      	blx	r3
 8021df2:	e7c8      	b.n	8021d86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021df4:	2b00      	cmp	r3, #0
 8021df6:	f43f ae82 	beq.w	8021afe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021dfa:	f44f 7180 	mov.w	r1, #256	; 0x100
 8021dfe:	e793      	b.n	8021d28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8021e00:	2001384c 	.word	0x2001384c

08021e04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8021e04:	b538      	push	{r3, r4, r5, lr}
 8021e06:	4c15      	ldr	r4, [pc, #84]	; (8021e5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8021e08:	7823      	ldrb	r3, [r4, #0]
 8021e0a:	f3bf 8f5b 	dmb	ish
 8021e0e:	07da      	lsls	r2, r3, #31
 8021e10:	4605      	mov	r5, r0
 8021e12:	d40b      	bmi.n	8021e2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8021e14:	4620      	mov	r0, r4
 8021e16:	f00a ff8a 	bl	802cd2e <__cxa_guard_acquire>
 8021e1a:	b138      	cbz	r0, 8021e2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8021e1c:	4620      	mov	r0, r4
 8021e1e:	f00a ff92 	bl	802cd46 <__cxa_guard_release>
 8021e22:	4a0f      	ldr	r2, [pc, #60]	; (8021e60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8021e24:	490f      	ldr	r1, [pc, #60]	; (8021e64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8021e26:	4810      	ldr	r0, [pc, #64]	; (8021e68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8021e28:	f00a ff7a 	bl	802cd20 <__aeabi_atexit>
 8021e2c:	4c0f      	ldr	r4, [pc, #60]	; (8021e6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8021e2e:	7823      	ldrb	r3, [r4, #0]
 8021e30:	f3bf 8f5b 	dmb	ish
 8021e34:	07db      	lsls	r3, r3, #31
 8021e36:	d40b      	bmi.n	8021e50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8021e38:	4620      	mov	r0, r4
 8021e3a:	f00a ff78 	bl	802cd2e <__cxa_guard_acquire>
 8021e3e:	b138      	cbz	r0, 8021e50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8021e40:	4620      	mov	r0, r4
 8021e42:	f00a ff80 	bl	802cd46 <__cxa_guard_release>
 8021e46:	4a06      	ldr	r2, [pc, #24]	; (8021e60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8021e48:	4909      	ldr	r1, [pc, #36]	; (8021e70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8021e4a:	480a      	ldr	r0, [pc, #40]	; (8021e74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8021e4c:	f00a ff68 	bl	802cd20 <__aeabi_atexit>
 8021e50:	4b05      	ldr	r3, [pc, #20]	; (8021e68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8021e52:	612b      	str	r3, [r5, #16]
 8021e54:	4b07      	ldr	r3, [pc, #28]	; (8021e74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8021e56:	616b      	str	r3, [r5, #20]
 8021e58:	bd38      	pop	{r3, r4, r5, pc}
 8021e5a:	bf00      	nop
 8021e5c:	2001392c 	.word	0x2001392c
 8021e60:	20000000 	.word	0x20000000
 8021e64:	0801ec07 	.word	0x0801ec07
 8021e68:	200000d4 	.word	0x200000d4
 8021e6c:	20013930 	.word	0x20013930
 8021e70:	0801ec05 	.word	0x0801ec05
 8021e74:	200000d8 	.word	0x200000d8

08021e78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8021e78:	b538      	push	{r3, r4, r5, lr}
 8021e7a:	4c15      	ldr	r4, [pc, #84]	; (8021ed0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8021e7c:	7823      	ldrb	r3, [r4, #0]
 8021e7e:	f3bf 8f5b 	dmb	ish
 8021e82:	07da      	lsls	r2, r3, #31
 8021e84:	4605      	mov	r5, r0
 8021e86:	d40b      	bmi.n	8021ea0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8021e88:	4620      	mov	r0, r4
 8021e8a:	f00a ff50 	bl	802cd2e <__cxa_guard_acquire>
 8021e8e:	b138      	cbz	r0, 8021ea0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8021e90:	4620      	mov	r0, r4
 8021e92:	f00a ff58 	bl	802cd46 <__cxa_guard_release>
 8021e96:	4a0f      	ldr	r2, [pc, #60]	; (8021ed4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8021e98:	490f      	ldr	r1, [pc, #60]	; (8021ed8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8021e9a:	4810      	ldr	r0, [pc, #64]	; (8021edc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8021e9c:	f00a ff40 	bl	802cd20 <__aeabi_atexit>
 8021ea0:	4c0f      	ldr	r4, [pc, #60]	; (8021ee0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8021ea2:	7823      	ldrb	r3, [r4, #0]
 8021ea4:	f3bf 8f5b 	dmb	ish
 8021ea8:	07db      	lsls	r3, r3, #31
 8021eaa:	d40b      	bmi.n	8021ec4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8021eac:	4620      	mov	r0, r4
 8021eae:	f00a ff3e 	bl	802cd2e <__cxa_guard_acquire>
 8021eb2:	b138      	cbz	r0, 8021ec4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8021eb4:	4620      	mov	r0, r4
 8021eb6:	f00a ff46 	bl	802cd46 <__cxa_guard_release>
 8021eba:	4a06      	ldr	r2, [pc, #24]	; (8021ed4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8021ebc:	4909      	ldr	r1, [pc, #36]	; (8021ee4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8021ebe:	480a      	ldr	r0, [pc, #40]	; (8021ee8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8021ec0:	f00a ff2e 	bl	802cd20 <__aeabi_atexit>
 8021ec4:	4b05      	ldr	r3, [pc, #20]	; (8021edc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8021ec6:	60ab      	str	r3, [r5, #8]
 8021ec8:	4b07      	ldr	r3, [pc, #28]	; (8021ee8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8021eca:	60eb      	str	r3, [r5, #12]
 8021ecc:	bd38      	pop	{r3, r4, r5, pc}
 8021ece:	bf00      	nop
 8021ed0:	20013904 	.word	0x20013904
 8021ed4:	20000000 	.word	0x20000000
 8021ed8:	0801ec0b 	.word	0x0801ec0b
 8021edc:	200000ac 	.word	0x200000ac
 8021ee0:	20013908 	.word	0x20013908
 8021ee4:	0801ec09 	.word	0x0801ec09
 8021ee8:	200000b0 	.word	0x200000b0

08021eec <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8021eec:	b510      	push	{r4, lr}
 8021eee:	4604      	mov	r4, r0
 8021ef0:	f7ff ff88 	bl	8021e04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8021ef4:	4620      	mov	r0, r4
 8021ef6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021efa:	f7ff bfbd 	b.w	8021e78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08021f00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8021f00:	b538      	push	{r3, r4, r5, lr}
 8021f02:	4c15      	ldr	r4, [pc, #84]	; (8021f58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8021f04:	7823      	ldrb	r3, [r4, #0]
 8021f06:	f3bf 8f5b 	dmb	ish
 8021f0a:	07da      	lsls	r2, r3, #31
 8021f0c:	4605      	mov	r5, r0
 8021f0e:	d40b      	bmi.n	8021f28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8021f10:	4620      	mov	r0, r4
 8021f12:	f00a ff0c 	bl	802cd2e <__cxa_guard_acquire>
 8021f16:	b138      	cbz	r0, 8021f28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8021f18:	4620      	mov	r0, r4
 8021f1a:	f00a ff14 	bl	802cd46 <__cxa_guard_release>
 8021f1e:	4a0f      	ldr	r2, [pc, #60]	; (8021f5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8021f20:	490f      	ldr	r1, [pc, #60]	; (8021f60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8021f22:	4810      	ldr	r0, [pc, #64]	; (8021f64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8021f24:	f00a fefc 	bl	802cd20 <__aeabi_atexit>
 8021f28:	4c0f      	ldr	r4, [pc, #60]	; (8021f68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8021f2a:	7823      	ldrb	r3, [r4, #0]
 8021f2c:	f3bf 8f5b 	dmb	ish
 8021f30:	07db      	lsls	r3, r3, #31
 8021f32:	d40b      	bmi.n	8021f4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8021f34:	4620      	mov	r0, r4
 8021f36:	f00a fefa 	bl	802cd2e <__cxa_guard_acquire>
 8021f3a:	b138      	cbz	r0, 8021f4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8021f3c:	4620      	mov	r0, r4
 8021f3e:	f00a ff02 	bl	802cd46 <__cxa_guard_release>
 8021f42:	4a06      	ldr	r2, [pc, #24]	; (8021f5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8021f44:	4909      	ldr	r1, [pc, #36]	; (8021f6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8021f46:	480a      	ldr	r0, [pc, #40]	; (8021f70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8021f48:	f00a feea 	bl	802cd20 <__aeabi_atexit>
 8021f4c:	4b05      	ldr	r3, [pc, #20]	; (8021f64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8021f4e:	622b      	str	r3, [r5, #32]
 8021f50:	4b07      	ldr	r3, [pc, #28]	; (8021f70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8021f52:	626b      	str	r3, [r5, #36]	; 0x24
 8021f54:	bd38      	pop	{r3, r4, r5, pc}
 8021f56:	bf00      	nop
 8021f58:	20013934 	.word	0x20013934
 8021f5c:	20000000 	.word	0x20000000
 8021f60:	0801ebff 	.word	0x0801ebff
 8021f64:	200000dc 	.word	0x200000dc
 8021f68:	20013938 	.word	0x20013938
 8021f6c:	0801ebfd 	.word	0x0801ebfd
 8021f70:	200000e0 	.word	0x200000e0

08021f74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8021f74:	b538      	push	{r3, r4, r5, lr}
 8021f76:	4c15      	ldr	r4, [pc, #84]	; (8021fcc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8021f78:	7823      	ldrb	r3, [r4, #0]
 8021f7a:	f3bf 8f5b 	dmb	ish
 8021f7e:	07da      	lsls	r2, r3, #31
 8021f80:	4605      	mov	r5, r0
 8021f82:	d40b      	bmi.n	8021f9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8021f84:	4620      	mov	r0, r4
 8021f86:	f00a fed2 	bl	802cd2e <__cxa_guard_acquire>
 8021f8a:	b138      	cbz	r0, 8021f9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8021f8c:	4620      	mov	r0, r4
 8021f8e:	f00a feda 	bl	802cd46 <__cxa_guard_release>
 8021f92:	4a0f      	ldr	r2, [pc, #60]	; (8021fd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8021f94:	490f      	ldr	r1, [pc, #60]	; (8021fd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8021f96:	4810      	ldr	r0, [pc, #64]	; (8021fd8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8021f98:	f00a fec2 	bl	802cd20 <__aeabi_atexit>
 8021f9c:	4c0f      	ldr	r4, [pc, #60]	; (8021fdc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8021f9e:	7823      	ldrb	r3, [r4, #0]
 8021fa0:	f3bf 8f5b 	dmb	ish
 8021fa4:	07db      	lsls	r3, r3, #31
 8021fa6:	d40b      	bmi.n	8021fc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8021fa8:	4620      	mov	r0, r4
 8021faa:	f00a fec0 	bl	802cd2e <__cxa_guard_acquire>
 8021fae:	b138      	cbz	r0, 8021fc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8021fb0:	4620      	mov	r0, r4
 8021fb2:	f00a fec8 	bl	802cd46 <__cxa_guard_release>
 8021fb6:	4a06      	ldr	r2, [pc, #24]	; (8021fd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8021fb8:	4909      	ldr	r1, [pc, #36]	; (8021fe0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8021fba:	480a      	ldr	r0, [pc, #40]	; (8021fe4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8021fbc:	f00a feb0 	bl	802cd20 <__aeabi_atexit>
 8021fc0:	4b05      	ldr	r3, [pc, #20]	; (8021fd8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8021fc2:	61ab      	str	r3, [r5, #24]
 8021fc4:	4b07      	ldr	r3, [pc, #28]	; (8021fe4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8021fc6:	61eb      	str	r3, [r5, #28]
 8021fc8:	bd38      	pop	{r3, r4, r5, pc}
 8021fca:	bf00      	nop
 8021fcc:	2001390c 	.word	0x2001390c
 8021fd0:	20000000 	.word	0x20000000
 8021fd4:	0801ec03 	.word	0x0801ec03
 8021fd8:	200000b4 	.word	0x200000b4
 8021fdc:	20013910 	.word	0x20013910
 8021fe0:	0801ec01 	.word	0x0801ec01
 8021fe4:	200000b8 	.word	0x200000b8

08021fe8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8021fe8:	b510      	push	{r4, lr}
 8021fea:	4604      	mov	r4, r0
 8021fec:	f7ff ff88 	bl	8021f00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8021ff0:	4620      	mov	r0, r4
 8021ff2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021ff6:	f7ff bfbd 	b.w	8021f74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08021ffc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8021ffc:	b538      	push	{r3, r4, r5, lr}
 8021ffe:	4c15      	ldr	r4, [pc, #84]	; (8022054 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8022000:	7823      	ldrb	r3, [r4, #0]
 8022002:	f3bf 8f5b 	dmb	ish
 8022006:	07da      	lsls	r2, r3, #31
 8022008:	4605      	mov	r5, r0
 802200a:	d40b      	bmi.n	8022024 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 802200c:	4620      	mov	r0, r4
 802200e:	f00a fe8e 	bl	802cd2e <__cxa_guard_acquire>
 8022012:	b138      	cbz	r0, 8022024 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8022014:	4620      	mov	r0, r4
 8022016:	f00a fe96 	bl	802cd46 <__cxa_guard_release>
 802201a:	4a0f      	ldr	r2, [pc, #60]	; (8022058 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 802201c:	490f      	ldr	r1, [pc, #60]	; (802205c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 802201e:	4810      	ldr	r0, [pc, #64]	; (8022060 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8022020:	f00a fe7e 	bl	802cd20 <__aeabi_atexit>
 8022024:	4c0f      	ldr	r4, [pc, #60]	; (8022064 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8022026:	7823      	ldrb	r3, [r4, #0]
 8022028:	f3bf 8f5b 	dmb	ish
 802202c:	07db      	lsls	r3, r3, #31
 802202e:	d40b      	bmi.n	8022048 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8022030:	4620      	mov	r0, r4
 8022032:	f00a fe7c 	bl	802cd2e <__cxa_guard_acquire>
 8022036:	b138      	cbz	r0, 8022048 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8022038:	4620      	mov	r0, r4
 802203a:	f00a fe84 	bl	802cd46 <__cxa_guard_release>
 802203e:	4a06      	ldr	r2, [pc, #24]	; (8022058 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8022040:	4909      	ldr	r1, [pc, #36]	; (8022068 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8022042:	480a      	ldr	r0, [pc, #40]	; (802206c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8022044:	f00a fe6c 	bl	802cd20 <__aeabi_atexit>
 8022048:	4b05      	ldr	r3, [pc, #20]	; (8022060 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 802204a:	632b      	str	r3, [r5, #48]	; 0x30
 802204c:	4b07      	ldr	r3, [pc, #28]	; (802206c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 802204e:	636b      	str	r3, [r5, #52]	; 0x34
 8022050:	bd38      	pop	{r3, r4, r5, pc}
 8022052:	bf00      	nop
 8022054:	20013944 	.word	0x20013944
 8022058:	20000000 	.word	0x20000000
 802205c:	0801ebf7 	.word	0x0801ebf7
 8022060:	200000ec 	.word	0x200000ec
 8022064:	20013948 	.word	0x20013948
 8022068:	0801ebf5 	.word	0x0801ebf5
 802206c:	200000f0 	.word	0x200000f0

08022070 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8022070:	b538      	push	{r3, r4, r5, lr}
 8022072:	4c15      	ldr	r4, [pc, #84]	; (80220c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8022074:	7823      	ldrb	r3, [r4, #0]
 8022076:	f3bf 8f5b 	dmb	ish
 802207a:	07da      	lsls	r2, r3, #31
 802207c:	4605      	mov	r5, r0
 802207e:	d40b      	bmi.n	8022098 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8022080:	4620      	mov	r0, r4
 8022082:	f00a fe54 	bl	802cd2e <__cxa_guard_acquire>
 8022086:	b138      	cbz	r0, 8022098 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8022088:	4620      	mov	r0, r4
 802208a:	f00a fe5c 	bl	802cd46 <__cxa_guard_release>
 802208e:	4a0f      	ldr	r2, [pc, #60]	; (80220cc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8022090:	490f      	ldr	r1, [pc, #60]	; (80220d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8022092:	4810      	ldr	r0, [pc, #64]	; (80220d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8022094:	f00a fe44 	bl	802cd20 <__aeabi_atexit>
 8022098:	4c0f      	ldr	r4, [pc, #60]	; (80220d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 802209a:	7823      	ldrb	r3, [r4, #0]
 802209c:	f3bf 8f5b 	dmb	ish
 80220a0:	07db      	lsls	r3, r3, #31
 80220a2:	d40b      	bmi.n	80220bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80220a4:	4620      	mov	r0, r4
 80220a6:	f00a fe42 	bl	802cd2e <__cxa_guard_acquire>
 80220aa:	b138      	cbz	r0, 80220bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80220ac:	4620      	mov	r0, r4
 80220ae:	f00a fe4a 	bl	802cd46 <__cxa_guard_release>
 80220b2:	4a06      	ldr	r2, [pc, #24]	; (80220cc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80220b4:	4909      	ldr	r1, [pc, #36]	; (80220dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 80220b6:	480a      	ldr	r0, [pc, #40]	; (80220e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80220b8:	f00a fe32 	bl	802cd20 <__aeabi_atexit>
 80220bc:	4b05      	ldr	r3, [pc, #20]	; (80220d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80220be:	62ab      	str	r3, [r5, #40]	; 0x28
 80220c0:	4b07      	ldr	r3, [pc, #28]	; (80220e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80220c2:	62eb      	str	r3, [r5, #44]	; 0x2c
 80220c4:	bd38      	pop	{r3, r4, r5, pc}
 80220c6:	bf00      	nop
 80220c8:	20013914 	.word	0x20013914
 80220cc:	20000000 	.word	0x20000000
 80220d0:	0801ebfb 	.word	0x0801ebfb
 80220d4:	200000bc 	.word	0x200000bc
 80220d8:	20013918 	.word	0x20013918
 80220dc:	0801ebf9 	.word	0x0801ebf9
 80220e0:	200000c0 	.word	0x200000c0

080220e4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 80220e4:	b510      	push	{r4, lr}
 80220e6:	4604      	mov	r4, r0
 80220e8:	f7ff ff88 	bl	8021ffc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 80220ec:	4620      	mov	r0, r4
 80220ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80220f2:	f7ff bfbd 	b.w	8022070 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080220f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 80220f8:	b538      	push	{r3, r4, r5, lr}
 80220fa:	4c15      	ldr	r4, [pc, #84]	; (8022150 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80220fc:	7823      	ldrb	r3, [r4, #0]
 80220fe:	f3bf 8f5b 	dmb	ish
 8022102:	07da      	lsls	r2, r3, #31
 8022104:	4605      	mov	r5, r0
 8022106:	d40b      	bmi.n	8022120 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8022108:	4620      	mov	r0, r4
 802210a:	f00a fe10 	bl	802cd2e <__cxa_guard_acquire>
 802210e:	b138      	cbz	r0, 8022120 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8022110:	4620      	mov	r0, r4
 8022112:	f00a fe18 	bl	802cd46 <__cxa_guard_release>
 8022116:	4a0f      	ldr	r2, [pc, #60]	; (8022154 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8022118:	490f      	ldr	r1, [pc, #60]	; (8022158 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 802211a:	4810      	ldr	r0, [pc, #64]	; (802215c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 802211c:	f00a fe00 	bl	802cd20 <__aeabi_atexit>
 8022120:	4c0f      	ldr	r4, [pc, #60]	; (8022160 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8022122:	7823      	ldrb	r3, [r4, #0]
 8022124:	f3bf 8f5b 	dmb	ish
 8022128:	07db      	lsls	r3, r3, #31
 802212a:	d40b      	bmi.n	8022144 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 802212c:	4620      	mov	r0, r4
 802212e:	f00a fdfe 	bl	802cd2e <__cxa_guard_acquire>
 8022132:	b138      	cbz	r0, 8022144 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8022134:	4620      	mov	r0, r4
 8022136:	f00a fe06 	bl	802cd46 <__cxa_guard_release>
 802213a:	4a06      	ldr	r2, [pc, #24]	; (8022154 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 802213c:	4909      	ldr	r1, [pc, #36]	; (8022164 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 802213e:	480a      	ldr	r0, [pc, #40]	; (8022168 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8022140:	f00a fdee 	bl	802cd20 <__aeabi_atexit>
 8022144:	4b05      	ldr	r3, [pc, #20]	; (802215c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8022146:	652b      	str	r3, [r5, #80]	; 0x50
 8022148:	4b07      	ldr	r3, [pc, #28]	; (8022168 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 802214a:	656b      	str	r3, [r5, #84]	; 0x54
 802214c:	bd38      	pop	{r3, r4, r5, pc}
 802214e:	bf00      	nop
 8022150:	2001394c 	.word	0x2001394c
 8022154:	20000000 	.word	0x20000000
 8022158:	0801ebe7 	.word	0x0801ebe7
 802215c:	200000f4 	.word	0x200000f4
 8022160:	20013950 	.word	0x20013950
 8022164:	0801ebe5 	.word	0x0801ebe5
 8022168:	200000f8 	.word	0x200000f8

0802216c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 802216c:	b538      	push	{r3, r4, r5, lr}
 802216e:	4c15      	ldr	r4, [pc, #84]	; (80221c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8022170:	7823      	ldrb	r3, [r4, #0]
 8022172:	f3bf 8f5b 	dmb	ish
 8022176:	07da      	lsls	r2, r3, #31
 8022178:	4605      	mov	r5, r0
 802217a:	d40b      	bmi.n	8022194 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 802217c:	4620      	mov	r0, r4
 802217e:	f00a fdd6 	bl	802cd2e <__cxa_guard_acquire>
 8022182:	b138      	cbz	r0, 8022194 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8022184:	4620      	mov	r0, r4
 8022186:	f00a fdde 	bl	802cd46 <__cxa_guard_release>
 802218a:	4a0f      	ldr	r2, [pc, #60]	; (80221c8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 802218c:	490f      	ldr	r1, [pc, #60]	; (80221cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 802218e:	4810      	ldr	r0, [pc, #64]	; (80221d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8022190:	f00a fdc6 	bl	802cd20 <__aeabi_atexit>
 8022194:	4c0f      	ldr	r4, [pc, #60]	; (80221d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8022196:	7823      	ldrb	r3, [r4, #0]
 8022198:	f3bf 8f5b 	dmb	ish
 802219c:	07db      	lsls	r3, r3, #31
 802219e:	d40b      	bmi.n	80221b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80221a0:	4620      	mov	r0, r4
 80221a2:	f00a fdc4 	bl	802cd2e <__cxa_guard_acquire>
 80221a6:	b138      	cbz	r0, 80221b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80221a8:	4620      	mov	r0, r4
 80221aa:	f00a fdcc 	bl	802cd46 <__cxa_guard_release>
 80221ae:	4a06      	ldr	r2, [pc, #24]	; (80221c8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80221b0:	4909      	ldr	r1, [pc, #36]	; (80221d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80221b2:	480a      	ldr	r0, [pc, #40]	; (80221dc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80221b4:	f00a fdb4 	bl	802cd20 <__aeabi_atexit>
 80221b8:	4b05      	ldr	r3, [pc, #20]	; (80221d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80221ba:	64ab      	str	r3, [r5, #72]	; 0x48
 80221bc:	4b07      	ldr	r3, [pc, #28]	; (80221dc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80221be:	64eb      	str	r3, [r5, #76]	; 0x4c
 80221c0:	bd38      	pop	{r3, r4, r5, pc}
 80221c2:	bf00      	nop
 80221c4:	20013954 	.word	0x20013954
 80221c8:	20000000 	.word	0x20000000
 80221cc:	0801ebeb 	.word	0x0801ebeb
 80221d0:	200000fc 	.word	0x200000fc
 80221d4:	20013958 	.word	0x20013958
 80221d8:	0801ebe9 	.word	0x0801ebe9
 80221dc:	20000100 	.word	0x20000100

080221e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80221e0:	b538      	push	{r3, r4, r5, lr}
 80221e2:	4c15      	ldr	r4, [pc, #84]	; (8022238 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80221e4:	7823      	ldrb	r3, [r4, #0]
 80221e6:	f3bf 8f5b 	dmb	ish
 80221ea:	07da      	lsls	r2, r3, #31
 80221ec:	4605      	mov	r5, r0
 80221ee:	d40b      	bmi.n	8022208 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80221f0:	4620      	mov	r0, r4
 80221f2:	f00a fd9c 	bl	802cd2e <__cxa_guard_acquire>
 80221f6:	b138      	cbz	r0, 8022208 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80221f8:	4620      	mov	r0, r4
 80221fa:	f00a fda4 	bl	802cd46 <__cxa_guard_release>
 80221fe:	4a0f      	ldr	r2, [pc, #60]	; (802223c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8022200:	490f      	ldr	r1, [pc, #60]	; (8022240 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8022202:	4810      	ldr	r0, [pc, #64]	; (8022244 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8022204:	f00a fd8c 	bl	802cd20 <__aeabi_atexit>
 8022208:	4c0f      	ldr	r4, [pc, #60]	; (8022248 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 802220a:	7823      	ldrb	r3, [r4, #0]
 802220c:	f3bf 8f5b 	dmb	ish
 8022210:	07db      	lsls	r3, r3, #31
 8022212:	d40b      	bmi.n	802222c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8022214:	4620      	mov	r0, r4
 8022216:	f00a fd8a 	bl	802cd2e <__cxa_guard_acquire>
 802221a:	b138      	cbz	r0, 802222c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 802221c:	4620      	mov	r0, r4
 802221e:	f00a fd92 	bl	802cd46 <__cxa_guard_release>
 8022222:	4a06      	ldr	r2, [pc, #24]	; (802223c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8022224:	4909      	ldr	r1, [pc, #36]	; (802224c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8022226:	480a      	ldr	r0, [pc, #40]	; (8022250 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8022228:	f00a fd7a 	bl	802cd20 <__aeabi_atexit>
 802222c:	4b05      	ldr	r3, [pc, #20]	; (8022244 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 802222e:	642b      	str	r3, [r5, #64]	; 0x40
 8022230:	4b07      	ldr	r3, [pc, #28]	; (8022250 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8022232:	646b      	str	r3, [r5, #68]	; 0x44
 8022234:	bd38      	pop	{r3, r4, r5, pc}
 8022236:	bf00      	nop
 8022238:	2001391c 	.word	0x2001391c
 802223c:	20000000 	.word	0x20000000
 8022240:	0801ebef 	.word	0x0801ebef
 8022244:	200000c4 	.word	0x200000c4
 8022248:	20013920 	.word	0x20013920
 802224c:	0801ebed 	.word	0x0801ebed
 8022250:	200000c8 	.word	0x200000c8

08022254 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8022254:	b538      	push	{r3, r4, r5, lr}
 8022256:	4c15      	ldr	r4, [pc, #84]	; (80222ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8022258:	7823      	ldrb	r3, [r4, #0]
 802225a:	f3bf 8f5b 	dmb	ish
 802225e:	07da      	lsls	r2, r3, #31
 8022260:	4605      	mov	r5, r0
 8022262:	d40b      	bmi.n	802227c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8022264:	4620      	mov	r0, r4
 8022266:	f00a fd62 	bl	802cd2e <__cxa_guard_acquire>
 802226a:	b138      	cbz	r0, 802227c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 802226c:	4620      	mov	r0, r4
 802226e:	f00a fd6a 	bl	802cd46 <__cxa_guard_release>
 8022272:	4a0f      	ldr	r2, [pc, #60]	; (80222b0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8022274:	490f      	ldr	r1, [pc, #60]	; (80222b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8022276:	4810      	ldr	r0, [pc, #64]	; (80222b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8022278:	f00a fd52 	bl	802cd20 <__aeabi_atexit>
 802227c:	4c0f      	ldr	r4, [pc, #60]	; (80222bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 802227e:	7823      	ldrb	r3, [r4, #0]
 8022280:	f3bf 8f5b 	dmb	ish
 8022284:	07db      	lsls	r3, r3, #31
 8022286:	d40b      	bmi.n	80222a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8022288:	4620      	mov	r0, r4
 802228a:	f00a fd50 	bl	802cd2e <__cxa_guard_acquire>
 802228e:	b138      	cbz	r0, 80222a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8022290:	4620      	mov	r0, r4
 8022292:	f00a fd58 	bl	802cd46 <__cxa_guard_release>
 8022296:	4a06      	ldr	r2, [pc, #24]	; (80222b0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8022298:	4909      	ldr	r1, [pc, #36]	; (80222c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 802229a:	480a      	ldr	r0, [pc, #40]	; (80222c4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 802229c:	f00a fd40 	bl	802cd20 <__aeabi_atexit>
 80222a0:	4b05      	ldr	r3, [pc, #20]	; (80222b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80222a2:	63ab      	str	r3, [r5, #56]	; 0x38
 80222a4:	4b07      	ldr	r3, [pc, #28]	; (80222c4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80222a6:	63eb      	str	r3, [r5, #60]	; 0x3c
 80222a8:	bd38      	pop	{r3, r4, r5, pc}
 80222aa:	bf00      	nop
 80222ac:	2001393c 	.word	0x2001393c
 80222b0:	20000000 	.word	0x20000000
 80222b4:	0801ebf3 	.word	0x0801ebf3
 80222b8:	200000e4 	.word	0x200000e4
 80222bc:	20013940 	.word	0x20013940
 80222c0:	0801ebf1 	.word	0x0801ebf1
 80222c4:	200000e8 	.word	0x200000e8

080222c8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80222c8:	b510      	push	{r4, lr}
 80222ca:	4604      	mov	r4, r0
 80222cc:	f7ff ff14 	bl	80220f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80222d0:	4620      	mov	r0, r4
 80222d2:	f7ff ff85 	bl	80221e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80222d6:	4620      	mov	r0, r4
 80222d8:	f7ff ff48 	bl	802216c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80222dc:	4620      	mov	r0, r4
 80222de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80222e2:	f7ff bfb7 	b.w	8022254 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080222e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80222e8:	b538      	push	{r3, r4, r5, lr}
 80222ea:	4c15      	ldr	r4, [pc, #84]	; (8022340 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80222ec:	7823      	ldrb	r3, [r4, #0]
 80222ee:	f3bf 8f5b 	dmb	ish
 80222f2:	07da      	lsls	r2, r3, #31
 80222f4:	4605      	mov	r5, r0
 80222f6:	d40b      	bmi.n	8022310 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80222f8:	4620      	mov	r0, r4
 80222fa:	f00a fd18 	bl	802cd2e <__cxa_guard_acquire>
 80222fe:	b138      	cbz	r0, 8022310 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8022300:	4620      	mov	r0, r4
 8022302:	f00a fd20 	bl	802cd46 <__cxa_guard_release>
 8022306:	4a0f      	ldr	r2, [pc, #60]	; (8022344 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8022308:	490f      	ldr	r1, [pc, #60]	; (8022348 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 802230a:	4810      	ldr	r0, [pc, #64]	; (802234c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 802230c:	f00a fd08 	bl	802cd20 <__aeabi_atexit>
 8022310:	4c0f      	ldr	r4, [pc, #60]	; (8022350 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8022312:	7823      	ldrb	r3, [r4, #0]
 8022314:	f3bf 8f5b 	dmb	ish
 8022318:	07db      	lsls	r3, r3, #31
 802231a:	d40b      	bmi.n	8022334 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 802231c:	4620      	mov	r0, r4
 802231e:	f00a fd06 	bl	802cd2e <__cxa_guard_acquire>
 8022322:	b138      	cbz	r0, 8022334 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8022324:	4620      	mov	r0, r4
 8022326:	f00a fd0e 	bl	802cd46 <__cxa_guard_release>
 802232a:	4a06      	ldr	r2, [pc, #24]	; (8022344 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 802232c:	4909      	ldr	r1, [pc, #36]	; (8022354 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 802232e:	480a      	ldr	r0, [pc, #40]	; (8022358 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8022330:	f00a fcf6 	bl	802cd20 <__aeabi_atexit>
 8022334:	4b05      	ldr	r3, [pc, #20]	; (802234c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8022336:	662b      	str	r3, [r5, #96]	; 0x60
 8022338:	4b07      	ldr	r3, [pc, #28]	; (8022358 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 802233a:	666b      	str	r3, [r5, #100]	; 0x64
 802233c:	bd38      	pop	{r3, r4, r5, pc}
 802233e:	bf00      	nop
 8022340:	20013924 	.word	0x20013924
 8022344:	20000000 	.word	0x20000000
 8022348:	0801ebdf 	.word	0x0801ebdf
 802234c:	200000cc 	.word	0x200000cc
 8022350:	20013928 	.word	0x20013928
 8022354:	0801ebdd 	.word	0x0801ebdd
 8022358:	200000d0 	.word	0x200000d0

0802235c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 802235c:	b538      	push	{r3, r4, r5, lr}
 802235e:	4c15      	ldr	r4, [pc, #84]	; (80223b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8022360:	7823      	ldrb	r3, [r4, #0]
 8022362:	f3bf 8f5b 	dmb	ish
 8022366:	07da      	lsls	r2, r3, #31
 8022368:	4605      	mov	r5, r0
 802236a:	d40b      	bmi.n	8022384 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 802236c:	4620      	mov	r0, r4
 802236e:	f00a fcde 	bl	802cd2e <__cxa_guard_acquire>
 8022372:	b138      	cbz	r0, 8022384 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8022374:	4620      	mov	r0, r4
 8022376:	f00a fce6 	bl	802cd46 <__cxa_guard_release>
 802237a:	4a0f      	ldr	r2, [pc, #60]	; (80223b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 802237c:	490f      	ldr	r1, [pc, #60]	; (80223bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 802237e:	4810      	ldr	r0, [pc, #64]	; (80223c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8022380:	f00a fcce 	bl	802cd20 <__aeabi_atexit>
 8022384:	4c0f      	ldr	r4, [pc, #60]	; (80223c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8022386:	7823      	ldrb	r3, [r4, #0]
 8022388:	f3bf 8f5b 	dmb	ish
 802238c:	07db      	lsls	r3, r3, #31
 802238e:	d40b      	bmi.n	80223a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8022390:	4620      	mov	r0, r4
 8022392:	f00a fccc 	bl	802cd2e <__cxa_guard_acquire>
 8022396:	b138      	cbz	r0, 80223a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8022398:	4620      	mov	r0, r4
 802239a:	f00a fcd4 	bl	802cd46 <__cxa_guard_release>
 802239e:	4a06      	ldr	r2, [pc, #24]	; (80223b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80223a0:	4909      	ldr	r1, [pc, #36]	; (80223c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80223a2:	480a      	ldr	r0, [pc, #40]	; (80223cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80223a4:	f00a fcbc 	bl	802cd20 <__aeabi_atexit>
 80223a8:	4b05      	ldr	r3, [pc, #20]	; (80223c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80223aa:	65ab      	str	r3, [r5, #88]	; 0x58
 80223ac:	4b07      	ldr	r3, [pc, #28]	; (80223cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80223ae:	65eb      	str	r3, [r5, #92]	; 0x5c
 80223b0:	bd38      	pop	{r3, r4, r5, pc}
 80223b2:	bf00      	nop
 80223b4:	200138fc 	.word	0x200138fc
 80223b8:	20000000 	.word	0x20000000
 80223bc:	0801ebe3 	.word	0x0801ebe3
 80223c0:	200000a4 	.word	0x200000a4
 80223c4:	20013900 	.word	0x20013900
 80223c8:	0801ebe1 	.word	0x0801ebe1
 80223cc:	200000a8 	.word	0x200000a8

080223d0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80223d0:	b510      	push	{r4, lr}
 80223d2:	4604      	mov	r4, r0
 80223d4:	f7ff ff88 	bl	80222e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80223d8:	4620      	mov	r0, r4
 80223da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80223de:	f7ff bfbd 	b.w	802235c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080223e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80223e4:	b538      	push	{r3, r4, r5, lr}
 80223e6:	4c15      	ldr	r4, [pc, #84]	; (802243c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80223e8:	7823      	ldrb	r3, [r4, #0]
 80223ea:	f3bf 8f5b 	dmb	ish
 80223ee:	07da      	lsls	r2, r3, #31
 80223f0:	4605      	mov	r5, r0
 80223f2:	d40b      	bmi.n	802240c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80223f4:	4620      	mov	r0, r4
 80223f6:	f00a fc9a 	bl	802cd2e <__cxa_guard_acquire>
 80223fa:	b138      	cbz	r0, 802240c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80223fc:	4620      	mov	r0, r4
 80223fe:	f00a fca2 	bl	802cd46 <__cxa_guard_release>
 8022402:	4a0f      	ldr	r2, [pc, #60]	; (8022440 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8022404:	490f      	ldr	r1, [pc, #60]	; (8022444 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8022406:	4810      	ldr	r0, [pc, #64]	; (8022448 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8022408:	f00a fc8a 	bl	802cd20 <__aeabi_atexit>
 802240c:	4c0f      	ldr	r4, [pc, #60]	; (802244c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 802240e:	7823      	ldrb	r3, [r4, #0]
 8022410:	f3bf 8f5b 	dmb	ish
 8022414:	07db      	lsls	r3, r3, #31
 8022416:	d40b      	bmi.n	8022430 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8022418:	4620      	mov	r0, r4
 802241a:	f00a fc88 	bl	802cd2e <__cxa_guard_acquire>
 802241e:	b138      	cbz	r0, 8022430 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8022420:	4620      	mov	r0, r4
 8022422:	f00a fc90 	bl	802cd46 <__cxa_guard_release>
 8022426:	4a06      	ldr	r2, [pc, #24]	; (8022440 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8022428:	4909      	ldr	r1, [pc, #36]	; (8022450 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 802242a:	480a      	ldr	r0, [pc, #40]	; (8022454 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 802242c:	f00a fc78 	bl	802cd20 <__aeabi_atexit>
 8022430:	4b05      	ldr	r3, [pc, #20]	; (8022448 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8022432:	672b      	str	r3, [r5, #112]	; 0x70
 8022434:	4b07      	ldr	r3, [pc, #28]	; (8022454 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8022436:	676b      	str	r3, [r5, #116]	; 0x74
 8022438:	bd38      	pop	{r3, r4, r5, pc}
 802243a:	bf00      	nop
 802243c:	200138f4 	.word	0x200138f4
 8022440:	20000000 	.word	0x20000000
 8022444:	0801ebd7 	.word	0x0801ebd7
 8022448:	2000009c 	.word	0x2000009c
 802244c:	200138f8 	.word	0x200138f8
 8022450:	0801ebd5 	.word	0x0801ebd5
 8022454:	200000a0 	.word	0x200000a0

08022458 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8022458:	b538      	push	{r3, r4, r5, lr}
 802245a:	4c15      	ldr	r4, [pc, #84]	; (80224b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 802245c:	7823      	ldrb	r3, [r4, #0]
 802245e:	f3bf 8f5b 	dmb	ish
 8022462:	07da      	lsls	r2, r3, #31
 8022464:	4605      	mov	r5, r0
 8022466:	d40b      	bmi.n	8022480 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8022468:	4620      	mov	r0, r4
 802246a:	f00a fc60 	bl	802cd2e <__cxa_guard_acquire>
 802246e:	b138      	cbz	r0, 8022480 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8022470:	4620      	mov	r0, r4
 8022472:	f00a fc68 	bl	802cd46 <__cxa_guard_release>
 8022476:	4a0f      	ldr	r2, [pc, #60]	; (80224b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8022478:	490f      	ldr	r1, [pc, #60]	; (80224b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 802247a:	4810      	ldr	r0, [pc, #64]	; (80224bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 802247c:	f00a fc50 	bl	802cd20 <__aeabi_atexit>
 8022480:	4c0f      	ldr	r4, [pc, #60]	; (80224c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8022482:	7823      	ldrb	r3, [r4, #0]
 8022484:	f3bf 8f5b 	dmb	ish
 8022488:	07db      	lsls	r3, r3, #31
 802248a:	d40b      	bmi.n	80224a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 802248c:	4620      	mov	r0, r4
 802248e:	f00a fc4e 	bl	802cd2e <__cxa_guard_acquire>
 8022492:	b138      	cbz	r0, 80224a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8022494:	4620      	mov	r0, r4
 8022496:	f00a fc56 	bl	802cd46 <__cxa_guard_release>
 802249a:	4a06      	ldr	r2, [pc, #24]	; (80224b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 802249c:	4909      	ldr	r1, [pc, #36]	; (80224c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 802249e:	480a      	ldr	r0, [pc, #40]	; (80224c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80224a0:	f00a fc3e 	bl	802cd20 <__aeabi_atexit>
 80224a4:	4b05      	ldr	r3, [pc, #20]	; (80224bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80224a6:	66ab      	str	r3, [r5, #104]	; 0x68
 80224a8:	4b07      	ldr	r3, [pc, #28]	; (80224c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80224aa:	66eb      	str	r3, [r5, #108]	; 0x6c
 80224ac:	bd38      	pop	{r3, r4, r5, pc}
 80224ae:	bf00      	nop
 80224b0:	200138ec 	.word	0x200138ec
 80224b4:	20000000 	.word	0x20000000
 80224b8:	0801ebdb 	.word	0x0801ebdb
 80224bc:	20000094 	.word	0x20000094
 80224c0:	200138f0 	.word	0x200138f0
 80224c4:	0801ebd9 	.word	0x0801ebd9
 80224c8:	20000098 	.word	0x20000098

080224cc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80224cc:	b510      	push	{r4, lr}
 80224ce:	4604      	mov	r4, r0
 80224d0:	f7ff ff88 	bl	80223e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80224d4:	4620      	mov	r0, r4
 80224d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80224da:	f7ff bfbd 	b.w	8022458 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080224de <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80224de:	b510      	push	{r4, lr}
 80224e0:	4604      	mov	r4, r0
 80224e2:	f7ff fff3 	bl	80224cc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80224e6:	4620      	mov	r0, r4
 80224e8:	f7ff ff72 	bl	80223d0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80224ec:	4620      	mov	r0, r4
 80224ee:	f7ff fdf9 	bl	80220e4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80224f2:	4620      	mov	r0, r4
 80224f4:	f7ff fcfa 	bl	8021eec <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80224f8:	4620      	mov	r0, r4
 80224fa:	f7ff fd75 	bl	8021fe8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80224fe:	4620      	mov	r0, r4
 8022500:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022504:	f7ff bee0 	b.w	80222c8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08022508 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8022508:	b538      	push	{r3, r4, r5, lr}
 802250a:	4c0b      	ldr	r4, [pc, #44]	; (8022538 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 802250c:	7823      	ldrb	r3, [r4, #0]
 802250e:	f3bf 8f5b 	dmb	ish
 8022512:	07db      	lsls	r3, r3, #31
 8022514:	4605      	mov	r5, r0
 8022516:	d40b      	bmi.n	8022530 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8022518:	4620      	mov	r0, r4
 802251a:	f00a fc08 	bl	802cd2e <__cxa_guard_acquire>
 802251e:	b138      	cbz	r0, 8022530 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8022520:	4620      	mov	r0, r4
 8022522:	f00a fc10 	bl	802cd46 <__cxa_guard_release>
 8022526:	4a05      	ldr	r2, [pc, #20]	; (802253c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8022528:	4905      	ldr	r1, [pc, #20]	; (8022540 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 802252a:	4806      	ldr	r0, [pc, #24]	; (8022544 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 802252c:	f00a fbf8 	bl	802cd20 <__aeabi_atexit>
 8022530:	4b04      	ldr	r3, [pc, #16]	; (8022544 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8022532:	67ab      	str	r3, [r5, #120]	; 0x78
 8022534:	bd38      	pop	{r3, r4, r5, pc}
 8022536:	bf00      	nop
 8022538:	200138e0 	.word	0x200138e0
 802253c:	20000000 	.word	0x20000000
 8022540:	0801ebd3 	.word	0x0801ebd3
 8022544:	2000008c 	.word	0x2000008c

08022548 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8022548:	b538      	push	{r3, r4, r5, lr}
 802254a:	4c0b      	ldr	r4, [pc, #44]	; (8022578 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 802254c:	7823      	ldrb	r3, [r4, #0]
 802254e:	f3bf 8f5b 	dmb	ish
 8022552:	07db      	lsls	r3, r3, #31
 8022554:	4605      	mov	r5, r0
 8022556:	d40b      	bmi.n	8022570 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8022558:	4620      	mov	r0, r4
 802255a:	f00a fbe8 	bl	802cd2e <__cxa_guard_acquire>
 802255e:	b138      	cbz	r0, 8022570 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8022560:	4620      	mov	r0, r4
 8022562:	f00a fbf0 	bl	802cd46 <__cxa_guard_release>
 8022566:	4a05      	ldr	r2, [pc, #20]	; (802257c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8022568:	4905      	ldr	r1, [pc, #20]	; (8022580 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 802256a:	4806      	ldr	r0, [pc, #24]	; (8022584 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 802256c:	f00a fbd8 	bl	802cd20 <__aeabi_atexit>
 8022570:	4b04      	ldr	r3, [pc, #16]	; (8022584 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8022572:	67eb      	str	r3, [r5, #124]	; 0x7c
 8022574:	bd38      	pop	{r3, r4, r5, pc}
 8022576:	bf00      	nop
 8022578:	200138e4 	.word	0x200138e4
 802257c:	20000000 	.word	0x20000000
 8022580:	0801ebd1 	.word	0x0801ebd1
 8022584:	20000090 	.word	0x20000090

08022588 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8022588:	b570      	push	{r4, r5, r6, lr}
 802258a:	4d0d      	ldr	r5, [pc, #52]	; (80225c0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 802258c:	4c0d      	ldr	r4, [pc, #52]	; (80225c4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 802258e:	782b      	ldrb	r3, [r5, #0]
 8022590:	f3bf 8f5b 	dmb	ish
 8022594:	f013 0f01 	tst.w	r3, #1
 8022598:	4606      	mov	r6, r0
 802259a:	d10d      	bne.n	80225b8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 802259c:	4628      	mov	r0, r5
 802259e:	f00a fbc6 	bl	802cd2e <__cxa_guard_acquire>
 80225a2:	b148      	cbz	r0, 80225b8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80225a4:	4b08      	ldr	r3, [pc, #32]	; (80225c8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 80225a6:	6023      	str	r3, [r4, #0]
 80225a8:	4628      	mov	r0, r5
 80225aa:	f00a fbcc 	bl	802cd46 <__cxa_guard_release>
 80225ae:	4a07      	ldr	r2, [pc, #28]	; (80225cc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 80225b0:	4907      	ldr	r1, [pc, #28]	; (80225d0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 80225b2:	4620      	mov	r0, r4
 80225b4:	f00a fbb4 	bl	802cd20 <__aeabi_atexit>
 80225b8:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 80225bc:	bd70      	pop	{r4, r5, r6, pc}
 80225be:	bf00      	nop
 80225c0:	200138e8 	.word	0x200138e8
 80225c4:	2001395c 	.word	0x2001395c
 80225c8:	080320ec 	.word	0x080320ec
 80225cc:	20000000 	.word	0x20000000
 80225d0:	0801ebcf 	.word	0x0801ebcf

080225d4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 80225d4:	b510      	push	{r4, lr}
 80225d6:	4604      	mov	r4, r0
 80225d8:	f7ff ff96 	bl	8022508 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 80225dc:	4620      	mov	r0, r4
 80225de:	f7ff ffb3 	bl	8022548 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 80225e2:	4620      	mov	r0, r4
 80225e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80225e8:	f7ff bfce 	b.w	8022588 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

080225ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80225ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80225f0:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 80225f4:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 80225f8:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 80225fc:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8022600:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8022604:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8022608:	8808      	ldrh	r0, [r1, #0]
 802260a:	fb05 4c0e 	mla	ip, r5, lr, r4
 802260e:	2d00      	cmp	r5, #0
 8022610:	eb02 0a0c 	add.w	sl, r2, ip
 8022614:	f2c0 80b0 	blt.w	8022778 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8022618:	45ab      	cmp	fp, r5
 802261a:	f340 80ad 	ble.w	8022778 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 802261e:	2c00      	cmp	r4, #0
 8022620:	f2c0 80a8 	blt.w	8022774 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8022624:	45a6      	cmp	lr, r4
 8022626:	f340 80a5 	ble.w	8022774 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 802262a:	f812 200c 	ldrb.w	r2, [r2, ip]
 802262e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8022632:	1c62      	adds	r2, r4, #1
 8022634:	f100 80a3 	bmi.w	802277e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8022638:	4596      	cmp	lr, r2
 802263a:	f340 80a0 	ble.w	802277e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 802263e:	f1b9 0f00 	cmp.w	r9, #0
 8022642:	f000 809c 	beq.w	802277e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8022646:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802264a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 802264e:	3501      	adds	r5, #1
 8022650:	f100 8099 	bmi.w	8022786 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8022654:	45ab      	cmp	fp, r5
 8022656:	f340 8096 	ble.w	8022786 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 802265a:	2f00      	cmp	r7, #0
 802265c:	f000 8093 	beq.w	8022786 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8022660:	2c00      	cmp	r4, #0
 8022662:	f2c0 808e 	blt.w	8022782 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8022666:	45a6      	cmp	lr, r4
 8022668:	f340 808b 	ble.w	8022782 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 802266c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8022670:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8022674:	3401      	adds	r4, #1
 8022676:	f100 8089 	bmi.w	802278c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 802267a:	45a6      	cmp	lr, r4
 802267c:	f340 8086 	ble.w	802278c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8022680:	f1b9 0f00 	cmp.w	r9, #0
 8022684:	f000 8082 	beq.w	802278c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8022688:	44d6      	add	lr, sl
 802268a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802268e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8022692:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8022696:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802269a:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 802269e:	fb19 fe07 	smulbb	lr, r9, r7
 80226a2:	ea44 0808 	orr.w	r8, r4, r8
 80226a6:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80226aa:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80226ae:	f1c7 0210 	rsb	r2, r7, #16
 80226b2:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80226b6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80226ba:	ea44 0c0c 	orr.w	ip, r4, ip
 80226be:	eba2 0209 	sub.w	r2, r2, r9
 80226c2:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80226c6:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80226ca:	fb04 f40c 	mul.w	r4, r4, ip
 80226ce:	fb02 4808 	mla	r8, r2, r8, r4
 80226d2:	041a      	lsls	r2, r3, #16
 80226d4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80226d8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80226dc:	4313      	orrs	r3, r2
 80226de:	042a      	lsls	r2, r5, #16
 80226e0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80226e4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80226e8:	fb0e 8303 	mla	r3, lr, r3, r8
 80226ec:	432a      	orrs	r2, r5
 80226ee:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80226f2:	fb07 3202 	mla	r2, r7, r2, r3
 80226f6:	0d53      	lsrs	r3, r2, #21
 80226f8:	0952      	lsrs	r2, r2, #5
 80226fa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80226fe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022702:	431a      	orrs	r2, r3
 8022704:	b293      	uxth	r3, r2
 8022706:	b2b4      	uxth	r4, r6
 8022708:	1202      	asrs	r2, r0, #8
 802270a:	43f6      	mvns	r6, r6
 802270c:	b2f6      	uxtb	r6, r6
 802270e:	121d      	asrs	r5, r3, #8
 8022710:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022714:	fb12 f206 	smulbb	r2, r2, r6
 8022718:	10c7      	asrs	r7, r0, #3
 802271a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802271e:	00c0      	lsls	r0, r0, #3
 8022720:	fb05 2504 	mla	r5, r5, r4, r2
 8022724:	b2c0      	uxtb	r0, r0
 8022726:	10da      	asrs	r2, r3, #3
 8022728:	00db      	lsls	r3, r3, #3
 802272a:	b2db      	uxtb	r3, r3
 802272c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022730:	fb10 f006 	smulbb	r0, r0, r6
 8022734:	b2ad      	uxth	r5, r5
 8022736:	fb03 0004 	mla	r0, r3, r4, r0
 802273a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802273e:	fb17 f706 	smulbb	r7, r7, r6
 8022742:	b280      	uxth	r0, r0
 8022744:	1c6b      	adds	r3, r5, #1
 8022746:	fb02 7204 	mla	r2, r2, r4, r7
 802274a:	b292      	uxth	r2, r2
 802274c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022750:	1c43      	adds	r3, r0, #1
 8022752:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022756:	1c50      	adds	r0, r2, #1
 8022758:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802275c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022760:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022764:	0952      	lsrs	r2, r2, #5
 8022766:	432b      	orrs	r3, r5
 8022768:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802276c:	4313      	orrs	r3, r2
 802276e:	800b      	strh	r3, [r1, #0]
 8022770:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022774:	4680      	mov	r8, r0
 8022776:	e75c      	b.n	8022632 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8022778:	4684      	mov	ip, r0
 802277a:	4680      	mov	r8, r0
 802277c:	e767      	b.n	802264e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 802277e:	4684      	mov	ip, r0
 8022780:	e765      	b.n	802264e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8022782:	4605      	mov	r5, r0
 8022784:	e776      	b.n	8022674 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8022786:	4603      	mov	r3, r0
 8022788:	4605      	mov	r5, r0
 802278a:	e782      	b.n	8022692 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 802278c:	4603      	mov	r3, r0
 802278e:	e780      	b.n	8022692 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08022790 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022790:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022794:	b099      	sub	sp, #100	; 0x64
 8022796:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 802279a:	9215      	str	r2, [sp, #84]	; 0x54
 802279c:	9309      	str	r3, [sp, #36]	; 0x24
 802279e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80227a0:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 80227a4:	930d      	str	r3, [sp, #52]	; 0x34
 80227a6:	910c      	str	r1, [sp, #48]	; 0x30
 80227a8:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 80227ac:	9016      	str	r0, [sp, #88]	; 0x58
 80227ae:	6850      	ldr	r0, [r2, #4]
 80227b0:	6812      	ldr	r2, [r2, #0]
 80227b2:	fb00 1303 	mla	r3, r0, r3, r1
 80227b6:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80227ba:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80227bc:	681b      	ldr	r3, [r3, #0]
 80227be:	930b      	str	r3, [sp, #44]	; 0x2c
 80227c0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80227c2:	685e      	ldr	r6, [r3, #4]
 80227c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80227c6:	43db      	mvns	r3, r3
 80227c8:	b2db      	uxtb	r3, r3
 80227ca:	3604      	adds	r6, #4
 80227cc:	930a      	str	r3, [sp, #40]	; 0x28
 80227ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80227d0:	2b00      	cmp	r3, #0
 80227d2:	dc03      	bgt.n	80227dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80227d4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80227d6:	2b00      	cmp	r3, #0
 80227d8:	f340 8225 	ble.w	8022c26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80227dc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80227de:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80227e2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80227e6:	1e48      	subs	r0, r1, #1
 80227e8:	1e57      	subs	r7, r2, #1
 80227ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80227ec:	2b00      	cmp	r3, #0
 80227ee:	f340 80e3 	ble.w	80229b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80227f2:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80227f6:	ea4f 4325 	mov.w	r3, r5, asr #16
 80227fa:	d406      	bmi.n	802280a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80227fc:	4584      	cmp	ip, r0
 80227fe:	da04      	bge.n	802280a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022800:	2b00      	cmp	r3, #0
 8022802:	db02      	blt.n	802280a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022804:	42bb      	cmp	r3, r7
 8022806:	f2c0 80d8 	blt.w	80229ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802280a:	f11c 0c01 	adds.w	ip, ip, #1
 802280e:	f100 80c9 	bmi.w	80229a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022812:	4561      	cmp	r1, ip
 8022814:	f2c0 80c6 	blt.w	80229a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022818:	3301      	adds	r3, #1
 802281a:	f100 80c3 	bmi.w	80229a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 802281e:	429a      	cmp	r2, r3
 8022820:	f2c0 80c0 	blt.w	80229a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022824:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8022828:	4647      	mov	r7, r8
 802282a:	f1bb 0f00 	cmp.w	fp, #0
 802282e:	f340 80e3 	ble.w	80229f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8022832:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8022834:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022836:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802283a:	689b      	ldr	r3, [r3, #8]
 802283c:	ea5f 422a 	movs.w	r2, sl, asr #16
 8022840:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8022844:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8022848:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802284c:	f100 8121 	bmi.w	8022a92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8022850:	f103 39ff 	add.w	r9, r3, #4294967295
 8022854:	454a      	cmp	r2, r9
 8022856:	f280 811c 	bge.w	8022a92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 802285a:	f1bc 0f00 	cmp.w	ip, #0
 802285e:	f2c0 8118 	blt.w	8022a92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8022862:	f10e 39ff 	add.w	r9, lr, #4294967295
 8022866:	45cc      	cmp	ip, r9
 8022868:	f280 8113 	bge.w	8022a92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 802286c:	b21b      	sxth	r3, r3
 802286e:	fb0c 2203 	mla	r2, ip, r3, r2
 8022872:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022874:	eb04 0902 	add.w	r9, r4, r2
 8022878:	5ca2      	ldrb	r2, [r4, r2]
 802287a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 802287e:	2800      	cmp	r0, #0
 8022880:	f000 80fe 	beq.w	8022a80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8022884:	f899 2001 	ldrb.w	r2, [r9, #1]
 8022888:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802288c:	9211      	str	r2, [sp, #68]	; 0x44
 802288e:	b151      	cbz	r1, 80228a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8022890:	eb09 0203 	add.w	r2, r9, r3
 8022894:	f819 3003 	ldrb.w	r3, [r9, r3]
 8022898:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802289c:	930f      	str	r3, [sp, #60]	; 0x3c
 802289e:	7853      	ldrb	r3, [r2, #1]
 80228a0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80228a4:	9312      	str	r3, [sp, #72]	; 0x48
 80228a6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80228a8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80228aa:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80228ae:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80228b2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80228b6:	ea4c 0c03 	orr.w	ip, ip, r3
 80228ba:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80228bc:	041b      	lsls	r3, r3, #16
 80228be:	fb10 f201 	smulbb	r2, r0, r1
 80228c2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80228c6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80228ca:	10d2      	asrs	r2, r2, #3
 80228cc:	4323      	orrs	r3, r4
 80228ce:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 80228d2:	4353      	muls	r3, r2
 80228d4:	fb09 330c 	mla	r3, r9, ip, r3
 80228d8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80228dc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80228e0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80228e4:	ea4c 0e0e 	orr.w	lr, ip, lr
 80228e8:	f1c1 0c10 	rsb	ip, r1, #16
 80228ec:	ebac 0c00 	sub.w	ip, ip, r0
 80228f0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80228f4:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80228f8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80228fa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80228fc:	0418      	lsls	r0, r3, #16
 80228fe:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022902:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022906:	4318      	orrs	r0, r3
 8022908:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 802290c:	fb02 c200 	mla	r2, r2, r0, ip
 8022910:	0d53      	lsrs	r3, r2, #21
 8022912:	0952      	lsrs	r2, r2, #5
 8022914:	8838      	ldrh	r0, [r7, #0]
 8022916:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802291a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802291e:	431a      	orrs	r2, r3
 8022920:	b292      	uxth	r2, r2
 8022922:	1201      	asrs	r1, r0, #8
 8022924:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8022928:	ea4f 2c22 	mov.w	ip, r2, asr #8
 802292c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022930:	fb11 f104 	smulbb	r1, r1, r4
 8022934:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022938:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802293c:	00c0      	lsls	r0, r0, #3
 802293e:	fb0c 1c03 	mla	ip, ip, r3, r1
 8022942:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8022946:	10d1      	asrs	r1, r2, #3
 8022948:	b2c0      	uxtb	r0, r0
 802294a:	00d2      	lsls	r2, r2, #3
 802294c:	b2d2      	uxtb	r2, r2
 802294e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022952:	fb1e fe04 	smulbb	lr, lr, r4
 8022956:	fb10 f004 	smulbb	r0, r0, r4
 802295a:	fa1f fc8c 	uxth.w	ip, ip
 802295e:	fb01 e103 	mla	r1, r1, r3, lr
 8022962:	fb02 0303 	mla	r3, r2, r3, r0
 8022966:	b29a      	uxth	r2, r3
 8022968:	f10c 0301 	add.w	r3, ip, #1
 802296c:	b289      	uxth	r1, r1
 802296e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8022972:	1c53      	adds	r3, r2, #1
 8022974:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022978:	1c4a      	adds	r2, r1, #1
 802297a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802297e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8022982:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022986:	0949      	lsrs	r1, r1, #5
 8022988:	ea43 030c 	orr.w	r3, r3, ip
 802298c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022990:	430b      	orrs	r3, r1
 8022992:	803b      	strh	r3, [r7, #0]
 8022994:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022996:	449a      	add	sl, r3
 8022998:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802299a:	3702      	adds	r7, #2
 802299c:	441d      	add	r5, r3
 802299e:	f10b 3bff 	add.w	fp, fp, #4294967295
 80229a2:	e742      	b.n	802282a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80229a4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80229a6:	449a      	add	sl, r3
 80229a8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80229aa:	441d      	add	r5, r3
 80229ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80229ae:	3b01      	subs	r3, #1
 80229b0:	9309      	str	r3, [sp, #36]	; 0x24
 80229b2:	f108 0802 	add.w	r8, r8, #2
 80229b6:	e718      	b.n	80227ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80229b8:	d023      	beq.n	8022a02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80229ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80229bc:	9825      	ldr	r0, [sp, #148]	; 0x94
 80229be:	3b01      	subs	r3, #1
 80229c0:	fb00 a003 	mla	r0, r0, r3, sl
 80229c4:	1400      	asrs	r0, r0, #16
 80229c6:	f53f af2d 	bmi.w	8022824 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80229ca:	3901      	subs	r1, #1
 80229cc:	4288      	cmp	r0, r1
 80229ce:	f6bf af29 	bge.w	8022824 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80229d2:	9926      	ldr	r1, [sp, #152]	; 0x98
 80229d4:	fb01 5303 	mla	r3, r1, r3, r5
 80229d8:	141b      	asrs	r3, r3, #16
 80229da:	f53f af23 	bmi.w	8022824 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80229de:	3a01      	subs	r2, #1
 80229e0:	4293      	cmp	r3, r2
 80229e2:	f6bf af1f 	bge.w	8022824 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80229e6:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80229ea:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 80229ee:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 80229f2:	f1be 0f00 	cmp.w	lr, #0
 80229f6:	dc6c      	bgt.n	8022ad2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80229f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80229fa:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80229fe:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8022a02:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022a04:	2b00      	cmp	r3, #0
 8022a06:	f340 810e 	ble.w	8022c26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8022a0a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022a0e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022a12:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022a16:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022a18:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022a1c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022a20:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022a24:	eef0 6a62 	vmov.f32	s13, s5
 8022a28:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022a2c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022a30:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022a34:	ee16 aa90 	vmov	sl, s13
 8022a38:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022a3c:	eef0 6a43 	vmov.f32	s13, s6
 8022a40:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022a44:	ee12 2a90 	vmov	r2, s5
 8022a48:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022a4c:	fb92 f3f3 	sdiv	r3, r2, r3
 8022a50:	ee13 2a10 	vmov	r2, s6
 8022a54:	9325      	str	r3, [sp, #148]	; 0x94
 8022a56:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022a58:	fb92 f3f3 	sdiv	r3, r2, r3
 8022a5c:	9326      	str	r3, [sp, #152]	; 0x98
 8022a5e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022a60:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8022a62:	3b01      	subs	r3, #1
 8022a64:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022a68:	930c      	str	r3, [sp, #48]	; 0x30
 8022a6a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022a6c:	bf08      	it	eq
 8022a6e:	4613      	moveq	r3, r2
 8022a70:	ee16 5a90 	vmov	r5, s13
 8022a74:	9309      	str	r3, [sp, #36]	; 0x24
 8022a76:	eeb0 3a67 	vmov.f32	s6, s15
 8022a7a:	eef0 2a47 	vmov.f32	s5, s14
 8022a7e:	e6a6      	b.n	80227ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8022a80:	2900      	cmp	r1, #0
 8022a82:	f43f af10 	beq.w	80228a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8022a86:	f819 3003 	ldrb.w	r3, [r9, r3]
 8022a8a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022a8e:	930f      	str	r3, [sp, #60]	; 0x3c
 8022a90:	e709      	b.n	80228a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8022a92:	f112 0901 	adds.w	r9, r2, #1
 8022a96:	f53f af7d 	bmi.w	8022994 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022a9a:	454b      	cmp	r3, r9
 8022a9c:	f6ff af7a 	blt.w	8022994 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022aa0:	f11c 0901 	adds.w	r9, ip, #1
 8022aa4:	f53f af76 	bmi.w	8022994 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022aa8:	45ce      	cmp	lr, r9
 8022aaa:	f6ff af73 	blt.w	8022994 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022aae:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022ab0:	9202      	str	r2, [sp, #8]
 8022ab2:	b21b      	sxth	r3, r3
 8022ab4:	fa0f f28e 	sxth.w	r2, lr
 8022ab8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8022abc:	e9cd c003 	strd	ip, r0, [sp, #12]
 8022ac0:	9201      	str	r2, [sp, #4]
 8022ac2:	9300      	str	r3, [sp, #0]
 8022ac4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022ac6:	9816      	ldr	r0, [sp, #88]	; 0x58
 8022ac8:	4633      	mov	r3, r6
 8022aca:	4639      	mov	r1, r7
 8022acc:	f7ff fd8e 	bl	80225ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8022ad0:	e760      	b.n	8022994 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022ad2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022ad4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022ad6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8022ada:	ea4f 422a 	mov.w	r2, sl, asr #16
 8022ade:	1429      	asrs	r1, r5, #16
 8022ae0:	fb03 2101 	mla	r1, r3, r1, r2
 8022ae4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022ae6:	440a      	add	r2, r1
 8022ae8:	5c61      	ldrb	r1, [r4, r1]
 8022aea:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8022aee:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022af2:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8022af6:	f1bc 0f00 	cmp.w	ip, #0
 8022afa:	f000 808c 	beq.w	8022c16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8022afe:	7857      	ldrb	r7, [r2, #1]
 8022b00:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8022b04:	9413      	str	r4, [sp, #76]	; 0x4c
 8022b06:	b140      	cbz	r0, 8022b1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022b08:	18d7      	adds	r7, r2, r3
 8022b0a:	5cd3      	ldrb	r3, [r2, r3]
 8022b0c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022b10:	9310      	str	r3, [sp, #64]	; 0x40
 8022b12:	787b      	ldrb	r3, [r7, #1]
 8022b14:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022b18:	9314      	str	r3, [sp, #80]	; 0x50
 8022b1a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022b1c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022b1e:	fb1c f200 	smulbb	r2, ip, r0
 8022b22:	041f      	lsls	r7, r3, #16
 8022b24:	10d2      	asrs	r2, r2, #3
 8022b26:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022b2a:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8022b2e:	431f      	orrs	r7, r3
 8022b30:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8022b34:	9317      	str	r3, [sp, #92]	; 0x5c
 8022b36:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8022b38:	041b      	lsls	r3, r3, #16
 8022b3a:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8022b3e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022b42:	ea43 030b 	orr.w	r3, r3, fp
 8022b46:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022b48:	4353      	muls	r3, r2
 8022b4a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022b4e:	fb04 3707 	mla	r7, r4, r7, r3
 8022b52:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022b56:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8022b5a:	ea43 0b01 	orr.w	fp, r3, r1
 8022b5e:	f1c0 0110 	rsb	r1, r0, #16
 8022b62:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022b64:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022b66:	eba1 0c0c 	sub.w	ip, r1, ip
 8022b6a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022b6e:	fb0c 770b 	mla	r7, ip, fp, r7
 8022b72:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022b76:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8022b7a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022b7e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8022b82:	ea4c 0c0b 	orr.w	ip, ip, fp
 8022b86:	fb02 770c 	mla	r7, r2, ip, r7
 8022b8a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8022b8c:	0d79      	lsrs	r1, r7, #21
 8022b8e:	097f      	lsrs	r7, r7, #5
 8022b90:	8812      	ldrh	r2, [r2, #0]
 8022b92:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022b96:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022b9a:	430f      	orrs	r7, r1
 8022b9c:	b2bb      	uxth	r3, r7
 8022b9e:	1211      	asrs	r1, r2, #8
 8022ba0:	1218      	asrs	r0, r3, #8
 8022ba2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022ba6:	fb11 f104 	smulbb	r1, r1, r4
 8022baa:	10d7      	asrs	r7, r2, #3
 8022bac:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022bb0:	00d2      	lsls	r2, r2, #3
 8022bb2:	fb00 1009 	mla	r0, r0, r9, r1
 8022bb6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022bba:	10d9      	asrs	r1, r3, #3
 8022bbc:	b2d2      	uxtb	r2, r2
 8022bbe:	00db      	lsls	r3, r3, #3
 8022bc0:	fb17 f704 	smulbb	r7, r7, r4
 8022bc4:	fb12 f204 	smulbb	r2, r2, r4
 8022bc8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022bcc:	b2db      	uxtb	r3, r3
 8022bce:	b280      	uxth	r0, r0
 8022bd0:	fb01 7109 	mla	r1, r1, r9, r7
 8022bd4:	fb03 2309 	mla	r3, r3, r9, r2
 8022bd8:	b29b      	uxth	r3, r3
 8022bda:	b289      	uxth	r1, r1
 8022bdc:	1c42      	adds	r2, r0, #1
 8022bde:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022be2:	1c4f      	adds	r7, r1, #1
 8022be4:	1c5a      	adds	r2, r3, #1
 8022be6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022bea:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8022bee:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8022bf2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022bf6:	0949      	lsrs	r1, r1, #5
 8022bf8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022bfa:	4310      	orrs	r0, r2
 8022bfc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022c00:	4308      	orrs	r0, r1
 8022c02:	f823 0b02 	strh.w	r0, [r3], #2
 8022c06:	930e      	str	r3, [sp, #56]	; 0x38
 8022c08:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022c0a:	449a      	add	sl, r3
 8022c0c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022c0e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8022c12:	441d      	add	r5, r3
 8022c14:	e6ed      	b.n	80229f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8022c16:	2800      	cmp	r0, #0
 8022c18:	f43f af7f 	beq.w	8022b1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022c1c:	5cd3      	ldrb	r3, [r2, r3]
 8022c1e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022c22:	9310      	str	r3, [sp, #64]	; 0x40
 8022c24:	e779      	b.n	8022b1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022c26:	b019      	add	sp, #100	; 0x64
 8022c28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022c2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8022c2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022c30:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8022c34:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8022c38:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8022c3c:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8022c40:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8022c44:	8808      	ldrh	r0, [r1, #0]
 8022c46:	fb08 470e 	mla	r7, r8, lr, r4
 8022c4a:	f1b8 0f00 	cmp.w	r8, #0
 8022c4e:	eb02 0907 	add.w	r9, r2, r7
 8022c52:	db67      	blt.n	8022d24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8022c54:	45c2      	cmp	sl, r8
 8022c56:	dd65      	ble.n	8022d24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8022c58:	2c00      	cmp	r4, #0
 8022c5a:	db61      	blt.n	8022d20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8022c5c:	45a6      	cmp	lr, r4
 8022c5e:	dd5f      	ble.n	8022d20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8022c60:	5dd2      	ldrb	r2, [r2, r7]
 8022c62:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8022c66:	1c62      	adds	r2, r4, #1
 8022c68:	d45f      	bmi.n	8022d2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022c6a:	4596      	cmp	lr, r2
 8022c6c:	dd5d      	ble.n	8022d2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022c6e:	2d00      	cmp	r5, #0
 8022c70:	d05b      	beq.n	8022d2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022c72:	f899 2001 	ldrb.w	r2, [r9, #1]
 8022c76:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8022c7a:	f118 0801 	adds.w	r8, r8, #1
 8022c7e:	d458      	bmi.n	8022d32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022c80:	45c2      	cmp	sl, r8
 8022c82:	dd56      	ble.n	8022d32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022c84:	2e00      	cmp	r6, #0
 8022c86:	d054      	beq.n	8022d32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022c88:	2c00      	cmp	r4, #0
 8022c8a:	db50      	blt.n	8022d2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8022c8c:	45a6      	cmp	lr, r4
 8022c8e:	dd4e      	ble.n	8022d2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8022c90:	f819 200e 	ldrb.w	r2, [r9, lr]
 8022c94:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8022c98:	3401      	adds	r4, #1
 8022c9a:	d407      	bmi.n	8022cac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022c9c:	45a6      	cmp	lr, r4
 8022c9e:	dd05      	ble.n	8022cac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022ca0:	b125      	cbz	r5, 8022cac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022ca2:	44ce      	add	lr, r9
 8022ca4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8022ca8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8022cac:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8022cb0:	fb15 f406 	smulbb	r4, r5, r6
 8022cb4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022cb8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8022cbc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022cc0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8022cc4:	ea43 0c0c 	orr.w	ip, r3, ip
 8022cc8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022ccc:	f1c6 0310 	rsb	r3, r6, #16
 8022cd0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022cd4:	1b5b      	subs	r3, r3, r5
 8022cd6:	ea4e 0707 	orr.w	r7, lr, r7
 8022cda:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8022cde:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022ce2:	437d      	muls	r5, r7
 8022ce4:	fb03 5c0c 	mla	ip, r3, ip, r5
 8022ce8:	0403      	lsls	r3, r0, #16
 8022cea:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022cee:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022cf2:	4318      	orrs	r0, r3
 8022cf4:	0413      	lsls	r3, r2, #16
 8022cf6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022cfa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022cfe:	4313      	orrs	r3, r2
 8022d00:	fb04 c000 	mla	r0, r4, r0, ip
 8022d04:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8022d08:	fb06 0003 	mla	r0, r6, r3, r0
 8022d0c:	0d43      	lsrs	r3, r0, #21
 8022d0e:	0940      	lsrs	r0, r0, #5
 8022d10:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022d14:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022d18:	4318      	orrs	r0, r3
 8022d1a:	8008      	strh	r0, [r1, #0]
 8022d1c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022d20:	4684      	mov	ip, r0
 8022d22:	e7a0      	b.n	8022c66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8022d24:	4607      	mov	r7, r0
 8022d26:	4684      	mov	ip, r0
 8022d28:	e7a7      	b.n	8022c7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8022d2a:	4607      	mov	r7, r0
 8022d2c:	e7a5      	b.n	8022c7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8022d2e:	4602      	mov	r2, r0
 8022d30:	e7b2      	b.n	8022c98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8022d32:	4602      	mov	r2, r0
 8022d34:	e7ba      	b.n	8022cac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08022d36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022d36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022d3a:	b093      	sub	sp, #76	; 0x4c
 8022d3c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8022d40:	920f      	str	r2, [sp, #60]	; 0x3c
 8022d42:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8022d44:	9108      	str	r1, [sp, #32]
 8022d46:	9306      	str	r3, [sp, #24]
 8022d48:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8022d4c:	9010      	str	r0, [sp, #64]	; 0x40
 8022d4e:	6850      	ldr	r0, [r2, #4]
 8022d50:	6812      	ldr	r2, [r2, #0]
 8022d52:	fb00 1303 	mla	r3, r0, r3, r1
 8022d56:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8022d5a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022d5c:	681b      	ldr	r3, [r3, #0]
 8022d5e:	9307      	str	r3, [sp, #28]
 8022d60:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022d62:	685f      	ldr	r7, [r3, #4]
 8022d64:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8022d68:	3704      	adds	r7, #4
 8022d6a:	9b08      	ldr	r3, [sp, #32]
 8022d6c:	2b00      	cmp	r3, #0
 8022d6e:	dc03      	bgt.n	8022d78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8022d70:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022d72:	2b00      	cmp	r3, #0
 8022d74:	f340 81b2 	ble.w	80230dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8022d78:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022d7a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022d7e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022d82:	1e48      	subs	r0, r1, #1
 8022d84:	f102 3cff 	add.w	ip, r2, #4294967295
 8022d88:	9b06      	ldr	r3, [sp, #24]
 8022d8a:	2b00      	cmp	r3, #0
 8022d8c:	f340 80a9 	ble.w	8022ee2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8022d90:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022d94:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022d98:	d406      	bmi.n	8022da8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022d9a:	4586      	cmp	lr, r0
 8022d9c:	da04      	bge.n	8022da8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022d9e:	2b00      	cmp	r3, #0
 8022da0:	db02      	blt.n	8022da8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022da2:	4563      	cmp	r3, ip
 8022da4:	f2c0 809e 	blt.w	8022ee4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8022da8:	f11e 0e01 	adds.w	lr, lr, #1
 8022dac:	f100 808f 	bmi.w	8022ece <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022db0:	4571      	cmp	r1, lr
 8022db2:	f2c0 808c 	blt.w	8022ece <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022db6:	3301      	adds	r3, #1
 8022db8:	f100 8089 	bmi.w	8022ece <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022dbc:	429a      	cmp	r2, r3
 8022dbe:	f2c0 8086 	blt.w	8022ece <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022dc2:	f8dd b018 	ldr.w	fp, [sp, #24]
 8022dc6:	46c8      	mov	r8, r9
 8022dc8:	f1bb 0f00 	cmp.w	fp, #0
 8022dcc:	f340 80a6 	ble.w	8022f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8022dd0:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8022dd2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022dd4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8022dd8:	689b      	ldr	r3, [r3, #8]
 8022dda:	1422      	asrs	r2, r4, #16
 8022ddc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8022de0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8022de4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8022de8:	f100 80e3 	bmi.w	8022fb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022dec:	f103 3aff 	add.w	sl, r3, #4294967295
 8022df0:	4552      	cmp	r2, sl
 8022df2:	f280 80de 	bge.w	8022fb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022df6:	f1bc 0f00 	cmp.w	ip, #0
 8022dfa:	f2c0 80da 	blt.w	8022fb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022dfe:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022e02:	45d4      	cmp	ip, sl
 8022e04:	f280 80d5 	bge.w	8022fb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022e08:	b21b      	sxth	r3, r3
 8022e0a:	fb0c 2203 	mla	r2, ip, r3, r2
 8022e0e:	9d07      	ldr	r5, [sp, #28]
 8022e10:	eb05 0a02 	add.w	sl, r5, r2
 8022e14:	5caa      	ldrb	r2, [r5, r2]
 8022e16:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8022e1a:	2800      	cmp	r0, #0
 8022e1c:	f000 80c0 	beq.w	8022fa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8022e20:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8022e24:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8022e28:	920b      	str	r2, [sp, #44]	; 0x2c
 8022e2a:	b151      	cbz	r1, 8022e42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8022e2c:	eb0a 0203 	add.w	r2, sl, r3
 8022e30:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8022e34:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022e38:	9309      	str	r3, [sp, #36]	; 0x24
 8022e3a:	7853      	ldrb	r3, [r2, #1]
 8022e3c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022e40:	930c      	str	r3, [sp, #48]	; 0x30
 8022e42:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022e44:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022e46:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022e4a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022e4e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022e52:	ea4c 0c03 	orr.w	ip, ip, r3
 8022e56:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022e58:	041b      	lsls	r3, r3, #16
 8022e5a:	fb10 f201 	smulbb	r2, r0, r1
 8022e5e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022e62:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022e66:	10d2      	asrs	r2, r2, #3
 8022e68:	432b      	orrs	r3, r5
 8022e6a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8022e6e:	4353      	muls	r3, r2
 8022e70:	fb0a 330c 	mla	r3, sl, ip, r3
 8022e74:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8022e78:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022e7c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022e80:	ea4c 0e0e 	orr.w	lr, ip, lr
 8022e84:	f1c1 0c10 	rsb	ip, r1, #16
 8022e88:	ebac 0c00 	sub.w	ip, ip, r0
 8022e8c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022e90:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8022e94:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022e96:	0418      	lsls	r0, r3, #16
 8022e98:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022e9c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022ea0:	4318      	orrs	r0, r3
 8022ea2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8022ea6:	fb02 c200 	mla	r2, r2, r0, ip
 8022eaa:	0d53      	lsrs	r3, r2, #21
 8022eac:	0952      	lsrs	r2, r2, #5
 8022eae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022eb2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022eb6:	431a      	orrs	r2, r3
 8022eb8:	f8a8 2000 	strh.w	r2, [r8]
 8022ebc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022ebe:	441c      	add	r4, r3
 8022ec0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022ec2:	f108 0802 	add.w	r8, r8, #2
 8022ec6:	441e      	add	r6, r3
 8022ec8:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022ecc:	e77c      	b.n	8022dc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022ece:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022ed0:	441c      	add	r4, r3
 8022ed2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022ed4:	441e      	add	r6, r3
 8022ed6:	9b06      	ldr	r3, [sp, #24]
 8022ed8:	3b01      	subs	r3, #1
 8022eda:	9306      	str	r3, [sp, #24]
 8022edc:	f109 0902 	add.w	r9, r9, #2
 8022ee0:	e752      	b.n	8022d88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8022ee2:	d020      	beq.n	8022f26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8022ee4:	9b06      	ldr	r3, [sp, #24]
 8022ee6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022ee8:	3b01      	subs	r3, #1
 8022eea:	fb00 4003 	mla	r0, r0, r3, r4
 8022eee:	1400      	asrs	r0, r0, #16
 8022ef0:	f53f af67 	bmi.w	8022dc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022ef4:	3901      	subs	r1, #1
 8022ef6:	4288      	cmp	r0, r1
 8022ef8:	f6bf af63 	bge.w	8022dc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022efc:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022efe:	fb01 6303 	mla	r3, r1, r3, r6
 8022f02:	141b      	asrs	r3, r3, #16
 8022f04:	f53f af5d 	bmi.w	8022dc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022f08:	3a01      	subs	r2, #1
 8022f0a:	4293      	cmp	r3, r2
 8022f0c:	f6bf af59 	bge.w	8022dc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022f10:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8022f14:	46ca      	mov	sl, r9
 8022f16:	f1b8 0f00 	cmp.w	r8, #0
 8022f1a:	dc67      	bgt.n	8022fec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8022f1c:	9b06      	ldr	r3, [sp, #24]
 8022f1e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022f22:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8022f26:	9b08      	ldr	r3, [sp, #32]
 8022f28:	2b00      	cmp	r3, #0
 8022f2a:	f340 80d7 	ble.w	80230dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8022f2e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022f32:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022f36:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8022f3a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022f3c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022f40:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022f44:	eeb0 6a62 	vmov.f32	s12, s5
 8022f48:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022f4c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8022f50:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022f54:	ee16 4a10 	vmov	r4, s12
 8022f58:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022f5c:	eeb0 6a43 	vmov.f32	s12, s6
 8022f60:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022f64:	ee12 2a90 	vmov	r2, s5
 8022f68:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022f6c:	fb92 f3f3 	sdiv	r3, r2, r3
 8022f70:	ee13 2a10 	vmov	r2, s6
 8022f74:	931f      	str	r3, [sp, #124]	; 0x7c
 8022f76:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022f78:	fb92 f3f3 	sdiv	r3, r2, r3
 8022f7c:	9320      	str	r3, [sp, #128]	; 0x80
 8022f7e:	9b08      	ldr	r3, [sp, #32]
 8022f80:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022f82:	3b01      	subs	r3, #1
 8022f84:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8022f88:	9308      	str	r3, [sp, #32]
 8022f8a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022f8c:	bf08      	it	eq
 8022f8e:	4613      	moveq	r3, r2
 8022f90:	ee16 6a10 	vmov	r6, s12
 8022f94:	9306      	str	r3, [sp, #24]
 8022f96:	eeb0 3a67 	vmov.f32	s6, s15
 8022f9a:	eef0 2a47 	vmov.f32	s5, s14
 8022f9e:	e6e4      	b.n	8022d6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8022fa0:	2900      	cmp	r1, #0
 8022fa2:	f43f af4e 	beq.w	8022e42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8022fa6:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8022faa:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022fae:	9309      	str	r3, [sp, #36]	; 0x24
 8022fb0:	e747      	b.n	8022e42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8022fb2:	f112 0a01 	adds.w	sl, r2, #1
 8022fb6:	d481      	bmi.n	8022ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022fb8:	4553      	cmp	r3, sl
 8022fba:	f6ff af7f 	blt.w	8022ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022fbe:	f11c 0a01 	adds.w	sl, ip, #1
 8022fc2:	f53f af7b 	bmi.w	8022ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022fc6:	45d6      	cmp	lr, sl
 8022fc8:	f6ff af78 	blt.w	8022ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022fcc:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8022fd0:	b21b      	sxth	r3, r3
 8022fd2:	fa0f f28e 	sxth.w	r2, lr
 8022fd6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8022fda:	9201      	str	r2, [sp, #4]
 8022fdc:	9300      	str	r3, [sp, #0]
 8022fde:	9a07      	ldr	r2, [sp, #28]
 8022fe0:	9810      	ldr	r0, [sp, #64]	; 0x40
 8022fe2:	463b      	mov	r3, r7
 8022fe4:	4641      	mov	r1, r8
 8022fe6:	f7ff fe21 	bl	8022c2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8022fea:	e767      	b.n	8022ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022fec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022fee:	9d07      	ldr	r5, [sp, #28]
 8022ff0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8022ff4:	1422      	asrs	r2, r4, #16
 8022ff6:	1431      	asrs	r1, r6, #16
 8022ff8:	fb03 2101 	mla	r1, r3, r1, r2
 8022ffc:	9a07      	ldr	r2, [sp, #28]
 8022ffe:	440a      	add	r2, r1
 8023000:	5c69      	ldrb	r1, [r5, r1]
 8023002:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8023006:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802300a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 802300e:	f1be 0f00 	cmp.w	lr, #0
 8023012:	d05c      	beq.n	80230ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8023014:	f892 c001 	ldrb.w	ip, [r2, #1]
 8023018:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 802301c:	950d      	str	r5, [sp, #52]	; 0x34
 802301e:	b150      	cbz	r0, 8023036 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8023020:	eb02 0c03 	add.w	ip, r2, r3
 8023024:	5cd3      	ldrb	r3, [r2, r3]
 8023026:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802302a:	930a      	str	r3, [sp, #40]	; 0x28
 802302c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8023030:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8023034:	930e      	str	r3, [sp, #56]	; 0x38
 8023036:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8023038:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802303a:	fb1e f200 	smulbb	r2, lr, r0
 802303e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8023042:	10d2      	asrs	r2, r2, #3
 8023044:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023048:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802304c:	ea4c 0c03 	orr.w	ip, ip, r3
 8023050:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8023054:	9311      	str	r3, [sp, #68]	; 0x44
 8023056:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023058:	041b      	lsls	r3, r3, #16
 802305a:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 802305e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023062:	ea43 030b 	orr.w	r3, r3, fp
 8023066:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023068:	4353      	muls	r3, r2
 802306a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802306e:	fb05 3c0c 	mla	ip, r5, ip, r3
 8023072:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023076:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 802307a:	ea43 0b01 	orr.w	fp, r3, r1
 802307e:	f1c0 0110 	rsb	r1, r0, #16
 8023082:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023084:	eba1 0e0e 	sub.w	lr, r1, lr
 8023088:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 802308c:	fb0e cc0b 	mla	ip, lr, fp, ip
 8023090:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8023094:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8023098:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802309c:	ea4b 0e0e 	orr.w	lr, fp, lr
 80230a0:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80230a4:	fb02 cc0e 	mla	ip, r2, lr, ip
 80230a8:	ea4f 535c 	mov.w	r3, ip, lsr #21
 80230ac:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80230b0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80230b4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80230b8:	ea43 0c0c 	orr.w	ip, r3, ip
 80230bc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80230be:	f82a cb02 	strh.w	ip, [sl], #2
 80230c2:	441c      	add	r4, r3
 80230c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80230c6:	f108 38ff 	add.w	r8, r8, #4294967295
 80230ca:	441e      	add	r6, r3
 80230cc:	e723      	b.n	8022f16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80230ce:	2800      	cmp	r0, #0
 80230d0:	d0b1      	beq.n	8023036 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80230d2:	5cd3      	ldrb	r3, [r2, r3]
 80230d4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80230d8:	930a      	str	r3, [sp, #40]	; 0x28
 80230da:	e7ac      	b.n	8023036 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80230dc:	b013      	add	sp, #76	; 0x4c
 80230de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080230e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 80230e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80230e6:	880d      	ldrh	r5, [r1, #0]
 80230e8:	b087      	sub	sp, #28
 80230ea:	10ef      	asrs	r7, r5, #3
 80230ec:	ea4f 2a25 	mov.w	sl, r5, asr #8
 80230f0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80230f4:	00ed      	lsls	r5, r5, #3
 80230f6:	9701      	str	r7, [sp, #4]
 80230f8:	b2ed      	uxtb	r5, r5
 80230fa:	9502      	str	r5, [sp, #8]
 80230fc:	9d01      	ldr	r5, [sp, #4]
 80230fe:	9103      	str	r1, [sp, #12]
 8023100:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8023104:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8023108:	9902      	ldr	r1, [sp, #8]
 802310a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 802310e:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8023112:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8023116:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 802311a:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 802311e:	022d      	lsls	r5, r5, #8
 8023120:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8023124:	fb06 0709 	mla	r7, r6, r9, r0
 8023128:	430d      	orrs	r5, r1
 802312a:	2e00      	cmp	r6, #0
 802312c:	eb02 0c07 	add.w	ip, r2, r7
 8023130:	9505      	str	r5, [sp, #20]
 8023132:	f2c0 80b6 	blt.w	80232a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8023136:	45b3      	cmp	fp, r6
 8023138:	f340 80b3 	ble.w	80232a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 802313c:	2800      	cmp	r0, #0
 802313e:	f2c0 80ae 	blt.w	802329e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8023142:	4581      	cmp	r9, r0
 8023144:	f340 80ab 	ble.w	802329e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8023148:	5dd7      	ldrb	r7, [r2, r7]
 802314a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802314e:	441f      	add	r7, r3
 8023150:	1c42      	adds	r2, r0, #1
 8023152:	f100 80a9 	bmi.w	80232a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8023156:	4591      	cmp	r9, r2
 8023158:	f340 80a6 	ble.w	80232a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 802315c:	2c00      	cmp	r4, #0
 802315e:	f000 80a3 	beq.w	80232a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8023162:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8023166:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802316a:	441d      	add	r5, r3
 802316c:	3601      	adds	r6, #1
 802316e:	f100 809f 	bmi.w	80232b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8023172:	45b3      	cmp	fp, r6
 8023174:	f340 809c 	ble.w	80232b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8023178:	f1be 0f00 	cmp.w	lr, #0
 802317c:	f000 8098 	beq.w	80232b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8023180:	2800      	cmp	r0, #0
 8023182:	f2c0 8093 	blt.w	80232ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8023186:	4581      	cmp	r9, r0
 8023188:	f340 8090 	ble.w	80232ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 802318c:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8023190:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8023194:	441e      	add	r6, r3
 8023196:	3001      	adds	r0, #1
 8023198:	f100 808d 	bmi.w	80232b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 802319c:	4581      	cmp	r9, r0
 802319e:	f340 808a 	ble.w	80232b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80231a2:	2c00      	cmp	r4, #0
 80231a4:	f000 8087 	beq.w	80232b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80231a8:	44e1      	add	r9, ip
 80231aa:	f899 2001 	ldrb.w	r2, [r9, #1]
 80231ae:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80231b2:	4413      	add	r3, r2
 80231b4:	b2a4      	uxth	r4, r4
 80231b6:	fa1f fe8e 	uxth.w	lr, lr
 80231ba:	fb04 fb0e 	mul.w	fp, r4, lr
 80231be:	0124      	lsls	r4, r4, #4
 80231c0:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 80231c4:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 80231c8:	eba4 040b 	sub.w	r4, r4, fp
 80231cc:	fa1f f08e 	uxth.w	r0, lr
 80231d0:	b2a2      	uxth	r2, r4
 80231d2:	78ac      	ldrb	r4, [r5, #2]
 80231d4:	f897 c002 	ldrb.w	ip, [r7, #2]
 80231d8:	9901      	ldr	r1, [sp, #4]
 80231da:	eba9 0900 	sub.w	r9, r9, r0
 80231de:	fa1f f989 	uxth.w	r9, r9
 80231e2:	4354      	muls	r4, r2
 80231e4:	fb09 440c 	mla	r4, r9, ip, r4
 80231e8:	f896 c002 	ldrb.w	ip, [r6, #2]
 80231ec:	fb00 440c 	mla	r4, r0, ip, r4
 80231f0:	f893 c002 	ldrb.w	ip, [r3, #2]
 80231f4:	fa1f fe88 	uxth.w	lr, r8
 80231f8:	ea6f 0808 	mvn.w	r8, r8
 80231fc:	fa5f f888 	uxtb.w	r8, r8
 8023200:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8023204:	fb1a fa08 	smulbb	sl, sl, r8
 8023208:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802320c:	fb0c ac0e 	mla	ip, ip, lr, sl
 8023210:	f895 a001 	ldrb.w	sl, [r5, #1]
 8023214:	787c      	ldrb	r4, [r7, #1]
 8023216:	782d      	ldrb	r5, [r5, #0]
 8023218:	783f      	ldrb	r7, [r7, #0]
 802321a:	fb02 fa0a 	mul.w	sl, r2, sl
 802321e:	fb09 aa04 	mla	sl, r9, r4, sl
 8023222:	7874      	ldrb	r4, [r6, #1]
 8023224:	436a      	muls	r2, r5
 8023226:	7835      	ldrb	r5, [r6, #0]
 8023228:	fb00 aa04 	mla	sl, r0, r4, sl
 802322c:	fb09 2207 	mla	r2, r9, r7, r2
 8023230:	785c      	ldrb	r4, [r3, #1]
 8023232:	781b      	ldrb	r3, [r3, #0]
 8023234:	fb00 2005 	mla	r0, r0, r5, r2
 8023238:	fb0b a404 	mla	r4, fp, r4, sl
 802323c:	fb0b 0b03 	mla	fp, fp, r3, r0
 8023240:	9b02      	ldr	r3, [sp, #8]
 8023242:	fb11 fa08 	smulbb	sl, r1, r8
 8023246:	fa1f fc8c 	uxth.w	ip, ip
 802324a:	fb13 f808 	smulbb	r8, r3, r8
 802324e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8023252:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8023256:	fb04 a40e 	mla	r4, r4, lr, sl
 802325a:	f10c 0301 	add.w	r3, ip, #1
 802325e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8023262:	fa1f fe8e 	uxth.w	lr, lr
 8023266:	b2a4      	uxth	r4, r4
 8023268:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802326c:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8023270:	f104 0a01 	add.w	sl, r4, #1
 8023274:	f10e 0c01 	add.w	ip, lr, #1
 8023278:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802327c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8023280:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8023284:	0964      	lsrs	r4, r4, #5
 8023286:	ea4c 0c03 	orr.w	ip, ip, r3
 802328a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802328e:	9b03      	ldr	r3, [sp, #12]
 8023290:	ea4c 0c04 	orr.w	ip, ip, r4
 8023294:	f8a3 c000 	strh.w	ip, [r3]
 8023298:	b007      	add	sp, #28
 802329a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802329e:	af05      	add	r7, sp, #20
 80232a0:	e756      	b.n	8023150 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 80232a2:	ad05      	add	r5, sp, #20
 80232a4:	462f      	mov	r7, r5
 80232a6:	e761      	b.n	802316c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80232a8:	ad05      	add	r5, sp, #20
 80232aa:	e75f      	b.n	802316c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80232ac:	ae05      	add	r6, sp, #20
 80232ae:	e772      	b.n	8023196 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 80232b0:	ab05      	add	r3, sp, #20
 80232b2:	461e      	mov	r6, r3
 80232b4:	e77e      	b.n	80231b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 80232b6:	ab05      	add	r3, sp, #20
 80232b8:	e77c      	b.n	80231b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

080232ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80232ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80232be:	b095      	sub	sp, #84	; 0x54
 80232c0:	9212      	str	r2, [sp, #72]	; 0x48
 80232c2:	9309      	str	r3, [sp, #36]	; 0x24
 80232c4:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80232c6:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 80232ca:	930f      	str	r3, [sp, #60]	; 0x3c
 80232cc:	910e      	str	r1, [sp, #56]	; 0x38
 80232ce:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 80232d2:	9013      	str	r0, [sp, #76]	; 0x4c
 80232d4:	6850      	ldr	r0, [r2, #4]
 80232d6:	6812      	ldr	r2, [r2, #0]
 80232d8:	fb00 1303 	mla	r3, r0, r3, r1
 80232dc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80232e0:	930a      	str	r3, [sp, #40]	; 0x28
 80232e2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80232e4:	681b      	ldr	r3, [r3, #0]
 80232e6:	930d      	str	r3, [sp, #52]	; 0x34
 80232e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80232ea:	685c      	ldr	r4, [r3, #4]
 80232ec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80232ee:	43db      	mvns	r3, r3
 80232f0:	b2db      	uxtb	r3, r3
 80232f2:	3404      	adds	r4, #4
 80232f4:	930b      	str	r3, [sp, #44]	; 0x2c
 80232f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80232f8:	2b00      	cmp	r3, #0
 80232fa:	dc03      	bgt.n	8023304 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80232fc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80232fe:	2b00      	cmp	r3, #0
 8023300:	f340 8255 	ble.w	80237ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8023304:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023306:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802330a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802330e:	1e48      	subs	r0, r1, #1
 8023310:	1e55      	subs	r5, r2, #1
 8023312:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023314:	2b00      	cmp	r3, #0
 8023316:	f340 80f9 	ble.w	802350c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 802331a:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802331c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802331e:	1436      	asrs	r6, r6, #16
 8023320:	ea4f 4323 	mov.w	r3, r3, asr #16
 8023324:	d406      	bmi.n	8023334 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023326:	4286      	cmp	r6, r0
 8023328:	da04      	bge.n	8023334 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802332a:	2b00      	cmp	r3, #0
 802332c:	db02      	blt.n	8023334 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802332e:	42ab      	cmp	r3, r5
 8023330:	f2c0 80ed 	blt.w	802350e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8023334:	3601      	adds	r6, #1
 8023336:	f100 80da 	bmi.w	80234ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802333a:	42b1      	cmp	r1, r6
 802333c:	f2c0 80d7 	blt.w	80234ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8023340:	3301      	adds	r3, #1
 8023342:	f100 80d4 	bmi.w	80234ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8023346:	429a      	cmp	r2, r3
 8023348:	f2c0 80d1 	blt.w	80234ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802334c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802334e:	9311      	str	r3, [sp, #68]	; 0x44
 8023350:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023352:	930c      	str	r3, [sp, #48]	; 0x30
 8023354:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023356:	2b00      	cmp	r3, #0
 8023358:	f340 80fa 	ble.w	8023550 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802335c:	9826      	ldr	r0, [sp, #152]	; 0x98
 802335e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023360:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023362:	68c6      	ldr	r6, [r0, #12]
 8023364:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023366:	141d      	asrs	r5, r3, #16
 8023368:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802336c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802336e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8023370:	1400      	asrs	r0, r0, #16
 8023372:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8023376:	6892      	ldr	r2, [r2, #8]
 8023378:	f100 813e 	bmi.w	80235f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802337c:	1e57      	subs	r7, r2, #1
 802337e:	42b8      	cmp	r0, r7
 8023380:	f280 813a 	bge.w	80235f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8023384:	2d00      	cmp	r5, #0
 8023386:	f2c0 8137 	blt.w	80235f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802338a:	1e77      	subs	r7, r6, #1
 802338c:	42bd      	cmp	r5, r7
 802338e:	f280 8133 	bge.w	80235f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8023392:	b212      	sxth	r2, r2
 8023394:	fb05 0002 	mla	r0, r5, r2, r0
 8023398:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802339a:	f815 a000 	ldrb.w	sl, [r5, r0]
 802339e:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80233a2:	182e      	adds	r6, r5, r0
 80233a4:	eb04 050a 	add.w	r5, r4, sl
 80233a8:	2b00      	cmp	r3, #0
 80233aa:	f000 8117 	beq.w	80235dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 80233ae:	f896 c001 	ldrb.w	ip, [r6, #1]
 80233b2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80233b6:	44a4      	add	ip, r4
 80233b8:	2900      	cmp	r1, #0
 80233ba:	f000 8117 	beq.w	80235ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 80233be:	18b0      	adds	r0, r6, r2
 80233c0:	5cb2      	ldrb	r2, [r6, r2]
 80233c2:	7840      	ldrb	r0, [r0, #1]
 80233c4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80233c8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80233cc:	4422      	add	r2, r4
 80233ce:	4420      	add	r0, r4
 80233d0:	b29b      	uxth	r3, r3
 80233d2:	b289      	uxth	r1, r1
 80233d4:	fb03 f901 	mul.w	r9, r3, r1
 80233d8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80233dc:	011b      	lsls	r3, r3, #4
 80233de:	b289      	uxth	r1, r1
 80233e0:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80233e4:	f895 b002 	ldrb.w	fp, [r5, #2]
 80233e8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80233ea:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80233ee:	f8b6 e000 	ldrh.w	lr, [r6]
 80233f2:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 80233f6:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80233fa:	eba3 0309 	sub.w	r3, r3, r9
 80233fe:	b29b      	uxth	r3, r3
 8023400:	eba8 0801 	sub.w	r8, r8, r1
 8023404:	fa1f f888 	uxth.w	r8, r8
 8023408:	435f      	muls	r7, r3
 802340a:	fb08 770b 	mla	r7, r8, fp, r7
 802340e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8023412:	9310      	str	r3, [sp, #64]	; 0x40
 8023414:	fb01 770b 	mla	r7, r1, fp, r7
 8023418:	f890 b002 	ldrb.w	fp, [r0, #2]
 802341c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802341e:	fb09 770b 	mla	r7, r9, fp, r7
 8023422:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8023426:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802342a:	fb1b fb03 	smulbb	fp, fp, r3
 802342e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8023432:	fb07 b706 	mla	r7, r7, r6, fp
 8023436:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023438:	f895 b001 	ldrb.w	fp, [r5, #1]
 802343c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8023440:	f89c c000 	ldrb.w	ip, [ip]
 8023444:	435d      	muls	r5, r3
 8023446:	fb08 550b 	mla	r5, r8, fp, r5
 802344a:	f892 b001 	ldrb.w	fp, [r2, #1]
 802344e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023450:	fb01 550b 	mla	r5, r1, fp, r5
 8023454:	f890 b001 	ldrb.w	fp, [r0, #1]
 8023458:	fb09 550b 	mla	r5, r9, fp, r5
 802345c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8023460:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8023464:	fb1b fb03 	smulbb	fp, fp, r3
 8023468:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802346a:	fb03 f30c 	mul.w	r3, r3, ip
 802346e:	f892 c000 	ldrb.w	ip, [r2]
 8023472:	fb08 330a 	mla	r3, r8, sl, r3
 8023476:	fb01 330c 	mla	r3, r1, ip, r3
 802347a:	f890 c000 	ldrb.w	ip, [r0]
 802347e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8023482:	fb09 3c0c 	mla	ip, r9, ip, r3
 8023486:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023488:	fa5f fe8e 	uxtb.w	lr, lr
 802348c:	b2bf      	uxth	r7, r7
 802348e:	fb1e fe03 	smulbb	lr, lr, r3
 8023492:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8023496:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802349a:	fb05 b506 	mla	r5, r5, r6, fp
 802349e:	1c7b      	adds	r3, r7, #1
 80234a0:	fb0c e606 	mla	r6, ip, r6, lr
 80234a4:	b2ad      	uxth	r5, r5
 80234a6:	b2b6      	uxth	r6, r6
 80234a8:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80234ac:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 80234b0:	f105 0b01 	add.w	fp, r5, #1
 80234b4:	1c77      	adds	r7, r6, #1
 80234b6:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80234ba:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80234be:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80234c2:	096d      	lsrs	r5, r5, #5
 80234c4:	431f      	orrs	r7, r3
 80234c6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80234ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80234cc:	433d      	orrs	r5, r7
 80234ce:	801d      	strh	r5, [r3, #0]
 80234d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80234d2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80234d4:	3302      	adds	r3, #2
 80234d6:	930c      	str	r3, [sp, #48]	; 0x30
 80234d8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80234da:	4413      	add	r3, r2
 80234dc:	931f      	str	r3, [sp, #124]	; 0x7c
 80234de:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80234e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80234e2:	4413      	add	r3, r2
 80234e4:	9320      	str	r3, [sp, #128]	; 0x80
 80234e6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80234e8:	3b01      	subs	r3, #1
 80234ea:	9311      	str	r3, [sp, #68]	; 0x44
 80234ec:	e732      	b.n	8023354 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80234ee:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80234f0:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80234f2:	4433      	add	r3, r6
 80234f4:	931f      	str	r3, [sp, #124]	; 0x7c
 80234f6:	9e22      	ldr	r6, [sp, #136]	; 0x88
 80234f8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80234fa:	4433      	add	r3, r6
 80234fc:	9320      	str	r3, [sp, #128]	; 0x80
 80234fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023500:	3b01      	subs	r3, #1
 8023502:	9309      	str	r3, [sp, #36]	; 0x24
 8023504:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023506:	3302      	adds	r3, #2
 8023508:	930a      	str	r3, [sp, #40]	; 0x28
 802350a:	e702      	b.n	8023312 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802350c:	d027      	beq.n	802355e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 802350e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023510:	9821      	ldr	r0, [sp, #132]	; 0x84
 8023512:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8023514:	3b01      	subs	r3, #1
 8023516:	fb00 5003 	mla	r0, r0, r3, r5
 802351a:	1400      	asrs	r0, r0, #16
 802351c:	f53f af16 	bmi.w	802334c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023520:	3901      	subs	r1, #1
 8023522:	4288      	cmp	r0, r1
 8023524:	f6bf af12 	bge.w	802334c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023528:	9922      	ldr	r1, [sp, #136]	; 0x88
 802352a:	9820      	ldr	r0, [sp, #128]	; 0x80
 802352c:	fb01 0303 	mla	r3, r1, r3, r0
 8023530:	141b      	asrs	r3, r3, #16
 8023532:	f53f af0b 	bmi.w	802334c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023536:	3a01      	subs	r2, #1
 8023538:	4293      	cmp	r3, r2
 802353a:	f6bf af07 	bge.w	802334c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802353e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023540:	9311      	str	r3, [sp, #68]	; 0x44
 8023542:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8023546:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023548:	930c      	str	r3, [sp, #48]	; 0x30
 802354a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802354c:	2b00      	cmp	r3, #0
 802354e:	dc70      	bgt.n	8023632 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8023550:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023552:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023554:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8023558:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802355c:	930a      	str	r3, [sp, #40]	; 0x28
 802355e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023560:	2b00      	cmp	r3, #0
 8023562:	f340 8124 	ble.w	80237ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8023566:	ee30 0a04 	vadd.f32	s0, s0, s8
 802356a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802356e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023572:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023574:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023578:	ee31 1a05 	vadd.f32	s2, s2, s10
 802357c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023580:	eef0 6a62 	vmov.f32	s13, s5
 8023584:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023588:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802358c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023590:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8023594:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023598:	eef0 6a43 	vmov.f32	s13, s6
 802359c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80235a0:	ee12 2a90 	vmov	r2, s5
 80235a4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80235a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80235ac:	ee13 2a10 	vmov	r2, s6
 80235b0:	9321      	str	r3, [sp, #132]	; 0x84
 80235b2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80235b4:	fb92 f3f3 	sdiv	r3, r2, r3
 80235b8:	9322      	str	r3, [sp, #136]	; 0x88
 80235ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80235bc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80235be:	3b01      	subs	r3, #1
 80235c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80235c4:	930e      	str	r3, [sp, #56]	; 0x38
 80235c6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80235c8:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 80235cc:	bf08      	it	eq
 80235ce:	4613      	moveq	r3, r2
 80235d0:	9309      	str	r3, [sp, #36]	; 0x24
 80235d2:	eeb0 3a67 	vmov.f32	s6, s15
 80235d6:	eef0 2a47 	vmov.f32	s5, s14
 80235da:	e68c      	b.n	80232f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80235dc:	b149      	cbz	r1, 80235f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 80235de:	5cb2      	ldrb	r2, [r6, r2]
 80235e0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80235e4:	4422      	add	r2, r4
 80235e6:	4628      	mov	r0, r5
 80235e8:	46ac      	mov	ip, r5
 80235ea:	e6f1      	b.n	80233d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80235ec:	4628      	mov	r0, r5
 80235ee:	462a      	mov	r2, r5
 80235f0:	e6ee      	b.n	80233d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80235f2:	4628      	mov	r0, r5
 80235f4:	462a      	mov	r2, r5
 80235f6:	e7f7      	b.n	80235e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 80235f8:	1c47      	adds	r7, r0, #1
 80235fa:	f53f af69 	bmi.w	80234d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80235fe:	42ba      	cmp	r2, r7
 8023600:	f6ff af66 	blt.w	80234d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023604:	1c6f      	adds	r7, r5, #1
 8023606:	f53f af63 	bmi.w	80234d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802360a:	42be      	cmp	r6, r7
 802360c:	f6ff af60 	blt.w	80234d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023610:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8023612:	9002      	str	r0, [sp, #8]
 8023614:	b236      	sxth	r6, r6
 8023616:	b212      	sxth	r2, r2
 8023618:	e9cd 1705 	strd	r1, r7, [sp, #20]
 802361c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8023620:	9200      	str	r2, [sp, #0]
 8023622:	9601      	str	r6, [sp, #4]
 8023624:	4623      	mov	r3, r4
 8023626:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 802362a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802362c:	f7ff fd59 	bl	80230e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8023630:	e74e      	b.n	80234d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023632:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023634:	9820      	ldr	r0, [sp, #128]	; 0x80
 8023636:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8023638:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802363a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802363e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8023640:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8023644:	142d      	asrs	r5, r5, #16
 8023646:	1400      	asrs	r0, r0, #16
 8023648:	fb02 5000 	mla	r0, r2, r0, r5
 802364c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802364e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8023652:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8023656:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802365a:	182e      	adds	r6, r5, r0
 802365c:	eb04 0509 	add.w	r5, r4, r9
 8023660:	2b00      	cmp	r3, #0
 8023662:	f000 8096 	beq.w	8023792 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8023666:	7877      	ldrb	r7, [r6, #1]
 8023668:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802366c:	4427      	add	r7, r4
 802366e:	2900      	cmp	r1, #0
 8023670:	f000 8097 	beq.w	80237a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8023674:	18b0      	adds	r0, r6, r2
 8023676:	5cb2      	ldrb	r2, [r6, r2]
 8023678:	7840      	ldrb	r0, [r0, #1]
 802367a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802367e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023682:	4422      	add	r2, r4
 8023684:	4420      	add	r0, r4
 8023686:	b29b      	uxth	r3, r3
 8023688:	b289      	uxth	r1, r1
 802368a:	fb03 f801 	mul.w	r8, r3, r1
 802368e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8023690:	f895 b002 	ldrb.w	fp, [r5, #2]
 8023694:	f8b6 c000 	ldrh.w	ip, [r6]
 8023698:	78be      	ldrb	r6, [r7, #2]
 802369a:	f814 9009 	ldrb.w	r9, [r4, r9]
 802369e:	011b      	lsls	r3, r3, #4
 80236a0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80236a4:	b289      	uxth	r1, r1
 80236a6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80236aa:	eba3 0308 	sub.w	r3, r3, r8
 80236ae:	b29b      	uxth	r3, r3
 80236b0:	ebae 0e01 	sub.w	lr, lr, r1
 80236b4:	fa1f fe8e 	uxth.w	lr, lr
 80236b8:	435e      	muls	r6, r3
 80236ba:	fb0e 660b 	mla	r6, lr, fp, r6
 80236be:	f892 b002 	ldrb.w	fp, [r2, #2]
 80236c2:	9310      	str	r3, [sp, #64]	; 0x40
 80236c4:	fb01 660b 	mla	r6, r1, fp, r6
 80236c8:	f890 b002 	ldrb.w	fp, [r0, #2]
 80236cc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80236ce:	fb08 660b 	mla	r6, r8, fp, r6
 80236d2:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 80236d6:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80236da:	fb1b fb03 	smulbb	fp, fp, r3
 80236de:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80236e2:	fb06 b60a 	mla	r6, r6, sl, fp
 80236e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80236e8:	f895 b001 	ldrb.w	fp, [r5, #1]
 80236ec:	787d      	ldrb	r5, [r7, #1]
 80236ee:	783f      	ldrb	r7, [r7, #0]
 80236f0:	435d      	muls	r5, r3
 80236f2:	fb0e 550b 	mla	r5, lr, fp, r5
 80236f6:	f892 b001 	ldrb.w	fp, [r2, #1]
 80236fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80236fc:	fb01 550b 	mla	r5, r1, fp, r5
 8023700:	f890 b001 	ldrb.w	fp, [r0, #1]
 8023704:	fb08 550b 	mla	r5, r8, fp, r5
 8023708:	ea4f 0bec 	mov.w	fp, ip, asr #3
 802370c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8023710:	fb1b fb03 	smulbb	fp, fp, r3
 8023714:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023716:	437b      	muls	r3, r7
 8023718:	7817      	ldrb	r7, [r2, #0]
 802371a:	fb0e 3309 	mla	r3, lr, r9, r3
 802371e:	fb01 3307 	mla	r3, r1, r7, r3
 8023722:	7807      	ldrb	r7, [r0, #0]
 8023724:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8023728:	fb08 3707 	mla	r7, r8, r7, r3
 802372c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802372e:	fa5f fc8c 	uxtb.w	ip, ip
 8023732:	fb1c fc03 	smulbb	ip, ip, r3
 8023736:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802373a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802373e:	fb05 b50a 	mla	r5, r5, sl, fp
 8023742:	fb07 c70a 	mla	r7, r7, sl, ip
 8023746:	b2b6      	uxth	r6, r6
 8023748:	b2ad      	uxth	r5, r5
 802374a:	b2bf      	uxth	r7, r7
 802374c:	1c73      	adds	r3, r6, #1
 802374e:	1c7a      	adds	r2, r7, #1
 8023750:	f105 0b01 	add.w	fp, r5, #1
 8023754:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8023758:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 802375c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8023760:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023764:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8023768:	096d      	lsrs	r5, r5, #5
 802376a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802376c:	4316      	orrs	r6, r2
 802376e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023772:	432e      	orrs	r6, r5
 8023774:	f823 6b02 	strh.w	r6, [r3], #2
 8023778:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802377a:	930c      	str	r3, [sp, #48]	; 0x30
 802377c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802377e:	4413      	add	r3, r2
 8023780:	931f      	str	r3, [sp, #124]	; 0x7c
 8023782:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8023784:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023786:	4413      	add	r3, r2
 8023788:	9320      	str	r3, [sp, #128]	; 0x80
 802378a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802378c:	3b01      	subs	r3, #1
 802378e:	9311      	str	r3, [sp, #68]	; 0x44
 8023790:	e6db      	b.n	802354a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8023792:	b149      	cbz	r1, 80237a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8023794:	5cb2      	ldrb	r2, [r6, r2]
 8023796:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802379a:	4422      	add	r2, r4
 802379c:	4628      	mov	r0, r5
 802379e:	462f      	mov	r7, r5
 80237a0:	e771      	b.n	8023686 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80237a2:	4628      	mov	r0, r5
 80237a4:	462a      	mov	r2, r5
 80237a6:	e76e      	b.n	8023686 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80237a8:	4628      	mov	r0, r5
 80237aa:	462a      	mov	r2, r5
 80237ac:	e7f7      	b.n	802379e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80237ae:	b015      	add	sp, #84	; 0x54
 80237b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080237b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80237b4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80237b8:	880f      	ldrh	r7, [r1, #0]
 80237ba:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 80237be:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80237c2:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 80237c6:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80237ca:	023c      	lsls	r4, r7, #8
 80237cc:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 80237d0:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 80237d4:	017c      	lsls	r4, r7, #5
 80237d6:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 80237da:	00ff      	lsls	r7, r7, #3
 80237dc:	ea4b 0404 	orr.w	r4, fp, r4
 80237e0:	b2ff      	uxtb	r7, r7
 80237e2:	fb05 ca0e 	mla	sl, r5, lr, ip
 80237e6:	4327      	orrs	r7, r4
 80237e8:	2d00      	cmp	r5, #0
 80237ea:	eb02 080a 	add.w	r8, r2, sl
 80237ee:	9701      	str	r7, [sp, #4]
 80237f0:	db7e      	blt.n	80238f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80237f2:	45a9      	cmp	r9, r5
 80237f4:	dd7c      	ble.n	80238f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80237f6:	f1bc 0f00 	cmp.w	ip, #0
 80237fa:	db77      	blt.n	80238ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 80237fc:	45e6      	cmp	lr, ip
 80237fe:	dd75      	ble.n	80238ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8023800:	f812 700a 	ldrb.w	r7, [r2, sl]
 8023804:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8023808:	441f      	add	r7, r3
 802380a:	f11c 0201 	adds.w	r2, ip, #1
 802380e:	d472      	bmi.n	80238f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023810:	4596      	cmp	lr, r2
 8023812:	dd70      	ble.n	80238f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023814:	2800      	cmp	r0, #0
 8023816:	d06e      	beq.n	80238f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023818:	f898 4001 	ldrb.w	r4, [r8, #1]
 802381c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8023820:	441c      	add	r4, r3
 8023822:	3501      	adds	r5, #1
 8023824:	d46b      	bmi.n	80238fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8023826:	45a9      	cmp	r9, r5
 8023828:	dd69      	ble.n	80238fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802382a:	2e00      	cmp	r6, #0
 802382c:	d067      	beq.n	80238fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802382e:	f1bc 0f00 	cmp.w	ip, #0
 8023832:	db62      	blt.n	80238fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8023834:	45e6      	cmp	lr, ip
 8023836:	dd60      	ble.n	80238fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8023838:	f818 500e 	ldrb.w	r5, [r8, lr]
 802383c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8023840:	441d      	add	r5, r3
 8023842:	f11c 0201 	adds.w	r2, ip, #1
 8023846:	d45d      	bmi.n	8023904 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8023848:	4596      	cmp	lr, r2
 802384a:	dd5b      	ble.n	8023904 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 802384c:	2800      	cmp	r0, #0
 802384e:	d059      	beq.n	8023904 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8023850:	44c6      	add	lr, r8
 8023852:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8023856:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802385a:	4413      	add	r3, r2
 802385c:	b280      	uxth	r0, r0
 802385e:	b2b2      	uxth	r2, r6
 8023860:	fb00 f602 	mul.w	r6, r0, r2
 8023864:	0100      	lsls	r0, r0, #4
 8023866:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802386a:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 802386e:	1b80      	subs	r0, r0, r6
 8023870:	fa1f fc82 	uxth.w	ip, r2
 8023874:	b282      	uxth	r2, r0
 8023876:	78a0      	ldrb	r0, [r4, #2]
 8023878:	f897 e002 	ldrb.w	lr, [r7, #2]
 802387c:	f897 9000 	ldrb.w	r9, [r7]
 8023880:	787f      	ldrb	r7, [r7, #1]
 8023882:	eba8 080c 	sub.w	r8, r8, ip
 8023886:	fa1f f888 	uxth.w	r8, r8
 802388a:	4350      	muls	r0, r2
 802388c:	fb08 0e0e 	mla	lr, r8, lr, r0
 8023890:	78a8      	ldrb	r0, [r5, #2]
 8023892:	fb0c e000 	mla	r0, ip, r0, lr
 8023896:	f893 e002 	ldrb.w	lr, [r3, #2]
 802389a:	fb06 0e0e 	mla	lr, r6, lr, r0
 802389e:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 80238a2:	f894 e000 	ldrb.w	lr, [r4]
 80238a6:	fb02 fe0e 	mul.w	lr, r2, lr
 80238aa:	fb08 e909 	mla	r9, r8, r9, lr
 80238ae:	f895 e000 	ldrb.w	lr, [r5]
 80238b2:	fb0c 990e 	mla	r9, ip, lr, r9
 80238b6:	f893 e000 	ldrb.w	lr, [r3]
 80238ba:	785b      	ldrb	r3, [r3, #1]
 80238bc:	fb06 9e0e 	mla	lr, r6, lr, r9
 80238c0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80238c4:	ea4e 0e00 	orr.w	lr, lr, r0
 80238c8:	7860      	ldrb	r0, [r4, #1]
 80238ca:	4350      	muls	r0, r2
 80238cc:	786a      	ldrb	r2, [r5, #1]
 80238ce:	fb08 0007 	mla	r0, r8, r7, r0
 80238d2:	fb0c 0202 	mla	r2, ip, r2, r0
 80238d6:	fb06 2303 	mla	r3, r6, r3, r2
 80238da:	095b      	lsrs	r3, r3, #5
 80238dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80238e0:	ea4e 0303 	orr.w	r3, lr, r3
 80238e4:	800b      	strh	r3, [r1, #0]
 80238e6:	b003      	add	sp, #12
 80238e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80238ec:	af01      	add	r7, sp, #4
 80238ee:	e78c      	b.n	802380a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 80238f0:	ac01      	add	r4, sp, #4
 80238f2:	4627      	mov	r7, r4
 80238f4:	e795      	b.n	8023822 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80238f6:	ac01      	add	r4, sp, #4
 80238f8:	e793      	b.n	8023822 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80238fa:	ad01      	add	r5, sp, #4
 80238fc:	e7a1      	b.n	8023842 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 80238fe:	ab01      	add	r3, sp, #4
 8023900:	461d      	mov	r5, r3
 8023902:	e7ab      	b.n	802385c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8023904:	ab01      	add	r3, sp, #4
 8023906:	e7a9      	b.n	802385c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08023908 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023908:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802390c:	b08f      	sub	sp, #60	; 0x3c
 802390e:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8023912:	920c      	str	r2, [sp, #48]	; 0x30
 8023914:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8023916:	910a      	str	r1, [sp, #40]	; 0x28
 8023918:	9306      	str	r3, [sp, #24]
 802391a:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 802391e:	900d      	str	r0, [sp, #52]	; 0x34
 8023920:	6850      	ldr	r0, [r2, #4]
 8023922:	6812      	ldr	r2, [r2, #0]
 8023924:	fb00 1303 	mla	r3, r0, r3, r1
 8023928:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802392c:	9307      	str	r3, [sp, #28]
 802392e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023930:	681b      	ldr	r3, [r3, #0]
 8023932:	9308      	str	r3, [sp, #32]
 8023934:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023936:	685c      	ldr	r4, [r3, #4]
 8023938:	3404      	adds	r4, #4
 802393a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802393c:	2b00      	cmp	r3, #0
 802393e:	dc03      	bgt.n	8023948 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8023940:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023942:	2b00      	cmp	r3, #0
 8023944:	f340 81d6 	ble.w	8023cf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8023948:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802394a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802394e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023952:	1e48      	subs	r0, r1, #1
 8023954:	1e56      	subs	r6, r2, #1
 8023956:	9b06      	ldr	r3, [sp, #24]
 8023958:	2b00      	cmp	r3, #0
 802395a:	f340 80b7 	ble.w	8023acc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 802395e:	ea5f 472b 	movs.w	r7, fp, asr #16
 8023962:	ea4f 4325 	mov.w	r3, r5, asr #16
 8023966:	d406      	bmi.n	8023976 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8023968:	4287      	cmp	r7, r0
 802396a:	da04      	bge.n	8023976 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802396c:	2b00      	cmp	r3, #0
 802396e:	db02      	blt.n	8023976 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8023970:	42b3      	cmp	r3, r6
 8023972:	f2c0 80ac 	blt.w	8023ace <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8023976:	3701      	adds	r7, #1
 8023978:	f100 809d 	bmi.w	8023ab6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 802397c:	42b9      	cmp	r1, r7
 802397e:	f2c0 809a 	blt.w	8023ab6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8023982:	3301      	adds	r3, #1
 8023984:	f100 8097 	bmi.w	8023ab6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8023988:	429a      	cmp	r2, r3
 802398a:	f2c0 8094 	blt.w	8023ab6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 802398e:	9b06      	ldr	r3, [sp, #24]
 8023990:	930b      	str	r3, [sp, #44]	; 0x2c
 8023992:	9b07      	ldr	r3, [sp, #28]
 8023994:	9309      	str	r3, [sp, #36]	; 0x24
 8023996:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023998:	2b00      	cmp	r3, #0
 802399a:	f340 80b5 	ble.w	8023b08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802399e:	9820      	ldr	r0, [sp, #128]	; 0x80
 80239a0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80239a2:	68c7      	ldr	r7, [r0, #12]
 80239a4:	6892      	ldr	r2, [r2, #8]
 80239a6:	ea5f 402b 	movs.w	r0, fp, asr #16
 80239aa:	ea4f 4625 	mov.w	r6, r5, asr #16
 80239ae:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80239b2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80239b6:	f100 80fb 	bmi.w	8023bb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80239ba:	f102 3cff 	add.w	ip, r2, #4294967295
 80239be:	4560      	cmp	r0, ip
 80239c0:	f280 80f6 	bge.w	8023bb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80239c4:	2e00      	cmp	r6, #0
 80239c6:	f2c0 80f3 	blt.w	8023bb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80239ca:	f107 3cff 	add.w	ip, r7, #4294967295
 80239ce:	4566      	cmp	r6, ip
 80239d0:	f280 80ee 	bge.w	8023bb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80239d4:	b212      	sxth	r2, r2
 80239d6:	fb06 0002 	mla	r0, r6, r2, r0
 80239da:	9e08      	ldr	r6, [sp, #32]
 80239dc:	1837      	adds	r7, r6, r0
 80239de:	5c30      	ldrb	r0, [r6, r0]
 80239e0:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 80239e4:	eb04 0c08 	add.w	ip, r4, r8
 80239e8:	2b00      	cmp	r3, #0
 80239ea:	f000 80d3 	beq.w	8023b94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80239ee:	787e      	ldrb	r6, [r7, #1]
 80239f0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80239f4:	4426      	add	r6, r4
 80239f6:	2900      	cmp	r1, #0
 80239f8:	f000 80d4 	beq.w	8023ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 80239fc:	18b8      	adds	r0, r7, r2
 80239fe:	5cba      	ldrb	r2, [r7, r2]
 8023a00:	7840      	ldrb	r0, [r0, #1]
 8023a02:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023a06:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023a0a:	4422      	add	r2, r4
 8023a0c:	4420      	add	r0, r4
 8023a0e:	b29b      	uxth	r3, r3
 8023a10:	b289      	uxth	r1, r1
 8023a12:	fb03 f901 	mul.w	r9, r3, r1
 8023a16:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023a1a:	011b      	lsls	r3, r3, #4
 8023a1c:	b289      	uxth	r1, r1
 8023a1e:	78b7      	ldrb	r7, [r6, #2]
 8023a20:	f89c a002 	ldrb.w	sl, [ip, #2]
 8023a24:	f89c c001 	ldrb.w	ip, [ip, #1]
 8023a28:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8023a2c:	eba3 0309 	sub.w	r3, r3, r9
 8023a30:	b29b      	uxth	r3, r3
 8023a32:	ebae 0e01 	sub.w	lr, lr, r1
 8023a36:	fa1f fe8e 	uxth.w	lr, lr
 8023a3a:	435f      	muls	r7, r3
 8023a3c:	fb0e 770a 	mla	r7, lr, sl, r7
 8023a40:	f892 a002 	ldrb.w	sl, [r2, #2]
 8023a44:	fb01 770a 	mla	r7, r1, sl, r7
 8023a48:	f890 a002 	ldrb.w	sl, [r0, #2]
 8023a4c:	fb09 7a0a 	mla	sl, r9, sl, r7
 8023a50:	f814 7008 	ldrb.w	r7, [r4, r8]
 8023a54:	f896 8000 	ldrb.w	r8, [r6]
 8023a58:	7876      	ldrb	r6, [r6, #1]
 8023a5a:	fb03 f808 	mul.w	r8, r3, r8
 8023a5e:	fb0e 8807 	mla	r8, lr, r7, r8
 8023a62:	7817      	ldrb	r7, [r2, #0]
 8023a64:	fb01 8807 	mla	r8, r1, r7, r8
 8023a68:	7807      	ldrb	r7, [r0, #0]
 8023a6a:	fb09 8707 	mla	r7, r9, r7, r8
 8023a6e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8023a72:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023a76:	ea47 070a 	orr.w	r7, r7, sl
 8023a7a:	4373      	muls	r3, r6
 8023a7c:	f892 a001 	ldrb.w	sl, [r2, #1]
 8023a80:	fb0e 330c 	mla	r3, lr, ip, r3
 8023a84:	fb01 310a 	mla	r1, r1, sl, r3
 8023a88:	f890 a001 	ldrb.w	sl, [r0, #1]
 8023a8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023a8e:	fb09 1a0a 	mla	sl, r9, sl, r1
 8023a92:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8023a96:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8023a9a:	ea47 070a 	orr.w	r7, r7, sl
 8023a9e:	801f      	strh	r7, [r3, #0]
 8023aa0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023aa2:	3302      	adds	r3, #2
 8023aa4:	9309      	str	r3, [sp, #36]	; 0x24
 8023aa6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023aa8:	449b      	add	fp, r3
 8023aaa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023aac:	441d      	add	r5, r3
 8023aae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023ab0:	3b01      	subs	r3, #1
 8023ab2:	930b      	str	r3, [sp, #44]	; 0x2c
 8023ab4:	e76f      	b.n	8023996 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023ab6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023ab8:	449b      	add	fp, r3
 8023aba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023abc:	441d      	add	r5, r3
 8023abe:	9b06      	ldr	r3, [sp, #24]
 8023ac0:	3b01      	subs	r3, #1
 8023ac2:	9306      	str	r3, [sp, #24]
 8023ac4:	9b07      	ldr	r3, [sp, #28]
 8023ac6:	3302      	adds	r3, #2
 8023ac8:	9307      	str	r3, [sp, #28]
 8023aca:	e744      	b.n	8023956 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8023acc:	d023      	beq.n	8023b16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8023ace:	9b06      	ldr	r3, [sp, #24]
 8023ad0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8023ad2:	3b01      	subs	r3, #1
 8023ad4:	fb00 b003 	mla	r0, r0, r3, fp
 8023ad8:	1400      	asrs	r0, r0, #16
 8023ada:	f53f af58 	bmi.w	802398e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023ade:	3901      	subs	r1, #1
 8023ae0:	4288      	cmp	r0, r1
 8023ae2:	f6bf af54 	bge.w	802398e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023ae6:	991c      	ldr	r1, [sp, #112]	; 0x70
 8023ae8:	fb01 5303 	mla	r3, r1, r3, r5
 8023aec:	141b      	asrs	r3, r3, #16
 8023aee:	f53f af4e 	bmi.w	802398e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023af2:	3a01      	subs	r2, #1
 8023af4:	4293      	cmp	r3, r2
 8023af6:	f6bf af4a 	bge.w	802398e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023afa:	9b06      	ldr	r3, [sp, #24]
 8023afc:	9309      	str	r3, [sp, #36]	; 0x24
 8023afe:	9b07      	ldr	r3, [sp, #28]
 8023b00:	930b      	str	r3, [sp, #44]	; 0x2c
 8023b02:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023b04:	2b00      	cmp	r3, #0
 8023b06:	dc70      	bgt.n	8023bea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8023b08:	9b06      	ldr	r3, [sp, #24]
 8023b0a:	9a07      	ldr	r2, [sp, #28]
 8023b0c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8023b10:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023b14:	9307      	str	r3, [sp, #28]
 8023b16:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023b18:	2b00      	cmp	r3, #0
 8023b1a:	f340 80eb 	ble.w	8023cf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8023b1e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023b22:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023b26:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023b2a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023b2c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023b30:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023b34:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023b38:	eef0 6a62 	vmov.f32	s13, s5
 8023b3c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023b40:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023b44:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023b48:	ee16 ba90 	vmov	fp, s13
 8023b4c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023b50:	eef0 6a43 	vmov.f32	s13, s6
 8023b54:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023b58:	ee12 2a90 	vmov	r2, s5
 8023b5c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023b60:	fb92 f3f3 	sdiv	r3, r2, r3
 8023b64:	ee13 2a10 	vmov	r2, s6
 8023b68:	931b      	str	r3, [sp, #108]	; 0x6c
 8023b6a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023b6c:	fb92 f3f3 	sdiv	r3, r2, r3
 8023b70:	931c      	str	r3, [sp, #112]	; 0x70
 8023b72:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023b74:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023b76:	3b01      	subs	r3, #1
 8023b78:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023b7c:	930a      	str	r3, [sp, #40]	; 0x28
 8023b7e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023b80:	bf08      	it	eq
 8023b82:	4613      	moveq	r3, r2
 8023b84:	ee16 5a90 	vmov	r5, s13
 8023b88:	9306      	str	r3, [sp, #24]
 8023b8a:	eeb0 3a67 	vmov.f32	s6, s15
 8023b8e:	eef0 2a47 	vmov.f32	s5, s14
 8023b92:	e6d2      	b.n	802393a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8023b94:	b149      	cbz	r1, 8023baa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8023b96:	5cba      	ldrb	r2, [r7, r2]
 8023b98:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023b9c:	4422      	add	r2, r4
 8023b9e:	4660      	mov	r0, ip
 8023ba0:	4666      	mov	r6, ip
 8023ba2:	e734      	b.n	8023a0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8023ba4:	4660      	mov	r0, ip
 8023ba6:	4662      	mov	r2, ip
 8023ba8:	e731      	b.n	8023a0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8023baa:	4660      	mov	r0, ip
 8023bac:	4662      	mov	r2, ip
 8023bae:	e7f7      	b.n	8023ba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8023bb0:	f110 0c01 	adds.w	ip, r0, #1
 8023bb4:	f53f af74 	bmi.w	8023aa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023bb8:	4562      	cmp	r2, ip
 8023bba:	f6ff af71 	blt.w	8023aa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023bbe:	f116 0c01 	adds.w	ip, r6, #1
 8023bc2:	f53f af6d 	bmi.w	8023aa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023bc6:	4567      	cmp	r7, ip
 8023bc8:	f6ff af6a 	blt.w	8023aa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023bcc:	b23f      	sxth	r7, r7
 8023bce:	b212      	sxth	r2, r2
 8023bd0:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8023bd4:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8023bd8:	9200      	str	r2, [sp, #0]
 8023bda:	9701      	str	r7, [sp, #4]
 8023bdc:	4623      	mov	r3, r4
 8023bde:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8023be2:	980d      	ldr	r0, [sp, #52]	; 0x34
 8023be4:	f7ff fde6 	bl	80237b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8023be8:	e75a      	b.n	8023aa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023bea:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023bec:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8023bf0:	ea4f 462b 	mov.w	r6, fp, asr #16
 8023bf4:	1428      	asrs	r0, r5, #16
 8023bf6:	fb02 6000 	mla	r0, r2, r0, r6
 8023bfa:	9e08      	ldr	r6, [sp, #32]
 8023bfc:	f816 8000 	ldrb.w	r8, [r6, r0]
 8023c00:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8023c04:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8023c08:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8023c0c:	1837      	adds	r7, r6, r0
 8023c0e:	eb04 0c08 	add.w	ip, r4, r8
 8023c12:	2b00      	cmp	r3, #0
 8023c14:	d060      	beq.n	8023cd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8023c16:	787e      	ldrb	r6, [r7, #1]
 8023c18:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8023c1c:	4426      	add	r6, r4
 8023c1e:	2900      	cmp	r1, #0
 8023c20:	d062      	beq.n	8023ce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8023c22:	18b8      	adds	r0, r7, r2
 8023c24:	5cba      	ldrb	r2, [r7, r2]
 8023c26:	7840      	ldrb	r0, [r0, #1]
 8023c28:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023c2c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023c30:	4422      	add	r2, r4
 8023c32:	4420      	add	r0, r4
 8023c34:	b29b      	uxth	r3, r3
 8023c36:	b289      	uxth	r1, r1
 8023c38:	fb03 f901 	mul.w	r9, r3, r1
 8023c3c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023c40:	011b      	lsls	r3, r3, #4
 8023c42:	b289      	uxth	r1, r1
 8023c44:	78b7      	ldrb	r7, [r6, #2]
 8023c46:	f89c a002 	ldrb.w	sl, [ip, #2]
 8023c4a:	f89c c001 	ldrb.w	ip, [ip, #1]
 8023c4e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8023c52:	eba3 0309 	sub.w	r3, r3, r9
 8023c56:	b29b      	uxth	r3, r3
 8023c58:	ebae 0e01 	sub.w	lr, lr, r1
 8023c5c:	fa1f fe8e 	uxth.w	lr, lr
 8023c60:	435f      	muls	r7, r3
 8023c62:	fb0e 770a 	mla	r7, lr, sl, r7
 8023c66:	f892 a002 	ldrb.w	sl, [r2, #2]
 8023c6a:	fb01 770a 	mla	r7, r1, sl, r7
 8023c6e:	f890 a002 	ldrb.w	sl, [r0, #2]
 8023c72:	fb09 7a0a 	mla	sl, r9, sl, r7
 8023c76:	f814 7008 	ldrb.w	r7, [r4, r8]
 8023c7a:	f896 8000 	ldrb.w	r8, [r6]
 8023c7e:	7876      	ldrb	r6, [r6, #1]
 8023c80:	fb03 f808 	mul.w	r8, r3, r8
 8023c84:	fb0e 8807 	mla	r8, lr, r7, r8
 8023c88:	7817      	ldrb	r7, [r2, #0]
 8023c8a:	fb01 8807 	mla	r8, r1, r7, r8
 8023c8e:	7807      	ldrb	r7, [r0, #0]
 8023c90:	fb09 8707 	mla	r7, r9, r7, r8
 8023c94:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8023c98:	4373      	muls	r3, r6
 8023c9a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023c9e:	7856      	ldrb	r6, [r2, #1]
 8023ca0:	ea47 070a 	orr.w	r7, r7, sl
 8023ca4:	fb0e 330c 	mla	r3, lr, ip, r3
 8023ca8:	f890 a001 	ldrb.w	sl, [r0, #1]
 8023cac:	fb01 3306 	mla	r3, r1, r6, r3
 8023cb0:	fb09 3a0a 	mla	sl, r9, sl, r3
 8023cb4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8023cb8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023cba:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8023cbe:	ea47 070a 	orr.w	r7, r7, sl
 8023cc2:	f823 7b02 	strh.w	r7, [r3], #2
 8023cc6:	930b      	str	r3, [sp, #44]	; 0x2c
 8023cc8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023cca:	449b      	add	fp, r3
 8023ccc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023cce:	441d      	add	r5, r3
 8023cd0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023cd2:	3b01      	subs	r3, #1
 8023cd4:	9309      	str	r3, [sp, #36]	; 0x24
 8023cd6:	e714      	b.n	8023b02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8023cd8:	b149      	cbz	r1, 8023cee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8023cda:	5cba      	ldrb	r2, [r7, r2]
 8023cdc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023ce0:	4422      	add	r2, r4
 8023ce2:	4660      	mov	r0, ip
 8023ce4:	4666      	mov	r6, ip
 8023ce6:	e7a5      	b.n	8023c34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8023ce8:	4660      	mov	r0, ip
 8023cea:	4662      	mov	r2, ip
 8023cec:	e7a2      	b.n	8023c34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8023cee:	4660      	mov	r0, ip
 8023cf0:	4662      	mov	r2, ip
 8023cf2:	e7f7      	b.n	8023ce4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8023cf4:	b00f      	add	sp, #60	; 0x3c
 8023cf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023cfa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8023cfa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023cfe:	b085      	sub	sp, #20
 8023d00:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8023d04:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8023d08:	9102      	str	r1, [sp, #8]
 8023d0a:	2c00      	cmp	r4, #0
 8023d0c:	fb04 710c 	mla	r1, r4, ip, r7
 8023d10:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8023d14:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8023d18:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8023d1c:	eb02 0e01 	add.w	lr, r2, r1
 8023d20:	f2c0 8122 	blt.w	8023f68 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8023d24:	45a0      	cmp	r8, r4
 8023d26:	f340 811f 	ble.w	8023f68 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8023d2a:	2f00      	cmp	r7, #0
 8023d2c:	f2c0 811a 	blt.w	8023f64 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8023d30:	45bc      	cmp	ip, r7
 8023d32:	f340 8117 	ble.w	8023f64 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8023d36:	5c52      	ldrb	r2, [r2, r1]
 8023d38:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8023d3c:	1c7a      	adds	r2, r7, #1
 8023d3e:	f100 8116 	bmi.w	8023f6e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8023d42:	4594      	cmp	ip, r2
 8023d44:	f340 8113 	ble.w	8023f6e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8023d48:	2e00      	cmp	r6, #0
 8023d4a:	f000 8112 	beq.w	8023f72 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8023d4e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8023d52:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8023d56:	3401      	adds	r4, #1
 8023d58:	f100 810f 	bmi.w	8023f7a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8023d5c:	45a0      	cmp	r8, r4
 8023d5e:	f340 810c 	ble.w	8023f7a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8023d62:	2800      	cmp	r0, #0
 8023d64:	f000 810c 	beq.w	8023f80 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8023d68:	2f00      	cmp	r7, #0
 8023d6a:	f2c0 8104 	blt.w	8023f76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8023d6e:	45bc      	cmp	ip, r7
 8023d70:	f340 8101 	ble.w	8023f76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8023d74:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8023d78:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8023d7c:	3701      	adds	r7, #1
 8023d7e:	f100 8102 	bmi.w	8023f86 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8023d82:	45bc      	cmp	ip, r7
 8023d84:	f340 80ff 	ble.w	8023f86 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8023d88:	2e00      	cmp	r6, #0
 8023d8a:	f000 80fe 	beq.w	8023f8a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8023d8e:	44f4      	add	ip, lr
 8023d90:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8023d94:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8023d98:	b2b6      	uxth	r6, r6
 8023d9a:	b280      	uxth	r0, r0
 8023d9c:	fb00 fe06 	mul.w	lr, r0, r6
 8023da0:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023da4:	0136      	lsls	r6, r6, #4
 8023da6:	eba6 070e 	sub.w	r7, r6, lr
 8023daa:	b280      	uxth	r0, r0
 8023dac:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8023db0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023db4:	b2bf      	uxth	r7, r7
 8023db6:	1a1b      	subs	r3, r3, r0
 8023db8:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023dbc:	b29b      	uxth	r3, r3
 8023dbe:	fb0a f607 	mul.w	r6, sl, r7
 8023dc2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023dc6:	fb0b 6603 	mla	r6, fp, r3, r6
 8023dca:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023dce:	fb00 6609 	mla	r6, r0, r9, r6
 8023dd2:	fb0e 6608 	mla	r6, lr, r8, r6
 8023dd6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023dda:	9600      	str	r6, [sp, #0]
 8023ddc:	2e00      	cmp	r6, #0
 8023dde:	f000 80be 	beq.w	8023f5e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8023de2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023de6:	fb0b fc0c 	mul.w	ip, fp, ip
 8023dea:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8023dee:	fb0b f505 	mul.w	r5, fp, r5
 8023df2:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023df6:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023dfa:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023dfe:	44dc      	add	ip, fp
 8023e00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023e04:	9501      	str	r5, [sp, #4]
 8023e06:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023e0a:	9503      	str	r5, [sp, #12]
 8023e0c:	9d01      	ldr	r5, [sp, #4]
 8023e0e:	9e02      	ldr	r6, [sp, #8]
 8023e10:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023e14:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023e18:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023e1c:	fb0a fc0c 	mul.w	ip, sl, ip
 8023e20:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023e24:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023e28:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023e2c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023e30:	4465      	add	r5, ip
 8023e32:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023e36:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023e3a:	fb09 fc0c 	mul.w	ip, r9, ip
 8023e3e:	fb09 f904 	mul.w	r9, r9, r4
 8023e42:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023e46:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023e4a:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023e4e:	fb08 f404 	mul.w	r4, r8, r4
 8023e52:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023e56:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023e5a:	fb08 f802 	mul.w	r8, r8, r2
 8023e5e:	fb0a fa01 	mul.w	sl, sl, r1
 8023e62:	0a22      	lsrs	r2, r4, #8
 8023e64:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023e68:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023e6c:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023e70:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023e74:	4414      	add	r4, r2
 8023e76:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023e7a:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023e7e:	0a2d      	lsrs	r5, r5, #8
 8023e80:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023e84:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023e88:	9a03      	ldr	r2, [sp, #12]
 8023e8a:	8836      	ldrh	r6, [r6, #0]
 8023e8c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023e90:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023e94:	437d      	muls	r5, r7
 8023e96:	4461      	add	r1, ip
 8023e98:	0a24      	lsrs	r4, r4, #8
 8023e9a:	fb02 5503 	mla	r5, r2, r3, r5
 8023e9e:	0a09      	lsrs	r1, r1, #8
 8023ea0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023ea4:	fb04 540e 	mla	r4, r4, lr, r5
 8023ea8:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023eac:	fb01 4100 	mla	r1, r1, r0, r4
 8023eb0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023eb4:	0a09      	lsrs	r1, r1, #8
 8023eb6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023eba:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8023ebe:	fb07 f70a 	mul.w	r7, r7, sl
 8023ec2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023ec6:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023eca:	fb03 7101 	mla	r1, r3, r1, r7
 8023ece:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023ed2:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023ed6:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023eda:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023ede:	fb00 e101 	mla	r1, r0, r1, lr
 8023ee2:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8023ee6:	9a00      	ldr	r2, [sp, #0]
 8023ee8:	b287      	uxth	r7, r0
 8023eea:	437a      	muls	r2, r7
 8023eec:	0a09      	lsrs	r1, r1, #8
 8023eee:	1c53      	adds	r3, r2, #1
 8023ef0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023ef4:	4321      	orrs	r1, r4
 8023ef6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023efa:	1235      	asrs	r5, r6, #8
 8023efc:	0c0a      	lsrs	r2, r1, #16
 8023efe:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8023f02:	b2db      	uxtb	r3, r3
 8023f04:	fb12 f207 	smulbb	r2, r2, r7
 8023f08:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023f0c:	fb05 2503 	mla	r5, r5, r3, r2
 8023f10:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8023f14:	10f2      	asrs	r2, r6, #3
 8023f16:	b2c8      	uxtb	r0, r1
 8023f18:	00f6      	lsls	r6, r6, #3
 8023f1a:	fb14 f407 	smulbb	r4, r4, r7
 8023f1e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023f22:	b2f6      	uxtb	r6, r6
 8023f24:	fb10 f007 	smulbb	r0, r0, r7
 8023f28:	fb02 4203 	mla	r2, r2, r3, r4
 8023f2c:	b2ad      	uxth	r5, r5
 8023f2e:	fb06 0303 	mla	r3, r6, r3, r0
 8023f32:	b299      	uxth	r1, r3
 8023f34:	b294      	uxth	r4, r2
 8023f36:	1c6b      	adds	r3, r5, #1
 8023f38:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023f3c:	1c62      	adds	r2, r4, #1
 8023f3e:	1c4b      	adds	r3, r1, #1
 8023f40:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023f44:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8023f48:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023f4c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023f50:	0952      	lsrs	r2, r2, #5
 8023f52:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023f56:	432b      	orrs	r3, r5
 8023f58:	4313      	orrs	r3, r2
 8023f5a:	9a02      	ldr	r2, [sp, #8]
 8023f5c:	8013      	strh	r3, [r2, #0]
 8023f5e:	b005      	add	sp, #20
 8023f60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023f64:	2500      	movs	r5, #0
 8023f66:	e6e9      	b.n	8023d3c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8023f68:	2100      	movs	r1, #0
 8023f6a:	460d      	mov	r5, r1
 8023f6c:	e6f3      	b.n	8023d56 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8023f6e:	2100      	movs	r1, #0
 8023f70:	e6f1      	b.n	8023d56 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8023f72:	4631      	mov	r1, r6
 8023f74:	e6ef      	b.n	8023d56 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8023f76:	2400      	movs	r4, #0
 8023f78:	e700      	b.n	8023d7c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8023f7a:	2200      	movs	r2, #0
 8023f7c:	4614      	mov	r4, r2
 8023f7e:	e70b      	b.n	8023d98 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8023f80:	4602      	mov	r2, r0
 8023f82:	4604      	mov	r4, r0
 8023f84:	e708      	b.n	8023d98 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8023f86:	2200      	movs	r2, #0
 8023f88:	e706      	b.n	8023d98 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8023f8a:	4632      	mov	r2, r6
 8023f8c:	e704      	b.n	8023d98 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08023f8e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023f8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023f92:	b09f      	sub	sp, #124	; 0x7c
 8023f94:	921b      	str	r2, [sp, #108]	; 0x6c
 8023f96:	9309      	str	r3, [sp, #36]	; 0x24
 8023f98:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8023f9a:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8023f9e:	931c      	str	r3, [sp, #112]	; 0x70
 8023fa0:	9119      	str	r1, [sp, #100]	; 0x64
 8023fa2:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8023fa6:	901d      	str	r0, [sp, #116]	; 0x74
 8023fa8:	6850      	ldr	r0, [r2, #4]
 8023faa:	6812      	ldr	r2, [r2, #0]
 8023fac:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8023fae:	fb00 1303 	mla	r3, r0, r3, r1
 8023fb2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023fb6:	930c      	str	r3, [sp, #48]	; 0x30
 8023fb8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023fba:	681b      	ldr	r3, [r3, #0]
 8023fbc:	9312      	str	r3, [sp, #72]	; 0x48
 8023fbe:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023fc0:	685e      	ldr	r6, [r3, #4]
 8023fc2:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8023fc6:	930d      	str	r3, [sp, #52]	; 0x34
 8023fc8:	3604      	adds	r6, #4
 8023fca:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8023fcc:	2b00      	cmp	r3, #0
 8023fce:	dc03      	bgt.n	8023fd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8023fd0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023fd2:	2b00      	cmp	r3, #0
 8023fd4:	f340 8388 	ble.w	80246e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8023fd8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023fda:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023fde:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023fe2:	1e48      	subs	r0, r1, #1
 8023fe4:	1e57      	subs	r7, r2, #1
 8023fe6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023fe8:	2b00      	cmp	r3, #0
 8023fea:	f340 8195 	ble.w	8024318 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8023fee:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8023ff0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023ff4:	ea4f 4325 	mov.w	r3, r5, asr #16
 8023ff8:	d406      	bmi.n	8024008 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023ffa:	4584      	cmp	ip, r0
 8023ffc:	da04      	bge.n	8024008 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023ffe:	2b00      	cmp	r3, #0
 8024000:	db02      	blt.n	8024008 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8024002:	42bb      	cmp	r3, r7
 8024004:	f2c0 8189 	blt.w	802431a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8024008:	f11c 0c01 	adds.w	ip, ip, #1
 802400c:	f100 8177 	bmi.w	80242fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8024010:	4561      	cmp	r1, ip
 8024012:	f2c0 8174 	blt.w	80242fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8024016:	3301      	adds	r3, #1
 8024018:	f100 8171 	bmi.w	80242fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802401c:	429a      	cmp	r2, r3
 802401e:	f2c0 816e 	blt.w	80242fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8024022:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024024:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8024026:	931a      	str	r3, [sp, #104]	; 0x68
 8024028:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802402a:	2b00      	cmp	r3, #0
 802402c:	f340 8193 	ble.w	8024356 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8024030:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024032:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024036:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024038:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 802403c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802403e:	141b      	asrs	r3, r3, #16
 8024040:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8024044:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8024048:	f100 81d6 	bmi.w	80243f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802404c:	f100 38ff 	add.w	r8, r0, #4294967295
 8024050:	4543      	cmp	r3, r8
 8024052:	f280 81d1 	bge.w	80243f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8024056:	f1bc 0f00 	cmp.w	ip, #0
 802405a:	f2c0 81cd 	blt.w	80243f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802405e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024062:	45c4      	cmp	ip, r8
 8024064:	f280 81c8 	bge.w	80243f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8024068:	b200      	sxth	r0, r0
 802406a:	fb0c 3300 	mla	r3, ip, r0, r3
 802406e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024070:	eb04 0803 	add.w	r8, r4, r3
 8024074:	5ce3      	ldrb	r3, [r4, r3]
 8024076:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802407a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 802407e:	2a00      	cmp	r2, #0
 8024080:	f000 81af 	beq.w	80243e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024084:	f898 c001 	ldrb.w	ip, [r8, #1]
 8024088:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 802408c:	940e      	str	r4, [sp, #56]	; 0x38
 802408e:	0e24      	lsrs	r4, r4, #24
 8024090:	9415      	str	r4, [sp, #84]	; 0x54
 8024092:	b179      	cbz	r1, 80240b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8024094:	eb08 0c00 	add.w	ip, r8, r0
 8024098:	f818 0000 	ldrb.w	r0, [r8, r0]
 802409c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80240a0:	900a      	str	r0, [sp, #40]	; 0x28
 80240a2:	0e00      	lsrs	r0, r0, #24
 80240a4:	9013      	str	r0, [sp, #76]	; 0x4c
 80240a6:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80240aa:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80240ae:	900f      	str	r0, [sp, #60]	; 0x3c
 80240b0:	0e00      	lsrs	r0, r0, #24
 80240b2:	9016      	str	r0, [sp, #88]	; 0x58
 80240b4:	b292      	uxth	r2, r2
 80240b6:	b289      	uxth	r1, r1
 80240b8:	fb02 f901 	mul.w	r9, r2, r1
 80240bc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80240c0:	0112      	lsls	r2, r2, #4
 80240c2:	eba2 0809 	sub.w	r8, r2, r9
 80240c6:	b289      	uxth	r1, r1
 80240c8:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80240cc:	9815      	ldr	r0, [sp, #84]	; 0x54
 80240ce:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80240d0:	fa1f f888 	uxth.w	r8, r8
 80240d4:	1a52      	subs	r2, r2, r1
 80240d6:	b292      	uxth	r2, r2
 80240d8:	fb08 f000 	mul.w	r0, r8, r0
 80240dc:	fb02 000e 	mla	r0, r2, lr, r0
 80240e0:	fb01 0004 	mla	r0, r1, r4, r0
 80240e4:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80240e6:	fb09 0004 	mla	r0, r9, r4, r0
 80240ea:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80240ee:	2800      	cmp	r0, #0
 80240f0:	f000 80fa 	beq.w	80242e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80240f4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80240f8:	d01b      	beq.n	8024132 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80240fa:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80240fe:	fb0e fa0a 	mul.w	sl, lr, sl
 8024102:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024106:	fb0e fe03 	mul.w	lr, lr, r3
 802410a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802410e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024112:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024116:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802411a:	4453      	add	r3, sl
 802411c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024120:	0a1b      	lsrs	r3, r3, #8
 8024122:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024126:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802412a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802412e:	ea43 030c 	orr.w	r3, r3, ip
 8024132:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024134:	2cff      	cmp	r4, #255	; 0xff
 8024136:	d021      	beq.n	802417c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024138:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802413a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802413e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024140:	fb04 fb0b 	mul.w	fp, r4, fp
 8024144:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024146:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802414a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802414c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024150:	fb04 fa0a 	mul.w	sl, r4, sl
 8024154:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024158:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802415c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024160:	44de      	add	lr, fp
 8024162:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024166:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802416a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802416e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024172:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024176:	ea4e 040a 	orr.w	r4, lr, sl
 802417a:	940e      	str	r4, [sp, #56]	; 0x38
 802417c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802417e:	2cff      	cmp	r4, #255	; 0xff
 8024180:	d021      	beq.n	80241c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8024182:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024184:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024188:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802418a:	fb04 fb0b 	mul.w	fp, r4, fp
 802418e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024190:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024194:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024196:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802419a:	fb04 fa0a 	mul.w	sl, r4, sl
 802419e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80241a2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80241a6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80241aa:	44de      	add	lr, fp
 80241ac:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80241b0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80241b4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80241b8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80241bc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80241c0:	ea4e 040a 	orr.w	r4, lr, sl
 80241c4:	940a      	str	r4, [sp, #40]	; 0x28
 80241c6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80241c8:	2cff      	cmp	r4, #255	; 0xff
 80241ca:	d021      	beq.n	8024210 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80241cc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80241ce:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80241d2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80241d4:	fb04 fb0b 	mul.w	fp, r4, fp
 80241d8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80241da:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80241de:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80241e0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80241e4:	fb04 fa0a 	mul.w	sl, r4, sl
 80241e8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80241ec:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80241f0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80241f4:	44de      	add	lr, fp
 80241f6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80241fa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80241fe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024202:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024206:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802420a:	ea4e 040a 	orr.w	r4, lr, sl
 802420e:	940f      	str	r4, [sp, #60]	; 0x3c
 8024210:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024212:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024216:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024218:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 802421c:	fb08 fc0c 	mul.w	ip, r8, ip
 8024220:	fb02 cc0e 	mla	ip, r2, lr, ip
 8024224:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024228:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802422a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802422e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024232:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024234:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024238:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 802423c:	fb08 f80e 	mul.w	r8, r8, lr
 8024240:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024244:	fb02 8303 	mla	r3, r2, r3, r8
 8024248:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802424a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802424c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024250:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024252:	fb01 330a 	mla	r3, r1, sl, r3
 8024256:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 802425a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802425c:	fb09 3901 	mla	r9, r9, r1, r3
 8024260:	4342      	muls	r2, r0
 8024262:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024266:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802426a:	883b      	ldrh	r3, [r7, #0]
 802426c:	1c50      	adds	r0, r2, #1
 802426e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024272:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024276:	ea4c 0c09 	orr.w	ip, ip, r9
 802427a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802427e:	1219      	asrs	r1, r3, #8
 8024280:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8024284:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8024288:	b2c0      	uxtb	r0, r0
 802428a:	fb12 f204 	smulbb	r2, r2, r4
 802428e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024292:	fb01 2100 	mla	r1, r1, r0, r2
 8024296:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802429a:	10da      	asrs	r2, r3, #3
 802429c:	fa5f fc8c 	uxtb.w	ip, ip
 80242a0:	00db      	lsls	r3, r3, #3
 80242a2:	fb1c fc04 	smulbb	ip, ip, r4
 80242a6:	b2db      	uxtb	r3, r3
 80242a8:	b289      	uxth	r1, r1
 80242aa:	fb03 c300 	mla	r3, r3, r0, ip
 80242ae:	fa1f fc83 	uxth.w	ip, r3
 80242b2:	1c4b      	adds	r3, r1, #1
 80242b4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80242b8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80242bc:	fb1e fe04 	smulbb	lr, lr, r4
 80242c0:	f10c 0301 	add.w	r3, ip, #1
 80242c4:	fb02 e200 	mla	r2, r2, r0, lr
 80242c8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80242cc:	b292      	uxth	r2, r2
 80242ce:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80242d2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80242d6:	430b      	orrs	r3, r1
 80242d8:	1c51      	adds	r1, r2, #1
 80242da:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80242de:	0952      	lsrs	r2, r2, #5
 80242e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80242e4:	4313      	orrs	r3, r2
 80242e6:	803b      	strh	r3, [r7, #0]
 80242e8:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80242ea:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80242ec:	441a      	add	r2, r3
 80242ee:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80242f0:	9229      	str	r2, [sp, #164]	; 0xa4
 80242f2:	441d      	add	r5, r3
 80242f4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80242f6:	3b01      	subs	r3, #1
 80242f8:	3702      	adds	r7, #2
 80242fa:	931a      	str	r3, [sp, #104]	; 0x68
 80242fc:	e694      	b.n	8024028 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80242fe:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8024300:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8024302:	441c      	add	r4, r3
 8024304:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024306:	9429      	str	r4, [sp, #164]	; 0xa4
 8024308:	441d      	add	r5, r3
 802430a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802430c:	3b01      	subs	r3, #1
 802430e:	9309      	str	r3, [sp, #36]	; 0x24
 8024310:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024312:	3302      	adds	r3, #2
 8024314:	930c      	str	r3, [sp, #48]	; 0x30
 8024316:	e666      	b.n	8023fe6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024318:	d024      	beq.n	8024364 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 802431a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802431c:	982b      	ldr	r0, [sp, #172]	; 0xac
 802431e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8024320:	3b01      	subs	r3, #1
 8024322:	fb00 4003 	mla	r0, r0, r3, r4
 8024326:	1400      	asrs	r0, r0, #16
 8024328:	f53f ae7b 	bmi.w	8024022 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802432c:	3901      	subs	r1, #1
 802432e:	4288      	cmp	r0, r1
 8024330:	f6bf ae77 	bge.w	8024022 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024334:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8024336:	fb01 5303 	mla	r3, r1, r3, r5
 802433a:	141b      	asrs	r3, r3, #16
 802433c:	f53f ae71 	bmi.w	8024022 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024340:	3a01      	subs	r2, #1
 8024342:	4293      	cmp	r3, r2
 8024344:	f6bf ae6d 	bge.w	8024022 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024348:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802434c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8024350:	f1bb 0f00 	cmp.w	fp, #0
 8024354:	dc70      	bgt.n	8024438 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8024356:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024358:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802435c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802435e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8024362:	930c      	str	r3, [sp, #48]	; 0x30
 8024364:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8024366:	2b00      	cmp	r3, #0
 8024368:	f340 81be 	ble.w	80246e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802436c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024370:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024374:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024378:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802437a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802437e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024382:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024386:	eef0 6a62 	vmov.f32	s13, s5
 802438a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802438e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024392:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024396:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 802439a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802439e:	eef0 6a43 	vmov.f32	s13, s6
 80243a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80243a6:	ee12 2a90 	vmov	r2, s5
 80243aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80243ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80243b2:	ee13 2a10 	vmov	r2, s6
 80243b6:	932b      	str	r3, [sp, #172]	; 0xac
 80243b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80243ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80243be:	932c      	str	r3, [sp, #176]	; 0xb0
 80243c0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80243c2:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80243c4:	3b01      	subs	r3, #1
 80243c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80243ca:	9319      	str	r3, [sp, #100]	; 0x64
 80243cc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80243ce:	bf08      	it	eq
 80243d0:	4613      	moveq	r3, r2
 80243d2:	ee16 5a90 	vmov	r5, s13
 80243d6:	9309      	str	r3, [sp, #36]	; 0x24
 80243d8:	eeb0 3a67 	vmov.f32	s6, s15
 80243dc:	eef0 2a47 	vmov.f32	s5, s14
 80243e0:	e5f3      	b.n	8023fca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80243e2:	2900      	cmp	r1, #0
 80243e4:	f43f ae66 	beq.w	80240b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80243e8:	f818 0000 	ldrb.w	r0, [r8, r0]
 80243ec:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80243f0:	900a      	str	r0, [sp, #40]	; 0x28
 80243f2:	0e00      	lsrs	r0, r0, #24
 80243f4:	9013      	str	r0, [sp, #76]	; 0x4c
 80243f6:	e65d      	b.n	80240b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80243f8:	f113 0801 	adds.w	r8, r3, #1
 80243fc:	f53f af74 	bmi.w	80242e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024400:	4540      	cmp	r0, r8
 8024402:	f6ff af71 	blt.w	80242e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024406:	f11c 0801 	adds.w	r8, ip, #1
 802440a:	f53f af6d 	bmi.w	80242e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802440e:	45c6      	cmp	lr, r8
 8024410:	f6ff af6a 	blt.w	80242e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024414:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8024416:	9302      	str	r3, [sp, #8]
 8024418:	b200      	sxth	r0, r0
 802441a:	fa0f f38e 	sxth.w	r3, lr
 802441e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8024422:	e9cd c203 	strd	ip, r2, [sp, #12]
 8024426:	9301      	str	r3, [sp, #4]
 8024428:	9000      	str	r0, [sp, #0]
 802442a:	4633      	mov	r3, r6
 802442c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802442e:	981d      	ldr	r0, [sp, #116]	; 0x74
 8024430:	4639      	mov	r1, r7
 8024432:	f7ff fc62 	bl	8023cfa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8024436:	e757      	b.n	80242e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024438:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802443a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802443c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024440:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024442:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024446:	1427      	asrs	r7, r4, #16
 8024448:	142b      	asrs	r3, r5, #16
 802444a:	fb01 7303 	mla	r3, r1, r3, r7
 802444e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024450:	18e7      	adds	r7, r4, r3
 8024452:	5ce3      	ldrb	r3, [r4, r3]
 8024454:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024458:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802445c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024460:	2a00      	cmp	r2, #0
 8024462:	f000 8137 	beq.w	80246d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024466:	f897 e001 	ldrb.w	lr, [r7, #1]
 802446a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802446e:	9410      	str	r4, [sp, #64]	; 0x40
 8024470:	0e24      	lsrs	r4, r4, #24
 8024472:	9417      	str	r4, [sp, #92]	; 0x5c
 8024474:	b170      	cbz	r0, 8024494 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8024476:	eb07 0e01 	add.w	lr, r7, r1
 802447a:	5c79      	ldrb	r1, [r7, r1]
 802447c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024480:	910b      	str	r1, [sp, #44]	; 0x2c
 8024482:	0e09      	lsrs	r1, r1, #24
 8024484:	9114      	str	r1, [sp, #80]	; 0x50
 8024486:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802448a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802448e:	9111      	str	r1, [sp, #68]	; 0x44
 8024490:	0e09      	lsrs	r1, r1, #24
 8024492:	9118      	str	r1, [sp, #96]	; 0x60
 8024494:	b292      	uxth	r2, r2
 8024496:	b280      	uxth	r0, r0
 8024498:	fb02 f800 	mul.w	r8, r2, r0
 802449c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80244a0:	0112      	lsls	r2, r2, #4
 80244a2:	eba2 0e08 	sub.w	lr, r2, r8
 80244a6:	b280      	uxth	r0, r0
 80244a8:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80244ac:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80244ae:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80244b0:	fa1f fe8e 	uxth.w	lr, lr
 80244b4:	1a12      	subs	r2, r2, r0
 80244b6:	b292      	uxth	r2, r2
 80244b8:	fb0e f101 	mul.w	r1, lr, r1
 80244bc:	fb02 110c 	mla	r1, r2, ip, r1
 80244c0:	fb00 1104 	mla	r1, r0, r4, r1
 80244c4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80244c6:	fb08 1104 	mla	r1, r8, r4, r1
 80244ca:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80244ce:	2900      	cmp	r1, #0
 80244d0:	f000 80f5 	beq.w	80246be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80244d4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80244d8:	d019      	beq.n	802450e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 80244da:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80244de:	fb0c fa0a 	mul.w	sl, ip, sl
 80244e2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80244e6:	fb0c fc03 	mul.w	ip, ip, r3
 80244ea:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80244ee:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80244f2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80244f6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80244fa:	4453      	add	r3, sl
 80244fc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024500:	0a1b      	lsrs	r3, r3, #8
 8024502:	0a3f      	lsrs	r7, r7, #8
 8024504:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024508:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802450c:	433b      	orrs	r3, r7
 802450e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8024510:	2cff      	cmp	r4, #255	; 0xff
 8024512:	d020      	beq.n	8024556 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8024514:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024516:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802451a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802451c:	4367      	muls	r7, r4
 802451e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024520:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024524:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8024526:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802452a:	fb04 fa0a 	mul.w	sl, r4, sl
 802452e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024532:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024536:	44bc      	add	ip, r7
 8024538:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802453c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024540:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024544:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024548:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802454c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024550:	ea4c 040a 	orr.w	r4, ip, sl
 8024554:	9410      	str	r4, [sp, #64]	; 0x40
 8024556:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024558:	2cff      	cmp	r4, #255	; 0xff
 802455a:	d020      	beq.n	802459e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 802455c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802455e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024562:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024564:	4367      	muls	r7, r4
 8024566:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024568:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802456c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802456e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024572:	fb04 fa0a 	mul.w	sl, r4, sl
 8024576:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802457a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802457e:	44bc      	add	ip, r7
 8024580:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024584:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024588:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802458c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024590:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024594:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024598:	ea4c 040a 	orr.w	r4, ip, sl
 802459c:	940b      	str	r4, [sp, #44]	; 0x2c
 802459e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80245a0:	2cff      	cmp	r4, #255	; 0xff
 80245a2:	d020      	beq.n	80245e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80245a4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80245a6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80245aa:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80245ac:	4367      	muls	r7, r4
 80245ae:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80245b0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80245b4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80245b6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80245ba:	fb04 fa0a 	mul.w	sl, r4, sl
 80245be:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80245c2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80245c6:	44bc      	add	ip, r7
 80245c8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80245cc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80245d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80245d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80245d8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80245dc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80245e0:	ea4c 040a 	orr.w	r4, ip, sl
 80245e4:	9411      	str	r4, [sp, #68]	; 0x44
 80245e6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80245e8:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80245ec:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80245ee:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80245f2:	fb0e f707 	mul.w	r7, lr, r7
 80245f6:	fb02 770c 	mla	r7, r2, ip, r7
 80245fa:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80245fe:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024600:	fb00 770c 	mla	r7, r0, ip, r7
 8024604:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024608:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802460a:	fb08 770c 	mla	r7, r8, ip, r7
 802460e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8024612:	fb0e fe0c 	mul.w	lr, lr, ip
 8024616:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802461a:	fb02 e303 	mla	r3, r2, r3, lr
 802461e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024620:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024622:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024626:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024628:	fb00 330a 	mla	r3, r0, sl, r3
 802462c:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8024630:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024634:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024636:	f8b9 0000 	ldrh.w	r0, [r9]
 802463a:	434b      	muls	r3, r1
 802463c:	0a3f      	lsrs	r7, r7, #8
 802463e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024642:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024646:	1c59      	adds	r1, r3, #1
 8024648:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802464c:	ea47 070c 	orr.w	r7, r7, ip
 8024650:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8024654:	1202      	asrs	r2, r0, #8
 8024656:	0c3b      	lsrs	r3, r7, #16
 8024658:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802465c:	b2c9      	uxtb	r1, r1
 802465e:	fb13 f304 	smulbb	r3, r3, r4
 8024662:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024666:	fb02 3201 	mla	r2, r2, r1, r3
 802466a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802466e:	10c3      	asrs	r3, r0, #3
 8024670:	b2ff      	uxtb	r7, r7
 8024672:	00c0      	lsls	r0, r0, #3
 8024674:	b292      	uxth	r2, r2
 8024676:	fb1c fc04 	smulbb	ip, ip, r4
 802467a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802467e:	b2c0      	uxtb	r0, r0
 8024680:	fb17 f704 	smulbb	r7, r7, r4
 8024684:	fb03 c301 	mla	r3, r3, r1, ip
 8024688:	fb00 7001 	mla	r0, r0, r1, r7
 802468c:	f102 0c01 	add.w	ip, r2, #1
 8024690:	b280      	uxth	r0, r0
 8024692:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8024696:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 802469a:	1c42      	adds	r2, r0, #1
 802469c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80246a0:	b29b      	uxth	r3, r3
 80246a2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80246a6:	ea42 020c 	orr.w	r2, r2, ip
 80246aa:	f103 0c01 	add.w	ip, r3, #1
 80246ae:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80246b2:	095b      	lsrs	r3, r3, #5
 80246b4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80246b8:	431a      	orrs	r2, r3
 80246ba:	f8a9 2000 	strh.w	r2, [r9]
 80246be:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80246c0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80246c2:	441a      	add	r2, r3
 80246c4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80246c6:	9229      	str	r2, [sp, #164]	; 0xa4
 80246c8:	f109 0902 	add.w	r9, r9, #2
 80246cc:	441d      	add	r5, r3
 80246ce:	f10b 3bff 	add.w	fp, fp, #4294967295
 80246d2:	e63d      	b.n	8024350 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80246d4:	2800      	cmp	r0, #0
 80246d6:	f43f aedd 	beq.w	8024494 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80246da:	5c79      	ldrb	r1, [r7, r1]
 80246dc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80246e0:	910b      	str	r1, [sp, #44]	; 0x2c
 80246e2:	0e09      	lsrs	r1, r1, #24
 80246e4:	9114      	str	r1, [sp, #80]	; 0x50
 80246e6:	e6d5      	b.n	8024494 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80246e8:	b01f      	add	sp, #124	; 0x7c
 80246ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080246ee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80246ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80246f2:	b089      	sub	sp, #36	; 0x24
 80246f4:	9101      	str	r1, [sp, #4]
 80246f6:	9801      	ldr	r0, [sp, #4]
 80246f8:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 80246fc:	8800      	ldrh	r0, [r0, #0]
 80246fe:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8024702:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8024706:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 802470a:	1206      	asrs	r6, r0, #8
 802470c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8024710:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8024714:	9602      	str	r6, [sp, #8]
 8024716:	10c6      	asrs	r6, r0, #3
 8024718:	00c0      	lsls	r0, r0, #3
 802471a:	b2c0      	uxtb	r0, r0
 802471c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8024720:	9004      	str	r0, [sp, #16]
 8024722:	2f00      	cmp	r7, #0
 8024724:	fb07 100c 	mla	r0, r7, ip, r1
 8024728:	9603      	str	r6, [sp, #12]
 802472a:	eb02 0e00 	add.w	lr, r2, r0
 802472e:	f2c0 810a 	blt.w	8024946 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8024732:	45b8      	cmp	r8, r7
 8024734:	f340 8107 	ble.w	8024946 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8024738:	2900      	cmp	r1, #0
 802473a:	f2c0 8102 	blt.w	8024942 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802473e:	458c      	cmp	ip, r1
 8024740:	f340 80ff 	ble.w	8024942 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8024744:	5c12      	ldrb	r2, [r2, r0]
 8024746:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802474a:	1c4a      	adds	r2, r1, #1
 802474c:	f100 80fe 	bmi.w	802494c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8024750:	4594      	cmp	ip, r2
 8024752:	f340 80fb 	ble.w	802494c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8024756:	2d00      	cmp	r5, #0
 8024758:	f000 80fa 	beq.w	8024950 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 802475c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8024760:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8024764:	3701      	adds	r7, #1
 8024766:	f100 80f7 	bmi.w	8024958 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 802476a:	45b8      	cmp	r8, r7
 802476c:	f340 80f4 	ble.w	8024958 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8024770:	2c00      	cmp	r4, #0
 8024772:	f000 80f4 	beq.w	802495e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8024776:	2900      	cmp	r1, #0
 8024778:	eb0e 020c 	add.w	r2, lr, ip
 802477c:	f2c0 80ea 	blt.w	8024954 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8024780:	458c      	cmp	ip, r1
 8024782:	f340 80e7 	ble.w	8024954 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8024786:	f81e 700c 	ldrb.w	r7, [lr, ip]
 802478a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 802478e:	3101      	adds	r1, #1
 8024790:	f100 80e8 	bmi.w	8024964 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8024794:	458c      	cmp	ip, r1
 8024796:	f340 80e5 	ble.w	8024964 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 802479a:	2d00      	cmp	r5, #0
 802479c:	f000 80e4 	beq.w	8024968 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80247a0:	7852      	ldrb	r2, [r2, #1]
 80247a2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80247a6:	0e0b      	lsrs	r3, r1, #24
 80247a8:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80247ac:	9300      	str	r3, [sp, #0]
 80247ae:	b2a4      	uxth	r4, r4
 80247b0:	b2ab      	uxth	r3, r5
 80247b2:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 80247b6:	fb03 f904 	mul.w	r9, r3, r4
 80247ba:	fb0a f505 	mul.w	r5, sl, r5
 80247be:	011b      	lsls	r3, r3, #4
 80247c0:	eba3 0e09 	sub.w	lr, r3, r9
 80247c4:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 80247c8:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 80247cc:	0a28      	lsrs	r0, r5, #8
 80247ce:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80247d2:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 80247d6:	4405      	add	r5, r0
 80247d8:	0a2d      	lsrs	r5, r5, #8
 80247da:	fb0a f303 	mul.w	r3, sl, r3
 80247de:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 80247e2:	9005      	str	r0, [sp, #20]
 80247e4:	f503 7080 	add.w	r0, r3, #256	; 0x100
 80247e8:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80247ec:	0a1b      	lsrs	r3, r3, #8
 80247ee:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 80247f2:	9306      	str	r3, [sp, #24]
 80247f4:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 80247f8:	fb0b f303 	mul.w	r3, fp, r3
 80247fc:	0a1d      	lsrs	r5, r3, #8
 80247fe:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8024802:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8024806:	fb0b f606 	mul.w	r6, fp, r6
 802480a:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 802480e:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8024812:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024816:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802481a:	fb08 f707 	mul.w	r7, r8, r7
 802481e:	441d      	add	r5, r3
 8024820:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8024824:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8024828:	f507 7380 	add.w	r3, r7, #256	; 0x100
 802482c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8024830:	fb08 fc0c 	mul.w	ip, r8, ip
 8024834:	0a1b      	lsrs	r3, r3, #8
 8024836:	9307      	str	r3, [sp, #28]
 8024838:	ea4f 201c 	mov.w	r0, ip, lsr #8
 802483c:	0e0b      	lsrs	r3, r1, #24
 802483e:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8024842:	435f      	muls	r7, r3
 8024844:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024848:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 802484c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8024850:	4460      	add	r0, ip
 8024852:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024856:	b2a4      	uxth	r4, r4
 8024858:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802485c:	0a2d      	lsrs	r5, r5, #8
 802485e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024862:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024866:	fa1f fe8e 	uxth.w	lr, lr
 802486a:	4359      	muls	r1, r3
 802486c:	1b12      	subs	r2, r2, r4
 802486e:	9b05      	ldr	r3, [sp, #20]
 8024870:	44bc      	add	ip, r7
 8024872:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024876:	b292      	uxth	r2, r2
 8024878:	fb05 f50e 	mul.w	r5, r5, lr
 802487c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024880:	fb03 5502 	mla	r5, r3, r2, r5
 8024884:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024888:	9b06      	ldr	r3, [sp, #24]
 802488a:	f501 7780 	add.w	r7, r1, #256	; 0x100
 802488e:	0a36      	lsrs	r6, r6, #8
 8024890:	0a00      	lsrs	r0, r0, #8
 8024892:	fb0c 5509 	mla	r5, ip, r9, r5
 8024896:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 802489a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 802489e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80248a2:	fb00 5504 	mla	r5, r0, r4, r5
 80248a6:	fb0e f606 	mul.w	r6, lr, r6
 80248aa:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 80248ae:	0a09      	lsrs	r1, r1, #8
 80248b0:	9b07      	ldr	r3, [sp, #28]
 80248b2:	fb02 6000 	mla	r0, r2, r0, r6
 80248b6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80248ba:	fb09 0001 	mla	r0, r9, r1, r0
 80248be:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80248c2:	fb0e fe0b 	mul.w	lr, lr, fp
 80248c6:	fb04 0003 	mla	r0, r4, r3, r0
 80248ca:	fb02 e20a 	mla	r2, r2, sl, lr
 80248ce:	9b00      	ldr	r3, [sp, #0]
 80248d0:	fb04 2408 	mla	r4, r4, r8, r2
 80248d4:	fb09 4903 	mla	r9, r9, r3, r4
 80248d8:	ea6f 2929 	mvn.w	r9, r9, asr #8
 80248dc:	9b02      	ldr	r3, [sp, #8]
 80248de:	9a04      	ldr	r2, [sp, #16]
 80248e0:	fa5f f989 	uxtb.w	r9, r9
 80248e4:	fb03 f109 	mul.w	r1, r3, r9
 80248e8:	9b03      	ldr	r3, [sp, #12]
 80248ea:	0a2d      	lsrs	r5, r5, #8
 80248ec:	0a00      	lsrs	r0, r0, #8
 80248ee:	fb03 f309 	mul.w	r3, r3, r9
 80248f2:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80248f6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80248fa:	4305      	orrs	r5, r0
 80248fc:	fb02 f909 	mul.w	r9, r2, r9
 8024900:	1c58      	adds	r0, r3, #1
 8024902:	1c4a      	adds	r2, r1, #1
 8024904:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024908:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802490c:	0a2b      	lsrs	r3, r5, #8
 802490e:	0c2a      	lsrs	r2, r5, #16
 8024910:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8024914:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8024918:	00db      	lsls	r3, r3, #3
 802491a:	0212      	lsls	r2, r2, #8
 802491c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8024920:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024924:	4313      	orrs	r3, r2
 8024926:	f109 0201 	add.w	r2, r9, #1
 802492a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 802492e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8024932:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8024936:	431d      	orrs	r5, r3
 8024938:	9b01      	ldr	r3, [sp, #4]
 802493a:	801d      	strh	r5, [r3, #0]
 802493c:	b009      	add	sp, #36	; 0x24
 802493e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024942:	2000      	movs	r0, #0
 8024944:	e701      	b.n	802474a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8024946:	2600      	movs	r6, #0
 8024948:	4630      	mov	r0, r6
 802494a:	e70b      	b.n	8024764 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 802494c:	2600      	movs	r6, #0
 802494e:	e709      	b.n	8024764 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8024950:	462e      	mov	r6, r5
 8024952:	e707      	b.n	8024764 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8024954:	2700      	movs	r7, #0
 8024956:	e71a      	b.n	802478e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8024958:	2100      	movs	r1, #0
 802495a:	460f      	mov	r7, r1
 802495c:	e723      	b.n	80247a6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 802495e:	4621      	mov	r1, r4
 8024960:	4627      	mov	r7, r4
 8024962:	e720      	b.n	80247a6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8024964:	2100      	movs	r1, #0
 8024966:	e71e      	b.n	80247a6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8024968:	4629      	mov	r1, r5
 802496a:	e71c      	b.n	80247a6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0802496c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802496c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024970:	b09b      	sub	sp, #108	; 0x6c
 8024972:	9218      	str	r2, [sp, #96]	; 0x60
 8024974:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024976:	9116      	str	r1, [sp, #88]	; 0x58
 8024978:	9307      	str	r3, [sp, #28]
 802497a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 802497e:	9019      	str	r0, [sp, #100]	; 0x64
 8024980:	6850      	ldr	r0, [r2, #4]
 8024982:	6812      	ldr	r2, [r2, #0]
 8024984:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8024986:	fb00 1303 	mla	r3, r0, r3, r1
 802498a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802498e:	930a      	str	r3, [sp, #40]	; 0x28
 8024990:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024992:	681b      	ldr	r3, [r3, #0]
 8024994:	930f      	str	r3, [sp, #60]	; 0x3c
 8024996:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024998:	685e      	ldr	r6, [r3, #4]
 802499a:	3604      	adds	r6, #4
 802499c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802499e:	2b00      	cmp	r3, #0
 80249a0:	dc03      	bgt.n	80249aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80249a2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80249a4:	2b00      	cmp	r3, #0
 80249a6:	f340 8373 	ble.w	8025090 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80249aa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80249ac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80249b0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80249b4:	1e48      	subs	r0, r1, #1
 80249b6:	1e57      	subs	r7, r2, #1
 80249b8:	9b07      	ldr	r3, [sp, #28]
 80249ba:	2b00      	cmp	r3, #0
 80249bc:	f340 8190 	ble.w	8024ce0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80249c0:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80249c2:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80249c6:	ea4f 4325 	mov.w	r3, r5, asr #16
 80249ca:	d406      	bmi.n	80249da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80249cc:	4584      	cmp	ip, r0
 80249ce:	da04      	bge.n	80249da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80249d0:	2b00      	cmp	r3, #0
 80249d2:	db02      	blt.n	80249da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80249d4:	42bb      	cmp	r3, r7
 80249d6:	f2c0 8184 	blt.w	8024ce2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 80249da:	f11c 0c01 	adds.w	ip, ip, #1
 80249de:	f100 8172 	bmi.w	8024cc6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80249e2:	4561      	cmp	r1, ip
 80249e4:	f2c0 816f 	blt.w	8024cc6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80249e8:	3301      	adds	r3, #1
 80249ea:	f100 816c 	bmi.w	8024cc6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80249ee:	429a      	cmp	r2, r3
 80249f0:	f2c0 8169 	blt.w	8024cc6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80249f4:	9b07      	ldr	r3, [sp, #28]
 80249f6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80249f8:	9317      	str	r3, [sp, #92]	; 0x5c
 80249fa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80249fc:	2b00      	cmp	r3, #0
 80249fe:	f340 818e 	ble.w	8024d1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8024a02:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024a04:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024a08:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024a0a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8024a0e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024a10:	141b      	asrs	r3, r3, #16
 8024a12:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8024a16:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8024a1a:	f100 81d1 	bmi.w	8024dc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024a1e:	f101 38ff 	add.w	r8, r1, #4294967295
 8024a22:	4543      	cmp	r3, r8
 8024a24:	f280 81cc 	bge.w	8024dc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024a28:	f1bc 0f00 	cmp.w	ip, #0
 8024a2c:	f2c0 81c8 	blt.w	8024dc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024a30:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024a34:	45c4      	cmp	ip, r8
 8024a36:	f280 81c3 	bge.w	8024dc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024a3a:	b209      	sxth	r1, r1
 8024a3c:	fb0c 3301 	mla	r3, ip, r1, r3
 8024a40:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024a42:	eb04 0803 	add.w	r8, r4, r3
 8024a46:	5ce3      	ldrb	r3, [r4, r3]
 8024a48:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024a4c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8024a50:	2a00      	cmp	r2, #0
 8024a52:	f000 81aa 	beq.w	8024daa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8024a56:	f898 c001 	ldrb.w	ip, [r8, #1]
 8024a5a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8024a5e:	940b      	str	r4, [sp, #44]	; 0x2c
 8024a60:	0e24      	lsrs	r4, r4, #24
 8024a62:	9412      	str	r4, [sp, #72]	; 0x48
 8024a64:	b178      	cbz	r0, 8024a86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024a66:	eb08 0c01 	add.w	ip, r8, r1
 8024a6a:	f818 1001 	ldrb.w	r1, [r8, r1]
 8024a6e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024a72:	9108      	str	r1, [sp, #32]
 8024a74:	0e09      	lsrs	r1, r1, #24
 8024a76:	9110      	str	r1, [sp, #64]	; 0x40
 8024a78:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8024a7c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024a80:	910c      	str	r1, [sp, #48]	; 0x30
 8024a82:	0e09      	lsrs	r1, r1, #24
 8024a84:	9113      	str	r1, [sp, #76]	; 0x4c
 8024a86:	b292      	uxth	r2, r2
 8024a88:	b280      	uxth	r0, r0
 8024a8a:	fb02 f900 	mul.w	r9, r2, r0
 8024a8e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024a92:	0112      	lsls	r2, r2, #4
 8024a94:	eba2 0809 	sub.w	r8, r2, r9
 8024a98:	b280      	uxth	r0, r0
 8024a9a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8024a9e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8024aa0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024aa2:	fa1f f888 	uxth.w	r8, r8
 8024aa6:	1a12      	subs	r2, r2, r0
 8024aa8:	b292      	uxth	r2, r2
 8024aaa:	fb08 f101 	mul.w	r1, r8, r1
 8024aae:	fb02 110e 	mla	r1, r2, lr, r1
 8024ab2:	fb00 1104 	mla	r1, r0, r4, r1
 8024ab6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024ab8:	fb09 1104 	mla	r1, r9, r4, r1
 8024abc:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8024ac0:	2900      	cmp	r1, #0
 8024ac2:	f000 80f5 	beq.w	8024cb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024ac6:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024aca:	d01b      	beq.n	8024b04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8024acc:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024ad0:	fb0e fa0a 	mul.w	sl, lr, sl
 8024ad4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024ad8:	fb0e fe03 	mul.w	lr, lr, r3
 8024adc:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024ae0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024ae4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024ae8:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8024aec:	4453      	add	r3, sl
 8024aee:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024af2:	0a1b      	lsrs	r3, r3, #8
 8024af4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024af8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024afc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024b00:	ea43 030c 	orr.w	r3, r3, ip
 8024b04:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024b06:	2cff      	cmp	r4, #255	; 0xff
 8024b08:	d021      	beq.n	8024b4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8024b0a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024b0c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024b10:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024b12:	fb04 fb0b 	mul.w	fp, r4, fp
 8024b16:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024b18:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024b1c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024b1e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024b22:	fb04 fa0a 	mul.w	sl, r4, sl
 8024b26:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024b2a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024b2e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024b32:	44de      	add	lr, fp
 8024b34:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024b38:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024b3c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024b40:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024b44:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024b48:	ea4e 040a 	orr.w	r4, lr, sl
 8024b4c:	940b      	str	r4, [sp, #44]	; 0x2c
 8024b4e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024b50:	2cff      	cmp	r4, #255	; 0xff
 8024b52:	d021      	beq.n	8024b98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8024b54:	9c08      	ldr	r4, [sp, #32]
 8024b56:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024b5a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024b5c:	fb04 fb0b 	mul.w	fp, r4, fp
 8024b60:	9c08      	ldr	r4, [sp, #32]
 8024b62:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024b66:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024b68:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024b6c:	fb04 fa0a 	mul.w	sl, r4, sl
 8024b70:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024b74:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024b78:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024b7c:	44de      	add	lr, fp
 8024b7e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024b82:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024b86:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024b8a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024b8e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024b92:	ea4e 040a 	orr.w	r4, lr, sl
 8024b96:	9408      	str	r4, [sp, #32]
 8024b98:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024b9a:	2cff      	cmp	r4, #255	; 0xff
 8024b9c:	d021      	beq.n	8024be2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8024b9e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024ba0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024ba4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024ba6:	fb04 fb0b 	mul.w	fp, r4, fp
 8024baa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024bac:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024bb0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024bb2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024bb6:	fb04 fa0a 	mul.w	sl, r4, sl
 8024bba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024bbe:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024bc2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024bc6:	44de      	add	lr, fp
 8024bc8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024bcc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024bd0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024bd4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024bd8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024bdc:	ea4e 040a 	orr.w	r4, lr, sl
 8024be0:	940c      	str	r4, [sp, #48]	; 0x30
 8024be2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024be4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024be8:	9c08      	ldr	r4, [sp, #32]
 8024bea:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8024bee:	fb08 fc0c 	mul.w	ip, r8, ip
 8024bf2:	fb02 cc0e 	mla	ip, r2, lr, ip
 8024bf6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024bfa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024bfc:	fb00 cc0e 	mla	ip, r0, lr, ip
 8024c00:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024c04:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024c06:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024c0a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8024c0e:	fb08 f80e 	mul.w	r8, r8, lr
 8024c12:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024c16:	fb02 8303 	mla	r3, r2, r3, r8
 8024c1a:	9a08      	ldr	r2, [sp, #32]
 8024c1c:	f8b7 8000 	ldrh.w	r8, [r7]
 8024c20:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024c24:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024c26:	fb00 330a 	mla	r3, r0, sl, r3
 8024c2a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8024c2e:	fb09 3900 	mla	r9, r9, r0, r3
 8024c32:	43c9      	mvns	r1, r1
 8024c34:	ea4f 2228 	mov.w	r2, r8, asr #8
 8024c38:	fa5f fe81 	uxtb.w	lr, r1
 8024c3c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024c40:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024c44:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024c48:	fb02 f20e 	mul.w	r2, r2, lr
 8024c4c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024c50:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024c54:	ea4c 0c09 	orr.w	ip, ip, r9
 8024c58:	1c53      	adds	r3, r2, #1
 8024c5a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8024c5e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8024c62:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8024c66:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024c6a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024c6e:	4a63      	ldr	r2, [pc, #396]	; (8024dfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8024c70:	fb00 f00e 	mul.w	r0, r0, lr
 8024c74:	b2db      	uxtb	r3, r3
 8024c76:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8024c7a:	1c43      	adds	r3, r0, #1
 8024c7c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024c80:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8024c84:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8024c88:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8024c8c:	b2c9      	uxtb	r1, r1
 8024c8e:	00db      	lsls	r3, r3, #3
 8024c90:	fb01 f10e 	mul.w	r1, r1, lr
 8024c94:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024c98:	4313      	orrs	r3, r2
 8024c9a:	1c4a      	adds	r2, r1, #1
 8024c9c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024ca0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8024ca4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8024ca8:	ea4c 0c03 	orr.w	ip, ip, r3
 8024cac:	f8a7 c000 	strh.w	ip, [r7]
 8024cb0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024cb2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024cb4:	441a      	add	r2, r3
 8024cb6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024cb8:	9225      	str	r2, [sp, #148]	; 0x94
 8024cba:	441d      	add	r5, r3
 8024cbc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024cbe:	3b01      	subs	r3, #1
 8024cc0:	3702      	adds	r7, #2
 8024cc2:	9317      	str	r3, [sp, #92]	; 0x5c
 8024cc4:	e699      	b.n	80249fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024cc6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024cc8:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024cca:	441c      	add	r4, r3
 8024ccc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024cce:	9425      	str	r4, [sp, #148]	; 0x94
 8024cd0:	441d      	add	r5, r3
 8024cd2:	9b07      	ldr	r3, [sp, #28]
 8024cd4:	3b01      	subs	r3, #1
 8024cd6:	9307      	str	r3, [sp, #28]
 8024cd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024cda:	3302      	adds	r3, #2
 8024cdc:	930a      	str	r3, [sp, #40]	; 0x28
 8024cde:	e66b      	b.n	80249b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8024ce0:	d024      	beq.n	8024d2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8024ce2:	9b07      	ldr	r3, [sp, #28]
 8024ce4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8024ce6:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024ce8:	3b01      	subs	r3, #1
 8024cea:	fb00 4003 	mla	r0, r0, r3, r4
 8024cee:	1400      	asrs	r0, r0, #16
 8024cf0:	f53f ae80 	bmi.w	80249f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024cf4:	3901      	subs	r1, #1
 8024cf6:	4288      	cmp	r0, r1
 8024cf8:	f6bf ae7c 	bge.w	80249f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024cfc:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8024cfe:	fb01 5303 	mla	r3, r1, r3, r5
 8024d02:	141b      	asrs	r3, r3, #16
 8024d04:	f53f ae76 	bmi.w	80249f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024d08:	3a01      	subs	r2, #1
 8024d0a:	4293      	cmp	r3, r2
 8024d0c:	f6bf ae72 	bge.w	80249f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024d10:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024d14:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8024d18:	f1bb 0f00 	cmp.w	fp, #0
 8024d1c:	dc70      	bgt.n	8024e00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8024d1e:	9b07      	ldr	r3, [sp, #28]
 8024d20:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024d24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024d26:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8024d2a:	930a      	str	r3, [sp, #40]	; 0x28
 8024d2c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024d2e:	2b00      	cmp	r3, #0
 8024d30:	f340 81ae 	ble.w	8025090 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8024d34:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024d38:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024d3c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024d40:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024d42:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024d46:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024d4a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024d4e:	eef0 6a62 	vmov.f32	s13, s5
 8024d52:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024d56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024d5a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024d5e:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8024d62:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024d66:	eef0 6a43 	vmov.f32	s13, s6
 8024d6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024d6e:	ee12 2a90 	vmov	r2, s5
 8024d72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024d76:	fb92 f3f3 	sdiv	r3, r2, r3
 8024d7a:	ee13 2a10 	vmov	r2, s6
 8024d7e:	9327      	str	r3, [sp, #156]	; 0x9c
 8024d80:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024d82:	fb92 f3f3 	sdiv	r3, r2, r3
 8024d86:	9328      	str	r3, [sp, #160]	; 0xa0
 8024d88:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024d8a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8024d8c:	3b01      	subs	r3, #1
 8024d8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024d92:	9316      	str	r3, [sp, #88]	; 0x58
 8024d94:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024d96:	bf08      	it	eq
 8024d98:	4613      	moveq	r3, r2
 8024d9a:	ee16 5a90 	vmov	r5, s13
 8024d9e:	9307      	str	r3, [sp, #28]
 8024da0:	eeb0 3a67 	vmov.f32	s6, s15
 8024da4:	eef0 2a47 	vmov.f32	s5, s14
 8024da8:	e5f8      	b.n	802499c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8024daa:	2800      	cmp	r0, #0
 8024dac:	f43f ae6b 	beq.w	8024a86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024db0:	f818 1001 	ldrb.w	r1, [r8, r1]
 8024db4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024db8:	9108      	str	r1, [sp, #32]
 8024dba:	0e09      	lsrs	r1, r1, #24
 8024dbc:	9110      	str	r1, [sp, #64]	; 0x40
 8024dbe:	e662      	b.n	8024a86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024dc0:	f113 0801 	adds.w	r8, r3, #1
 8024dc4:	f53f af74 	bmi.w	8024cb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024dc8:	4541      	cmp	r1, r8
 8024dca:	f6ff af71 	blt.w	8024cb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024dce:	f11c 0801 	adds.w	r8, ip, #1
 8024dd2:	f53f af6d 	bmi.w	8024cb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024dd6:	45c6      	cmp	lr, r8
 8024dd8:	f6ff af6a 	blt.w	8024cb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024ddc:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8024de0:	b209      	sxth	r1, r1
 8024de2:	fa0f f38e 	sxth.w	r3, lr
 8024de6:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8024dea:	9301      	str	r3, [sp, #4]
 8024dec:	9100      	str	r1, [sp, #0]
 8024dee:	4633      	mov	r3, r6
 8024df0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024df2:	9819      	ldr	r0, [sp, #100]	; 0x64
 8024df4:	4639      	mov	r1, r7
 8024df6:	f7ff fc7a 	bl	80246ee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8024dfa:	e759      	b.n	8024cb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024dfc:	fffff800 	.word	0xfffff800
 8024e00:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024e02:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024e04:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024e08:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024e0a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024e0e:	1427      	asrs	r7, r4, #16
 8024e10:	142b      	asrs	r3, r5, #16
 8024e12:	fb01 7303 	mla	r3, r1, r3, r7
 8024e16:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024e18:	18e7      	adds	r7, r4, r3
 8024e1a:	5ce3      	ldrb	r3, [r4, r3]
 8024e1c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024e20:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8024e24:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024e28:	2a00      	cmp	r2, #0
 8024e2a:	f000 8127 	beq.w	802507c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8024e2e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8024e32:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8024e36:	940d      	str	r4, [sp, #52]	; 0x34
 8024e38:	0e24      	lsrs	r4, r4, #24
 8024e3a:	9414      	str	r4, [sp, #80]	; 0x50
 8024e3c:	b170      	cbz	r0, 8024e5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8024e3e:	eb07 0e01 	add.w	lr, r7, r1
 8024e42:	5c79      	ldrb	r1, [r7, r1]
 8024e44:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024e48:	9109      	str	r1, [sp, #36]	; 0x24
 8024e4a:	0e09      	lsrs	r1, r1, #24
 8024e4c:	9111      	str	r1, [sp, #68]	; 0x44
 8024e4e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8024e52:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024e56:	910e      	str	r1, [sp, #56]	; 0x38
 8024e58:	0e09      	lsrs	r1, r1, #24
 8024e5a:	9115      	str	r1, [sp, #84]	; 0x54
 8024e5c:	b292      	uxth	r2, r2
 8024e5e:	b280      	uxth	r0, r0
 8024e60:	fb02 f800 	mul.w	r8, r2, r0
 8024e64:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8024e68:	0112      	lsls	r2, r2, #4
 8024e6a:	eba2 0e08 	sub.w	lr, r2, r8
 8024e6e:	b280      	uxth	r0, r0
 8024e70:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8024e74:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024e76:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024e78:	fa1f fe8e 	uxth.w	lr, lr
 8024e7c:	1a09      	subs	r1, r1, r0
 8024e7e:	b289      	uxth	r1, r1
 8024e80:	fb0e f202 	mul.w	r2, lr, r2
 8024e84:	fb01 220c 	mla	r2, r1, ip, r2
 8024e88:	fb00 2204 	mla	r2, r0, r4, r2
 8024e8c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024e8e:	fb08 2204 	mla	r2, r8, r4, r2
 8024e92:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8024e96:	2a00      	cmp	r2, #0
 8024e98:	f000 80e5 	beq.w	8025066 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8024e9c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024ea0:	d019      	beq.n	8024ed6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8024ea2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024ea6:	fb0c fa0a 	mul.w	sl, ip, sl
 8024eaa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024eae:	fb0c fc03 	mul.w	ip, ip, r3
 8024eb2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024eb6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024eba:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024ebe:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024ec2:	4453      	add	r3, sl
 8024ec4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024ec8:	0a1b      	lsrs	r3, r3, #8
 8024eca:	0a3f      	lsrs	r7, r7, #8
 8024ecc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024ed0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024ed4:	433b      	orrs	r3, r7
 8024ed6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024ed8:	2cff      	cmp	r4, #255	; 0xff
 8024eda:	d020      	beq.n	8024f1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8024edc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024ede:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024ee2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024ee4:	4367      	muls	r7, r4
 8024ee6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024ee8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024eec:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024eee:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024ef2:	fb04 fa0a 	mul.w	sl, r4, sl
 8024ef6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024efa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024efe:	44bc      	add	ip, r7
 8024f00:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024f04:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024f08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024f0c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024f10:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024f14:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024f18:	ea4c 040a 	orr.w	r4, ip, sl
 8024f1c:	940d      	str	r4, [sp, #52]	; 0x34
 8024f1e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024f20:	2cff      	cmp	r4, #255	; 0xff
 8024f22:	d020      	beq.n	8024f66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8024f24:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024f26:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024f2a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024f2c:	4367      	muls	r7, r4
 8024f2e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024f30:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024f34:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024f36:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024f3a:	fb04 fa0a 	mul.w	sl, r4, sl
 8024f3e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024f42:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024f46:	44bc      	add	ip, r7
 8024f48:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024f4c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024f50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024f54:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024f58:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024f5c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024f60:	ea4c 040a 	orr.w	r4, ip, sl
 8024f64:	9409      	str	r4, [sp, #36]	; 0x24
 8024f66:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024f68:	2cff      	cmp	r4, #255	; 0xff
 8024f6a:	d020      	beq.n	8024fae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8024f6c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024f6e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024f72:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024f74:	4367      	muls	r7, r4
 8024f76:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024f78:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024f7c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024f7e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024f82:	fb04 fa0a 	mul.w	sl, r4, sl
 8024f86:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024f8a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024f8e:	44bc      	add	ip, r7
 8024f90:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024f94:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024f98:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024f9c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024fa0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024fa4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024fa8:	ea4c 040a 	orr.w	r4, ip, sl
 8024fac:	940e      	str	r4, [sp, #56]	; 0x38
 8024fae:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024fb0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024fb4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024fb6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024fba:	fb0e f707 	mul.w	r7, lr, r7
 8024fbe:	fb01 770c 	mla	r7, r1, ip, r7
 8024fc2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024fc6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024fc8:	fb00 770c 	mla	r7, r0, ip, r7
 8024fcc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024fd0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024fd2:	fb08 770c 	mla	r7, r8, ip, r7
 8024fd6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8024fda:	fb0e fe0c 	mul.w	lr, lr, ip
 8024fde:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024fe2:	fb01 e303 	mla	r3, r1, r3, lr
 8024fe6:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024fe8:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8024fec:	990e      	ldr	r1, [sp, #56]	; 0x38
 8024fee:	fb00 330a 	mla	r3, r0, sl, r3
 8024ff2:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8024ff6:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024ffa:	f8b9 3000 	ldrh.w	r3, [r9]
 8024ffe:	43d2      	mvns	r2, r2
 8025000:	1218      	asrs	r0, r3, #8
 8025002:	b2d2      	uxtb	r2, r2
 8025004:	10d9      	asrs	r1, r3, #3
 8025006:	0a3f      	lsrs	r7, r7, #8
 8025008:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802500c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025010:	00db      	lsls	r3, r3, #3
 8025012:	4350      	muls	r0, r2
 8025014:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8025018:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802501c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025020:	b2db      	uxtb	r3, r3
 8025022:	ea47 070c 	orr.w	r7, r7, ip
 8025026:	4351      	muls	r1, r2
 8025028:	4353      	muls	r3, r2
 802502a:	1c42      	adds	r2, r0, #1
 802502c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025030:	0c3a      	lsrs	r2, r7, #16
 8025032:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025036:	4a18      	ldr	r2, [pc, #96]	; (8025098 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8025038:	b2c0      	uxtb	r0, r0
 802503a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 802503e:	1c4a      	adds	r2, r1, #1
 8025040:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8025044:	0a3a      	lsrs	r2, r7, #8
 8025046:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802504a:	00c9      	lsls	r1, r1, #3
 802504c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025050:	4301      	orrs	r1, r0
 8025052:	1c58      	adds	r0, r3, #1
 8025054:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025058:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 802505c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8025060:	4308      	orrs	r0, r1
 8025062:	f8a9 0000 	strh.w	r0, [r9]
 8025066:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025068:	9a25      	ldr	r2, [sp, #148]	; 0x94
 802506a:	441a      	add	r2, r3
 802506c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802506e:	9225      	str	r2, [sp, #148]	; 0x94
 8025070:	f109 0902 	add.w	r9, r9, #2
 8025074:	441d      	add	r5, r3
 8025076:	f10b 3bff 	add.w	fp, fp, #4294967295
 802507a:	e64d      	b.n	8024d18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 802507c:	2800      	cmp	r0, #0
 802507e:	f43f aeed 	beq.w	8024e5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8025082:	5c79      	ldrb	r1, [r7, r1]
 8025084:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8025088:	9109      	str	r1, [sp, #36]	; 0x24
 802508a:	0e09      	lsrs	r1, r1, #24
 802508c:	9111      	str	r1, [sp, #68]	; 0x44
 802508e:	e6e5      	b.n	8024e5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8025090:	b01b      	add	sp, #108	; 0x6c
 8025092:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025096:	bf00      	nop
 8025098:	fffff800 	.word	0xfffff800

0802509c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 802509c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80250a0:	b085      	sub	sp, #20
 80250a2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 80250a6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80250aa:	9103      	str	r1, [sp, #12]
 80250ac:	fb00 7406 	mla	r4, r0, r6, r7
 80250b0:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 80250b4:	2800      	cmp	r0, #0
 80250b6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 80250ba:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 80250be:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80250c2:	9501      	str	r5, [sp, #4]
 80250c4:	eb03 0904 	add.w	r9, r3, r4
 80250c8:	f2c0 8150 	blt.w	802536c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80250cc:	4583      	cmp	fp, r0
 80250ce:	f340 814d 	ble.w	802536c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80250d2:	2f00      	cmp	r7, #0
 80250d4:	f2c0 8146 	blt.w	8025364 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80250d8:	42be      	cmp	r6, r7
 80250da:	f340 8143 	ble.w	8025364 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80250de:	f813 c004 	ldrb.w	ip, [r3, r4]
 80250e2:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 80250e6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80250ea:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 80250ee:	4355      	muls	r5, r2
 80250f0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80250f4:	f64f 041f 	movw	r4, #63519	; 0xf81f
 80250f8:	fb0c f203 	mul.w	r2, ip, r3
 80250fc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8025100:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8025104:	441d      	add	r5, r3
 8025106:	f102 0320 	add.w	r3, r2, #32
 802510a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802510e:	0a1b      	lsrs	r3, r3, #8
 8025110:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8025114:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025118:	431c      	orrs	r4, r3
 802511a:	1c7b      	adds	r3, r7, #1
 802511c:	f100 812b 	bmi.w	8025376 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8025120:	429e      	cmp	r6, r3
 8025122:	f340 8128 	ble.w	8025376 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8025126:	2900      	cmp	r1, #0
 8025128:	f000 8128 	beq.w	802537c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 802512c:	9a01      	ldr	r2, [sp, #4]
 802512e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8025132:	8855      	ldrh	r5, [r2, #2]
 8025134:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8025138:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 802513c:	fb08 f802 	mul.w	r8, r8, r2
 8025140:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025144:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8025148:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 802514c:	435d      	muls	r5, r3
 802514e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025152:	44d0      	add	r8, sl
 8025154:	f105 0a20 	add.w	sl, r5, #32
 8025158:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 802515c:	0a2d      	lsrs	r5, r5, #8
 802515e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8025162:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025166:	432a      	orrs	r2, r5
 8025168:	3001      	adds	r0, #1
 802516a:	f100 810d 	bmi.w	8025388 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802516e:	4583      	cmp	fp, r0
 8025170:	f340 810a 	ble.w	8025388 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8025174:	f1be 0f00 	cmp.w	lr, #0
 8025178:	f000 810b 	beq.w	8025392 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 802517c:	2f00      	cmp	r7, #0
 802517e:	f2c0 8100 	blt.w	8025382 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8025182:	42be      	cmp	r6, r7
 8025184:	f340 80fd 	ble.w	8025382 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8025188:	9801      	ldr	r0, [sp, #4]
 802518a:	f819 5006 	ldrb.w	r5, [r9, r6]
 802518e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8025192:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8025196:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 802519a:	fb0a fa00 	mul.w	sl, sl, r0
 802519e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80251a2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80251a6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80251aa:	fb05 f808 	mul.w	r8, r5, r8
 80251ae:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80251b2:	4482      	add	sl, r0
 80251b4:	f108 0020 	add.w	r0, r8, #32
 80251b8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80251bc:	0a00      	lsrs	r0, r0, #8
 80251be:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80251c2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80251c6:	ea4b 0b00 	orr.w	fp, fp, r0
 80251ca:	3701      	adds	r7, #1
 80251cc:	f100 80e6 	bmi.w	802539c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80251d0:	42be      	cmp	r6, r7
 80251d2:	f340 80e3 	ble.w	802539c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80251d6:	2900      	cmp	r1, #0
 80251d8:	f000 80e3 	beq.w	80253a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 80251dc:	3601      	adds	r6, #1
 80251de:	9801      	ldr	r0, [sp, #4]
 80251e0:	f819 7006 	ldrb.w	r7, [r9, r6]
 80251e4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80251e8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80251ec:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 80251f0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80251f4:	fb09 f906 	mul.w	r9, r9, r6
 80251f8:	fb07 f800 	mul.w	r8, r7, r0
 80251fc:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8025200:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8025204:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8025208:	44d1      	add	r9, sl
 802520a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802520e:	f108 0020 	add.w	r0, r8, #32
 8025212:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025216:	0a00      	lsrs	r0, r0, #8
 8025218:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802521c:	4330      	orrs	r0, r6
 802521e:	b28e      	uxth	r6, r1
 8025220:	fa1f f98e 	uxth.w	r9, lr
 8025224:	fb06 f809 	mul.w	r8, r6, r9
 8025228:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 802522c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8025230:	0136      	lsls	r6, r6, #4
 8025232:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025236:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802523a:	9601      	str	r6, [sp, #4]
 802523c:	ea4a 0404 	orr.w	r4, sl, r4
 8025240:	fa1f f689 	uxth.w	r6, r9
 8025244:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025248:	fb11 f90e 	smulbb	r9, r1, lr
 802524c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8025250:	9602      	str	r6, [sp, #8]
 8025252:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025256:	4626      	mov	r6, r4
 8025258:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802525c:	f1ce 0410 	rsb	r4, lr, #16
 8025260:	1a64      	subs	r4, r4, r1
 8025262:	ea4a 0202 	orr.w	r2, sl, r2
 8025266:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802526a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802526e:	434a      	muls	r2, r1
 8025270:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025274:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025278:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802527c:	fb04 2406 	mla	r4, r4, r6, r2
 8025280:	ea4a 0000 	orr.w	r0, sl, r0
 8025284:	fb09 4200 	mla	r2, r9, r0, r4
 8025288:	ea4f 440b 	mov.w	r4, fp, lsl #16
 802528c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8025290:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8025294:	ea44 0b0b 	orr.w	fp, r4, fp
 8025298:	9c01      	ldr	r4, [sp, #4]
 802529a:	9e02      	ldr	r6, [sp, #8]
 802529c:	9903      	ldr	r1, [sp, #12]
 802529e:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 80252a2:	1ba4      	subs	r4, r4, r6
 80252a4:	9e01      	ldr	r6, [sp, #4]
 80252a6:	8808      	ldrh	r0, [r1, #0]
 80252a8:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 80252ac:	eba6 0608 	sub.w	r6, r6, r8
 80252b0:	b2b6      	uxth	r6, r6
 80252b2:	b2a4      	uxth	r4, r4
 80252b4:	4373      	muls	r3, r6
 80252b6:	fb0c 3304 	mla	r3, ip, r4, r3
 80252ba:	9c02      	ldr	r4, [sp, #8]
 80252bc:	fb04 3505 	mla	r5, r4, r5, r3
 80252c0:	fb08 5707 	mla	r7, r8, r7, r5
 80252c4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80252c8:	b289      	uxth	r1, r1
 80252ca:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80252ce:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80252d2:	434f      	muls	r7, r1
 80252d4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80252d8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80252dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80252e0:	1c7b      	adds	r3, r7, #1
 80252e2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80252e6:	ea42 0e0e 	orr.w	lr, r2, lr
 80252ea:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80252ee:	fa1f f28e 	uxth.w	r2, lr
 80252f2:	1203      	asrs	r3, r0, #8
 80252f4:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80252f8:	b2ff      	uxtb	r7, r7
 80252fa:	1215      	asrs	r5, r2, #8
 80252fc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025300:	fb13 f307 	smulbb	r3, r3, r7
 8025304:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025308:	fb05 3501 	mla	r5, r5, r1, r3
 802530c:	10c3      	asrs	r3, r0, #3
 802530e:	10d4      	asrs	r4, r2, #3
 8025310:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025314:	fb13 f307 	smulbb	r3, r3, r7
 8025318:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802531c:	fb04 3401 	mla	r4, r4, r1, r3
 8025320:	00c3      	lsls	r3, r0, #3
 8025322:	00d2      	lsls	r2, r2, #3
 8025324:	b2db      	uxtb	r3, r3
 8025326:	fb13 f307 	smulbb	r3, r3, r7
 802532a:	b2d2      	uxtb	r2, r2
 802532c:	fb02 3101 	mla	r1, r2, r1, r3
 8025330:	b2ad      	uxth	r5, r5
 8025332:	b289      	uxth	r1, r1
 8025334:	b2a4      	uxth	r4, r4
 8025336:	1c6b      	adds	r3, r5, #1
 8025338:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802533c:	1c62      	adds	r2, r4, #1
 802533e:	1c4b      	adds	r3, r1, #1
 8025340:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8025344:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025348:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802534c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025350:	0964      	lsrs	r4, r4, #5
 8025352:	432b      	orrs	r3, r5
 8025354:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025358:	9a03      	ldr	r2, [sp, #12]
 802535a:	4323      	orrs	r3, r4
 802535c:	8013      	strh	r3, [r2, #0]
 802535e:	b005      	add	sp, #20
 8025360:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025364:	f04f 0c00 	mov.w	ip, #0
 8025368:	4664      	mov	r4, ip
 802536a:	e6d6      	b.n	802511a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 802536c:	2300      	movs	r3, #0
 802536e:	469c      	mov	ip, r3
 8025370:	461a      	mov	r2, r3
 8025372:	461c      	mov	r4, r3
 8025374:	e6f8      	b.n	8025168 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8025376:	2300      	movs	r3, #0
 8025378:	461a      	mov	r2, r3
 802537a:	e6f5      	b.n	8025168 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802537c:	460b      	mov	r3, r1
 802537e:	460a      	mov	r2, r1
 8025380:	e6f2      	b.n	8025168 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8025382:	2500      	movs	r5, #0
 8025384:	46ab      	mov	fp, r5
 8025386:	e720      	b.n	80251ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8025388:	2700      	movs	r7, #0
 802538a:	463d      	mov	r5, r7
 802538c:	4638      	mov	r0, r7
 802538e:	46bb      	mov	fp, r7
 8025390:	e745      	b.n	802521e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8025392:	4677      	mov	r7, lr
 8025394:	4675      	mov	r5, lr
 8025396:	4670      	mov	r0, lr
 8025398:	46f3      	mov	fp, lr
 802539a:	e740      	b.n	802521e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802539c:	2700      	movs	r7, #0
 802539e:	4638      	mov	r0, r7
 80253a0:	e73d      	b.n	802521e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80253a2:	460f      	mov	r7, r1
 80253a4:	4608      	mov	r0, r1
 80253a6:	e73a      	b.n	802521e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080253a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80253a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80253ac:	b097      	sub	sp, #92	; 0x5c
 80253ae:	9214      	str	r2, [sp, #80]	; 0x50
 80253b0:	9308      	str	r3, [sp, #32]
 80253b2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80253b4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80253b8:	9312      	str	r3, [sp, #72]	; 0x48
 80253ba:	9111      	str	r1, [sp, #68]	; 0x44
 80253bc:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80253c0:	9015      	str	r0, [sp, #84]	; 0x54
 80253c2:	6850      	ldr	r0, [r2, #4]
 80253c4:	6812      	ldr	r2, [r2, #0]
 80253c6:	fb00 1303 	mla	r3, r0, r3, r1
 80253ca:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80253ce:	9309      	str	r3, [sp, #36]	; 0x24
 80253d0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80253d2:	681b      	ldr	r3, [r3, #0]
 80253d4:	930b      	str	r3, [sp, #44]	; 0x2c
 80253d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80253d8:	685b      	ldr	r3, [r3, #4]
 80253da:	930c      	str	r3, [sp, #48]	; 0x30
 80253dc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80253e0:	930a      	str	r3, [sp, #40]	; 0x28
 80253e2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80253e4:	2b00      	cmp	r3, #0
 80253e6:	dc03      	bgt.n	80253f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80253e8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80253ea:	2b00      	cmp	r3, #0
 80253ec:	f340 83cb 	ble.w	8025b86 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80253f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80253f2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80253f6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80253fa:	1e48      	subs	r0, r1, #1
 80253fc:	1e55      	subs	r5, r2, #1
 80253fe:	9b08      	ldr	r3, [sp, #32]
 8025400:	2b00      	cmp	r3, #0
 8025402:	f340 81a3 	ble.w	802574c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8025406:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8025408:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802540a:	1436      	asrs	r6, r6, #16
 802540c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8025410:	d406      	bmi.n	8025420 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025412:	4286      	cmp	r6, r0
 8025414:	da04      	bge.n	8025420 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025416:	2b00      	cmp	r3, #0
 8025418:	db02      	blt.n	8025420 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802541a:	42ab      	cmp	r3, r5
 802541c:	f2c0 8197 	blt.w	802574e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8025420:	3601      	adds	r6, #1
 8025422:	f100 8184 	bmi.w	802572e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025426:	42b1      	cmp	r1, r6
 8025428:	f2c0 8181 	blt.w	802572e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802542c:	3301      	adds	r3, #1
 802542e:	f100 817e 	bmi.w	802572e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025432:	429a      	cmp	r2, r3
 8025434:	f2c0 817b 	blt.w	802572e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025438:	9b08      	ldr	r3, [sp, #32]
 802543a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802543c:	9313      	str	r3, [sp, #76]	; 0x4c
 802543e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8025442:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025444:	2b00      	cmp	r3, #0
 8025446:	f340 81a4 	ble.w	8025792 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802544a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802544c:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802544e:	1418      	asrs	r0, r3, #16
 8025450:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025452:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8025456:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8025458:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 802545c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802545e:	142d      	asrs	r5, r5, #16
 8025460:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8025464:	f100 81f8 	bmi.w	8025858 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025468:	f102 3eff 	add.w	lr, r2, #4294967295
 802546c:	4575      	cmp	r5, lr
 802546e:	f280 81f3 	bge.w	8025858 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025472:	2800      	cmp	r0, #0
 8025474:	f2c0 81f0 	blt.w	8025858 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025478:	f103 3eff 	add.w	lr, r3, #4294967295
 802547c:	4570      	cmp	r0, lr
 802547e:	f280 81eb 	bge.w	8025858 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025482:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025484:	b212      	sxth	r2, r2
 8025486:	fb00 5002 	mla	r0, r0, r2, r5
 802548a:	fa1f fe81 	uxth.w	lr, r1
 802548e:	eb03 0a00 	add.w	sl, r3, r0
 8025492:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8025496:	f813 9000 	ldrb.w	r9, [r3, r0]
 802549a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802549e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80254a2:	b29b      	uxth	r3, r3
 80254a4:	f1bc 0f00 	cmp.w	ip, #0
 80254a8:	f000 81b9 	beq.w	802581e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80254ac:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80254b0:	940d      	str	r4, [sp, #52]	; 0x34
 80254b2:	eb0a 0b02 	add.w	fp, sl, r2
 80254b6:	fa1f fa8c 	uxth.w	sl, ip
 80254ba:	fb0a fe0e 	mul.w	lr, sl, lr
 80254be:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80254c2:	fa1f fa8a 	uxth.w	sl, sl
 80254c6:	eba5 050e 	sub.w	r5, r5, lr
 80254ca:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80254ce:	940e      	str	r4, [sp, #56]	; 0x38
 80254d0:	eba3 030a 	sub.w	r3, r3, sl
 80254d4:	b2ad      	uxth	r5, r5
 80254d6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80254d8:	b29b      	uxth	r3, r3
 80254da:	fb08 f505 	mul.w	r5, r8, r5
 80254de:	fb09 5303 	mla	r3, r9, r3, r5
 80254e2:	fb0a 3304 	mla	r3, sl, r4, r3
 80254e6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80254e8:	fb0e 3304 	mla	r3, lr, r4, r3
 80254ec:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80254f0:	2b00      	cmp	r3, #0
 80254f2:	f000 810f 	beq.w	8025714 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80254f6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80254f8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80254fc:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8025500:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8025504:	f000 8190 	beq.w	8025828 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8025508:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802550c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025510:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025514:	fb09 f000 	mul.w	r0, r9, r0
 8025518:	fb0a fe0e 	mul.w	lr, sl, lr
 802551c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8025520:	f100 0b20 	add.w	fp, r0, #32
 8025524:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025528:	44ce      	add	lr, r9
 802552a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802552e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025532:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025536:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802553a:	ea4e 0909 	orr.w	r9, lr, r9
 802553e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8025542:	8868      	ldrh	r0, [r5, #2]
 8025544:	d019      	beq.n	802557a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8025546:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802554a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802554e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025552:	fb08 f800 	mul.w	r8, r8, r0
 8025556:	fb0a fe0e 	mul.w	lr, sl, lr
 802555a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802555e:	f108 0b20 	add.w	fp, r8, #32
 8025562:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025566:	4486      	add	lr, r0
 8025568:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 802556c:	0a00      	lsrs	r0, r0, #8
 802556e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025572:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025576:	ea4e 0000 	orr.w	r0, lr, r0
 802557a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802557e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8025582:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8025586:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802558a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802558e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025592:	ea4e 0909 	orr.w	r9, lr, r9
 8025596:	ea4a 0000 	orr.w	r0, sl, r0
 802559a:	f1bc 0f00 	cmp.w	ip, #0
 802559e:	f000 8145 	beq.w	802582c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80255a2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80255a6:	3a01      	subs	r2, #1
 80255a8:	0052      	lsls	r2, r2, #1
 80255aa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80255ac:	3202      	adds	r2, #2
 80255ae:	2cff      	cmp	r4, #255	; 0xff
 80255b0:	eb05 0e02 	add.w	lr, r5, r2
 80255b4:	5aaa      	ldrh	r2, [r5, r2]
 80255b6:	d018      	beq.n	80255ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80255b8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80255bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80255c0:	fb04 fa02 	mul.w	sl, r4, r2
 80255c4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80255c8:	fb08 f805 	mul.w	r8, r8, r5
 80255cc:	f10a 0520 	add.w	r5, sl, #32
 80255d0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80255d4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80255d8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80255dc:	4442      	add	r2, r8
 80255de:	0a2d      	lsrs	r5, r5, #8
 80255e0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80255e4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80255e8:	432a      	orrs	r2, r5
 80255ea:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80255ec:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80255f0:	2cff      	cmp	r4, #255	; 0xff
 80255f2:	d01a      	beq.n	802562a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80255f4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80255f8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80255fc:	fb04 fa05 	mul.w	sl, r4, r5
 8025600:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025604:	fb08 f80e 	mul.w	r8, r8, lr
 8025608:	f10a 0e20 	add.w	lr, sl, #32
 802560c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8025610:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8025614:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025618:	4445      	add	r5, r8
 802561a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802561e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8025622:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8025626:	ea45 050e 	orr.w	r5, r5, lr
 802562a:	fb1c fe01 	smulbb	lr, ip, r1
 802562e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8025632:	f1cc 0810 	rsb	r8, ip, #16
 8025636:	eba8 0801 	sub.w	r8, r8, r1
 802563a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802563e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8025642:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8025646:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802564a:	4341      	muls	r1, r0
 802564c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025650:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025654:	ea4a 0202 	orr.w	r2, sl, r2
 8025658:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 802565c:	fb09 1108 	mla	r1, r9, r8, r1
 8025660:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025664:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8025668:	fb0c 1102 	mla	r1, ip, r2, r1
 802566c:	ea4b 0505 	orr.w	r5, fp, r5
 8025670:	fb0e 1e05 	mla	lr, lr, r5, r1
 8025674:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025678:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802567c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025680:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025684:	ea42 0e0e 	orr.w	lr, r2, lr
 8025688:	fa1f f28e 	uxth.w	r2, lr
 802568c:	2bff      	cmp	r3, #255	; 0xff
 802568e:	d103      	bne.n	8025698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8025690:	9912      	ldr	r1, [sp, #72]	; 0x48
 8025692:	29ff      	cmp	r1, #255	; 0xff
 8025694:	f000 80de 	beq.w	8025854 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8025698:	990a      	ldr	r1, [sp, #40]	; 0x28
 802569a:	8838      	ldrh	r0, [r7, #0]
 802569c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802569e:	434b      	muls	r3, r1
 80256a0:	f103 0c01 	add.w	ip, r3, #1
 80256a4:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80256a8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80256ac:	fa5f fc83 	uxtb.w	ip, r3
 80256b0:	1203      	asrs	r3, r0, #8
 80256b2:	1215      	asrs	r5, r2, #8
 80256b4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80256b8:	fb13 f30c 	smulbb	r3, r3, ip
 80256bc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80256c0:	fb05 3501 	mla	r5, r5, r1, r3
 80256c4:	10c3      	asrs	r3, r0, #3
 80256c6:	10d1      	asrs	r1, r2, #3
 80256c8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80256cc:	fb13 f30c 	smulbb	r3, r3, ip
 80256d0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80256d4:	fb01 3104 	mla	r1, r1, r4, r3
 80256d8:	00c3      	lsls	r3, r0, #3
 80256da:	00d2      	lsls	r2, r2, #3
 80256dc:	b2db      	uxtb	r3, r3
 80256de:	b2d2      	uxtb	r2, r2
 80256e0:	fb13 f30c 	smulbb	r3, r3, ip
 80256e4:	b2ad      	uxth	r5, r5
 80256e6:	fb02 3304 	mla	r3, r2, r4, r3
 80256ea:	b29a      	uxth	r2, r3
 80256ec:	1c6b      	adds	r3, r5, #1
 80256ee:	b289      	uxth	r1, r1
 80256f0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80256f4:	1c53      	adds	r3, r2, #1
 80256f6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80256fa:	1c4a      	adds	r2, r1, #1
 80256fc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8025700:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025704:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025708:	0949      	lsrs	r1, r1, #5
 802570a:	432b      	orrs	r3, r5
 802570c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025710:	430b      	orrs	r3, r1
 8025712:	803b      	strh	r3, [r7, #0]
 8025714:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025716:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8025718:	4413      	add	r3, r2
 802571a:	9321      	str	r3, [sp, #132]	; 0x84
 802571c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802571e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025720:	441a      	add	r2, r3
 8025722:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025724:	9222      	str	r2, [sp, #136]	; 0x88
 8025726:	3b01      	subs	r3, #1
 8025728:	3702      	adds	r7, #2
 802572a:	9313      	str	r3, [sp, #76]	; 0x4c
 802572c:	e689      	b.n	8025442 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802572e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025730:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8025732:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8025734:	4433      	add	r3, r6
 8025736:	9321      	str	r3, [sp, #132]	; 0x84
 8025738:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802573a:	441c      	add	r4, r3
 802573c:	9b08      	ldr	r3, [sp, #32]
 802573e:	9422      	str	r4, [sp, #136]	; 0x88
 8025740:	3b01      	subs	r3, #1
 8025742:	9308      	str	r3, [sp, #32]
 8025744:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025746:	3302      	adds	r3, #2
 8025748:	9309      	str	r3, [sp, #36]	; 0x24
 802574a:	e658      	b.n	80253fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 802574c:	d028      	beq.n	80257a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802574e:	9b08      	ldr	r3, [sp, #32]
 8025750:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8025752:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8025754:	3b01      	subs	r3, #1
 8025756:	fb00 5003 	mla	r0, r0, r3, r5
 802575a:	1400      	asrs	r0, r0, #16
 802575c:	f53f ae6c 	bmi.w	8025438 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025760:	3901      	subs	r1, #1
 8025762:	4288      	cmp	r0, r1
 8025764:	f6bf ae68 	bge.w	8025438 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025768:	9924      	ldr	r1, [sp, #144]	; 0x90
 802576a:	9822      	ldr	r0, [sp, #136]	; 0x88
 802576c:	fb01 0303 	mla	r3, r1, r3, r0
 8025770:	141b      	asrs	r3, r3, #16
 8025772:	f53f ae61 	bmi.w	8025438 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025776:	3a01      	subs	r2, #1
 8025778:	4293      	cmp	r3, r2
 802577a:	f6bf ae5d 	bge.w	8025438 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802577e:	9b08      	ldr	r3, [sp, #32]
 8025780:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8025784:	9313      	str	r3, [sp, #76]	; 0x4c
 8025786:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802578a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802578c:	2b00      	cmp	r3, #0
 802578e:	f300 8082 	bgt.w	8025896 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8025792:	9b08      	ldr	r3, [sp, #32]
 8025794:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8025798:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802579a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802579e:	9309      	str	r3, [sp, #36]	; 0x24
 80257a0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80257a2:	2b00      	cmp	r3, #0
 80257a4:	f340 81ef 	ble.w	8025b86 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80257a8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80257ac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80257b0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80257b4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80257b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80257ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 80257be:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80257c2:	eef0 6a62 	vmov.f32	s13, s5
 80257c6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80257ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80257ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 80257d2:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 80257d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80257da:	eef0 6a43 	vmov.f32	s13, s6
 80257de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80257e2:	ee12 2a90 	vmov	r2, s5
 80257e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80257ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80257ee:	ee13 2a10 	vmov	r2, s6
 80257f2:	9323      	str	r3, [sp, #140]	; 0x8c
 80257f4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80257f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80257fa:	9324      	str	r3, [sp, #144]	; 0x90
 80257fc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80257fe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025800:	3b01      	subs	r3, #1
 8025802:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025806:	9311      	str	r3, [sp, #68]	; 0x44
 8025808:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802580a:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 802580e:	bf08      	it	eq
 8025810:	4613      	moveq	r3, r2
 8025812:	9308      	str	r3, [sp, #32]
 8025814:	eeb0 3a67 	vmov.f32	s6, s15
 8025818:	eef0 2a47 	vmov.f32	s5, s14
 802581c:	e5e1      	b.n	80253e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802581e:	fb08 f505 	mul.w	r5, r8, r5
 8025822:	fb09 5303 	mla	r3, r9, r3, r5
 8025826:	e661      	b.n	80254ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8025828:	4681      	mov	r9, r0
 802582a:	e688      	b.n	802553e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 802582c:	f1c1 0210 	rsb	r2, r1, #16
 8025830:	4341      	muls	r1, r0
 8025832:	fb09 1902 	mla	r9, r9, r2, r1
 8025836:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802583a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802583e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8025842:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025846:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802584a:	ea42 0909 	orr.w	r9, r2, r9
 802584e:	fa1f f289 	uxth.w	r2, r9
 8025852:	e71b      	b.n	802568c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8025854:	803a      	strh	r2, [r7, #0]
 8025856:	e75d      	b.n	8025714 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025858:	f115 0e01 	adds.w	lr, r5, #1
 802585c:	f53f af5a 	bmi.w	8025714 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025860:	4572      	cmp	r2, lr
 8025862:	f6ff af57 	blt.w	8025714 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025866:	f110 0e01 	adds.w	lr, r0, #1
 802586a:	f53f af53 	bmi.w	8025714 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802586e:	4573      	cmp	r3, lr
 8025870:	f6ff af50 	blt.w	8025714 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025874:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8025876:	9502      	str	r5, [sp, #8]
 8025878:	b21b      	sxth	r3, r3
 802587a:	b212      	sxth	r2, r2
 802587c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8025880:	9301      	str	r3, [sp, #4]
 8025882:	9200      	str	r2, [sp, #0]
 8025884:	e9cd c405 	strd	ip, r4, [sp, #20]
 8025888:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 802588c:	4639      	mov	r1, r7
 802588e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8025890:	f7ff fc04 	bl	802509c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8025894:	e73e      	b.n	8025714 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025896:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025898:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802589c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802589e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80258a2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80258a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80258a8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80258aa:	141f      	asrs	r7, r3, #16
 80258ac:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80258ae:	141b      	asrs	r3, r3, #16
 80258b0:	fb01 3707 	mla	r7, r1, r7, r3
 80258b4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80258b6:	fa1f fc82 	uxth.w	ip, r2
 80258ba:	eb03 0a07 	add.w	sl, r3, r7
 80258be:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80258c2:	f813 9007 	ldrb.w	r9, [r3, r7]
 80258c6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80258ca:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80258ce:	b29b      	uxth	r3, r3
 80258d0:	2d00      	cmp	r5, #0
 80258d2:	f000 813d 	beq.w	8025b50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 80258d6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80258da:	940f      	str	r4, [sp, #60]	; 0x3c
 80258dc:	eb0a 0b01 	add.w	fp, sl, r1
 80258e0:	fa1f fa85 	uxth.w	sl, r5
 80258e4:	fb0a fc0c 	mul.w	ip, sl, ip
 80258e8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80258ec:	fa1f fa8a 	uxth.w	sl, sl
 80258f0:	eba0 000c 	sub.w	r0, r0, ip
 80258f4:	eba3 030a 	sub.w	r3, r3, sl
 80258f8:	b280      	uxth	r0, r0
 80258fa:	fb08 f000 	mul.w	r0, r8, r0
 80258fe:	b29b      	uxth	r3, r3
 8025900:	fb09 0303 	mla	r3, r9, r3, r0
 8025904:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8025906:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802590a:	9410      	str	r4, [sp, #64]	; 0x40
 802590c:	fb0a 3300 	mla	r3, sl, r0, r3
 8025910:	fb0c 3304 	mla	r3, ip, r4, r3
 8025914:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025918:	2b00      	cmp	r3, #0
 802591a:	f000 810b 	beq.w	8025b34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 802591e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8025920:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025922:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8025926:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802592a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802592e:	f000 8114 	beq.w	8025b5a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8025932:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8025936:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802593a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802593e:	fb09 f707 	mul.w	r7, r9, r7
 8025942:	fb0a fc0c 	mul.w	ip, sl, ip
 8025946:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802594a:	f107 0b20 	add.w	fp, r7, #32
 802594e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8025952:	44cc      	add	ip, r9
 8025954:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8025958:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802595c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8025960:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8025964:	ea4c 0909 	orr.w	r9, ip, r9
 8025968:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802596c:	8847      	ldrh	r7, [r0, #2]
 802596e:	d019      	beq.n	80259a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8025970:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8025974:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8025978:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802597c:	fb08 f807 	mul.w	r8, r8, r7
 8025980:	fb0a fc0c 	mul.w	ip, sl, ip
 8025984:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8025988:	f108 0b20 	add.w	fp, r8, #32
 802598c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8025990:	44bc      	add	ip, r7
 8025992:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8025996:	0a3f      	lsrs	r7, r7, #8
 8025998:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802599c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80259a0:	ea4c 0707 	orr.w	r7, ip, r7
 80259a4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80259a8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80259ac:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80259b0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80259b4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80259b8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80259bc:	ea4c 0909 	orr.w	r9, ip, r9
 80259c0:	ea4a 0707 	orr.w	r7, sl, r7
 80259c4:	2d00      	cmp	r5, #0
 80259c6:	f000 80ca 	beq.w	8025b5e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 80259ca:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80259ce:	3901      	subs	r1, #1
 80259d0:	0049      	lsls	r1, r1, #1
 80259d2:	3102      	adds	r1, #2
 80259d4:	eb00 0c01 	add.w	ip, r0, r1
 80259d8:	5a41      	ldrh	r1, [r0, r1]
 80259da:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80259dc:	28ff      	cmp	r0, #255	; 0xff
 80259de:	d019      	beq.n	8025a14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 80259e0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80259e2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80259e6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80259ea:	fb04 fa01 	mul.w	sl, r4, r1
 80259ee:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80259f2:	fb08 f800 	mul.w	r8, r8, r0
 80259f6:	f10a 0020 	add.w	r0, sl, #32
 80259fa:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80259fe:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8025a02:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025a06:	4441      	add	r1, r8
 8025a08:	0a00      	lsrs	r0, r0, #8
 8025a0a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8025a0e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025a12:	4301      	orrs	r1, r0
 8025a14:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8025a16:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8025a1a:	2cff      	cmp	r4, #255	; 0xff
 8025a1c:	d01a      	beq.n	8025a54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8025a1e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8025a22:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025a26:	fb04 fa00 	mul.w	sl, r4, r0
 8025a2a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025a2e:	fb08 f80c 	mul.w	r8, r8, ip
 8025a32:	f10a 0c20 	add.w	ip, sl, #32
 8025a36:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8025a3a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8025a3e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025a42:	4440      	add	r0, r8
 8025a44:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025a48:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8025a4c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025a50:	ea40 000c 	orr.w	r0, r0, ip
 8025a54:	fb15 fc02 	smulbb	ip, r5, r2
 8025a58:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8025a5c:	f1c5 0810 	rsb	r8, r5, #16
 8025a60:	eba8 0802 	sub.w	r8, r8, r2
 8025a64:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8025a68:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8025a6c:	437a      	muls	r2, r7
 8025a6e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8025a72:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8025a76:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025a7a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8025a7e:	fb09 2208 	mla	r2, r9, r8, r2
 8025a82:	ea4a 0101 	orr.w	r1, sl, r1
 8025a86:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8025a8a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025a8e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025a92:	fb05 2201 	mla	r2, r5, r1, r2
 8025a96:	ea4b 0000 	orr.w	r0, fp, r0
 8025a9a:	fb0c 2200 	mla	r2, ip, r0, r2
 8025a9e:	0d57      	lsrs	r7, r2, #21
 8025aa0:	0952      	lsrs	r2, r2, #5
 8025aa2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025aa6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025aaa:	433a      	orrs	r2, r7
 8025aac:	2bff      	cmp	r3, #255	; 0xff
 8025aae:	b292      	uxth	r2, r2
 8025ab0:	d102      	bne.n	8025ab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8025ab2:	9912      	ldr	r1, [sp, #72]	; 0x48
 8025ab4:	29ff      	cmp	r1, #255	; 0xff
 8025ab6:	d063      	beq.n	8025b80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8025ab8:	980a      	ldr	r0, [sp, #40]	; 0x28
 8025aba:	f8be 1000 	ldrh.w	r1, [lr]
 8025abe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8025ac0:	4343      	muls	r3, r0
 8025ac2:	1c58      	adds	r0, r3, #1
 8025ac4:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8025ac8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8025acc:	1208      	asrs	r0, r1, #8
 8025ace:	b2db      	uxtb	r3, r3
 8025ad0:	1215      	asrs	r5, r2, #8
 8025ad2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025ad6:	fb10 f003 	smulbb	r0, r0, r3
 8025ada:	10cf      	asrs	r7, r1, #3
 8025adc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025ae0:	00c9      	lsls	r1, r1, #3
 8025ae2:	fb05 0504 	mla	r5, r5, r4, r0
 8025ae6:	b2c9      	uxtb	r1, r1
 8025ae8:	10d0      	asrs	r0, r2, #3
 8025aea:	00d2      	lsls	r2, r2, #3
 8025aec:	fb11 f103 	smulbb	r1, r1, r3
 8025af0:	b2d2      	uxtb	r2, r2
 8025af2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8025af6:	fb02 1204 	mla	r2, r2, r4, r1
 8025afa:	fb17 f703 	smulbb	r7, r7, r3
 8025afe:	b2ad      	uxth	r5, r5
 8025b00:	b292      	uxth	r2, r2
 8025b02:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025b06:	fb00 7004 	mla	r0, r0, r4, r7
 8025b0a:	1c6b      	adds	r3, r5, #1
 8025b0c:	1c57      	adds	r7, r2, #1
 8025b0e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025b12:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8025b16:	b280      	uxth	r0, r0
 8025b18:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8025b1c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025b20:	433d      	orrs	r5, r7
 8025b22:	1c47      	adds	r7, r0, #1
 8025b24:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8025b28:	097f      	lsrs	r7, r7, #5
 8025b2a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025b2e:	433d      	orrs	r5, r7
 8025b30:	f8ae 5000 	strh.w	r5, [lr]
 8025b34:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025b36:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8025b38:	4413      	add	r3, r2
 8025b3a:	9321      	str	r3, [sp, #132]	; 0x84
 8025b3c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8025b3e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025b40:	441a      	add	r2, r3
 8025b42:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025b44:	9222      	str	r2, [sp, #136]	; 0x88
 8025b46:	3b01      	subs	r3, #1
 8025b48:	f10e 0e02 	add.w	lr, lr, #2
 8025b4c:	9313      	str	r3, [sp, #76]	; 0x4c
 8025b4e:	e61c      	b.n	802578a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8025b50:	fb08 f000 	mul.w	r0, r8, r0
 8025b54:	fb09 0303 	mla	r3, r9, r3, r0
 8025b58:	e6dc      	b.n	8025914 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8025b5a:	46b9      	mov	r9, r7
 8025b5c:	e704      	b.n	8025968 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8025b5e:	f1c2 0110 	rsb	r1, r2, #16
 8025b62:	437a      	muls	r2, r7
 8025b64:	fb09 2901 	mla	r9, r9, r1, r2
 8025b68:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8025b6c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8025b70:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8025b74:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025b78:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025b7c:	4302      	orrs	r2, r0
 8025b7e:	e795      	b.n	8025aac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8025b80:	f8ae 2000 	strh.w	r2, [lr]
 8025b84:	e7d6      	b.n	8025b34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8025b86:	b017      	add	sp, #92	; 0x5c
 8025b88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025b8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8025b8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025b90:	b085      	sub	sp, #20
 8025b92:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8025b96:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8025b9a:	9103      	str	r1, [sp, #12]
 8025b9c:	fb00 7406 	mla	r4, r0, r6, r7
 8025ba0:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8025ba4:	2800      	cmp	r0, #0
 8025ba6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8025baa:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8025bae:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8025bb2:	9501      	str	r5, [sp, #4]
 8025bb4:	eb02 0904 	add.w	r9, r2, r4
 8025bb8:	f2c0 8141 	blt.w	8025e3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8025bbc:	4583      	cmp	fp, r0
 8025bbe:	f340 813e 	ble.w	8025e3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8025bc2:	2f00      	cmp	r7, #0
 8025bc4:	f2c0 8137 	blt.w	8025e36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8025bc8:	42be      	cmp	r6, r7
 8025bca:	f340 8134 	ble.w	8025e36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8025bce:	f812 c004 	ldrb.w	ip, [r2, r4]
 8025bd2:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8025bd6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025bda:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8025bde:	4355      	muls	r5, r2
 8025be0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025be4:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8025be8:	fb0c f203 	mul.w	r2, ip, r3
 8025bec:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8025bf0:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8025bf4:	441d      	add	r5, r3
 8025bf6:	f102 0320 	add.w	r3, r2, #32
 8025bfa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025bfe:	0a1b      	lsrs	r3, r3, #8
 8025c00:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8025c04:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025c08:	431c      	orrs	r4, r3
 8025c0a:	1c7b      	adds	r3, r7, #1
 8025c0c:	f100 811c 	bmi.w	8025e48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8025c10:	429e      	cmp	r6, r3
 8025c12:	f340 8119 	ble.w	8025e48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8025c16:	2900      	cmp	r1, #0
 8025c18:	f000 8119 	beq.w	8025e4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8025c1c:	9a01      	ldr	r2, [sp, #4]
 8025c1e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8025c22:	8855      	ldrh	r5, [r2, #2]
 8025c24:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8025c28:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8025c2c:	fb08 f802 	mul.w	r8, r8, r2
 8025c30:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025c34:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8025c38:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8025c3c:	435d      	muls	r5, r3
 8025c3e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025c42:	44d0      	add	r8, sl
 8025c44:	f105 0a20 	add.w	sl, r5, #32
 8025c48:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8025c4c:	0a2d      	lsrs	r5, r5, #8
 8025c4e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8025c52:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025c56:	432a      	orrs	r2, r5
 8025c58:	3001      	adds	r0, #1
 8025c5a:	f100 80fe 	bmi.w	8025e5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8025c5e:	4583      	cmp	fp, r0
 8025c60:	f340 80fb 	ble.w	8025e5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8025c64:	f1be 0f00 	cmp.w	lr, #0
 8025c68:	f000 80fc 	beq.w	8025e64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8025c6c:	2f00      	cmp	r7, #0
 8025c6e:	f2c0 80f1 	blt.w	8025e54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8025c72:	42be      	cmp	r6, r7
 8025c74:	f340 80ee 	ble.w	8025e54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8025c78:	9801      	ldr	r0, [sp, #4]
 8025c7a:	f819 5006 	ldrb.w	r5, [r9, r6]
 8025c7e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8025c82:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8025c86:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8025c8a:	fb0a fa00 	mul.w	sl, sl, r0
 8025c8e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8025c92:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8025c96:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8025c9a:	fb05 f808 	mul.w	r8, r5, r8
 8025c9e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8025ca2:	4482      	add	sl, r0
 8025ca4:	f108 0020 	add.w	r0, r8, #32
 8025ca8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025cac:	0a00      	lsrs	r0, r0, #8
 8025cae:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8025cb2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025cb6:	ea4b 0b00 	orr.w	fp, fp, r0
 8025cba:	3701      	adds	r7, #1
 8025cbc:	f100 80d7 	bmi.w	8025e6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8025cc0:	42be      	cmp	r6, r7
 8025cc2:	f340 80d4 	ble.w	8025e6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8025cc6:	2900      	cmp	r1, #0
 8025cc8:	f000 80d4 	beq.w	8025e74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8025ccc:	3601      	adds	r6, #1
 8025cce:	9801      	ldr	r0, [sp, #4]
 8025cd0:	f819 7006 	ldrb.w	r7, [r9, r6]
 8025cd4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8025cd8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8025cdc:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8025ce0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025ce4:	fb09 f906 	mul.w	r9, r9, r6
 8025ce8:	fb07 f800 	mul.w	r8, r7, r0
 8025cec:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8025cf0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8025cf4:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8025cf8:	44d1      	add	r9, sl
 8025cfa:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8025cfe:	f108 0020 	add.w	r0, r8, #32
 8025d02:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025d06:	0a00      	lsrs	r0, r0, #8
 8025d08:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025d0c:	4330      	orrs	r0, r6
 8025d0e:	b28e      	uxth	r6, r1
 8025d10:	fa1f f98e 	uxth.w	r9, lr
 8025d14:	fb06 f809 	mul.w	r8, r6, r9
 8025d18:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8025d1c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8025d20:	0136      	lsls	r6, r6, #4
 8025d22:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025d26:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8025d2a:	9601      	str	r6, [sp, #4]
 8025d2c:	ea4a 0404 	orr.w	r4, sl, r4
 8025d30:	fa1f f689 	uxth.w	r6, r9
 8025d34:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025d38:	fb11 f90e 	smulbb	r9, r1, lr
 8025d3c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8025d40:	9602      	str	r6, [sp, #8]
 8025d42:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025d46:	4626      	mov	r6, r4
 8025d48:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025d4c:	f1ce 0410 	rsb	r4, lr, #16
 8025d50:	1a64      	subs	r4, r4, r1
 8025d52:	ea4a 0202 	orr.w	r2, sl, r2
 8025d56:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8025d5a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8025d5e:	434a      	muls	r2, r1
 8025d60:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025d64:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025d68:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025d6c:	fb04 2406 	mla	r4, r4, r6, r2
 8025d70:	ea4a 0000 	orr.w	r0, sl, r0
 8025d74:	fb09 4200 	mla	r2, r9, r0, r4
 8025d78:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8025d7c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8025d80:	9801      	ldr	r0, [sp, #4]
 8025d82:	9903      	ldr	r1, [sp, #12]
 8025d84:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8025d88:	ea44 0b0b 	orr.w	fp, r4, fp
 8025d8c:	9c02      	ldr	r4, [sp, #8]
 8025d8e:	8809      	ldrh	r1, [r1, #0]
 8025d90:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8025d94:	1b00      	subs	r0, r0, r4
 8025d96:	9c01      	ldr	r4, [sp, #4]
 8025d98:	eba4 0608 	sub.w	r6, r4, r8
 8025d9c:	b2b6      	uxth	r6, r6
 8025d9e:	b280      	uxth	r0, r0
 8025da0:	4373      	muls	r3, r6
 8025da2:	fb0c 3300 	mla	r3, ip, r0, r3
 8025da6:	9802      	ldr	r0, [sp, #8]
 8025da8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8025dac:	fb00 3505 	mla	r5, r0, r5, r3
 8025db0:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8025db4:	fb08 5707 	mla	r7, r8, r7, r5
 8025db8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025dbc:	120b      	asrs	r3, r1, #8
 8025dbe:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8025dc2:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8025dc6:	b2ff      	uxtb	r7, r7
 8025dc8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025dcc:	10c8      	asrs	r0, r1, #3
 8025dce:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025dd2:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025dd6:	00c9      	lsls	r1, r1, #3
 8025dd8:	437b      	muls	r3, r7
 8025dda:	ea42 0e0e 	orr.w	lr, r2, lr
 8025dde:	b2c9      	uxtb	r1, r1
 8025de0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025de4:	fa1f f28e 	uxth.w	r2, lr
 8025de8:	4378      	muls	r0, r7
 8025dea:	434f      	muls	r7, r1
 8025dec:	1c59      	adds	r1, r3, #1
 8025dee:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8025df2:	1213      	asrs	r3, r2, #8
 8025df4:	f023 0307 	bic.w	r3, r3, #7
 8025df8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8025dfc:	1c41      	adds	r1, r0, #1
 8025dfe:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8025e02:	10d1      	asrs	r1, r2, #3
 8025e04:	f021 0103 	bic.w	r1, r1, #3
 8025e08:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025e0c:	021b      	lsls	r3, r3, #8
 8025e0e:	00c9      	lsls	r1, r1, #3
 8025e10:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025e14:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8025e18:	430b      	orrs	r3, r1
 8025e1a:	1c79      	adds	r1, r7, #1
 8025e1c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8025e20:	00d2      	lsls	r2, r2, #3
 8025e22:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8025e26:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025e2a:	431a      	orrs	r2, r3
 8025e2c:	9b03      	ldr	r3, [sp, #12]
 8025e2e:	801a      	strh	r2, [r3, #0]
 8025e30:	b005      	add	sp, #20
 8025e32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025e36:	f04f 0c00 	mov.w	ip, #0
 8025e3a:	4664      	mov	r4, ip
 8025e3c:	e6e5      	b.n	8025c0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8025e3e:	2300      	movs	r3, #0
 8025e40:	469c      	mov	ip, r3
 8025e42:	461a      	mov	r2, r3
 8025e44:	461c      	mov	r4, r3
 8025e46:	e707      	b.n	8025c58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025e48:	2300      	movs	r3, #0
 8025e4a:	461a      	mov	r2, r3
 8025e4c:	e704      	b.n	8025c58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025e4e:	460b      	mov	r3, r1
 8025e50:	460a      	mov	r2, r1
 8025e52:	e701      	b.n	8025c58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025e54:	2500      	movs	r5, #0
 8025e56:	46ab      	mov	fp, r5
 8025e58:	e72f      	b.n	8025cba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8025e5a:	2700      	movs	r7, #0
 8025e5c:	463d      	mov	r5, r7
 8025e5e:	4638      	mov	r0, r7
 8025e60:	46bb      	mov	fp, r7
 8025e62:	e754      	b.n	8025d0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8025e64:	4677      	mov	r7, lr
 8025e66:	4675      	mov	r5, lr
 8025e68:	4670      	mov	r0, lr
 8025e6a:	46f3      	mov	fp, lr
 8025e6c:	e74f      	b.n	8025d0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8025e6e:	2700      	movs	r7, #0
 8025e70:	4638      	mov	r0, r7
 8025e72:	e74c      	b.n	8025d0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8025e74:	460f      	mov	r7, r1
 8025e76:	4608      	mov	r0, r1
 8025e78:	e749      	b.n	8025d0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08025e7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025e7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025e80:	b093      	sub	sp, #76	; 0x4c
 8025e82:	9210      	str	r2, [sp, #64]	; 0x40
 8025e84:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8025e86:	910e      	str	r1, [sp, #56]	; 0x38
 8025e88:	9306      	str	r3, [sp, #24]
 8025e8a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8025e8e:	9011      	str	r0, [sp, #68]	; 0x44
 8025e90:	6850      	ldr	r0, [r2, #4]
 8025e92:	6812      	ldr	r2, [r2, #0]
 8025e94:	fb00 1303 	mla	r3, r0, r3, r1
 8025e98:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025e9c:	9307      	str	r3, [sp, #28]
 8025e9e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025ea0:	681b      	ldr	r3, [r3, #0]
 8025ea2:	9308      	str	r3, [sp, #32]
 8025ea4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025ea6:	685b      	ldr	r3, [r3, #4]
 8025ea8:	9309      	str	r3, [sp, #36]	; 0x24
 8025eaa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025eac:	2b00      	cmp	r3, #0
 8025eae:	dc03      	bgt.n	8025eb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8025eb0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8025eb2:	2b00      	cmp	r3, #0
 8025eb4:	f340 83b4 	ble.w	8026620 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8025eb8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025eba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025ebe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025ec2:	1e48      	subs	r0, r1, #1
 8025ec4:	1e55      	subs	r5, r2, #1
 8025ec6:	9b06      	ldr	r3, [sp, #24]
 8025ec8:	2b00      	cmp	r3, #0
 8025eca:	f340 8163 	ble.w	8026194 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8025ece:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8025ed0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8025ed2:	1436      	asrs	r6, r6, #16
 8025ed4:	ea4f 4323 	mov.w	r3, r3, asr #16
 8025ed8:	d406      	bmi.n	8025ee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025eda:	4286      	cmp	r6, r0
 8025edc:	da04      	bge.n	8025ee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025ede:	2b00      	cmp	r3, #0
 8025ee0:	db02      	blt.n	8025ee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025ee2:	42ab      	cmp	r3, r5
 8025ee4:	f2c0 8157 	blt.w	8026196 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8025ee8:	3601      	adds	r6, #1
 8025eea:	f100 8144 	bmi.w	8026176 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025eee:	42b1      	cmp	r1, r6
 8025ef0:	f2c0 8141 	blt.w	8026176 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025ef4:	3301      	adds	r3, #1
 8025ef6:	f100 813e 	bmi.w	8026176 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025efa:	429a      	cmp	r2, r3
 8025efc:	f2c0 813b 	blt.w	8026176 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025f00:	9b06      	ldr	r3, [sp, #24]
 8025f02:	9f07      	ldr	r7, [sp, #28]
 8025f04:	930f      	str	r3, [sp, #60]	; 0x3c
 8025f06:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8025f0a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8025f0c:	2b00      	cmp	r3, #0
 8025f0e:	f340 8164 	ble.w	80261da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8025f12:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8025f14:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8025f16:	1418      	asrs	r0, r3, #16
 8025f18:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025f1a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8025f1e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8025f20:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8025f24:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025f26:	142d      	asrs	r5, r5, #16
 8025f28:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8025f2c:	f100 81ee 	bmi.w	802630c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025f30:	f102 3eff 	add.w	lr, r2, #4294967295
 8025f34:	4575      	cmp	r5, lr
 8025f36:	f280 81e9 	bge.w	802630c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025f3a:	2800      	cmp	r0, #0
 8025f3c:	f2c0 81e6 	blt.w	802630c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025f40:	f103 3eff 	add.w	lr, r3, #4294967295
 8025f44:	4570      	cmp	r0, lr
 8025f46:	f280 81e1 	bge.w	802630c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025f4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025f4c:	b212      	sxth	r2, r2
 8025f4e:	fb00 5002 	mla	r0, r0, r2, r5
 8025f52:	fa1f fe81 	uxth.w	lr, r1
 8025f56:	eb03 0a00 	add.w	sl, r3, r0
 8025f5a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8025f5e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8025f62:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8025f66:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8025f6a:	b29b      	uxth	r3, r3
 8025f6c:	f1bc 0f00 	cmp.w	ip, #0
 8025f70:	f000 8179 	beq.w	8026266 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8025f74:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8025f78:	940a      	str	r4, [sp, #40]	; 0x28
 8025f7a:	eb0a 0b02 	add.w	fp, sl, r2
 8025f7e:	fa1f fa8c 	uxth.w	sl, ip
 8025f82:	fb0a fe0e 	mul.w	lr, sl, lr
 8025f86:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8025f8a:	fa1f fa8a 	uxth.w	sl, sl
 8025f8e:	eba5 050e 	sub.w	r5, r5, lr
 8025f92:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8025f96:	940b      	str	r4, [sp, #44]	; 0x2c
 8025f98:	eba3 030a 	sub.w	r3, r3, sl
 8025f9c:	b2ad      	uxth	r5, r5
 8025f9e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8025fa0:	b29b      	uxth	r3, r3
 8025fa2:	fb08 f505 	mul.w	r5, r8, r5
 8025fa6:	fb09 5303 	mla	r3, r9, r3, r5
 8025faa:	fb0a 3304 	mla	r3, sl, r4, r3
 8025fae:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025fb0:	fb0e 3304 	mla	r3, lr, r4, r3
 8025fb4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025fb8:	2b00      	cmp	r3, #0
 8025fba:	f000 80cf 	beq.w	802615c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8025fbe:	9c08      	ldr	r4, [sp, #32]
 8025fc0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8025fc4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8025fc8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8025fcc:	f000 8150 	beq.w	8026270 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8025fd0:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8025fd4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025fd8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025fdc:	fb09 f000 	mul.w	r0, r9, r0
 8025fe0:	fb0a fe0e 	mul.w	lr, sl, lr
 8025fe4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8025fe8:	f100 0b20 	add.w	fp, r0, #32
 8025fec:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025ff0:	44ce      	add	lr, r9
 8025ff2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8025ff6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025ffa:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025ffe:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8026002:	ea4e 0909 	orr.w	r9, lr, r9
 8026006:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802600a:	8868      	ldrh	r0, [r5, #2]
 802600c:	d019      	beq.n	8026042 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 802600e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8026012:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8026016:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802601a:	fb08 f800 	mul.w	r8, r8, r0
 802601e:	fb0a fe0e 	mul.w	lr, sl, lr
 8026022:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8026026:	f108 0b20 	add.w	fp, r8, #32
 802602a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802602e:	4486      	add	lr, r0
 8026030:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8026034:	0a00      	lsrs	r0, r0, #8
 8026036:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802603a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802603e:	ea4e 0000 	orr.w	r0, lr, r0
 8026042:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8026046:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802604a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802604e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8026052:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026056:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802605a:	ea4e 0909 	orr.w	r9, lr, r9
 802605e:	ea4a 0000 	orr.w	r0, sl, r0
 8026062:	f1bc 0f00 	cmp.w	ip, #0
 8026066:	f000 8105 	beq.w	8026274 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802606a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 802606e:	3a01      	subs	r2, #1
 8026070:	0052      	lsls	r2, r2, #1
 8026072:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8026074:	3202      	adds	r2, #2
 8026076:	2cff      	cmp	r4, #255	; 0xff
 8026078:	eb05 0e02 	add.w	lr, r5, r2
 802607c:	5aaa      	ldrh	r2, [r5, r2]
 802607e:	d018      	beq.n	80260b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8026080:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8026084:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026088:	fb04 fa02 	mul.w	sl, r4, r2
 802608c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8026090:	fb08 f805 	mul.w	r8, r8, r5
 8026094:	f10a 0520 	add.w	r5, sl, #32
 8026098:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 802609c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80260a0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80260a4:	4442      	add	r2, r8
 80260a6:	0a2d      	lsrs	r5, r5, #8
 80260a8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80260ac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80260b0:	432a      	orrs	r2, r5
 80260b2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80260b4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80260b8:	2cff      	cmp	r4, #255	; 0xff
 80260ba:	d01a      	beq.n	80260f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80260bc:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80260c0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80260c4:	fb04 fa05 	mul.w	sl, r4, r5
 80260c8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80260cc:	fb08 f80e 	mul.w	r8, r8, lr
 80260d0:	f10a 0e20 	add.w	lr, sl, #32
 80260d4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80260d8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80260dc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80260e0:	4445      	add	r5, r8
 80260e2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80260e6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80260ea:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80260ee:	ea45 050e 	orr.w	r5, r5, lr
 80260f2:	fb1c fe01 	smulbb	lr, ip, r1
 80260f6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80260fa:	f1cc 0810 	rsb	r8, ip, #16
 80260fe:	eba8 0801 	sub.w	r8, r8, r1
 8026102:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8026106:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802610a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802610e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8026112:	4341      	muls	r1, r0
 8026114:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026118:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802611c:	ea4a 0202 	orr.w	r2, sl, r2
 8026120:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8026124:	fb09 1108 	mla	r1, r9, r8, r1
 8026128:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802612c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8026130:	fb0c 1102 	mla	r1, ip, r2, r1
 8026134:	ea4b 0505 	orr.w	r5, fp, r5
 8026138:	fb0e 1e05 	mla	lr, lr, r5, r1
 802613c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8026140:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8026144:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026148:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802614c:	ea42 0e0e 	orr.w	lr, r2, lr
 8026150:	fa1f f28e 	uxth.w	r2, lr
 8026154:	2bff      	cmp	r3, #255	; 0xff
 8026156:	f040 80a1 	bne.w	802629c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802615a:	803a      	strh	r2, [r7, #0]
 802615c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802615e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8026160:	4413      	add	r3, r2
 8026162:	931d      	str	r3, [sp, #116]	; 0x74
 8026164:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8026166:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026168:	441a      	add	r2, r3
 802616a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802616c:	921e      	str	r2, [sp, #120]	; 0x78
 802616e:	3b01      	subs	r3, #1
 8026170:	3702      	adds	r7, #2
 8026172:	930f      	str	r3, [sp, #60]	; 0x3c
 8026174:	e6c9      	b.n	8025f0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8026176:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026178:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802617a:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 802617c:	4433      	add	r3, r6
 802617e:	931d      	str	r3, [sp, #116]	; 0x74
 8026180:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026182:	441c      	add	r4, r3
 8026184:	9b06      	ldr	r3, [sp, #24]
 8026186:	941e      	str	r4, [sp, #120]	; 0x78
 8026188:	3b01      	subs	r3, #1
 802618a:	9306      	str	r3, [sp, #24]
 802618c:	9b07      	ldr	r3, [sp, #28]
 802618e:	3302      	adds	r3, #2
 8026190:	9307      	str	r3, [sp, #28]
 8026192:	e698      	b.n	8025ec6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8026194:	d028      	beq.n	80261e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8026196:	9b06      	ldr	r3, [sp, #24]
 8026198:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802619a:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 802619c:	3b01      	subs	r3, #1
 802619e:	fb00 5003 	mla	r0, r0, r3, r5
 80261a2:	1400      	asrs	r0, r0, #16
 80261a4:	f53f aeac 	bmi.w	8025f00 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80261a8:	3901      	subs	r1, #1
 80261aa:	4288      	cmp	r0, r1
 80261ac:	f6bf aea8 	bge.w	8025f00 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80261b0:	9920      	ldr	r1, [sp, #128]	; 0x80
 80261b2:	981e      	ldr	r0, [sp, #120]	; 0x78
 80261b4:	fb01 0303 	mla	r3, r1, r3, r0
 80261b8:	141b      	asrs	r3, r3, #16
 80261ba:	f53f aea1 	bmi.w	8025f00 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80261be:	3a01      	subs	r2, #1
 80261c0:	4293      	cmp	r3, r2
 80261c2:	f6bf ae9d 	bge.w	8025f00 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80261c6:	9b06      	ldr	r3, [sp, #24]
 80261c8:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80261cc:	930f      	str	r3, [sp, #60]	; 0x3c
 80261ce:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80261d2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80261d4:	2b00      	cmp	r3, #0
 80261d6:	f300 80b6 	bgt.w	8026346 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 80261da:	9b06      	ldr	r3, [sp, #24]
 80261dc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80261e0:	9b07      	ldr	r3, [sp, #28]
 80261e2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80261e6:	9307      	str	r3, [sp, #28]
 80261e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80261ea:	2b00      	cmp	r3, #0
 80261ec:	f340 8218 	ble.w	8026620 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80261f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80261f4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80261f8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80261fc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80261fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026202:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026206:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802620a:	eef0 6a62 	vmov.f32	s13, s5
 802620e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026212:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026216:	ee77 2a62 	vsub.f32	s5, s14, s5
 802621a:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802621e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026222:	eef0 6a43 	vmov.f32	s13, s6
 8026226:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802622a:	ee12 2a90 	vmov	r2, s5
 802622e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026232:	fb92 f3f3 	sdiv	r3, r2, r3
 8026236:	ee13 2a10 	vmov	r2, s6
 802623a:	931f      	str	r3, [sp, #124]	; 0x7c
 802623c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802623e:	fb92 f3f3 	sdiv	r3, r2, r3
 8026242:	9320      	str	r3, [sp, #128]	; 0x80
 8026244:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026246:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026248:	3b01      	subs	r3, #1
 802624a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802624e:	930e      	str	r3, [sp, #56]	; 0x38
 8026250:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026252:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8026256:	bf08      	it	eq
 8026258:	4613      	moveq	r3, r2
 802625a:	9306      	str	r3, [sp, #24]
 802625c:	eeb0 3a67 	vmov.f32	s6, s15
 8026260:	eef0 2a47 	vmov.f32	s5, s14
 8026264:	e621      	b.n	8025eaa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8026266:	fb08 f505 	mul.w	r5, r8, r5
 802626a:	fb09 5303 	mla	r3, r9, r3, r5
 802626e:	e6a1      	b.n	8025fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8026270:	4681      	mov	r9, r0
 8026272:	e6c8      	b.n	8026006 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8026274:	f1c1 0210 	rsb	r2, r1, #16
 8026278:	4341      	muls	r1, r0
 802627a:	fb09 1902 	mla	r9, r9, r2, r1
 802627e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8026282:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8026286:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802628a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802628e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8026292:	ea42 0909 	orr.w	r9, r2, r9
 8026296:	fa1f f289 	uxth.w	r2, r9
 802629a:	e75b      	b.n	8026154 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802629c:	f8b7 c000 	ldrh.w	ip, [r7]
 80262a0:	43db      	mvns	r3, r3
 80262a2:	ea4f 202c 	mov.w	r0, ip, asr #8
 80262a6:	fa5f fe83 	uxtb.w	lr, r3
 80262aa:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80262ae:	fb00 f00e 	mul.w	r0, r0, lr
 80262b2:	1c41      	adds	r1, r0, #1
 80262b4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80262b8:	1211      	asrs	r1, r2, #8
 80262ba:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80262be:	f021 0107 	bic.w	r1, r1, #7
 80262c2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80262c6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80262ca:	48d7      	ldr	r0, [pc, #860]	; (8026628 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80262cc:	fb05 f50e 	mul.w	r5, r5, lr
 80262d0:	b2c9      	uxtb	r1, r1
 80262d2:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 80262d6:	1c69      	adds	r1, r5, #1
 80262d8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80262dc:	10d1      	asrs	r1, r2, #3
 80262de:	f021 0103 	bic.w	r1, r1, #3
 80262e2:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 80262e6:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80262ea:	b2db      	uxtb	r3, r3
 80262ec:	00c9      	lsls	r1, r1, #3
 80262ee:	fb03 f30e 	mul.w	r3, r3, lr
 80262f2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80262f6:	4301      	orrs	r1, r0
 80262f8:	1c58      	adds	r0, r3, #1
 80262fa:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80262fe:	00d2      	lsls	r2, r2, #3
 8026300:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8026304:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026308:	430a      	orrs	r2, r1
 802630a:	e726      	b.n	802615a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 802630c:	f115 0e01 	adds.w	lr, r5, #1
 8026310:	f53f af24 	bmi.w	802615c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026314:	4572      	cmp	r2, lr
 8026316:	f6ff af21 	blt.w	802615c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802631a:	f110 0e01 	adds.w	lr, r0, #1
 802631e:	f53f af1d 	bmi.w	802615c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026322:	4573      	cmp	r3, lr
 8026324:	f6ff af1a 	blt.w	802615c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026328:	b21b      	sxth	r3, r3
 802632a:	b212      	sxth	r2, r2
 802632c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8026330:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8026334:	9301      	str	r3, [sp, #4]
 8026336:	9200      	str	r2, [sp, #0]
 8026338:	4639      	mov	r1, r7
 802633a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802633e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8026340:	f7ff fc24 	bl	8025b8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8026344:	e70a      	b.n	802615c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026346:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026348:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802634c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802634e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8026352:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026354:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026358:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802635a:	141f      	asrs	r7, r3, #16
 802635c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802635e:	141b      	asrs	r3, r3, #16
 8026360:	fb01 3707 	mla	r7, r1, r7, r3
 8026364:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026366:	fa1f fc82 	uxth.w	ip, r2
 802636a:	eb03 0a07 	add.w	sl, r3, r7
 802636e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8026372:	f813 9007 	ldrb.w	r9, [r3, r7]
 8026376:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802637a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802637e:	b29b      	uxth	r3, r3
 8026380:	2d00      	cmp	r5, #0
 8026382:	f000 80fe 	beq.w	8026582 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8026386:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802638a:	940c      	str	r4, [sp, #48]	; 0x30
 802638c:	eb0a 0b01 	add.w	fp, sl, r1
 8026390:	fa1f fa85 	uxth.w	sl, r5
 8026394:	fb0a fc0c 	mul.w	ip, sl, ip
 8026398:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 802639c:	fa1f fa8a 	uxth.w	sl, sl
 80263a0:	eba0 000c 	sub.w	r0, r0, ip
 80263a4:	eba3 030a 	sub.w	r3, r3, sl
 80263a8:	b280      	uxth	r0, r0
 80263aa:	fb08 f000 	mul.w	r0, r8, r0
 80263ae:	b29b      	uxth	r3, r3
 80263b0:	fb09 0303 	mla	r3, r9, r3, r0
 80263b4:	980c      	ldr	r0, [sp, #48]	; 0x30
 80263b6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80263ba:	940d      	str	r4, [sp, #52]	; 0x34
 80263bc:	fb0a 3300 	mla	r3, sl, r0, r3
 80263c0:	fb0c 3304 	mla	r3, ip, r4, r3
 80263c4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80263c8:	2b00      	cmp	r3, #0
 80263ca:	f000 80cc 	beq.w	8026566 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80263ce:	9808      	ldr	r0, [sp, #32]
 80263d0:	9c08      	ldr	r4, [sp, #32]
 80263d2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80263d6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80263da:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80263de:	f000 80d5 	beq.w	802658c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80263e2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80263e6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80263ea:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80263ee:	fb09 f707 	mul.w	r7, r9, r7
 80263f2:	fb0a fc0c 	mul.w	ip, sl, ip
 80263f6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80263fa:	f107 0b20 	add.w	fp, r7, #32
 80263fe:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8026402:	44cc      	add	ip, r9
 8026404:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8026408:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802640c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8026410:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8026414:	ea4c 0909 	orr.w	r9, ip, r9
 8026418:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802641c:	8847      	ldrh	r7, [r0, #2]
 802641e:	d019      	beq.n	8026454 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8026420:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8026424:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8026428:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802642c:	fb08 f807 	mul.w	r8, r8, r7
 8026430:	fb0a fc0c 	mul.w	ip, sl, ip
 8026434:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8026438:	f108 0b20 	add.w	fp, r8, #32
 802643c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8026440:	44bc      	add	ip, r7
 8026442:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8026446:	0a3f      	lsrs	r7, r7, #8
 8026448:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802644c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8026450:	ea4c 0707 	orr.w	r7, ip, r7
 8026454:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8026458:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802645c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8026460:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8026464:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026468:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802646c:	ea4c 0909 	orr.w	r9, ip, r9
 8026470:	ea4a 0707 	orr.w	r7, sl, r7
 8026474:	2d00      	cmp	r5, #0
 8026476:	f000 808b 	beq.w	8026590 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 802647a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802647e:	3901      	subs	r1, #1
 8026480:	0049      	lsls	r1, r1, #1
 8026482:	3102      	adds	r1, #2
 8026484:	eb00 0c01 	add.w	ip, r0, r1
 8026488:	5a41      	ldrh	r1, [r0, r1]
 802648a:	980c      	ldr	r0, [sp, #48]	; 0x30
 802648c:	28ff      	cmp	r0, #255	; 0xff
 802648e:	d019      	beq.n	80264c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8026490:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8026492:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8026496:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802649a:	fb04 fa01 	mul.w	sl, r4, r1
 802649e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80264a2:	fb08 f800 	mul.w	r8, r8, r0
 80264a6:	f10a 0020 	add.w	r0, sl, #32
 80264aa:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80264ae:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80264b2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80264b6:	4441      	add	r1, r8
 80264b8:	0a00      	lsrs	r0, r0, #8
 80264ba:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80264be:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80264c2:	4301      	orrs	r1, r0
 80264c4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80264c6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80264ca:	2cff      	cmp	r4, #255	; 0xff
 80264cc:	d01a      	beq.n	8026504 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 80264ce:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80264d2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80264d6:	fb04 fa00 	mul.w	sl, r4, r0
 80264da:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80264de:	fb08 f80c 	mul.w	r8, r8, ip
 80264e2:	f10a 0c20 	add.w	ip, sl, #32
 80264e6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80264ea:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80264ee:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80264f2:	4440      	add	r0, r8
 80264f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80264f8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80264fc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026500:	ea40 000c 	orr.w	r0, r0, ip
 8026504:	fb15 fc02 	smulbb	ip, r5, r2
 8026508:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802650c:	f1c5 0810 	rsb	r8, r5, #16
 8026510:	eba8 0802 	sub.w	r8, r8, r2
 8026514:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8026518:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802651c:	437a      	muls	r2, r7
 802651e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8026522:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8026526:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802652a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802652e:	fb09 2208 	mla	r2, r9, r8, r2
 8026532:	ea4a 0101 	orr.w	r1, sl, r1
 8026536:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802653a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802653e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026542:	fb05 2201 	mla	r2, r5, r1, r2
 8026546:	ea4b 0000 	orr.w	r0, fp, r0
 802654a:	fb0c 2200 	mla	r2, ip, r0, r2
 802654e:	0d57      	lsrs	r7, r2, #21
 8026550:	0952      	lsrs	r2, r2, #5
 8026552:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8026556:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802655a:	433a      	orrs	r2, r7
 802655c:	2bff      	cmp	r3, #255	; 0xff
 802655e:	b292      	uxth	r2, r2
 8026560:	d127      	bne.n	80265b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8026562:	f8ae 2000 	strh.w	r2, [lr]
 8026566:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026568:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802656a:	4413      	add	r3, r2
 802656c:	931d      	str	r3, [sp, #116]	; 0x74
 802656e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8026570:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026572:	441a      	add	r2, r3
 8026574:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026576:	921e      	str	r2, [sp, #120]	; 0x78
 8026578:	3b01      	subs	r3, #1
 802657a:	f10e 0e02 	add.w	lr, lr, #2
 802657e:	930f      	str	r3, [sp, #60]	; 0x3c
 8026580:	e627      	b.n	80261d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026582:	fb08 f000 	mul.w	r0, r8, r0
 8026586:	fb09 0303 	mla	r3, r9, r3, r0
 802658a:	e71b      	b.n	80263c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 802658c:	46b9      	mov	r9, r7
 802658e:	e743      	b.n	8026418 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8026590:	f1c2 0110 	rsb	r1, r2, #16
 8026594:	437a      	muls	r2, r7
 8026596:	fb09 2901 	mla	r9, r9, r1, r2
 802659a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802659e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80265a2:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80265a6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80265aa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80265ae:	4302      	orrs	r2, r0
 80265b0:	e7d4      	b.n	802655c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 80265b2:	f8be 7000 	ldrh.w	r7, [lr]
 80265b6:	4c1c      	ldr	r4, [pc, #112]	; (8026628 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80265b8:	43db      	mvns	r3, r3
 80265ba:	1238      	asrs	r0, r7, #8
 80265bc:	fa5f fc83 	uxtb.w	ip, r3
 80265c0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80265c4:	10fd      	asrs	r5, r7, #3
 80265c6:	fb00 f00c 	mul.w	r0, r0, ip
 80265ca:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80265ce:	fb05 f10c 	mul.w	r1, r5, ip
 80265d2:	1c45      	adds	r5, r0, #1
 80265d4:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80265d8:	1215      	asrs	r5, r2, #8
 80265da:	f025 0507 	bic.w	r5, r5, #7
 80265de:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80265e2:	1c4d      	adds	r5, r1, #1
 80265e4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80265e8:	10d1      	asrs	r1, r2, #3
 80265ea:	f021 0103 	bic.w	r1, r1, #3
 80265ee:	00fb      	lsls	r3, r7, #3
 80265f0:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80265f4:	b2db      	uxtb	r3, r3
 80265f6:	b2c0      	uxtb	r0, r0
 80265f8:	00c9      	lsls	r1, r1, #3
 80265fa:	fb03 f30c 	mul.w	r3, r3, ip
 80265fe:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026602:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8026606:	4308      	orrs	r0, r1
 8026608:	1c59      	adds	r1, r3, #1
 802660a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802660e:	00d2      	lsls	r2, r2, #3
 8026610:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026614:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8026618:	4318      	orrs	r0, r3
 802661a:	f8ae 0000 	strh.w	r0, [lr]
 802661e:	e7a2      	b.n	8026566 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8026620:	b013      	add	sp, #76	; 0x4c
 8026622:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026626:	bf00      	nop
 8026628:	fffff800 	.word	0xfffff800

0802662c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 802662c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026630:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8026634:	fb05 4c03 	mla	ip, r5, r3, r4
 8026638:	2d00      	cmp	r5, #0
 802663a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802663e:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8026642:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8026646:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 802664a:	8808      	ldrh	r0, [r1, #0]
 802664c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8026650:	f2c0 80a7 	blt.w	80267a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8026654:	45aa      	cmp	sl, r5
 8026656:	f340 80a4 	ble.w	80267a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802665a:	2c00      	cmp	r4, #0
 802665c:	f2c0 809f 	blt.w	802679e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8026660:	42a3      	cmp	r3, r4
 8026662:	f340 809c 	ble.w	802679e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8026666:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 802666a:	1c62      	adds	r2, r4, #1
 802666c:	f100 809c 	bmi.w	80267a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8026670:	4293      	cmp	r3, r2
 8026672:	f340 8099 	ble.w	80267a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8026676:	f1b9 0f00 	cmp.w	r9, #0
 802667a:	f000 8095 	beq.w	80267a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802667e:	f8be c002 	ldrh.w	ip, [lr, #2]
 8026682:	3501      	adds	r5, #1
 8026684:	f100 8094 	bmi.w	80267b0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8026688:	45aa      	cmp	sl, r5
 802668a:	f340 8091 	ble.w	80267b0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802668e:	2f00      	cmp	r7, #0
 8026690:	f000 808e 	beq.w	80267b0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8026694:	2c00      	cmp	r4, #0
 8026696:	f2c0 8089 	blt.w	80267ac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802669a:	42a3      	cmp	r3, r4
 802669c:	f340 8086 	ble.w	80267ac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80266a0:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80266a4:	3401      	adds	r4, #1
 80266a6:	f100 8086 	bmi.w	80267b6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80266aa:	42a3      	cmp	r3, r4
 80266ac:	f340 8083 	ble.w	80267b6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80266b0:	f1b9 0f00 	cmp.w	r9, #0
 80266b4:	d07f      	beq.n	80267b6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80266b6:	3301      	adds	r3, #1
 80266b8:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 80266bc:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80266c0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80266c4:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80266c8:	fb19 fe07 	smulbb	lr, r9, r7
 80266cc:	ea44 0808 	orr.w	r8, r4, r8
 80266d0:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80266d4:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80266d8:	f1c7 0210 	rsb	r2, r7, #16
 80266dc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80266e0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80266e4:	ea44 0c0c 	orr.w	ip, r4, ip
 80266e8:	eba2 0209 	sub.w	r2, r2, r9
 80266ec:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80266f0:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80266f4:	fb04 f40c 	mul.w	r4, r4, ip
 80266f8:	fb02 4808 	mla	r8, r2, r8, r4
 80266fc:	041a      	lsls	r2, r3, #16
 80266fe:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026702:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026706:	4313      	orrs	r3, r2
 8026708:	042a      	lsls	r2, r5, #16
 802670a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802670e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8026712:	fb0e 8303 	mla	r3, lr, r3, r8
 8026716:	432a      	orrs	r2, r5
 8026718:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 802671c:	fb07 3202 	mla	r2, r7, r2, r3
 8026720:	0d53      	lsrs	r3, r2, #21
 8026722:	0952      	lsrs	r2, r2, #5
 8026724:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026728:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802672c:	431a      	orrs	r2, r3
 802672e:	b293      	uxth	r3, r2
 8026730:	b2b4      	uxth	r4, r6
 8026732:	1202      	asrs	r2, r0, #8
 8026734:	43f6      	mvns	r6, r6
 8026736:	b2f6      	uxtb	r6, r6
 8026738:	121d      	asrs	r5, r3, #8
 802673a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802673e:	fb12 f206 	smulbb	r2, r2, r6
 8026742:	10c7      	asrs	r7, r0, #3
 8026744:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8026748:	00c0      	lsls	r0, r0, #3
 802674a:	fb05 2504 	mla	r5, r5, r4, r2
 802674e:	b2c0      	uxtb	r0, r0
 8026750:	10da      	asrs	r2, r3, #3
 8026752:	00db      	lsls	r3, r3, #3
 8026754:	b2db      	uxtb	r3, r3
 8026756:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802675a:	fb10 f006 	smulbb	r0, r0, r6
 802675e:	b2ad      	uxth	r5, r5
 8026760:	fb03 0004 	mla	r0, r3, r4, r0
 8026764:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026768:	fb17 f706 	smulbb	r7, r7, r6
 802676c:	b280      	uxth	r0, r0
 802676e:	1c6b      	adds	r3, r5, #1
 8026770:	fb02 7204 	mla	r2, r2, r4, r7
 8026774:	b292      	uxth	r2, r2
 8026776:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802677a:	1c43      	adds	r3, r0, #1
 802677c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8026780:	1c50      	adds	r0, r2, #1
 8026782:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8026786:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802678a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802678e:	0952      	lsrs	r2, r2, #5
 8026790:	432b      	orrs	r3, r5
 8026792:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026796:	4313      	orrs	r3, r2
 8026798:	800b      	strh	r3, [r1, #0]
 802679a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802679e:	4680      	mov	r8, r0
 80267a0:	e763      	b.n	802666a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80267a2:	4684      	mov	ip, r0
 80267a4:	4680      	mov	r8, r0
 80267a6:	e76c      	b.n	8026682 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80267a8:	4684      	mov	ip, r0
 80267aa:	e76a      	b.n	8026682 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80267ac:	4605      	mov	r5, r0
 80267ae:	e779      	b.n	80266a4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 80267b0:	4603      	mov	r3, r0
 80267b2:	4605      	mov	r5, r0
 80267b4:	e782      	b.n	80266bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 80267b6:	4603      	mov	r3, r0
 80267b8:	e780      	b.n	80266bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

080267ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80267ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80267be:	b093      	sub	sp, #76	; 0x4c
 80267c0:	461d      	mov	r5, r3
 80267c2:	9210      	str	r2, [sp, #64]	; 0x40
 80267c4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80267c6:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 80267ca:	920b      	str	r2, [sp, #44]	; 0x2c
 80267cc:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 80267d0:	910a      	str	r1, [sp, #40]	; 0x28
 80267d2:	6859      	ldr	r1, [r3, #4]
 80267d4:	681b      	ldr	r3, [r3, #0]
 80267d6:	9011      	str	r0, [sp, #68]	; 0x44
 80267d8:	fb01 2707 	mla	r7, r1, r7, r2
 80267dc:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80267e0:	9307      	str	r3, [sp, #28]
 80267e2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80267e4:	681b      	ldr	r3, [r3, #0]
 80267e6:	9309      	str	r3, [sp, #36]	; 0x24
 80267e8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80267ea:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80267ee:	43db      	mvns	r3, r3
 80267f0:	b2db      	uxtb	r3, r3
 80267f2:	9308      	str	r3, [sp, #32]
 80267f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80267f6:	2b00      	cmp	r3, #0
 80267f8:	dc03      	bgt.n	8026802 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80267fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80267fc:	2b00      	cmp	r3, #0
 80267fe:	f340 8203 	ble.w	8026c08 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026802:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026804:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026808:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802680c:	1e48      	subs	r0, r1, #1
 802680e:	f102 3cff 	add.w	ip, r2, #4294967295
 8026812:	2d00      	cmp	r5, #0
 8026814:	f340 80da 	ble.w	80269cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8026818:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802681c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026820:	d406      	bmi.n	8026830 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8026822:	4586      	cmp	lr, r0
 8026824:	da04      	bge.n	8026830 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8026826:	2b00      	cmp	r3, #0
 8026828:	db02      	blt.n	8026830 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802682a:	4563      	cmp	r3, ip
 802682c:	f2c0 80cf 	blt.w	80269ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8026830:	f11e 0e01 	adds.w	lr, lr, #1
 8026834:	f100 80c1 	bmi.w	80269ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026838:	4571      	cmp	r1, lr
 802683a:	f2c0 80be 	blt.w	80269ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802683e:	3301      	adds	r3, #1
 8026840:	f100 80bb 	bmi.w	80269ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026844:	429a      	cmp	r2, r3
 8026846:	f2c0 80b8 	blt.w	80269ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802684a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 802684e:	46a9      	mov	r9, r5
 8026850:	f1b9 0f00 	cmp.w	r9, #0
 8026854:	f340 80d8 	ble.w	8026a08 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8026858:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802685a:	1421      	asrs	r1, r4, #16
 802685c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026860:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026864:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026868:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802686c:	f100 8111 	bmi.w	8026a92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8026870:	f10e 3aff 	add.w	sl, lr, #4294967295
 8026874:	4551      	cmp	r1, sl
 8026876:	f280 810c 	bge.w	8026a92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802687a:	2800      	cmp	r0, #0
 802687c:	f2c0 8109 	blt.w	8026a92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8026880:	f103 3aff 	add.w	sl, r3, #4294967295
 8026884:	4550      	cmp	r0, sl
 8026886:	f280 8104 	bge.w	8026a92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802688a:	fa0f f38e 	sxth.w	r3, lr
 802688e:	fb00 1103 	mla	r1, r0, r3, r1
 8026892:	9809      	ldr	r0, [sp, #36]	; 0x24
 8026894:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8026898:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 802689c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80268a0:	f1bc 0f00 	cmp.w	ip, #0
 80268a4:	d007      	beq.n	80268b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80268a6:	005b      	lsls	r3, r3, #1
 80268a8:	eb0a 0003 	add.w	r0, sl, r3
 80268ac:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80268b0:	930c      	str	r3, [sp, #48]	; 0x30
 80268b2:	8843      	ldrh	r3, [r0, #2]
 80268b4:	930d      	str	r3, [sp, #52]	; 0x34
 80268b6:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80268ba:	fb12 f30c 	smulbb	r3, r2, ip
 80268be:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80268c2:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80268c6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80268ca:	10db      	asrs	r3, r3, #3
 80268cc:	ea40 000e 	orr.w	r0, r0, lr
 80268d0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80268d4:	f1cc 0e10 	rsb	lr, ip, #16
 80268d8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80268dc:	ebae 0e02 	sub.w	lr, lr, r2
 80268e0:	ea4a 0101 	orr.w	r1, sl, r1
 80268e4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80268e8:	4351      	muls	r1, r2
 80268ea:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80268ec:	9f08      	ldr	r7, [sp, #32]
 80268ee:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80268f2:	fb0e 1e00 	mla	lr, lr, r0, r1
 80268f6:	0410      	lsls	r0, r2, #16
 80268f8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80268fc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026900:	4310      	orrs	r0, r2
 8026902:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8026904:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026906:	0412      	lsls	r2, r2, #16
 8026908:	fb03 e000 	mla	r0, r3, r0, lr
 802690c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026910:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8026914:	ea42 020e 	orr.w	r2, r2, lr
 8026918:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 802691c:	fb03 0302 	mla	r3, r3, r2, r0
 8026920:	0d5a      	lsrs	r2, r3, #21
 8026922:	095b      	lsrs	r3, r3, #5
 8026924:	f8b8 0000 	ldrh.w	r0, [r8]
 8026928:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802692c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026930:	4313      	orrs	r3, r2
 8026932:	b29b      	uxth	r3, r3
 8026934:	1201      	asrs	r1, r0, #8
 8026936:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 802693a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802693e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026942:	fb11 f107 	smulbb	r1, r1, r7
 8026946:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 802694a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802694e:	00c0      	lsls	r0, r0, #3
 8026950:	fb0c 1c02 	mla	ip, ip, r2, r1
 8026954:	b2c0      	uxtb	r0, r0
 8026956:	10d9      	asrs	r1, r3, #3
 8026958:	00db      	lsls	r3, r3, #3
 802695a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 802695e:	b2db      	uxtb	r3, r3
 8026960:	fb10 f007 	smulbb	r0, r0, r7
 8026964:	fa1f fc8c 	uxth.w	ip, ip
 8026968:	fb03 0302 	mla	r3, r3, r2, r0
 802696c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026970:	fb1e fe07 	smulbb	lr, lr, r7
 8026974:	fb01 e102 	mla	r1, r1, r2, lr
 8026978:	b29a      	uxth	r2, r3
 802697a:	f10c 0301 	add.w	r3, ip, #1
 802697e:	b289      	uxth	r1, r1
 8026980:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8026984:	1c53      	adds	r3, r2, #1
 8026986:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802698a:	1c4a      	adds	r2, r1, #1
 802698c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8026990:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8026994:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026998:	0949      	lsrs	r1, r1, #5
 802699a:	ea43 030c 	orr.w	r3, r3, ip
 802699e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80269a2:	430b      	orrs	r3, r1
 80269a4:	f8a8 3000 	strh.w	r3, [r8]
 80269a8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80269aa:	441c      	add	r4, r3
 80269ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80269ae:	f108 0802 	add.w	r8, r8, #2
 80269b2:	441e      	add	r6, r3
 80269b4:	f109 39ff 	add.w	r9, r9, #4294967295
 80269b8:	e74a      	b.n	8026850 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80269ba:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80269bc:	441c      	add	r4, r3
 80269be:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80269c0:	441e      	add	r6, r3
 80269c2:	9b07      	ldr	r3, [sp, #28]
 80269c4:	3302      	adds	r3, #2
 80269c6:	3d01      	subs	r5, #1
 80269c8:	9307      	str	r3, [sp, #28]
 80269ca:	e722      	b.n	8026812 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80269cc:	d022      	beq.n	8026a14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 80269ce:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80269d0:	1e6b      	subs	r3, r5, #1
 80269d2:	fb00 4003 	mla	r0, r0, r3, r4
 80269d6:	1400      	asrs	r0, r0, #16
 80269d8:	f53f af37 	bmi.w	802684a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80269dc:	3901      	subs	r1, #1
 80269de:	4288      	cmp	r0, r1
 80269e0:	f6bf af33 	bge.w	802684a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80269e4:	9920      	ldr	r1, [sp, #128]	; 0x80
 80269e6:	fb01 6303 	mla	r3, r1, r3, r6
 80269ea:	141b      	asrs	r3, r3, #16
 80269ec:	f53f af2d 	bmi.w	802684a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80269f0:	3a01      	subs	r2, #1
 80269f2:	4293      	cmp	r3, r2
 80269f4:	f6bf af29 	bge.w	802684a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80269f8:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80269fc:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8026a00:	46a8      	mov	r8, r5
 8026a02:	f1b8 0f00 	cmp.w	r8, #0
 8026a06:	dc5e      	bgt.n	8026ac6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8026a08:	9b07      	ldr	r3, [sp, #28]
 8026a0a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8026a0e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8026a12:	9307      	str	r3, [sp, #28]
 8026a14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026a16:	2b00      	cmp	r3, #0
 8026a18:	f340 80f6 	ble.w	8026c08 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026a1c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026a20:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026a24:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026a28:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026a2a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026a2e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026a32:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026a36:	eef0 6a62 	vmov.f32	s13, s5
 8026a3a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026a3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026a42:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026a46:	ee16 4a90 	vmov	r4, s13
 8026a4a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026a4e:	eef0 6a43 	vmov.f32	s13, s6
 8026a52:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026a56:	ee12 2a90 	vmov	r2, s5
 8026a5a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026a5e:	fb92 f3f3 	sdiv	r3, r2, r3
 8026a62:	ee13 2a10 	vmov	r2, s6
 8026a66:	931f      	str	r3, [sp, #124]	; 0x7c
 8026a68:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026a6a:	fb92 f3f3 	sdiv	r3, r2, r3
 8026a6e:	9320      	str	r3, [sp, #128]	; 0x80
 8026a70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026a72:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026a74:	3b01      	subs	r3, #1
 8026a76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026a7a:	930a      	str	r3, [sp, #40]	; 0x28
 8026a7c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026a7e:	ee16 6a90 	vmov	r6, s13
 8026a82:	bf14      	ite	ne
 8026a84:	461d      	movne	r5, r3
 8026a86:	4615      	moveq	r5, r2
 8026a88:	eeb0 3a67 	vmov.f32	s6, s15
 8026a8c:	eef0 2a47 	vmov.f32	s5, s14
 8026a90:	e6b0      	b.n	80267f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8026a92:	f111 0a01 	adds.w	sl, r1, #1
 8026a96:	d487      	bmi.n	80269a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026a98:	45d6      	cmp	lr, sl
 8026a9a:	db85      	blt.n	80269a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026a9c:	f110 0a01 	adds.w	sl, r0, #1
 8026aa0:	d482      	bmi.n	80269a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026aa2:	4553      	cmp	r3, sl
 8026aa4:	db80      	blt.n	80269a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026aa6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8026aa8:	9101      	str	r1, [sp, #4]
 8026aaa:	b21b      	sxth	r3, r3
 8026aac:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8026ab0:	9300      	str	r3, [sp, #0]
 8026ab2:	e9cd c704 	strd	ip, r7, [sp, #16]
 8026ab6:	fa0f f38e 	sxth.w	r3, lr
 8026aba:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026abc:	9811      	ldr	r0, [sp, #68]	; 0x44
 8026abe:	4641      	mov	r1, r8
 8026ac0:	f7ff fdb4 	bl	802662c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8026ac4:	e770      	b.n	80269a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026ac6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026ac8:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8026aca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026ace:	1430      	asrs	r0, r6, #16
 8026ad0:	1423      	asrs	r3, r4, #16
 8026ad2:	fb01 3000 	mla	r0, r1, r0, r3
 8026ad6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026ad8:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8026adc:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8026ae0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8026ae4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026ae8:	8858      	ldrh	r0, [r3, #2]
 8026aea:	f1be 0f00 	cmp.w	lr, #0
 8026aee:	d00b      	beq.n	8026b08 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8026af0:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8026af4:	3901      	subs	r1, #1
 8026af6:	0049      	lsls	r1, r1, #1
 8026af8:	3102      	adds	r1, #2
 8026afa:	eb03 0b01 	add.w	fp, r3, r1
 8026afe:	5a5b      	ldrh	r3, [r3, r1]
 8026b00:	930e      	str	r3, [sp, #56]	; 0x38
 8026b02:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8026b06:	930f      	str	r3, [sp, #60]	; 0x3c
 8026b08:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8026b0c:	fb12 f30e 	smulbb	r3, r2, lr
 8026b10:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026b14:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8026b18:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8026b1c:	10db      	asrs	r3, r3, #3
 8026b1e:	ea41 010c 	orr.w	r1, r1, ip
 8026b22:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026b26:	f1ce 0c10 	rsb	ip, lr, #16
 8026b2a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026b2e:	ebac 0c02 	sub.w	ip, ip, r2
 8026b32:	ea4b 0000 	orr.w	r0, fp, r0
 8026b36:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026b3a:	4350      	muls	r0, r2
 8026b3c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026b3e:	9f08      	ldr	r7, [sp, #32]
 8026b40:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8026b44:	fb0c 0c01 	mla	ip, ip, r1, r0
 8026b48:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8026b4c:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8026b50:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8026b52:	980e      	ldr	r0, [sp, #56]	; 0x38
 8026b54:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026b58:	0412      	lsls	r2, r2, #16
 8026b5a:	ea4b 0101 	orr.w	r1, fp, r1
 8026b5e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026b62:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026b66:	fb03 c101 	mla	r1, r3, r1, ip
 8026b6a:	4302      	orrs	r2, r0
 8026b6c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8026b70:	fb03 1202 	mla	r2, r3, r2, r1
 8026b74:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8026b78:	0952      	lsrs	r2, r2, #5
 8026b7a:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8026b7e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8026b82:	f8b9 2000 	ldrh.w	r2, [r9]
 8026b86:	ea4b 0303 	orr.w	r3, fp, r3
 8026b8a:	b29b      	uxth	r3, r3
 8026b8c:	1211      	asrs	r1, r2, #8
 8026b8e:	1218      	asrs	r0, r3, #8
 8026b90:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026b94:	fb11 f107 	smulbb	r1, r1, r7
 8026b98:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8026b9c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026ba0:	00d2      	lsls	r2, r2, #3
 8026ba2:	fb00 100a 	mla	r0, r0, sl, r1
 8026ba6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8026baa:	10d9      	asrs	r1, r3, #3
 8026bac:	b2d2      	uxtb	r2, r2
 8026bae:	00db      	lsls	r3, r3, #3
 8026bb0:	fb1c fc07 	smulbb	ip, ip, r7
 8026bb4:	fb12 f207 	smulbb	r2, r2, r7
 8026bb8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026bbc:	b2db      	uxtb	r3, r3
 8026bbe:	b280      	uxth	r0, r0
 8026bc0:	fb01 c10a 	mla	r1, r1, sl, ip
 8026bc4:	fb03 230a 	mla	r3, r3, sl, r2
 8026bc8:	b29b      	uxth	r3, r3
 8026bca:	b289      	uxth	r1, r1
 8026bcc:	1c42      	adds	r2, r0, #1
 8026bce:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026bd2:	f101 0c01 	add.w	ip, r1, #1
 8026bd6:	1c5a      	adds	r2, r3, #1
 8026bd8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8026bdc:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8026be0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026be2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8026be6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8026bea:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026bee:	4310      	orrs	r0, r2
 8026bf0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026bf4:	441c      	add	r4, r3
 8026bf6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026bf8:	ea40 000c 	orr.w	r0, r0, ip
 8026bfc:	f829 0b02 	strh.w	r0, [r9], #2
 8026c00:	441e      	add	r6, r3
 8026c02:	f108 38ff 	add.w	r8, r8, #4294967295
 8026c06:	e6fc      	b.n	8026a02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8026c08:	b013      	add	sp, #76	; 0x4c
 8026c0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026c0e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8026c0e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8026c12:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8026c16:	fb0e 4703 	mla	r7, lr, r3, r4
 8026c1a:	f1be 0f00 	cmp.w	lr, #0
 8026c1e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8026c22:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8026c26:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8026c2a:	8808      	ldrh	r0, [r1, #0]
 8026c2c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8026c30:	db60      	blt.n	8026cf4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8026c32:	45f1      	cmp	r9, lr
 8026c34:	dd5e      	ble.n	8026cf4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8026c36:	2c00      	cmp	r4, #0
 8026c38:	db5a      	blt.n	8026cf0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8026c3a:	42a3      	cmp	r3, r4
 8026c3c:	dd58      	ble.n	8026cf0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8026c3e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8026c42:	1c62      	adds	r2, r4, #1
 8026c44:	d459      	bmi.n	8026cfa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026c46:	4293      	cmp	r3, r2
 8026c48:	dd57      	ble.n	8026cfa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026c4a:	2d00      	cmp	r5, #0
 8026c4c:	d055      	beq.n	8026cfa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026c4e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8026c52:	f11e 0e01 	adds.w	lr, lr, #1
 8026c56:	d454      	bmi.n	8026d02 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026c58:	45f1      	cmp	r9, lr
 8026c5a:	dd52      	ble.n	8026d02 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026c5c:	2e00      	cmp	r6, #0
 8026c5e:	d050      	beq.n	8026d02 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026c60:	2c00      	cmp	r4, #0
 8026c62:	db4c      	blt.n	8026cfe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8026c64:	42a3      	cmp	r3, r4
 8026c66:	dd4a      	ble.n	8026cfe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8026c68:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8026c6c:	3401      	adds	r4, #1
 8026c6e:	d405      	bmi.n	8026c7c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026c70:	42a3      	cmp	r3, r4
 8026c72:	dd03      	ble.n	8026c7c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026c74:	b115      	cbz	r5, 8026c7c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026c76:	3301      	adds	r3, #1
 8026c78:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8026c7c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8026c80:	fb15 f406 	smulbb	r4, r5, r6
 8026c84:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026c88:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8026c8c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026c90:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8026c94:	ea43 0c0c 	orr.w	ip, r3, ip
 8026c98:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8026c9c:	f1c6 0310 	rsb	r3, r6, #16
 8026ca0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8026ca4:	1b5b      	subs	r3, r3, r5
 8026ca6:	ea4e 0707 	orr.w	r7, lr, r7
 8026caa:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8026cae:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026cb2:	437d      	muls	r5, r7
 8026cb4:	fb03 5c0c 	mla	ip, r3, ip, r5
 8026cb8:	0403      	lsls	r3, r0, #16
 8026cba:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026cbe:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026cc2:	4318      	orrs	r0, r3
 8026cc4:	0413      	lsls	r3, r2, #16
 8026cc6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026cca:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026cce:	4313      	orrs	r3, r2
 8026cd0:	fb04 c000 	mla	r0, r4, r0, ip
 8026cd4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8026cd8:	fb06 0003 	mla	r0, r6, r3, r0
 8026cdc:	0d43      	lsrs	r3, r0, #21
 8026cde:	0940      	lsrs	r0, r0, #5
 8026ce0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026ce4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026ce8:	4318      	orrs	r0, r3
 8026cea:	8008      	strh	r0, [r1, #0]
 8026cec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8026cf0:	4684      	mov	ip, r0
 8026cf2:	e7a6      	b.n	8026c42 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8026cf4:	4607      	mov	r7, r0
 8026cf6:	4684      	mov	ip, r0
 8026cf8:	e7ab      	b.n	8026c52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8026cfa:	4607      	mov	r7, r0
 8026cfc:	e7a9      	b.n	8026c52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8026cfe:	4602      	mov	r2, r0
 8026d00:	e7b4      	b.n	8026c6c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8026d02:	4602      	mov	r2, r0
 8026d04:	e7ba      	b.n	8026c7c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08026d06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026d06:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026d0a:	b08f      	sub	sp, #60	; 0x3c
 8026d0c:	461d      	mov	r5, r3
 8026d0e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026d10:	920c      	str	r2, [sp, #48]	; 0x30
 8026d12:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8026d16:	9107      	str	r1, [sp, #28]
 8026d18:	6859      	ldr	r1, [r3, #4]
 8026d1a:	681b      	ldr	r3, [r3, #0]
 8026d1c:	900d      	str	r0, [sp, #52]	; 0x34
 8026d1e:	fb01 2707 	mla	r7, r1, r7, r2
 8026d22:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8026d26:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026d28:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8026d2c:	f8d3 8000 	ldr.w	r8, [r3]
 8026d30:	9b07      	ldr	r3, [sp, #28]
 8026d32:	2b00      	cmp	r3, #0
 8026d34:	dc03      	bgt.n	8026d3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8026d36:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026d38:	2b00      	cmp	r3, #0
 8026d3a:	f340 8181 	ble.w	8027040 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8026d3e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026d40:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026d44:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026d48:	1e48      	subs	r0, r1, #1
 8026d4a:	f102 3cff 	add.w	ip, r2, #4294967295
 8026d4e:	2d00      	cmp	r5, #0
 8026d50:	f340 809b 	ble.w	8026e8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8026d54:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026d58:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026d5c:	d406      	bmi.n	8026d6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026d5e:	4586      	cmp	lr, r0
 8026d60:	da04      	bge.n	8026d6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026d62:	2b00      	cmp	r3, #0
 8026d64:	db02      	blt.n	8026d6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026d66:	4563      	cmp	r3, ip
 8026d68:	f2c0 8090 	blt.w	8026e8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8026d6c:	f11e 0e01 	adds.w	lr, lr, #1
 8026d70:	f100 8084 	bmi.w	8026e7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026d74:	4571      	cmp	r1, lr
 8026d76:	f2c0 8081 	blt.w	8026e7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026d7a:	3301      	adds	r3, #1
 8026d7c:	d47e      	bmi.n	8026e7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026d7e:	429a      	cmp	r2, r3
 8026d80:	db7c      	blt.n	8026e7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026d82:	46aa      	mov	sl, r5
 8026d84:	46b9      	mov	r9, r7
 8026d86:	f1ba 0f00 	cmp.w	sl, #0
 8026d8a:	f340 8099 	ble.w	8026ec0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8026d8e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026d90:	1421      	asrs	r1, r4, #16
 8026d92:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026d96:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026d9a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026d9e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8026da2:	f100 80d0 	bmi.w	8026f46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026da6:	f10e 3bff 	add.w	fp, lr, #4294967295
 8026daa:	4559      	cmp	r1, fp
 8026dac:	f280 80cb 	bge.w	8026f46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026db0:	2800      	cmp	r0, #0
 8026db2:	f2c0 80c8 	blt.w	8026f46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026db6:	f103 3bff 	add.w	fp, r3, #4294967295
 8026dba:	4558      	cmp	r0, fp
 8026dbc:	f280 80c3 	bge.w	8026f46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026dc0:	fa0f fe8e 	sxth.w	lr, lr
 8026dc4:	fb00 110e 	mla	r1, r0, lr, r1
 8026dc8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8026dcc:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8026dd0:	8841      	ldrh	r1, [r0, #2]
 8026dd2:	f1bc 0f00 	cmp.w	ip, #0
 8026dd6:	d00b      	beq.n	8026df0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8026dd8:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8026ddc:	3b01      	subs	r3, #1
 8026dde:	005b      	lsls	r3, r3, #1
 8026de0:	3302      	adds	r3, #2
 8026de2:	eb00 0e03 	add.w	lr, r0, r3
 8026de6:	5ac3      	ldrh	r3, [r0, r3]
 8026de8:	9308      	str	r3, [sp, #32]
 8026dea:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8026dee:	9309      	str	r3, [sp, #36]	; 0x24
 8026df0:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8026df4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026df8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8026dfc:	ea40 000b 	orr.w	r0, r0, fp
 8026e00:	fb12 f30c 	smulbb	r3, r2, ip
 8026e04:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8026e08:	10db      	asrs	r3, r3, #3
 8026e0a:	f1cc 0e10 	rsb	lr, ip, #16
 8026e0e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026e12:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026e16:	ebae 0e02 	sub.w	lr, lr, r2
 8026e1a:	ea4b 0101 	orr.w	r1, fp, r1
 8026e1e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026e22:	4351      	muls	r1, r2
 8026e24:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026e26:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8026e2a:	fb0e 1e00 	mla	lr, lr, r0, r1
 8026e2e:	0410      	lsls	r0, r2, #16
 8026e30:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026e34:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026e38:	4310      	orrs	r0, r2
 8026e3a:	9a08      	ldr	r2, [sp, #32]
 8026e3c:	9908      	ldr	r1, [sp, #32]
 8026e3e:	0412      	lsls	r2, r2, #16
 8026e40:	fb03 e000 	mla	r0, r3, r0, lr
 8026e44:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026e48:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8026e4c:	ea42 020e 	orr.w	r2, r2, lr
 8026e50:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8026e54:	fb03 0302 	mla	r3, r3, r2, r0
 8026e58:	0d5a      	lsrs	r2, r3, #21
 8026e5a:	095b      	lsrs	r3, r3, #5
 8026e5c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026e60:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026e64:	4313      	orrs	r3, r2
 8026e66:	f8a9 3000 	strh.w	r3, [r9]
 8026e6a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8026e6c:	441c      	add	r4, r3
 8026e6e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026e70:	f109 0902 	add.w	r9, r9, #2
 8026e74:	441e      	add	r6, r3
 8026e76:	f10a 3aff 	add.w	sl, sl, #4294967295
 8026e7a:	e784      	b.n	8026d86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8026e7c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8026e7e:	441c      	add	r4, r3
 8026e80:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026e82:	3d01      	subs	r5, #1
 8026e84:	441e      	add	r6, r3
 8026e86:	3702      	adds	r7, #2
 8026e88:	e761      	b.n	8026d4e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8026e8a:	d01d      	beq.n	8026ec8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8026e8c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8026e8e:	1e6b      	subs	r3, r5, #1
 8026e90:	fb00 4003 	mla	r0, r0, r3, r4
 8026e94:	1400      	asrs	r0, r0, #16
 8026e96:	f53f af74 	bmi.w	8026d82 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026e9a:	3901      	subs	r1, #1
 8026e9c:	4288      	cmp	r0, r1
 8026e9e:	f6bf af70 	bge.w	8026d82 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026ea2:	991c      	ldr	r1, [sp, #112]	; 0x70
 8026ea4:	fb01 6303 	mla	r3, r1, r3, r6
 8026ea8:	141b      	asrs	r3, r3, #16
 8026eaa:	f53f af6a 	bmi.w	8026d82 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026eae:	3a01      	subs	r2, #1
 8026eb0:	4293      	cmp	r3, r2
 8026eb2:	f6bf af66 	bge.w	8026d82 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026eb6:	46a9      	mov	r9, r5
 8026eb8:	46ba      	mov	sl, r7
 8026eba:	f1b9 0f00 	cmp.w	r9, #0
 8026ebe:	dc5a      	bgt.n	8026f76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8026ec0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8026ec4:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8026ec8:	9b07      	ldr	r3, [sp, #28]
 8026eca:	2b00      	cmp	r3, #0
 8026ecc:	f340 80b8 	ble.w	8027040 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8026ed0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026ed4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026ed8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026edc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026ede:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026ee2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026ee6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026eea:	eef0 6a62 	vmov.f32	s13, s5
 8026eee:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026ef2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026ef6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026efa:	ee16 4a90 	vmov	r4, s13
 8026efe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026f02:	eef0 6a43 	vmov.f32	s13, s6
 8026f06:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026f0a:	ee12 2a90 	vmov	r2, s5
 8026f0e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026f12:	fb92 f3f3 	sdiv	r3, r2, r3
 8026f16:	ee13 2a10 	vmov	r2, s6
 8026f1a:	931b      	str	r3, [sp, #108]	; 0x6c
 8026f1c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026f1e:	fb92 f3f3 	sdiv	r3, r2, r3
 8026f22:	931c      	str	r3, [sp, #112]	; 0x70
 8026f24:	9b07      	ldr	r3, [sp, #28]
 8026f26:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8026f28:	3b01      	subs	r3, #1
 8026f2a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026f2e:	9307      	str	r3, [sp, #28]
 8026f30:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026f32:	ee16 6a90 	vmov	r6, s13
 8026f36:	bf14      	ite	ne
 8026f38:	461d      	movne	r5, r3
 8026f3a:	4615      	moveq	r5, r2
 8026f3c:	eeb0 3a67 	vmov.f32	s6, s15
 8026f40:	eef0 2a47 	vmov.f32	s5, s14
 8026f44:	e6f4      	b.n	8026d30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8026f46:	f111 0b01 	adds.w	fp, r1, #1
 8026f4a:	d48e      	bmi.n	8026e6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026f4c:	45de      	cmp	lr, fp
 8026f4e:	db8c      	blt.n	8026e6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026f50:	f110 0b01 	adds.w	fp, r0, #1
 8026f54:	d489      	bmi.n	8026e6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026f56:	455b      	cmp	r3, fp
 8026f58:	db87      	blt.n	8026e6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026f5a:	b21b      	sxth	r3, r3
 8026f5c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8026f60:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8026f64:	9300      	str	r3, [sp, #0]
 8026f66:	4642      	mov	r2, r8
 8026f68:	fa0f f38e 	sxth.w	r3, lr
 8026f6c:	4649      	mov	r1, r9
 8026f6e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8026f70:	f7ff fe4d 	bl	8026c0e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8026f74:	e779      	b.n	8026e6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026f76:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026f78:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8026f7c:	1420      	asrs	r0, r4, #16
 8026f7e:	1431      	asrs	r1, r6, #16
 8026f80:	fb03 0101 	mla	r1, r3, r1, r0
 8026f84:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8026f88:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8026f8c:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8026f90:	8841      	ldrh	r1, [r0, #2]
 8026f92:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026f96:	f1be 0f00 	cmp.w	lr, #0
 8026f9a:	d00b      	beq.n	8026fb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8026f9c:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8026fa0:	3b01      	subs	r3, #1
 8026fa2:	005b      	lsls	r3, r3, #1
 8026fa4:	3302      	adds	r3, #2
 8026fa6:	eb00 0b03 	add.w	fp, r0, r3
 8026faa:	5ac3      	ldrh	r3, [r0, r3]
 8026fac:	930a      	str	r3, [sp, #40]	; 0x28
 8026fae:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8026fb2:	930b      	str	r3, [sp, #44]	; 0x2c
 8026fb4:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8026fb8:	fb12 f30e 	smulbb	r3, r2, lr
 8026fbc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026fc0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8026fc4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026fc8:	10db      	asrs	r3, r3, #3
 8026fca:	ea40 000c 	orr.w	r0, r0, ip
 8026fce:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026fd2:	f1ce 0c10 	rsb	ip, lr, #16
 8026fd6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026fda:	ebac 0c02 	sub.w	ip, ip, r2
 8026fde:	ea4b 0101 	orr.w	r1, fp, r1
 8026fe2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026fe6:	4351      	muls	r1, r2
 8026fe8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8026fea:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8026fee:	fb0c 1c00 	mla	ip, ip, r0, r1
 8026ff2:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8026ff6:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8026ffa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8026ffc:	990a      	ldr	r1, [sp, #40]	; 0x28
 8026ffe:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8027002:	0412      	lsls	r2, r2, #16
 8027004:	ea4b 0000 	orr.w	r0, fp, r0
 8027008:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802700c:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8027010:	fb03 c000 	mla	r0, r3, r0, ip
 8027014:	ea42 0b0b 	orr.w	fp, r2, fp
 8027018:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 802701c:	fb03 000b 	mla	r0, r3, fp, r0
 8027020:	0d43      	lsrs	r3, r0, #21
 8027022:	0940      	lsrs	r0, r0, #5
 8027024:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027028:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802702c:	4318      	orrs	r0, r3
 802702e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8027030:	f82a 0b02 	strh.w	r0, [sl], #2
 8027034:	441c      	add	r4, r3
 8027036:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8027038:	f109 39ff 	add.w	r9, r9, #4294967295
 802703c:	441e      	add	r6, r3
 802703e:	e73c      	b.n	8026eba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8027040:	b00f      	add	sp, #60	; 0x3c
 8027042:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08027046 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8027046:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802704a:	b085      	sub	sp, #20
 802704c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8027050:	9102      	str	r1, [sp, #8]
 8027052:	2c00      	cmp	r4, #0
 8027054:	fb04 7103 	mla	r1, r4, r3, r7
 8027058:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 802705c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8027060:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8027064:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8027068:	f2c0 811b 	blt.w	80272a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802706c:	45a6      	cmp	lr, r4
 802706e:	f340 8118 	ble.w	80272a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8027072:	2f00      	cmp	r7, #0
 8027074:	f2c0 8113 	blt.w	802729e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8027078:	42bb      	cmp	r3, r7
 802707a:	f340 8110 	ble.w	802729e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802707e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8027082:	1c7a      	adds	r2, r7, #1
 8027084:	f100 8110 	bmi.w	80272a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8027088:	4293      	cmp	r3, r2
 802708a:	f340 810d 	ble.w	80272a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802708e:	2e00      	cmp	r6, #0
 8027090:	f000 810c 	beq.w	80272ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8027094:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8027098:	3401      	adds	r4, #1
 802709a:	f100 810b 	bmi.w	80272b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802709e:	45a6      	cmp	lr, r4
 80270a0:	f340 8108 	ble.w	80272b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80270a4:	2800      	cmp	r0, #0
 80270a6:	f000 8108 	beq.w	80272ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 80270aa:	2f00      	cmp	r7, #0
 80270ac:	f2c0 8100 	blt.w	80272b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80270b0:	42bb      	cmp	r3, r7
 80270b2:	f340 80fd 	ble.w	80272b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80270b6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80270ba:	3701      	adds	r7, #1
 80270bc:	f100 8100 	bmi.w	80272c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80270c0:	42bb      	cmp	r3, r7
 80270c2:	f340 80fd 	ble.w	80272c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80270c6:	2e00      	cmp	r6, #0
 80270c8:	f000 80fc 	beq.w	80272c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 80270cc:	3301      	adds	r3, #1
 80270ce:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 80270d2:	b2b6      	uxth	r6, r6
 80270d4:	b280      	uxth	r0, r0
 80270d6:	fb00 fe06 	mul.w	lr, r0, r6
 80270da:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80270de:	0136      	lsls	r6, r6, #4
 80270e0:	eba6 070e 	sub.w	r7, r6, lr
 80270e4:	b280      	uxth	r0, r0
 80270e6:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80270ea:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80270ee:	b2bf      	uxth	r7, r7
 80270f0:	1a1b      	subs	r3, r3, r0
 80270f2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80270f6:	b29b      	uxth	r3, r3
 80270f8:	fb0a f607 	mul.w	r6, sl, r7
 80270fc:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8027100:	fb0b 6603 	mla	r6, fp, r3, r6
 8027104:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8027108:	fb00 6609 	mla	r6, r0, r9, r6
 802710c:	fb0e 6608 	mla	r6, lr, r8, r6
 8027110:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8027114:	9600      	str	r6, [sp, #0]
 8027116:	2e00      	cmp	r6, #0
 8027118:	f000 80be 	beq.w	8027298 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 802711c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027120:	fb0b fc0c 	mul.w	ip, fp, ip
 8027124:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8027128:	fb0b f505 	mul.w	r5, fp, r5
 802712c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8027130:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8027134:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027138:	44dc      	add	ip, fp
 802713a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802713e:	9501      	str	r5, [sp, #4]
 8027140:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8027144:	9503      	str	r5, [sp, #12]
 8027146:	9d01      	ldr	r5, [sp, #4]
 8027148:	9e02      	ldr	r6, [sp, #8]
 802714a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802714e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8027152:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8027156:	fb0a fc0c 	mul.w	ip, sl, ip
 802715a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802715e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8027162:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8027166:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802716a:	4465      	add	r5, ip
 802716c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8027170:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8027174:	fb09 fc0c 	mul.w	ip, r9, ip
 8027178:	fb09 f904 	mul.w	r9, r9, r4
 802717c:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8027180:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8027184:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8027188:	fb08 f404 	mul.w	r4, r8, r4
 802718c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8027190:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027194:	fb08 f802 	mul.w	r8, r8, r2
 8027198:	fb0a fa01 	mul.w	sl, sl, r1
 802719c:	0a22      	lsrs	r2, r4, #8
 802719e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80271a2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80271a6:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80271aa:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80271ae:	4414      	add	r4, r2
 80271b0:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80271b4:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80271b8:	0a2d      	lsrs	r5, r5, #8
 80271ba:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80271be:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80271c2:	9a03      	ldr	r2, [sp, #12]
 80271c4:	8836      	ldrh	r6, [r6, #0]
 80271c6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80271ca:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80271ce:	437d      	muls	r5, r7
 80271d0:	4461      	add	r1, ip
 80271d2:	0a24      	lsrs	r4, r4, #8
 80271d4:	fb02 5503 	mla	r5, r2, r3, r5
 80271d8:	0a09      	lsrs	r1, r1, #8
 80271da:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80271de:	fb04 540e 	mla	r4, r4, lr, r5
 80271e2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80271e6:	fb01 4100 	mla	r1, r1, r0, r4
 80271ea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80271ee:	0a09      	lsrs	r1, r1, #8
 80271f0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80271f4:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80271f8:	fb07 f70a 	mul.w	r7, r7, sl
 80271fc:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8027200:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8027204:	fb03 7101 	mla	r1, r3, r1, r7
 8027208:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802720c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8027210:	fb0e 1e08 	mla	lr, lr, r8, r1
 8027214:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8027218:	fb00 e101 	mla	r1, r0, r1, lr
 802721c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8027220:	9a00      	ldr	r2, [sp, #0]
 8027222:	b287      	uxth	r7, r0
 8027224:	437a      	muls	r2, r7
 8027226:	0a09      	lsrs	r1, r1, #8
 8027228:	1c53      	adds	r3, r2, #1
 802722a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802722e:	4321      	orrs	r1, r4
 8027230:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027234:	1235      	asrs	r5, r6, #8
 8027236:	0c0a      	lsrs	r2, r1, #16
 8027238:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802723c:	b2db      	uxtb	r3, r3
 802723e:	fb12 f207 	smulbb	r2, r2, r7
 8027242:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8027246:	fb05 2503 	mla	r5, r5, r3, r2
 802724a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802724e:	10f2      	asrs	r2, r6, #3
 8027250:	b2c8      	uxtb	r0, r1
 8027252:	00f6      	lsls	r6, r6, #3
 8027254:	fb14 f407 	smulbb	r4, r4, r7
 8027258:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802725c:	b2f6      	uxtb	r6, r6
 802725e:	fb10 f007 	smulbb	r0, r0, r7
 8027262:	fb02 4203 	mla	r2, r2, r3, r4
 8027266:	b2ad      	uxth	r5, r5
 8027268:	fb06 0303 	mla	r3, r6, r3, r0
 802726c:	b299      	uxth	r1, r3
 802726e:	b294      	uxth	r4, r2
 8027270:	1c6b      	adds	r3, r5, #1
 8027272:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8027276:	1c62      	adds	r2, r4, #1
 8027278:	1c4b      	adds	r3, r1, #1
 802727a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802727e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8027282:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8027286:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802728a:	0952      	lsrs	r2, r2, #5
 802728c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027290:	432b      	orrs	r3, r5
 8027292:	4313      	orrs	r3, r2
 8027294:	9a02      	ldr	r2, [sp, #8]
 8027296:	8013      	strh	r3, [r2, #0]
 8027298:	b005      	add	sp, #20
 802729a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802729e:	2500      	movs	r5, #0
 80272a0:	e6ef      	b.n	8027082 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80272a2:	2100      	movs	r1, #0
 80272a4:	460d      	mov	r5, r1
 80272a6:	e6f7      	b.n	8027098 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80272a8:	2100      	movs	r1, #0
 80272aa:	e6f5      	b.n	8027098 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80272ac:	4631      	mov	r1, r6
 80272ae:	e6f3      	b.n	8027098 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80272b0:	2400      	movs	r4, #0
 80272b2:	e702      	b.n	80270ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 80272b4:	2200      	movs	r2, #0
 80272b6:	4614      	mov	r4, r2
 80272b8:	e70b      	b.n	80270d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80272ba:	4602      	mov	r2, r0
 80272bc:	4604      	mov	r4, r0
 80272be:	e708      	b.n	80270d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80272c0:	2200      	movs	r2, #0
 80272c2:	e706      	b.n	80270d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80272c4:	4632      	mov	r2, r6
 80272c6:	e704      	b.n	80270d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

080272c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80272c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80272cc:	b09d      	sub	sp, #116	; 0x74
 80272ce:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80272d2:	9219      	str	r2, [sp, #100]	; 0x64
 80272d4:	9307      	str	r3, [sp, #28]
 80272d6:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80272d8:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 80272dc:	931a      	str	r3, [sp, #104]	; 0x68
 80272de:	9117      	str	r1, [sp, #92]	; 0x5c
 80272e0:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80272e4:	901b      	str	r0, [sp, #108]	; 0x6c
 80272e6:	6850      	ldr	r0, [r2, #4]
 80272e8:	6812      	ldr	r2, [r2, #0]
 80272ea:	fb00 1303 	mla	r3, r0, r3, r1
 80272ee:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80272f2:	930a      	str	r3, [sp, #40]	; 0x28
 80272f4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80272f6:	681b      	ldr	r3, [r3, #0]
 80272f8:	9310      	str	r3, [sp, #64]	; 0x40
 80272fa:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80272fe:	930b      	str	r3, [sp, #44]	; 0x2c
 8027300:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027302:	2b00      	cmp	r3, #0
 8027304:	dc03      	bgt.n	802730e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8027306:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8027308:	2b00      	cmp	r3, #0
 802730a:	f340 8375 	ble.w	80279f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802730e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027310:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027314:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027318:	1e48      	subs	r0, r1, #1
 802731a:	1e57      	subs	r7, r2, #1
 802731c:	9b07      	ldr	r3, [sp, #28]
 802731e:	2b00      	cmp	r3, #0
 8027320:	f340 818e 	ble.w	8027640 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8027324:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8027328:	ea4f 4326 	mov.w	r3, r6, asr #16
 802732c:	d406      	bmi.n	802733c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802732e:	4584      	cmp	ip, r0
 8027330:	da04      	bge.n	802733c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8027332:	2b00      	cmp	r3, #0
 8027334:	db02      	blt.n	802733c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8027336:	42bb      	cmp	r3, r7
 8027338:	f2c0 8183 	blt.w	8027642 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802733c:	f11c 0c01 	adds.w	ip, ip, #1
 8027340:	f100 8173 	bmi.w	802762a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8027344:	4561      	cmp	r1, ip
 8027346:	f2c0 8170 	blt.w	802762a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802734a:	3301      	adds	r3, #1
 802734c:	f100 816d 	bmi.w	802762a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8027350:	429a      	cmp	r2, r3
 8027352:	f2c0 816a 	blt.w	802762a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8027356:	9b07      	ldr	r3, [sp, #28]
 8027358:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802735a:	9318      	str	r3, [sp, #96]	; 0x60
 802735c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802735e:	2b00      	cmp	r3, #0
 8027360:	f340 818c 	ble.w	802767c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8027364:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8027366:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027368:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802736c:	689b      	ldr	r3, [r3, #8]
 802736e:	1422      	asrs	r2, r4, #16
 8027370:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8027374:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8027378:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802737c:	f100 81cd 	bmi.w	802771a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8027380:	f103 38ff 	add.w	r8, r3, #4294967295
 8027384:	4542      	cmp	r2, r8
 8027386:	f280 81c8 	bge.w	802771a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802738a:	f1bc 0f00 	cmp.w	ip, #0
 802738e:	f2c0 81c4 	blt.w	802771a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8027392:	f10e 38ff 	add.w	r8, lr, #4294967295
 8027396:	45c4      	cmp	ip, r8
 8027398:	f280 81bf 	bge.w	802771a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802739c:	b21b      	sxth	r3, r3
 802739e:	fb0c 2203 	mla	r2, ip, r3, r2
 80273a2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80273a4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80273a8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80273ac:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80273b0:	2800      	cmp	r0, #0
 80273b2:	f000 81a9 	beq.w	8027708 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 80273b6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80273ba:	950c      	str	r5, [sp, #48]	; 0x30
 80273bc:	0e2d      	lsrs	r5, r5, #24
 80273be:	9513      	str	r5, [sp, #76]	; 0x4c
 80273c0:	b181      	cbz	r1, 80273e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80273c2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80273c6:	3b01      	subs	r3, #1
 80273c8:	009b      	lsls	r3, r3, #2
 80273ca:	3304      	adds	r3, #4
 80273cc:	eb08 0c03 	add.w	ip, r8, r3
 80273d0:	f858 3003 	ldr.w	r3, [r8, r3]
 80273d4:	9308      	str	r3, [sp, #32]
 80273d6:	0e1b      	lsrs	r3, r3, #24
 80273d8:	9311      	str	r3, [sp, #68]	; 0x44
 80273da:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80273de:	930d      	str	r3, [sp, #52]	; 0x34
 80273e0:	0e1b      	lsrs	r3, r3, #24
 80273e2:	9314      	str	r3, [sp, #80]	; 0x50
 80273e4:	b280      	uxth	r0, r0
 80273e6:	b289      	uxth	r1, r1
 80273e8:	fb00 f901 	mul.w	r9, r0, r1
 80273ec:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80273f0:	0100      	lsls	r0, r0, #4
 80273f2:	eba0 0809 	sub.w	r8, r0, r9
 80273f6:	b289      	uxth	r1, r1
 80273f8:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80273fc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80273fe:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027400:	fa1f f888 	uxth.w	r8, r8
 8027404:	1a5b      	subs	r3, r3, r1
 8027406:	b29b      	uxth	r3, r3
 8027408:	fb08 f000 	mul.w	r0, r8, r0
 802740c:	fb03 000e 	mla	r0, r3, lr, r0
 8027410:	fb01 0005 	mla	r0, r1, r5, r0
 8027414:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027416:	fb09 0005 	mla	r0, r9, r5, r0
 802741a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802741e:	2800      	cmp	r0, #0
 8027420:	f000 80fa 	beq.w	8027618 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027424:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8027428:	d01b      	beq.n	8027462 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802742a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802742e:	fb0e fa0a 	mul.w	sl, lr, sl
 8027432:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027436:	fb0e fe02 	mul.w	lr, lr, r2
 802743a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802743e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027442:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8027446:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802744a:	4452      	add	r2, sl
 802744c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8027450:	0a12      	lsrs	r2, r2, #8
 8027452:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027456:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802745a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802745e:	ea42 020c 	orr.w	r2, r2, ip
 8027462:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027464:	2dff      	cmp	r5, #255	; 0xff
 8027466:	d021      	beq.n	80274ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8027468:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802746a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802746e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027470:	fb05 fb0b 	mul.w	fp, r5, fp
 8027474:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027476:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802747a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802747c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027480:	fb05 fa0a 	mul.w	sl, r5, sl
 8027484:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027488:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802748c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027490:	44de      	add	lr, fp
 8027492:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027496:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802749a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802749e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80274a2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80274a6:	ea4e 050a 	orr.w	r5, lr, sl
 80274aa:	950c      	str	r5, [sp, #48]	; 0x30
 80274ac:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80274ae:	2dff      	cmp	r5, #255	; 0xff
 80274b0:	d021      	beq.n	80274f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 80274b2:	9d08      	ldr	r5, [sp, #32]
 80274b4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80274b8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80274ba:	fb05 fb0b 	mul.w	fp, r5, fp
 80274be:	9d08      	ldr	r5, [sp, #32]
 80274c0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80274c4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80274c6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80274ca:	fb05 fa0a 	mul.w	sl, r5, sl
 80274ce:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80274d2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80274d6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80274da:	44de      	add	lr, fp
 80274dc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80274e0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80274e4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80274e8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80274ec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80274f0:	ea4e 050a 	orr.w	r5, lr, sl
 80274f4:	9508      	str	r5, [sp, #32]
 80274f6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80274f8:	2dff      	cmp	r5, #255	; 0xff
 80274fa:	d021      	beq.n	8027540 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80274fc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80274fe:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027502:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027504:	fb05 fb0b 	mul.w	fp, r5, fp
 8027508:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802750a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802750e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027510:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027514:	fb05 fa0a 	mul.w	sl, r5, sl
 8027518:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802751c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027520:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027524:	44de      	add	lr, fp
 8027526:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802752a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802752e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027532:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027536:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802753a:	ea4e 050a 	orr.w	r5, lr, sl
 802753e:	950d      	str	r5, [sp, #52]	; 0x34
 8027540:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027542:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027546:	9d08      	ldr	r5, [sp, #32]
 8027548:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 802754c:	fb08 fc0c 	mul.w	ip, r8, ip
 8027550:	fb03 cc0e 	mla	ip, r3, lr, ip
 8027554:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027558:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802755a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802755e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027562:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027564:	fb09 cc0e 	mla	ip, r9, lr, ip
 8027568:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802756c:	fb08 f80e 	mul.w	r8, r8, lr
 8027570:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027574:	fb03 8202 	mla	r2, r3, r2, r8
 8027578:	9b08      	ldr	r3, [sp, #32]
 802757a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802757c:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8027580:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8027582:	fb01 220a 	mla	r2, r1, sl, r2
 8027586:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 802758a:	fb09 2901 	mla	r9, r9, r1, r2
 802758e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8027590:	883b      	ldrh	r3, [r7, #0]
 8027592:	4342      	muls	r2, r0
 8027594:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027598:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802759c:	1c50      	adds	r0, r2, #1
 802759e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80275a2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80275a6:	ea4c 0c09 	orr.w	ip, ip, r9
 80275aa:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80275ae:	1219      	asrs	r1, r3, #8
 80275b0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80275b4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80275b8:	b2c0      	uxtb	r0, r0
 80275ba:	fb12 f205 	smulbb	r2, r2, r5
 80275be:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80275c2:	fb01 2100 	mla	r1, r1, r0, r2
 80275c6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80275ca:	10da      	asrs	r2, r3, #3
 80275cc:	fa5f fc8c 	uxtb.w	ip, ip
 80275d0:	00db      	lsls	r3, r3, #3
 80275d2:	fb1c fc05 	smulbb	ip, ip, r5
 80275d6:	b2db      	uxtb	r3, r3
 80275d8:	b289      	uxth	r1, r1
 80275da:	fb03 c300 	mla	r3, r3, r0, ip
 80275de:	fa1f fc83 	uxth.w	ip, r3
 80275e2:	1c4b      	adds	r3, r1, #1
 80275e4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80275e8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80275ec:	fb1e fe05 	smulbb	lr, lr, r5
 80275f0:	f10c 0301 	add.w	r3, ip, #1
 80275f4:	fb02 e200 	mla	r2, r2, r0, lr
 80275f8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80275fc:	b292      	uxth	r2, r2
 80275fe:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8027602:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8027606:	430b      	orrs	r3, r1
 8027608:	1c51      	adds	r1, r2, #1
 802760a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802760e:	0952      	lsrs	r2, r2, #5
 8027610:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027614:	4313      	orrs	r3, r2
 8027616:	803b      	strh	r3, [r7, #0]
 8027618:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802761a:	441c      	add	r4, r3
 802761c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802761e:	441e      	add	r6, r3
 8027620:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027622:	3b01      	subs	r3, #1
 8027624:	3702      	adds	r7, #2
 8027626:	9318      	str	r3, [sp, #96]	; 0x60
 8027628:	e698      	b.n	802735c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802762a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802762c:	441c      	add	r4, r3
 802762e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8027630:	441e      	add	r6, r3
 8027632:	9b07      	ldr	r3, [sp, #28]
 8027634:	3b01      	subs	r3, #1
 8027636:	9307      	str	r3, [sp, #28]
 8027638:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802763a:	3302      	adds	r3, #2
 802763c:	930a      	str	r3, [sp, #40]	; 0x28
 802763e:	e66d      	b.n	802731c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8027640:	d023      	beq.n	802768a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8027642:	9b07      	ldr	r3, [sp, #28]
 8027644:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8027646:	3b01      	subs	r3, #1
 8027648:	fb00 4003 	mla	r0, r0, r3, r4
 802764c:	1400      	asrs	r0, r0, #16
 802764e:	f53f ae82 	bmi.w	8027356 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027652:	3901      	subs	r1, #1
 8027654:	4288      	cmp	r0, r1
 8027656:	f6bf ae7e 	bge.w	8027356 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802765a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 802765c:	fb01 6303 	mla	r3, r1, r3, r6
 8027660:	141b      	asrs	r3, r3, #16
 8027662:	f53f ae78 	bmi.w	8027356 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027666:	3a01      	subs	r2, #1
 8027668:	4293      	cmp	r3, r2
 802766a:	f6bf ae74 	bge.w	8027356 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802766e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8027672:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8027676:	f1bb 0f00 	cmp.w	fp, #0
 802767a:	dc6c      	bgt.n	8027756 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802767c:	9b07      	ldr	r3, [sp, #28]
 802767e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8027682:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027684:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8027688:	930a      	str	r3, [sp, #40]	; 0x28
 802768a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802768c:	2b00      	cmp	r3, #0
 802768e:	f340 81b3 	ble.w	80279f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8027692:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027696:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802769a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802769e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80276a0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80276a4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80276a8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80276ac:	eef0 6a62 	vmov.f32	s13, s5
 80276b0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80276b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80276b8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80276bc:	ee16 4a90 	vmov	r4, s13
 80276c0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80276c4:	eef0 6a43 	vmov.f32	s13, s6
 80276c8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80276cc:	ee12 2a90 	vmov	r2, s5
 80276d0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80276d4:	fb92 f3f3 	sdiv	r3, r2, r3
 80276d8:	ee13 2a10 	vmov	r2, s6
 80276dc:	9329      	str	r3, [sp, #164]	; 0xa4
 80276de:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80276e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80276e4:	932a      	str	r3, [sp, #168]	; 0xa8
 80276e6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80276e8:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80276ea:	3b01      	subs	r3, #1
 80276ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80276f0:	9317      	str	r3, [sp, #92]	; 0x5c
 80276f2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80276f4:	bf08      	it	eq
 80276f6:	4613      	moveq	r3, r2
 80276f8:	ee16 6a90 	vmov	r6, s13
 80276fc:	9307      	str	r3, [sp, #28]
 80276fe:	eeb0 3a67 	vmov.f32	s6, s15
 8027702:	eef0 2a47 	vmov.f32	s5, s14
 8027706:	e5fb      	b.n	8027300 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8027708:	2900      	cmp	r1, #0
 802770a:	f43f ae6b 	beq.w	80273e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802770e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8027712:	9308      	str	r3, [sp, #32]
 8027714:	0e1b      	lsrs	r3, r3, #24
 8027716:	9311      	str	r3, [sp, #68]	; 0x44
 8027718:	e664      	b.n	80273e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802771a:	f112 0801 	adds.w	r8, r2, #1
 802771e:	f53f af7b 	bmi.w	8027618 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027722:	4543      	cmp	r3, r8
 8027724:	f6ff af78 	blt.w	8027618 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027728:	f11c 0801 	adds.w	r8, ip, #1
 802772c:	f53f af74 	bmi.w	8027618 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027730:	45c6      	cmp	lr, r8
 8027732:	f6ff af71 	blt.w	8027618 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027736:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8027738:	9201      	str	r2, [sp, #4]
 802773a:	fa0f f28e 	sxth.w	r2, lr
 802773e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8027742:	e9cd c002 	strd	ip, r0, [sp, #8]
 8027746:	9200      	str	r2, [sp, #0]
 8027748:	b21b      	sxth	r3, r3
 802774a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802774c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802774e:	4639      	mov	r1, r7
 8027750:	f7ff fc79 	bl	8027046 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8027754:	e760      	b.n	8027618 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027756:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027758:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802775a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802775e:	1427      	asrs	r7, r4, #16
 8027760:	1433      	asrs	r3, r6, #16
 8027762:	fb01 7303 	mla	r3, r1, r3, r7
 8027766:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802776a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802776e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8027772:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8027776:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802777a:	2a00      	cmp	r2, #0
 802777c:	f000 8133 	beq.w	80279e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8027780:	687d      	ldr	r5, [r7, #4]
 8027782:	950e      	str	r5, [sp, #56]	; 0x38
 8027784:	0e2d      	lsrs	r5, r5, #24
 8027786:	9515      	str	r5, [sp, #84]	; 0x54
 8027788:	b178      	cbz	r0, 80277aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802778a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 802778e:	3901      	subs	r1, #1
 8027790:	0089      	lsls	r1, r1, #2
 8027792:	3104      	adds	r1, #4
 8027794:	eb07 0e01 	add.w	lr, r7, r1
 8027798:	5879      	ldr	r1, [r7, r1]
 802779a:	9109      	str	r1, [sp, #36]	; 0x24
 802779c:	0e09      	lsrs	r1, r1, #24
 802779e:	9112      	str	r1, [sp, #72]	; 0x48
 80277a0:	f8de 1004 	ldr.w	r1, [lr, #4]
 80277a4:	910f      	str	r1, [sp, #60]	; 0x3c
 80277a6:	0e09      	lsrs	r1, r1, #24
 80277a8:	9116      	str	r1, [sp, #88]	; 0x58
 80277aa:	b292      	uxth	r2, r2
 80277ac:	b280      	uxth	r0, r0
 80277ae:	fb02 f800 	mul.w	r8, r2, r0
 80277b2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80277b6:	0112      	lsls	r2, r2, #4
 80277b8:	eba2 0e08 	sub.w	lr, r2, r8
 80277bc:	b280      	uxth	r0, r0
 80277be:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80277c2:	9915      	ldr	r1, [sp, #84]	; 0x54
 80277c4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80277c6:	fa1f fe8e 	uxth.w	lr, lr
 80277ca:	1a12      	subs	r2, r2, r0
 80277cc:	b292      	uxth	r2, r2
 80277ce:	fb0e f101 	mul.w	r1, lr, r1
 80277d2:	fb02 110c 	mla	r1, r2, ip, r1
 80277d6:	fb00 1105 	mla	r1, r0, r5, r1
 80277da:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80277dc:	fb08 1105 	mla	r1, r8, r5, r1
 80277e0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80277e4:	2900      	cmp	r1, #0
 80277e6:	f000 80f5 	beq.w	80279d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 80277ea:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80277ee:	d019      	beq.n	8027824 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 80277f0:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80277f4:	fb0c fa0a 	mul.w	sl, ip, sl
 80277f8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80277fc:	fb0c fc03 	mul.w	ip, ip, r3
 8027800:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8027804:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8027808:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802780c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8027810:	4453      	add	r3, sl
 8027812:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8027816:	0a1b      	lsrs	r3, r3, #8
 8027818:	0a3f      	lsrs	r7, r7, #8
 802781a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802781e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8027822:	433b      	orrs	r3, r7
 8027824:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027826:	2dff      	cmp	r5, #255	; 0xff
 8027828:	d020      	beq.n	802786c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 802782a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802782c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027830:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027832:	436f      	muls	r7, r5
 8027834:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027836:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802783a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802783c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027840:	fb05 fa0a 	mul.w	sl, r5, sl
 8027844:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027848:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802784c:	44bc      	add	ip, r7
 802784e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027852:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027856:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802785a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802785e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027862:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027866:	ea4c 050a 	orr.w	r5, ip, sl
 802786a:	950e      	str	r5, [sp, #56]	; 0x38
 802786c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802786e:	2dff      	cmp	r5, #255	; 0xff
 8027870:	d020      	beq.n	80278b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8027872:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8027874:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027878:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802787a:	436f      	muls	r7, r5
 802787c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802787e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027882:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027884:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027888:	fb05 fa0a 	mul.w	sl, r5, sl
 802788c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027890:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027894:	44bc      	add	ip, r7
 8027896:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802789a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802789e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80278a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80278a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80278aa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80278ae:	ea4c 050a 	orr.w	r5, ip, sl
 80278b2:	9509      	str	r5, [sp, #36]	; 0x24
 80278b4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80278b6:	2dff      	cmp	r5, #255	; 0xff
 80278b8:	d020      	beq.n	80278fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80278ba:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80278bc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80278c0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80278c2:	436f      	muls	r7, r5
 80278c4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80278c6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80278ca:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80278cc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80278d0:	fb05 fa0a 	mul.w	sl, r5, sl
 80278d4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80278d8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80278dc:	44bc      	add	ip, r7
 80278de:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80278e2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80278e6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80278ea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80278ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80278f2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80278f6:	ea4c 050a 	orr.w	r5, ip, sl
 80278fa:	950f      	str	r5, [sp, #60]	; 0x3c
 80278fc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80278fe:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027902:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8027904:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8027908:	fb0e f707 	mul.w	r7, lr, r7
 802790c:	fb02 770c 	mla	r7, r2, ip, r7
 8027910:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027914:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027916:	fb00 770c 	mla	r7, r0, ip, r7
 802791a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802791e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027920:	fb08 770c 	mla	r7, r8, ip, r7
 8027924:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8027928:	fb0e fe0c 	mul.w	lr, lr, ip
 802792c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8027930:	fb02 e303 	mla	r3, r2, r3, lr
 8027934:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027936:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027938:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802793c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802793e:	fb00 330a 	mla	r3, r0, sl, r3
 8027942:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8027946:	fb08 3c0c 	mla	ip, r8, ip, r3
 802794a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802794c:	f8b9 0000 	ldrh.w	r0, [r9]
 8027950:	4359      	muls	r1, r3
 8027952:	0a3f      	lsrs	r7, r7, #8
 8027954:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027958:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802795c:	1c4b      	adds	r3, r1, #1
 802795e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8027962:	ea47 070c 	orr.w	r7, r7, ip
 8027966:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802796a:	1202      	asrs	r2, r0, #8
 802796c:	0c3b      	lsrs	r3, r7, #16
 802796e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8027972:	b2c9      	uxtb	r1, r1
 8027974:	fb13 f305 	smulbb	r3, r3, r5
 8027978:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802797c:	fb02 3201 	mla	r2, r2, r1, r3
 8027980:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8027984:	10c3      	asrs	r3, r0, #3
 8027986:	b2ff      	uxtb	r7, r7
 8027988:	00c0      	lsls	r0, r0, #3
 802798a:	b2c0      	uxtb	r0, r0
 802798c:	fb17 f705 	smulbb	r7, r7, r5
 8027990:	fb00 7001 	mla	r0, r0, r1, r7
 8027994:	b292      	uxth	r2, r2
 8027996:	fb1c fc05 	smulbb	ip, ip, r5
 802799a:	b280      	uxth	r0, r0
 802799c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80279a0:	fb03 c301 	mla	r3, r3, r1, ip
 80279a4:	1c51      	adds	r1, r2, #1
 80279a6:	f100 0c01 	add.w	ip, r0, #1
 80279aa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80279ae:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80279b2:	b29b      	uxth	r3, r3
 80279b4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80279b8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80279bc:	ea4c 0202 	orr.w	r2, ip, r2
 80279c0:	f103 0c01 	add.w	ip, r3, #1
 80279c4:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80279c8:	095b      	lsrs	r3, r3, #5
 80279ca:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80279ce:	431a      	orrs	r2, r3
 80279d0:	f8a9 2000 	strh.w	r2, [r9]
 80279d4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80279d6:	441c      	add	r4, r3
 80279d8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80279da:	f109 0902 	add.w	r9, r9, #2
 80279de:	441e      	add	r6, r3
 80279e0:	f10b 3bff 	add.w	fp, fp, #4294967295
 80279e4:	e647      	b.n	8027676 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80279e6:	2800      	cmp	r0, #0
 80279e8:	f43f aedf 	beq.w	80277aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80279ec:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 80279f0:	9109      	str	r1, [sp, #36]	; 0x24
 80279f2:	0e09      	lsrs	r1, r1, #24
 80279f4:	9112      	str	r1, [sp, #72]	; 0x48
 80279f6:	e6d8      	b.n	80277aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80279f8:	b01d      	add	sp, #116	; 0x74
 80279fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080279fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 80279fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027a02:	b085      	sub	sp, #20
 8027a04:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8027a08:	9102      	str	r1, [sp, #8]
 8027a0a:	2c00      	cmp	r4, #0
 8027a0c:	fb04 7103 	mla	r1, r4, r3, r7
 8027a10:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8027a14:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8027a18:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8027a1c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8027a20:	f2c0 810c 	blt.w	8027c3c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8027a24:	45a6      	cmp	lr, r4
 8027a26:	f340 8109 	ble.w	8027c3c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8027a2a:	2f00      	cmp	r7, #0
 8027a2c:	f2c0 8104 	blt.w	8027c38 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8027a30:	42bb      	cmp	r3, r7
 8027a32:	f340 8101 	ble.w	8027c38 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8027a36:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8027a3a:	1c7a      	adds	r2, r7, #1
 8027a3c:	f100 8101 	bmi.w	8027c42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8027a40:	4293      	cmp	r3, r2
 8027a42:	f340 80fe 	ble.w	8027c42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8027a46:	2e00      	cmp	r6, #0
 8027a48:	f000 80fd 	beq.w	8027c46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8027a4c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8027a50:	3401      	adds	r4, #1
 8027a52:	f100 80fc 	bmi.w	8027c4e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8027a56:	45a6      	cmp	lr, r4
 8027a58:	f340 80f9 	ble.w	8027c4e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8027a5c:	2800      	cmp	r0, #0
 8027a5e:	f000 80f9 	beq.w	8027c54 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8027a62:	2f00      	cmp	r7, #0
 8027a64:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8027a68:	f2c0 80ef 	blt.w	8027c4a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8027a6c:	42bb      	cmp	r3, r7
 8027a6e:	f340 80ec 	ble.w	8027c4a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8027a72:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8027a76:	3701      	adds	r7, #1
 8027a78:	f100 80ef 	bmi.w	8027c5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8027a7c:	42bb      	cmp	r3, r7
 8027a7e:	f340 80ec 	ble.w	8027c5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8027a82:	2e00      	cmp	r6, #0
 8027a84:	f000 80eb 	beq.w	8027c5e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8027a88:	6852      	ldr	r2, [r2, #4]
 8027a8a:	b2b6      	uxth	r6, r6
 8027a8c:	b280      	uxth	r0, r0
 8027a8e:	fb00 fe06 	mul.w	lr, r0, r6
 8027a92:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8027a96:	0136      	lsls	r6, r6, #4
 8027a98:	eba6 070e 	sub.w	r7, r6, lr
 8027a9c:	b280      	uxth	r0, r0
 8027a9e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8027aa2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8027aa6:	b2bf      	uxth	r7, r7
 8027aa8:	1a1b      	subs	r3, r3, r0
 8027aaa:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8027aae:	b29b      	uxth	r3, r3
 8027ab0:	fb07 f60a 	mul.w	r6, r7, sl
 8027ab4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8027ab8:	fb0b 6603 	mla	r6, fp, r3, r6
 8027abc:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8027ac0:	fb00 6609 	mla	r6, r0, r9, r6
 8027ac4:	fb0e 6608 	mla	r6, lr, r8, r6
 8027ac8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8027acc:	9600      	str	r6, [sp, #0]
 8027ace:	2e00      	cmp	r6, #0
 8027ad0:	f000 80af 	beq.w	8027c32 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8027ad4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027ad8:	fb0b fc0c 	mul.w	ip, fp, ip
 8027adc:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8027ae0:	fb0b f505 	mul.w	r5, fp, r5
 8027ae4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8027ae8:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8027aec:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027af0:	44dc      	add	ip, fp
 8027af2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027af6:	9501      	str	r5, [sp, #4]
 8027af8:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8027afc:	9503      	str	r5, [sp, #12]
 8027afe:	9d01      	ldr	r5, [sp, #4]
 8027b00:	9e02      	ldr	r6, [sp, #8]
 8027b02:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8027b06:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8027b0a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8027b0e:	fb0a fc0c 	mul.w	ip, sl, ip
 8027b12:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8027b16:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8027b1a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8027b1e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027b22:	4465      	add	r5, ip
 8027b24:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8027b28:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8027b2c:	fb09 fc0c 	mul.w	ip, r9, ip
 8027b30:	fb09 f904 	mul.w	r9, r9, r4
 8027b34:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8027b38:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8027b3c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8027b40:	fb08 f404 	mul.w	r4, r8, r4
 8027b44:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8027b48:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027b4c:	fb08 f802 	mul.w	r8, r8, r2
 8027b50:	fb0a fa01 	mul.w	sl, sl, r1
 8027b54:	0a22      	lsrs	r2, r4, #8
 8027b56:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8027b5a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027b5e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8027b62:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8027b66:	4414      	add	r4, r2
 8027b68:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8027b6c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8027b70:	0a2d      	lsrs	r5, r5, #8
 8027b72:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8027b76:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8027b7a:	9a03      	ldr	r2, [sp, #12]
 8027b7c:	8836      	ldrh	r6, [r6, #0]
 8027b7e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8027b82:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027b86:	437d      	muls	r5, r7
 8027b88:	4461      	add	r1, ip
 8027b8a:	0a24      	lsrs	r4, r4, #8
 8027b8c:	fb02 5503 	mla	r5, r2, r3, r5
 8027b90:	0a09      	lsrs	r1, r1, #8
 8027b92:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8027b96:	fb04 540e 	mla	r4, r4, lr, r5
 8027b9a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8027b9e:	fb01 4100 	mla	r1, r1, r0, r4
 8027ba2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027ba6:	0a09      	lsrs	r1, r1, #8
 8027ba8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027bac:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8027bb0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8027bb4:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8027bb8:	fb07 f70a 	mul.w	r7, r7, sl
 8027bbc:	fb03 7101 	mla	r1, r3, r1, r7
 8027bc0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027bc4:	9b00      	ldr	r3, [sp, #0]
 8027bc6:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8027bca:	fb0e 1e08 	mla	lr, lr, r8, r1
 8027bce:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8027bd2:	fb00 e101 	mla	r1, r0, r1, lr
 8027bd6:	43da      	mvns	r2, r3
 8027bd8:	1233      	asrs	r3, r6, #8
 8027bda:	b2d2      	uxtb	r2, r2
 8027bdc:	10f0      	asrs	r0, r6, #3
 8027bde:	0a09      	lsrs	r1, r1, #8
 8027be0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8027be4:	00f6      	lsls	r6, r6, #3
 8027be6:	4353      	muls	r3, r2
 8027be8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8027bec:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8027bf0:	b2f6      	uxtb	r6, r6
 8027bf2:	4321      	orrs	r1, r4
 8027bf4:	4350      	muls	r0, r2
 8027bf6:	4356      	muls	r6, r2
 8027bf8:	1c5a      	adds	r2, r3, #1
 8027bfa:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8027bfe:	0c0b      	lsrs	r3, r1, #16
 8027c00:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027c04:	1c42      	adds	r2, r0, #1
 8027c06:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8027c0a:	0a0a      	lsrs	r2, r1, #8
 8027c0c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8027c10:	021b      	lsls	r3, r3, #8
 8027c12:	00d2      	lsls	r2, r2, #3
 8027c14:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027c18:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8027c1c:	4313      	orrs	r3, r2
 8027c1e:	1c72      	adds	r2, r6, #1
 8027c20:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8027c24:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8027c28:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8027c2c:	4319      	orrs	r1, r3
 8027c2e:	9b02      	ldr	r3, [sp, #8]
 8027c30:	8019      	strh	r1, [r3, #0]
 8027c32:	b005      	add	sp, #20
 8027c34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027c38:	2500      	movs	r5, #0
 8027c3a:	e6fe      	b.n	8027a3a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8027c3c:	2100      	movs	r1, #0
 8027c3e:	460d      	mov	r5, r1
 8027c40:	e706      	b.n	8027a50 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027c42:	2100      	movs	r1, #0
 8027c44:	e704      	b.n	8027a50 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027c46:	4631      	mov	r1, r6
 8027c48:	e702      	b.n	8027a50 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027c4a:	2400      	movs	r4, #0
 8027c4c:	e713      	b.n	8027a76 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8027c4e:	2200      	movs	r2, #0
 8027c50:	4614      	mov	r4, r2
 8027c52:	e71a      	b.n	8027a8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027c54:	4602      	mov	r2, r0
 8027c56:	4604      	mov	r4, r0
 8027c58:	e717      	b.n	8027a8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027c5a:	2200      	movs	r2, #0
 8027c5c:	e715      	b.n	8027a8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027c5e:	4632      	mov	r2, r6
 8027c60:	e713      	b.n	8027a8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08027c64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027c64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027c68:	b09b      	sub	sp, #108	; 0x6c
 8027c6a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8027c6e:	9218      	str	r2, [sp, #96]	; 0x60
 8027c70:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8027c72:	9116      	str	r1, [sp, #88]	; 0x58
 8027c74:	9307      	str	r3, [sp, #28]
 8027c76:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8027c7a:	9019      	str	r0, [sp, #100]	; 0x64
 8027c7c:	6850      	ldr	r0, [r2, #4]
 8027c7e:	6812      	ldr	r2, [r2, #0]
 8027c80:	fb00 1303 	mla	r3, r0, r3, r1
 8027c84:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8027c88:	930a      	str	r3, [sp, #40]	; 0x28
 8027c8a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027c8c:	681b      	ldr	r3, [r3, #0]
 8027c8e:	930f      	str	r3, [sp, #60]	; 0x3c
 8027c90:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027c92:	2b00      	cmp	r3, #0
 8027c94:	dc03      	bgt.n	8027c9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8027c96:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027c98:	2b00      	cmp	r3, #0
 8027c9a:	f340 8386 	ble.w	80283aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8027c9e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027ca0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027ca4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027ca8:	1e48      	subs	r0, r1, #1
 8027caa:	1e57      	subs	r7, r2, #1
 8027cac:	9b07      	ldr	r3, [sp, #28]
 8027cae:	2b00      	cmp	r3, #0
 8027cb0:	f340 8166 	ble.w	8027f80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8027cb4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8027cb8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8027cbc:	d406      	bmi.n	8027ccc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027cbe:	4584      	cmp	ip, r0
 8027cc0:	da04      	bge.n	8027ccc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027cc2:	2b00      	cmp	r3, #0
 8027cc4:	db02      	blt.n	8027ccc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027cc6:	42bb      	cmp	r3, r7
 8027cc8:	f2c0 815b 	blt.w	8027f82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8027ccc:	f11c 0c01 	adds.w	ip, ip, #1
 8027cd0:	f100 814b 	bmi.w	8027f6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027cd4:	4561      	cmp	r1, ip
 8027cd6:	f2c0 8148 	blt.w	8027f6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027cda:	3301      	adds	r3, #1
 8027cdc:	f100 8145 	bmi.w	8027f6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027ce0:	429a      	cmp	r2, r3
 8027ce2:	f2c0 8142 	blt.w	8027f6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027ce6:	9b07      	ldr	r3, [sp, #28]
 8027ce8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8027cea:	9317      	str	r3, [sp, #92]	; 0x5c
 8027cec:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027cee:	2b00      	cmp	r3, #0
 8027cf0:	f340 8165 	ble.w	8027fbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027cf4:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8027cf6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027cf8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8027cfc:	689b      	ldr	r3, [r3, #8]
 8027cfe:	1422      	asrs	r2, r4, #16
 8027d00:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8027d04:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8027d08:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8027d0c:	f100 81d5 	bmi.w	80280ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027d10:	f103 38ff 	add.w	r8, r3, #4294967295
 8027d14:	4542      	cmp	r2, r8
 8027d16:	f280 81d0 	bge.w	80280ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027d1a:	f1bc 0f00 	cmp.w	ip, #0
 8027d1e:	f2c0 81cc 	blt.w	80280ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027d22:	f10e 38ff 	add.w	r8, lr, #4294967295
 8027d26:	45c4      	cmp	ip, r8
 8027d28:	f280 81c7 	bge.w	80280ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027d2c:	b21b      	sxth	r3, r3
 8027d2e:	fb0c 2203 	mla	r2, ip, r3, r2
 8027d32:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027d34:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8027d38:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8027d3c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8027d40:	2900      	cmp	r1, #0
 8027d42:	f000 8182 	beq.w	802804a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8027d46:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8027d4a:	950b      	str	r5, [sp, #44]	; 0x2c
 8027d4c:	0e2d      	lsrs	r5, r5, #24
 8027d4e:	9512      	str	r5, [sp, #72]	; 0x48
 8027d50:	b180      	cbz	r0, 8027d74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8027d52:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8027d56:	3b01      	subs	r3, #1
 8027d58:	009b      	lsls	r3, r3, #2
 8027d5a:	3304      	adds	r3, #4
 8027d5c:	eb08 0c03 	add.w	ip, r8, r3
 8027d60:	f858 3003 	ldr.w	r3, [r8, r3]
 8027d64:	9308      	str	r3, [sp, #32]
 8027d66:	0e1b      	lsrs	r3, r3, #24
 8027d68:	9310      	str	r3, [sp, #64]	; 0x40
 8027d6a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8027d6e:	930c      	str	r3, [sp, #48]	; 0x30
 8027d70:	0e1b      	lsrs	r3, r3, #24
 8027d72:	9313      	str	r3, [sp, #76]	; 0x4c
 8027d74:	b289      	uxth	r1, r1
 8027d76:	b280      	uxth	r0, r0
 8027d78:	fb01 f900 	mul.w	r9, r1, r0
 8027d7c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8027d80:	0109      	lsls	r1, r1, #4
 8027d82:	eba1 0809 	sub.w	r8, r1, r9
 8027d86:	b280      	uxth	r0, r0
 8027d88:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8027d8c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8027d8e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027d90:	fa1f f888 	uxth.w	r8, r8
 8027d94:	1a09      	subs	r1, r1, r0
 8027d96:	b289      	uxth	r1, r1
 8027d98:	fb08 f303 	mul.w	r3, r8, r3
 8027d9c:	fb01 330e 	mla	r3, r1, lr, r3
 8027da0:	fb00 3305 	mla	r3, r0, r5, r3
 8027da4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027da6:	fb09 3305 	mla	r3, r9, r5, r3
 8027daa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027dae:	2b00      	cmp	r3, #0
 8027db0:	f000 80d2 	beq.w	8027f58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027db4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8027db8:	d01b      	beq.n	8027df2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8027dba:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8027dbe:	fb0e fa0a 	mul.w	sl, lr, sl
 8027dc2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027dc6:	fb0e fe02 	mul.w	lr, lr, r2
 8027dca:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8027dce:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027dd2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8027dd6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8027dda:	4452      	add	r2, sl
 8027ddc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8027de0:	0a12      	lsrs	r2, r2, #8
 8027de2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027de6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027dea:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8027dee:	ea42 020c 	orr.w	r2, r2, ip
 8027df2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027df4:	2dff      	cmp	r5, #255	; 0xff
 8027df6:	d021      	beq.n	8027e3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8027df8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027dfa:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027dfe:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027e00:	fb05 fb0b 	mul.w	fp, r5, fp
 8027e04:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027e06:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027e0a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027e0c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027e10:	fb05 fa0a 	mul.w	sl, r5, sl
 8027e14:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027e18:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027e1c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027e20:	44de      	add	lr, fp
 8027e22:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027e26:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027e2a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027e2e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027e32:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027e36:	ea4e 050a 	orr.w	r5, lr, sl
 8027e3a:	950b      	str	r5, [sp, #44]	; 0x2c
 8027e3c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027e3e:	2dff      	cmp	r5, #255	; 0xff
 8027e40:	d021      	beq.n	8027e86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8027e42:	9d08      	ldr	r5, [sp, #32]
 8027e44:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027e48:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027e4a:	fb05 fb0b 	mul.w	fp, r5, fp
 8027e4e:	9d08      	ldr	r5, [sp, #32]
 8027e50:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8027e54:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027e56:	fb05 fa0e 	mul.w	sl, r5, lr
 8027e5a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027e5e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027e62:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027e66:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027e6a:	44de      	add	lr, fp
 8027e6c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027e70:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027e74:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027e78:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027e7c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027e80:	ea4e 050a 	orr.w	r5, lr, sl
 8027e84:	9508      	str	r5, [sp, #32]
 8027e86:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027e88:	2dff      	cmp	r5, #255	; 0xff
 8027e8a:	d021      	beq.n	8027ed0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8027e8c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027e8e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027e92:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027e94:	fb05 fb0b 	mul.w	fp, r5, fp
 8027e98:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027e9a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027e9e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027ea0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027ea4:	fb05 fa0a 	mul.w	sl, r5, sl
 8027ea8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027eac:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027eb0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027eb4:	44de      	add	lr, fp
 8027eb6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027eba:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027ebe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027ec2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027ec6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027eca:	ea4e 050a 	orr.w	r5, lr, sl
 8027ece:	950c      	str	r5, [sp, #48]	; 0x30
 8027ed0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027ed2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027ed6:	9d08      	ldr	r5, [sp, #32]
 8027ed8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8027edc:	fb08 fc0c 	mul.w	ip, r8, ip
 8027ee0:	fb01 cc0e 	mla	ip, r1, lr, ip
 8027ee4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027ee8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027eea:	fb00 cc0e 	mla	ip, r0, lr, ip
 8027eee:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027ef2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027ef4:	fb09 cc0e 	mla	ip, r9, lr, ip
 8027ef8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8027efc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027f00:	fb08 f80e 	mul.w	r8, r8, lr
 8027f04:	fb01 8202 	mla	r2, r1, r2, r8
 8027f08:	9908      	ldr	r1, [sp, #32]
 8027f0a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8027f0e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8027f10:	fb00 220a 	mla	r2, r0, sl, r2
 8027f14:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8027f18:	fb09 2900 	mla	r9, r9, r0, r2
 8027f1c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027f20:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027f24:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027f28:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8027f2c:	ea4c 0c09 	orr.w	ip, ip, r9
 8027f30:	2bff      	cmp	r3, #255	; 0xff
 8027f32:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8027f36:	f040 8091 	bne.w	802805c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8027f3a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8027f3e:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8027f42:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027f46:	f022 0207 	bic.w	r2, r2, #7
 8027f4a:	431a      	orrs	r2, r3
 8027f4c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8027f50:	ea4c 0c02 	orr.w	ip, ip, r2
 8027f54:	f8a7 c000 	strh.w	ip, [r7]
 8027f58:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8027f5a:	441c      	add	r4, r3
 8027f5c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027f5e:	441e      	add	r6, r3
 8027f60:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027f62:	3b01      	subs	r3, #1
 8027f64:	3702      	adds	r7, #2
 8027f66:	9317      	str	r3, [sp, #92]	; 0x5c
 8027f68:	e6c0      	b.n	8027cec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8027f6a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8027f6c:	441c      	add	r4, r3
 8027f6e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027f70:	441e      	add	r6, r3
 8027f72:	9b07      	ldr	r3, [sp, #28]
 8027f74:	3b01      	subs	r3, #1
 8027f76:	9307      	str	r3, [sp, #28]
 8027f78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027f7a:	3302      	adds	r3, #2
 8027f7c:	930a      	str	r3, [sp, #40]	; 0x28
 8027f7e:	e695      	b.n	8027cac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8027f80:	d024      	beq.n	8027fcc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8027f82:	9b07      	ldr	r3, [sp, #28]
 8027f84:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8027f86:	3b01      	subs	r3, #1
 8027f88:	fb00 4003 	mla	r0, r0, r3, r4
 8027f8c:	1400      	asrs	r0, r0, #16
 8027f8e:	f53f aeaa 	bmi.w	8027ce6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027f92:	3901      	subs	r1, #1
 8027f94:	4288      	cmp	r0, r1
 8027f96:	f6bf aea6 	bge.w	8027ce6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027f9a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8027f9c:	fb01 6303 	mla	r3, r1, r3, r6
 8027fa0:	141b      	asrs	r3, r3, #16
 8027fa2:	f53f aea0 	bmi.w	8027ce6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027fa6:	3a01      	subs	r2, #1
 8027fa8:	4293      	cmp	r3, r2
 8027faa:	f6bf ae9c 	bge.w	8027ce6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027fae:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8027fb2:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8027fb6:	f1bb 0f00 	cmp.w	fp, #0
 8027fba:	f300 809a 	bgt.w	80280f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8027fbe:	9b07      	ldr	r3, [sp, #28]
 8027fc0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8027fc4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027fc6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8027fca:	930a      	str	r3, [sp, #40]	; 0x28
 8027fcc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027fce:	2b00      	cmp	r3, #0
 8027fd0:	f340 81eb 	ble.w	80283aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8027fd4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027fd8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8027fdc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8027fe0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027fe2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027fe6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8027fea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8027fee:	eef0 6a62 	vmov.f32	s13, s5
 8027ff2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027ff6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027ffa:	ee77 2a62 	vsub.f32	s5, s14, s5
 8027ffe:	ee16 4a90 	vmov	r4, s13
 8028002:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8028006:	eef0 6a43 	vmov.f32	s13, s6
 802800a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802800e:	ee12 2a90 	vmov	r2, s5
 8028012:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8028016:	fb92 f3f3 	sdiv	r3, r2, r3
 802801a:	ee13 2a10 	vmov	r2, s6
 802801e:	9327      	str	r3, [sp, #156]	; 0x9c
 8028020:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028022:	fb92 f3f3 	sdiv	r3, r2, r3
 8028026:	9328      	str	r3, [sp, #160]	; 0xa0
 8028028:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802802a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 802802c:	3b01      	subs	r3, #1
 802802e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028032:	9316      	str	r3, [sp, #88]	; 0x58
 8028034:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028036:	bf08      	it	eq
 8028038:	4613      	moveq	r3, r2
 802803a:	ee16 6a90 	vmov	r6, s13
 802803e:	9307      	str	r3, [sp, #28]
 8028040:	eeb0 3a67 	vmov.f32	s6, s15
 8028044:	eef0 2a47 	vmov.f32	s5, s14
 8028048:	e622      	b.n	8027c90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 802804a:	2800      	cmp	r0, #0
 802804c:	f43f ae92 	beq.w	8027d74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8028050:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8028054:	9308      	str	r3, [sp, #32]
 8028056:	0e1b      	lsrs	r3, r3, #24
 8028058:	9310      	str	r3, [sp, #64]	; 0x40
 802805a:	e68b      	b.n	8027d74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802805c:	8839      	ldrh	r1, [r7, #0]
 802805e:	4dd4      	ldr	r5, [pc, #848]	; (80283b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8028060:	43db      	mvns	r3, r3
 8028062:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8028066:	fa5f f883 	uxtb.w	r8, r3
 802806a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 802806e:	fb0e fe08 	mul.w	lr, lr, r8
 8028072:	10c8      	asrs	r0, r1, #3
 8028074:	00cb      	lsls	r3, r1, #3
 8028076:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802807a:	f10e 0101 	add.w	r1, lr, #1
 802807e:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8028082:	fb00 f008 	mul.w	r0, r0, r8
 8028086:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802808a:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802808e:	f100 0e01 	add.w	lr, r0, #1
 8028092:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8028096:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802809a:	b2db      	uxtb	r3, r3
 802809c:	b2c9      	uxtb	r1, r1
 802809e:	00d2      	lsls	r2, r2, #3
 80280a0:	fb03 f308 	mul.w	r3, r3, r8
 80280a4:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 80280a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80280ac:	430a      	orrs	r2, r1
 80280ae:	1c59      	adds	r1, r3, #1
 80280b0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80280b4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80280b8:	e748      	b.n	8027f4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 80280ba:	f112 0801 	adds.w	r8, r2, #1
 80280be:	f53f af4b 	bmi.w	8027f58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80280c2:	4543      	cmp	r3, r8
 80280c4:	f6ff af48 	blt.w	8027f58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80280c8:	f11c 0801 	adds.w	r8, ip, #1
 80280cc:	f53f af44 	bmi.w	8027f58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80280d0:	45c6      	cmp	lr, r8
 80280d2:	f6ff af41 	blt.w	8027f58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80280d6:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 80280da:	fa0f f28e 	sxth.w	r2, lr
 80280de:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80280e2:	9200      	str	r2, [sp, #0]
 80280e4:	b21b      	sxth	r3, r3
 80280e6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80280e8:	9819      	ldr	r0, [sp, #100]	; 0x64
 80280ea:	4639      	mov	r1, r7
 80280ec:	f7ff fc87 	bl	80279fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80280f0:	e732      	b.n	8027f58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80280f2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80280f4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80280f6:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 80280fa:	1421      	asrs	r1, r4, #16
 80280fc:	1433      	asrs	r3, r6, #16
 80280fe:	fb07 1303 	mla	r3, r7, r3, r1
 8028102:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8028104:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8028108:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802810c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8028110:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8028114:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8028118:	2a00      	cmp	r2, #0
 802811a:	f000 8107 	beq.w	802832c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802811e:	684d      	ldr	r5, [r1, #4]
 8028120:	950d      	str	r5, [sp, #52]	; 0x34
 8028122:	0e2d      	lsrs	r5, r5, #24
 8028124:	9514      	str	r5, [sp, #80]	; 0x50
 8028126:	b178      	cbz	r0, 8028148 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8028128:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 802812c:	3f01      	subs	r7, #1
 802812e:	00bf      	lsls	r7, r7, #2
 8028130:	3704      	adds	r7, #4
 8028132:	eb01 0e07 	add.w	lr, r1, r7
 8028136:	59c9      	ldr	r1, [r1, r7]
 8028138:	9109      	str	r1, [sp, #36]	; 0x24
 802813a:	0e09      	lsrs	r1, r1, #24
 802813c:	9111      	str	r1, [sp, #68]	; 0x44
 802813e:	f8de 1004 	ldr.w	r1, [lr, #4]
 8028142:	910e      	str	r1, [sp, #56]	; 0x38
 8028144:	0e09      	lsrs	r1, r1, #24
 8028146:	9115      	str	r1, [sp, #84]	; 0x54
 8028148:	b292      	uxth	r2, r2
 802814a:	b280      	uxth	r0, r0
 802814c:	fb02 f900 	mul.w	r9, r2, r0
 8028150:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8028154:	0112      	lsls	r2, r2, #4
 8028156:	eba2 0e09 	sub.w	lr, r2, r9
 802815a:	b280      	uxth	r0, r0
 802815c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8028160:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8028162:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8028164:	fa1f fe8e 	uxth.w	lr, lr
 8028168:	1a09      	subs	r1, r1, r0
 802816a:	b289      	uxth	r1, r1
 802816c:	fb0e f202 	mul.w	r2, lr, r2
 8028170:	fb01 220c 	mla	r2, r1, ip, r2
 8028174:	fb00 2205 	mla	r2, r0, r5, r2
 8028178:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802817a:	fb09 2205 	mla	r2, r9, r5, r2
 802817e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8028182:	2a00      	cmp	r2, #0
 8028184:	f000 80c9 	beq.w	802831a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8028188:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802818c:	d019      	beq.n	80281c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802818e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8028192:	fb0c fa0a 	mul.w	sl, ip, sl
 8028196:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802819a:	fb0c fc03 	mul.w	ip, ip, r3
 802819e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80281a2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80281a6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80281aa:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80281ae:	4453      	add	r3, sl
 80281b0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80281b4:	0a1b      	lsrs	r3, r3, #8
 80281b6:	0a3f      	lsrs	r7, r7, #8
 80281b8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80281bc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80281c0:	433b      	orrs	r3, r7
 80281c2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80281c4:	2dff      	cmp	r5, #255	; 0xff
 80281c6:	d020      	beq.n	802820a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 80281c8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80281ca:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80281ce:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80281d0:	436f      	muls	r7, r5
 80281d2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80281d4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80281d8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80281da:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80281de:	fb05 fa0a 	mul.w	sl, r5, sl
 80281e2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80281e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80281ea:	44bc      	add	ip, r7
 80281ec:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80281f0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80281f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80281f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80281fc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028200:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028204:	ea4c 050a 	orr.w	r5, ip, sl
 8028208:	950d      	str	r5, [sp, #52]	; 0x34
 802820a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802820c:	2dff      	cmp	r5, #255	; 0xff
 802820e:	d020      	beq.n	8028252 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8028210:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8028212:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8028216:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8028218:	436f      	muls	r7, r5
 802821a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802821c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8028220:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8028222:	fb05 fa0c 	mul.w	sl, r5, ip
 8028226:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802822a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802822e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8028232:	44bc      	add	ip, r7
 8028234:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8028238:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802823c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028240:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028244:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028248:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802824c:	ea4c 050a 	orr.w	r5, ip, sl
 8028250:	9509      	str	r5, [sp, #36]	; 0x24
 8028252:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8028254:	2dff      	cmp	r5, #255	; 0xff
 8028256:	d020      	beq.n	802829a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8028258:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802825a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802825e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8028260:	436f      	muls	r7, r5
 8028262:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8028264:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8028268:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802826a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802826e:	fb05 fa0a 	mul.w	sl, r5, sl
 8028272:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8028276:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802827a:	44bc      	add	ip, r7
 802827c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8028280:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8028284:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028288:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802828c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028290:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028294:	ea4c 050a 	orr.w	r5, ip, sl
 8028298:	950e      	str	r5, [sp, #56]	; 0x38
 802829a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802829c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80282a0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80282a2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80282a6:	fb0e f707 	mul.w	r7, lr, r7
 80282aa:	fb01 770c 	mla	r7, r1, ip, r7
 80282ae:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80282b2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80282b4:	fb00 770c 	mla	r7, r0, ip, r7
 80282b8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80282bc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80282be:	fb09 770c 	mla	r7, r9, ip, r7
 80282c2:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80282c6:	fb0e fe0c 	mul.w	lr, lr, ip
 80282ca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80282ce:	fb01 e303 	mla	r3, r1, r3, lr
 80282d2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80282d4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80282d8:	990e      	ldr	r1, [sp, #56]	; 0x38
 80282da:	fb00 330a 	mla	r3, r0, sl, r3
 80282de:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80282e2:	fb09 3c0c 	mla	ip, r9, ip, r3
 80282e6:	0a3f      	lsrs	r7, r7, #8
 80282e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80282ec:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80282f0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80282f4:	ea47 070c 	orr.w	r7, r7, ip
 80282f8:	2aff      	cmp	r2, #255	; 0xff
 80282fa:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80282fe:	d11e      	bne.n	802833e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8028300:	097a      	lsrs	r2, r7, #5
 8028302:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8028306:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802830a:	f023 0307 	bic.w	r3, r3, #7
 802830e:	4313      	orrs	r3, r2
 8028310:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8028314:	431f      	orrs	r7, r3
 8028316:	f8a8 7000 	strh.w	r7, [r8]
 802831a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802831c:	441c      	add	r4, r3
 802831e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028320:	f108 0802 	add.w	r8, r8, #2
 8028324:	441e      	add	r6, r3
 8028326:	f10b 3bff 	add.w	fp, fp, #4294967295
 802832a:	e644      	b.n	8027fb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802832c:	2800      	cmp	r0, #0
 802832e:	f43f af0b 	beq.w	8028148 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8028332:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8028336:	9109      	str	r1, [sp, #36]	; 0x24
 8028338:	0e09      	lsrs	r1, r1, #24
 802833a:	9111      	str	r1, [sp, #68]	; 0x44
 802833c:	e704      	b.n	8028148 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802833e:	f8b8 1000 	ldrh.w	r1, [r8]
 8028342:	43d2      	mvns	r2, r2
 8028344:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8028348:	fa5f fe82 	uxtb.w	lr, r2
 802834c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8028350:	fb0c fc0e 	mul.w	ip, ip, lr
 8028354:	10c8      	asrs	r0, r1, #3
 8028356:	00ca      	lsls	r2, r1, #3
 8028358:	f10c 0101 	add.w	r1, ip, #1
 802835c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028360:	0c39      	lsrs	r1, r7, #16
 8028362:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028366:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802836a:	4911      	ldr	r1, [pc, #68]	; (80283b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802836c:	fb00 f00e 	mul.w	r0, r0, lr
 8028370:	fa5f fc8c 	uxtb.w	ip, ip
 8028374:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8028378:	b2d2      	uxtb	r2, r2
 802837a:	1c41      	adds	r1, r0, #1
 802837c:	fb02 f20e 	mul.w	r2, r2, lr
 8028380:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8028384:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8028388:	1c51      	adds	r1, r2, #1
 802838a:	00c0      	lsls	r0, r0, #3
 802838c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8028390:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028394:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8028398:	ea4c 0c00 	orr.w	ip, ip, r0
 802839c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80283a0:	ea47 0c0c 	orr.w	ip, r7, ip
 80283a4:	f8a8 c000 	strh.w	ip, [r8]
 80283a8:	e7b7      	b.n	802831a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80283aa:	b01b      	add	sp, #108	; 0x6c
 80283ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80283b0:	fffff800 	.word	0xfffff800

080283b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80283b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80283b8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80283bc:	2d00      	cmp	r5, #0
 80283be:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80283c2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80283c6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80283ca:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80283ce:	fb05 0e03 	mla	lr, r5, r3, r0
 80283d2:	f2c0 808c 	blt.w	80284ee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80283d6:	45a9      	cmp	r9, r5
 80283d8:	f340 8089 	ble.w	80284ee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80283dc:	2800      	cmp	r0, #0
 80283de:	f2c0 8084 	blt.w	80284ea <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80283e2:	4580      	cmp	r8, r0
 80283e4:	f340 8081 	ble.w	80284ea <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80283e8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80283ec:	f01e 0f01 	tst.w	lr, #1
 80283f0:	5d16      	ldrb	r6, [r2, r4]
 80283f2:	bf0c      	ite	eq
 80283f4:	f006 060f 	andeq.w	r6, r6, #15
 80283f8:	1136      	asrne	r6, r6, #4
 80283fa:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80283fe:	b2f6      	uxtb	r6, r6
 8028400:	1c44      	adds	r4, r0, #1
 8028402:	d477      	bmi.n	80284f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8028404:	45a0      	cmp	r8, r4
 8028406:	dd75      	ble.n	80284f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8028408:	2f00      	cmp	r7, #0
 802840a:	d075      	beq.n	80284f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 802840c:	f10e 0a01 	add.w	sl, lr, #1
 8028410:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8028414:	f01a 0f01 	tst.w	sl, #1
 8028418:	5d14      	ldrb	r4, [r2, r4]
 802841a:	bf0c      	ite	eq
 802841c:	f004 040f 	andeq.w	r4, r4, #15
 8028420:	1124      	asrne	r4, r4, #4
 8028422:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8028426:	b2e4      	uxtb	r4, r4
 8028428:	3501      	adds	r5, #1
 802842a:	d469      	bmi.n	8028500 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802842c:	45a9      	cmp	r9, r5
 802842e:	dd67      	ble.n	8028500 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8028430:	f1bc 0f00 	cmp.w	ip, #0
 8028434:	d067      	beq.n	8028506 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8028436:	2800      	cmp	r0, #0
 8028438:	db60      	blt.n	80284fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802843a:	4580      	cmp	r8, r0
 802843c:	dd5e      	ble.n	80284fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802843e:	eb03 090e 	add.w	r9, r3, lr
 8028442:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8028446:	f019 0f01 	tst.w	r9, #1
 802844a:	5d55      	ldrb	r5, [r2, r5]
 802844c:	bf0c      	ite	eq
 802844e:	f005 050f 	andeq.w	r5, r5, #15
 8028452:	112d      	asrne	r5, r5, #4
 8028454:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8028458:	b2ed      	uxtb	r5, r5
 802845a:	3001      	adds	r0, #1
 802845c:	d456      	bmi.n	802850c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802845e:	4580      	cmp	r8, r0
 8028460:	dd54      	ble.n	802850c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8028462:	2f00      	cmp	r7, #0
 8028464:	d054      	beq.n	8028510 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8028466:	3301      	adds	r3, #1
 8028468:	449e      	add	lr, r3
 802846a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802846e:	f01e 0f01 	tst.w	lr, #1
 8028472:	5cd0      	ldrb	r0, [r2, r3]
 8028474:	bf0c      	ite	eq
 8028476:	f000 000f 	andeq.w	r0, r0, #15
 802847a:	1100      	asrne	r0, r0, #4
 802847c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028480:	b2c3      	uxtb	r3, r0
 8028482:	b2ba      	uxth	r2, r7
 8028484:	fa1f fc8c 	uxth.w	ip, ip
 8028488:	fb02 f00c 	mul.w	r0, r2, ip
 802848c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8028490:	0112      	lsls	r2, r2, #4
 8028492:	fa1f fc8c 	uxth.w	ip, ip
 8028496:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802849a:	1a12      	subs	r2, r2, r0
 802849c:	eba7 070c 	sub.w	r7, r7, ip
 80284a0:	b292      	uxth	r2, r2
 80284a2:	b2bf      	uxth	r7, r7
 80284a4:	4362      	muls	r2, r4
 80284a6:	fb06 2207 	mla	r2, r6, r7, r2
 80284aa:	fb0c 2505 	mla	r5, ip, r5, r2
 80284ae:	fb00 5303 	mla	r3, r0, r3, r5
 80284b2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80284b6:	b1b3      	cbz	r3, 80284e6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80284b8:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 80284bc:	435a      	muls	r2, r3
 80284be:	1c53      	adds	r3, r2, #1
 80284c0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80284c4:	4a2d      	ldr	r2, [pc, #180]	; (802857c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80284c6:	121b      	asrs	r3, r3, #8
 80284c8:	6812      	ldr	r2, [r2, #0]
 80284ca:	2bff      	cmp	r3, #255	; 0xff
 80284cc:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80284d0:	d120      	bne.n	8028514 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 80284d2:	4b2b      	ldr	r3, [pc, #172]	; (8028580 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80284d4:	0950      	lsrs	r0, r2, #5
 80284d6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80284da:	4033      	ands	r3, r6
 80284dc:	4318      	orrs	r0, r3
 80284de:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80284e2:	4302      	orrs	r2, r0
 80284e4:	800a      	strh	r2, [r1, #0]
 80284e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80284ea:	2600      	movs	r6, #0
 80284ec:	e788      	b.n	8028400 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80284ee:	2400      	movs	r4, #0
 80284f0:	4626      	mov	r6, r4
 80284f2:	e799      	b.n	8028428 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80284f4:	2400      	movs	r4, #0
 80284f6:	e797      	b.n	8028428 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80284f8:	463c      	mov	r4, r7
 80284fa:	e795      	b.n	8028428 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80284fc:	2500      	movs	r5, #0
 80284fe:	e7ac      	b.n	802845a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8028500:	2300      	movs	r3, #0
 8028502:	461d      	mov	r5, r3
 8028504:	e7bd      	b.n	8028482 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028506:	4663      	mov	r3, ip
 8028508:	4665      	mov	r5, ip
 802850a:	e7ba      	b.n	8028482 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802850c:	2300      	movs	r3, #0
 802850e:	e7b8      	b.n	8028482 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028510:	463b      	mov	r3, r7
 8028512:	e7b6      	b.n	8028482 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028514:	880d      	ldrh	r5, [r1, #0]
 8028516:	b29f      	uxth	r7, r3
 8028518:	122c      	asrs	r4, r5, #8
 802851a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802851e:	43db      	mvns	r3, r3
 8028520:	b2db      	uxtb	r3, r3
 8028522:	fb10 f007 	smulbb	r0, r0, r7
 8028526:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802852a:	fb04 0403 	mla	r4, r4, r3, r0
 802852e:	b2f6      	uxtb	r6, r6
 8028530:	10e8      	asrs	r0, r5, #3
 8028532:	b2d2      	uxtb	r2, r2
 8028534:	00ed      	lsls	r5, r5, #3
 8028536:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802853a:	fb12 f207 	smulbb	r2, r2, r7
 802853e:	fb16 f607 	smulbb	r6, r6, r7
 8028542:	b2ed      	uxtb	r5, r5
 8028544:	b2a4      	uxth	r4, r4
 8028546:	fb00 6603 	mla	r6, r0, r3, r6
 802854a:	fb05 2303 	mla	r3, r5, r3, r2
 802854e:	b29a      	uxth	r2, r3
 8028550:	1c63      	adds	r3, r4, #1
 8028552:	b2b0      	uxth	r0, r6
 8028554:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8028558:	1c53      	adds	r3, r2, #1
 802855a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802855e:	1c42      	adds	r2, r0, #1
 8028560:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8028564:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8028568:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802856c:	0940      	lsrs	r0, r0, #5
 802856e:	4323      	orrs	r3, r4
 8028570:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028574:	4303      	orrs	r3, r0
 8028576:	800b      	strh	r3, [r1, #0]
 8028578:	e7b5      	b.n	80284e6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802857a:	bf00      	nop
 802857c:	2001385c 	.word	0x2001385c
 8028580:	00fff800 	.word	0x00fff800

08028584 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8028584:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028588:	b097      	sub	sp, #92	; 0x5c
 802858a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 802858e:	9214      	str	r2, [sp, #80]	; 0x50
 8028590:	9309      	str	r3, [sp, #36]	; 0x24
 8028592:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8028594:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8028598:	910d      	str	r1, [sp, #52]	; 0x34
 802859a:	930f      	str	r3, [sp, #60]	; 0x3c
 802859c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80285a0:	9015      	str	r0, [sp, #84]	; 0x54
 80285a2:	6850      	ldr	r0, [r2, #4]
 80285a4:	6812      	ldr	r2, [r2, #0]
 80285a6:	fb00 1303 	mla	r3, r0, r3, r1
 80285aa:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80285ae:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80285b0:	689b      	ldr	r3, [r3, #8]
 80285b2:	3301      	adds	r3, #1
 80285b4:	f023 0301 	bic.w	r3, r3, #1
 80285b8:	930a      	str	r3, [sp, #40]	; 0x28
 80285ba:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80285bc:	681f      	ldr	r7, [r3, #0]
 80285be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80285c0:	2b00      	cmp	r3, #0
 80285c2:	dc03      	bgt.n	80285cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80285c4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80285c6:	2b00      	cmp	r3, #0
 80285c8:	f340 8287 	ble.w	8028ada <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80285cc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80285ce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80285d2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80285d6:	1e48      	subs	r0, r1, #1
 80285d8:	f102 3cff 	add.w	ip, r2, #4294967295
 80285dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80285de:	2b00      	cmp	r3, #0
 80285e0:	f340 80c4 	ble.w	802876c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80285e4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80285e8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80285ec:	d406      	bmi.n	80285fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80285ee:	4586      	cmp	lr, r0
 80285f0:	da04      	bge.n	80285fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80285f2:	2b00      	cmp	r3, #0
 80285f4:	db02      	blt.n	80285fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80285f6:	4563      	cmp	r3, ip
 80285f8:	f2c0 80b9 	blt.w	802876e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80285fc:	f11e 0e01 	adds.w	lr, lr, #1
 8028600:	f100 80aa 	bmi.w	8028758 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028604:	4571      	cmp	r1, lr
 8028606:	f2c0 80a7 	blt.w	8028758 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802860a:	3301      	adds	r3, #1
 802860c:	f100 80a4 	bmi.w	8028758 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028610:	429a      	cmp	r2, r3
 8028612:	f2c0 80a1 	blt.w	8028758 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028616:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028618:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 802861c:	930e      	str	r3, [sp, #56]	; 0x38
 802861e:	46c8      	mov	r8, r9
 8028620:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8028622:	2b00      	cmp	r3, #0
 8028624:	f340 80c3 	ble.w	80287ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8028628:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802862a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802862e:	1423      	asrs	r3, r4, #16
 8028630:	ea4f 4026 	mov.w	r0, r6, asr #16
 8028634:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8028638:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802863c:	f100 814d 	bmi.w	80288da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8028640:	f10c 3bff 	add.w	fp, ip, #4294967295
 8028644:	455b      	cmp	r3, fp
 8028646:	f280 8148 	bge.w	80288da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802864a:	2800      	cmp	r0, #0
 802864c:	f2c0 8145 	blt.w	80288da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8028650:	f10e 3bff 	add.w	fp, lr, #4294967295
 8028654:	4558      	cmp	r0, fp
 8028656:	f280 8140 	bge.w	80288da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802865a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802865c:	fb00 3305 	mla	r3, r0, r5, r3
 8028660:	0858      	lsrs	r0, r3, #1
 8028662:	07dd      	lsls	r5, r3, #31
 8028664:	f817 c000 	ldrb.w	ip, [r7, r0]
 8028668:	bf54      	ite	pl
 802866a:	f00c 0c0f 	andpl.w	ip, ip, #15
 802866e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028672:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028676:	fa5f fc8c 	uxtb.w	ip, ip
 802867a:	2a00      	cmp	r2, #0
 802867c:	f000 80db 	beq.w	8028836 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8028680:	1c58      	adds	r0, r3, #1
 8028682:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8028686:	07c0      	lsls	r0, r0, #31
 8028688:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802868c:	bf54      	ite	pl
 802868e:	f00e 0e0f 	andpl.w	lr, lr, #15
 8028692:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8028696:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802869a:	fa5f f08e 	uxtb.w	r0, lr
 802869e:	9010      	str	r0, [sp, #64]	; 0x40
 80286a0:	b1c9      	cbz	r1, 80286d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80286a2:	4453      	add	r3, sl
 80286a4:	0858      	lsrs	r0, r3, #1
 80286a6:	07dd      	lsls	r5, r3, #31
 80286a8:	5c38      	ldrb	r0, [r7, r0]
 80286aa:	bf54      	ite	pl
 80286ac:	f000 000f 	andpl.w	r0, r0, #15
 80286b0:	1100      	asrmi	r0, r0, #4
 80286b2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80286b6:	3301      	adds	r3, #1
 80286b8:	b2c0      	uxtb	r0, r0
 80286ba:	900b      	str	r0, [sp, #44]	; 0x2c
 80286bc:	0858      	lsrs	r0, r3, #1
 80286be:	07dd      	lsls	r5, r3, #31
 80286c0:	f817 e000 	ldrb.w	lr, [r7, r0]
 80286c4:	bf54      	ite	pl
 80286c6:	f00e 030f 	andpl.w	r3, lr, #15
 80286ca:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80286ce:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80286d2:	b2db      	uxtb	r3, r3
 80286d4:	9311      	str	r3, [sp, #68]	; 0x44
 80286d6:	b292      	uxth	r2, r2
 80286d8:	b289      	uxth	r1, r1
 80286da:	fb02 f301 	mul.w	r3, r2, r1
 80286de:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80286e2:	0112      	lsls	r2, r2, #4
 80286e4:	b289      	uxth	r1, r1
 80286e6:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80286ea:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80286ec:	1ad2      	subs	r2, r2, r3
 80286ee:	1a40      	subs	r0, r0, r1
 80286f0:	b292      	uxth	r2, r2
 80286f2:	436a      	muls	r2, r5
 80286f4:	b280      	uxth	r0, r0
 80286f6:	fb0c 2c00 	mla	ip, ip, r0, r2
 80286fa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80286fc:	fb01 c102 	mla	r1, r1, r2, ip
 8028700:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8028702:	fb03 1302 	mla	r3, r3, r2, r1
 8028706:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802870a:	b1db      	cbz	r3, 8028744 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802870c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802870e:	4353      	muls	r3, r2
 8028710:	1c5a      	adds	r2, r3, #1
 8028712:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028716:	4ac6      	ldr	r2, [pc, #792]	; (8028a30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8028718:	121b      	asrs	r3, r3, #8
 802871a:	6812      	ldr	r2, [r2, #0]
 802871c:	2bff      	cmp	r3, #255	; 0xff
 802871e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8028722:	f040 8099 	bne.w	8028858 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8028726:	0953      	lsrs	r3, r2, #5
 8028728:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802872c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8028730:	f02c 0c07 	bic.w	ip, ip, #7
 8028734:	ea43 0c0c 	orr.w	ip, r3, ip
 8028738:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802873c:	ea4c 0202 	orr.w	r2, ip, r2
 8028740:	f8a8 2000 	strh.w	r2, [r8]
 8028744:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8028746:	441c      	add	r4, r3
 8028748:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802874a:	441e      	add	r6, r3
 802874c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802874e:	3b01      	subs	r3, #1
 8028750:	f108 0802 	add.w	r8, r8, #2
 8028754:	930e      	str	r3, [sp, #56]	; 0x38
 8028756:	e763      	b.n	8028620 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8028758:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802875a:	441c      	add	r4, r3
 802875c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802875e:	441e      	add	r6, r3
 8028760:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028762:	3b01      	subs	r3, #1
 8028764:	9309      	str	r3, [sp, #36]	; 0x24
 8028766:	f109 0902 	add.w	r9, r9, #2
 802876a:	e737      	b.n	80285dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802876c:	d024      	beq.n	80287b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802876e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028770:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8028772:	3b01      	subs	r3, #1
 8028774:	fb00 4003 	mla	r0, r0, r3, r4
 8028778:	1400      	asrs	r0, r0, #16
 802877a:	f53f af4c 	bmi.w	8028616 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802877e:	3901      	subs	r1, #1
 8028780:	4288      	cmp	r0, r1
 8028782:	f6bf af48 	bge.w	8028616 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028786:	9924      	ldr	r1, [sp, #144]	; 0x90
 8028788:	fb01 6303 	mla	r3, r1, r3, r6
 802878c:	141b      	asrs	r3, r3, #16
 802878e:	f53f af42 	bmi.w	8028616 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028792:	3a01      	subs	r2, #1
 8028794:	4293      	cmp	r3, r2
 8028796:	f6bf af3e 	bge.w	8028616 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802879a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 802879e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80287a2:	930e      	str	r3, [sp, #56]	; 0x38
 80287a4:	46c8      	mov	r8, r9
 80287a6:	f1bb 0f00 	cmp.w	fp, #0
 80287aa:	f300 80b7 	bgt.w	802891c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80287ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80287b0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80287b4:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80287b8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80287ba:	2b00      	cmp	r3, #0
 80287bc:	f340 818d 	ble.w	8028ada <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80287c0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80287c4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80287c8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80287cc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80287ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80287d2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80287d6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80287da:	eef0 6a62 	vmov.f32	s13, s5
 80287de:	ee61 7a27 	vmul.f32	s15, s2, s15
 80287e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80287e6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80287ea:	ee16 4a90 	vmov	r4, s13
 80287ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80287f2:	eef0 6a43 	vmov.f32	s13, s6
 80287f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80287fa:	ee12 2a90 	vmov	r2, s5
 80287fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8028802:	fb92 f3f3 	sdiv	r3, r2, r3
 8028806:	ee13 2a10 	vmov	r2, s6
 802880a:	9323      	str	r3, [sp, #140]	; 0x8c
 802880c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802880e:	fb92 f3f3 	sdiv	r3, r2, r3
 8028812:	9324      	str	r3, [sp, #144]	; 0x90
 8028814:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8028816:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8028818:	3b01      	subs	r3, #1
 802881a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802881e:	930d      	str	r3, [sp, #52]	; 0x34
 8028820:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028822:	bf08      	it	eq
 8028824:	4613      	moveq	r3, r2
 8028826:	ee16 6a90 	vmov	r6, s13
 802882a:	9309      	str	r3, [sp, #36]	; 0x24
 802882c:	eeb0 3a67 	vmov.f32	s6, s15
 8028830:	eef0 2a47 	vmov.f32	s5, s14
 8028834:	e6c3      	b.n	80285be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8028836:	2900      	cmp	r1, #0
 8028838:	f43f af4d 	beq.w	80286d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802883c:	eb0a 0003 	add.w	r0, sl, r3
 8028840:	0843      	lsrs	r3, r0, #1
 8028842:	07c0      	lsls	r0, r0, #31
 8028844:	5cfb      	ldrb	r3, [r7, r3]
 8028846:	bf54      	ite	pl
 8028848:	f003 030f 	andpl.w	r3, r3, #15
 802884c:	111b      	asrmi	r3, r3, #4
 802884e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028852:	b2db      	uxtb	r3, r3
 8028854:	930b      	str	r3, [sp, #44]	; 0x2c
 8028856:	e73e      	b.n	80286d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8028858:	f8b8 e000 	ldrh.w	lr, [r8]
 802885c:	fa1f fb83 	uxth.w	fp, r3
 8028860:	ea4f 202e 	mov.w	r0, lr, asr #8
 8028864:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8028868:	43db      	mvns	r3, r3
 802886a:	b2db      	uxtb	r3, r3
 802886c:	fb11 f10b 	smulbb	r1, r1, fp
 8028870:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8028874:	fb00 1003 	mla	r0, r0, r3, r1
 8028878:	fa5f fc8c 	uxtb.w	ip, ip
 802887c:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8028880:	b2d2      	uxtb	r2, r2
 8028882:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8028886:	b280      	uxth	r0, r0
 8028888:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802888c:	fb1c fc0b 	smulbb	ip, ip, fp
 8028890:	fa5f fe8e 	uxtb.w	lr, lr
 8028894:	fb12 fb0b 	smulbb	fp, r2, fp
 8028898:	fb01 cc03 	mla	ip, r1, r3, ip
 802889c:	fb0e bb03 	mla	fp, lr, r3, fp
 80288a0:	1c43      	adds	r3, r0, #1
 80288a2:	fa1f fc8c 	uxth.w	ip, ip
 80288a6:	fa1f fb8b 	uxth.w	fp, fp
 80288aa:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80288ae:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 80288b2:	f10c 0101 	add.w	r1, ip, #1
 80288b6:	f10b 0001 	add.w	r0, fp, #1
 80288ba:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80288be:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80288c2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80288c6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80288ca:	4318      	orrs	r0, r3
 80288cc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80288d0:	ea40 000c 	orr.w	r0, r0, ip
 80288d4:	f8a8 0000 	strh.w	r0, [r8]
 80288d8:	e734      	b.n	8028744 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80288da:	f113 0b01 	adds.w	fp, r3, #1
 80288de:	f53f af31 	bmi.w	8028744 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80288e2:	45dc      	cmp	ip, fp
 80288e4:	f6ff af2e 	blt.w	8028744 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80288e8:	f110 0b01 	adds.w	fp, r0, #1
 80288ec:	f53f af2a 	bmi.w	8028744 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80288f0:	45de      	cmp	lr, fp
 80288f2:	f6ff af27 	blt.w	8028744 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80288f6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80288f8:	9302      	str	r3, [sp, #8]
 80288fa:	fa0f f38e 	sxth.w	r3, lr
 80288fe:	9301      	str	r3, [sp, #4]
 8028900:	fa0f f38c 	sxth.w	r3, ip
 8028904:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8028908:	e9cd 1505 	strd	r1, r5, [sp, #20]
 802890c:	9300      	str	r3, [sp, #0]
 802890e:	463a      	mov	r2, r7
 8028910:	4653      	mov	r3, sl
 8028912:	4641      	mov	r1, r8
 8028914:	9815      	ldr	r0, [sp, #84]	; 0x54
 8028916:	f7ff fd4d 	bl	80283b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802891a:	e713      	b.n	8028744 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802891c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802891e:	1422      	asrs	r2, r4, #16
 8028920:	1433      	asrs	r3, r6, #16
 8028922:	fb05 2303 	mla	r3, r5, r3, r2
 8028926:	085a      	lsrs	r2, r3, #1
 8028928:	07dd      	lsls	r5, r3, #31
 802892a:	5cba      	ldrb	r2, [r7, r2]
 802892c:	bf54      	ite	pl
 802892e:	f002 020f 	andpl.w	r2, r2, #15
 8028932:	1112      	asrmi	r2, r2, #4
 8028934:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8028938:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802893c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8028940:	b2d2      	uxtb	r2, r2
 8028942:	2900      	cmp	r1, #0
 8028944:	d076      	beq.n	8028a34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8028946:	f103 0e01 	add.w	lr, r3, #1
 802894a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802894e:	f01e 0f01 	tst.w	lr, #1
 8028952:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028956:	bf0c      	ite	eq
 8028958:	f00c 0c0f 	andeq.w	ip, ip, #15
 802895c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8028960:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028964:	fa5f f58c 	uxtb.w	r5, ip
 8028968:	9512      	str	r5, [sp, #72]	; 0x48
 802896a:	b300      	cbz	r0, 80289ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802896c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802896e:	442b      	add	r3, r5
 8028970:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8028974:	07dd      	lsls	r5, r3, #31
 8028976:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802897a:	bf54      	ite	pl
 802897c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028980:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028984:	3301      	adds	r3, #1
 8028986:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802898a:	fa5f f58c 	uxtb.w	r5, ip
 802898e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8028992:	950c      	str	r5, [sp, #48]	; 0x30
 8028994:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028998:	07dd      	lsls	r5, r3, #31
 802899a:	bf54      	ite	pl
 802899c:	f00c 0c0f 	andpl.w	ip, ip, #15
 80289a0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80289a4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80289a8:	fa5f f38c 	uxtb.w	r3, ip
 80289ac:	9313      	str	r3, [sp, #76]	; 0x4c
 80289ae:	b289      	uxth	r1, r1
 80289b0:	b280      	uxth	r0, r0
 80289b2:	fb01 f300 	mul.w	r3, r1, r0
 80289b6:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80289ba:	0109      	lsls	r1, r1, #4
 80289bc:	b280      	uxth	r0, r0
 80289be:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 80289c2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80289c4:	1ac9      	subs	r1, r1, r3
 80289c6:	ebac 0c00 	sub.w	ip, ip, r0
 80289ca:	b289      	uxth	r1, r1
 80289cc:	4369      	muls	r1, r5
 80289ce:	fa1f fc8c 	uxth.w	ip, ip
 80289d2:	fb02 120c 	mla	r2, r2, ip, r1
 80289d6:	990c      	ldr	r1, [sp, #48]	; 0x30
 80289d8:	fb00 2001 	mla	r0, r0, r1, r2
 80289dc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80289de:	fb03 0302 	mla	r3, r3, r2, r0
 80289e2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80289e6:	b1d3      	cbz	r3, 8028a1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80289e8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80289ea:	4353      	muls	r3, r2
 80289ec:	1c5a      	adds	r2, r3, #1
 80289ee:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80289f2:	4a0f      	ldr	r2, [pc, #60]	; (8028a30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80289f4:	121b      	asrs	r3, r3, #8
 80289f6:	6812      	ldr	r2, [r2, #0]
 80289f8:	2bff      	cmp	r3, #255	; 0xff
 80289fa:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80289fe:	d12d      	bne.n	8028a5c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8028a00:	0953      	lsrs	r3, r2, #5
 8028a02:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8028a06:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8028a0a:	f02c 0c07 	bic.w	ip, ip, #7
 8028a0e:	ea43 0c0c 	orr.w	ip, r3, ip
 8028a12:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028a16:	ea4c 0202 	orr.w	r2, ip, r2
 8028a1a:	f8a8 2000 	strh.w	r2, [r8]
 8028a1e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8028a20:	441c      	add	r4, r3
 8028a22:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028a24:	f108 0802 	add.w	r8, r8, #2
 8028a28:	441e      	add	r6, r3
 8028a2a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8028a2e:	e6ba      	b.n	80287a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8028a30:	2001385c 	.word	0x2001385c
 8028a34:	2800      	cmp	r0, #0
 8028a36:	d0ba      	beq.n	80289ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8028a38:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8028a3a:	442b      	add	r3, r5
 8028a3c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8028a40:	07db      	lsls	r3, r3, #31
 8028a42:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028a46:	bf54      	ite	pl
 8028a48:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028a4c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028a50:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028a54:	fa5f f38c 	uxtb.w	r3, ip
 8028a58:	930c      	str	r3, [sp, #48]	; 0x30
 8028a5a:	e7a8      	b.n	80289ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8028a5c:	f8b8 e000 	ldrh.w	lr, [r8]
 8028a60:	fa1f fa83 	uxth.w	sl, r3
 8028a64:	ea4f 202e 	mov.w	r0, lr, asr #8
 8028a68:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8028a6c:	43db      	mvns	r3, r3
 8028a6e:	b2db      	uxtb	r3, r3
 8028a70:	fb11 f10a 	smulbb	r1, r1, sl
 8028a74:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8028a78:	fb00 1003 	mla	r0, r0, r3, r1
 8028a7c:	b2d2      	uxtb	r2, r2
 8028a7e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8028a82:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8028a86:	fa5f fe8e 	uxtb.w	lr, lr
 8028a8a:	fb12 f20a 	smulbb	r2, r2, sl
 8028a8e:	fb0e 2203 	mla	r2, lr, r3, r2
 8028a92:	fa5f fc8c 	uxtb.w	ip, ip
 8028a96:	b280      	uxth	r0, r0
 8028a98:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8028a9c:	b292      	uxth	r2, r2
 8028a9e:	fb1c fc0a 	smulbb	ip, ip, sl
 8028aa2:	fb01 cc03 	mla	ip, r1, r3, ip
 8028aa6:	1c43      	adds	r3, r0, #1
 8028aa8:	1c51      	adds	r1, r2, #1
 8028aaa:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8028aae:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8028ab2:	fa1f fc8c 	uxth.w	ip, ip
 8028ab6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8028aba:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8028abe:	4308      	orrs	r0, r1
 8028ac0:	f10c 0101 	add.w	r1, ip, #1
 8028ac4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028ac8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8028acc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8028ad0:	ea40 000c 	orr.w	r0, r0, ip
 8028ad4:	f8a8 0000 	strh.w	r0, [r8]
 8028ad8:	e7a1      	b.n	8028a1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8028ada:	b017      	add	sp, #92	; 0x5c
 8028adc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08028ae0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8028ae0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028ae4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8028ae8:	2d00      	cmp	r5, #0
 8028aea:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8028aee:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8028af2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8028af6:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8028afa:	fb05 0e03 	mla	lr, r5, r3, r0
 8028afe:	f2c0 80b0 	blt.w	8028c62 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8028b02:	45a9      	cmp	r9, r5
 8028b04:	f340 80ad 	ble.w	8028c62 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8028b08:	2800      	cmp	r0, #0
 8028b0a:	f2c0 80a8 	blt.w	8028c5e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8028b0e:	4580      	cmp	r8, r0
 8028b10:	f340 80a5 	ble.w	8028c5e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8028b14:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8028b18:	f01e 0f01 	tst.w	lr, #1
 8028b1c:	5d16      	ldrb	r6, [r2, r4]
 8028b1e:	bf0c      	ite	eq
 8028b20:	f006 060f 	andeq.w	r6, r6, #15
 8028b24:	1136      	asrne	r6, r6, #4
 8028b26:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8028b2a:	b2f6      	uxtb	r6, r6
 8028b2c:	1c44      	adds	r4, r0, #1
 8028b2e:	f100 809b 	bmi.w	8028c68 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8028b32:	45a0      	cmp	r8, r4
 8028b34:	f340 8098 	ble.w	8028c68 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8028b38:	2f00      	cmp	r7, #0
 8028b3a:	f000 8097 	beq.w	8028c6c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8028b3e:	f10e 0a01 	add.w	sl, lr, #1
 8028b42:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8028b46:	f01a 0f01 	tst.w	sl, #1
 8028b4a:	5d14      	ldrb	r4, [r2, r4]
 8028b4c:	bf0c      	ite	eq
 8028b4e:	f004 040f 	andeq.w	r4, r4, #15
 8028b52:	1124      	asrne	r4, r4, #4
 8028b54:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8028b58:	b2e4      	uxtb	r4, r4
 8028b5a:	3501      	adds	r5, #1
 8028b5c:	f100 808a 	bmi.w	8028c74 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8028b60:	45a9      	cmp	r9, r5
 8028b62:	f340 8087 	ble.w	8028c74 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8028b66:	f1bc 0f00 	cmp.w	ip, #0
 8028b6a:	f000 8086 	beq.w	8028c7a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8028b6e:	2800      	cmp	r0, #0
 8028b70:	db7e      	blt.n	8028c70 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8028b72:	4580      	cmp	r8, r0
 8028b74:	dd7c      	ble.n	8028c70 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8028b76:	eb03 090e 	add.w	r9, r3, lr
 8028b7a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8028b7e:	f019 0f01 	tst.w	r9, #1
 8028b82:	5d55      	ldrb	r5, [r2, r5]
 8028b84:	bf0c      	ite	eq
 8028b86:	f005 050f 	andeq.w	r5, r5, #15
 8028b8a:	112d      	asrne	r5, r5, #4
 8028b8c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8028b90:	b2ed      	uxtb	r5, r5
 8028b92:	3001      	adds	r0, #1
 8028b94:	d474      	bmi.n	8028c80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8028b96:	4580      	cmp	r8, r0
 8028b98:	dd72      	ble.n	8028c80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8028b9a:	2f00      	cmp	r7, #0
 8028b9c:	d072      	beq.n	8028c84 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8028b9e:	3301      	adds	r3, #1
 8028ba0:	449e      	add	lr, r3
 8028ba2:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8028ba6:	f01e 0f01 	tst.w	lr, #1
 8028baa:	5cd0      	ldrb	r0, [r2, r3]
 8028bac:	bf0c      	ite	eq
 8028bae:	f000 000f 	andeq.w	r0, r0, #15
 8028bb2:	1100      	asrne	r0, r0, #4
 8028bb4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028bb8:	b2c3      	uxtb	r3, r0
 8028bba:	b2ba      	uxth	r2, r7
 8028bbc:	fa1f fc8c 	uxth.w	ip, ip
 8028bc0:	fb02 f00c 	mul.w	r0, r2, ip
 8028bc4:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8028bc8:	0112      	lsls	r2, r2, #4
 8028bca:	fa1f fc8c 	uxth.w	ip, ip
 8028bce:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8028bd2:	1a12      	subs	r2, r2, r0
 8028bd4:	eba7 070c 	sub.w	r7, r7, ip
 8028bd8:	b292      	uxth	r2, r2
 8028bda:	b2bf      	uxth	r7, r7
 8028bdc:	4362      	muls	r2, r4
 8028bde:	fb06 2207 	mla	r2, r6, r7, r2
 8028be2:	fb0c 2505 	mla	r5, ip, r5, r2
 8028be6:	fb00 5303 	mla	r3, r0, r3, r5
 8028bea:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028bee:	b3a3      	cbz	r3, 8028c5a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8028bf0:	4a25      	ldr	r2, [pc, #148]	; (8028c88 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8028bf2:	880e      	ldrh	r6, [r1, #0]
 8028bf4:	6815      	ldr	r5, [r2, #0]
 8028bf6:	1234      	asrs	r4, r6, #8
 8028bf8:	b29a      	uxth	r2, r3
 8028bfa:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8028bfe:	43db      	mvns	r3, r3
 8028c00:	b2db      	uxtb	r3, r3
 8028c02:	fb10 f002 	smulbb	r0, r0, r2
 8028c06:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8028c0a:	fb04 0403 	mla	r4, r4, r3, r0
 8028c0e:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8028c12:	10f0      	asrs	r0, r6, #3
 8028c14:	b2ed      	uxtb	r5, r5
 8028c16:	00f6      	lsls	r6, r6, #3
 8028c18:	fb17 f702 	smulbb	r7, r7, r2
 8028c1c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8028c20:	fb15 f202 	smulbb	r2, r5, r2
 8028c24:	b2f6      	uxtb	r6, r6
 8028c26:	b2a4      	uxth	r4, r4
 8028c28:	fb00 7003 	mla	r0, r0, r3, r7
 8028c2c:	fb06 2303 	mla	r3, r6, r3, r2
 8028c30:	b29a      	uxth	r2, r3
 8028c32:	1c63      	adds	r3, r4, #1
 8028c34:	b280      	uxth	r0, r0
 8028c36:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8028c3a:	1c53      	adds	r3, r2, #1
 8028c3c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028c40:	1c42      	adds	r2, r0, #1
 8028c42:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8028c46:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8028c4a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8028c4e:	0940      	lsrs	r0, r0, #5
 8028c50:	4323      	orrs	r3, r4
 8028c52:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028c56:	4303      	orrs	r3, r0
 8028c58:	800b      	strh	r3, [r1, #0]
 8028c5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028c5e:	2600      	movs	r6, #0
 8028c60:	e764      	b.n	8028b2c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8028c62:	2400      	movs	r4, #0
 8028c64:	4626      	mov	r6, r4
 8028c66:	e778      	b.n	8028b5a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028c68:	2400      	movs	r4, #0
 8028c6a:	e776      	b.n	8028b5a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028c6c:	463c      	mov	r4, r7
 8028c6e:	e774      	b.n	8028b5a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028c70:	2500      	movs	r5, #0
 8028c72:	e78e      	b.n	8028b92 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8028c74:	2300      	movs	r3, #0
 8028c76:	461d      	mov	r5, r3
 8028c78:	e79f      	b.n	8028bba <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028c7a:	4663      	mov	r3, ip
 8028c7c:	4665      	mov	r5, ip
 8028c7e:	e79c      	b.n	8028bba <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028c80:	2300      	movs	r3, #0
 8028c82:	e79a      	b.n	8028bba <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028c84:	463b      	mov	r3, r7
 8028c86:	e798      	b.n	8028bba <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028c88:	2001385c 	.word	0x2001385c

08028c8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8028c8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028c90:	b093      	sub	sp, #76	; 0x4c
 8028c92:	461d      	mov	r5, r3
 8028c94:	920c      	str	r2, [sp, #48]	; 0x30
 8028c96:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8028c98:	9107      	str	r1, [sp, #28]
 8028c9a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8028c9e:	9011      	str	r0, [sp, #68]	; 0x44
 8028ca0:	6850      	ldr	r0, [r2, #4]
 8028ca2:	6812      	ldr	r2, [r2, #0]
 8028ca4:	fb00 1303 	mla	r3, r0, r3, r1
 8028ca8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8028cac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028cae:	689b      	ldr	r3, [r3, #8]
 8028cb0:	3301      	adds	r3, #1
 8028cb2:	f023 0301 	bic.w	r3, r3, #1
 8028cb6:	9306      	str	r3, [sp, #24]
 8028cb8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028cba:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8028cbe:	681f      	ldr	r7, [r3, #0]
 8028cc0:	9b07      	ldr	r3, [sp, #28]
 8028cc2:	2b00      	cmp	r3, #0
 8028cc4:	dc03      	bgt.n	8028cce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8028cc6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8028cc8:	2b00      	cmp	r3, #0
 8028cca:	f340 8267 	ble.w	802919c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8028cce:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028cd0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028cd4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8028cd8:	1e48      	subs	r0, r1, #1
 8028cda:	f102 3cff 	add.w	ip, r2, #4294967295
 8028cde:	2d00      	cmp	r5, #0
 8028ce0:	f340 80b8 	ble.w	8028e54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8028ce4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8028ce8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8028cec:	d406      	bmi.n	8028cfc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028cee:	4586      	cmp	lr, r0
 8028cf0:	da04      	bge.n	8028cfc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028cf2:	2b00      	cmp	r3, #0
 8028cf4:	db02      	blt.n	8028cfc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028cf6:	4563      	cmp	r3, ip
 8028cf8:	f2c0 80ad 	blt.w	8028e56 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8028cfc:	f11e 0e01 	adds.w	lr, lr, #1
 8028d00:	f100 80a0 	bmi.w	8028e44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028d04:	4571      	cmp	r1, lr
 8028d06:	f2c0 809d 	blt.w	8028e44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028d0a:	3301      	adds	r3, #1
 8028d0c:	f100 809a 	bmi.w	8028e44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028d10:	429a      	cmp	r2, r3
 8028d12:	f2c0 8097 	blt.w	8028e44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028d16:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8028d1a:	9509      	str	r5, [sp, #36]	; 0x24
 8028d1c:	46c8      	mov	r8, r9
 8028d1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028d20:	2b00      	cmp	r3, #0
 8028d22:	f340 80b6 	ble.w	8028e92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8028d26:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8028d2a:	9308      	str	r3, [sp, #32]
 8028d2c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028d2e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8028d32:	1423      	asrs	r3, r4, #16
 8028d34:	ea4f 4026 	mov.w	r0, r6, asr #16
 8028d38:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8028d3c:	f100 813e 	bmi.w	8028fbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028d40:	f10c 3bff 	add.w	fp, ip, #4294967295
 8028d44:	455b      	cmp	r3, fp
 8028d46:	f280 8139 	bge.w	8028fbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028d4a:	2800      	cmp	r0, #0
 8028d4c:	f2c0 8136 	blt.w	8028fbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028d50:	f10e 3bff 	add.w	fp, lr, #4294967295
 8028d54:	4558      	cmp	r0, fp
 8028d56:	f280 8131 	bge.w	8028fbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028d5a:	9a06      	ldr	r2, [sp, #24]
 8028d5c:	fb00 3302 	mla	r3, r0, r2, r3
 8028d60:	0858      	lsrs	r0, r3, #1
 8028d62:	07da      	lsls	r2, r3, #31
 8028d64:	f817 c000 	ldrb.w	ip, [r7, r0]
 8028d68:	9a08      	ldr	r2, [sp, #32]
 8028d6a:	bf54      	ite	pl
 8028d6c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028d70:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028d74:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028d78:	fa5f fc8c 	uxtb.w	ip, ip
 8028d7c:	2a00      	cmp	r2, #0
 8028d7e:	f000 80cb 	beq.w	8028f18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8028d82:	1c58      	adds	r0, r3, #1
 8028d84:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8028d88:	07c0      	lsls	r0, r0, #31
 8028d8a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8028d8e:	bf54      	ite	pl
 8028d90:	f00e 0e0f 	andpl.w	lr, lr, #15
 8028d94:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8028d98:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8028d9c:	fa5f fe8e 	uxtb.w	lr, lr
 8028da0:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8028da4:	b1b9      	cbz	r1, 8028dd6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028da6:	4453      	add	r3, sl
 8028da8:	0858      	lsrs	r0, r3, #1
 8028daa:	07da      	lsls	r2, r3, #31
 8028dac:	5c38      	ldrb	r0, [r7, r0]
 8028dae:	bf54      	ite	pl
 8028db0:	f000 000f 	andpl.w	r0, r0, #15
 8028db4:	1100      	asrmi	r0, r0, #4
 8028db6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028dba:	b2c0      	uxtb	r0, r0
 8028dbc:	900a      	str	r0, [sp, #40]	; 0x28
 8028dbe:	1c58      	adds	r0, r3, #1
 8028dc0:	0843      	lsrs	r3, r0, #1
 8028dc2:	07c2      	lsls	r2, r0, #31
 8028dc4:	5cfb      	ldrb	r3, [r7, r3]
 8028dc6:	bf54      	ite	pl
 8028dc8:	f003 030f 	andpl.w	r3, r3, #15
 8028dcc:	111b      	asrmi	r3, r3, #4
 8028dce:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028dd2:	b2db      	uxtb	r3, r3
 8028dd4:	930e      	str	r3, [sp, #56]	; 0x38
 8028dd6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8028dda:	b289      	uxth	r1, r1
 8028ddc:	fb02 f301 	mul.w	r3, r2, r1
 8028de0:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8028de4:	0112      	lsls	r2, r2, #4
 8028de6:	b289      	uxth	r1, r1
 8028de8:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8028dec:	1a40      	subs	r0, r0, r1
 8028dee:	fa1f fe80 	uxth.w	lr, r0
 8028df2:	1ad2      	subs	r2, r2, r3
 8028df4:	980d      	ldr	r0, [sp, #52]	; 0x34
 8028df6:	b292      	uxth	r2, r2
 8028df8:	4342      	muls	r2, r0
 8028dfa:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8028dfe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8028e00:	fb01 c102 	mla	r1, r1, r2, ip
 8028e04:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8028e06:	fb03 1302 	mla	r3, r3, r2, r1
 8028e0a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028e0e:	2bff      	cmp	r3, #255	; 0xff
 8028e10:	f040 8093 	bne.w	8028f3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8028e14:	4bbe      	ldr	r3, [pc, #760]	; (8029110 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8028e16:	681a      	ldr	r2, [r3, #0]
 8028e18:	4bbe      	ldr	r3, [pc, #760]	; (8029114 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8028e1a:	0951      	lsrs	r1, r2, #5
 8028e1c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8028e20:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8028e24:	430b      	orrs	r3, r1
 8028e26:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028e2a:	4313      	orrs	r3, r2
 8028e2c:	f8a8 3000 	strh.w	r3, [r8]
 8028e30:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8028e32:	441c      	add	r4, r3
 8028e34:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028e36:	441e      	add	r6, r3
 8028e38:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028e3a:	3b01      	subs	r3, #1
 8028e3c:	f108 0802 	add.w	r8, r8, #2
 8028e40:	9309      	str	r3, [sp, #36]	; 0x24
 8028e42:	e76c      	b.n	8028d1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028e44:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8028e46:	441c      	add	r4, r3
 8028e48:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028e4a:	3d01      	subs	r5, #1
 8028e4c:	441e      	add	r6, r3
 8028e4e:	f109 0902 	add.w	r9, r9, #2
 8028e52:	e744      	b.n	8028cde <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8028e54:	d021      	beq.n	8028e9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8028e56:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8028e58:	1e6b      	subs	r3, r5, #1
 8028e5a:	fb00 4003 	mla	r0, r0, r3, r4
 8028e5e:	1400      	asrs	r0, r0, #16
 8028e60:	f53f af59 	bmi.w	8028d16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028e64:	3901      	subs	r1, #1
 8028e66:	4288      	cmp	r0, r1
 8028e68:	f6bf af55 	bge.w	8028d16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028e6c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8028e6e:	fb01 6303 	mla	r3, r1, r3, r6
 8028e72:	141b      	asrs	r3, r3, #16
 8028e74:	f53f af4f 	bmi.w	8028d16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028e78:	3a01      	subs	r2, #1
 8028e7a:	4293      	cmp	r3, r2
 8028e7c:	f6bf af4b 	bge.w	8028d16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028e80:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8028e84:	9308      	str	r3, [sp, #32]
 8028e86:	46a8      	mov	r8, r5
 8028e88:	46ce      	mov	lr, r9
 8028e8a:	f1b8 0f00 	cmp.w	r8, #0
 8028e8e:	f300 80b5 	bgt.w	8028ffc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8028e92:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8028e96:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8028e9a:	9b07      	ldr	r3, [sp, #28]
 8028e9c:	2b00      	cmp	r3, #0
 8028e9e:	f340 817d 	ble.w	802919c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8028ea2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8028ea6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028eaa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8028eae:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8028eb0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028eb4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8028eb8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8028ebc:	eef0 6a62 	vmov.f32	s13, s5
 8028ec0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028ec4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028ec8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8028ecc:	ee16 4a90 	vmov	r4, s13
 8028ed0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8028ed4:	eef0 6a43 	vmov.f32	s13, s6
 8028ed8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8028edc:	ee12 2a90 	vmov	r2, s5
 8028ee0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8028ee4:	fb92 f3f3 	sdiv	r3, r2, r3
 8028ee8:	ee13 2a10 	vmov	r2, s6
 8028eec:	931f      	str	r3, [sp, #124]	; 0x7c
 8028eee:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8028ef0:	fb92 f3f3 	sdiv	r3, r2, r3
 8028ef4:	9320      	str	r3, [sp, #128]	; 0x80
 8028ef6:	9b07      	ldr	r3, [sp, #28]
 8028ef8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8028efa:	3b01      	subs	r3, #1
 8028efc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028f00:	9307      	str	r3, [sp, #28]
 8028f02:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8028f04:	ee16 6a90 	vmov	r6, s13
 8028f08:	bf14      	ite	ne
 8028f0a:	461d      	movne	r5, r3
 8028f0c:	4615      	moveq	r5, r2
 8028f0e:	eeb0 3a67 	vmov.f32	s6, s15
 8028f12:	eef0 2a47 	vmov.f32	s5, s14
 8028f16:	e6d3      	b.n	8028cc0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8028f18:	2900      	cmp	r1, #0
 8028f1a:	f43f af5c 	beq.w	8028dd6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028f1e:	eb0a 0003 	add.w	r0, sl, r3
 8028f22:	0843      	lsrs	r3, r0, #1
 8028f24:	07c0      	lsls	r0, r0, #31
 8028f26:	5cfb      	ldrb	r3, [r7, r3]
 8028f28:	bf54      	ite	pl
 8028f2a:	f003 030f 	andpl.w	r3, r3, #15
 8028f2e:	111b      	asrmi	r3, r3, #4
 8028f30:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028f34:	b2db      	uxtb	r3, r3
 8028f36:	930a      	str	r3, [sp, #40]	; 0x28
 8028f38:	e74d      	b.n	8028dd6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028f3a:	2b00      	cmp	r3, #0
 8028f3c:	f43f af78 	beq.w	8028e30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028f40:	4a73      	ldr	r2, [pc, #460]	; (8029110 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8028f42:	f8b8 c000 	ldrh.w	ip, [r8]
 8028f46:	6810      	ldr	r0, [r2, #0]
 8028f48:	fa1f fe83 	uxth.w	lr, r3
 8028f4c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8028f50:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8028f54:	43db      	mvns	r3, r3
 8028f56:	b2db      	uxtb	r3, r3
 8028f58:	fb12 f20e 	smulbb	r2, r2, lr
 8028f5c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8028f60:	fb01 2103 	mla	r1, r1, r3, r2
 8028f64:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8028f68:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8028f6c:	b2c0      	uxtb	r0, r0
 8028f6e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8028f72:	fb1b fb0e 	smulbb	fp, fp, lr
 8028f76:	b289      	uxth	r1, r1
 8028f78:	fb10 fe0e 	smulbb	lr, r0, lr
 8028f7c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8028f80:	fa5f fc8c 	uxtb.w	ip, ip
 8028f84:	fb02 b203 	mla	r2, r2, r3, fp
 8028f88:	1c48      	adds	r0, r1, #1
 8028f8a:	fb0c e303 	mla	r3, ip, r3, lr
 8028f8e:	b292      	uxth	r2, r2
 8028f90:	b29b      	uxth	r3, r3
 8028f92:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8028f96:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8028f9a:	f102 0b01 	add.w	fp, r2, #1
 8028f9e:	1c59      	adds	r1, r3, #1
 8028fa0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8028fa4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8028fa8:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8028fac:	0952      	lsrs	r2, r2, #5
 8028fae:	4301      	orrs	r1, r0
 8028fb0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8028fb4:	4311      	orrs	r1, r2
 8028fb6:	f8a8 1000 	strh.w	r1, [r8]
 8028fba:	e739      	b.n	8028e30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028fbc:	f113 0b01 	adds.w	fp, r3, #1
 8028fc0:	f53f af36 	bmi.w	8028e30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028fc4:	45dc      	cmp	ip, fp
 8028fc6:	f6ff af33 	blt.w	8028e30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028fca:	f110 0b01 	adds.w	fp, r0, #1
 8028fce:	f53f af2f 	bmi.w	8028e30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028fd2:	45de      	cmp	lr, fp
 8028fd4:	f6ff af2c 	blt.w	8028e30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028fd8:	9a08      	ldr	r2, [sp, #32]
 8028fda:	9302      	str	r3, [sp, #8]
 8028fdc:	fa0f f38e 	sxth.w	r3, lr
 8028fe0:	9301      	str	r3, [sp, #4]
 8028fe2:	fa0f f38c 	sxth.w	r3, ip
 8028fe6:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8028fea:	9105      	str	r1, [sp, #20]
 8028fec:	9300      	str	r3, [sp, #0]
 8028fee:	463a      	mov	r2, r7
 8028ff0:	4653      	mov	r3, sl
 8028ff2:	4641      	mov	r1, r8
 8028ff4:	9811      	ldr	r0, [sp, #68]	; 0x44
 8028ff6:	f7ff fd73 	bl	8028ae0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8028ffa:	e719      	b.n	8028e30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028ffc:	9906      	ldr	r1, [sp, #24]
 8028ffe:	1422      	asrs	r2, r4, #16
 8029000:	1433      	asrs	r3, r6, #16
 8029002:	fb01 2303 	mla	r3, r1, r3, r2
 8029006:	085a      	lsrs	r2, r3, #1
 8029008:	07d9      	lsls	r1, r3, #31
 802900a:	5cba      	ldrb	r2, [r7, r2]
 802900c:	bf54      	ite	pl
 802900e:	f002 020f 	andpl.w	r2, r2, #15
 8029012:	1112      	asrmi	r2, r2, #4
 8029014:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8029018:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802901c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8029020:	b2d2      	uxtb	r2, r2
 8029022:	2800      	cmp	r0, #0
 8029024:	d062      	beq.n	80290ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8029026:	f103 0a01 	add.w	sl, r3, #1
 802902a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802902e:	f01a 0f01 	tst.w	sl, #1
 8029032:	5c79      	ldrb	r1, [r7, r1]
 8029034:	bf0c      	ite	eq
 8029036:	f001 010f 	andeq.w	r1, r1, #15
 802903a:	1109      	asrne	r1, r1, #4
 802903c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8029040:	b2c9      	uxtb	r1, r1
 8029042:	910f      	str	r1, [sp, #60]	; 0x3c
 8029044:	f1bc 0f00 	cmp.w	ip, #0
 8029048:	d019      	beq.n	802907e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802904a:	9908      	ldr	r1, [sp, #32]
 802904c:	440b      	add	r3, r1
 802904e:	0859      	lsrs	r1, r3, #1
 8029050:	f013 0f01 	tst.w	r3, #1
 8029054:	5c79      	ldrb	r1, [r7, r1]
 8029056:	bf0c      	ite	eq
 8029058:	f001 010f 	andeq.w	r1, r1, #15
 802905c:	1109      	asrne	r1, r1, #4
 802905e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8029062:	b2c9      	uxtb	r1, r1
 8029064:	3301      	adds	r3, #1
 8029066:	910b      	str	r1, [sp, #44]	; 0x2c
 8029068:	0859      	lsrs	r1, r3, #1
 802906a:	07db      	lsls	r3, r3, #31
 802906c:	5c79      	ldrb	r1, [r7, r1]
 802906e:	bf54      	ite	pl
 8029070:	f001 010f 	andpl.w	r1, r1, #15
 8029074:	1109      	asrmi	r1, r1, #4
 8029076:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802907a:	b2c9      	uxtb	r1, r1
 802907c:	9110      	str	r1, [sp, #64]	; 0x40
 802907e:	b280      	uxth	r0, r0
 8029080:	fa1f fc8c 	uxth.w	ip, ip
 8029084:	fb00 f30c 	mul.w	r3, r0, ip
 8029088:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 802908c:	0100      	lsls	r0, r0, #4
 802908e:	fa1f fc8c 	uxth.w	ip, ip
 8029092:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8029096:	eba1 010c 	sub.w	r1, r1, ip
 802909a:	fa1f fa81 	uxth.w	sl, r1
 802909e:	1ac0      	subs	r0, r0, r3
 80290a0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80290a2:	b280      	uxth	r0, r0
 80290a4:	4348      	muls	r0, r1
 80290a6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80290a8:	fb02 020a 	mla	r2, r2, sl, r0
 80290ac:	fb0c 2c01 	mla	ip, ip, r1, r2
 80290b0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80290b2:	fb03 c302 	mla	r3, r3, r2, ip
 80290b6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80290ba:	2bff      	cmp	r3, #255	; 0xff
 80290bc:	d12c      	bne.n	8029118 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 80290be:	4b14      	ldr	r3, [pc, #80]	; (8029110 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80290c0:	681a      	ldr	r2, [r3, #0]
 80290c2:	4b14      	ldr	r3, [pc, #80]	; (8029114 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80290c4:	0951      	lsrs	r1, r2, #5
 80290c6:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80290ca:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80290ce:	430b      	orrs	r3, r1
 80290d0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80290d4:	4313      	orrs	r3, r2
 80290d6:	f8ae 3000 	strh.w	r3, [lr]
 80290da:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80290dc:	441c      	add	r4, r3
 80290de:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80290e0:	f10e 0e02 	add.w	lr, lr, #2
 80290e4:	441e      	add	r6, r3
 80290e6:	f108 38ff 	add.w	r8, r8, #4294967295
 80290ea:	e6ce      	b.n	8028e8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80290ec:	f1bc 0f00 	cmp.w	ip, #0
 80290f0:	d0c5      	beq.n	802907e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80290f2:	9908      	ldr	r1, [sp, #32]
 80290f4:	440b      	add	r3, r1
 80290f6:	0859      	lsrs	r1, r3, #1
 80290f8:	07db      	lsls	r3, r3, #31
 80290fa:	5c79      	ldrb	r1, [r7, r1]
 80290fc:	bf54      	ite	pl
 80290fe:	f001 010f 	andpl.w	r1, r1, #15
 8029102:	1109      	asrmi	r1, r1, #4
 8029104:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8029108:	b2c9      	uxtb	r1, r1
 802910a:	910b      	str	r1, [sp, #44]	; 0x2c
 802910c:	e7b7      	b.n	802907e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802910e:	bf00      	nop
 8029110:	2001385c 	.word	0x2001385c
 8029114:	fffff800 	.word	0xfffff800
 8029118:	2b00      	cmp	r3, #0
 802911a:	d0de      	beq.n	80290da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802911c:	4a21      	ldr	r2, [pc, #132]	; (80291a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802911e:	f8be c000 	ldrh.w	ip, [lr]
 8029122:	6810      	ldr	r0, [r2, #0]
 8029124:	fa1f fa83 	uxth.w	sl, r3
 8029128:	ea4f 212c 	mov.w	r1, ip, asr #8
 802912c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8029130:	43db      	mvns	r3, r3
 8029132:	b2db      	uxtb	r3, r3
 8029134:	fb12 f20a 	smulbb	r2, r2, sl
 8029138:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802913c:	fb01 2103 	mla	r1, r1, r3, r2
 8029140:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8029144:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8029148:	b2c0      	uxtb	r0, r0
 802914a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802914e:	fa5f fc8c 	uxtb.w	ip, ip
 8029152:	fb10 f00a 	smulbb	r0, r0, sl
 8029156:	fb0c 0003 	mla	r0, ip, r3, r0
 802915a:	b289      	uxth	r1, r1
 802915c:	fb1b fb0a 	smulbb	fp, fp, sl
 8029160:	b280      	uxth	r0, r0
 8029162:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8029166:	fb02 b203 	mla	r2, r2, r3, fp
 802916a:	1c4b      	adds	r3, r1, #1
 802916c:	f100 0b01 	add.w	fp, r0, #1
 8029170:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8029174:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8029178:	b292      	uxth	r2, r2
 802917a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802917e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8029182:	ea4b 0101 	orr.w	r1, fp, r1
 8029186:	f102 0b01 	add.w	fp, r2, #1
 802918a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802918e:	0952      	lsrs	r2, r2, #5
 8029190:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8029194:	4311      	orrs	r1, r2
 8029196:	f8ae 1000 	strh.w	r1, [lr]
 802919a:	e79e      	b.n	80290da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802919c:	b013      	add	sp, #76	; 0x4c
 802919e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80291a2:	bf00      	nop
 80291a4:	2001385c 	.word	0x2001385c

080291a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80291a8:	b570      	push	{r4, r5, r6, lr}
 80291aa:	1208      	asrs	r0, r1, #8
 80291ac:	b29e      	uxth	r6, r3
 80291ae:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80291b2:	1213      	asrs	r3, r2, #8
 80291b4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80291b8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80291bc:	fb13 f305 	smulbb	r3, r3, r5
 80291c0:	fb10 f006 	smulbb	r0, r0, r6
 80291c4:	4418      	add	r0, r3
 80291c6:	10cc      	asrs	r4, r1, #3
 80291c8:	10d3      	asrs	r3, r2, #3
 80291ca:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80291ce:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80291d2:	fb13 f305 	smulbb	r3, r3, r5
 80291d6:	fb14 f406 	smulbb	r4, r4, r6
 80291da:	00c9      	lsls	r1, r1, #3
 80291dc:	00d2      	lsls	r2, r2, #3
 80291de:	441c      	add	r4, r3
 80291e0:	b2d2      	uxtb	r2, r2
 80291e2:	b2cb      	uxtb	r3, r1
 80291e4:	fb12 f205 	smulbb	r2, r2, r5
 80291e8:	b280      	uxth	r0, r0
 80291ea:	fb13 f306 	smulbb	r3, r3, r6
 80291ee:	4413      	add	r3, r2
 80291f0:	1c42      	adds	r2, r0, #1
 80291f2:	b29b      	uxth	r3, r3
 80291f4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80291f8:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 80291fc:	1c58      	adds	r0, r3, #1
 80291fe:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8029202:	b2a4      	uxth	r4, r4
 8029204:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8029208:	4310      	orrs	r0, r2
 802920a:	1c62      	adds	r2, r4, #1
 802920c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8029210:	0964      	lsrs	r4, r4, #5
 8029212:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8029216:	4320      	orrs	r0, r4
 8029218:	bd70      	pop	{r4, r5, r6, pc}
	...

0802921c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 802921c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029220:	b08f      	sub	sp, #60	; 0x3c
 8029222:	461c      	mov	r4, r3
 8029224:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8029228:	9004      	str	r0, [sp, #16]
 802922a:	460d      	mov	r5, r1
 802922c:	4616      	mov	r6, r2
 802922e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8029230:	2f00      	cmp	r7, #0
 8029232:	f000 80f6 	beq.w	8029422 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8029236:	6820      	ldr	r0, [r4, #0]
 8029238:	6861      	ldr	r1, [r4, #4]
 802923a:	aa0a      	add	r2, sp, #40	; 0x28
 802923c:	c203      	stmia	r2!, {r0, r1}
 802923e:	6818      	ldr	r0, [r3, #0]
 8029240:	6859      	ldr	r1, [r3, #4]
 8029242:	aa0c      	add	r2, sp, #48	; 0x30
 8029244:	c203      	stmia	r2!, {r0, r1}
 8029246:	a80a      	add	r0, sp, #40	; 0x28
 8029248:	f7ef fa5e 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802924c:	4621      	mov	r1, r4
 802924e:	a80c      	add	r0, sp, #48	; 0x30
 8029250:	f7ef fa9e 	bl	8018790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029254:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8029258:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 802925c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8029260:	f002 0301 	and.w	r3, r2, #1
 8029264:	9306      	str	r3, [sp, #24]
 8029266:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802926a:	f003 0101 	and.w	r1, r3, #1
 802926e:	9105      	str	r1, [sp, #20]
 8029270:	9805      	ldr	r0, [sp, #20]
 8029272:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8029276:	4403      	add	r3, r0
 8029278:	fb01 2303 	mla	r3, r1, r3, r2
 802927c:	f04f 0802 	mov.w	r8, #2
 8029280:	fb93 f3f8 	sdiv	r3, r3, r8
 8029284:	441d      	add	r5, r3
 8029286:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802928a:	441a      	add	r2, r3
 802928c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8029290:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8029294:	4419      	add	r1, r3
 8029296:	4b64      	ldr	r3, [pc, #400]	; (8029428 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8029298:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 802929c:	6818      	ldr	r0, [r3, #0]
 802929e:	6803      	ldr	r3, [r0, #0]
 80292a0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80292a2:	4798      	blx	r3
 80292a4:	4a61      	ldr	r2, [pc, #388]	; (802942c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80292a6:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80292aa:	8813      	ldrh	r3, [r2, #0]
 80292ac:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 80292b0:	2fff      	cmp	r7, #255	; 0xff
 80292b2:	fb03 a404 	mla	r4, r3, r4, sl
 80292b6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80292ba:	f106 0604 	add.w	r6, r6, #4
 80292be:	4611      	mov	r1, r2
 80292c0:	fb03 fb0b 	mul.w	fp, r3, fp
 80292c4:	d06b      	beq.n	802939e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 80292c6:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 80292ca:	9303      	str	r3, [sp, #12]
 80292cc:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 80292d0:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80292d4:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80292d8:	9b07      	ldr	r3, [sp, #28]
 80292da:	42a3      	cmp	r3, r4
 80292dc:	f240 809c 	bls.w	8029418 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80292e0:	9b06      	ldr	r3, [sp, #24]
 80292e2:	2b00      	cmp	r3, #0
 80292e4:	d039      	beq.n	802935a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80292e6:	782b      	ldrb	r3, [r5, #0]
 80292e8:	8822      	ldrh	r2, [r4, #0]
 80292ea:	9804      	ldr	r0, [sp, #16]
 80292ec:	f003 030f 	and.w	r3, r3, #15
 80292f0:	f105 0801 	add.w	r8, r5, #1
 80292f4:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80292f8:	9b03      	ldr	r3, [sp, #12]
 80292fa:	9300      	str	r3, [sp, #0]
 80292fc:	463b      	mov	r3, r7
 80292fe:	f7ff ff53 	bl	80291a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8029302:	f824 0b02 	strh.w	r0, [r4], #2
 8029306:	f109 3bff 	add.w	fp, r9, #4294967295
 802930a:	f1bb 0f01 	cmp.w	fp, #1
 802930e:	46a2      	mov	sl, r4
 8029310:	f104 0404 	add.w	r4, r4, #4
 8029314:	dd24      	ble.n	8029360 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8029316:	f898 3000 	ldrb.w	r3, [r8]
 802931a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802931e:	9804      	ldr	r0, [sp, #16]
 8029320:	091b      	lsrs	r3, r3, #4
 8029322:	f1ab 0b02 	sub.w	fp, fp, #2
 8029326:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802932a:	9b03      	ldr	r3, [sp, #12]
 802932c:	9300      	str	r3, [sp, #0]
 802932e:	463b      	mov	r3, r7
 8029330:	f7ff ff3a 	bl	80291a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8029334:	f824 0c04 	strh.w	r0, [r4, #-4]
 8029338:	f818 3b01 	ldrb.w	r3, [r8], #1
 802933c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8029340:	9804      	ldr	r0, [sp, #16]
 8029342:	f003 030f 	and.w	r3, r3, #15
 8029346:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802934a:	9b03      	ldr	r3, [sp, #12]
 802934c:	9300      	str	r3, [sp, #0]
 802934e:	463b      	mov	r3, r7
 8029350:	f7ff ff2a 	bl	80291a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8029354:	f824 0c02 	strh.w	r0, [r4, #-2]
 8029358:	e7d7      	b.n	802930a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802935a:	46a8      	mov	r8, r5
 802935c:	46cb      	mov	fp, r9
 802935e:	e7d4      	b.n	802930a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8029360:	d10e      	bne.n	8029380 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8029362:	f898 3000 	ldrb.w	r3, [r8]
 8029366:	f8ba 2000 	ldrh.w	r2, [sl]
 802936a:	9804      	ldr	r0, [sp, #16]
 802936c:	091b      	lsrs	r3, r3, #4
 802936e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8029372:	9b03      	ldr	r3, [sp, #12]
 8029374:	9300      	str	r3, [sp, #0]
 8029376:	463b      	mov	r3, r7
 8029378:	f7ff ff16 	bl	80291a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802937c:	f82a 0b02 	strh.w	r0, [sl], #2
 8029380:	9b08      	ldr	r3, [sp, #32]
 8029382:	9a05      	ldr	r2, [sp, #20]
 8029384:	881c      	ldrh	r4, [r3, #0]
 8029386:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802938a:	eba4 0409 	sub.w	r4, r4, r9
 802938e:	4413      	add	r3, r2
 8029390:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8029394:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029396:	fb93 f3f2 	sdiv	r3, r3, r2
 802939a:	441d      	add	r5, r3
 802939c:	e79c      	b.n	80292d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802939e:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80293a2:	45a3      	cmp	fp, r4
 80293a4:	d938      	bls.n	8029418 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80293a6:	9b06      	ldr	r3, [sp, #24]
 80293a8:	b1f3      	cbz	r3, 80293e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80293aa:	782b      	ldrb	r3, [r5, #0]
 80293ac:	f003 030f 	and.w	r3, r3, #15
 80293b0:	1c6a      	adds	r2, r5, #1
 80293b2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80293b6:	8023      	strh	r3, [r4, #0]
 80293b8:	f109 30ff 	add.w	r0, r9, #4294967295
 80293bc:	3402      	adds	r4, #2
 80293be:	2801      	cmp	r0, #1
 80293c0:	4623      	mov	r3, r4
 80293c2:	f104 0404 	add.w	r4, r4, #4
 80293c6:	dd12      	ble.n	80293ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 80293c8:	7813      	ldrb	r3, [r2, #0]
 80293ca:	091b      	lsrs	r3, r3, #4
 80293cc:	3802      	subs	r0, #2
 80293ce:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80293d2:	f824 3c04 	strh.w	r3, [r4, #-4]
 80293d6:	f812 3b01 	ldrb.w	r3, [r2], #1
 80293da:	f003 030f 	and.w	r3, r3, #15
 80293de:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80293e2:	f824 3c02 	strh.w	r3, [r4, #-2]
 80293e6:	e7ea      	b.n	80293be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80293e8:	462a      	mov	r2, r5
 80293ea:	4648      	mov	r0, r9
 80293ec:	e7e7      	b.n	80293be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80293ee:	d106      	bne.n	80293fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80293f0:	7812      	ldrb	r2, [r2, #0]
 80293f2:	0912      	lsrs	r2, r2, #4
 80293f4:	3302      	adds	r3, #2
 80293f6:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80293fa:	f823 2c02 	strh.w	r2, [r3, #-2]
 80293fe:	880c      	ldrh	r4, [r1, #0]
 8029400:	9a05      	ldr	r2, [sp, #20]
 8029402:	eba4 0409 	sub.w	r4, r4, r9
 8029406:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802940a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802940e:	4413      	add	r3, r2
 8029410:	fb93 f3f8 	sdiv	r3, r3, r8
 8029414:	441d      	add	r5, r3
 8029416:	e7c4      	b.n	80293a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8029418:	4b03      	ldr	r3, [pc, #12]	; (8029428 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802941a:	6818      	ldr	r0, [r3, #0]
 802941c:	6803      	ldr	r3, [r0, #0]
 802941e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029420:	4798      	blx	r3
 8029422:	b00f      	add	sp, #60	; 0x3c
 8029424:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029428:	2001384c 	.word	0x2001384c
 802942c:	20013846 	.word	0x20013846

08029430 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8029430:	b5f0      	push	{r4, r5, r6, r7, lr}
 8029432:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8029436:	2dff      	cmp	r5, #255	; 0xff
 8029438:	ea4f 2711 	mov.w	r7, r1, lsr #8
 802943c:	d10c      	bne.n	8029458 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802943e:	2bff      	cmp	r3, #255	; 0xff
 8029440:	d10a      	bne.n	8029458 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8029442:	4b25      	ldr	r3, [pc, #148]	; (80294d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8029444:	0948      	lsrs	r0, r1, #5
 8029446:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802944a:	403b      	ands	r3, r7
 802944c:	4318      	orrs	r0, r3
 802944e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8029452:	4308      	orrs	r0, r1
 8029454:	b280      	uxth	r0, r0
 8029456:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029458:	fb15 f503 	smulbb	r5, r5, r3
 802945c:	b2ab      	uxth	r3, r5
 802945e:	1c5d      	adds	r5, r3, #1
 8029460:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8029464:	1214      	asrs	r4, r2, #8
 8029466:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802946a:	fa1f fc85 	uxth.w	ip, r5
 802946e:	10d6      	asrs	r6, r2, #3
 8029470:	00d0      	lsls	r0, r2, #3
 8029472:	43ed      	mvns	r5, r5
 8029474:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8029478:	f3c1 4207 	ubfx	r2, r1, #16, #8
 802947c:	b2eb      	uxtb	r3, r5
 802947e:	b2c0      	uxtb	r0, r0
 8029480:	fb12 f20c 	smulbb	r2, r2, ip
 8029484:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8029488:	fb04 2403 	mla	r4, r4, r3, r2
 802948c:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8029490:	b2c8      	uxtb	r0, r1
 8029492:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8029496:	b2fd      	uxtb	r5, r7
 8029498:	fb10 f00c 	smulbb	r0, r0, ip
 802949c:	b2a4      	uxth	r4, r4
 802949e:	fb02 0003 	mla	r0, r2, r3, r0
 80294a2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80294a6:	fb15 f50c 	smulbb	r5, r5, ip
 80294aa:	fb06 5503 	mla	r5, r6, r3, r5
 80294ae:	b283      	uxth	r3, r0
 80294b0:	1c60      	adds	r0, r4, #1
 80294b2:	b2ad      	uxth	r5, r5
 80294b4:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80294b8:	1c58      	adds	r0, r3, #1
 80294ba:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80294be:	1c6b      	adds	r3, r5, #1
 80294c0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80294c4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80294c8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80294cc:	096d      	lsrs	r5, r5, #5
 80294ce:	4320      	orrs	r0, r4
 80294d0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80294d4:	4328      	orrs	r0, r5
 80294d6:	e7be      	b.n	8029456 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80294d8:	00fff800 	.word	0x00fff800

080294dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80294dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80294e0:	461c      	mov	r4, r3
 80294e2:	b08d      	sub	sp, #52	; 0x34
 80294e4:	460d      	mov	r5, r1
 80294e6:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80294e8:	6861      	ldr	r1, [r4, #4]
 80294ea:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 80294ee:	4680      	mov	r8, r0
 80294f0:	6820      	ldr	r0, [r4, #0]
 80294f2:	4616      	mov	r6, r2
 80294f4:	aa08      	add	r2, sp, #32
 80294f6:	c203      	stmia	r2!, {r0, r1}
 80294f8:	6818      	ldr	r0, [r3, #0]
 80294fa:	6859      	ldr	r1, [r3, #4]
 80294fc:	aa0a      	add	r2, sp, #40	; 0x28
 80294fe:	c203      	stmia	r2!, {r0, r1}
 8029500:	a808      	add	r0, sp, #32
 8029502:	f7ef f901 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029506:	4621      	mov	r1, r4
 8029508:	a80a      	add	r0, sp, #40	; 0x28
 802950a:	f7ef f941 	bl	8018790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802950e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8029512:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8029516:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 802951a:	f002 0301 	and.w	r3, r2, #1
 802951e:	9303      	str	r3, [sp, #12]
 8029520:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8029524:	f003 0101 	and.w	r1, r3, #1
 8029528:	9102      	str	r1, [sp, #8]
 802952a:	9802      	ldr	r0, [sp, #8]
 802952c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8029530:	4403      	add	r3, r0
 8029532:	fb01 2303 	mla	r3, r1, r3, r2
 8029536:	f04f 0a02 	mov.w	sl, #2
 802953a:	fb93 f3fa 	sdiv	r3, r3, sl
 802953e:	441d      	add	r5, r3
 8029540:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8029544:	441a      	add	r2, r3
 8029546:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 802954a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 802954e:	4a3f      	ldr	r2, [pc, #252]	; (802964c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8029550:	9205      	str	r2, [sp, #20]
 8029552:	4419      	add	r1, r3
 8029554:	6810      	ldr	r0, [r2, #0]
 8029556:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 802955a:	6803      	ldr	r3, [r0, #0]
 802955c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802955e:	4798      	blx	r3
 8029560:	4b3b      	ldr	r3, [pc, #236]	; (8029650 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8029562:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8029566:	8819      	ldrh	r1, [r3, #0]
 8029568:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 802956c:	fb01 c404 	mla	r4, r1, r4, ip
 8029570:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8029574:	434f      	muls	r7, r1
 8029576:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802957a:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802957e:	3604      	adds	r6, #4
 8029580:	9204      	str	r2, [sp, #16]
 8029582:	9b04      	ldr	r3, [sp, #16]
 8029584:	429c      	cmp	r4, r3
 8029586:	d258      	bcs.n	802963a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8029588:	9b03      	ldr	r3, [sp, #12]
 802958a:	2b00      	cmp	r3, #0
 802958c:	d034      	beq.n	80295f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802958e:	782b      	ldrb	r3, [r5, #0]
 8029590:	f003 030f 	and.w	r3, r3, #15
 8029594:	1c6f      	adds	r7, r5, #1
 8029596:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802959a:	0e0b      	lsrs	r3, r1, #24
 802959c:	d006      	beq.n	80295ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802959e:	8822      	ldrh	r2, [r4, #0]
 80295a0:	9300      	str	r3, [sp, #0]
 80295a2:	4640      	mov	r0, r8
 80295a4:	464b      	mov	r3, r9
 80295a6:	f7ff ff43 	bl	8029430 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80295aa:	8020      	strh	r0, [r4, #0]
 80295ac:	3402      	adds	r4, #2
 80295ae:	f10b 3aff 	add.w	sl, fp, #4294967295
 80295b2:	f1ba 0f01 	cmp.w	sl, #1
 80295b6:	dd22      	ble.n	80295fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80295b8:	783b      	ldrb	r3, [r7, #0]
 80295ba:	091b      	lsrs	r3, r3, #4
 80295bc:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80295c0:	0e0b      	lsrs	r3, r1, #24
 80295c2:	d006      	beq.n	80295d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80295c4:	8822      	ldrh	r2, [r4, #0]
 80295c6:	9300      	str	r3, [sp, #0]
 80295c8:	4640      	mov	r0, r8
 80295ca:	464b      	mov	r3, r9
 80295cc:	f7ff ff30 	bl	8029430 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80295d0:	8020      	strh	r0, [r4, #0]
 80295d2:	f817 3b01 	ldrb.w	r3, [r7], #1
 80295d6:	f003 030f 	and.w	r3, r3, #15
 80295da:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80295de:	0e0b      	lsrs	r3, r1, #24
 80295e0:	d006      	beq.n	80295f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80295e2:	8862      	ldrh	r2, [r4, #2]
 80295e4:	9300      	str	r3, [sp, #0]
 80295e6:	4640      	mov	r0, r8
 80295e8:	464b      	mov	r3, r9
 80295ea:	f7ff ff21 	bl	8029430 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80295ee:	8060      	strh	r0, [r4, #2]
 80295f0:	3404      	adds	r4, #4
 80295f2:	f1aa 0a02 	sub.w	sl, sl, #2
 80295f6:	e7dc      	b.n	80295b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80295f8:	462f      	mov	r7, r5
 80295fa:	46da      	mov	sl, fp
 80295fc:	e7d9      	b.n	80295b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80295fe:	d10d      	bne.n	802961c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8029600:	783b      	ldrb	r3, [r7, #0]
 8029602:	091b      	lsrs	r3, r3, #4
 8029604:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8029608:	0e0b      	lsrs	r3, r1, #24
 802960a:	d006      	beq.n	802961a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 802960c:	8822      	ldrh	r2, [r4, #0]
 802960e:	9300      	str	r3, [sp, #0]
 8029610:	4640      	mov	r0, r8
 8029612:	464b      	mov	r3, r9
 8029614:	f7ff ff0c 	bl	8029430 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8029618:	8020      	strh	r0, [r4, #0]
 802961a:	3402      	adds	r4, #2
 802961c:	9b06      	ldr	r3, [sp, #24]
 802961e:	9a02      	ldr	r2, [sp, #8]
 8029620:	881b      	ldrh	r3, [r3, #0]
 8029622:	eba3 030b 	sub.w	r3, r3, fp
 8029626:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802962a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 802962e:	4413      	add	r3, r2
 8029630:	9a07      	ldr	r2, [sp, #28]
 8029632:	fb93 f3f2 	sdiv	r3, r3, r2
 8029636:	441d      	add	r5, r3
 8029638:	e7a3      	b.n	8029582 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802963a:	9b05      	ldr	r3, [sp, #20]
 802963c:	6818      	ldr	r0, [r3, #0]
 802963e:	6803      	ldr	r3, [r0, #0]
 8029640:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029642:	4798      	blx	r3
 8029644:	b00d      	add	sp, #52	; 0x34
 8029646:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802964a:	bf00      	nop
 802964c:	2001384c 	.word	0x2001384c
 8029650:	20013846 	.word	0x20013846

08029654 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8029654:	b570      	push	{r4, r5, r6, lr}
 8029656:	1214      	asrs	r4, r2, #8
 8029658:	788d      	ldrb	r5, [r1, #2]
 802965a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802965e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8029662:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8029666:	fb15 f503 	smulbb	r5, r5, r3
 802966a:	fb04 5506 	mla	r5, r4, r6, r5
 802966e:	10d0      	asrs	r0, r2, #3
 8029670:	784c      	ldrb	r4, [r1, #1]
 8029672:	7809      	ldrb	r1, [r1, #0]
 8029674:	00d2      	lsls	r2, r2, #3
 8029676:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802967a:	b2d2      	uxtb	r2, r2
 802967c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8029680:	fb14 f403 	smulbb	r4, r4, r3
 8029684:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8029688:	fb11 f303 	smulbb	r3, r1, r3
 802968c:	fb00 4406 	mla	r4, r0, r6, r4
 8029690:	fb02 3306 	mla	r3, r2, r6, r3
 8029694:	b2ad      	uxth	r5, r5
 8029696:	b29b      	uxth	r3, r3
 8029698:	b2a4      	uxth	r4, r4
 802969a:	1c68      	adds	r0, r5, #1
 802969c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80296a0:	1c62      	adds	r2, r4, #1
 80296a2:	1c58      	adds	r0, r3, #1
 80296a4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80296a8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80296ac:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80296b0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80296b4:	0964      	lsrs	r4, r4, #5
 80296b6:	4328      	orrs	r0, r5
 80296b8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80296bc:	4320      	orrs	r0, r4
 80296be:	bd70      	pop	{r4, r5, r6, pc}

080296c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80296c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80296c4:	b08f      	sub	sp, #60	; 0x3c
 80296c6:	461c      	mov	r4, r3
 80296c8:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80296cc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80296ce:	4682      	mov	sl, r0
 80296d0:	460e      	mov	r6, r1
 80296d2:	4615      	mov	r5, r2
 80296d4:	2f00      	cmp	r7, #0
 80296d6:	f000 8142 	beq.w	802995e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 80296da:	6820      	ldr	r0, [r4, #0]
 80296dc:	6861      	ldr	r1, [r4, #4]
 80296de:	aa0a      	add	r2, sp, #40	; 0x28
 80296e0:	c203      	stmia	r2!, {r0, r1}
 80296e2:	6818      	ldr	r0, [r3, #0]
 80296e4:	6859      	ldr	r1, [r3, #4]
 80296e6:	aa0c      	add	r2, sp, #48	; 0x30
 80296e8:	c203      	stmia	r2!, {r0, r1}
 80296ea:	a80a      	add	r0, sp, #40	; 0x28
 80296ec:	f7ef f80c 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80296f0:	4621      	mov	r1, r4
 80296f2:	a80c      	add	r0, sp, #48	; 0x30
 80296f4:	f7ef f84c 	bl	8018790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80296f8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80296fc:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8029700:	f002 0301 	and.w	r3, r2, #1
 8029704:	9306      	str	r3, [sp, #24]
 8029706:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802970a:	f003 0101 	and.w	r1, r3, #1
 802970e:	9105      	str	r1, [sp, #20]
 8029710:	9805      	ldr	r0, [sp, #20]
 8029712:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8029716:	4403      	add	r3, r0
 8029718:	fb01 2303 	mla	r3, r1, r3, r2
 802971c:	f04f 0802 	mov.w	r8, #2
 8029720:	fb93 f3f8 	sdiv	r3, r3, r8
 8029724:	441e      	add	r6, r3
 8029726:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802972a:	441a      	add	r2, r3
 802972c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8029730:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8029734:	4419      	add	r1, r3
 8029736:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802973a:	9303      	str	r3, [sp, #12]
 802973c:	4b89      	ldr	r3, [pc, #548]	; (8029964 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802973e:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8029742:	6818      	ldr	r0, [r3, #0]
 8029744:	6803      	ldr	r3, [r0, #0]
 8029746:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8029748:	4798      	blx	r3
 802974a:	4a87      	ldr	r2, [pc, #540]	; (8029968 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802974c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8029750:	8813      	ldrh	r3, [r2, #0]
 8029752:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8029756:	2fff      	cmp	r7, #255	; 0xff
 8029758:	fb03 9404 	mla	r4, r3, r4, r9
 802975c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8029760:	f105 0504 	add.w	r5, r5, #4
 8029764:	4694      	mov	ip, r2
 8029766:	fb03 f30b 	mul.w	r3, r3, fp
 802976a:	d071      	beq.n	8029850 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 802976c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8029770:	43f9      	mvns	r1, r7
 8029772:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8029776:	b2c9      	uxtb	r1, r1
 8029778:	9104      	str	r1, [sp, #16]
 802977a:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802977e:	9b07      	ldr	r3, [sp, #28]
 8029780:	42a3      	cmp	r3, r4
 8029782:	f240 80e7 	bls.w	8029954 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8029786:	9b06      	ldr	r3, [sp, #24]
 8029788:	2b00      	cmp	r3, #0
 802978a:	d03d      	beq.n	8029808 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 802978c:	7831      	ldrb	r1, [r6, #0]
 802978e:	9b04      	ldr	r3, [sp, #16]
 8029790:	8822      	ldrh	r2, [r4, #0]
 8029792:	9300      	str	r3, [sp, #0]
 8029794:	f001 010f 	and.w	r1, r1, #15
 8029798:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802979c:	463b      	mov	r3, r7
 802979e:	4429      	add	r1, r5
 80297a0:	4650      	mov	r0, sl
 80297a2:	f7ff ff57 	bl	8029654 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80297a6:	9b03      	ldr	r3, [sp, #12]
 80297a8:	f824 0b02 	strh.w	r0, [r4], #2
 80297ac:	f106 0801 	add.w	r8, r6, #1
 80297b0:	f103 3bff 	add.w	fp, r3, #4294967295
 80297b4:	f1bb 0f01 	cmp.w	fp, #1
 80297b8:	46a1      	mov	r9, r4
 80297ba:	f104 0404 	add.w	r4, r4, #4
 80297be:	dd27      	ble.n	8029810 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 80297c0:	f898 1000 	ldrb.w	r1, [r8]
 80297c4:	9b04      	ldr	r3, [sp, #16]
 80297c6:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80297ca:	9300      	str	r3, [sp, #0]
 80297cc:	0909      	lsrs	r1, r1, #4
 80297ce:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80297d2:	463b      	mov	r3, r7
 80297d4:	4429      	add	r1, r5
 80297d6:	4650      	mov	r0, sl
 80297d8:	f7ff ff3c 	bl	8029654 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80297dc:	f824 0c04 	strh.w	r0, [r4, #-4]
 80297e0:	f818 1b01 	ldrb.w	r1, [r8], #1
 80297e4:	9b04      	ldr	r3, [sp, #16]
 80297e6:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80297ea:	9300      	str	r3, [sp, #0]
 80297ec:	f001 010f 	and.w	r1, r1, #15
 80297f0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80297f4:	463b      	mov	r3, r7
 80297f6:	4429      	add	r1, r5
 80297f8:	4650      	mov	r0, sl
 80297fa:	f7ff ff2b 	bl	8029654 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80297fe:	f1ab 0b02 	sub.w	fp, fp, #2
 8029802:	f824 0c02 	strh.w	r0, [r4, #-2]
 8029806:	e7d5      	b.n	80297b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8029808:	46b0      	mov	r8, r6
 802980a:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802980e:	e7d1      	b.n	80297b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8029810:	d10f      	bne.n	8029832 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8029812:	f898 1000 	ldrb.w	r1, [r8]
 8029816:	9b04      	ldr	r3, [sp, #16]
 8029818:	f8b9 2000 	ldrh.w	r2, [r9]
 802981c:	9300      	str	r3, [sp, #0]
 802981e:	0909      	lsrs	r1, r1, #4
 8029820:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029824:	463b      	mov	r3, r7
 8029826:	4429      	add	r1, r5
 8029828:	4650      	mov	r0, sl
 802982a:	f7ff ff13 	bl	8029654 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802982e:	f829 0b02 	strh.w	r0, [r9], #2
 8029832:	9b08      	ldr	r3, [sp, #32]
 8029834:	9a05      	ldr	r2, [sp, #20]
 8029836:	881c      	ldrh	r4, [r3, #0]
 8029838:	9b03      	ldr	r3, [sp, #12]
 802983a:	1ae4      	subs	r4, r4, r3
 802983c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8029840:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8029844:	4413      	add	r3, r2
 8029846:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029848:	fb93 f3f2 	sdiv	r3, r3, r2
 802984c:	441e      	add	r6, r3
 802984e:	e796      	b.n	802977e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8029850:	4f46      	ldr	r7, [pc, #280]	; (802996c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8029852:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8029856:	42a3      	cmp	r3, r4
 8029858:	d97c      	bls.n	8029954 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802985a:	9a06      	ldr	r2, [sp, #24]
 802985c:	2a00      	cmp	r2, #0
 802985e:	d054      	beq.n	802990a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8029860:	7830      	ldrb	r0, [r6, #0]
 8029862:	f000 000f 	and.w	r0, r0, #15
 8029866:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802986a:	eb05 0e00 	add.w	lr, r5, r0
 802986e:	5c28      	ldrb	r0, [r5, r0]
 8029870:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8029874:	f89e e001 	ldrb.w	lr, [lr, #1]
 8029878:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802987c:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8029880:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8029884:	ea42 020e 	orr.w	r2, r2, lr
 8029888:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 802988c:	f824 2b02 	strh.w	r2, [r4], #2
 8029890:	9a03      	ldr	r2, [sp, #12]
 8029892:	1c71      	adds	r1, r6, #1
 8029894:	f102 3eff 	add.w	lr, r2, #4294967295
 8029898:	f1be 0f01 	cmp.w	lr, #1
 802989c:	4620      	mov	r0, r4
 802989e:	f104 0404 	add.w	r4, r4, #4
 80298a2:	dd36      	ble.n	8029912 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 80298a4:	7808      	ldrb	r0, [r1, #0]
 80298a6:	0900      	lsrs	r0, r0, #4
 80298a8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80298ac:	eb05 0a00 	add.w	sl, r5, r0
 80298b0:	f1ae 0e02 	sub.w	lr, lr, #2
 80298b4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80298b8:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80298bc:	00d2      	lsls	r2, r2, #3
 80298be:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80298c2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80298c6:	ea49 0202 	orr.w	r2, r9, r2
 80298ca:	f815 9000 	ldrb.w	r9, [r5, r0]
 80298ce:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80298d2:	f824 2c04 	strh.w	r2, [r4, #-4]
 80298d6:	f811 0b01 	ldrb.w	r0, [r1], #1
 80298da:	f000 000f 	and.w	r0, r0, #15
 80298de:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80298e2:	eb05 0a00 	add.w	sl, r5, r0
 80298e6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80298ea:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80298ee:	00d2      	lsls	r2, r2, #3
 80298f0:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80298f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80298f8:	ea49 0202 	orr.w	r2, r9, r2
 80298fc:	f815 9000 	ldrb.w	r9, [r5, r0]
 8029900:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8029904:	f824 2c02 	strh.w	r2, [r4, #-2]
 8029908:	e7c6      	b.n	8029898 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802990a:	4631      	mov	r1, r6
 802990c:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8029910:	e7c2      	b.n	8029898 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8029912:	d111      	bne.n	8029938 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8029914:	7809      	ldrb	r1, [r1, #0]
 8029916:	0909      	lsrs	r1, r1, #4
 8029918:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802991c:	186c      	adds	r4, r5, r1
 802991e:	5c69      	ldrb	r1, [r5, r1]
 8029920:	78a2      	ldrb	r2, [r4, #2]
 8029922:	7864      	ldrb	r4, [r4, #1]
 8029924:	00e4      	lsls	r4, r4, #3
 8029926:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802992a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802992e:	4322      	orrs	r2, r4
 8029930:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8029934:	f820 2b02 	strh.w	r2, [r0], #2
 8029938:	9a03      	ldr	r2, [sp, #12]
 802993a:	f8bc 4000 	ldrh.w	r4, [ip]
 802993e:	9905      	ldr	r1, [sp, #20]
 8029940:	1aa4      	subs	r4, r4, r2
 8029942:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8029946:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802994a:	440a      	add	r2, r1
 802994c:	fb92 f2f8 	sdiv	r2, r2, r8
 8029950:	4416      	add	r6, r2
 8029952:	e780      	b.n	8029856 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8029954:	4b03      	ldr	r3, [pc, #12]	; (8029964 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8029956:	6818      	ldr	r0, [r3, #0]
 8029958:	6803      	ldr	r3, [r0, #0]
 802995a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802995c:	4798      	blx	r3
 802995e:	b00f      	add	sp, #60	; 0x3c
 8029960:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029964:	2001384c 	.word	0x2001384c
 8029968:	20013846 	.word	0x20013846
 802996c:	fffff800 	.word	0xfffff800

08029970 <CRC_Lock>:
 8029970:	b530      	push	{r4, r5, lr}
 8029972:	4a20      	ldr	r2, [pc, #128]	; (80299f4 <CRC_Lock+0x84>)
 8029974:	6813      	ldr	r3, [r2, #0]
 8029976:	f023 0301 	bic.w	r3, r3, #1
 802997a:	6013      	str	r3, [r2, #0]
 802997c:	4b1e      	ldr	r3, [pc, #120]	; (80299f8 <CRC_Lock+0x88>)
 802997e:	681a      	ldr	r2, [r3, #0]
 8029980:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8029984:	4022      	ands	r2, r4
 8029986:	f24c 2540 	movw	r5, #49728	; 0xc240
 802998a:	42aa      	cmp	r2, r5
 802998c:	d005      	beq.n	802999a <CRC_Lock+0x2a>
 802998e:	681b      	ldr	r3, [r3, #0]
 8029990:	f24c 2270 	movw	r2, #49776	; 0xc270
 8029994:	4023      	ands	r3, r4
 8029996:	4293      	cmp	r3, r2
 8029998:	d124      	bne.n	80299e4 <CRC_Lock+0x74>
 802999a:	4b18      	ldr	r3, [pc, #96]	; (80299fc <CRC_Lock+0x8c>)
 802999c:	681b      	ldr	r3, [r3, #0]
 802999e:	bb0b      	cbnz	r3, 80299e4 <CRC_Lock+0x74>
 80299a0:	4b17      	ldr	r3, [pc, #92]	; (8029a00 <CRC_Lock+0x90>)
 80299a2:	681a      	ldr	r2, [r3, #0]
 80299a4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80299a8:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 80299ac:	d00d      	beq.n	80299ca <CRC_Lock+0x5a>
 80299ae:	681a      	ldr	r2, [r3, #0]
 80299b0:	f240 4483 	movw	r4, #1155	; 0x483
 80299b4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80299b8:	42a2      	cmp	r2, r4
 80299ba:	d006      	beq.n	80299ca <CRC_Lock+0x5a>
 80299bc:	681b      	ldr	r3, [r3, #0]
 80299be:	f240 4285 	movw	r2, #1157	; 0x485
 80299c2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80299c6:	4293      	cmp	r3, r2
 80299c8:	d10c      	bne.n	80299e4 <CRC_Lock+0x74>
 80299ca:	4b0e      	ldr	r3, [pc, #56]	; (8029a04 <CRC_Lock+0x94>)
 80299cc:	2201      	movs	r2, #1
 80299ce:	601a      	str	r2, [r3, #0]
 80299d0:	681a      	ldr	r2, [r3, #0]
 80299d2:	2a00      	cmp	r2, #0
 80299d4:	d1fc      	bne.n	80299d0 <CRC_Lock+0x60>
 80299d6:	4b0c      	ldr	r3, [pc, #48]	; (8029a08 <CRC_Lock+0x98>)
 80299d8:	6018      	str	r0, [r3, #0]
 80299da:	6818      	ldr	r0, [r3, #0]
 80299dc:	1a43      	subs	r3, r0, r1
 80299de:	4258      	negs	r0, r3
 80299e0:	4158      	adcs	r0, r3
 80299e2:	bd30      	pop	{r4, r5, pc}
 80299e4:	4b09      	ldr	r3, [pc, #36]	; (8029a0c <CRC_Lock+0x9c>)
 80299e6:	2201      	movs	r2, #1
 80299e8:	601a      	str	r2, [r3, #0]
 80299ea:	681a      	ldr	r2, [r3, #0]
 80299ec:	2a00      	cmp	r2, #0
 80299ee:	d1fc      	bne.n	80299ea <CRC_Lock+0x7a>
 80299f0:	4b07      	ldr	r3, [pc, #28]	; (8029a10 <CRC_Lock+0xa0>)
 80299f2:	e7f1      	b.n	80299d8 <CRC_Lock+0x68>
 80299f4:	e0002000 	.word	0xe0002000
 80299f8:	e000ed00 	.word	0xe000ed00
 80299fc:	e0042000 	.word	0xe0042000
 8029a00:	5c001000 	.word	0x5c001000
 8029a04:	58024c08 	.word	0x58024c08
 8029a08:	58024c00 	.word	0x58024c00
 8029a0c:	40023008 	.word	0x40023008
 8029a10:	40023000 	.word	0x40023000

08029a14 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8029a14:	6101      	str	r1, [r0, #16]
 8029a16:	4770      	bx	lr

08029a18 <_ZN8touchgfx8Gestures4tickEv>:
 8029a18:	7b83      	ldrb	r3, [r0, #14]
 8029a1a:	b14b      	cbz	r3, 8029a30 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8029a1c:	8903      	ldrh	r3, [r0, #8]
 8029a1e:	3301      	adds	r3, #1
 8029a20:	b29b      	uxth	r3, r3
 8029a22:	2b07      	cmp	r3, #7
 8029a24:	8103      	strh	r3, [r0, #8]
 8029a26:	bf81      	itttt	hi
 8029a28:	2300      	movhi	r3, #0
 8029a2a:	8143      	strhhi	r3, [r0, #10]
 8029a2c:	8183      	strhhi	r3, [r0, #12]
 8029a2e:	7383      	strbhi	r3, [r0, #14]
 8029a30:	4770      	bx	lr
	...

08029a34 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8029a34:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8029a38:	4698      	mov	r8, r3
 8029a3a:	8883      	ldrh	r3, [r0, #4]
 8029a3c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8029a40:	eba8 0303 	sub.w	r3, r8, r3
 8029a44:	b21b      	sxth	r3, r3
 8029a46:	4604      	mov	r4, r0
 8029a48:	2b00      	cmp	r3, #0
 8029a4a:	4617      	mov	r7, r2
 8029a4c:	4a18      	ldr	r2, [pc, #96]	; (8029ab0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8029a4e:	9200      	str	r2, [sp, #0]
 8029a50:	bfb8      	it	lt
 8029a52:	425b      	neglt	r3, r3
 8029a54:	8aa2      	ldrh	r2, [r4, #20]
 8029a56:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8029a5a:	f8ad 800a 	strh.w	r8, [sp, #10]
 8029a5e:	b21b      	sxth	r3, r3
 8029a60:	460e      	mov	r6, r1
 8029a62:	4293      	cmp	r3, r2
 8029a64:	88c1      	ldrh	r1, [r0, #6]
 8029a66:	f8ad 1008 	strh.w	r1, [sp, #8]
 8029a6a:	f04f 0000 	mov.w	r0, #0
 8029a6e:	f88d 0004 	strb.w	r0, [sp, #4]
 8029a72:	f8ad 500c 	strh.w	r5, [sp, #12]
 8029a76:	dc07      	bgt.n	8029a88 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8029a78:	1a69      	subs	r1, r5, r1
 8029a7a:	b209      	sxth	r1, r1
 8029a7c:	2900      	cmp	r1, #0
 8029a7e:	bfb8      	it	lt
 8029a80:	4249      	neglt	r1, r1
 8029a82:	b209      	sxth	r1, r1
 8029a84:	428a      	cmp	r2, r1
 8029a86:	da10      	bge.n	8029aaa <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8029a88:	6920      	ldr	r0, [r4, #16]
 8029a8a:	6803      	ldr	r3, [r0, #0]
 8029a8c:	4669      	mov	r1, sp
 8029a8e:	685b      	ldr	r3, [r3, #4]
 8029a90:	4798      	blx	r3
 8029a92:	eba8 0606 	sub.w	r6, r8, r6
 8029a96:	2300      	movs	r3, #0
 8029a98:	1bef      	subs	r7, r5, r7
 8029a9a:	2001      	movs	r0, #1
 8029a9c:	8123      	strh	r3, [r4, #8]
 8029a9e:	8166      	strh	r6, [r4, #10]
 8029aa0:	81a7      	strh	r7, [r4, #12]
 8029aa2:	f8a4 8004 	strh.w	r8, [r4, #4]
 8029aa6:	80e5      	strh	r5, [r4, #6]
 8029aa8:	73a0      	strb	r0, [r4, #14]
 8029aaa:	b004      	add	sp, #16
 8029aac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029ab0:	08032058 	.word	0x08032058

08029ab4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8029ab4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8029ab6:	461e      	mov	r6, r3
 8029ab8:	1e4b      	subs	r3, r1, #1
 8029aba:	2b01      	cmp	r3, #1
 8029abc:	b085      	sub	sp, #20
 8029abe:	4604      	mov	r4, r0
 8029ac0:	460d      	mov	r5, r1
 8029ac2:	4617      	mov	r7, r2
 8029ac4:	d84b      	bhi.n	8029b5e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8029ac6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8029aca:	1cd3      	adds	r3, r2, #3
 8029acc:	b29b      	uxth	r3, r3
 8029ace:	2b06      	cmp	r3, #6
 8029ad0:	d916      	bls.n	8029b00 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8029ad2:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8029b74 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8029ad6:	f8cd c004 	str.w	ip, [sp, #4]
 8029ada:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8029ade:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8029ae2:	6900      	ldr	r0, [r0, #16]
 8029ae4:	f8ad 100c 	strh.w	r1, [sp, #12]
 8029ae8:	f04f 0c00 	mov.w	ip, #0
 8029aec:	f88d c008 	strb.w	ip, [sp, #8]
 8029af0:	f8ad 200a 	strh.w	r2, [sp, #10]
 8029af4:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029af8:	6803      	ldr	r3, [r0, #0]
 8029afa:	a901      	add	r1, sp, #4
 8029afc:	689b      	ldr	r3, [r3, #8]
 8029afe:	4798      	blx	r3
 8029b00:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8029b04:	1cd3      	adds	r3, r2, #3
 8029b06:	b29b      	uxth	r3, r3
 8029b08:	2b06      	cmp	r3, #6
 8029b0a:	d916      	bls.n	8029b3a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029b0c:	f8df c064 	ldr.w	ip, [pc, #100]	; 8029b74 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8029b10:	f8cd c004 	str.w	ip, [sp, #4]
 8029b14:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8029b18:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8029b1c:	6920      	ldr	r0, [r4, #16]
 8029b1e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8029b22:	f04f 0c01 	mov.w	ip, #1
 8029b26:	f88d c008 	strb.w	ip, [sp, #8]
 8029b2a:	f8ad 200a 	strh.w	r2, [sp, #10]
 8029b2e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029b32:	6803      	ldr	r3, [r0, #0]
 8029b34:	a901      	add	r1, sp, #4
 8029b36:	689b      	ldr	r3, [r3, #8]
 8029b38:	4798      	blx	r3
 8029b3a:	4b0d      	ldr	r3, [pc, #52]	; (8029b70 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8029b3c:	9301      	str	r3, [sp, #4]
 8029b3e:	6920      	ldr	r0, [r4, #16]
 8029b40:	f88d 5008 	strb.w	r5, [sp, #8]
 8029b44:	2300      	movs	r3, #0
 8029b46:	f8ad 700a 	strh.w	r7, [sp, #10]
 8029b4a:	f8ad 600c 	strh.w	r6, [sp, #12]
 8029b4e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029b52:	6803      	ldr	r3, [r0, #0]
 8029b54:	a901      	add	r1, sp, #4
 8029b56:	681b      	ldr	r3, [r3, #0]
 8029b58:	4798      	blx	r3
 8029b5a:	b005      	add	sp, #20
 8029b5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029b5e:	2900      	cmp	r1, #0
 8029b60:	d1eb      	bne.n	8029b3a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029b62:	80a2      	strh	r2, [r4, #4]
 8029b64:	80c6      	strh	r6, [r0, #6]
 8029b66:	60a1      	str	r1, [r4, #8]
 8029b68:	81a1      	strh	r1, [r4, #12]
 8029b6a:	73a1      	strb	r1, [r4, #14]
 8029b6c:	e7e5      	b.n	8029b3a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029b6e:	bf00      	nop
 8029b70:	08032044 	.word	0x08032044
 8029b74:	0803206c 	.word	0x0803206c

08029b78 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8029b78:	10c9      	asrs	r1, r1, #3
 8029b7a:	2900      	cmp	r1, #0
 8029b7c:	bfb8      	it	lt
 8029b7e:	4249      	neglt	r1, r1
 8029b80:	2801      	cmp	r0, #1
 8029b82:	d108      	bne.n	8029b96 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8029b84:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8029b88:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8029b8c:	4601      	mov	r1, r0
 8029b8e:	dd02      	ble.n	8029b96 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8029b90:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8029b94:	4770      	bx	lr
 8029b96:	29ff      	cmp	r1, #255	; 0xff
 8029b98:	bfa8      	it	ge
 8029b9a:	21ff      	movge	r1, #255	; 0xff
 8029b9c:	4608      	mov	r0, r1
 8029b9e:	4770      	bx	lr

08029ba0 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8029ba0:	b410      	push	{r4}
 8029ba2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8029ba6:	429c      	cmp	r4, r3
 8029ba8:	d803      	bhi.n	8029bb2 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8029baa:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029bae:	f7ed b8b1 	b.w	8016d14 <_ZN8touchgfx7Outline6lineToEii>
 8029bb2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029bb6:	4770      	bx	lr

08029bb8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8029bb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029bbc:	b08b      	sub	sp, #44	; 0x2c
 8029bbe:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8029bc2:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8029bc6:	9308      	str	r3, [sp, #32]
 8029bc8:	4606      	mov	r6, r0
 8029bca:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8029bce:	9309      	str	r3, [sp, #36]	; 0x24
 8029bd0:	468a      	mov	sl, r1
 8029bd2:	f7ed fa0c 	bl	8016fee <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8029bd6:	68b5      	ldr	r5, [r6, #8]
 8029bd8:	4604      	mov	r4, r0
 8029bda:	2d00      	cmp	r5, #0
 8029bdc:	d044      	beq.n	8029c68 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029bde:	6873      	ldr	r3, [r6, #4]
 8029be0:	42ab      	cmp	r3, r5
 8029be2:	d33d      	bcc.n	8029c60 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8029be4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8029be8:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8029bec:	eb02 0b03 	add.w	fp, r2, r3
 8029bf0:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8029bf4:	fb02 1203 	mla	r2, r2, r3, r1
 8029bf8:	9205      	str	r2, [sp, #20]
 8029bfa:	1e6a      	subs	r2, r5, #1
 8029bfc:	9204      	str	r2, [sp, #16]
 8029bfe:	f04f 0800 	mov.w	r8, #0
 8029c02:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8029c06:	f9b4 7000 	ldrsh.w	r7, [r4]
 8029c0a:	454b      	cmp	r3, r9
 8029c0c:	463a      	mov	r2, r7
 8029c0e:	d008      	beq.n	8029c22 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8029c10:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8029c14:	eb03 0b09 	add.w	fp, r3, r9
 8029c18:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8029c1c:	fb03 1309 	mla	r3, r3, r9, r1
 8029c20:	9305      	str	r3, [sp, #20]
 8029c22:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8029c26:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8029c2a:	4498      	add	r8, r3
 8029c2c:	9b04      	ldr	r3, [sp, #16]
 8029c2e:	3b01      	subs	r3, #1
 8029c30:	9304      	str	r3, [sp, #16]
 8029c32:	9b04      	ldr	r3, [sp, #16]
 8029c34:	3301      	adds	r3, #1
 8029c36:	d015      	beq.n	8029c64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8029c38:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8029c3c:	42bb      	cmp	r3, r7
 8029c3e:	d117      	bne.n	8029c70 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8029c40:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8029c44:	9b04      	ldr	r3, [sp, #16]
 8029c46:	4548      	cmp	r0, r9
 8029c48:	f103 33ff 	add.w	r3, r3, #4294967295
 8029c4c:	d17f      	bne.n	8029d4e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8029c4e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8029c52:	4401      	add	r1, r0
 8029c54:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8029c58:	4480      	add	r8, r0
 8029c5a:	e7e9      	b.n	8029c30 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8029c5c:	461f      	mov	r7, r3
 8029c5e:	e044      	b.n	8029cea <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8029c60:	2000      	movs	r0, #0
 8029c62:	e002      	b.n	8029c6a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8029c64:	2900      	cmp	r1, #0
 8029c66:	d16f      	bne.n	8029d48 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8029c68:	2001      	movs	r0, #1
 8029c6a:	b00b      	add	sp, #44	; 0x2c
 8029c6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029c70:	2900      	cmp	r1, #0
 8029c72:	d030      	beq.n	8029cd6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8029c74:	2f00      	cmp	r7, #0
 8029c76:	db29      	blt.n	8029ccc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029c78:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8029c7c:	42bb      	cmp	r3, r7
 8029c7e:	dd25      	ble.n	8029ccc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029c80:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8029c84:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8029c88:	f7ff ff76 	bl	8029b78 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8029c8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029c8e:	fb10 f003 	smulbb	r0, r0, r3
 8029c92:	b280      	uxth	r0, r0
 8029c94:	1c41      	adds	r1, r0, #1
 8029c96:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8029c9a:	1209      	asrs	r1, r1, #8
 8029c9c:	f011 0fff 	tst.w	r1, #255	; 0xff
 8029ca0:	d014      	beq.n	8029ccc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029ca2:	9808      	ldr	r0, [sp, #32]
 8029ca4:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8029ca6:	b2c9      	uxtb	r1, r1
 8029ca8:	b2ba      	uxth	r2, r7
 8029caa:	9102      	str	r1, [sp, #8]
 8029cac:	2101      	movs	r1, #1
 8029cae:	4413      	add	r3, r2
 8029cb0:	9101      	str	r1, [sp, #4]
 8029cb2:	4402      	add	r2, r0
 8029cb4:	fa0f f18b 	sxth.w	r1, fp
 8029cb8:	f8da 0000 	ldr.w	r0, [sl]
 8029cbc:	9100      	str	r1, [sp, #0]
 8029cbe:	6941      	ldr	r1, [r0, #20]
 8029cc0:	b21b      	sxth	r3, r3
 8029cc2:	460d      	mov	r5, r1
 8029cc4:	b212      	sxth	r2, r2
 8029cc6:	9905      	ldr	r1, [sp, #20]
 8029cc8:	4650      	mov	r0, sl
 8029cca:	47a8      	blx	r5
 8029ccc:	9b04      	ldr	r3, [sp, #16]
 8029cce:	3301      	adds	r3, #1
 8029cd0:	f107 0201 	add.w	r2, r7, #1
 8029cd4:	d0c8      	beq.n	8029c68 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029cd6:	f9b4 7000 	ldrsh.w	r7, [r4]
 8029cda:	1abb      	subs	r3, r7, r2
 8029cdc:	2b00      	cmp	r3, #0
 8029cde:	dd31      	ble.n	8029d44 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029ce0:	2a00      	cmp	r2, #0
 8029ce2:	dabb      	bge.n	8029c5c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8029ce4:	2f00      	cmp	r7, #0
 8029ce6:	dd2d      	ble.n	8029d44 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029ce8:	2200      	movs	r2, #0
 8029cea:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8029cee:	19d1      	adds	r1, r2, r7
 8029cf0:	4299      	cmp	r1, r3
 8029cf2:	db02      	blt.n	8029cfa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8029cf4:	1a9f      	subs	r7, r3, r2
 8029cf6:	2f00      	cmp	r7, #0
 8029cf8:	dd24      	ble.n	8029d44 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029cfa:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8029cfe:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8029d02:	f7ff ff39 	bl	8029b78 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8029d06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029d08:	fb10 f003 	smulbb	r0, r0, r3
 8029d0c:	b280      	uxth	r0, r0
 8029d0e:	1c41      	adds	r1, r0, #1
 8029d10:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8029d14:	1209      	asrs	r1, r1, #8
 8029d16:	f011 0fff 	tst.w	r1, #255	; 0xff
 8029d1a:	d013      	beq.n	8029d44 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029d1c:	9808      	ldr	r0, [sp, #32]
 8029d1e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8029d20:	b292      	uxth	r2, r2
 8029d22:	b2c9      	uxtb	r1, r1
 8029d24:	4413      	add	r3, r2
 8029d26:	9102      	str	r1, [sp, #8]
 8029d28:	4402      	add	r2, r0
 8029d2a:	b23f      	sxth	r7, r7
 8029d2c:	f8da 0000 	ldr.w	r0, [sl]
 8029d30:	9701      	str	r7, [sp, #4]
 8029d32:	fa0f f18b 	sxth.w	r1, fp
 8029d36:	9100      	str	r1, [sp, #0]
 8029d38:	6947      	ldr	r7, [r0, #20]
 8029d3a:	9905      	ldr	r1, [sp, #20]
 8029d3c:	b21b      	sxth	r3, r3
 8029d3e:	b212      	sxth	r2, r2
 8029d40:	4650      	mov	r0, sl
 8029d42:	47b8      	blx	r7
 8029d44:	464b      	mov	r3, r9
 8029d46:	e75c      	b.n	8029c02 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8029d48:	2f00      	cmp	r7, #0
 8029d4a:	da95      	bge.n	8029c78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8029d4c:	e78c      	b.n	8029c68 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029d4e:	2900      	cmp	r1, #0
 8029d50:	d0f8      	beq.n	8029d44 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029d52:	e78f      	b.n	8029c74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08029d54 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8029d54:	4b4b      	ldr	r3, [pc, #300]	; (8029e84 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8029d56:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8029d5a:	2500      	movs	r5, #0
 8029d5c:	f100 0620 	add.w	r6, r0, #32
 8029d60:	4604      	mov	r4, r0
 8029d62:	e9c0 3100 	strd	r3, r1, [r0]
 8029d66:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8029d6a:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8029d6e:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8029d72:	f100 0718 	add.w	r7, r0, #24
 8029d76:	4630      	mov	r0, r6
 8029d78:	4690      	mov	r8, r2
 8029d7a:	f7ec fb03 	bl	8016384 <_ZN8touchgfx7OutlineC1Ev>
 8029d7e:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8029d82:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8029d86:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8029d8a:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8029d8e:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8029d92:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8029d96:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8029d9a:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8029d9e:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8029da2:	f9b8 2000 	ldrsh.w	r2, [r8]
 8029da6:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8029daa:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8029dae:	9500      	str	r5, [sp, #0]
 8029db0:	4410      	add	r0, r2
 8029db2:	b280      	uxth	r0, r0
 8029db4:	fa0f fa80 	sxth.w	sl, r0
 8029db8:	45aa      	cmp	sl, r5
 8029dba:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8029dbe:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8029dc2:	dd5c      	ble.n	8029e7e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029dc4:	4591      	cmp	r9, r2
 8029dc6:	dd5a      	ble.n	8029e7e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029dc8:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8029dcc:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8029dd0:	440b      	add	r3, r1
 8029dd2:	b29b      	uxth	r3, r3
 8029dd4:	b21d      	sxth	r5, r3
 8029dd6:	2d00      	cmp	r5, #0
 8029dd8:	dd51      	ble.n	8029e7e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029dda:	458e      	cmp	lr, r1
 8029ddc:	dd4f      	ble.n	8029e7e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029dde:	45d1      	cmp	r9, sl
 8029de0:	bfb8      	it	lt
 8029de2:	fa1f f089 	uxthlt.w	r0, r9
 8029de6:	45ae      	cmp	lr, r5
 8029de8:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8029dec:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8029df0:	bfb8      	it	lt
 8029df2:	fa1f f38e 	uxthlt.w	r3, lr
 8029df6:	1a80      	subs	r0, r0, r2
 8029df8:	1a5b      	subs	r3, r3, r1
 8029dfa:	f8ad 0004 	strh.w	r0, [sp, #4]
 8029dfe:	f8ad 3006 	strh.w	r3, [sp, #6]
 8029e02:	f8ad 2000 	strh.w	r2, [sp]
 8029e06:	f8ad 1002 	strh.w	r1, [sp, #2]
 8029e0a:	466d      	mov	r5, sp
 8029e0c:	e895 0003 	ldmia.w	r5, {r0, r1}
 8029e10:	e887 0003 	stmia.w	r7, {r0, r1}
 8029e14:	f8dc 3000 	ldr.w	r3, [ip]
 8029e18:	4660      	mov	r0, ip
 8029e1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029e1c:	4639      	mov	r1, r7
 8029e1e:	4798      	blx	r3
 8029e20:	6861      	ldr	r1, [r4, #4]
 8029e22:	4628      	mov	r0, r5
 8029e24:	3104      	adds	r1, #4
 8029e26:	f7ee fcb3 	bl	8018790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029e2a:	4638      	mov	r0, r7
 8029e2c:	f7ee fc6c 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029e30:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8029e34:	f8bd 2000 	ldrh.w	r2, [sp]
 8029e38:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8029e3c:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8029e40:	4630      	mov	r0, r6
 8029e42:	f7ec fa83 	bl	801634c <_ZN8touchgfx7Outline5resetEv>
 8029e46:	f9bd 3000 	ldrsh.w	r3, [sp]
 8029e4a:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8029e4e:	015b      	lsls	r3, r3, #5
 8029e50:	60a3      	str	r3, [r4, #8]
 8029e52:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8029e56:	015b      	lsls	r3, r3, #5
 8029e58:	60e3      	str	r3, [r4, #12]
 8029e5a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8029e5e:	015b      	lsls	r3, r3, #5
 8029e60:	6123      	str	r3, [r4, #16]
 8029e62:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8029e66:	015b      	lsls	r3, r3, #5
 8029e68:	6163      	str	r3, [r4, #20]
 8029e6a:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8029e6e:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8029e72:	4620      	mov	r0, r4
 8029e74:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8029e78:	b002      	add	sp, #8
 8029e7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8029e7e:	2300      	movs	r3, #0
 8029e80:	9301      	str	r3, [sp, #4]
 8029e82:	e7c2      	b.n	8029e0a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8029e84:	08032390 	.word	0x08032390

08029e88 <_ZN8touchgfx6Canvas5closeEv>:
 8029e88:	b538      	push	{r3, r4, r5, lr}
 8029e8a:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8029e8e:	4604      	mov	r4, r0
 8029e90:	b193      	cbz	r3, 8029eb8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8029e92:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8029e96:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8029e9a:	4213      	tst	r3, r2
 8029e9c:	d10c      	bne.n	8029eb8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8029e9e:	f100 0520 	add.w	r5, r0, #32
 8029ea2:	b123      	cbz	r3, 8029eae <_ZN8touchgfx6Canvas5closeEv+0x26>
 8029ea4:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8029ea8:	4628      	mov	r0, r5
 8029eaa:	f7ff fe79 	bl	8029ba0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8029eae:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8029eb2:	4628      	mov	r0, r5
 8029eb4:	f7ff fe74 	bl	8029ba0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8029eb8:	2300      	movs	r3, #0
 8029eba:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8029ebe:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8029ec2:	4298      	cmp	r0, r3
 8029ec4:	bf34      	ite	cc
 8029ec6:	2000      	movcc	r0, #0
 8029ec8:	2001      	movcs	r0, #1
 8029eca:	bd38      	pop	{r3, r4, r5, pc}

08029ecc <_ZN8touchgfx6Canvas6renderEh>:
 8029ecc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8029ed0:	4604      	mov	r4, r0
 8029ed2:	6840      	ldr	r0, [r0, #4]
 8029ed4:	6803      	ldr	r3, [r0, #0]
 8029ed6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8029ed8:	460d      	mov	r5, r1
 8029eda:	4798      	blx	r3
 8029edc:	fb10 f105 	smulbb	r1, r0, r5
 8029ee0:	b289      	uxth	r1, r1
 8029ee2:	1c4d      	adds	r5, r1, #1
 8029ee4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8029ee8:	122d      	asrs	r5, r5, #8
 8029eea:	f000 809d 	beq.w	802a028 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8029eee:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8029ef2:	2b00      	cmp	r3, #0
 8029ef4:	f000 8098 	beq.w	802a028 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8029ef8:	4620      	mov	r0, r4
 8029efa:	f7ff ffc5 	bl	8029e88 <_ZN8touchgfx6Canvas5closeEv>
 8029efe:	4607      	mov	r7, r0
 8029f00:	2800      	cmp	r0, #0
 8029f02:	d048      	beq.n	8029f96 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8029f04:	6863      	ldr	r3, [r4, #4]
 8029f06:	4e49      	ldr	r6, [pc, #292]	; (802a02c <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8029f08:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8029f0a:	6837      	ldr	r7, [r6, #0]
 8029f0c:	6803      	ldr	r3, [r0, #0]
 8029f0e:	689b      	ldr	r3, [r3, #8]
 8029f10:	4798      	blx	r3
 8029f12:	4601      	mov	r1, r0
 8029f14:	4638      	mov	r0, r7
 8029f16:	f7ea f9bb 	bl	8014290 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8029f1a:	4607      	mov	r7, r0
 8029f1c:	f7db fb74 	bl	8005608 <_ZN8touchgfx3HAL3lcdEv>
 8029f20:	6803      	ldr	r3, [r0, #0]
 8029f22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8029f24:	4798      	blx	r3
 8029f26:	4680      	mov	r8, r0
 8029f28:	f7db fb6e 	bl	8005608 <_ZN8touchgfx3HAL3lcdEv>
 8029f2c:	6803      	ldr	r3, [r0, #0]
 8029f2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029f30:	4798      	blx	r3
 8029f32:	280b      	cmp	r0, #11
 8029f34:	d85d      	bhi.n	8029ff2 <_ZN8touchgfx6Canvas6renderEh+0x126>
 8029f36:	e8df f000 	tbb	[pc, r0]
 8029f3a:	5e53      	.short	0x5e53
 8029f3c:	325c066e 	.word	0x325c066e
 8029f40:	67676742 	.word	0x67676742
 8029f44:	6767      	.short	0x6767
 8029f46:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029f4a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8029f4e:	2208      	movs	r2, #8
 8029f50:	fb91 f2f2 	sdiv	r2, r1, r2
 8029f54:	fb08 2303 	mla	r3, r8, r3, r2
 8029f58:	441f      	add	r7, r3
 8029f5a:	424b      	negs	r3, r1
 8029f5c:	f003 0307 	and.w	r3, r3, #7
 8029f60:	f001 0107 	and.w	r1, r1, #7
 8029f64:	bf58      	it	pl
 8029f66:	4259      	negpl	r1, r3
 8029f68:	b2c9      	uxtb	r1, r1
 8029f6a:	b2ed      	uxtb	r5, r5
 8029f6c:	e9cd 1500 	strd	r1, r5, [sp]
 8029f70:	6860      	ldr	r0, [r4, #4]
 8029f72:	463a      	mov	r2, r7
 8029f74:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8029f76:	fa0f f388 	sxth.w	r3, r8
 8029f7a:	f104 0020 	add.w	r0, r4, #32
 8029f7e:	f7ff fe1b 	bl	8029bb8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8029f82:	6863      	ldr	r3, [r4, #4]
 8029f84:	4607      	mov	r7, r0
 8029f86:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8029f88:	6803      	ldr	r3, [r0, #0]
 8029f8a:	691b      	ldr	r3, [r3, #16]
 8029f8c:	4798      	blx	r3
 8029f8e:	6830      	ldr	r0, [r6, #0]
 8029f90:	6803      	ldr	r3, [r0, #0]
 8029f92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029f94:	4798      	blx	r3
 8029f96:	4638      	mov	r0, r7
 8029f98:	b002      	add	sp, #8
 8029f9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029f9e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029fa2:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8029fa6:	2204      	movs	r2, #4
 8029fa8:	fb91 f2f2 	sdiv	r2, r1, r2
 8029fac:	fb08 2303 	mla	r3, r8, r3, r2
 8029fb0:	441f      	add	r7, r3
 8029fb2:	424b      	negs	r3, r1
 8029fb4:	f003 0303 	and.w	r3, r3, #3
 8029fb8:	f001 0103 	and.w	r1, r1, #3
 8029fbc:	e7d2      	b.n	8029f64 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8029fbe:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8029fc2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029fc6:	2900      	cmp	r1, #0
 8029fc8:	f04f 0202 	mov.w	r2, #2
 8029fcc:	fb91 f2f2 	sdiv	r2, r1, r2
 8029fd0:	f001 0101 	and.w	r1, r1, #1
 8029fd4:	fb08 2303 	mla	r3, r8, r3, r2
 8029fd8:	441f      	add	r7, r3
 8029fda:	bfb8      	it	lt
 8029fdc:	4249      	neglt	r1, r1
 8029fde:	e7c3      	b.n	8029f68 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8029fe0:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029fe4:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8029fe8:	fb08 f303 	mul.w	r3, r8, r3
 8029fec:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8029ff0:	441f      	add	r7, r3
 8029ff2:	2100      	movs	r1, #0
 8029ff4:	e7b9      	b.n	8029f6a <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8029ff6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029ffa:	fb08 f203 	mul.w	r2, r8, r3
 8029ffe:	8b23      	ldrh	r3, [r4, #24]
 802a000:	2103      	movs	r1, #3
 802a002:	fb13 2301 	smlabb	r3, r3, r1, r2
 802a006:	e7f3      	b.n	8029ff0 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802a008:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a00c:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802a010:	fb08 2303 	mla	r3, r8, r3, r2
 802a014:	e7ec      	b.n	8029ff0 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802a016:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802a01a:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802a01e:	fb08 f303 	mul.w	r3, r8, r3
 802a022:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802a026:	e7e3      	b.n	8029ff0 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802a028:	2701      	movs	r7, #1
 802a02a:	e7b4      	b.n	8029f96 <_ZN8touchgfx6Canvas6renderEh+0xca>
 802a02c:	2001384c 	.word	0x2001384c

0802a030 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 802a030:	b510      	push	{r4, lr}
 802a032:	4b07      	ldr	r3, [pc, #28]	; (802a050 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 802a034:	781b      	ldrb	r3, [r3, #0]
 802a036:	2b01      	cmp	r3, #1
 802a038:	d108      	bne.n	802a04c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 802a03a:	6843      	ldr	r3, [r0, #4]
 802a03c:	6814      	ldr	r4, [r2, #0]
 802a03e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802a042:	680b      	ldr	r3, [r1, #0]
 802a044:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 802a048:	6013      	str	r3, [r2, #0]
 802a04a:	600c      	str	r4, [r1, #0]
 802a04c:	bd10      	pop	{r4, pc}
 802a04e:	bf00      	nop
 802a050:	20013844 	.word	0x20013844

0802a054 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 802a054:	b513      	push	{r0, r1, r4, lr}
 802a056:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802a05a:	4604      	mov	r4, r0
 802a05c:	e9cd 2100 	strd	r2, r1, [sp]
 802a060:	b9a3      	cbnz	r3, 802a08c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 802a062:	466a      	mov	r2, sp
 802a064:	a901      	add	r1, sp, #4
 802a066:	4620      	mov	r0, r4
 802a068:	f7ff ffe2 	bl	802a030 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802a06c:	68a3      	ldr	r3, [r4, #8]
 802a06e:	9901      	ldr	r1, [sp, #4]
 802a070:	9a00      	ldr	r2, [sp, #0]
 802a072:	1ac9      	subs	r1, r1, r3
 802a074:	68e3      	ldr	r3, [r4, #12]
 802a076:	9101      	str	r1, [sp, #4]
 802a078:	1ad2      	subs	r2, r2, r3
 802a07a:	2a00      	cmp	r2, #0
 802a07c:	9200      	str	r2, [sp, #0]
 802a07e:	da0b      	bge.n	802a098 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 802a080:	2301      	movs	r3, #1
 802a082:	2900      	cmp	r1, #0
 802a084:	da0e      	bge.n	802a0a4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802a086:	f043 0304 	orr.w	r3, r3, #4
 802a08a:	e013      	b.n	802a0b4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 802a08c:	f7ff fefc 	bl	8029e88 <_ZN8touchgfx6Canvas5closeEv>
 802a090:	2800      	cmp	r0, #0
 802a092:	d1e6      	bne.n	802a062 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 802a094:	b002      	add	sp, #8
 802a096:	bd10      	pop	{r4, pc}
 802a098:	6963      	ldr	r3, [r4, #20]
 802a09a:	429a      	cmp	r2, r3
 802a09c:	bfac      	ite	ge
 802a09e:	2302      	movge	r3, #2
 802a0a0:	2300      	movlt	r3, #0
 802a0a2:	e7ee      	b.n	802a082 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 802a0a4:	6920      	ldr	r0, [r4, #16]
 802a0a6:	4281      	cmp	r1, r0
 802a0a8:	bfac      	ite	ge
 802a0aa:	2008      	movge	r0, #8
 802a0ac:	2000      	movlt	r0, #0
 802a0ae:	4318      	orrs	r0, r3
 802a0b0:	b2c3      	uxtb	r3, r0
 802a0b2:	b158      	cbz	r0, 802a0cc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 802a0b4:	2200      	movs	r2, #0
 802a0b6:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802a0ba:	9901      	ldr	r1, [sp, #4]
 802a0bc:	9a00      	ldr	r2, [sp, #0]
 802a0be:	66a1      	str	r1, [r4, #104]	; 0x68
 802a0c0:	66e2      	str	r2, [r4, #108]	; 0x6c
 802a0c2:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 802a0c6:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802a0ca:	e7e3      	b.n	802a094 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 802a0cc:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802a0d0:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802a0d4:	4298      	cmp	r0, r3
 802a0d6:	d803      	bhi.n	802a0e0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802a0d8:	f104 0020 	add.w	r0, r4, #32
 802a0dc:	f7ec fe34 	bl	8016d48 <_ZN8touchgfx7Outline6moveToEii>
 802a0e0:	2301      	movs	r3, #1
 802a0e2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802a0e6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802a0ea:	2300      	movs	r3, #0
 802a0ec:	e7e5      	b.n	802a0ba <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802a0ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802a0ee:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802a0f0:	ab02      	add	r3, sp, #8
 802a0f2:	4604      	mov	r4, r0
 802a0f4:	f843 2d08 	str.w	r2, [r3, #-8]!
 802a0f8:	9101      	str	r1, [sp, #4]
 802a0fa:	461a      	mov	r2, r3
 802a0fc:	a901      	add	r1, sp, #4
 802a0fe:	f7ff ff97 	bl	802a030 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802a102:	68a3      	ldr	r3, [r4, #8]
 802a104:	9901      	ldr	r1, [sp, #4]
 802a106:	9a00      	ldr	r2, [sp, #0]
 802a108:	1ac9      	subs	r1, r1, r3
 802a10a:	68e3      	ldr	r3, [r4, #12]
 802a10c:	9101      	str	r1, [sp, #4]
 802a10e:	1ad2      	subs	r2, r2, r3
 802a110:	2a00      	cmp	r2, #0
 802a112:	9200      	str	r2, [sp, #0]
 802a114:	db1c      	blt.n	802a150 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802a116:	6963      	ldr	r3, [r4, #20]
 802a118:	429a      	cmp	r2, r3
 802a11a:	bfac      	ite	ge
 802a11c:	2002      	movge	r0, #2
 802a11e:	2000      	movlt	r0, #0
 802a120:	2900      	cmp	r1, #0
 802a122:	db17      	blt.n	802a154 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 802a124:	6923      	ldr	r3, [r4, #16]
 802a126:	4299      	cmp	r1, r3
 802a128:	bfac      	ite	ge
 802a12a:	2308      	movge	r3, #8
 802a12c:	2300      	movlt	r3, #0
 802a12e:	4303      	orrs	r3, r0
 802a130:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 802a134:	b2dd      	uxtb	r5, r3
 802a136:	b978      	cbnz	r0, 802a158 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802a138:	f104 0020 	add.w	r0, r4, #32
 802a13c:	f7ff fd30 	bl	8029ba0 <_ZN8touchgfx10Rasterizer6lineToEii>
 802a140:	9b01      	ldr	r3, [sp, #4]
 802a142:	65e3      	str	r3, [r4, #92]	; 0x5c
 802a144:	9b00      	ldr	r3, [sp, #0]
 802a146:	6623      	str	r3, [r4, #96]	; 0x60
 802a148:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 802a14c:	b002      	add	sp, #8
 802a14e:	bd70      	pop	{r4, r5, r6, pc}
 802a150:	2001      	movs	r0, #1
 802a152:	e7e5      	b.n	802a120 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 802a154:	2304      	movs	r3, #4
 802a156:	e7ea      	b.n	802a12e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802a158:	b113      	cbz	r3, 802a160 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802a15a:	ea10 0305 	ands.w	r3, r0, r5
 802a15e:	d11c      	bne.n	802a19a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 802a160:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 802a164:	f104 0620 	add.w	r6, r4, #32
 802a168:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 802a16c:	b98b      	cbnz	r3, 802a192 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802a16e:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802a172:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802a176:	4298      	cmp	r0, r3
 802a178:	d802      	bhi.n	802a180 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802a17a:	4630      	mov	r0, r6
 802a17c:	f7ec fde4 	bl	8016d48 <_ZN8touchgfx7Outline6moveToEii>
 802a180:	2301      	movs	r3, #1
 802a182:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802a186:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802a18a:	e9dd 2100 	ldrd	r2, r1, [sp]
 802a18e:	4630      	mov	r0, r6
 802a190:	e7d4      	b.n	802a13c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802a192:	4630      	mov	r0, r6
 802a194:	f7ff fd04 	bl	8029ba0 <_ZN8touchgfx10Rasterizer6lineToEii>
 802a198:	e7f7      	b.n	802a18a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802a19a:	461d      	mov	r5, r3
 802a19c:	e7d0      	b.n	802a140 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

0802a1a0 <_ZN8touchgfx6CanvasD1Ev>:
 802a1a0:	b510      	push	{r4, lr}
 802a1a2:	4b04      	ldr	r3, [pc, #16]	; (802a1b4 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 802a1a4:	4604      	mov	r4, r0
 802a1a6:	f840 3b20 	str.w	r3, [r0], #32
 802a1aa:	f7ec f8c7 	bl	801633c <_ZN8touchgfx7OutlineD1Ev>
 802a1ae:	4620      	mov	r0, r4
 802a1b0:	bd10      	pop	{r4, pc}
 802a1b2:	bf00      	nop
 802a1b4:	08032390 	.word	0x08032390

0802a1b8 <_ZN8touchgfx6CanvasD0Ev>:
 802a1b8:	b510      	push	{r4, lr}
 802a1ba:	4604      	mov	r4, r0
 802a1bc:	f7ff fff0 	bl	802a1a0 <_ZN8touchgfx6CanvasD1Ev>
 802a1c0:	4620      	mov	r0, r4
 802a1c2:	2170      	movs	r1, #112	; 0x70
 802a1c4:	f002 fdb1 	bl	802cd2a <_ZdlPvj>
 802a1c8:	4620      	mov	r0, r4
 802a1ca:	bd10      	pop	{r4, pc}

0802a1cc <_ZN8touchgfx6CircleD1Ev>:
 802a1cc:	4770      	bx	lr

0802a1ce <_ZN8touchgfx6CircleD0Ev>:
 802a1ce:	b510      	push	{r4, lr}
 802a1d0:	2148      	movs	r1, #72	; 0x48
 802a1d2:	4604      	mov	r4, r0
 802a1d4:	f002 fda9 	bl	802cd2a <_ZdlPvj>
 802a1d8:	4620      	mov	r0, r4
 802a1da:	bd10      	pop	{r4, pc}

0802a1dc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 802a1dc:	b508      	push	{r3, lr}
 802a1de:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 802a1e2:	f7ea fbab 	bl	801493c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a1e6:	bd08      	pop	{r3, pc}

0802a1e8 <_ZN8touchgfx6CircleC1Ev>:
 802a1e8:	b510      	push	{r4, lr}
 802a1ea:	4604      	mov	r4, r0
 802a1ec:	f7ea fa42 	bl	8014674 <_ZN8touchgfx12CanvasWidgetC1Ev>
 802a1f0:	4b08      	ldr	r3, [pc, #32]	; (802a214 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 802a1f2:	6023      	str	r3, [r4, #0]
 802a1f4:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 802a1f8:	2300      	movs	r3, #0
 802a1fa:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 802a1fe:	f24b 4205 	movw	r2, #46085	; 0xb405
 802a202:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 802a206:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 802a20a:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 802a20e:	60a3      	str	r3, [r4, #8]
 802a210:	4620      	mov	r0, r4
 802a212:	bd10      	pop	{r4, pc}
 802a214:	080323a4 	.word	0x080323a4

0802a218 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 802a218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a21c:	428a      	cmp	r2, r1
 802a21e:	4680      	mov	r8, r0
 802a220:	4610      	mov	r0, r2
 802a222:	4699      	mov	r9, r3
 802a224:	bfa6      	itte	ge
 802a226:	460a      	movge	r2, r1
 802a228:	4603      	movge	r3, r0
 802a22a:	460b      	movlt	r3, r1
 802a22c:	1a99      	subs	r1, r3, r2
 802a22e:	b085      	sub	sp, #20
 802a230:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 802a234:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 802a238:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802a23a:	bfa4      	itt	ge
 802a23c:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 802a240:	2200      	movge	r2, #0
 802a242:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 802a246:	9300      	str	r3, [sp, #0]
 802a248:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 802a24c:	f102 0b01 	add.w	fp, r2, #1
 802a250:	2c00      	cmp	r4, #0
 802a252:	f040 80af 	bne.w	802a3b4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 802a256:	4610      	mov	r0, r2
 802a258:	9201      	str	r2, [sp, #4]
 802a25a:	f7ea fb6f 	bl	801493c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a25e:	a903      	add	r1, sp, #12
 802a260:	9003      	str	r0, [sp, #12]
 802a262:	4650      	mov	r0, sl
 802a264:	f7ea fa32 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a268:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802a26c:	9a01      	ldr	r2, [sp, #4]
 802a26e:	4408      	add	r0, r1
 802a270:	f8d9 1000 	ldr.w	r1, [r9]
 802a274:	4281      	cmp	r1, r0
 802a276:	bfc8      	it	gt
 802a278:	f8c9 0000 	strgt.w	r0, [r9]
 802a27c:	6839      	ldr	r1, [r7, #0]
 802a27e:	4288      	cmp	r0, r1
 802a280:	bfc8      	it	gt
 802a282:	6038      	strgt	r0, [r7, #0]
 802a284:	4610      	mov	r0, r2
 802a286:	f7ff ffa9 	bl	802a1dc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a28a:	a903      	add	r1, sp, #12
 802a28c:	9003      	str	r0, [sp, #12]
 802a28e:	4650      	mov	r0, sl
 802a290:	f7ea fa1c 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a294:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a298:	1a10      	subs	r0, r2, r0
 802a29a:	6832      	ldr	r2, [r6, #0]
 802a29c:	4282      	cmp	r2, r0
 802a29e:	bfc8      	it	gt
 802a2a0:	6030      	strgt	r0, [r6, #0]
 802a2a2:	682a      	ldr	r2, [r5, #0]
 802a2a4:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802a2a8:	4290      	cmp	r0, r2
 802a2aa:	fb9b f2f1 	sdiv	r2, fp, r1
 802a2ae:	fb01 b212 	mls	r2, r1, r2, fp
 802a2b2:	eba1 0202 	sub.w	r2, r1, r2
 802a2b6:	bfc8      	it	gt
 802a2b8:	6028      	strgt	r0, [r5, #0]
 802a2ba:	fb92 f0f1 	sdiv	r0, r2, r1
 802a2be:	fb01 2210 	mls	r2, r1, r0, r2
 802a2c2:	4493      	add	fp, r2
 802a2c4:	9b00      	ldr	r3, [sp, #0]
 802a2c6:	455b      	cmp	r3, fp
 802a2c8:	db2a      	blt.n	802a320 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 802a2ca:	4658      	mov	r0, fp
 802a2cc:	f7ea fb36 	bl	801493c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a2d0:	a903      	add	r1, sp, #12
 802a2d2:	9003      	str	r0, [sp, #12]
 802a2d4:	4650      	mov	r0, sl
 802a2d6:	f7ea f9f9 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a2da:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a2de:	4410      	add	r0, r2
 802a2e0:	f8d9 2000 	ldr.w	r2, [r9]
 802a2e4:	4282      	cmp	r2, r0
 802a2e6:	bfc8      	it	gt
 802a2e8:	f8c9 0000 	strgt.w	r0, [r9]
 802a2ec:	683a      	ldr	r2, [r7, #0]
 802a2ee:	4290      	cmp	r0, r2
 802a2f0:	bfc8      	it	gt
 802a2f2:	6038      	strgt	r0, [r7, #0]
 802a2f4:	4658      	mov	r0, fp
 802a2f6:	f7ff ff71 	bl	802a1dc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a2fa:	a903      	add	r1, sp, #12
 802a2fc:	9003      	str	r0, [sp, #12]
 802a2fe:	4650      	mov	r0, sl
 802a300:	f7ea f9e4 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a304:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a308:	1a10      	subs	r0, r2, r0
 802a30a:	6832      	ldr	r2, [r6, #0]
 802a30c:	4282      	cmp	r2, r0
 802a30e:	bfc8      	it	gt
 802a310:	6030      	strgt	r0, [r6, #0]
 802a312:	682a      	ldr	r2, [r5, #0]
 802a314:	4290      	cmp	r0, r2
 802a316:	bfc8      	it	gt
 802a318:	6028      	strgt	r0, [r5, #0]
 802a31a:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802a31e:	e7d1      	b.n	802a2c4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 802a320:	9b00      	ldr	r3, [sp, #0]
 802a322:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 802a326:	455b      	cmp	r3, fp
 802a328:	dd27      	ble.n	802a37a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 802a32a:	4618      	mov	r0, r3
 802a32c:	f7ea fb06 	bl	801493c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a330:	a903      	add	r1, sp, #12
 802a332:	9003      	str	r0, [sp, #12]
 802a334:	4650      	mov	r0, sl
 802a336:	f7ea f9c9 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a33a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a33e:	4410      	add	r0, r2
 802a340:	f8d9 2000 	ldr.w	r2, [r9]
 802a344:	4282      	cmp	r2, r0
 802a346:	bfc8      	it	gt
 802a348:	f8c9 0000 	strgt.w	r0, [r9]
 802a34c:	683a      	ldr	r2, [r7, #0]
 802a34e:	4290      	cmp	r0, r2
 802a350:	bfc8      	it	gt
 802a352:	6038      	strgt	r0, [r7, #0]
 802a354:	9800      	ldr	r0, [sp, #0]
 802a356:	f7ff ff41 	bl	802a1dc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a35a:	a903      	add	r1, sp, #12
 802a35c:	9003      	str	r0, [sp, #12]
 802a35e:	4650      	mov	r0, sl
 802a360:	f7ea f9b4 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a364:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a368:	1a10      	subs	r0, r2, r0
 802a36a:	6832      	ldr	r2, [r6, #0]
 802a36c:	4282      	cmp	r2, r0
 802a36e:	bfc8      	it	gt
 802a370:	6030      	strgt	r0, [r6, #0]
 802a372:	682a      	ldr	r2, [r5, #0]
 802a374:	4290      	cmp	r0, r2
 802a376:	bfc8      	it	gt
 802a378:	6028      	strgt	r0, [r5, #0]
 802a37a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a37e:	f8d9 1000 	ldr.w	r1, [r9]
 802a382:	4291      	cmp	r1, r2
 802a384:	bfc8      	it	gt
 802a386:	f8c9 2000 	strgt.w	r2, [r9]
 802a38a:	683a      	ldr	r2, [r7, #0]
 802a38c:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 802a390:	429a      	cmp	r2, r3
 802a392:	bfb8      	it	lt
 802a394:	603b      	strlt	r3, [r7, #0]
 802a396:	6832      	ldr	r2, [r6, #0]
 802a398:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802a39c:	429a      	cmp	r2, r3
 802a39e:	bfc8      	it	gt
 802a3a0:	6033      	strgt	r3, [r6, #0]
 802a3a2:	682a      	ldr	r2, [r5, #0]
 802a3a4:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802a3a8:	429a      	cmp	r2, r3
 802a3aa:	da00      	bge.n	802a3ae <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802a3ac:	602b      	str	r3, [r5, #0]
 802a3ae:	b005      	add	sp, #20
 802a3b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a3b4:	2002      	movs	r0, #2
 802a3b6:	3401      	adds	r4, #1
 802a3b8:	fb94 f4f0 	sdiv	r4, r4, r0
 802a3bc:	4610      	mov	r0, r2
 802a3be:	9201      	str	r2, [sp, #4]
 802a3c0:	f7ea fabc 	bl	801493c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a3c4:	a903      	add	r1, sp, #12
 802a3c6:	9003      	str	r0, [sp, #12]
 802a3c8:	4650      	mov	r0, sl
 802a3ca:	f7ea f97f 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a3ce:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802a3d2:	9a01      	ldr	r2, [sp, #4]
 802a3d4:	4408      	add	r0, r1
 802a3d6:	f8d9 1000 	ldr.w	r1, [r9]
 802a3da:	1b03      	subs	r3, r0, r4
 802a3dc:	4299      	cmp	r1, r3
 802a3de:	bfc8      	it	gt
 802a3e0:	f8c9 3000 	strgt.w	r3, [r9]
 802a3e4:	6839      	ldr	r1, [r7, #0]
 802a3e6:	428b      	cmp	r3, r1
 802a3e8:	bfc8      	it	gt
 802a3ea:	603b      	strgt	r3, [r7, #0]
 802a3ec:	f8d9 1000 	ldr.w	r1, [r9]
 802a3f0:	4420      	add	r0, r4
 802a3f2:	4281      	cmp	r1, r0
 802a3f4:	bfc8      	it	gt
 802a3f6:	f8c9 0000 	strgt.w	r0, [r9]
 802a3fa:	6839      	ldr	r1, [r7, #0]
 802a3fc:	4288      	cmp	r0, r1
 802a3fe:	bfc8      	it	gt
 802a400:	6038      	strgt	r0, [r7, #0]
 802a402:	4610      	mov	r0, r2
 802a404:	f7ff feea 	bl	802a1dc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a408:	a903      	add	r1, sp, #12
 802a40a:	9003      	str	r0, [sp, #12]
 802a40c:	4650      	mov	r0, sl
 802a40e:	f7ea f95d 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a412:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a416:	1a10      	subs	r0, r2, r0
 802a418:	6832      	ldr	r2, [r6, #0]
 802a41a:	1b01      	subs	r1, r0, r4
 802a41c:	428a      	cmp	r2, r1
 802a41e:	bfc8      	it	gt
 802a420:	6031      	strgt	r1, [r6, #0]
 802a422:	682a      	ldr	r2, [r5, #0]
 802a424:	4291      	cmp	r1, r2
 802a426:	bfc8      	it	gt
 802a428:	6029      	strgt	r1, [r5, #0]
 802a42a:	6832      	ldr	r2, [r6, #0]
 802a42c:	4420      	add	r0, r4
 802a42e:	4282      	cmp	r2, r0
 802a430:	bfc8      	it	gt
 802a432:	6030      	strgt	r0, [r6, #0]
 802a434:	682a      	ldr	r2, [r5, #0]
 802a436:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802a43a:	4290      	cmp	r0, r2
 802a43c:	fb9b f2f1 	sdiv	r2, fp, r1
 802a440:	fb01 b212 	mls	r2, r1, r2, fp
 802a444:	eba1 0202 	sub.w	r2, r1, r2
 802a448:	bfc8      	it	gt
 802a44a:	6028      	strgt	r0, [r5, #0]
 802a44c:	fb92 f0f1 	sdiv	r0, r2, r1
 802a450:	fb01 2210 	mls	r2, r1, r0, r2
 802a454:	4493      	add	fp, r2
 802a456:	9b00      	ldr	r3, [sp, #0]
 802a458:	455b      	cmp	r3, fp
 802a45a:	db40      	blt.n	802a4de <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 802a45c:	4658      	mov	r0, fp
 802a45e:	f7ea fa6d 	bl	801493c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a462:	a903      	add	r1, sp, #12
 802a464:	9003      	str	r0, [sp, #12]
 802a466:	4650      	mov	r0, sl
 802a468:	f7ea f930 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a46c:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a470:	4410      	add	r0, r2
 802a472:	f8d9 2000 	ldr.w	r2, [r9]
 802a476:	1b01      	subs	r1, r0, r4
 802a478:	428a      	cmp	r2, r1
 802a47a:	bfc8      	it	gt
 802a47c:	f8c9 1000 	strgt.w	r1, [r9]
 802a480:	683a      	ldr	r2, [r7, #0]
 802a482:	4291      	cmp	r1, r2
 802a484:	bfc8      	it	gt
 802a486:	6039      	strgt	r1, [r7, #0]
 802a488:	f8d9 2000 	ldr.w	r2, [r9]
 802a48c:	4420      	add	r0, r4
 802a48e:	4282      	cmp	r2, r0
 802a490:	bfc8      	it	gt
 802a492:	f8c9 0000 	strgt.w	r0, [r9]
 802a496:	683a      	ldr	r2, [r7, #0]
 802a498:	4290      	cmp	r0, r2
 802a49a:	bfc8      	it	gt
 802a49c:	6038      	strgt	r0, [r7, #0]
 802a49e:	4658      	mov	r0, fp
 802a4a0:	f7ff fe9c 	bl	802a1dc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a4a4:	a903      	add	r1, sp, #12
 802a4a6:	9003      	str	r0, [sp, #12]
 802a4a8:	4650      	mov	r0, sl
 802a4aa:	f7ea f90f 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a4ae:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a4b2:	1a10      	subs	r0, r2, r0
 802a4b4:	6832      	ldr	r2, [r6, #0]
 802a4b6:	1b01      	subs	r1, r0, r4
 802a4b8:	428a      	cmp	r2, r1
 802a4ba:	bfc8      	it	gt
 802a4bc:	6031      	strgt	r1, [r6, #0]
 802a4be:	682a      	ldr	r2, [r5, #0]
 802a4c0:	4291      	cmp	r1, r2
 802a4c2:	bfc8      	it	gt
 802a4c4:	6029      	strgt	r1, [r5, #0]
 802a4c6:	6832      	ldr	r2, [r6, #0]
 802a4c8:	4420      	add	r0, r4
 802a4ca:	4282      	cmp	r2, r0
 802a4cc:	bfc8      	it	gt
 802a4ce:	6030      	strgt	r0, [r6, #0]
 802a4d0:	682a      	ldr	r2, [r5, #0]
 802a4d2:	4290      	cmp	r0, r2
 802a4d4:	bfc8      	it	gt
 802a4d6:	6028      	strgt	r0, [r5, #0]
 802a4d8:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802a4dc:	e7bb      	b.n	802a456 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 802a4de:	9b00      	ldr	r3, [sp, #0]
 802a4e0:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 802a4e4:	455b      	cmp	r3, fp
 802a4e6:	f77f af62 	ble.w	802a3ae <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802a4ea:	4618      	mov	r0, r3
 802a4ec:	f7ea fa26 	bl	801493c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a4f0:	a903      	add	r1, sp, #12
 802a4f2:	9003      	str	r0, [sp, #12]
 802a4f4:	4650      	mov	r0, sl
 802a4f6:	f7ea f8e9 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a4fa:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a4fe:	4410      	add	r0, r2
 802a500:	f8d9 2000 	ldr.w	r2, [r9]
 802a504:	1b01      	subs	r1, r0, r4
 802a506:	428a      	cmp	r2, r1
 802a508:	bfc8      	it	gt
 802a50a:	f8c9 1000 	strgt.w	r1, [r9]
 802a50e:	683a      	ldr	r2, [r7, #0]
 802a510:	4291      	cmp	r1, r2
 802a512:	bfc8      	it	gt
 802a514:	6039      	strgt	r1, [r7, #0]
 802a516:	f8d9 2000 	ldr.w	r2, [r9]
 802a51a:	4420      	add	r0, r4
 802a51c:	4282      	cmp	r2, r0
 802a51e:	bfc8      	it	gt
 802a520:	f8c9 0000 	strgt.w	r0, [r9]
 802a524:	683b      	ldr	r3, [r7, #0]
 802a526:	4298      	cmp	r0, r3
 802a528:	bfc8      	it	gt
 802a52a:	6038      	strgt	r0, [r7, #0]
 802a52c:	9800      	ldr	r0, [sp, #0]
 802a52e:	f7ff fe55 	bl	802a1dc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a532:	a903      	add	r1, sp, #12
 802a534:	9003      	str	r0, [sp, #12]
 802a536:	4650      	mov	r0, sl
 802a538:	f7ea f8c8 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a53c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802a540:	6832      	ldr	r2, [r6, #0]
 802a542:	1a18      	subs	r0, r3, r0
 802a544:	1b03      	subs	r3, r0, r4
 802a546:	429a      	cmp	r2, r3
 802a548:	bfc8      	it	gt
 802a54a:	6033      	strgt	r3, [r6, #0]
 802a54c:	682a      	ldr	r2, [r5, #0]
 802a54e:	4293      	cmp	r3, r2
 802a550:	bfc8      	it	gt
 802a552:	602b      	strgt	r3, [r5, #0]
 802a554:	6833      	ldr	r3, [r6, #0]
 802a556:	4404      	add	r4, r0
 802a558:	42a3      	cmp	r3, r4
 802a55a:	bfc8      	it	gt
 802a55c:	6034      	strgt	r4, [r6, #0]
 802a55e:	682b      	ldr	r3, [r5, #0]
 802a560:	429c      	cmp	r4, r3
 802a562:	bfc8      	it	gt
 802a564:	602c      	strgt	r4, [r5, #0]
 802a566:	e722      	b.n	802a3ae <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

0802a568 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 802a568:	b530      	push	{r4, r5, lr}
 802a56a:	4604      	mov	r4, r0
 802a56c:	4608      	mov	r0, r1
 802a56e:	4611      	mov	r1, r2
 802a570:	461a      	mov	r2, r3
 802a572:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 802a576:	b089      	sub	sp, #36	; 0x24
 802a578:	015b      	lsls	r3, r3, #5
 802a57a:	9304      	str	r3, [sp, #16]
 802a57c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 802a580:	2500      	movs	r5, #0
 802a582:	015b      	lsls	r3, r3, #5
 802a584:	e9cd 3506 	strd	r3, r5, [sp, #24]
 802a588:	ab07      	add	r3, sp, #28
 802a58a:	9302      	str	r3, [sp, #8]
 802a58c:	ab06      	add	r3, sp, #24
 802a58e:	9301      	str	r3, [sp, #4]
 802a590:	ab05      	add	r3, sp, #20
 802a592:	9300      	str	r3, [sp, #0]
 802a594:	ab04      	add	r3, sp, #16
 802a596:	9505      	str	r5, [sp, #20]
 802a598:	f7ff fe3e 	bl	802a218 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 802a59c:	2520      	movs	r5, #32
 802a59e:	9a04      	ldr	r2, [sp, #16]
 802a5a0:	9805      	ldr	r0, [sp, #20]
 802a5a2:	fb92 f2f5 	sdiv	r2, r2, r5
 802a5a6:	fb90 f0f5 	sdiv	r0, r0, r5
 802a5aa:	b292      	uxth	r2, r2
 802a5ac:	3002      	adds	r0, #2
 802a5ae:	1a80      	subs	r0, r0, r2
 802a5b0:	9b06      	ldr	r3, [sp, #24]
 802a5b2:	9907      	ldr	r1, [sp, #28]
 802a5b4:	fb93 f3f5 	sdiv	r3, r3, r5
 802a5b8:	fb91 f1f5 	sdiv	r1, r1, r5
 802a5bc:	b29b      	uxth	r3, r3
 802a5be:	3102      	adds	r1, #2
 802a5c0:	1ac9      	subs	r1, r1, r3
 802a5c2:	3a01      	subs	r2, #1
 802a5c4:	3b01      	subs	r3, #1
 802a5c6:	80a0      	strh	r0, [r4, #4]
 802a5c8:	4620      	mov	r0, r4
 802a5ca:	8022      	strh	r2, [r4, #0]
 802a5cc:	8063      	strh	r3, [r4, #2]
 802a5ce:	80e1      	strh	r1, [r4, #6]
 802a5d0:	b009      	add	sp, #36	; 0x24
 802a5d2:	bd30      	pop	{r4, r5, pc}

0802a5d4 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 802a5d4:	b510      	push	{r4, lr}
 802a5d6:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 802a5da:	4604      	mov	r4, r0
 802a5dc:	f7ff ffc4 	bl	802a568 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 802a5e0:	4620      	mov	r0, r4
 802a5e2:	bd10      	pop	{r4, pc}

0802a5e4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 802a5e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802a5e6:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 802a5ea:	4606      	mov	r6, r0
 802a5ec:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 802a5f0:	6813      	ldr	r3, [r2, #0]
 802a5f2:	42a5      	cmp	r5, r4
 802a5f4:	ea4f 1040 	mov.w	r0, r0, lsl #5
 802a5f8:	da2b      	bge.n	802a652 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 802a5fa:	42a3      	cmp	r3, r4
 802a5fc:	dd14      	ble.n	802a628 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 802a5fe:	b168      	cbz	r0, 802a61c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a600:	4267      	negs	r7, r4
 802a602:	fb97 f2f0 	sdiv	r2, r7, r0
 802a606:	fb00 7212 	mls	r2, r0, r2, r7
 802a60a:	1a82      	subs	r2, r0, r2
 802a60c:	fb92 f7f0 	sdiv	r7, r2, r0
 802a610:	fb00 2017 	mls	r0, r0, r7, r2
 802a614:	1a24      	subs	r4, r4, r0
 802a616:	42ac      	cmp	r4, r5
 802a618:	bfb8      	it	lt
 802a61a:	462c      	movlt	r4, r5
 802a61c:	4630      	mov	r0, r6
 802a61e:	4622      	mov	r2, r4
 802a620:	f7ff ffa2 	bl	802a568 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 802a624:	4630      	mov	r0, r6
 802a626:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802a628:	42ab      	cmp	r3, r5
 802a62a:	dd0e      	ble.n	802a64a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802a62c:	b168      	cbz	r0, 802a64a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802a62e:	425f      	negs	r7, r3
 802a630:	fb97 f2f0 	sdiv	r2, r7, r0
 802a634:	fb00 7212 	mls	r2, r0, r2, r7
 802a638:	1a82      	subs	r2, r0, r2
 802a63a:	fb92 f7f0 	sdiv	r7, r2, r0
 802a63e:	fb00 2017 	mls	r0, r0, r7, r2
 802a642:	1a1b      	subs	r3, r3, r0
 802a644:	42ab      	cmp	r3, r5
 802a646:	bfb8      	it	lt
 802a648:	462b      	movlt	r3, r5
 802a64a:	4622      	mov	r2, r4
 802a64c:	461c      	mov	r4, r3
 802a64e:	4613      	mov	r3, r2
 802a650:	e7e4      	b.n	802a61c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a652:	42a3      	cmp	r3, r4
 802a654:	da10      	bge.n	802a678 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 802a656:	b148      	cbz	r0, 802a66c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 802a658:	fb94 f2f0 	sdiv	r2, r4, r0
 802a65c:	fb00 4212 	mls	r2, r0, r2, r4
 802a660:	1a82      	subs	r2, r0, r2
 802a662:	fb92 f7f0 	sdiv	r7, r2, r0
 802a666:	fb00 2017 	mls	r0, r0, r7, r2
 802a66a:	4404      	add	r4, r0
 802a66c:	42a5      	cmp	r5, r4
 802a66e:	bfa8      	it	ge
 802a670:	4625      	movge	r5, r4
 802a672:	461c      	mov	r4, r3
 802a674:	462b      	mov	r3, r5
 802a676:	e7d1      	b.n	802a61c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a678:	42ab      	cmp	r3, r5
 802a67a:	dacf      	bge.n	802a61c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a67c:	2800      	cmp	r0, #0
 802a67e:	d0cd      	beq.n	802a61c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a680:	fb93 f2f0 	sdiv	r2, r3, r0
 802a684:	fb00 3212 	mls	r2, r0, r2, r3
 802a688:	1a82      	subs	r2, r0, r2
 802a68a:	fb92 f7f0 	sdiv	r7, r2, r0
 802a68e:	fb00 2017 	mls	r0, r0, r7, r2
 802a692:	4403      	add	r3, r0
 802a694:	42ab      	cmp	r3, r5
 802a696:	bfa8      	it	ge
 802a698:	462b      	movge	r3, r5
 802a69a:	e7bf      	b.n	802a61c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

0802a69c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 802a69c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a6a0:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 802a6a4:	42ae      	cmp	r6, r5
 802a6a6:	bfa2      	ittt	ge
 802a6a8:	4633      	movge	r3, r6
 802a6aa:	462e      	movge	r6, r5
 802a6ac:	461d      	movge	r5, r3
 802a6ae:	1bab      	subs	r3, r5, r6
 802a6b0:	468b      	mov	fp, r1
 802a6b2:	6c01      	ldr	r1, [r0, #64]	; 0x40
 802a6b4:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 802a6b8:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 802a6bc:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802a6c0:	f04f 0220 	mov.w	r2, #32
 802a6c4:	b0ab      	sub	sp, #172	; 0xac
 802a6c6:	4604      	mov	r4, r0
 802a6c8:	bfa4      	itt	ge
 802a6ca:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 802a6ce:	2600      	movge	r6, #0
 802a6d0:	fb99 f9f2 	sdiv	r9, r9, r2
 802a6d4:	fb9a faf2 	sdiv	sl, sl, r2
 802a6d8:	6b43      	ldr	r3, [r0, #52]	; 0x34
 802a6da:	2900      	cmp	r1, #0
 802a6dc:	f000 80f5 	beq.w	802a8ca <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 802a6e0:	f9bb 0000 	ldrsh.w	r0, [fp]
 802a6e4:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 802a6e8:	eba9 0700 	sub.w	r7, r9, r0
 802a6ec:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 802a6f0:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 802a6f4:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 802a6f8:	ebaa 0802 	sub.w	r8, sl, r2
 802a6fc:	4407      	add	r7, r0
 802a6fe:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 802a702:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 802a706:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 802a70a:	b23f      	sxth	r7, r7
 802a70c:	4490      	add	r8, r2
 802a70e:	eba9 0707 	sub.w	r7, r9, r7
 802a712:	fa0f f888 	sxth.w	r8, r8
 802a716:	ebaa 0808 	sub.w	r8, sl, r8
 802a71a:	2f00      	cmp	r7, #0
 802a71c:	bfb8      	it	lt
 802a71e:	427f      	neglt	r7, r7
 802a720:	f1b8 0f00 	cmp.w	r8, #0
 802a724:	bfb8      	it	lt
 802a726:	f1c8 0800 	rsblt	r8, r8, #0
 802a72a:	45bc      	cmp	ip, r7
 802a72c:	bfcc      	ite	gt
 802a72e:	f10c 0701 	addgt.w	r7, ip, #1
 802a732:	3701      	addle	r7, #1
 802a734:	4540      	cmp	r0, r8
 802a736:	bfc8      	it	gt
 802a738:	f100 0801 	addgt.w	r8, r0, #1
 802a73c:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 802a740:	f100 0001 	add.w	r0, r0, #1
 802a744:	ea4f 0060 	mov.w	r0, r0, asr #1
 802a748:	f04f 0202 	mov.w	r2, #2
 802a74c:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 802a750:	fb91 f1f2 	sdiv	r1, r1, r2
 802a754:	eba3 0301 	sub.w	r3, r3, r1
 802a758:	bfd8      	it	le
 802a75a:	f108 0801 	addle.w	r8, r8, #1
 802a75e:	9201      	str	r2, [sp, #4]
 802a760:	930d      	str	r3, [sp, #52]	; 0x34
 802a762:	f7ea f8cb 	bl	80148fc <_ZN8touchgfx7CWRUtil4sineEi>
 802a766:	a92a      	add	r1, sp, #168	; 0xa8
 802a768:	fb08 f808 	mul.w	r8, r8, r8
 802a76c:	f841 0d70 	str.w	r0, [r1, #-112]!
 802a770:	a80d      	add	r0, sp, #52	; 0x34
 802a772:	f7e9 ffab 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a776:	fb07 8707 	mla	r7, r7, r7, r8
 802a77a:	f04f 0c20 	mov.w	ip, #32
 802a77e:	fb90 f0fc 	sdiv	r0, r0, ip
 802a782:	4340      	muls	r0, r0
 802a784:	4287      	cmp	r7, r0
 802a786:	9a01      	ldr	r2, [sp, #4]
 802a788:	da04      	bge.n	802a794 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 802a78a:	2401      	movs	r4, #1
 802a78c:	4620      	mov	r0, r4
 802a78e:	b02b      	add	sp, #172	; 0xac
 802a790:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a794:	6b60      	ldr	r0, [r4, #52]	; 0x34
 802a796:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802a798:	fb91 f3f2 	sdiv	r3, r1, r2
 802a79c:	4403      	add	r3, r0
 802a79e:	fb93 f3fc 	sdiv	r3, r3, ip
 802a7a2:	f9bb 1000 	ldrsh.w	r1, [fp]
 802a7a6:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 802a7aa:	440a      	add	r2, r1
 802a7ac:	b212      	sxth	r2, r2
 802a7ae:	454a      	cmp	r2, r9
 802a7b0:	bfa8      	it	ge
 802a7b2:	464a      	movge	r2, r9
 802a7b4:	428a      	cmp	r2, r1
 802a7b6:	bfac      	ite	ge
 802a7b8:	eba9 0902 	subge.w	r9, r9, r2
 802a7bc:	eba9 0901 	sublt.w	r9, r9, r1
 802a7c0:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 802a7c4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 802a7c8:	440a      	add	r2, r1
 802a7ca:	b212      	sxth	r2, r2
 802a7cc:	4552      	cmp	r2, sl
 802a7ce:	bfa8      	it	ge
 802a7d0:	4652      	movge	r2, sl
 802a7d2:	428a      	cmp	r2, r1
 802a7d4:	bfac      	ite	ge
 802a7d6:	ebaa 0a02 	subge.w	sl, sl, r2
 802a7da:	ebaa 0a01 	sublt.w	sl, sl, r1
 802a7de:	3301      	adds	r3, #1
 802a7e0:	fb0a fa0a 	mul.w	sl, sl, sl
 802a7e4:	fb09 a909 	mla	r9, r9, r9, sl
 802a7e8:	435b      	muls	r3, r3
 802a7ea:	4599      	cmp	r9, r3
 802a7ec:	dccd      	bgt.n	802a78a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 802a7ee:	465a      	mov	r2, fp
 802a7f0:	4621      	mov	r1, r4
 802a7f2:	a80e      	add	r0, sp, #56	; 0x38
 802a7f4:	f7ff faae 	bl	8029d54 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 802a7f8:	6b62      	ldr	r2, [r4, #52]	; 0x34
 802a7fa:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802a7fc:	9209      	str	r2, [sp, #36]	; 0x24
 802a7fe:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 802a802:	930a      	str	r3, [sp, #40]	; 0x28
 802a804:	dd07      	ble.n	802a816 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 802a806:	2102      	movs	r1, #2
 802a808:	fb93 f3f1 	sdiv	r3, r3, r1
 802a80c:	4413      	add	r3, r2
 802a80e:	930a      	str	r3, [sp, #40]	; 0x28
 802a810:	fb93 f3f1 	sdiv	r3, r3, r1
 802a814:	9309      	str	r3, [sp, #36]	; 0x24
 802a816:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802a81a:	4630      	mov	r0, r6
 802a81c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802a820:	930b      	str	r3, [sp, #44]	; 0x2c
 802a822:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 802a826:	f7ea f889 	bl	801493c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a82a:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 802a82e:	f04f 0a02 	mov.w	sl, #2
 802a832:	f849 0d74 	str.w	r0, [r9, #-116]!
 802a836:	a80b      	add	r0, sp, #44	; 0x2c
 802a838:	4649      	mov	r1, r9
 802a83a:	f7e9 ff47 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a83e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a840:	fb90 f0fa 	sdiv	r0, r0, sl
 802a844:	eb00 0b03 	add.w	fp, r0, r3
 802a848:	4630      	mov	r0, r6
 802a84a:	f7ff fcc7 	bl	802a1dc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a84e:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 802a852:	017f      	lsls	r7, r7, #5
 802a854:	f848 0d78 	str.w	r0, [r8, #-120]!
 802a858:	a80b      	add	r0, sp, #44	; 0x2c
 802a85a:	4641      	mov	r1, r8
 802a85c:	f7e9 ff36 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a860:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a862:	fb90 f0fa 	sdiv	r0, r0, sl
 802a866:	4659      	mov	r1, fp
 802a868:	1a12      	subs	r2, r2, r0
 802a86a:	a80e      	add	r0, sp, #56	; 0x38
 802a86c:	f7ff fbf2 	bl	802a054 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 802a870:	f106 0a20 	add.w	sl, r6, #32
 802a874:	bb67      	cbnz	r7, 802a8d0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 802a876:	46b3      	mov	fp, r6
 802a878:	45aa      	cmp	sl, r5
 802a87a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802a87c:	dc33      	bgt.n	802a8e6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 802a87e:	9909      	ldr	r1, [sp, #36]	; 0x24
 802a880:	4650      	mov	r0, sl
 802a882:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 802a886:	920b      	str	r2, [sp, #44]	; 0x2c
 802a888:	f7ea f858 	bl	801493c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a88c:	4641      	mov	r1, r8
 802a88e:	900c      	str	r0, [sp, #48]	; 0x30
 802a890:	a80b      	add	r0, sp, #44	; 0x2c
 802a892:	f7e9 ff1b 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a896:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 802a898:	2302      	movs	r3, #2
 802a89a:	fb90 f0f3 	sdiv	r0, r0, r3
 802a89e:	eb00 0b02 	add.w	fp, r0, r2
 802a8a2:	4650      	mov	r0, sl
 802a8a4:	f7ff fc9a 	bl	802a1dc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a8a8:	4649      	mov	r1, r9
 802a8aa:	900d      	str	r0, [sp, #52]	; 0x34
 802a8ac:	a80b      	add	r0, sp, #44	; 0x2c
 802a8ae:	f7e9 ff0d 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a8b2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a8b4:	2302      	movs	r3, #2
 802a8b6:	4659      	mov	r1, fp
 802a8b8:	fb90 f0f3 	sdiv	r0, r0, r3
 802a8bc:	1a12      	subs	r2, r2, r0
 802a8be:	a80e      	add	r0, sp, #56	; 0x38
 802a8c0:	46d3      	mov	fp, sl
 802a8c2:	f7ff fc14 	bl	802a0ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a8c6:	44ba      	add	sl, r7
 802a8c8:	e7d6      	b.n	802a878 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 802a8ca:	fb93 f3f2 	sdiv	r3, r3, r2
 802a8ce:	e768      	b.n	802a7a2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 802a8d0:	fb9a f2f7 	sdiv	r2, sl, r7
 802a8d4:	fb07 a212 	mls	r2, r7, r2, sl
 802a8d8:	1aba      	subs	r2, r7, r2
 802a8da:	fb92 f1f7 	sdiv	r1, r2, r7
 802a8de:	fb07 2211 	mls	r2, r7, r1, r2
 802a8e2:	4492      	add	sl, r2
 802a8e4:	e7c7      	b.n	802a876 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 802a8e6:	45ab      	cmp	fp, r5
 802a8e8:	da23      	bge.n	802a932 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 802a8ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802a8ec:	4628      	mov	r0, r5
 802a8ee:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 802a8f2:	920b      	str	r2, [sp, #44]	; 0x2c
 802a8f4:	f7ea f822 	bl	801493c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a8f8:	4641      	mov	r1, r8
 802a8fa:	900c      	str	r0, [sp, #48]	; 0x30
 802a8fc:	a80b      	add	r0, sp, #44	; 0x2c
 802a8fe:	f7e9 fee5 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a902:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a904:	f04f 0a02 	mov.w	sl, #2
 802a908:	fb90 f0fa 	sdiv	r0, r0, sl
 802a90c:	4403      	add	r3, r0
 802a90e:	4628      	mov	r0, r5
 802a910:	9301      	str	r3, [sp, #4]
 802a912:	f7ff fc63 	bl	802a1dc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a916:	4649      	mov	r1, r9
 802a918:	900d      	str	r0, [sp, #52]	; 0x34
 802a91a:	a80b      	add	r0, sp, #44	; 0x2c
 802a91c:	f7e9 fed6 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a920:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a922:	9b01      	ldr	r3, [sp, #4]
 802a924:	fb90 f0fa 	sdiv	r0, r0, sl
 802a928:	4619      	mov	r1, r3
 802a92a:	1a12      	subs	r2, r2, r0
 802a92c:	a80e      	add	r0, sp, #56	; 0x38
 802a92e:	f7ff fbde 	bl	802a0ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a932:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802a934:	b99b      	cbnz	r3, 802a95e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 802a936:	1bad      	subs	r5, r5, r6
 802a938:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 802a93c:	da04      	bge.n	802a948 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802a93e:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 802a942:	a80e      	add	r0, sp, #56	; 0x38
 802a944:	f7ff fbd3 	bl	802a0ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a948:	21ff      	movs	r1, #255	; 0xff
 802a94a:	a80e      	add	r0, sp, #56	; 0x38
 802a94c:	f7ff fabe 	bl	8029ecc <_ZN8touchgfx6Canvas6renderEh>
 802a950:	4604      	mov	r4, r0
 802a952:	4b8a      	ldr	r3, [pc, #552]	; (802ab7c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 802a954:	930e      	str	r3, [sp, #56]	; 0x38
 802a956:	a816      	add	r0, sp, #88	; 0x58
 802a958:	f7eb fcf0 	bl	801633c <_ZN8touchgfx7OutlineD1Ev>
 802a95c:	e716      	b.n	802a78c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 802a95e:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 802a962:	429a      	cmp	r2, r3
 802a964:	f0c0 8107 	bcc.w	802ab76 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 802a968:	1bab      	subs	r3, r5, r6
 802a96a:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 802a96e:	9301      	str	r3, [sp, #4]
 802a970:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802a974:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 802a978:	da43      	bge.n	802aa02 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 802a97a:	4628      	mov	r0, r5
 802a97c:	f7e9 ffde 	bl	801493c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a980:	4649      	mov	r1, r9
 802a982:	900d      	str	r0, [sp, #52]	; 0x34
 802a984:	a809      	add	r0, sp, #36	; 0x24
 802a986:	f7e9 fea1 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a98a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a98c:	18c3      	adds	r3, r0, r3
 802a98e:	4628      	mov	r0, r5
 802a990:	9303      	str	r3, [sp, #12]
 802a992:	f7ff fc23 	bl	802a1dc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a996:	4649      	mov	r1, r9
 802a998:	900d      	str	r0, [sp, #52]	; 0x34
 802a99a:	a809      	add	r0, sp, #36	; 0x24
 802a99c:	f7e9 fe96 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a9a0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802a9a2:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 802a9a6:	1a1b      	subs	r3, r3, r0
 802a9a8:	9302      	str	r3, [sp, #8]
 802a9aa:	9204      	str	r2, [sp, #16]
 802a9ac:	eb0a 0305 	add.w	r3, sl, r5
 802a9b0:	9a04      	ldr	r2, [sp, #16]
 802a9b2:	4293      	cmp	r3, r2
 802a9b4:	da25      	bge.n	802aa02 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 802a9b6:	4618      	mov	r0, r3
 802a9b8:	9306      	str	r3, [sp, #24]
 802a9ba:	f7e9 ffbf 	bl	801493c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a9be:	4649      	mov	r1, r9
 802a9c0:	900d      	str	r0, [sp, #52]	; 0x34
 802a9c2:	a80a      	add	r0, sp, #40	; 0x28
 802a9c4:	f7e9 fe82 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a9c8:	9b03      	ldr	r3, [sp, #12]
 802a9ca:	2202      	movs	r2, #2
 802a9cc:	fb90 f0f2 	sdiv	r0, r0, r2
 802a9d0:	18c3      	adds	r3, r0, r3
 802a9d2:	9305      	str	r3, [sp, #20]
 802a9d4:	9b06      	ldr	r3, [sp, #24]
 802a9d6:	9207      	str	r2, [sp, #28]
 802a9d8:	4618      	mov	r0, r3
 802a9da:	f7ff fbff 	bl	802a1dc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a9de:	a92a      	add	r1, sp, #168	; 0xa8
 802a9e0:	f841 0d78 	str.w	r0, [r1, #-120]!
 802a9e4:	a80a      	add	r0, sp, #40	; 0x28
 802a9e6:	f7e9 fe71 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a9ea:	9b02      	ldr	r3, [sp, #8]
 802a9ec:	9a07      	ldr	r2, [sp, #28]
 802a9ee:	9905      	ldr	r1, [sp, #20]
 802a9f0:	fb90 f2f2 	sdiv	r2, r0, r2
 802a9f4:	a80e      	add	r0, sp, #56	; 0x38
 802a9f6:	1a9a      	subs	r2, r3, r2
 802a9f8:	f7ff fb79 	bl	802a0ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a9fc:	9b06      	ldr	r3, [sp, #24]
 802a9fe:	4453      	add	r3, sl
 802aa00:	e7d6      	b.n	802a9b0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 802aa02:	45ab      	cmp	fp, r5
 802aa04:	da25      	bge.n	802aa52 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 802aa06:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802aa0a:	4628      	mov	r0, r5
 802aa0c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802aa10:	930b      	str	r3, [sp, #44]	; 0x2c
 802aa12:	f7e9 ff93 	bl	801493c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802aa16:	4641      	mov	r1, r8
 802aa18:	900c      	str	r0, [sp, #48]	; 0x30
 802aa1a:	a80b      	add	r0, sp, #44	; 0x2c
 802aa1c:	f7e9 fe56 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa20:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802aa22:	2202      	movs	r2, #2
 802aa24:	fb90 f0f2 	sdiv	r0, r0, r2
 802aa28:	eb00 0903 	add.w	r9, r0, r3
 802aa2c:	4628      	mov	r0, r5
 802aa2e:	9202      	str	r2, [sp, #8]
 802aa30:	f7ff fbd4 	bl	802a1dc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802aa34:	a92a      	add	r1, sp, #168	; 0xa8
 802aa36:	f841 0d74 	str.w	r0, [r1, #-116]!
 802aa3a:	a80b      	add	r0, sp, #44	; 0x2c
 802aa3c:	f7e9 fe46 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa40:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802aa42:	9a02      	ldr	r2, [sp, #8]
 802aa44:	fb90 f2f2 	sdiv	r2, r0, r2
 802aa48:	4649      	mov	r1, r9
 802aa4a:	1a9a      	subs	r2, r3, r2
 802aa4c:	a80e      	add	r0, sp, #56	; 0x38
 802aa4e:	f7ff fb4e 	bl	802a0ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802aa52:	46d9      	mov	r9, fp
 802aa54:	2502      	movs	r5, #2
 802aa56:	45b1      	cmp	r9, r6
 802aa58:	db25      	blt.n	802aaa6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 802aa5a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802aa5e:	4648      	mov	r0, r9
 802aa60:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802aa64:	930b      	str	r3, [sp, #44]	; 0x2c
 802aa66:	f7e9 ff69 	bl	801493c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802aa6a:	4641      	mov	r1, r8
 802aa6c:	900c      	str	r0, [sp, #48]	; 0x30
 802aa6e:	a80b      	add	r0, sp, #44	; 0x2c
 802aa70:	f7e9 fe2c 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa74:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802aa76:	fb90 f0f5 	sdiv	r0, r0, r5
 802aa7a:	eb00 0b03 	add.w	fp, r0, r3
 802aa7e:	4648      	mov	r0, r9
 802aa80:	f7ff fbac 	bl	802a1dc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802aa84:	a90d      	add	r1, sp, #52	; 0x34
 802aa86:	900d      	str	r0, [sp, #52]	; 0x34
 802aa88:	a80b      	add	r0, sp, #44	; 0x2c
 802aa8a:	f7e9 fe1f 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa8e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802aa90:	fb90 f0f5 	sdiv	r0, r0, r5
 802aa94:	4659      	mov	r1, fp
 802aa96:	1a12      	subs	r2, r2, r0
 802aa98:	a80e      	add	r0, sp, #56	; 0x38
 802aa9a:	46cb      	mov	fp, r9
 802aa9c:	f7ff fb27 	bl	802a0ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802aaa0:	eba9 0907 	sub.w	r9, r9, r7
 802aaa4:	e7d7      	b.n	802aa56 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 802aaa6:	455e      	cmp	r6, fp
 802aaa8:	da22      	bge.n	802aaf0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 802aaaa:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802aaae:	4630      	mov	r0, r6
 802aab0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802aab4:	930b      	str	r3, [sp, #44]	; 0x2c
 802aab6:	f7e9 ff41 	bl	801493c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802aaba:	4641      	mov	r1, r8
 802aabc:	900c      	str	r0, [sp, #48]	; 0x30
 802aabe:	a80b      	add	r0, sp, #44	; 0x2c
 802aac0:	f7e9 fe04 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aac4:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 802aac6:	2502      	movs	r5, #2
 802aac8:	fb90 f0f5 	sdiv	r0, r0, r5
 802aacc:	4407      	add	r7, r0
 802aace:	4630      	mov	r0, r6
 802aad0:	f7ff fb84 	bl	802a1dc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802aad4:	a92a      	add	r1, sp, #168	; 0xa8
 802aad6:	f841 0d74 	str.w	r0, [r1, #-116]!
 802aada:	a80b      	add	r0, sp, #44	; 0x2c
 802aadc:	f7e9 fdf6 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aae0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802aae2:	fb90 f0f5 	sdiv	r0, r0, r5
 802aae6:	4639      	mov	r1, r7
 802aae8:	1a12      	subs	r2, r2, r0
 802aaea:	a80e      	add	r0, sp, #56	; 0x38
 802aaec:	f7ff faff 	bl	802a0ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802aaf0:	9b01      	ldr	r3, [sp, #4]
 802aaf2:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802aaf6:	f6bf af27 	bge.w	802a948 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802aafa:	4630      	mov	r0, r6
 802aafc:	f7e9 ff1e 	bl	801493c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802ab00:	ad2a      	add	r5, sp, #168	; 0xa8
 802ab02:	f04f 0b02 	mov.w	fp, #2
 802ab06:	f845 0d74 	str.w	r0, [r5, #-116]!
 802ab0a:	a809      	add	r0, sp, #36	; 0x24
 802ab0c:	4629      	mov	r1, r5
 802ab0e:	f7e9 fddd 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802ab12:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802ab14:	eb00 0903 	add.w	r9, r0, r3
 802ab18:	4630      	mov	r0, r6
 802ab1a:	f7ff fb5f 	bl	802a1dc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802ab1e:	4629      	mov	r1, r5
 802ab20:	900d      	str	r0, [sp, #52]	; 0x34
 802ab22:	a809      	add	r0, sp, #36	; 0x24
 802ab24:	f7e9 fdd2 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802ab28:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802ab2a:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 802ab2e:	eba3 0800 	sub.w	r8, r3, r0
 802ab32:	4454      	add	r4, sl
 802ab34:	42a6      	cmp	r6, r4
 802ab36:	f77f af07 	ble.w	802a948 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802ab3a:	4620      	mov	r0, r4
 802ab3c:	f7e9 fefe 	bl	801493c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802ab40:	4629      	mov	r1, r5
 802ab42:	900d      	str	r0, [sp, #52]	; 0x34
 802ab44:	a80a      	add	r0, sp, #40	; 0x28
 802ab46:	f7e9 fdc1 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802ab4a:	fb90 f0fb 	sdiv	r0, r0, fp
 802ab4e:	eb00 0709 	add.w	r7, r0, r9
 802ab52:	4620      	mov	r0, r4
 802ab54:	f7ff fb42 	bl	802a1dc <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802ab58:	a90c      	add	r1, sp, #48	; 0x30
 802ab5a:	900c      	str	r0, [sp, #48]	; 0x30
 802ab5c:	a80a      	add	r0, sp, #40	; 0x28
 802ab5e:	f7e9 fdb5 	bl	80146cc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802ab62:	4639      	mov	r1, r7
 802ab64:	fb90 f2fb 	sdiv	r2, r0, fp
 802ab68:	a80e      	add	r0, sp, #56	; 0x38
 802ab6a:	eba8 0202 	sub.w	r2, r8, r2
 802ab6e:	f7ff fabe 	bl	802a0ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802ab72:	4454      	add	r4, sl
 802ab74:	e7de      	b.n	802ab34 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 802ab76:	2400      	movs	r4, #0
 802ab78:	e6eb      	b.n	802a952 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 802ab7a:	bf00      	nop
 802ab7c:	08032390 	.word	0x08032390

0802ab80 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 802ab80:	b570      	push	{r4, r5, r6, lr}
 802ab82:	790b      	ldrb	r3, [r1, #4]
 802ab84:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 802ab88:	2b00      	cmp	r3, #0
 802ab8a:	bf0c      	ite	eq
 802ab8c:	2301      	moveq	r3, #1
 802ab8e:	2300      	movne	r3, #0
 802ab90:	4604      	mov	r4, r0
 802ab92:	460e      	mov	r6, r1
 802ab94:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 802ab98:	d109      	bne.n	802abae <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 802ab9a:	b14d      	cbz	r5, 802abb0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 802ab9c:	7933      	ldrb	r3, [r6, #4]
 802ab9e:	2b01      	cmp	r3, #1
 802aba0:	d10c      	bne.n	802abbc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802aba2:	6823      	ldr	r3, [r4, #0]
 802aba4:	4620      	mov	r0, r4
 802aba6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 802aba8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802abac:	4718      	bx	r3
 802abae:	b12d      	cbz	r5, 802abbc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802abb0:	6823      	ldr	r3, [r4, #0]
 802abb2:	4620      	mov	r0, r4
 802abb4:	695b      	ldr	r3, [r3, #20]
 802abb6:	4798      	blx	r3
 802abb8:	2d00      	cmp	r5, #0
 802abba:	d1ef      	bne.n	802ab9c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 802abbc:	bd70      	pop	{r4, r5, r6, pc}

0802abbe <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 802abbe:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 802abc2:	4770      	bx	lr

0802abc4 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 802abc4:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 802abc8:	4770      	bx	lr

0802abca <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 802abca:	6802      	ldr	r2, [r0, #0]
 802abcc:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802abd0:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802abd2:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802abd6:	4710      	bx	r2

0802abd8 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 802abd8:	6802      	ldr	r2, [r0, #0]
 802abda:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802abde:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802abe0:	eef0 0a40 	vmov.f32	s1, s0
 802abe4:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802abe8:	4710      	bx	r2

0802abea <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 802abea:	6802      	ldr	r2, [r0, #0]
 802abec:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802abf0:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802abf2:	eeb0 1a40 	vmov.f32	s2, s0
 802abf6:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802abfa:	4710      	bx	r2

0802abfc <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 802abfc:	6802      	ldr	r2, [r0, #0]
 802abfe:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802ac02:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802ac04:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802ac08:	4710      	bx	r2

0802ac0a <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 802ac0a:	6802      	ldr	r2, [r0, #0]
 802ac0c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802ac10:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802ac12:	eef0 0a40 	vmov.f32	s1, s0
 802ac16:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802ac1a:	4710      	bx	r2

0802ac1c <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 802ac1c:	6802      	ldr	r2, [r0, #0]
 802ac1e:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802ac22:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802ac24:	eeb0 1a40 	vmov.f32	s2, s0
 802ac28:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802ac2c:	4710      	bx	r2

0802ac2e <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 802ac2e:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802ac32:	4770      	bx	lr

0802ac34 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 802ac34:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 802ac38:	4770      	bx	lr

0802ac3a <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 802ac3a:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 802ac3e:	4770      	bx	lr

0802ac40 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 802ac40:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 802ac44:	4770      	bx	lr

0802ac46 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 802ac46:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 802ac4a:	4770      	bx	lr

0802ac4c <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 802ac4c:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 802ac50:	4770      	bx	lr

0802ac52 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 802ac52:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 802ac56:	4770      	bx	lr

0802ac58 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 802ac58:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 802ac5c:	4770      	bx	lr

0802ac5e <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 802ac5e:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 802ac62:	4770      	bx	lr

0802ac64 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 802ac64:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 802ac68:	4770      	bx	lr

0802ac6a <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 802ac6a:	ee07 2a90 	vmov	s15, r2
 802ac6e:	6803      	ldr	r3, [r0, #0]
 802ac70:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 802ac74:	ee07 1a90 	vmov	s15, r1
 802ac78:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 802ac7c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 802ac80:	4718      	bx	r3

0802ac82 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 802ac82:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 802ac86:	4770      	bx	lr

0802ac88 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 802ac88:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 802ac8c:	4770      	bx	lr

0802ac8e <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 802ac8e:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 802ac92:	4770      	bx	lr

0802ac94 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 802ac94:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 802ac98:	4770      	bx	lr

0802ac9a <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 802ac9a:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 802ac9e:	4770      	bx	lr

0802aca0 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 802aca0:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 802aca4:	4770      	bx	lr

0802aca6 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 802aca6:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 802acaa:	4770      	bx	lr

0802acac <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 802acac:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 802acb0:	4770      	bx	lr

0802acb2 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 802acb2:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 802acb6:	4770      	bx	lr

0802acb8 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 802acb8:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 802acbc:	4770      	bx	lr

0802acbe <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 802acbe:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 802acc2:	4770      	bx	lr

0802acc4 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 802acc4:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 802acc8:	4770      	bx	lr

0802acca <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 802acca:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 802acce:	4770      	bx	lr

0802acd0 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 802acd0:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 802acd4:	4770      	bx	lr

0802acd6 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 802acd6:	b510      	push	{r4, lr}
 802acd8:	ed2d 8b04 	vpush	{d8-d9}
 802acdc:	6803      	ldr	r3, [r0, #0]
 802acde:	4604      	mov	r4, r0
 802ace0:	699b      	ldr	r3, [r3, #24]
 802ace2:	eeb0 8a40 	vmov.f32	s16, s0
 802ace6:	eef0 8a60 	vmov.f32	s17, s1
 802acea:	eeb0 9a41 	vmov.f32	s18, s2
 802acee:	4798      	blx	r3
 802acf0:	6823      	ldr	r3, [r4, #0]
 802acf2:	4620      	mov	r0, r4
 802acf4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 802acf6:	eeb0 1a49 	vmov.f32	s2, s18
 802acfa:	eef0 0a68 	vmov.f32	s1, s17
 802acfe:	eeb0 0a48 	vmov.f32	s0, s16
 802ad02:	4798      	blx	r3
 802ad04:	ecbd 8b04 	vpop	{d8-d9}
 802ad08:	6823      	ldr	r3, [r4, #0]
 802ad0a:	4620      	mov	r0, r4
 802ad0c:	699b      	ldr	r3, [r3, #24]
 802ad0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ad12:	4718      	bx	r3

0802ad14 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 802ad14:	b510      	push	{r4, lr}
 802ad16:	ed2d 8b02 	vpush	{d8}
 802ad1a:	6803      	ldr	r3, [r0, #0]
 802ad1c:	4604      	mov	r4, r0
 802ad1e:	699b      	ldr	r3, [r3, #24]
 802ad20:	eeb0 8a40 	vmov.f32	s16, s0
 802ad24:	4798      	blx	r3
 802ad26:	6823      	ldr	r3, [r4, #0]
 802ad28:	4620      	mov	r0, r4
 802ad2a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 802ad2e:	eeb0 0a48 	vmov.f32	s0, s16
 802ad32:	4798      	blx	r3
 802ad34:	ecbd 8b02 	vpop	{d8}
 802ad38:	6823      	ldr	r3, [r4, #0]
 802ad3a:	4620      	mov	r0, r4
 802ad3c:	699b      	ldr	r3, [r3, #24]
 802ad3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ad42:	4718      	bx	r3

0802ad44 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 802ad44:	2200      	movs	r2, #0
 802ad46:	8002      	strh	r2, [r0, #0]
 802ad48:	8042      	strh	r2, [r0, #2]
 802ad4a:	8082      	strh	r2, [r0, #4]
 802ad4c:	80c2      	strh	r2, [r0, #6]
 802ad4e:	4770      	bx	lr

0802ad50 <_ZN8touchgfx13TextureMapperD1Ev>:
 802ad50:	4770      	bx	lr

0802ad52 <_ZN8touchgfx13TextureMapperD0Ev>:
 802ad52:	b510      	push	{r4, lr}
 802ad54:	2190      	movs	r1, #144	; 0x90
 802ad56:	4604      	mov	r4, r0
 802ad58:	f001 ffe7 	bl	802cd2a <_ZdlPvj>
 802ad5c:	4620      	mov	r0, r4
 802ad5e:	bd10      	pop	{r4, pc}

0802ad60 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 802ad60:	b538      	push	{r3, r4, r5, lr}
 802ad62:	2500      	movs	r5, #0
 802ad64:	e9c0 5505 	strd	r5, r5, [r0, #20]
 802ad68:	2301      	movs	r3, #1
 802ad6a:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 802ad6e:	4b1f      	ldr	r3, [pc, #124]	; (802adec <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 802ad70:	8085      	strh	r5, [r0, #4]
 802ad72:	80c5      	strh	r5, [r0, #6]
 802ad74:	8105      	strh	r5, [r0, #8]
 802ad76:	8145      	strh	r5, [r0, #10]
 802ad78:	8185      	strh	r5, [r0, #12]
 802ad7a:	81c5      	strh	r5, [r0, #14]
 802ad7c:	8205      	strh	r5, [r0, #16]
 802ad7e:	8245      	strh	r5, [r0, #18]
 802ad80:	61c5      	str	r5, [r0, #28]
 802ad82:	8405      	strh	r5, [r0, #32]
 802ad84:	8445      	strh	r5, [r0, #34]	; 0x22
 802ad86:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 802ad8a:	6003      	str	r3, [r0, #0]
 802ad8c:	880b      	ldrh	r3, [r1, #0]
 802ad8e:	84c3      	strh	r3, [r0, #38]	; 0x26
 802ad90:	23ff      	movs	r3, #255	; 0xff
 802ad92:	4604      	mov	r4, r0
 802ad94:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 802ad98:	f7eb f96b 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 802ad9c:	4b14      	ldr	r3, [pc, #80]	; (802adf0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 802ad9e:	6023      	str	r3, [r4, #0]
 802ada0:	2300      	movs	r3, #0
 802ada2:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 802ada6:	4913      	ldr	r1, [pc, #76]	; (802adf4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 802ada8:	62e3      	str	r3, [r4, #44]	; 0x2c
 802adaa:	6323      	str	r3, [r4, #48]	; 0x30
 802adac:	6363      	str	r3, [r4, #52]	; 0x34
 802adae:	63a3      	str	r3, [r4, #56]	; 0x38
 802adb0:	63e3      	str	r3, [r4, #60]	; 0x3c
 802adb2:	6463      	str	r3, [r4, #68]	; 0x44
 802adb4:	64a3      	str	r3, [r4, #72]	; 0x48
 802adb6:	6523      	str	r3, [r4, #80]	; 0x50
 802adb8:	6563      	str	r3, [r4, #84]	; 0x54
 802adba:	65e3      	str	r3, [r4, #92]	; 0x5c
 802adbc:	6623      	str	r3, [r4, #96]	; 0x60
 802adbe:	66a3      	str	r3, [r4, #104]	; 0x68
 802adc0:	66e3      	str	r3, [r4, #108]	; 0x6c
 802adc2:	6763      	str	r3, [r4, #116]	; 0x74
 802adc4:	67a3      	str	r3, [r4, #120]	; 0x78
 802adc6:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 802adca:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 802adce:	230c      	movs	r3, #12
 802add0:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 802add4:	6422      	str	r2, [r4, #64]	; 0x40
 802add6:	64e1      	str	r1, [r4, #76]	; 0x4c
 802add8:	65a1      	str	r1, [r4, #88]	; 0x58
 802adda:	6662      	str	r2, [r4, #100]	; 0x64
 802addc:	6722      	str	r2, [r4, #112]	; 0x70
 802adde:	67e2      	str	r2, [r4, #124]	; 0x7c
 802ade0:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 802ade4:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 802ade8:	4620      	mov	r0, r4
 802adea:	bd38      	pop	{r3, r4, r5, pc}
 802adec:	08031e38 	.word	0x08031e38
 802adf0:	0803241c 	.word	0x0803241c
 802adf4:	447a0000 	.word	0x447a0000

0802adf8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 802adf8:	b570      	push	{r4, r5, r6, lr}
 802adfa:	ed2d 8b04 	vpush	{d8-d9}
 802adfe:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 802ae02:	add0      	add	r5, sp, #832	; 0x340
 802ae04:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 802ae06:	f825 3d40 	strh.w	r3, [r5, #-64]!
 802ae0a:	4604      	mov	r4, r0
 802ae0c:	4628      	mov	r0, r5
 802ae0e:	f7f1 fa7f 	bl	801c310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802ae12:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 802ae14:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 802ae18:	4606      	mov	r6, r0
 802ae1a:	4628      	mov	r0, r5
 802ae1c:	f7f1 faac 	bl	801c378 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802ae20:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 802ae24:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 802ae28:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802ae2a:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 802ae2e:	9312      	str	r3, [sp, #72]	; 0x48
 802ae30:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802ae34:	1c72      	adds	r2, r6, #1
 802ae36:	3001      	adds	r0, #1
 802ae38:	ee76 5ac7 	vsub.f32	s11, s13, s14
 802ae3c:	ee07 2a90 	vmov	s15, r2
 802ae40:	ee06 0a90 	vmov	s13, r0
 802ae44:	ee36 6a47 	vsub.f32	s12, s12, s14
 802ae48:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802ae4c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 802ae50:	ee77 7a86 	vadd.f32	s15, s15, s12
 802ae54:	ee76 6aa5 	vadd.f32	s13, s13, s11
 802ae58:	9316      	str	r3, [sp, #88]	; 0x58
 802ae5a:	931a      	str	r3, [sp, #104]	; 0x68
 802ae5c:	931e      	str	r3, [sp, #120]	; 0x78
 802ae5e:	2300      	movs	r3, #0
 802ae60:	9320      	str	r3, [sp, #128]	; 0x80
 802ae62:	9321      	str	r3, [sp, #132]	; 0x84
 802ae64:	9322      	str	r3, [sp, #136]	; 0x88
 802ae66:	9324      	str	r3, [sp, #144]	; 0x90
 802ae68:	9325      	str	r3, [sp, #148]	; 0x94
 802ae6a:	9326      	str	r3, [sp, #152]	; 0x98
 802ae6c:	9328      	str	r3, [sp, #160]	; 0xa0
 802ae6e:	9329      	str	r3, [sp, #164]	; 0xa4
 802ae70:	932a      	str	r3, [sp, #168]	; 0xa8
 802ae72:	932c      	str	r3, [sp, #176]	; 0xb0
 802ae74:	932d      	str	r3, [sp, #180]	; 0xb4
 802ae76:	932e      	str	r3, [sp, #184]	; 0xb8
 802ae78:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 802ae7c:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 802ae80:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 802ae84:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 802ae88:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 802ae8c:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 802ae90:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 802ae94:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 802ae98:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 802ae9c:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 802aea0:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802aea4:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 802aea8:	a830      	add	r0, sp, #192	; 0xc0
 802aeaa:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 802aeae:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 802aeb2:	f000 fc43 	bl	802b73c <_ZN8touchgfx9Matrix4x4C1Ev>
 802aeb6:	eeb1 0a49 	vneg.f32	s0, s18
 802aeba:	a830      	add	r0, sp, #192	; 0xc0
 802aebc:	f000 fd12 	bl	802b8e4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802aec0:	eeb1 0a68 	vneg.f32	s0, s17
 802aec4:	f000 fd1c 	bl	802b900 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802aec8:	eeb1 0a48 	vneg.f32	s0, s16
 802aecc:	f000 fd27 	bl	802b91e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 802aed0:	a840      	add	r0, sp, #256	; 0x100
 802aed2:	f000 fc33 	bl	802b73c <_ZN8touchgfx9Matrix4x4C1Ev>
 802aed6:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 802aeda:	a840      	add	r0, sp, #256	; 0x100
 802aedc:	f000 fc86 	bl	802b7ec <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 802aee0:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 802aee4:	f000 fcac 	bl	802b840 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 802aee8:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 802aeec:	f000 fcd1 	bl	802b892 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 802aef0:	a850      	add	r0, sp, #320	; 0x140
 802aef2:	f000 fc23 	bl	802b73c <_ZN8touchgfx9Matrix4x4C1Ev>
 802aef6:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802aefa:	a850      	add	r0, sp, #320	; 0x140
 802aefc:	f000 fd1e 	bl	802b93c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 802af00:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802af04:	f000 fd26 	bl	802b954 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 802af08:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802af0c:	f000 fd2f 	bl	802b96e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 802af10:	a860      	add	r0, sp, #384	; 0x180
 802af12:	f000 fc13 	bl	802b73c <_ZN8touchgfx9Matrix4x4C1Ev>
 802af16:	eeb0 0a49 	vmov.f32	s0, s18
 802af1a:	a860      	add	r0, sp, #384	; 0x180
 802af1c:	f000 fce2 	bl	802b8e4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802af20:	eeb0 0a68 	vmov.f32	s0, s17
 802af24:	f000 fcec 	bl	802b900 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802af28:	eeb0 0a48 	vmov.f32	s0, s16
 802af2c:	f000 fcf7 	bl	802b91e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 802af30:	aa50      	add	r2, sp, #320	; 0x140
 802af32:	a960      	add	r1, sp, #384	; 0x180
 802af34:	a8b0      	add	r0, sp, #704	; 0x2c0
 802af36:	f000 fc1b 	bl	802b770 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802af3a:	4628      	mov	r0, r5
 802af3c:	aa40      	add	r2, sp, #256	; 0x100
 802af3e:	a9b0      	add	r1, sp, #704	; 0x2c0
 802af40:	f000 fc16 	bl	802b770 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802af44:	4629      	mov	r1, r5
 802af46:	aa30      	add	r2, sp, #192	; 0xc0
 802af48:	a870      	add	r0, sp, #448	; 0x1c0
 802af4a:	f000 fc11 	bl	802b770 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802af4e:	a880      	add	r0, sp, #512	; 0x200
 802af50:	f000 fbf4 	bl	802b73c <_ZN8touchgfx9Matrix4x4C1Ev>
 802af54:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802af58:	a880      	add	r0, sp, #512	; 0x200
 802af5a:	eeb1 0a40 	vneg.f32	s0, s0
 802af5e:	f000 fcc1 	bl	802b8e4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802af62:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802af66:	a880      	add	r0, sp, #512	; 0x200
 802af68:	eeb1 0a40 	vneg.f32	s0, s0
 802af6c:	f000 fcc8 	bl	802b900 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802af70:	a890      	add	r0, sp, #576	; 0x240
 802af72:	f000 fbe3 	bl	802b73c <_ZN8touchgfx9Matrix4x4C1Ev>
 802af76:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 802af7a:	a890      	add	r0, sp, #576	; 0x240
 802af7c:	f000 fc26 	bl	802b7cc <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 802af80:	a8a0      	add	r0, sp, #640	; 0x280
 802af82:	f000 fbdb 	bl	802b73c <_ZN8touchgfx9Matrix4x4C1Ev>
 802af86:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802af8a:	a8a0      	add	r0, sp, #640	; 0x280
 802af8c:	f000 fcaa 	bl	802b8e4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802af90:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802af94:	f000 fcb4 	bl	802b900 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802af98:	aa90      	add	r2, sp, #576	; 0x240
 802af9a:	a9a0      	add	r1, sp, #640	; 0x280
 802af9c:	a8b0      	add	r0, sp, #704	; 0x2c0
 802af9e:	f000 fbe7 	bl	802b770 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802afa2:	4628      	mov	r0, r5
 802afa4:	aa80      	add	r2, sp, #512	; 0x200
 802afa6:	a9b0      	add	r1, sp, #704	; 0x2c0
 802afa8:	f000 fbe2 	bl	802b770 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802afac:	4629      	mov	r1, r5
 802afae:	aa70      	add	r2, sp, #448	; 0x1c0
 802afb0:	4668      	mov	r0, sp
 802afb2:	466d      	mov	r5, sp
 802afb4:	f000 fbdc 	bl	802b770 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802afb8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802afba:	ae70      	add	r6, sp, #448	; 0x1c0
 802afbc:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802afbe:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802afc0:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802afc2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802afc4:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802afc6:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 802afca:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 802afce:	2500      	movs	r5, #0
 802afd0:	0129      	lsls	r1, r5, #4
 802afd2:	ab20      	add	r3, sp, #128	; 0x80
 802afd4:	185e      	adds	r6, r3, r1
 802afd6:	ab10      	add	r3, sp, #64	; 0x40
 802afd8:	4419      	add	r1, r3
 802afda:	a870      	add	r0, sp, #448	; 0x1c0
 802afdc:	f000 fb7e 	bl	802b6dc <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 802afe0:	3501      	adds	r5, #1
 802afe2:	2d04      	cmp	r5, #4
 802afe4:	ed86 0a00 	vstr	s0, [r6]
 802afe8:	edc6 0a01 	vstr	s1, [r6, #4]
 802afec:	ed86 1a02 	vstr	s2, [r6, #8]
 802aff0:	edc6 1a03 	vstr	s3, [r6, #12]
 802aff4:	d1ec      	bne.n	802afd0 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 802aff6:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 802affa:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 802affe:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 802b002:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802b006:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 802b00a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802b00e:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 802b012:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 802b016:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802b01a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802b01e:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 802b022:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 802b026:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 802b02a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802b02e:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 802b032:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802b036:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 802b03a:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 802b03e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802b042:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802b046:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 802b04a:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 802b04e:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 802b052:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802b056:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 802b05a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802b05e:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 802b062:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 802b066:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802b06a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802b06e:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 802b072:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 802b076:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 802b07a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802b07e:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 802b082:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802b086:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 802b08a:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 802b08e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802b092:	eec7 6a87 	vdiv.f32	s13, s15, s14
 802b096:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 802b09a:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 802b09e:	ecbd 8b04 	vpop	{d8-d9}
 802b0a2:	bd70      	pop	{r4, r5, r6, pc}

0802b0a4 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 802b0a4:	b510      	push	{r4, lr}
 802b0a6:	4604      	mov	r4, r0
 802b0a8:	f7ea ffe3 	bl	8016072 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 802b0ac:	4620      	mov	r0, r4
 802b0ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b0b2:	f7ff bea1 	b.w	802adf8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b0b6 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 802b0b6:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 802b0ba:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 802b0be:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 802b0c2:	f7ff be99 	b.w	802adf8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b0c6 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 802b0c6:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 802b0ca:	f7ff be95 	b.w	802adf8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b0ce <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 802b0ce:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 802b0d2:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 802b0d6:	f7ff be8f 	b.w	802adf8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b0da <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 802b0da:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802b0de:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802b0e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b0e6:	bfd8      	it	le
 802b0e8:	eeb0 0a67 	vmovle.f32	s0, s15
 802b0ec:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 802b0f0:	f7ff be82 	b.w	802adf8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b0f4 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 802b0f4:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 802b0f8:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 802b0fc:	f7ff be7c 	b.w	802adf8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b100 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 802b100:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 802b104:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802b108:	f7ff be76 	b.w	802adf8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b10c <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 802b10c:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 802b110:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802b114:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 802b118:	f7ff be6e 	b.w	802adf8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b11c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 802b11c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b120:	ed2d 8b04 	vpush	{d8-d9}
 802b124:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 802b128:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 802b12c:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 802b130:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 802b134:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802b138:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b13c:	bf54      	ite	pl
 802b13e:	eeb0 0a69 	vmovpl.f32	s0, s19
 802b142:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b146:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802b14a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b14e:	bfd8      	it	le
 802b150:	eeb0 0a49 	vmovle.f32	s0, s18
 802b154:	eef4 8ac0 	vcmpe.f32	s17, s0
 802b158:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b15c:	bfd8      	it	le
 802b15e:	eeb0 0a68 	vmovle.f32	s0, s17
 802b162:	460c      	mov	r4, r1
 802b164:	4607      	mov	r7, r0
 802b166:	f001 ffd3 	bl	802d110 <floorf>
 802b16a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b16e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b172:	bf58      	it	pl
 802b174:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802b178:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802b17c:	bf56      	itet	pl
 802b17e:	ee10 3a10 	vmovpl	r3, s0
 802b182:	2600      	movmi	r6, #0
 802b184:	b21e      	sxthpl	r6, r3
 802b186:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b18a:	bfd8      	it	le
 802b18c:	eeb0 8a69 	vmovle.f32	s16, s19
 802b190:	eeb4 9ac8 	vcmpe.f32	s18, s16
 802b194:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b198:	bf58      	it	pl
 802b19a:	eeb0 8a49 	vmovpl.f32	s16, s18
 802b19e:	eef4 8ac8 	vcmpe.f32	s17, s16
 802b1a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b1a6:	bf54      	ite	pl
 802b1a8:	eeb0 0a68 	vmovpl.f32	s0, s17
 802b1ac:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b1b0:	f001 ff6c 	bl	802d08c <ceilf>
 802b1b4:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 802b1b8:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 802b1bc:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 802b1c0:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 802b1c4:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 802b1c8:	ee07 8a90 	vmov	s15, r8
 802b1cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b1d0:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802b1d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b1d8:	bfd8      	it	le
 802b1da:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802b1de:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802b1e2:	bfdc      	itt	le
 802b1e4:	ee10 3a10 	vmovle	r3, s0
 802b1e8:	fa0f f883 	sxthle.w	r8, r3
 802b1ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b1f0:	bf54      	ite	pl
 802b1f2:	eeb0 0a69 	vmovpl.f32	s0, s19
 802b1f6:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b1fa:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802b1fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b202:	bfd8      	it	le
 802b204:	eeb0 0a49 	vmovle.f32	s0, s18
 802b208:	eef4 8ac0 	vcmpe.f32	s17, s0
 802b20c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b210:	bfd8      	it	le
 802b212:	eeb0 0a68 	vmovle.f32	s0, s17
 802b216:	f001 ff7b 	bl	802d110 <floorf>
 802b21a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b21e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b222:	bf58      	it	pl
 802b224:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802b228:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802b22c:	bf56      	itet	pl
 802b22e:	ee10 3a10 	vmovpl	r3, s0
 802b232:	2500      	movmi	r5, #0
 802b234:	b21d      	sxthpl	r5, r3
 802b236:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b23a:	bfd8      	it	le
 802b23c:	eeb0 8a69 	vmovle.f32	s16, s19
 802b240:	eeb4 9ac8 	vcmpe.f32	s18, s16
 802b244:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b248:	bf58      	it	pl
 802b24a:	eeb0 8a49 	vmovpl.f32	s16, s18
 802b24e:	eef4 8ac8 	vcmpe.f32	s17, s16
 802b252:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b256:	bf54      	ite	pl
 802b258:	eeb0 0a68 	vmovpl.f32	s0, s17
 802b25c:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b260:	f001 ff14 	bl	802d08c <ceilf>
 802b264:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 802b268:	803e      	strh	r6, [r7, #0]
 802b26a:	ee07 3a90 	vmov	s15, r3
 802b26e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b272:	807d      	strh	r5, [r7, #2]
 802b274:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802b278:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b27c:	bfd8      	it	le
 802b27e:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802b282:	eba8 0606 	sub.w	r6, r8, r6
 802b286:	bfdc      	itt	le
 802b288:	ee10 3a10 	vmovle	r3, s0
 802b28c:	b21b      	sxthle	r3, r3
 802b28e:	1b5d      	subs	r5, r3, r5
 802b290:	80be      	strh	r6, [r7, #4]
 802b292:	80fd      	strh	r5, [r7, #6]
 802b294:	ecbd 8b04 	vpop	{d8-d9}
 802b298:	4638      	mov	r0, r7
 802b29a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0802b29e <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 802b29e:	b513      	push	{r0, r1, r4, lr}
 802b2a0:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 802b2a4:	4604      	mov	r4, r0
 802b2a6:	b143      	cbz	r3, 802b2ba <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 802b2a8:	4601      	mov	r1, r0
 802b2aa:	4668      	mov	r0, sp
 802b2ac:	f7ff ff36 	bl	802b11c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 802b2b0:	6823      	ldr	r3, [r4, #0]
 802b2b2:	4669      	mov	r1, sp
 802b2b4:	691b      	ldr	r3, [r3, #16]
 802b2b6:	4620      	mov	r0, r4
 802b2b8:	4798      	blx	r3
 802b2ba:	b002      	add	sp, #8
 802b2bc:	bd10      	pop	{r4, pc}

0802b2be <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 802b2be:	4603      	mov	r3, r0
 802b2c0:	3026      	adds	r0, #38	; 0x26
 802b2c2:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 802b2c6:	b90b      	cbnz	r3, 802b2cc <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 802b2c8:	f7ee bdfa 	b.w	8019ec0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 802b2cc:	f7ee be08 	b.w	8019ee0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

0802b2d0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 802b2d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b2d4:	ed2d 8b04 	vpush	{d8-d9}
 802b2d8:	4604      	mov	r4, r0
 802b2da:	469b      	mov	fp, r3
 802b2dc:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 802b2e0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 802b2e4:	f9b1 6000 	ldrsh.w	r6, [r1]
 802b2e8:	8888      	ldrh	r0, [r1, #4]
 802b2ea:	b0b3      	sub	sp, #204	; 0xcc
 802b2ec:	4430      	add	r0, r6
 802b2ee:	b280      	uxth	r0, r0
 802b2f0:	9206      	str	r2, [sp, #24]
 802b2f2:	fa0f fe80 	sxth.w	lr, r0
 802b2f6:	2200      	movs	r2, #0
 802b2f8:	4596      	cmp	lr, r2
 802b2fa:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 802b2fe:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 802b302:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 802b306:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 802b308:	9211      	str	r2, [sp, #68]	; 0x44
 802b30a:	f340 8129 	ble.w	802b560 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b30e:	45b4      	cmp	ip, r6
 802b310:	f340 8126 	ble.w	802b560 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b314:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 802b318:	88ca      	ldrh	r2, [r1, #6]
 802b31a:	442a      	add	r2, r5
 802b31c:	b292      	uxth	r2, r2
 802b31e:	b211      	sxth	r1, r2
 802b320:	2900      	cmp	r1, #0
 802b322:	f340 811d 	ble.w	802b560 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b326:	42ab      	cmp	r3, r5
 802b328:	f340 811a 	ble.w	802b560 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b32c:	45f4      	cmp	ip, lr
 802b32e:	bfb8      	it	lt
 802b330:	fa1f f08c 	uxthlt.w	r0, ip
 802b334:	428b      	cmp	r3, r1
 802b336:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 802b33a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802b33e:	bfb8      	it	lt
 802b340:	b29a      	uxthlt	r2, r3
 802b342:	1b80      	subs	r0, r0, r6
 802b344:	1b52      	subs	r2, r2, r5
 802b346:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 802b34a:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 802b34e:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 802b352:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 802b356:	ab11      	add	r3, sp, #68	; 0x44
 802b358:	e893 0003 	ldmia.w	r3, {r0, r1}
 802b35c:	6822      	ldr	r2, [r4, #0]
 802b35e:	9307      	str	r3, [sp, #28]
 802b360:	ad13      	add	r5, sp, #76	; 0x4c
 802b362:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 802b364:	e885 0003 	stmia.w	r5, {r0, r1}
 802b368:	4629      	mov	r1, r5
 802b36a:	4620      	mov	r0, r4
 802b36c:	4790      	blx	r2
 802b36e:	4621      	mov	r1, r4
 802b370:	a815      	add	r0, sp, #84	; 0x54
 802b372:	f7ee fd01 	bl	8019d78 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 802b376:	a815      	add	r0, sp, #84	; 0x54
 802b378:	f7ed f9c6 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802b37c:	9b07      	ldr	r3, [sp, #28]
 802b37e:	1d26      	adds	r6, r4, #4
 802b380:	4618      	mov	r0, r3
 802b382:	4631      	mov	r1, r6
 802b384:	f7ed fa04 	bl	8018790 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802b388:	4628      	mov	r0, r5
 802b38a:	f104 0526 	add.w	r5, r4, #38	; 0x26
 802b38e:	f7ed f9bb 	bl	8018708 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802b392:	4628      	mov	r0, r5
 802b394:	f7f1 f8a8 	bl	801c4e8 <_ZNK8touchgfx6Bitmap7getDataEv>
 802b398:	9007      	str	r0, [sp, #28]
 802b39a:	2800      	cmp	r0, #0
 802b39c:	f000 80db 	beq.w	802b556 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 802b3a0:	f8db 2000 	ldr.w	r2, [fp]
 802b3a4:	9209      	str	r2, [sp, #36]	; 0x24
 802b3a6:	f8db 2004 	ldr.w	r2, [fp, #4]
 802b3aa:	920a      	str	r2, [sp, #40]	; 0x28
 802b3ac:	f8db 2008 	ldr.w	r2, [fp, #8]
 802b3b0:	920b      	str	r2, [sp, #44]	; 0x2c
 802b3b2:	f8db 200c 	ldr.w	r2, [fp, #12]
 802b3b6:	920c      	str	r2, [sp, #48]	; 0x30
 802b3b8:	f8da 2000 	ldr.w	r2, [sl]
 802b3bc:	920d      	str	r2, [sp, #52]	; 0x34
 802b3be:	f8da 2004 	ldr.w	r2, [sl, #4]
 802b3c2:	920e      	str	r2, [sp, #56]	; 0x38
 802b3c4:	f8da 2008 	ldr.w	r2, [sl, #8]
 802b3c8:	920f      	str	r2, [sp, #60]	; 0x3c
 802b3ca:	f8da 200c 	ldr.w	r2, [sl, #12]
 802b3ce:	9210      	str	r2, [sp, #64]	; 0x40
 802b3d0:	a90d      	add	r1, sp, #52	; 0x34
 802b3d2:	4632      	mov	r2, r6
 802b3d4:	a809      	add	r0, sp, #36	; 0x24
 802b3d6:	f7ed f9bf 	bl	8018758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b3da:	4632      	mov	r2, r6
 802b3dc:	a90e      	add	r1, sp, #56	; 0x38
 802b3de:	a80a      	add	r0, sp, #40	; 0x28
 802b3e0:	f7ed f9ba 	bl	8018758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b3e4:	4632      	mov	r2, r6
 802b3e6:	a90f      	add	r1, sp, #60	; 0x3c
 802b3e8:	a80b      	add	r0, sp, #44	; 0x2c
 802b3ea:	f7ed f9b5 	bl	8018758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b3ee:	4632      	mov	r2, r6
 802b3f0:	a910      	add	r1, sp, #64	; 0x40
 802b3f2:	a80c      	add	r0, sp, #48	; 0x30
 802b3f4:	f7ed f9b0 	bl	8018758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b3f8:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 802b3fc:	edd7 4a00 	vldr	s9, [r7]
 802b400:	edd7 5a01 	vldr	s11, [r7, #4]
 802b404:	ed98 4a00 	vldr	s8, [r8]
 802b408:	ed98 5a01 	vldr	s10, [r8, #4]
 802b40c:	ed99 9a00 	vldr	s18, [r9]
 802b410:	ed99 8a01 	vldr	s16, [r9, #4]
 802b414:	edd9 8a02 	vldr	s17, [r9, #8]
 802b418:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 802b41c:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 802b420:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 802b424:	eef0 6a67 	vmov.f32	s13, s15
 802b428:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 802b42c:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 802b430:	eeb0 7a67 	vmov.f32	s14, s15
 802b434:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 802b438:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 802b43c:	eeb0 6a67 	vmov.f32	s12, s15
 802b440:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b444:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 802b448:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 802b44c:	ee16 6a10 	vmov	r6, s12
 802b450:	eeb0 6a67 	vmov.f32	s12, s15
 802b454:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b458:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 802b45c:	f8d7 a008 	ldr.w	sl, [r7, #8]
 802b460:	f8d8 b008 	ldr.w	fp, [r8, #8]
 802b464:	68ff      	ldr	r7, [r7, #12]
 802b466:	9624      	str	r6, [sp, #144]	; 0x90
 802b468:	ee16 0a10 	vmov	r0, s12
 802b46c:	eeb0 6a67 	vmov.f32	s12, s15
 802b470:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b474:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 802b478:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 802b47c:	ee16 1a10 	vmov	r1, s12
 802b480:	eeb0 6a67 	vmov.f32	s12, s15
 802b484:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b488:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 802b48c:	ee16 2a10 	vmov	r2, s12
 802b490:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 802b494:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 802b498:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 802b49c:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 802b4a0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b4a4:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 802b4a8:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 802b4ac:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 802b4b0:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 802b4b4:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 802b4b8:	922d      	str	r2, [sp, #180]	; 0xb4
 802b4ba:	4a2b      	ldr	r2, [pc, #172]	; (802b568 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 802b4bc:	9b06      	ldr	r3, [sp, #24]
 802b4be:	8812      	ldrh	r2, [r2, #0]
 802b4c0:	9317      	str	r3, [sp, #92]	; 0x5c
 802b4c2:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 802b4c6:	9b07      	ldr	r3, [sp, #28]
 802b4c8:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 802b4cc:	4628      	mov	r0, r5
 802b4ce:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 802b4d2:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 802b4d6:	9218      	str	r2, [sp, #96]	; 0x60
 802b4d8:	9319      	str	r3, [sp, #100]	; 0x64
 802b4da:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 802b4de:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 802b4e2:	9731      	str	r7, [sp, #196]	; 0xc4
 802b4e4:	f7f1 f830 	bl	801c548 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802b4e8:	901a      	str	r0, [sp, #104]	; 0x68
 802b4ea:	4628      	mov	r0, r5
 802b4ec:	f7f0 ff10 	bl	801c310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802b4f0:	901b      	str	r0, [sp, #108]	; 0x6c
 802b4f2:	4628      	mov	r0, r5
 802b4f4:	f7f0 ff40 	bl	801c378 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802b4f8:	901c      	str	r0, [sp, #112]	; 0x70
 802b4fa:	4628      	mov	r0, r5
 802b4fc:	f7f0 ff08 	bl	801c310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802b500:	eeb4 9a48 	vcmp.f32	s18, s16
 802b504:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b508:	901d      	str	r0, [sp, #116]	; 0x74
 802b50a:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 802b50e:	d107      	bne.n	802b520 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 802b510:	eeb4 8a68 	vcmp.f32	s16, s17
 802b514:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b518:	f64f 73ff 	movw	r3, #65535	; 0xffff
 802b51c:	bf08      	it	eq
 802b51e:	461e      	moveq	r6, r3
 802b520:	4b12      	ldr	r3, [pc, #72]	; (802b56c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 802b522:	681b      	ldr	r3, [r3, #0]
 802b524:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 802b528:	b10a      	cbz	r2, 802b52e <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 802b52a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 802b52c:	b905      	cbnz	r5, 802b530 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 802b52e:	689d      	ldr	r5, [r3, #8]
 802b530:	682b      	ldr	r3, [r5, #0]
 802b532:	4620      	mov	r0, r4
 802b534:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 802b536:	f7ff fec2 	bl	802b2be <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 802b53a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 802b53e:	9604      	str	r6, [sp, #16]
 802b540:	e9cd 0302 	strd	r0, r3, [sp, #8]
 802b544:	ab13      	add	r3, sp, #76	; 0x4c
 802b546:	9301      	str	r3, [sp, #4]
 802b548:	ab15      	add	r3, sp, #84	; 0x54
 802b54a:	9300      	str	r3, [sp, #0]
 802b54c:	aa1e      	add	r2, sp, #120	; 0x78
 802b54e:	ab19      	add	r3, sp, #100	; 0x64
 802b550:	a917      	add	r1, sp, #92	; 0x5c
 802b552:	4628      	mov	r0, r5
 802b554:	47b8      	blx	r7
 802b556:	b033      	add	sp, #204	; 0xcc
 802b558:	ecbd 8b04 	vpop	{d8-d9}
 802b55c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b560:	2300      	movs	r3, #0
 802b562:	9312      	str	r3, [sp, #72]	; 0x48
 802b564:	e6f7      	b.n	802b356 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 802b566:	bf00      	nop
 802b568:	20013846 	.word	0x20013846
 802b56c:	2001384c 	.word	0x2001384c

0802b570 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 802b570:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b574:	ed2d 8b02 	vpush	{d8}
 802b578:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 802b57c:	b098      	sub	sp, #96	; 0x60
 802b57e:	4604      	mov	r4, r0
 802b580:	4688      	mov	r8, r1
 802b582:	2b00      	cmp	r3, #0
 802b584:	d077      	beq.n	802b676 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 802b586:	f100 0526 	add.w	r5, r0, #38	; 0x26
 802b58a:	4628      	mov	r0, r5
 802b58c:	f7f0 fec0 	bl	801c310 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802b590:	ee07 0a90 	vmov	s15, r0
 802b594:	4628      	mov	r0, r5
 802b596:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 802b59a:	f7f0 feed 	bl	801c378 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802b59e:	4b4e      	ldr	r3, [pc, #312]	; (802b6d8 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 802b5a0:	781b      	ldrb	r3, [r3, #0]
 802b5a2:	ee07 0a90 	vmov	s15, r0
 802b5a6:	2b01      	cmp	r3, #1
 802b5a8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802b5ac:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 802b5b0:	d066      	beq.n	802b680 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 802b5b2:	eeb0 6a47 	vmov.f32	s12, s14
 802b5b6:	ee17 3a10 	vmov	r3, s14
 802b5ba:	eeb0 4a48 	vmov.f32	s8, s16
 802b5be:	eeb0 7a48 	vmov.f32	s14, s16
 802b5c2:	eef0 4a67 	vmov.f32	s9, s15
 802b5c6:	eeb0 8a67 	vmov.f32	s16, s15
 802b5ca:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 802b5ce:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 802b5d2:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 802b5d6:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 802b5da:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 802b5de:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 802b5e2:	6f25      	ldr	r5, [r4, #112]	; 0x70
 802b5e4:	6e66      	ldr	r6, [r4, #100]	; 0x64
 802b5e6:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 802b5e8:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 802b5ec:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 802b5f0:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802b5f4:	ee73 1a65 	vsub.f32	s3, s6, s11
 802b5f8:	ee72 6ac5 	vsub.f32	s13, s5, s10
 802b5fc:	ee32 1a45 	vsub.f32	s2, s4, s10
 802b600:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 802b604:	ee73 1ae5 	vsub.f32	s3, s7, s11
 802b608:	eee1 6a21 	vfma.f32	s13, s2, s3
 802b60c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 802b610:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b614:	dd3d      	ble.n	802b692 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 802b616:	ed8d 5a04 	vstr	s10, [sp, #16]
 802b61a:	ed8d 2a05 	vstr	s4, [sp, #20]
 802b61e:	edcd 2a06 	vstr	s5, [sp, #24]
 802b622:	f8cd c01c 	str.w	ip, [sp, #28]
 802b626:	edcd 5a08 	vstr	s11, [sp, #32]
 802b62a:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 802b62e:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 802b632:	970b      	str	r7, [sp, #44]	; 0x2c
 802b634:	960c      	str	r6, [sp, #48]	; 0x30
 802b636:	950d      	str	r5, [sp, #52]	; 0x34
 802b638:	920e      	str	r2, [sp, #56]	; 0x38
 802b63a:	900f      	str	r0, [sp, #60]	; 0x3c
 802b63c:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 802b640:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 802b644:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 802b648:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 802b64c:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 802b650:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 802b654:	9316      	str	r3, [sp, #88]	; 0x58
 802b656:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 802b65a:	ab14      	add	r3, sp, #80	; 0x50
 802b65c:	9303      	str	r3, [sp, #12]
 802b65e:	ab10      	add	r3, sp, #64	; 0x40
 802b660:	9302      	str	r3, [sp, #8]
 802b662:	ab0c      	add	r3, sp, #48	; 0x30
 802b664:	9301      	str	r3, [sp, #4]
 802b666:	ab08      	add	r3, sp, #32
 802b668:	9300      	str	r3, [sp, #0]
 802b66a:	2200      	movs	r2, #0
 802b66c:	ab04      	add	r3, sp, #16
 802b66e:	4641      	mov	r1, r8
 802b670:	4620      	mov	r0, r4
 802b672:	f7ff fe2d 	bl	802b2d0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 802b676:	b018      	add	sp, #96	; 0x60
 802b678:	ecbd 8b02 	vpop	{d8}
 802b67c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b680:	eeb0 6a48 	vmov.f32	s12, s16
 802b684:	eef0 4a47 	vmov.f32	s9, s14
 802b688:	ee17 3a90 	vmov	r3, s15
 802b68c:	eeb0 4a67 	vmov.f32	s8, s15
 802b690:	e79b      	b.n	802b5ca <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 802b692:	ed8d 5a05 	vstr	s10, [sp, #20]
 802b696:	ed8d 2a04 	vstr	s4, [sp, #16]
 802b69a:	f8cd c018 	str.w	ip, [sp, #24]
 802b69e:	edcd 2a07 	vstr	s5, [sp, #28]
 802b6a2:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 802b6a6:	ed8d 3a08 	vstr	s6, [sp, #32]
 802b6aa:	970a      	str	r7, [sp, #40]	; 0x28
 802b6ac:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 802b6b0:	960d      	str	r6, [sp, #52]	; 0x34
 802b6b2:	950c      	str	r5, [sp, #48]	; 0x30
 802b6b4:	900e      	str	r0, [sp, #56]	; 0x38
 802b6b6:	920f      	str	r2, [sp, #60]	; 0x3c
 802b6b8:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 802b6bc:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 802b6c0:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 802b6c4:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 802b6c8:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 802b6cc:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 802b6d0:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 802b6d4:	9317      	str	r3, [sp, #92]	; 0x5c
 802b6d6:	e7c0      	b.n	802b65a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 802b6d8:	20013844 	.word	0x20013844

0802b6dc <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 802b6dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 802b6de:	b08d      	sub	sp, #52	; 0x34
 802b6e0:	2300      	movs	r3, #0
 802b6e2:	9304      	str	r3, [sp, #16]
 802b6e4:	9305      	str	r3, [sp, #20]
 802b6e6:	9306      	str	r3, [sp, #24]
 802b6e8:	aa04      	add	r2, sp, #16
 802b6ea:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 802b6ee:	9307      	str	r3, [sp, #28]
 802b6f0:	f100 0640 	add.w	r6, r0, #64	; 0x40
 802b6f4:	4613      	mov	r3, r2
 802b6f6:	f101 0710 	add.w	r7, r1, #16
 802b6fa:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802b738 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 802b6fe:	460c      	mov	r4, r1
 802b700:	4605      	mov	r5, r0
 802b702:	ecb4 7a01 	vldmia	r4!, {s14}
 802b706:	ecf5 6a01 	vldmia	r5!, {s13}
 802b70a:	42bc      	cmp	r4, r7
 802b70c:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b710:	d1f7      	bne.n	802b702 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 802b712:	3010      	adds	r0, #16
 802b714:	42b0      	cmp	r0, r6
 802b716:	ece2 7a01 	vstmia	r2!, {s15}
 802b71a:	d1ee      	bne.n	802b6fa <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 802b71c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802b71e:	ac0c      	add	r4, sp, #48	; 0x30
 802b720:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 802b724:	ed9d 0a08 	vldr	s0, [sp, #32]
 802b728:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 802b72c:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 802b730:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 802b734:	b00d      	add	sp, #52	; 0x34
 802b736:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802b738:	00000000 	.word	0x00000000

0802b73c <_ZN8touchgfx9Matrix4x4C1Ev>:
 802b73c:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 802b76c <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 802b740:	2300      	movs	r3, #0
 802b742:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802b746:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 802b74a:	2200      	movs	r2, #0
 802b74c:	4293      	cmp	r3, r2
 802b74e:	f102 0201 	add.w	r2, r2, #1
 802b752:	bf14      	ite	ne
 802b754:	eef0 6a47 	vmovne.f32	s13, s14
 802b758:	eef0 6a67 	vmoveq.f32	s13, s15
 802b75c:	2a04      	cmp	r2, #4
 802b75e:	ece1 6a01 	vstmia	r1!, {s13}
 802b762:	d1f3      	bne.n	802b74c <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 802b764:	3301      	adds	r3, #1
 802b766:	2b04      	cmp	r3, #4
 802b768:	d1ed      	bne.n	802b746 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 802b76a:	4770      	bx	lr
 802b76c:	00000000 	.word	0x00000000

0802b770 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 802b770:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b774:	460c      	mov	r4, r1
 802b776:	4605      	mov	r5, r0
 802b778:	4690      	mov	r8, r2
 802b77a:	f7ff ffdf 	bl	802b73c <_ZN8touchgfx9Matrix4x4C1Ev>
 802b77e:	4628      	mov	r0, r5
 802b780:	4621      	mov	r1, r4
 802b782:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 802b786:	2300      	movs	r3, #0
 802b788:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802b7c8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 802b78c:	eb08 0603 	add.w	r6, r8, r3
 802b790:	460f      	mov	r7, r1
 802b792:	2400      	movs	r4, #0
 802b794:	4632      	mov	r2, r6
 802b796:	ecf7 6a01 	vldmia	r7!, {s13}
 802b79a:	ed92 7a00 	vldr	s14, [r2]
 802b79e:	3401      	adds	r4, #1
 802b7a0:	2c04      	cmp	r4, #4
 802b7a2:	f106 0610 	add.w	r6, r6, #16
 802b7a6:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b7aa:	d1f3      	bne.n	802b794 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 802b7ac:	18c2      	adds	r2, r0, r3
 802b7ae:	3304      	adds	r3, #4
 802b7b0:	2b10      	cmp	r3, #16
 802b7b2:	edc2 7a00 	vstr	s15, [r2]
 802b7b6:	d1e7      	bne.n	802b788 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 802b7b8:	3110      	adds	r1, #16
 802b7ba:	4561      	cmp	r1, ip
 802b7bc:	f100 0010 	add.w	r0, r0, #16
 802b7c0:	d1e1      	bne.n	802b786 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 802b7c2:	4628      	mov	r0, r5
 802b7c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b7c8:	00000000 	.word	0x00000000

0802b7cc <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 802b7cc:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802b7d0:	ee87 0a80 	vdiv.f32	s0, s15, s0
 802b7d4:	f100 0320 	add.w	r3, r0, #32
 802b7d8:	3030      	adds	r0, #48	; 0x30
 802b7da:	ecf3 7a01 	vldmia	r3!, {s15}
 802b7de:	ee60 7a27 	vmul.f32	s15, s0, s15
 802b7e2:	4283      	cmp	r3, r0
 802b7e4:	edc3 7a03 	vstr	s15, [r3, #12]
 802b7e8:	d1f7      	bne.n	802b7da <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 802b7ea:	4770      	bx	lr

0802b7ec <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 802b7ec:	b510      	push	{r4, lr}
 802b7ee:	ed2d 8b02 	vpush	{d8}
 802b7f2:	4604      	mov	r4, r0
 802b7f4:	eef0 8a40 	vmov.f32	s17, s0
 802b7f8:	f001 fbfe 	bl	802cff8 <sinf>
 802b7fc:	eeb0 8a40 	vmov.f32	s16, s0
 802b800:	eeb0 0a68 	vmov.f32	s0, s17
 802b804:	f001 fbac 	bl	802cf60 <cosf>
 802b808:	f104 0310 	add.w	r3, r4, #16
 802b80c:	f104 0220 	add.w	r2, r4, #32
 802b810:	eeb1 6a48 	vneg.f32	s12, s16
 802b814:	edd3 7a04 	vldr	s15, [r3, #16]
 802b818:	edd3 6a00 	vldr	s13, [r3]
 802b81c:	ee26 7a27 	vmul.f32	s14, s12, s15
 802b820:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b824:	eea6 7a80 	vfma.f32	s14, s13, s0
 802b828:	eee6 7a88 	vfma.f32	s15, s13, s16
 802b82c:	eca3 7a01 	vstmia	r3!, {s14}
 802b830:	429a      	cmp	r2, r3
 802b832:	edc3 7a03 	vstr	s15, [r3, #12]
 802b836:	d1ed      	bne.n	802b814 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 802b838:	ecbd 8b02 	vpop	{d8}
 802b83c:	4620      	mov	r0, r4
 802b83e:	bd10      	pop	{r4, pc}

0802b840 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 802b840:	b510      	push	{r4, lr}
 802b842:	ed2d 8b02 	vpush	{d8}
 802b846:	4604      	mov	r4, r0
 802b848:	eef0 8a40 	vmov.f32	s17, s0
 802b84c:	f001 fbd4 	bl	802cff8 <sinf>
 802b850:	eeb0 8a40 	vmov.f32	s16, s0
 802b854:	eeb0 0a68 	vmov.f32	s0, s17
 802b858:	f001 fb82 	bl	802cf60 <cosf>
 802b85c:	4623      	mov	r3, r4
 802b85e:	f104 0210 	add.w	r2, r4, #16
 802b862:	eeb1 6a48 	vneg.f32	s12, s16
 802b866:	edd3 7a08 	vldr	s15, [r3, #32]
 802b86a:	edd3 6a00 	vldr	s13, [r3]
 802b86e:	ee27 7a88 	vmul.f32	s14, s15, s16
 802b872:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b876:	eea6 7a80 	vfma.f32	s14, s13, s0
 802b87a:	eee6 7a26 	vfma.f32	s15, s12, s13
 802b87e:	eca3 7a01 	vstmia	r3!, {s14}
 802b882:	429a      	cmp	r2, r3
 802b884:	edc3 7a07 	vstr	s15, [r3, #28]
 802b888:	d1ed      	bne.n	802b866 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 802b88a:	ecbd 8b02 	vpop	{d8}
 802b88e:	4620      	mov	r0, r4
 802b890:	bd10      	pop	{r4, pc}

0802b892 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 802b892:	b510      	push	{r4, lr}
 802b894:	ed2d 8b02 	vpush	{d8}
 802b898:	4604      	mov	r4, r0
 802b89a:	eef0 8a40 	vmov.f32	s17, s0
 802b89e:	f001 fbab 	bl	802cff8 <sinf>
 802b8a2:	eeb0 8a40 	vmov.f32	s16, s0
 802b8a6:	eeb0 0a68 	vmov.f32	s0, s17
 802b8aa:	f001 fb59 	bl	802cf60 <cosf>
 802b8ae:	4623      	mov	r3, r4
 802b8b0:	f104 0210 	add.w	r2, r4, #16
 802b8b4:	eeb1 6a48 	vneg.f32	s12, s16
 802b8b8:	edd3 7a04 	vldr	s15, [r3, #16]
 802b8bc:	edd3 6a00 	vldr	s13, [r3]
 802b8c0:	ee26 7a27 	vmul.f32	s14, s12, s15
 802b8c4:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b8c8:	eea6 7a80 	vfma.f32	s14, s13, s0
 802b8cc:	eee6 7a88 	vfma.f32	s15, s13, s16
 802b8d0:	eca3 7a01 	vstmia	r3!, {s14}
 802b8d4:	429a      	cmp	r2, r3
 802b8d6:	edc3 7a03 	vstr	s15, [r3, #12]
 802b8da:	d1ed      	bne.n	802b8b8 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 802b8dc:	ecbd 8b02 	vpop	{d8}
 802b8e0:	4620      	mov	r0, r4
 802b8e2:	bd10      	pop	{r4, pc}

0802b8e4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 802b8e4:	4603      	mov	r3, r0
 802b8e6:	f100 0210 	add.w	r2, r0, #16
 802b8ea:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 802b8ee:	edd3 7a00 	vldr	s15, [r3]
 802b8f2:	eee7 7a00 	vfma.f32	s15, s14, s0
 802b8f6:	ece3 7a01 	vstmia	r3!, {s15}
 802b8fa:	4293      	cmp	r3, r2
 802b8fc:	d1f5      	bne.n	802b8ea <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 802b8fe:	4770      	bx	lr

0802b900 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 802b900:	f100 0310 	add.w	r3, r0, #16
 802b904:	f100 0220 	add.w	r2, r0, #32
 802b908:	ed93 7a08 	vldr	s14, [r3, #32]
 802b90c:	edd3 7a00 	vldr	s15, [r3]
 802b910:	eee7 7a00 	vfma.f32	s15, s14, s0
 802b914:	ece3 7a01 	vstmia	r3!, {s15}
 802b918:	4293      	cmp	r3, r2
 802b91a:	d1f5      	bne.n	802b908 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 802b91c:	4770      	bx	lr

0802b91e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 802b91e:	f100 0320 	add.w	r3, r0, #32
 802b922:	f100 0230 	add.w	r2, r0, #48	; 0x30
 802b926:	ed93 7a04 	vldr	s14, [r3, #16]
 802b92a:	edd3 7a00 	vldr	s15, [r3]
 802b92e:	eee7 7a00 	vfma.f32	s15, s14, s0
 802b932:	ece3 7a01 	vstmia	r3!, {s15}
 802b936:	4293      	cmp	r3, r2
 802b938:	d1f5      	bne.n	802b926 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 802b93a:	4770      	bx	lr

0802b93c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 802b93c:	4603      	mov	r3, r0
 802b93e:	f100 0210 	add.w	r2, r0, #16
 802b942:	edd3 7a00 	vldr	s15, [r3]
 802b946:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b94a:	ece3 7a01 	vstmia	r3!, {s15}
 802b94e:	4293      	cmp	r3, r2
 802b950:	d1f7      	bne.n	802b942 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 802b952:	4770      	bx	lr

0802b954 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 802b954:	f100 0310 	add.w	r3, r0, #16
 802b958:	f100 0220 	add.w	r2, r0, #32
 802b95c:	edd3 7a00 	vldr	s15, [r3]
 802b960:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b964:	ece3 7a01 	vstmia	r3!, {s15}
 802b968:	4293      	cmp	r3, r2
 802b96a:	d1f7      	bne.n	802b95c <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 802b96c:	4770      	bx	lr

0802b96e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 802b96e:	f100 0320 	add.w	r3, r0, #32
 802b972:	f100 0230 	add.w	r2, r0, #48	; 0x30
 802b976:	edd3 7a00 	vldr	s15, [r3]
 802b97a:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b97e:	ece3 7a01 	vstmia	r3!, {s15}
 802b982:	4293      	cmp	r3, r2
 802b984:	d1f7      	bne.n	802b976 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 802b986:	4770      	bx	lr

0802b988 <arm_std_f32>:
 802b988:	2901      	cmp	r1, #1
 802b98a:	d065      	beq.n	802ba58 <arm_std_f32+0xd0>
 802b98c:	b530      	push	{r4, r5, lr}
 802b98e:	eddf 6a37 	vldr	s13, [pc, #220]	; 802ba6c <arm_std_f32+0xe4>
 802b992:	088d      	lsrs	r5, r1, #2
 802b994:	b083      	sub	sp, #12
 802b996:	eef0 7a66 	vmov.f32	s15, s13
 802b99a:	d028      	beq.n	802b9ee <arm_std_f32+0x66>
 802b99c:	f100 0310 	add.w	r3, r0, #16
 802b9a0:	462c      	mov	r4, r5
 802b9a2:	ed13 7a04 	vldr	s14, [r3, #-16]
 802b9a6:	ed53 4a03 	vldr	s9, [r3, #-12]
 802b9aa:	ed13 5a02 	vldr	s10, [r3, #-8]
 802b9ae:	ed13 6a01 	vldr	s12, [r3, #-4]
 802b9b2:	ee27 0a07 	vmul.f32	s0, s14, s14
 802b9b6:	ee64 5aa4 	vmul.f32	s11, s9, s9
 802b9ba:	ee37 7a87 	vadd.f32	s14, s15, s14
 802b9be:	ee70 6a26 	vadd.f32	s13, s0, s13
 802b9c2:	ee77 7a24 	vadd.f32	s15, s14, s9
 802b9c6:	ee75 6aa6 	vadd.f32	s13, s11, s13
 802b9ca:	ee25 7a05 	vmul.f32	s14, s10, s10
 802b9ce:	ee77 7a85 	vadd.f32	s15, s15, s10
 802b9d2:	ee77 6a26 	vadd.f32	s13, s14, s13
 802b9d6:	ee26 7a06 	vmul.f32	s14, s12, s12
 802b9da:	3c01      	subs	r4, #1
 802b9dc:	ee77 7a86 	vadd.f32	s15, s15, s12
 802b9e0:	ee77 6a26 	vadd.f32	s13, s14, s13
 802b9e4:	f103 0310 	add.w	r3, r3, #16
 802b9e8:	d1db      	bne.n	802b9a2 <arm_std_f32+0x1a>
 802b9ea:	eb00 1005 	add.w	r0, r0, r5, lsl #4
 802b9ee:	f011 0303 	ands.w	r3, r1, #3
 802b9f2:	d009      	beq.n	802ba08 <arm_std_f32+0x80>
 802b9f4:	ecb0 7a01 	vldmia	r0!, {s14}
 802b9f8:	ee27 6a07 	vmul.f32	s12, s14, s14
 802b9fc:	3b01      	subs	r3, #1
 802b9fe:	ee77 7a87 	vadd.f32	s15, s15, s14
 802ba02:	ee76 6a86 	vadd.f32	s13, s13, s12
 802ba06:	d1f5      	bne.n	802b9f4 <arm_std_f32+0x6c>
 802ba08:	ee07 1a10 	vmov	s14, r1
 802ba0c:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 802ba10:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802ba14:	eec7 7a87 	vdiv.f32	s15, s15, s14
 802ba18:	ee37 0a40 	vsub.f32	s0, s14, s0
 802ba1c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802ba20:	ee87 7a00 	vdiv.f32	s14, s14, s0
 802ba24:	eec6 6a80 	vdiv.f32	s13, s13, s0
 802ba28:	ee67 7a87 	vmul.f32	s15, s15, s14
 802ba2c:	ee76 7ae7 	vsub.f32	s15, s13, s15
 802ba30:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802ba34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ba38:	da03      	bge.n	802ba42 <arm_std_f32+0xba>
 802ba3a:	2300      	movs	r3, #0
 802ba3c:	6013      	str	r3, [r2, #0]
 802ba3e:	b003      	add	sp, #12
 802ba40:	bd30      	pop	{r4, r5, pc}
 802ba42:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802ba46:	eeb4 0a40 	vcmp.f32	s0, s0
 802ba4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ba4e:	d106      	bne.n	802ba5e <arm_std_f32+0xd6>
 802ba50:	ed82 0a00 	vstr	s0, [r2]
 802ba54:	b003      	add	sp, #12
 802ba56:	bd30      	pop	{r4, r5, pc}
 802ba58:	2300      	movs	r3, #0
 802ba5a:	6013      	str	r3, [r2, #0]
 802ba5c:	4770      	bx	lr
 802ba5e:	eeb0 0a67 	vmov.f32	s0, s15
 802ba62:	9201      	str	r2, [sp, #4]
 802ba64:	f001 f98a 	bl	802cd7c <sqrtf>
 802ba68:	9a01      	ldr	r2, [sp, #4]
 802ba6a:	e7f1      	b.n	802ba50 <arm_std_f32+0xc8>
 802ba6c:	00000000 	.word	0x00000000

0802ba70 <arm_mean_f32>:
 802ba70:	b430      	push	{r4, r5}
 802ba72:	088d      	lsrs	r5, r1, #2
 802ba74:	eddf 7a17 	vldr	s15, [pc, #92]	; 802bad4 <arm_mean_f32+0x64>
 802ba78:	d018      	beq.n	802baac <arm_mean_f32+0x3c>
 802ba7a:	f100 0310 	add.w	r3, r0, #16
 802ba7e:	462c      	mov	r4, r5
 802ba80:	ed13 7a04 	vldr	s14, [r3, #-16]
 802ba84:	ed53 5a03 	vldr	s11, [r3, #-12]
 802ba88:	ed13 6a02 	vldr	s12, [r3, #-8]
 802ba8c:	ed53 6a01 	vldr	s13, [r3, #-4]
 802ba90:	ee37 7a87 	vadd.f32	s14, s15, s14
 802ba94:	3c01      	subs	r4, #1
 802ba96:	ee77 7a25 	vadd.f32	s15, s14, s11
 802ba9a:	f103 0310 	add.w	r3, r3, #16
 802ba9e:	ee77 7a86 	vadd.f32	s15, s15, s12
 802baa2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802baa6:	d1eb      	bne.n	802ba80 <arm_mean_f32+0x10>
 802baa8:	eb00 1005 	add.w	r0, r0, r5, lsl #4
 802baac:	f011 0303 	ands.w	r3, r1, #3
 802bab0:	d005      	beq.n	802babe <arm_mean_f32+0x4e>
 802bab2:	ecb0 7a01 	vldmia	r0!, {s14}
 802bab6:	3b01      	subs	r3, #1
 802bab8:	ee77 7a87 	vadd.f32	s15, s15, s14
 802babc:	d1f9      	bne.n	802bab2 <arm_mean_f32+0x42>
 802babe:	ee07 1a10 	vmov	s14, r1
 802bac2:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 802bac6:	bc30      	pop	{r4, r5}
 802bac8:	eec7 7a87 	vdiv.f32	s15, s15, s14
 802bacc:	edc2 7a00 	vstr	s15, [r2]
 802bad0:	4770      	bx	lr
 802bad2:	bf00      	nop
 802bad4:	00000000 	.word	0x00000000

0802bad8 <arm_max_f32>:
 802bad8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802badc:	1e4f      	subs	r7, r1, #1
 802bade:	ea5f 0897 	movs.w	r8, r7, lsr #2
 802bae2:	f100 0e04 	add.w	lr, r0, #4
 802bae6:	edd0 7a00 	vldr	s15, [r0]
 802baea:	d058      	beq.n	802bb9e <arm_max_f32+0xc6>
 802baec:	3014      	adds	r0, #20
 802baee:	46c4      	mov	ip, r8
 802baf0:	2604      	movs	r6, #4
 802baf2:	2400      	movs	r4, #0
 802baf4:	ed10 6a04 	vldr	s12, [r0, #-16]
 802baf8:	ed50 6a03 	vldr	s13, [r0, #-12]
 802bafc:	ed10 7a02 	vldr	s14, [r0, #-8]
 802bb00:	ed50 5a01 	vldr	s11, [r0, #-4]
 802bb04:	eeb4 6ae7 	vcmpe.f32	s12, s15
 802bb08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802bb0c:	bfc8      	it	gt
 802bb0e:	eef0 7a46 	vmovgt.f32	s15, s12
 802bb12:	f1a6 0503 	sub.w	r5, r6, #3
 802bb16:	eef4 7ae6 	vcmpe.f32	s15, s13
 802bb1a:	bfc8      	it	gt
 802bb1c:	462c      	movgt	r4, r5
 802bb1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802bb22:	bf48      	it	mi
 802bb24:	eef0 7a66 	vmovmi.f32	s15, s13
 802bb28:	f1a6 0502 	sub.w	r5, r6, #2
 802bb2c:	eef4 7ac7 	vcmpe.f32	s15, s14
 802bb30:	bf48      	it	mi
 802bb32:	462c      	movmi	r4, r5
 802bb34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802bb38:	bf48      	it	mi
 802bb3a:	eef0 7a47 	vmovmi.f32	s15, s14
 802bb3e:	f106 35ff 	add.w	r5, r6, #4294967295
 802bb42:	eef4 7ae5 	vcmpe.f32	s15, s11
 802bb46:	bf48      	it	mi
 802bb48:	462c      	movmi	r4, r5
 802bb4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802bb4e:	bf48      	it	mi
 802bb50:	4634      	movmi	r4, r6
 802bb52:	bf48      	it	mi
 802bb54:	eef0 7a65 	vmovmi.f32	s15, s11
 802bb58:	f1bc 0c01 	subs.w	ip, ip, #1
 802bb5c:	f106 0604 	add.w	r6, r6, #4
 802bb60:	f100 0010 	add.w	r0, r0, #16
 802bb64:	d1c6      	bne.n	802baf4 <arm_max_f32+0x1c>
 802bb66:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 802bb6a:	f017 0003 	ands.w	r0, r7, #3
 802bb6e:	d018      	beq.n	802bba2 <arm_max_f32+0xca>
 802bb70:	1a08      	subs	r0, r1, r0
 802bb72:	ecbe 7a01 	vldmia	lr!, {s14}
 802bb76:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802bb7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802bb7e:	bfc8      	it	gt
 802bb80:	4604      	movgt	r4, r0
 802bb82:	f100 0001 	add.w	r0, r0, #1
 802bb86:	bfd8      	it	le
 802bb88:	eeb0 7a67 	vmovle.f32	s14, s15
 802bb8c:	4288      	cmp	r0, r1
 802bb8e:	eef0 7a47 	vmov.f32	s15, s14
 802bb92:	d1ee      	bne.n	802bb72 <arm_max_f32+0x9a>
 802bb94:	ed82 7a00 	vstr	s14, [r2]
 802bb98:	601c      	str	r4, [r3, #0]
 802bb9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802bb9e:	4644      	mov	r4, r8
 802bba0:	e7e3      	b.n	802bb6a <arm_max_f32+0x92>
 802bba2:	eeb0 7a67 	vmov.f32	s14, s15
 802bba6:	e7f5      	b.n	802bb94 <arm_max_f32+0xbc>

0802bba8 <arm_rfft_fast_init_f32>:
 802bba8:	084b      	lsrs	r3, r1, #1
 802bbaa:	2b80      	cmp	r3, #128	; 0x80
 802bbac:	b410      	push	{r4}
 802bbae:	8201      	strh	r1, [r0, #16]
 802bbb0:	8003      	strh	r3, [r0, #0]
 802bbb2:	d047      	beq.n	802bc44 <arm_rfft_fast_init_f32+0x9c>
 802bbb4:	d917      	bls.n	802bbe6 <arm_rfft_fast_init_f32+0x3e>
 802bbb6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802bbba:	d03d      	beq.n	802bc38 <arm_rfft_fast_init_f32+0x90>
 802bbbc:	d929      	bls.n	802bc12 <arm_rfft_fast_init_f32+0x6a>
 802bbbe:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 802bbc2:	d020      	beq.n	802bc06 <arm_rfft_fast_init_f32+0x5e>
 802bbc4:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 802bbc8:	d113      	bne.n	802bbf2 <arm_rfft_fast_init_f32+0x4a>
 802bbca:	4921      	ldr	r1, [pc, #132]	; (802bc50 <arm_rfft_fast_init_f32+0xa8>)
 802bbcc:	4a21      	ldr	r2, [pc, #132]	; (802bc54 <arm_rfft_fast_init_f32+0xac>)
 802bbce:	4b22      	ldr	r3, [pc, #136]	; (802bc58 <arm_rfft_fast_init_f32+0xb0>)
 802bbd0:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 802bbd4:	8184      	strh	r4, [r0, #12]
 802bbd6:	6081      	str	r1, [r0, #8]
 802bbd8:	6042      	str	r2, [r0, #4]
 802bbda:	6143      	str	r3, [r0, #20]
 802bbdc:	2000      	movs	r0, #0
 802bbde:	b240      	sxtb	r0, r0
 802bbe0:	f85d 4b04 	ldr.w	r4, [sp], #4
 802bbe4:	4770      	bx	lr
 802bbe6:	2b20      	cmp	r3, #32
 802bbe8:	d01c      	beq.n	802bc24 <arm_rfft_fast_init_f32+0x7c>
 802bbea:	2b40      	cmp	r3, #64	; 0x40
 802bbec:	d006      	beq.n	802bbfc <arm_rfft_fast_init_f32+0x54>
 802bbee:	2b10      	cmp	r3, #16
 802bbf0:	d01d      	beq.n	802bc2e <arm_rfft_fast_init_f32+0x86>
 802bbf2:	20ff      	movs	r0, #255	; 0xff
 802bbf4:	b240      	sxtb	r0, r0
 802bbf6:	f85d 4b04 	ldr.w	r4, [sp], #4
 802bbfa:	4770      	bx	lr
 802bbfc:	2438      	movs	r4, #56	; 0x38
 802bbfe:	4917      	ldr	r1, [pc, #92]	; (802bc5c <arm_rfft_fast_init_f32+0xb4>)
 802bc00:	4a17      	ldr	r2, [pc, #92]	; (802bc60 <arm_rfft_fast_init_f32+0xb8>)
 802bc02:	4b18      	ldr	r3, [pc, #96]	; (802bc64 <arm_rfft_fast_init_f32+0xbc>)
 802bc04:	e7e6      	b.n	802bbd4 <arm_rfft_fast_init_f32+0x2c>
 802bc06:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 802bc0a:	4917      	ldr	r1, [pc, #92]	; (802bc68 <arm_rfft_fast_init_f32+0xc0>)
 802bc0c:	4a17      	ldr	r2, [pc, #92]	; (802bc6c <arm_rfft_fast_init_f32+0xc4>)
 802bc0e:	4b18      	ldr	r3, [pc, #96]	; (802bc70 <arm_rfft_fast_init_f32+0xc8>)
 802bc10:	e7e0      	b.n	802bbd4 <arm_rfft_fast_init_f32+0x2c>
 802bc12:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 802bc16:	d1ec      	bne.n	802bbf2 <arm_rfft_fast_init_f32+0x4a>
 802bc18:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 802bc1c:	4915      	ldr	r1, [pc, #84]	; (802bc74 <arm_rfft_fast_init_f32+0xcc>)
 802bc1e:	4a16      	ldr	r2, [pc, #88]	; (802bc78 <arm_rfft_fast_init_f32+0xd0>)
 802bc20:	4b16      	ldr	r3, [pc, #88]	; (802bc7c <arm_rfft_fast_init_f32+0xd4>)
 802bc22:	e7d7      	b.n	802bbd4 <arm_rfft_fast_init_f32+0x2c>
 802bc24:	2430      	movs	r4, #48	; 0x30
 802bc26:	4916      	ldr	r1, [pc, #88]	; (802bc80 <arm_rfft_fast_init_f32+0xd8>)
 802bc28:	4a16      	ldr	r2, [pc, #88]	; (802bc84 <arm_rfft_fast_init_f32+0xdc>)
 802bc2a:	4b17      	ldr	r3, [pc, #92]	; (802bc88 <arm_rfft_fast_init_f32+0xe0>)
 802bc2c:	e7d2      	b.n	802bbd4 <arm_rfft_fast_init_f32+0x2c>
 802bc2e:	2414      	movs	r4, #20
 802bc30:	4916      	ldr	r1, [pc, #88]	; (802bc8c <arm_rfft_fast_init_f32+0xe4>)
 802bc32:	4a17      	ldr	r2, [pc, #92]	; (802bc90 <arm_rfft_fast_init_f32+0xe8>)
 802bc34:	4b17      	ldr	r3, [pc, #92]	; (802bc94 <arm_rfft_fast_init_f32+0xec>)
 802bc36:	e7cd      	b.n	802bbd4 <arm_rfft_fast_init_f32+0x2c>
 802bc38:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 802bc3c:	4916      	ldr	r1, [pc, #88]	; (802bc98 <arm_rfft_fast_init_f32+0xf0>)
 802bc3e:	4a17      	ldr	r2, [pc, #92]	; (802bc9c <arm_rfft_fast_init_f32+0xf4>)
 802bc40:	4b17      	ldr	r3, [pc, #92]	; (802bca0 <arm_rfft_fast_init_f32+0xf8>)
 802bc42:	e7c7      	b.n	802bbd4 <arm_rfft_fast_init_f32+0x2c>
 802bc44:	24d0      	movs	r4, #208	; 0xd0
 802bc46:	4917      	ldr	r1, [pc, #92]	; (802bca4 <arm_rfft_fast_init_f32+0xfc>)
 802bc48:	4a17      	ldr	r2, [pc, #92]	; (802bca8 <arm_rfft_fast_init_f32+0x100>)
 802bc4a:	4b18      	ldr	r3, [pc, #96]	; (802bcac <arm_rfft_fast_init_f32+0x104>)
 802bc4c:	e7c2      	b.n	802bbd4 <arm_rfft_fast_init_f32+0x2c>
 802bc4e:	bf00      	nop
 802bc50:	08041330 	.word	0x08041330
 802bc54:	08032528 	.word	0x08032528
 802bc58:	08038698 	.word	0x08038698
 802bc5c:	08036628 	.word	0x08036628
 802bc60:	080430f0 	.word	0x080430f0
 802bc64:	080455e0 	.word	0x080455e0
 802bc68:	0803f018 	.word	0x0803f018
 802bc6c:	0803cf18 	.word	0x0803cf18
 802bc70:	08036698 	.word	0x08036698
 802bc74:	08045270 	.word	0x08045270
 802bc78:	0803c698 	.word	0x0803c698
 802bc7c:	080432f0 	.word	0x080432f0
 802bc80:	0803fed0 	.word	0x0803fed0
 802bc84:	0803ef18 	.word	0x0803ef18
 802bc88:	08036528 	.word	0x08036528
 802bc8c:	0803fe28 	.word	0x0803fe28
 802bc90:	0803ce98 	.word	0x0803ce98
 802bc94:	0803fe50 	.word	0x0803fe50
 802bc98:	08043af0 	.word	0x08043af0
 802bc9c:	08040330 	.word	0x08040330
 802bca0:	08043e70 	.word	0x08043e70
 802bca4:	080457e0 	.word	0x080457e0
 802bca8:	0803ff30 	.word	0x0803ff30
 802bcac:	08044e70 	.word	0x08044e70

0802bcb0 <arm_rfft_fast_f32>:
 802bcb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802bcb4:	8a06      	ldrh	r6, [r0, #16]
 802bcb6:	0876      	lsrs	r6, r6, #1
 802bcb8:	4607      	mov	r7, r0
 802bcba:	4615      	mov	r5, r2
 802bcbc:	8006      	strh	r6, [r0, #0]
 802bcbe:	460c      	mov	r4, r1
 802bcc0:	2b00      	cmp	r3, #0
 802bcc2:	d15c      	bne.n	802bd7e <arm_rfft_fast_f32+0xce>
 802bcc4:	461a      	mov	r2, r3
 802bcc6:	2301      	movs	r3, #1
 802bcc8:	f000 fbe6 	bl	802c498 <arm_cfft_f32>
 802bccc:	edd4 7a00 	vldr	s15, [r4]
 802bcd0:	ed94 7a01 	vldr	s14, [r4, #4]
 802bcd4:	883e      	ldrh	r6, [r7, #0]
 802bcd6:	6978      	ldr	r0, [r7, #20]
 802bcd8:	ee37 7a07 	vadd.f32	s14, s14, s14
 802bcdc:	ee77 7aa7 	vadd.f32	s15, s15, s15
 802bce0:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 802bce4:	ee77 6a87 	vadd.f32	s13, s15, s14
 802bce8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802bcec:	3e01      	subs	r6, #1
 802bcee:	ee26 7aa3 	vmul.f32	s14, s13, s7
 802bcf2:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802bcf6:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 802bcfa:	ed85 7a00 	vstr	s14, [r5]
 802bcfe:	edc5 7a01 	vstr	s15, [r5, #4]
 802bd02:	3010      	adds	r0, #16
 802bd04:	f105 0210 	add.w	r2, r5, #16
 802bd08:	3b08      	subs	r3, #8
 802bd0a:	f104 0110 	add.w	r1, r4, #16
 802bd0e:	ed51 4a02 	vldr	s9, [r1, #-8]
 802bd12:	ed93 5a02 	vldr	s10, [r3, #8]
 802bd16:	ed11 7a01 	vldr	s14, [r1, #-4]
 802bd1a:	ed10 6a02 	vldr	s12, [r0, #-8]
 802bd1e:	edd3 5a03 	vldr	s11, [r3, #12]
 802bd22:	ed50 6a01 	vldr	s13, [r0, #-4]
 802bd26:	ee75 7a64 	vsub.f32	s15, s10, s9
 802bd2a:	ee35 4a87 	vadd.f32	s8, s11, s14
 802bd2e:	ee35 5a24 	vadd.f32	s10, s10, s9
 802bd32:	ee77 5a65 	vsub.f32	s11, s14, s11
 802bd36:	ee66 4a27 	vmul.f32	s9, s12, s15
 802bd3a:	ee26 7aa7 	vmul.f32	s14, s13, s15
 802bd3e:	ee34 5a85 	vadd.f32	s10, s9, s10
 802bd42:	ee26 6a04 	vmul.f32	s12, s12, s8
 802bd46:	ee66 6a84 	vmul.f32	s13, s13, s8
 802bd4a:	ee77 7a25 	vadd.f32	s15, s14, s11
 802bd4e:	ee76 6a85 	vadd.f32	s13, s13, s10
 802bd52:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802bd56:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802bd5a:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802bd5e:	3e01      	subs	r6, #1
 802bd60:	ed42 6a02 	vstr	s13, [r2, #-8]
 802bd64:	ed42 7a01 	vstr	s15, [r2, #-4]
 802bd68:	f1a3 0308 	sub.w	r3, r3, #8
 802bd6c:	f101 0108 	add.w	r1, r1, #8
 802bd70:	f100 0008 	add.w	r0, r0, #8
 802bd74:	f102 0208 	add.w	r2, r2, #8
 802bd78:	d1c9      	bne.n	802bd0e <arm_rfft_fast_f32+0x5e>
 802bd7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802bd7e:	edd1 7a00 	vldr	s15, [r1]
 802bd82:	edd1 6a01 	vldr	s13, [r1, #4]
 802bd86:	6941      	ldr	r1, [r0, #20]
 802bd88:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802bd8c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802bd90:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 802bd94:	ee27 7a23 	vmul.f32	s14, s14, s7
 802bd98:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802bd9c:	3e01      	subs	r6, #1
 802bd9e:	ed82 7a00 	vstr	s14, [r2]
 802bda2:	edc2 7a01 	vstr	s15, [r2, #4]
 802bda6:	00f0      	lsls	r0, r6, #3
 802bda8:	b3ee      	cbz	r6, 802be26 <arm_rfft_fast_f32+0x176>
 802bdaa:	3808      	subs	r0, #8
 802bdac:	f101 0e10 	add.w	lr, r1, #16
 802bdb0:	4420      	add	r0, r4
 802bdb2:	f104 0110 	add.w	r1, r4, #16
 802bdb6:	f102 0c10 	add.w	ip, r2, #16
 802bdba:	ed90 7a02 	vldr	s14, [r0, #8]
 802bdbe:	ed51 6a02 	vldr	s13, [r1, #-8]
 802bdc2:	ed1e 6a02 	vldr	s12, [lr, #-8]
 802bdc6:	ed90 4a03 	vldr	s8, [r0, #12]
 802bdca:	ed11 5a01 	vldr	s10, [r1, #-4]
 802bdce:	ed5e 5a01 	vldr	s11, [lr, #-4]
 802bdd2:	ee76 7ac7 	vsub.f32	s15, s13, s14
 802bdd6:	ee74 4a05 	vadd.f32	s9, s8, s10
 802bdda:	ee26 3a27 	vmul.f32	s6, s12, s15
 802bdde:	ee77 6a26 	vadd.f32	s13, s14, s13
 802bde2:	ee35 5a44 	vsub.f32	s10, s10, s8
 802bde6:	ee25 7aa7 	vmul.f32	s14, s11, s15
 802bdea:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802bdee:	ee77 7a05 	vadd.f32	s15, s14, s10
 802bdf2:	ee26 6a24 	vmul.f32	s12, s12, s9
 802bdf6:	ee65 5aa4 	vmul.f32	s11, s11, s9
 802bdfa:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802bdfe:	ee36 7ae5 	vsub.f32	s14, s13, s11
 802be02:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802be06:	ee27 7a23 	vmul.f32	s14, s14, s7
 802be0a:	3e01      	subs	r6, #1
 802be0c:	ed0c 7a02 	vstr	s14, [ip, #-8]
 802be10:	ed4c 7a01 	vstr	s15, [ip, #-4]
 802be14:	f1a0 0008 	sub.w	r0, r0, #8
 802be18:	f101 0108 	add.w	r1, r1, #8
 802be1c:	f10e 0e08 	add.w	lr, lr, #8
 802be20:	f10c 0c08 	add.w	ip, ip, #8
 802be24:	d1c9      	bne.n	802bdba <arm_rfft_fast_f32+0x10a>
 802be26:	4638      	mov	r0, r7
 802be28:	4629      	mov	r1, r5
 802be2a:	461a      	mov	r2, r3
 802be2c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802be30:	2301      	movs	r3, #1
 802be32:	f000 bb31 	b.w	802c498 <arm_cfft_f32>
 802be36:	bf00      	nop

0802be38 <arm_cfft_radix8by2_f32>:
 802be38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802be3c:	ed2d 8b08 	vpush	{d8-d11}
 802be40:	f8b0 e000 	ldrh.w	lr, [r0]
 802be44:	6842      	ldr	r2, [r0, #4]
 802be46:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802be4a:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 802be4e:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 802be52:	4607      	mov	r7, r0
 802be54:	ea4f 038c 	mov.w	r3, ip, lsl #2
 802be58:	f000 80af 	beq.w	802bfba <arm_cfft_radix8by2_f32+0x182>
 802be5c:	3310      	adds	r3, #16
 802be5e:	18ce      	adds	r6, r1, r3
 802be60:	3210      	adds	r2, #16
 802be62:	4443      	add	r3, r8
 802be64:	f101 0510 	add.w	r5, r1, #16
 802be68:	f108 0410 	add.w	r4, r8, #16
 802be6c:	ed54 1a04 	vldr	s3, [r4, #-16]
 802be70:	ed13 4a04 	vldr	s8, [r3, #-16]
 802be74:	ed53 3a03 	vldr	s7, [r3, #-12]
 802be78:	ed53 5a02 	vldr	s11, [r3, #-8]
 802be7c:	ed13 5a01 	vldr	s10, [r3, #-4]
 802be80:	ed54 6a03 	vldr	s13, [r4, #-12]
 802be84:	ed14 0a02 	vldr	s0, [r4, #-8]
 802be88:	ed16 2a04 	vldr	s4, [r6, #-16]
 802be8c:	ed56 2a03 	vldr	s5, [r6, #-12]
 802be90:	ed15 6a03 	vldr	s12, [r5, #-12]
 802be94:	ed15 7a01 	vldr	s14, [r5, #-4]
 802be98:	ed15 3a04 	vldr	s6, [r5, #-16]
 802be9c:	ed54 7a01 	vldr	s15, [r4, #-4]
 802bea0:	ed56 0a02 	vldr	s1, [r6, #-8]
 802bea4:	ed16 1a01 	vldr	s2, [r6, #-4]
 802bea8:	ed55 4a02 	vldr	s9, [r5, #-8]
 802beac:	ee73 ba21 	vadd.f32	s23, s6, s3
 802beb0:	ee36 ba26 	vadd.f32	s22, s12, s13
 802beb4:	ee37 aa27 	vadd.f32	s20, s14, s15
 802beb8:	ee72 9a04 	vadd.f32	s19, s4, s8
 802bebc:	ee32 9aa3 	vadd.f32	s18, s5, s7
 802bec0:	ee31 8a05 	vadd.f32	s16, s2, s10
 802bec4:	ee74 aa80 	vadd.f32	s21, s9, s0
 802bec8:	ee70 8aa5 	vadd.f32	s17, s1, s11
 802becc:	ed45 ba04 	vstr	s23, [r5, #-16]
 802bed0:	ed05 ba03 	vstr	s22, [r5, #-12]
 802bed4:	ed45 aa02 	vstr	s21, [r5, #-8]
 802bed8:	ed05 aa01 	vstr	s20, [r5, #-4]
 802bedc:	ed06 8a01 	vstr	s16, [r6, #-4]
 802bee0:	ed46 9a04 	vstr	s19, [r6, #-16]
 802bee4:	ed06 9a03 	vstr	s18, [r6, #-12]
 802bee8:	ed46 8a02 	vstr	s17, [r6, #-8]
 802beec:	ee76 6a66 	vsub.f32	s13, s12, s13
 802bef0:	ee73 3ae2 	vsub.f32	s7, s7, s5
 802bef4:	ed12 6a03 	vldr	s12, [r2, #-12]
 802bef8:	ed52 2a04 	vldr	s5, [r2, #-16]
 802befc:	ee33 3a61 	vsub.f32	s6, s6, s3
 802bf00:	ee34 4a42 	vsub.f32	s8, s8, s4
 802bf04:	ee26 8a86 	vmul.f32	s16, s13, s12
 802bf08:	ee24 2a06 	vmul.f32	s4, s8, s12
 802bf0c:	ee63 1a22 	vmul.f32	s3, s6, s5
 802bf10:	ee24 4a22 	vmul.f32	s8, s8, s5
 802bf14:	ee23 3a06 	vmul.f32	s6, s6, s12
 802bf18:	ee66 6aa2 	vmul.f32	s13, s13, s5
 802bf1c:	ee23 6a86 	vmul.f32	s12, s7, s12
 802bf20:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802bf24:	ee36 6a04 	vadd.f32	s12, s12, s8
 802bf28:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802bf2c:	ee72 3a63 	vsub.f32	s7, s4, s7
 802bf30:	ee71 2a88 	vadd.f32	s5, s3, s16
 802bf34:	ed44 6a03 	vstr	s13, [r4, #-12]
 802bf38:	ed44 2a04 	vstr	s5, [r4, #-16]
 802bf3c:	ed43 3a04 	vstr	s7, [r3, #-16]
 802bf40:	ed03 6a03 	vstr	s12, [r3, #-12]
 802bf44:	ee77 7a67 	vsub.f32	s15, s14, s15
 802bf48:	ee75 6ae0 	vsub.f32	s13, s11, s1
 802bf4c:	ed12 7a01 	vldr	s14, [r2, #-4]
 802bf50:	ed52 5a02 	vldr	s11, [r2, #-8]
 802bf54:	ee35 6a41 	vsub.f32	s12, s10, s2
 802bf58:	ee74 4ac0 	vsub.f32	s9, s9, s0
 802bf5c:	ee67 3a87 	vmul.f32	s7, s15, s14
 802bf60:	ee26 5a87 	vmul.f32	s10, s13, s14
 802bf64:	ee24 4aa5 	vmul.f32	s8, s9, s11
 802bf68:	ee67 7aa5 	vmul.f32	s15, s15, s11
 802bf6c:	ee64 4a87 	vmul.f32	s9, s9, s14
 802bf70:	ee66 6aa5 	vmul.f32	s13, s13, s11
 802bf74:	ee26 7a07 	vmul.f32	s14, s12, s14
 802bf78:	ee26 6a25 	vmul.f32	s12, s12, s11
 802bf7c:	ee77 7ae4 	vsub.f32	s15, s15, s9
 802bf80:	ee74 5a23 	vadd.f32	s11, s8, s7
 802bf84:	ee35 6a46 	vsub.f32	s12, s10, s12
 802bf88:	ee37 7a26 	vadd.f32	s14, s14, s13
 802bf8c:	f1be 0e01 	subs.w	lr, lr, #1
 802bf90:	ed44 5a02 	vstr	s11, [r4, #-8]
 802bf94:	f105 0510 	add.w	r5, r5, #16
 802bf98:	ed44 7a01 	vstr	s15, [r4, #-4]
 802bf9c:	f106 0610 	add.w	r6, r6, #16
 802bfa0:	ed03 6a02 	vstr	s12, [r3, #-8]
 802bfa4:	ed03 7a01 	vstr	s14, [r3, #-4]
 802bfa8:	f102 0210 	add.w	r2, r2, #16
 802bfac:	f104 0410 	add.w	r4, r4, #16
 802bfb0:	f103 0310 	add.w	r3, r3, #16
 802bfb4:	f47f af5a 	bne.w	802be6c <arm_cfft_radix8by2_f32+0x34>
 802bfb8:	687a      	ldr	r2, [r7, #4]
 802bfba:	fa1f f48c 	uxth.w	r4, ip
 802bfbe:	4608      	mov	r0, r1
 802bfc0:	2302      	movs	r3, #2
 802bfc2:	4621      	mov	r1, r4
 802bfc4:	f000 fbca 	bl	802c75c <arm_radix8_butterfly_f32>
 802bfc8:	ecbd 8b08 	vpop	{d8-d11}
 802bfcc:	4640      	mov	r0, r8
 802bfce:	4621      	mov	r1, r4
 802bfd0:	687a      	ldr	r2, [r7, #4]
 802bfd2:	2302      	movs	r3, #2
 802bfd4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802bfd8:	f000 bbc0 	b.w	802c75c <arm_radix8_butterfly_f32>

0802bfdc <arm_cfft_radix8by4_f32>:
 802bfdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802bfe0:	ed2d 8b0a 	vpush	{d8-d12}
 802bfe4:	8802      	ldrh	r2, [r0, #0]
 802bfe6:	ed91 6a00 	vldr	s12, [r1]
 802bfea:	b08f      	sub	sp, #60	; 0x3c
 802bfec:	460f      	mov	r7, r1
 802bfee:	0852      	lsrs	r2, r2, #1
 802bff0:	0093      	lsls	r3, r2, #2
 802bff2:	900c      	str	r0, [sp, #48]	; 0x30
 802bff4:	9103      	str	r1, [sp, #12]
 802bff6:	6841      	ldr	r1, [r0, #4]
 802bff8:	ed97 7a01 	vldr	s14, [r7, #4]
 802bffc:	4638      	mov	r0, r7
 802bffe:	4418      	add	r0, r3
 802c000:	4606      	mov	r6, r0
 802c002:	9009      	str	r0, [sp, #36]	; 0x24
 802c004:	4418      	add	r0, r3
 802c006:	edd0 6a00 	vldr	s13, [r0]
 802c00a:	edd6 3a00 	vldr	s7, [r6]
 802c00e:	edd6 2a01 	vldr	s5, [r6, #4]
 802c012:	edd0 7a01 	vldr	s15, [r0, #4]
 802c016:	900a      	str	r0, [sp, #40]	; 0x28
 802c018:	ee76 5a26 	vadd.f32	s11, s12, s13
 802c01c:	4604      	mov	r4, r0
 802c01e:	4625      	mov	r5, r4
 802c020:	441c      	add	r4, r3
 802c022:	ed94 4a00 	vldr	s8, [r4]
 802c026:	ed94 5a01 	vldr	s10, [r4, #4]
 802c02a:	9401      	str	r4, [sp, #4]
 802c02c:	ee75 4aa3 	vadd.f32	s9, s11, s7
 802c030:	4630      	mov	r0, r6
 802c032:	ee74 4a24 	vadd.f32	s9, s8, s9
 802c036:	463e      	mov	r6, r7
 802c038:	ee14 ea90 	vmov	lr, s9
 802c03c:	ee76 6a66 	vsub.f32	s13, s12, s13
 802c040:	f846 eb08 	str.w	lr, [r6], #8
 802c044:	ee37 6a27 	vadd.f32	s12, s14, s15
 802c048:	edd0 4a01 	vldr	s9, [r0, #4]
 802c04c:	9604      	str	r6, [sp, #16]
 802c04e:	ee77 7a67 	vsub.f32	s15, s14, s15
 802c052:	9e01      	ldr	r6, [sp, #4]
 802c054:	ee32 3aa6 	vadd.f32	s6, s5, s13
 802c058:	ed96 2a01 	vldr	s4, [r6, #4]
 802c05c:	ee36 7a24 	vadd.f32	s14, s12, s9
 802c060:	ee75 5ae3 	vsub.f32	s11, s11, s7
 802c064:	ee77 4ae3 	vsub.f32	s9, s15, s7
 802c068:	ee36 6a62 	vsub.f32	s12, s12, s5
 802c06c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 802c070:	ee76 6ae2 	vsub.f32	s13, s13, s5
 802c074:	ee73 3a45 	vsub.f32	s7, s6, s10
 802c078:	4604      	mov	r4, r0
 802c07a:	ee36 6a45 	vsub.f32	s12, s12, s10
 802c07e:	ee75 6a26 	vadd.f32	s13, s10, s13
 802c082:	46a3      	mov	fp, r4
 802c084:	ee37 7a02 	vadd.f32	s14, s14, s4
 802c088:	ee34 5a84 	vadd.f32	s10, s9, s8
 802c08c:	ee13 8a90 	vmov	r8, s7
 802c090:	46a4      	mov	ip, r4
 802c092:	ee75 5ac4 	vsub.f32	s11, s11, s8
 802c096:	ed87 7a01 	vstr	s14, [r7, #4]
 802c09a:	f84b 8b08 	str.w	r8, [fp], #8
 802c09e:	f1ac 0704 	sub.w	r7, ip, #4
 802c0a2:	ed8c 5a01 	vstr	s10, [ip, #4]
 802c0a6:	f101 0c08 	add.w	ip, r1, #8
 802c0aa:	462c      	mov	r4, r5
 802c0ac:	f8cd c014 	str.w	ip, [sp, #20]
 802c0b0:	ee15 ca90 	vmov	ip, s11
 802c0b4:	f844 cb08 	str.w	ip, [r4], #8
 802c0b8:	9407      	str	r4, [sp, #28]
 802c0ba:	f101 0410 	add.w	r4, r1, #16
 802c0be:	ed85 6a01 	vstr	s12, [r5, #4]
 802c0c2:	0852      	lsrs	r2, r2, #1
 802c0c4:	9402      	str	r4, [sp, #8]
 802c0c6:	462c      	mov	r4, r5
 802c0c8:	f101 0518 	add.w	r5, r1, #24
 802c0cc:	920b      	str	r2, [sp, #44]	; 0x2c
 802c0ce:	46b2      	mov	sl, r6
 802c0d0:	9506      	str	r5, [sp, #24]
 802c0d2:	ee77 7ac4 	vsub.f32	s15, s15, s8
 802c0d6:	3a02      	subs	r2, #2
 802c0d8:	ee16 5a90 	vmov	r5, s13
 802c0dc:	46b6      	mov	lr, r6
 802c0de:	4630      	mov	r0, r6
 802c0e0:	0852      	lsrs	r2, r2, #1
 802c0e2:	f84a 5b08 	str.w	r5, [sl], #8
 802c0e6:	f1a0 0604 	sub.w	r6, r0, #4
 802c0ea:	edce 7a01 	vstr	s15, [lr, #4]
 802c0ee:	9208      	str	r2, [sp, #32]
 802c0f0:	f000 8130 	beq.w	802c354 <arm_cfft_radix8by4_f32+0x378>
 802c0f4:	4691      	mov	r9, r2
 802c0f6:	9a03      	ldr	r2, [sp, #12]
 802c0f8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 802c0fc:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 802c100:	3b08      	subs	r3, #8
 802c102:	f102 0510 	add.w	r5, r2, #16
 802c106:	f101 0c20 	add.w	ip, r1, #32
 802c10a:	f1a4 020c 	sub.w	r2, r4, #12
 802c10e:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 802c112:	4433      	add	r3, r6
 802c114:	3410      	adds	r4, #16
 802c116:	4650      	mov	r0, sl
 802c118:	4659      	mov	r1, fp
 802c11a:	ed55 3a02 	vldr	s7, [r5, #-8]
 802c11e:	ed14 5a02 	vldr	s10, [r4, #-8]
 802c122:	ed91 7a00 	vldr	s14, [r1]
 802c126:	edd0 7a00 	vldr	s15, [r0]
 802c12a:	ed15 4a01 	vldr	s8, [r5, #-4]
 802c12e:	ed54 5a01 	vldr	s11, [r4, #-4]
 802c132:	edd0 6a01 	vldr	s13, [r0, #4]
 802c136:	ed91 6a01 	vldr	s12, [r1, #4]
 802c13a:	ee33 8a85 	vadd.f32	s16, s7, s10
 802c13e:	ee34 0a25 	vadd.f32	s0, s8, s11
 802c142:	ee78 4a07 	vadd.f32	s9, s16, s14
 802c146:	ee74 5a65 	vsub.f32	s11, s8, s11
 802c14a:	ee77 4aa4 	vadd.f32	s9, s15, s9
 802c14e:	ee33 5ac5 	vsub.f32	s10, s7, s10
 802c152:	ed45 4a02 	vstr	s9, [r5, #-8]
 802c156:	edd1 4a01 	vldr	s9, [r1, #4]
 802c15a:	ed90 4a01 	vldr	s8, [r0, #4]
 802c15e:	ee70 4a24 	vadd.f32	s9, s0, s9
 802c162:	ee76 aa05 	vadd.f32	s21, s12, s10
 802c166:	ee74 4a84 	vadd.f32	s9, s9, s8
 802c16a:	ee35 aac7 	vsub.f32	s20, s11, s14
 802c16e:	ed45 4a01 	vstr	s9, [r5, #-4]
 802c172:	edd6 1a00 	vldr	s3, [r6]
 802c176:	edd7 0a00 	vldr	s1, [r7]
 802c17a:	ed92 4a02 	vldr	s8, [r2, #8]
 802c17e:	edd3 3a02 	vldr	s7, [r3, #8]
 802c182:	ed93 2a01 	vldr	s4, [r3, #4]
 802c186:	ed16 1a01 	vldr	s2, [r6, #-4]
 802c18a:	edd2 2a01 	vldr	s5, [r2, #4]
 802c18e:	ed57 9a01 	vldr	s19, [r7, #-4]
 802c192:	ee70 4aa1 	vadd.f32	s9, s1, s3
 802c196:	ee39 3a81 	vadd.f32	s6, s19, s2
 802c19a:	ee74 8a84 	vadd.f32	s17, s9, s8
 802c19e:	ee70 1ae1 	vsub.f32	s3, s1, s3
 802c1a2:	ee73 8aa8 	vadd.f32	s17, s7, s17
 802c1a6:	ee7a aae6 	vsub.f32	s21, s21, s13
 802c1aa:	ee18 aa90 	vmov	sl, s17
 802c1ae:	f847 a908 	str.w	sl, [r7], #-8
 802c1b2:	edd2 8a01 	vldr	s17, [r2, #4]
 802c1b6:	ed93 9a01 	vldr	s18, [r3, #4]
 802c1ba:	ee73 8a28 	vadd.f32	s17, s6, s17
 802c1be:	ee3a aa27 	vadd.f32	s20, s20, s15
 802c1c2:	ee78 8a89 	vadd.f32	s17, s17, s18
 802c1c6:	ee74 0a63 	vsub.f32	s1, s8, s7
 802c1ca:	edc7 8a01 	vstr	s17, [r7, #4]
 802c1ce:	ed18 ba02 	vldr	s22, [r8, #-8]
 802c1d2:	ed58 8a01 	vldr	s17, [r8, #-4]
 802c1d6:	ee39 1ac1 	vsub.f32	s2, s19, s2
 802c1da:	ee6a ba28 	vmul.f32	s23, s20, s17
 802c1de:	ee2a ca8b 	vmul.f32	s24, s21, s22
 802c1e2:	ee71 9ae2 	vsub.f32	s19, s3, s5
 802c1e6:	ee30 9a81 	vadd.f32	s18, s1, s2
 802c1ea:	ee79 9a82 	vadd.f32	s19, s19, s4
 802c1ee:	ee3c ca2b 	vadd.f32	s24, s24, s23
 802c1f2:	ee6a aaa8 	vmul.f32	s21, s21, s17
 802c1f6:	ee69 baa8 	vmul.f32	s23, s19, s17
 802c1fa:	ee2a aa0b 	vmul.f32	s20, s20, s22
 802c1fe:	ee69 9a8b 	vmul.f32	s19, s19, s22
 802c202:	ee69 8a28 	vmul.f32	s17, s18, s17
 802c206:	ee29 ba0b 	vmul.f32	s22, s18, s22
 802c20a:	ee1c aa10 	vmov	sl, s24
 802c20e:	ee78 8aa9 	vadd.f32	s17, s17, s19
 802c212:	f841 ab08 	str.w	sl, [r1], #8
 802c216:	ee3a aa6a 	vsub.f32	s20, s20, s21
 802c21a:	ee3b bacb 	vsub.f32	s22, s23, s22
 802c21e:	ee34 4ac4 	vsub.f32	s8, s9, s8
 802c222:	ee33 3a62 	vsub.f32	s6, s6, s5
 802c226:	ed01 aa01 	vstr	s20, [r1, #-4]
 802c22a:	edc2 8a01 	vstr	s17, [r2, #4]
 802c22e:	ed82 ba02 	vstr	s22, [r2, #8]
 802c232:	ed5c 4a04 	vldr	s9, [ip, #-16]
 802c236:	ee74 3a63 	vsub.f32	s7, s8, s7
 802c23a:	ee38 8a47 	vsub.f32	s16, s16, s14
 802c23e:	ed1c 4a03 	vldr	s8, [ip, #-12]
 802c242:	ee30 0a46 	vsub.f32	s0, s0, s12
 802c246:	ee33 3a42 	vsub.f32	s6, s6, s4
 802c24a:	ee38 8a67 	vsub.f32	s16, s16, s15
 802c24e:	ee30 0a66 	vsub.f32	s0, s0, s13
 802c252:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 802c256:	ee63 8a04 	vmul.f32	s17, s6, s8
 802c25a:	ee28 aa24 	vmul.f32	s20, s16, s9
 802c25e:	ee60 9a04 	vmul.f32	s19, s0, s8
 802c262:	ee28 8a04 	vmul.f32	s16, s16, s8
 802c266:	ee20 0a24 	vmul.f32	s0, s0, s9
 802c26a:	ee63 3a84 	vmul.f32	s7, s7, s8
 802c26e:	ee39 4a68 	vsub.f32	s8, s18, s17
 802c272:	ee7a 9a29 	vadd.f32	s19, s20, s19
 802c276:	ee14 aa10 	vmov	sl, s8
 802c27a:	ee30 0a48 	vsub.f32	s0, s0, s16
 802c27e:	ee63 4a24 	vmul.f32	s9, s6, s9
 802c282:	ed44 9a02 	vstr	s19, [r4, #-8]
 802c286:	ee73 3ae4 	vsub.f32	s7, s7, s9
 802c28a:	ed04 0a01 	vstr	s0, [r4, #-4]
 802c28e:	f846 a908 	str.w	sl, [r6], #-8
 802c292:	ee35 6a46 	vsub.f32	s12, s10, s12
 802c296:	ee35 7a87 	vadd.f32	s14, s11, s14
 802c29a:	edc6 3a01 	vstr	s7, [r6, #4]
 802c29e:	ee76 6a86 	vadd.f32	s13, s13, s12
 802c2a2:	ee77 7a67 	vsub.f32	s15, s14, s15
 802c2a6:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 802c2aa:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 802c2ae:	ee67 5a86 	vmul.f32	s11, s15, s12
 802c2b2:	ee26 5a87 	vmul.f32	s10, s13, s14
 802c2b6:	ee72 2a62 	vsub.f32	s5, s4, s5
 802c2ba:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802c2be:	ee72 2ae1 	vsub.f32	s5, s5, s3
 802c2c2:	ee75 5a25 	vadd.f32	s11, s10, s11
 802c2c6:	ee62 0a86 	vmul.f32	s1, s5, s12
 802c2ca:	ee66 6a86 	vmul.f32	s13, s13, s12
 802c2ce:	ee67 7a87 	vmul.f32	s15, s15, s14
 802c2d2:	ee21 6a06 	vmul.f32	s12, s2, s12
 802c2d6:	ee62 2a87 	vmul.f32	s5, s5, s14
 802c2da:	ee21 1a07 	vmul.f32	s2, s2, s14
 802c2de:	ee15 aa90 	vmov	sl, s11
 802c2e2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802c2e6:	f840 ab08 	str.w	sl, [r0], #8
 802c2ea:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802c2ee:	ee76 2a22 	vadd.f32	s5, s12, s5
 802c2f2:	f1b9 0901 	subs.w	r9, r9, #1
 802c2f6:	ed40 7a01 	vstr	s15, [r0, #-4]
 802c2fa:	f105 0508 	add.w	r5, r5, #8
 802c2fe:	ed83 1a02 	vstr	s2, [r3, #8]
 802c302:	edc3 2a01 	vstr	s5, [r3, #4]
 802c306:	f108 0808 	add.w	r8, r8, #8
 802c30a:	f1a2 0208 	sub.w	r2, r2, #8
 802c30e:	f10c 0c10 	add.w	ip, ip, #16
 802c312:	f104 0408 	add.w	r4, r4, #8
 802c316:	f10e 0e18 	add.w	lr, lr, #24
 802c31a:	f1a3 0308 	sub.w	r3, r3, #8
 802c31e:	f47f aefc 	bne.w	802c11a <arm_cfft_radix8by4_f32+0x13e>
 802c322:	9908      	ldr	r1, [sp, #32]
 802c324:	9802      	ldr	r0, [sp, #8]
 802c326:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 802c32a:	00cb      	lsls	r3, r1, #3
 802c32c:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 802c330:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 802c334:	9102      	str	r1, [sp, #8]
 802c336:	9904      	ldr	r1, [sp, #16]
 802c338:	4419      	add	r1, r3
 802c33a:	9104      	str	r1, [sp, #16]
 802c33c:	9905      	ldr	r1, [sp, #20]
 802c33e:	4419      	add	r1, r3
 802c340:	9105      	str	r1, [sp, #20]
 802c342:	9907      	ldr	r1, [sp, #28]
 802c344:	449b      	add	fp, r3
 802c346:	4419      	add	r1, r3
 802c348:	449a      	add	sl, r3
 802c34a:	9b06      	ldr	r3, [sp, #24]
 802c34c:	9107      	str	r1, [sp, #28]
 802c34e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802c352:	9306      	str	r3, [sp, #24]
 802c354:	9a04      	ldr	r2, [sp, #16]
 802c356:	9807      	ldr	r0, [sp, #28]
 802c358:	edd2 3a00 	vldr	s7, [r2]
 802c35c:	ed90 4a00 	vldr	s8, [r0]
 802c360:	eddb 7a00 	vldr	s15, [fp]
 802c364:	ed9a 3a00 	vldr	s6, [sl]
 802c368:	edd2 4a01 	vldr	s9, [r2, #4]
 802c36c:	ed90 7a01 	vldr	s14, [r0, #4]
 802c370:	ed9b 2a01 	vldr	s4, [fp, #4]
 802c374:	edda 5a01 	vldr	s11, [sl, #4]
 802c378:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 802c37c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802c37e:	ee73 6a84 	vadd.f32	s13, s7, s8
 802c382:	ee34 6a87 	vadd.f32	s12, s9, s14
 802c386:	ee36 5aa7 	vadd.f32	s10, s13, s15
 802c38a:	ee34 7ac7 	vsub.f32	s14, s9, s14
 802c38e:	ee33 5a05 	vadd.f32	s10, s6, s10
 802c392:	ee33 4ac4 	vsub.f32	s8, s7, s8
 802c396:	ed82 5a00 	vstr	s10, [r2]
 802c39a:	ed9b 5a01 	vldr	s10, [fp, #4]
 802c39e:	edda 4a01 	vldr	s9, [sl, #4]
 802c3a2:	ee36 5a05 	vadd.f32	s10, s12, s10
 802c3a6:	ee72 3a04 	vadd.f32	s7, s4, s8
 802c3aa:	ee35 5a24 	vadd.f32	s10, s10, s9
 802c3ae:	ee77 4a67 	vsub.f32	s9, s14, s15
 802c3b2:	ed82 5a01 	vstr	s10, [r2, #4]
 802c3b6:	9a05      	ldr	r2, [sp, #20]
 802c3b8:	ee34 5a83 	vadd.f32	s10, s9, s6
 802c3bc:	edd2 1a00 	vldr	s3, [r2]
 802c3c0:	edd2 2a01 	vldr	s5, [r2, #4]
 802c3c4:	9a02      	ldr	r2, [sp, #8]
 802c3c6:	ee73 3ae5 	vsub.f32	s7, s7, s11
 802c3ca:	ee36 6a42 	vsub.f32	s12, s12, s4
 802c3ce:	ee63 4aa1 	vmul.f32	s9, s7, s3
 802c3d2:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802c3d6:	ee65 2a22 	vmul.f32	s5, s10, s5
 802c3da:	ee25 5a21 	vmul.f32	s10, s10, s3
 802c3de:	ee74 2aa2 	vadd.f32	s5, s9, s5
 802c3e2:	ee35 5a63 	vsub.f32	s10, s10, s7
 802c3e6:	ee76 6ae7 	vsub.f32	s13, s13, s15
 802c3ea:	edcb 2a00 	vstr	s5, [fp]
 802c3ee:	ed8b 5a01 	vstr	s10, [fp, #4]
 802c3f2:	edd2 3a01 	vldr	s7, [r2, #4]
 802c3f6:	ed92 5a00 	vldr	s10, [r2]
 802c3fa:	9a06      	ldr	r2, [sp, #24]
 802c3fc:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802c400:	ee36 6a65 	vsub.f32	s12, s12, s11
 802c404:	ee66 4a85 	vmul.f32	s9, s13, s10
 802c408:	ee26 5a05 	vmul.f32	s10, s12, s10
 802c40c:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802c410:	ee26 6a23 	vmul.f32	s12, s12, s7
 802c414:	ee75 6a66 	vsub.f32	s13, s10, s13
 802c418:	ee34 6a86 	vadd.f32	s12, s9, s12
 802c41c:	ee34 4a42 	vsub.f32	s8, s8, s4
 802c420:	ee37 7a27 	vadd.f32	s14, s14, s15
 802c424:	edc0 6a01 	vstr	s13, [r0, #4]
 802c428:	ed80 6a00 	vstr	s12, [r0]
 802c42c:	ed92 6a01 	vldr	s12, [r2, #4]
 802c430:	9803      	ldr	r0, [sp, #12]
 802c432:	ee77 7a43 	vsub.f32	s15, s14, s6
 802c436:	ee75 5a84 	vadd.f32	s11, s11, s8
 802c43a:	ed92 7a00 	vldr	s14, [r2]
 802c43e:	ee65 6a87 	vmul.f32	s13, s11, s14
 802c442:	ee27 7a87 	vmul.f32	s14, s15, s14
 802c446:	ee65 5a86 	vmul.f32	s11, s11, s12
 802c44a:	ee67 7a86 	vmul.f32	s15, s15, s12
 802c44e:	ee77 5a65 	vsub.f32	s11, s14, s11
 802c452:	ee76 7aa7 	vadd.f32	s15, s13, s15
 802c456:	edca 5a01 	vstr	s11, [sl, #4]
 802c45a:	edca 7a00 	vstr	s15, [sl]
 802c45e:	6872      	ldr	r2, [r6, #4]
 802c460:	4621      	mov	r1, r4
 802c462:	2304      	movs	r3, #4
 802c464:	f000 f97a 	bl	802c75c <arm_radix8_butterfly_f32>
 802c468:	9809      	ldr	r0, [sp, #36]	; 0x24
 802c46a:	6872      	ldr	r2, [r6, #4]
 802c46c:	4621      	mov	r1, r4
 802c46e:	2304      	movs	r3, #4
 802c470:	f000 f974 	bl	802c75c <arm_radix8_butterfly_f32>
 802c474:	980a      	ldr	r0, [sp, #40]	; 0x28
 802c476:	6872      	ldr	r2, [r6, #4]
 802c478:	4621      	mov	r1, r4
 802c47a:	2304      	movs	r3, #4
 802c47c:	f000 f96e 	bl	802c75c <arm_radix8_butterfly_f32>
 802c480:	9801      	ldr	r0, [sp, #4]
 802c482:	6872      	ldr	r2, [r6, #4]
 802c484:	4621      	mov	r1, r4
 802c486:	2304      	movs	r3, #4
 802c488:	b00f      	add	sp, #60	; 0x3c
 802c48a:	ecbd 8b0a 	vpop	{d8-d12}
 802c48e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c492:	f000 b963 	b.w	802c75c <arm_radix8_butterfly_f32>
 802c496:	bf00      	nop

0802c498 <arm_cfft_f32>:
 802c498:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c49c:	2a01      	cmp	r2, #1
 802c49e:	4606      	mov	r6, r0
 802c4a0:	4617      	mov	r7, r2
 802c4a2:	460c      	mov	r4, r1
 802c4a4:	4698      	mov	r8, r3
 802c4a6:	8805      	ldrh	r5, [r0, #0]
 802c4a8:	d054      	beq.n	802c554 <arm_cfft_f32+0xbc>
 802c4aa:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802c4ae:	d04c      	beq.n	802c54a <arm_cfft_f32+0xb2>
 802c4b0:	d916      	bls.n	802c4e0 <arm_cfft_f32+0x48>
 802c4b2:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 802c4b6:	d01a      	beq.n	802c4ee <arm_cfft_f32+0x56>
 802c4b8:	d95c      	bls.n	802c574 <arm_cfft_f32+0xdc>
 802c4ba:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 802c4be:	d044      	beq.n	802c54a <arm_cfft_f32+0xb2>
 802c4c0:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 802c4c4:	d105      	bne.n	802c4d2 <arm_cfft_f32+0x3a>
 802c4c6:	4620      	mov	r0, r4
 802c4c8:	4629      	mov	r1, r5
 802c4ca:	6872      	ldr	r2, [r6, #4]
 802c4cc:	2301      	movs	r3, #1
 802c4ce:	f000 f945 	bl	802c75c <arm_radix8_butterfly_f32>
 802c4d2:	f1b8 0f00 	cmp.w	r8, #0
 802c4d6:	d111      	bne.n	802c4fc <arm_cfft_f32+0x64>
 802c4d8:	2f01      	cmp	r7, #1
 802c4da:	d016      	beq.n	802c50a <arm_cfft_f32+0x72>
 802c4dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c4e0:	2d20      	cmp	r5, #32
 802c4e2:	d032      	beq.n	802c54a <arm_cfft_f32+0xb2>
 802c4e4:	d94a      	bls.n	802c57c <arm_cfft_f32+0xe4>
 802c4e6:	2d40      	cmp	r5, #64	; 0x40
 802c4e8:	d0ed      	beq.n	802c4c6 <arm_cfft_f32+0x2e>
 802c4ea:	2d80      	cmp	r5, #128	; 0x80
 802c4ec:	d1f1      	bne.n	802c4d2 <arm_cfft_f32+0x3a>
 802c4ee:	4630      	mov	r0, r6
 802c4f0:	4621      	mov	r1, r4
 802c4f2:	f7ff fca1 	bl	802be38 <arm_cfft_radix8by2_f32>
 802c4f6:	f1b8 0f00 	cmp.w	r8, #0
 802c4fa:	d0ed      	beq.n	802c4d8 <arm_cfft_f32+0x40>
 802c4fc:	4620      	mov	r0, r4
 802c4fe:	89b1      	ldrh	r1, [r6, #12]
 802c500:	68b2      	ldr	r2, [r6, #8]
 802c502:	f7d3 fe75 	bl	80001f0 <arm_bitreversal_32>
 802c506:	2f01      	cmp	r7, #1
 802c508:	d1e8      	bne.n	802c4dc <arm_cfft_f32+0x44>
 802c50a:	ee07 5a90 	vmov	s15, r5
 802c50e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 802c512:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802c516:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 802c51a:	2d00      	cmp	r5, #0
 802c51c:	d0de      	beq.n	802c4dc <arm_cfft_f32+0x44>
 802c51e:	f104 0108 	add.w	r1, r4, #8
 802c522:	2300      	movs	r3, #0
 802c524:	3301      	adds	r3, #1
 802c526:	429d      	cmp	r5, r3
 802c528:	f101 0108 	add.w	r1, r1, #8
 802c52c:	ed11 7a04 	vldr	s14, [r1, #-16]
 802c530:	ed51 7a03 	vldr	s15, [r1, #-12]
 802c534:	ee27 7a26 	vmul.f32	s14, s14, s13
 802c538:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802c53c:	ed01 7a04 	vstr	s14, [r1, #-16]
 802c540:	ed41 7a03 	vstr	s15, [r1, #-12]
 802c544:	d1ee      	bne.n	802c524 <arm_cfft_f32+0x8c>
 802c546:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c54a:	4630      	mov	r0, r6
 802c54c:	4621      	mov	r1, r4
 802c54e:	f7ff fd45 	bl	802bfdc <arm_cfft_radix8by4_f32>
 802c552:	e7be      	b.n	802c4d2 <arm_cfft_f32+0x3a>
 802c554:	b1ad      	cbz	r5, 802c582 <arm_cfft_f32+0xea>
 802c556:	f101 030c 	add.w	r3, r1, #12
 802c55a:	2200      	movs	r2, #0
 802c55c:	ed53 7a02 	vldr	s15, [r3, #-8]
 802c560:	3201      	adds	r2, #1
 802c562:	eef1 7a67 	vneg.f32	s15, s15
 802c566:	4295      	cmp	r5, r2
 802c568:	ed43 7a02 	vstr	s15, [r3, #-8]
 802c56c:	f103 0308 	add.w	r3, r3, #8
 802c570:	d1f4      	bne.n	802c55c <arm_cfft_f32+0xc4>
 802c572:	e79a      	b.n	802c4aa <arm_cfft_f32+0x12>
 802c574:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 802c578:	d0a5      	beq.n	802c4c6 <arm_cfft_f32+0x2e>
 802c57a:	e7aa      	b.n	802c4d2 <arm_cfft_f32+0x3a>
 802c57c:	2d10      	cmp	r5, #16
 802c57e:	d0b6      	beq.n	802c4ee <arm_cfft_f32+0x56>
 802c580:	e7a7      	b.n	802c4d2 <arm_cfft_f32+0x3a>
 802c582:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802c586:	d894      	bhi.n	802c4b2 <arm_cfft_f32+0x1a>
 802c588:	e7aa      	b.n	802c4e0 <arm_cfft_f32+0x48>
 802c58a:	bf00      	nop

0802c58c <arm_cmplx_mag_f32>:
 802c58c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c590:	ea5f 0892 	movs.w	r8, r2, lsr #2
 802c594:	b084      	sub	sp, #16
 802c596:	d07f      	beq.n	802c698 <arm_cmplx_mag_f32+0x10c>
 802c598:	2700      	movs	r7, #0
 802c59a:	f100 0420 	add.w	r4, r0, #32
 802c59e:	f101 0510 	add.w	r5, r1, #16
 802c5a2:	4646      	mov	r6, r8
 802c5a4:	e05a      	b.n	802c65c <arm_cmplx_mag_f32+0xd0>
 802c5a6:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c5aa:	eeb4 0a40 	vcmp.f32	s0, s0
 802c5ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c5b2:	f040 80a4 	bne.w	802c6fe <arm_cmplx_mag_f32+0x172>
 802c5b6:	ed05 0a04 	vstr	s0, [r5, #-16]
 802c5ba:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 802c5be:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 802c5c2:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c5c6:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c5ca:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c5ce:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c5d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c5d6:	f2c0 808f 	blt.w	802c6f8 <arm_cmplx_mag_f32+0x16c>
 802c5da:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c5de:	eeb4 0a40 	vcmp.f32	s0, s0
 802c5e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c5e6:	f040 80af 	bne.w	802c748 <arm_cmplx_mag_f32+0x1bc>
 802c5ea:	ed05 0a03 	vstr	s0, [r5, #-12]
 802c5ee:	ed54 7a04 	vldr	s15, [r4, #-16]
 802c5f2:	ed14 0a03 	vldr	s0, [r4, #-12]
 802c5f6:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c5fa:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c5fe:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c602:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c606:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c60a:	db72      	blt.n	802c6f2 <arm_cmplx_mag_f32+0x166>
 802c60c:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c610:	eeb4 0a40 	vcmp.f32	s0, s0
 802c614:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c618:	f040 808c 	bne.w	802c734 <arm_cmplx_mag_f32+0x1a8>
 802c61c:	ed05 0a02 	vstr	s0, [r5, #-8]
 802c620:	ed54 7a02 	vldr	s15, [r4, #-8]
 802c624:	ed14 0a01 	vldr	s0, [r4, #-4]
 802c628:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c62c:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c630:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c634:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c638:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c63c:	db20      	blt.n	802c680 <arm_cmplx_mag_f32+0xf4>
 802c63e:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c642:	eeb4 0a40 	vcmp.f32	s0, s0
 802c646:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c64a:	d169      	bne.n	802c720 <arm_cmplx_mag_f32+0x194>
 802c64c:	3e01      	subs	r6, #1
 802c64e:	ed05 0a01 	vstr	s0, [r5, #-4]
 802c652:	f104 0420 	add.w	r4, r4, #32
 802c656:	f105 0510 	add.w	r5, r5, #16
 802c65a:	d019      	beq.n	802c690 <arm_cmplx_mag_f32+0x104>
 802c65c:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 802c660:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 802c664:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c668:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c66c:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c670:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c674:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c678:	da95      	bge.n	802c5a6 <arm_cmplx_mag_f32+0x1a>
 802c67a:	f845 7c10 	str.w	r7, [r5, #-16]
 802c67e:	e79c      	b.n	802c5ba <arm_cmplx_mag_f32+0x2e>
 802c680:	3e01      	subs	r6, #1
 802c682:	f845 7c04 	str.w	r7, [r5, #-4]
 802c686:	f104 0420 	add.w	r4, r4, #32
 802c68a:	f105 0510 	add.w	r5, r5, #16
 802c68e:	d1e5      	bne.n	802c65c <arm_cmplx_mag_f32+0xd0>
 802c690:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 802c694:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 802c698:	f012 0503 	ands.w	r5, r2, #3
 802c69c:	d026      	beq.n	802c6ec <arm_cmplx_mag_f32+0x160>
 802c69e:	2600      	movs	r6, #0
 802c6a0:	f100 0408 	add.w	r4, r0, #8
 802c6a4:	e00c      	b.n	802c6c0 <arm_cmplx_mag_f32+0x134>
 802c6a6:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c6aa:	eeb4 0a40 	vcmp.f32	s0, s0
 802c6ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c6b2:	d12e      	bne.n	802c712 <arm_cmplx_mag_f32+0x186>
 802c6b4:	3d01      	subs	r5, #1
 802c6b6:	ed01 0a01 	vstr	s0, [r1, #-4]
 802c6ba:	f104 0408 	add.w	r4, r4, #8
 802c6be:	d015      	beq.n	802c6ec <arm_cmplx_mag_f32+0x160>
 802c6c0:	ed54 7a02 	vldr	s15, [r4, #-8]
 802c6c4:	ed14 0a01 	vldr	s0, [r4, #-4]
 802c6c8:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c6cc:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c6d0:	3104      	adds	r1, #4
 802c6d2:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c6d6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c6da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c6de:	dae2      	bge.n	802c6a6 <arm_cmplx_mag_f32+0x11a>
 802c6e0:	3d01      	subs	r5, #1
 802c6e2:	f841 6c04 	str.w	r6, [r1, #-4]
 802c6e6:	f104 0408 	add.w	r4, r4, #8
 802c6ea:	d1e9      	bne.n	802c6c0 <arm_cmplx_mag_f32+0x134>
 802c6ec:	b004      	add	sp, #16
 802c6ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c6f2:	f845 7c08 	str.w	r7, [r5, #-8]
 802c6f6:	e793      	b.n	802c620 <arm_cmplx_mag_f32+0x94>
 802c6f8:	f845 7c0c 	str.w	r7, [r5, #-12]
 802c6fc:	e777      	b.n	802c5ee <arm_cmplx_mag_f32+0x62>
 802c6fe:	eeb0 0a67 	vmov.f32	s0, s15
 802c702:	9203      	str	r2, [sp, #12]
 802c704:	9102      	str	r1, [sp, #8]
 802c706:	9001      	str	r0, [sp, #4]
 802c708:	f000 fb38 	bl	802cd7c <sqrtf>
 802c70c:	a801      	add	r0, sp, #4
 802c70e:	c807      	ldmia	r0, {r0, r1, r2}
 802c710:	e751      	b.n	802c5b6 <arm_cmplx_mag_f32+0x2a>
 802c712:	eeb0 0a67 	vmov.f32	s0, s15
 802c716:	9101      	str	r1, [sp, #4]
 802c718:	f000 fb30 	bl	802cd7c <sqrtf>
 802c71c:	9901      	ldr	r1, [sp, #4]
 802c71e:	e7c9      	b.n	802c6b4 <arm_cmplx_mag_f32+0x128>
 802c720:	eeb0 0a67 	vmov.f32	s0, s15
 802c724:	9203      	str	r2, [sp, #12]
 802c726:	9102      	str	r1, [sp, #8]
 802c728:	9001      	str	r0, [sp, #4]
 802c72a:	f000 fb27 	bl	802cd7c <sqrtf>
 802c72e:	a801      	add	r0, sp, #4
 802c730:	c807      	ldmia	r0, {r0, r1, r2}
 802c732:	e78b      	b.n	802c64c <arm_cmplx_mag_f32+0xc0>
 802c734:	eeb0 0a67 	vmov.f32	s0, s15
 802c738:	9203      	str	r2, [sp, #12]
 802c73a:	9102      	str	r1, [sp, #8]
 802c73c:	9001      	str	r0, [sp, #4]
 802c73e:	f000 fb1d 	bl	802cd7c <sqrtf>
 802c742:	a801      	add	r0, sp, #4
 802c744:	c807      	ldmia	r0, {r0, r1, r2}
 802c746:	e769      	b.n	802c61c <arm_cmplx_mag_f32+0x90>
 802c748:	eeb0 0a67 	vmov.f32	s0, s15
 802c74c:	9203      	str	r2, [sp, #12]
 802c74e:	9102      	str	r1, [sp, #8]
 802c750:	9001      	str	r0, [sp, #4]
 802c752:	f000 fb13 	bl	802cd7c <sqrtf>
 802c756:	a801      	add	r0, sp, #4
 802c758:	c807      	ldmia	r0, {r0, r1, r2}
 802c75a:	e746      	b.n	802c5ea <arm_cmplx_mag_f32+0x5e>

0802c75c <arm_radix8_butterfly_f32>:
 802c75c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c760:	ed2d 8b10 	vpush	{d8-d15}
 802c764:	b09d      	sub	sp, #116	; 0x74
 802c766:	461c      	mov	r4, r3
 802c768:	ed9f bac8 	vldr	s22, [pc, #800]	; 802ca8c <arm_radix8_butterfly_f32+0x330>
 802c76c:	921a      	str	r2, [sp, #104]	; 0x68
 802c76e:	1d03      	adds	r3, r0, #4
 802c770:	4682      	mov	sl, r0
 802c772:	4689      	mov	r9, r1
 802c774:	468b      	mov	fp, r1
 802c776:	931b      	str	r3, [sp, #108]	; 0x6c
 802c778:	9400      	str	r4, [sp, #0]
 802c77a:	469e      	mov	lr, r3
 802c77c:	ea4f 03db 	mov.w	r3, fp, lsr #3
 802c780:	005a      	lsls	r2, r3, #1
 802c782:	18d6      	adds	r6, r2, r3
 802c784:	18f5      	adds	r5, r6, r3
 802c786:	9203      	str	r2, [sp, #12]
 802c788:	195a      	adds	r2, r3, r5
 802c78a:	18d0      	adds	r0, r2, r3
 802c78c:	00df      	lsls	r7, r3, #3
 802c78e:	1819      	adds	r1, r3, r0
 802c790:	463c      	mov	r4, r7
 802c792:	9701      	str	r7, [sp, #4]
 802c794:	4457      	add	r7, sl
 802c796:	930c      	str	r3, [sp, #48]	; 0x30
 802c798:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 802c79c:	011b      	lsls	r3, r3, #4
 802c79e:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 802c7a2:	eb07 0c04 	add.w	ip, r7, r4
 802c7a6:	9c00      	ldr	r4, [sp, #0]
 802c7a8:	9302      	str	r3, [sp, #8]
 802c7aa:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 802c7ae:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 802c7b2:	3204      	adds	r2, #4
 802c7b4:	3104      	adds	r1, #4
 802c7b6:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 802c7ba:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 802c7be:	f04f 0800 	mov.w	r8, #0
 802c7c2:	eddc 7a00 	vldr	s15, [ip]
 802c7c6:	edd7 6a00 	vldr	s13, [r7]
 802c7ca:	edd6 3a00 	vldr	s7, [r6]
 802c7ce:	ed5e aa01 	vldr	s21, [lr, #-4]
 802c7d2:	edd5 4a00 	vldr	s9, [r5]
 802c7d6:	ed90 2a00 	vldr	s4, [r0]
 802c7da:	ed12 7a01 	vldr	s14, [r2, #-4]
 802c7de:	ed51 0a01 	vldr	s1, [r1, #-4]
 802c7e2:	ee77 8a82 	vadd.f32	s17, s15, s4
 802c7e6:	ee33 4aa0 	vadd.f32	s8, s7, s1
 802c7ea:	ee76 1a87 	vadd.f32	s3, s13, s14
 802c7ee:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 802c7f2:	ee31 6a84 	vadd.f32	s12, s3, s8
 802c7f6:	ee33 5a28 	vadd.f32	s10, s6, s17
 802c7fa:	ee36 7ac7 	vsub.f32	s14, s13, s14
 802c7fe:	ee75 6a06 	vadd.f32	s13, s10, s12
 802c802:	ee35 5a46 	vsub.f32	s10, s10, s12
 802c806:	ed4e 6a01 	vstr	s13, [lr, #-4]
 802c80a:	ed85 5a00 	vstr	s10, [r5]
 802c80e:	ed96 1a01 	vldr	s2, [r6, #4]
 802c812:	edd7 5a01 	vldr	s11, [r7, #4]
 802c816:	ed92 aa00 	vldr	s20, [r2]
 802c81a:	ed91 6a00 	vldr	s12, [r1]
 802c81e:	ed9e 9a00 	vldr	s18, [lr]
 802c822:	ed95 5a01 	vldr	s10, [r5, #4]
 802c826:	eddc 6a01 	vldr	s13, [ip, #4]
 802c82a:	edd0 9a01 	vldr	s19, [r0, #4]
 802c82e:	ee73 0ae0 	vsub.f32	s1, s7, s1
 802c832:	ee71 2a46 	vsub.f32	s5, s2, s12
 802c836:	ee75 3aca 	vsub.f32	s7, s11, s20
 802c83a:	ee37 0a60 	vsub.f32	s0, s14, s1
 802c83e:	ee33 8aa2 	vadd.f32	s16, s7, s5
 802c842:	ee37 7a20 	vadd.f32	s14, s14, s1
 802c846:	ee73 2ae2 	vsub.f32	s5, s7, s5
 802c84a:	ee37 2ac2 	vsub.f32	s4, s15, s4
 802c84e:	ee79 3a05 	vadd.f32	s7, s18, s10
 802c852:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802c856:	ee39 5a45 	vsub.f32	s10, s18, s10
 802c85a:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 802c85e:	ee36 9aa9 	vadd.f32	s18, s13, s19
 802c862:	ee75 5a8a 	vadd.f32	s11, s11, s20
 802c866:	ee31 6a06 	vadd.f32	s12, s2, s12
 802c86a:	ee76 6ae9 	vsub.f32	s13, s13, s19
 802c86e:	ee28 8a0b 	vmul.f32	s16, s16, s22
 802c872:	ee62 2a8b 	vmul.f32	s5, s5, s22
 802c876:	ee67 7a0b 	vmul.f32	s15, s14, s22
 802c87a:	ee33 3a68 	vsub.f32	s6, s6, s17
 802c87e:	ee36 0a88 	vadd.f32	s0, s13, s16
 802c882:	ee75 8a86 	vadd.f32	s17, s11, s12
 802c886:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802c88a:	ee71 1ac4 	vsub.f32	s3, s3, s8
 802c88e:	ee75 6a62 	vsub.f32	s13, s10, s5
 802c892:	ee33 4ac9 	vsub.f32	s8, s7, s18
 802c896:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802c89a:	ee33 1a89 	vadd.f32	s2, s7, s18
 802c89e:	ee74 5ae0 	vsub.f32	s11, s9, s1
 802c8a2:	ee74 3aa0 	vadd.f32	s7, s9, s1
 802c8a6:	ee75 4a22 	vadd.f32	s9, s10, s5
 802c8aa:	ee32 5a27 	vadd.f32	s10, s4, s15
 802c8ae:	ee72 7a67 	vsub.f32	s15, s4, s15
 802c8b2:	ee33 8a06 	vadd.f32	s16, s6, s12
 802c8b6:	ee75 2a87 	vadd.f32	s5, s11, s14
 802c8ba:	ee31 9a28 	vadd.f32	s18, s2, s17
 802c8be:	ee33 6a46 	vsub.f32	s12, s6, s12
 802c8c2:	ee74 0a61 	vsub.f32	s1, s8, s3
 802c8c6:	ee33 2a80 	vadd.f32	s4, s7, s0
 802c8ca:	ee35 7ac7 	vsub.f32	s14, s11, s14
 802c8ce:	ee34 3ac5 	vsub.f32	s6, s9, s10
 802c8d2:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802c8d6:	ee31 1a68 	vsub.f32	s2, s2, s17
 802c8da:	ee34 4a21 	vadd.f32	s8, s8, s3
 802c8de:	ee73 3ac0 	vsub.f32	s7, s7, s0
 802c8e2:	ee74 4a85 	vadd.f32	s9, s9, s10
 802c8e6:	ee76 6aa7 	vadd.f32	s13, s13, s15
 802c8ea:	44d8      	add	r8, fp
 802c8ec:	45c1      	cmp	r9, r8
 802c8ee:	ed8e 9a00 	vstr	s18, [lr]
 802c8f2:	ed85 1a01 	vstr	s2, [r5, #4]
 802c8f6:	449e      	add	lr, r3
 802c8f8:	ed8c 8a00 	vstr	s16, [ip]
 802c8fc:	441d      	add	r5, r3
 802c8fe:	ed80 6a00 	vstr	s12, [r0]
 802c902:	edcc 0a01 	vstr	s1, [ip, #4]
 802c906:	ed80 4a01 	vstr	s8, [r0, #4]
 802c90a:	449c      	add	ip, r3
 802c90c:	ed87 2a00 	vstr	s4, [r7]
 802c910:	4418      	add	r0, r3
 802c912:	ed41 3a01 	vstr	s7, [r1, #-4]
 802c916:	ed42 2a01 	vstr	s5, [r2, #-4]
 802c91a:	ed86 7a00 	vstr	s14, [r6]
 802c91e:	ed87 3a01 	vstr	s6, [r7, #4]
 802c922:	edc1 4a00 	vstr	s9, [r1]
 802c926:	441f      	add	r7, r3
 802c928:	edc2 5a00 	vstr	s11, [r2]
 802c92c:	4419      	add	r1, r3
 802c92e:	edc6 6a01 	vstr	s13, [r6, #4]
 802c932:	441a      	add	r2, r3
 802c934:	441e      	add	r6, r3
 802c936:	f63f af44 	bhi.w	802c7c2 <arm_radix8_butterfly_f32+0x66>
 802c93a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802c93c:	2907      	cmp	r1, #7
 802c93e:	4620      	mov	r0, r4
 802c940:	f240 81e9 	bls.w	802cd16 <arm_radix8_butterfly_f32+0x5ba>
 802c944:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 802c948:	193e      	adds	r6, r7, r4
 802c94a:	1935      	adds	r5, r6, r4
 802c94c:	9c03      	ldr	r4, [sp, #12]
 802c94e:	9000      	str	r0, [sp, #0]
 802c950:	4622      	mov	r2, r4
 802c952:	3201      	adds	r2, #1
 802c954:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 802c958:	9900      	ldr	r1, [sp, #0]
 802c95a:	1828      	adds	r0, r5, r0
 802c95c:	eb00 0e01 	add.w	lr, r0, r1
 802c960:	990c      	ldr	r1, [sp, #48]	; 0x30
 802c962:	440a      	add	r2, r1
 802c964:	eb04 0c01 	add.w	ip, r4, r1
 802c968:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 802c96c:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 802c970:	9a00      	ldr	r2, [sp, #0]
 802c972:	940f      	str	r4, [sp, #60]	; 0x3c
 802c974:	00ed      	lsls	r5, r5, #3
 802c976:	9511      	str	r5, [sp, #68]	; 0x44
 802c978:	00d5      	lsls	r5, r2, #3
 802c97a:	950d      	str	r5, [sp, #52]	; 0x34
 802c97c:	9d01      	ldr	r5, [sp, #4]
 802c97e:	3508      	adds	r5, #8
 802c980:	9516      	str	r5, [sp, #88]	; 0x58
 802c982:	9d02      	ldr	r5, [sp, #8]
 802c984:	3508      	adds	r5, #8
 802c986:	0114      	lsls	r4, r2, #4
 802c988:	9517      	str	r5, [sp, #92]	; 0x5c
 802c98a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802c98c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802c98e:	940e      	str	r4, [sp, #56]	; 0x38
 802c990:	00c0      	lsls	r0, r0, #3
 802c992:	9010      	str	r0, [sp, #64]	; 0x40
 802c994:	18aa      	adds	r2, r5, r2
 802c996:	9207      	str	r2, [sp, #28]
 802c998:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802c99a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802c99c:	18aa      	adds	r2, r5, r2
 802c99e:	9208      	str	r2, [sp, #32]
 802c9a0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802c9a2:	18aa      	adds	r2, r5, r2
 802c9a4:	9209      	str	r2, [sp, #36]	; 0x24
 802c9a6:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802c9aa:	f10e 0204 	add.w	r2, lr, #4
 802c9ae:	920a      	str	r2, [sp, #40]	; 0x28
 802c9b0:	00c9      	lsls	r1, r1, #3
 802c9b2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802c9b4:	310c      	adds	r1, #12
 802c9b6:	00f6      	lsls	r6, r6, #3
 802c9b8:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 802c9bc:	9114      	str	r1, [sp, #80]	; 0x50
 802c9be:	18a9      	adds	r1, r5, r2
 802c9c0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802c9c2:	9612      	str	r6, [sp, #72]	; 0x48
 802c9c4:	00ff      	lsls	r7, r7, #3
 802c9c6:	19ae      	adds	r6, r5, r6
 802c9c8:	3008      	adds	r0, #8
 802c9ca:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 802c9ce:	9606      	str	r6, [sp, #24]
 802c9d0:	9019      	str	r0, [sp, #100]	; 0x64
 802c9d2:	18aa      	adds	r2, r5, r2
 802c9d4:	0164      	lsls	r4, r4, #5
 802c9d6:	19ee      	adds	r6, r5, r7
 802c9d8:	f10c 000c 	add.w	r0, ip, #12
 802c9dc:	9713      	str	r7, [sp, #76]	; 0x4c
 802c9de:	9604      	str	r6, [sp, #16]
 802c9e0:	9015      	str	r0, [sp, #84]	; 0x54
 802c9e2:	9103      	str	r1, [sp, #12]
 802c9e4:	9205      	str	r2, [sp, #20]
 802c9e6:	f104 0208 	add.w	r2, r4, #8
 802c9ea:	9218      	str	r2, [sp, #96]	; 0x60
 802c9ec:	f04f 0801 	mov.w	r8, #1
 802c9f0:	2200      	movs	r2, #0
 802c9f2:	f102 0108 	add.w	r1, r2, #8
 802c9f6:	460f      	mov	r7, r1
 802c9f8:	910b      	str	r1, [sp, #44]	; 0x2c
 802c9fa:	9918      	ldr	r1, [sp, #96]	; 0x60
 802c9fc:	188e      	adds	r6, r1, r2
 802c9fe:	9916      	ldr	r1, [sp, #88]	; 0x58
 802ca00:	188d      	adds	r5, r1, r2
 802ca02:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802ca04:	188c      	adds	r4, r1, r2
 802ca06:	9919      	ldr	r1, [sp, #100]	; 0x64
 802ca08:	1888      	adds	r0, r1, r2
 802ca0a:	9914      	ldr	r1, [sp, #80]	; 0x50
 802ca0c:	eb01 0c02 	add.w	ip, r1, r2
 802ca10:	9915      	ldr	r1, [sp, #84]	; 0x54
 802ca12:	440a      	add	r2, r1
 802ca14:	9903      	ldr	r1, [sp, #12]
 802ca16:	edd1 fa00 	vldr	s31, [r1]
 802ca1a:	9905      	ldr	r1, [sp, #20]
 802ca1c:	ed91 fa00 	vldr	s30, [r1]
 802ca20:	9904      	ldr	r1, [sp, #16]
 802ca22:	edd1 ea00 	vldr	s29, [r1]
 802ca26:	9906      	ldr	r1, [sp, #24]
 802ca28:	ed91 ea00 	vldr	s28, [r1]
 802ca2c:	9909      	ldr	r1, [sp, #36]	; 0x24
 802ca2e:	edd1 da00 	vldr	s27, [r1]
 802ca32:	9908      	ldr	r1, [sp, #32]
 802ca34:	ed91 da00 	vldr	s26, [r1]
 802ca38:	9907      	ldr	r1, [sp, #28]
 802ca3a:	edd1 ca00 	vldr	s25, [r1]
 802ca3e:	9903      	ldr	r1, [sp, #12]
 802ca40:	ed91 ca01 	vldr	s24, [r1, #4]
 802ca44:	9905      	ldr	r1, [sp, #20]
 802ca46:	edd1 ba01 	vldr	s23, [r1, #4]
 802ca4a:	9904      	ldr	r1, [sp, #16]
 802ca4c:	edd1 aa01 	vldr	s21, [r1, #4]
 802ca50:	9906      	ldr	r1, [sp, #24]
 802ca52:	ed91 aa01 	vldr	s20, [r1, #4]
 802ca56:	9909      	ldr	r1, [sp, #36]	; 0x24
 802ca58:	edd1 7a01 	vldr	s15, [r1, #4]
 802ca5c:	9908      	ldr	r1, [sp, #32]
 802ca5e:	edcd 7a00 	vstr	s15, [sp]
 802ca62:	edd1 7a01 	vldr	s15, [r1, #4]
 802ca66:	9907      	ldr	r1, [sp, #28]
 802ca68:	edcd 7a01 	vstr	s15, [sp, #4]
 802ca6c:	edd1 7a01 	vldr	s15, [r1, #4]
 802ca70:	eb0a 0e07 	add.w	lr, sl, r7
 802ca74:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802ca76:	edcd 7a02 	vstr	s15, [sp, #8]
 802ca7a:	eb0c 010a 	add.w	r1, ip, sl
 802ca7e:	4456      	add	r6, sl
 802ca80:	4455      	add	r5, sl
 802ca82:	4454      	add	r4, sl
 802ca84:	4450      	add	r0, sl
 802ca86:	4452      	add	r2, sl
 802ca88:	46c4      	mov	ip, r8
 802ca8a:	e001      	b.n	802ca90 <arm_radix8_butterfly_f32+0x334>
 802ca8c:	3f3504f3 	.word	0x3f3504f3
 802ca90:	ed96 5a00 	vldr	s10, [r6]
 802ca94:	ed52 9a01 	vldr	s19, [r2, #-4]
 802ca98:	ed11 6a01 	vldr	s12, [r1, #-4]
 802ca9c:	edd0 7a00 	vldr	s15, [r0]
 802caa0:	ed17 7a01 	vldr	s14, [r7, #-4]
 802caa4:	edde 3a00 	vldr	s7, [lr]
 802caa8:	ed94 3a00 	vldr	s6, [r4]
 802caac:	ed95 2a00 	vldr	s4, [r5]
 802cab0:	ed9e 0a01 	vldr	s0, [lr, #4]
 802cab4:	ee33 8a85 	vadd.f32	s16, s7, s10
 802cab8:	ee32 1a06 	vadd.f32	s2, s4, s12
 802cabc:	ee33 4a29 	vadd.f32	s8, s6, s19
 802cac0:	ee77 4a87 	vadd.f32	s9, s15, s14
 802cac4:	ee78 1a04 	vadd.f32	s3, s16, s8
 802cac8:	ee71 6a24 	vadd.f32	s13, s2, s9
 802cacc:	ee32 2a46 	vsub.f32	s4, s4, s12
 802cad0:	ee31 6aa6 	vadd.f32	s12, s3, s13
 802cad4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802cad8:	ed8e 6a00 	vstr	s12, [lr]
 802cadc:	edd0 8a01 	vldr	s17, [r0, #4]
 802cae0:	ed95 9a01 	vldr	s18, [r5, #4]
 802cae4:	edd1 2a00 	vldr	s5, [r1]
 802cae8:	ed97 7a00 	vldr	s14, [r7]
 802caec:	edd4 0a01 	vldr	s1, [r4, #4]
 802caf0:	ed96 6a01 	vldr	s12, [r6, #4]
 802caf4:	edd2 5a00 	vldr	s11, [r2]
 802caf8:	ee73 3ac5 	vsub.f32	s7, s7, s10
 802cafc:	ee33 3a69 	vsub.f32	s6, s6, s19
 802cb00:	ee39 5a62 	vsub.f32	s10, s18, s5
 802cb04:	ee78 9ac7 	vsub.f32	s19, s17, s14
 802cb08:	ee38 4a44 	vsub.f32	s8, s16, s8
 802cb0c:	ee38 7a87 	vadd.f32	s14, s17, s14
 802cb10:	ee30 8aa5 	vadd.f32	s16, s1, s11
 802cb14:	ee79 2a22 	vadd.f32	s5, s18, s5
 802cb18:	ee75 8a69 	vsub.f32	s17, s10, s19
 802cb1c:	ee32 9a27 	vadd.f32	s18, s4, s15
 802cb20:	ee35 5a29 	vadd.f32	s10, s10, s19
 802cb24:	ee72 7a67 	vsub.f32	s15, s4, s15
 802cb28:	ee30 2a06 	vadd.f32	s4, s0, s12
 802cb2c:	ee69 9a0b 	vmul.f32	s19, s18, s22
 802cb30:	ee70 5ae5 	vsub.f32	s11, s1, s11
 802cb34:	ee32 9a08 	vadd.f32	s18, s4, s16
 802cb38:	ee68 8a8b 	vmul.f32	s17, s17, s22
 802cb3c:	ee32 2a48 	vsub.f32	s4, s4, s16
 802cb40:	ee71 4a64 	vsub.f32	s9, s2, s9
 802cb44:	ee25 5a0b 	vmul.f32	s10, s10, s22
 802cb48:	ee32 1a87 	vadd.f32	s2, s5, s14
 802cb4c:	ee67 7a8b 	vmul.f32	s15, s15, s22
 802cb50:	ee72 2ac7 	vsub.f32	s5, s5, s14
 802cb54:	ee30 6a46 	vsub.f32	s12, s0, s12
 802cb58:	ee73 0a29 	vadd.f32	s1, s6, s19
 802cb5c:	ee36 0a28 	vadd.f32	s0, s12, s17
 802cb60:	ee33 3a69 	vsub.f32	s6, s6, s19
 802cb64:	ee32 7a64 	vsub.f32	s14, s4, s9
 802cb68:	ee73 9aa7 	vadd.f32	s19, s7, s15
 802cb6c:	ee36 6a68 	vsub.f32	s12, s12, s17
 802cb70:	ee73 7ae7 	vsub.f32	s15, s7, s15
 802cb74:	ee75 8a85 	vadd.f32	s17, s11, s10
 802cb78:	ee74 3a22 	vadd.f32	s7, s8, s5
 802cb7c:	ee35 5ac5 	vsub.f32	s10, s11, s10
 802cb80:	ee71 6ae6 	vsub.f32	s13, s3, s13
 802cb84:	ee79 1a41 	vsub.f32	s3, s18, s2
 802cb88:	ee39 8aa8 	vadd.f32	s16, s19, s17
 802cb8c:	ee76 5a43 	vsub.f32	s11, s12, s6
 802cb90:	ee74 2a62 	vsub.f32	s5, s8, s5
 802cb94:	ee72 4a24 	vadd.f32	s9, s4, s9
 802cb98:	ee30 4a60 	vsub.f32	s8, s0, s1
 802cb9c:	ee79 8ae8 	vsub.f32	s17, s19, s17
 802cba0:	ee30 0a20 	vadd.f32	s0, s0, s1
 802cba4:	ee77 9a85 	vadd.f32	s19, s15, s10
 802cba8:	ee36 6a03 	vadd.f32	s12, s12, s6
 802cbac:	ee77 7ac5 	vsub.f32	s15, s15, s10
 802cbb0:	ee2e 2a21 	vmul.f32	s4, s28, s3
 802cbb4:	ee2e 5a26 	vmul.f32	s10, s28, s13
 802cbb8:	ee6f 0a23 	vmul.f32	s1, s30, s7
 802cbbc:	ee2a 3a21 	vmul.f32	s6, s20, s3
 802cbc0:	ee39 1a01 	vadd.f32	s2, s18, s2
 802cbc4:	ee6a 6a26 	vmul.f32	s13, s20, s13
 802cbc8:	ee2b 9a87 	vmul.f32	s18, s23, s14
 802cbcc:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 802cbd0:	ee2f 7a07 	vmul.f32	s14, s30, s14
 802cbd4:	ee6f 1a84 	vmul.f32	s3, s31, s8
 802cbd8:	ee35 3a03 	vadd.f32	s6, s10, s6
 802cbdc:	ee72 6a66 	vsub.f32	s13, s4, s13
 802cbe0:	ee2c 5a04 	vmul.f32	s10, s24, s8
 802cbe4:	ee2f 2a88 	vmul.f32	s4, s31, s16
 802cbe8:	ed9d 4a02 	vldr	s8, [sp, #8]
 802cbec:	ed8e 1a01 	vstr	s2, [lr, #4]
 802cbf0:	ee77 3a63 	vsub.f32	s7, s14, s7
 802cbf4:	ee2c 8a08 	vmul.f32	s16, s24, s16
 802cbf8:	ed9d 7a01 	vldr	s14, [sp, #4]
 802cbfc:	ed86 3a00 	vstr	s6, [r6]
 802cc00:	ee30 9a89 	vadd.f32	s18, s1, s18
 802cc04:	ee32 2a05 	vadd.f32	s4, s4, s10
 802cc08:	ee6d 0a22 	vmul.f32	s1, s26, s5
 802cc0c:	ee31 8ac8 	vsub.f32	s16, s3, s16
 802cc10:	ee67 2a22 	vmul.f32	s5, s14, s5
 802cc14:	ee64 1a00 	vmul.f32	s3, s8, s0
 802cc18:	ee27 7a24 	vmul.f32	s14, s14, s9
 802cc1c:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 802cc20:	ee6d 4a24 	vmul.f32	s9, s26, s9
 802cc24:	ee64 8a28 	vmul.f32	s17, s8, s17
 802cc28:	ed9d 4a00 	vldr	s8, [sp]
 802cc2c:	edc6 6a01 	vstr	s13, [r6, #4]
 802cc30:	ee74 2ae2 	vsub.f32	s5, s9, s5
 802cc34:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 802cc38:	ee64 9a29 	vmul.f32	s19, s8, s19
 802cc3c:	ee24 4a25 	vmul.f32	s8, s8, s11
 802cc40:	ee30 7a87 	vadd.f32	s14, s1, s14
 802cc44:	ee74 4a84 	vadd.f32	s9, s9, s8
 802cc48:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 802cc4c:	ee2a 4a86 	vmul.f32	s8, s21, s12
 802cc50:	ee2c 0a80 	vmul.f32	s0, s25, s0
 802cc54:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 802cc58:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 802cc5c:	ee2e 6a86 	vmul.f32	s12, s29, s12
 802cc60:	ee75 1a21 	vadd.f32	s3, s10, s3
 802cc64:	ee30 0a68 	vsub.f32	s0, s0, s17
 802cc68:	ee75 9ae9 	vsub.f32	s19, s11, s19
 802cc6c:	ee70 0a84 	vadd.f32	s1, s1, s8
 802cc70:	ee36 6a67 	vsub.f32	s12, s12, s15
 802cc74:	44dc      	add	ip, fp
 802cc76:	45e1      	cmp	r9, ip
 802cc78:	ed84 9a00 	vstr	s18, [r4]
 802cc7c:	edc4 3a01 	vstr	s7, [r4, #4]
 802cc80:	449e      	add	lr, r3
 802cc82:	ed02 7a01 	vstr	s14, [r2, #-4]
 802cc86:	edc2 2a00 	vstr	s5, [r2]
 802cc8a:	441e      	add	r6, r3
 802cc8c:	ed85 2a00 	vstr	s4, [r5]
 802cc90:	ed85 8a01 	vstr	s16, [r5, #4]
 802cc94:	441c      	add	r4, r3
 802cc96:	ed47 1a01 	vstr	s3, [r7, #-4]
 802cc9a:	ed87 0a00 	vstr	s0, [r7]
 802cc9e:	441a      	add	r2, r3
 802cca0:	ed41 4a01 	vstr	s9, [r1, #-4]
 802cca4:	edc1 9a00 	vstr	s19, [r1]
 802cca8:	441d      	add	r5, r3
 802ccaa:	edc0 0a00 	vstr	s1, [r0]
 802ccae:	441f      	add	r7, r3
 802ccb0:	ed80 6a01 	vstr	s12, [r0, #4]
 802ccb4:	4419      	add	r1, r3
 802ccb6:	4418      	add	r0, r3
 802ccb8:	f63f aeea 	bhi.w	802ca90 <arm_radix8_butterfly_f32+0x334>
 802ccbc:	9a03      	ldr	r2, [sp, #12]
 802ccbe:	990d      	ldr	r1, [sp, #52]	; 0x34
 802ccc0:	440a      	add	r2, r1
 802ccc2:	9203      	str	r2, [sp, #12]
 802ccc4:	990e      	ldr	r1, [sp, #56]	; 0x38
 802ccc6:	9a05      	ldr	r2, [sp, #20]
 802ccc8:	440a      	add	r2, r1
 802ccca:	9205      	str	r2, [sp, #20]
 802cccc:	9913      	ldr	r1, [sp, #76]	; 0x4c
 802ccce:	9a04      	ldr	r2, [sp, #16]
 802ccd0:	440a      	add	r2, r1
 802ccd2:	9204      	str	r2, [sp, #16]
 802ccd4:	9912      	ldr	r1, [sp, #72]	; 0x48
 802ccd6:	9a06      	ldr	r2, [sp, #24]
 802ccd8:	440a      	add	r2, r1
 802ccda:	9206      	str	r2, [sp, #24]
 802ccdc:	9911      	ldr	r1, [sp, #68]	; 0x44
 802ccde:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802cce0:	440a      	add	r2, r1
 802cce2:	9209      	str	r2, [sp, #36]	; 0x24
 802cce4:	9910      	ldr	r1, [sp, #64]	; 0x40
 802cce6:	9a08      	ldr	r2, [sp, #32]
 802cce8:	440a      	add	r2, r1
 802ccea:	9208      	str	r2, [sp, #32]
 802ccec:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802ccee:	9a07      	ldr	r2, [sp, #28]
 802ccf0:	440a      	add	r2, r1
 802ccf2:	9207      	str	r2, [sp, #28]
 802ccf4:	990c      	ldr	r1, [sp, #48]	; 0x30
 802ccf6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802ccf8:	f108 0801 	add.w	r8, r8, #1
 802ccfc:	3208      	adds	r2, #8
 802ccfe:	4588      	cmp	r8, r1
 802cd00:	920a      	str	r2, [sp, #40]	; 0x28
 802cd02:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802cd04:	f47f ae75 	bne.w	802c9f2 <arm_radix8_butterfly_f32+0x296>
 802cd08:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 802cd0c:	9300      	str	r3, [sp, #0]
 802cd0e:	46c3      	mov	fp, r8
 802cd10:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 802cd14:	e532      	b.n	802c77c <arm_radix8_butterfly_f32+0x20>
 802cd16:	b01d      	add	sp, #116	; 0x74
 802cd18:	ecbd 8b10 	vpop	{d8-d15}
 802cd1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802cd20 <__aeabi_atexit>:
 802cd20:	460b      	mov	r3, r1
 802cd22:	4601      	mov	r1, r0
 802cd24:	4618      	mov	r0, r3
 802cd26:	f000 bfc7 	b.w	802dcb8 <__cxa_atexit>

0802cd2a <_ZdlPvj>:
 802cd2a:	f000 b812 	b.w	802cd52 <_ZdlPv>

0802cd2e <__cxa_guard_acquire>:
 802cd2e:	6803      	ldr	r3, [r0, #0]
 802cd30:	07db      	lsls	r3, r3, #31
 802cd32:	d406      	bmi.n	802cd42 <__cxa_guard_acquire+0x14>
 802cd34:	7843      	ldrb	r3, [r0, #1]
 802cd36:	b103      	cbz	r3, 802cd3a <__cxa_guard_acquire+0xc>
 802cd38:	deff      	udf	#255	; 0xff
 802cd3a:	2301      	movs	r3, #1
 802cd3c:	7043      	strb	r3, [r0, #1]
 802cd3e:	4618      	mov	r0, r3
 802cd40:	4770      	bx	lr
 802cd42:	2000      	movs	r0, #0
 802cd44:	4770      	bx	lr

0802cd46 <__cxa_guard_release>:
 802cd46:	2301      	movs	r3, #1
 802cd48:	6003      	str	r3, [r0, #0]
 802cd4a:	4770      	bx	lr

0802cd4c <__cxa_pure_virtual>:
 802cd4c:	b508      	push	{r3, lr}
 802cd4e:	f000 f80f 	bl	802cd70 <_ZSt9terminatev>

0802cd52 <_ZdlPv>:
 802cd52:	f000 befd 	b.w	802db50 <free>

0802cd56 <_ZN10__cxxabiv111__terminateEPFvvE>:
 802cd56:	b508      	push	{r3, lr}
 802cd58:	4780      	blx	r0
 802cd5a:	f000 fec5 	bl	802dae8 <abort>
	...

0802cd60 <_ZSt13get_terminatev>:
 802cd60:	4b02      	ldr	r3, [pc, #8]	; (802cd6c <_ZSt13get_terminatev+0xc>)
 802cd62:	6818      	ldr	r0, [r3, #0]
 802cd64:	f3bf 8f5b 	dmb	ish
 802cd68:	4770      	bx	lr
 802cd6a:	bf00      	nop
 802cd6c:	20000104 	.word	0x20000104

0802cd70 <_ZSt9terminatev>:
 802cd70:	b508      	push	{r3, lr}
 802cd72:	f7ff fff5 	bl	802cd60 <_ZSt13get_terminatev>
 802cd76:	f7ff ffee 	bl	802cd56 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802cd7c <sqrtf>:
 802cd7c:	b508      	push	{r3, lr}
 802cd7e:	ed2d 8b02 	vpush	{d8}
 802cd82:	eeb0 8a40 	vmov.f32	s16, s0
 802cd86:	f000 f97d 	bl	802d084 <__ieee754_sqrtf>
 802cd8a:	eeb4 8a48 	vcmp.f32	s16, s16
 802cd8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cd92:	d60c      	bvs.n	802cdae <sqrtf+0x32>
 802cd94:	eddf 8a07 	vldr	s17, [pc, #28]	; 802cdb4 <sqrtf+0x38>
 802cd98:	eeb4 8ae8 	vcmpe.f32	s16, s17
 802cd9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cda0:	d505      	bpl.n	802cdae <sqrtf+0x32>
 802cda2:	f001 f9a7 	bl	802e0f4 <__errno>
 802cda6:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802cdaa:	2321      	movs	r3, #33	; 0x21
 802cdac:	6003      	str	r3, [r0, #0]
 802cdae:	ecbd 8b02 	vpop	{d8}
 802cdb2:	bd08      	pop	{r3, pc}
 802cdb4:	00000000 	.word	0x00000000

0802cdb8 <atanf>:
 802cdb8:	b538      	push	{r3, r4, r5, lr}
 802cdba:	ee10 5a10 	vmov	r5, s0
 802cdbe:	f025 4400 	bic.w	r4, r5, #2147483648	; 0x80000000
 802cdc2:	f1b4 4fa1 	cmp.w	r4, #1350565888	; 0x50800000
 802cdc6:	eef0 7a40 	vmov.f32	s15, s0
 802cdca:	db10      	blt.n	802cdee <atanf+0x36>
 802cdcc:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
 802cdd0:	dd04      	ble.n	802cddc <atanf+0x24>
 802cdd2:	ee70 7a00 	vadd.f32	s15, s0, s0
 802cdd6:	eeb0 0a67 	vmov.f32	s0, s15
 802cdda:	bd38      	pop	{r3, r4, r5, pc}
 802cddc:	eddf 7a4d 	vldr	s15, [pc, #308]	; 802cf14 <atanf+0x15c>
 802cde0:	ed9f 7a4d 	vldr	s14, [pc, #308]	; 802cf18 <atanf+0x160>
 802cde4:	2d00      	cmp	r5, #0
 802cde6:	bfd8      	it	le
 802cde8:	eef0 7a47 	vmovle.f32	s15, s14
 802cdec:	e7f3      	b.n	802cdd6 <atanf+0x1e>
 802cdee:	4b4b      	ldr	r3, [pc, #300]	; (802cf1c <atanf+0x164>)
 802cdf0:	429c      	cmp	r4, r3
 802cdf2:	dc10      	bgt.n	802ce16 <atanf+0x5e>
 802cdf4:	f1b4 5f44 	cmp.w	r4, #822083584	; 0x31000000
 802cdf8:	da0a      	bge.n	802ce10 <atanf+0x58>
 802cdfa:	ed9f 7a49 	vldr	s14, [pc, #292]	; 802cf20 <atanf+0x168>
 802cdfe:	ee30 7a07 	vadd.f32	s14, s0, s14
 802ce02:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802ce06:	eeb4 7ae6 	vcmpe.f32	s14, s13
 802ce0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ce0e:	dce2      	bgt.n	802cdd6 <atanf+0x1e>
 802ce10:	f04f 33ff 	mov.w	r3, #4294967295
 802ce14:	e013      	b.n	802ce3e <atanf+0x86>
 802ce16:	f000 f8e7 	bl	802cfe8 <fabsf>
 802ce1a:	4b42      	ldr	r3, [pc, #264]	; (802cf24 <atanf+0x16c>)
 802ce1c:	429c      	cmp	r4, r3
 802ce1e:	dc4f      	bgt.n	802cec0 <atanf+0x108>
 802ce20:	f5a3 03d0 	sub.w	r3, r3, #6815744	; 0x680000
 802ce24:	429c      	cmp	r4, r3
 802ce26:	dc41      	bgt.n	802ceac <atanf+0xf4>
 802ce28:	eef0 7a00 	vmov.f32	s15, #0	; 0x40000000  2.0
 802ce2c:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 802ce30:	eea0 7a27 	vfma.f32	s14, s0, s15
 802ce34:	2300      	movs	r3, #0
 802ce36:	ee30 0a27 	vadd.f32	s0, s0, s15
 802ce3a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802ce3e:	1c5a      	adds	r2, r3, #1
 802ce40:	ee27 6aa7 	vmul.f32	s12, s15, s15
 802ce44:	ed9f 7a38 	vldr	s14, [pc, #224]	; 802cf28 <atanf+0x170>
 802ce48:	eddf 5a38 	vldr	s11, [pc, #224]	; 802cf2c <atanf+0x174>
 802ce4c:	ed9f 5a38 	vldr	s10, [pc, #224]	; 802cf30 <atanf+0x178>
 802ce50:	ee66 6a06 	vmul.f32	s13, s12, s12
 802ce54:	eee6 5a87 	vfma.f32	s11, s13, s14
 802ce58:	ed9f 7a36 	vldr	s14, [pc, #216]	; 802cf34 <atanf+0x17c>
 802ce5c:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802ce60:	eddf 5a35 	vldr	s11, [pc, #212]	; 802cf38 <atanf+0x180>
 802ce64:	eee7 5a26 	vfma.f32	s11, s14, s13
 802ce68:	ed9f 7a34 	vldr	s14, [pc, #208]	; 802cf3c <atanf+0x184>
 802ce6c:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802ce70:	eddf 5a33 	vldr	s11, [pc, #204]	; 802cf40 <atanf+0x188>
 802ce74:	eee7 5a26 	vfma.f32	s11, s14, s13
 802ce78:	ed9f 7a32 	vldr	s14, [pc, #200]	; 802cf44 <atanf+0x18c>
 802ce7c:	eea6 5a87 	vfma.f32	s10, s13, s14
 802ce80:	ed9f 7a31 	vldr	s14, [pc, #196]	; 802cf48 <atanf+0x190>
 802ce84:	eea5 7a26 	vfma.f32	s14, s10, s13
 802ce88:	ed9f 5a30 	vldr	s10, [pc, #192]	; 802cf4c <atanf+0x194>
 802ce8c:	eea7 5a26 	vfma.f32	s10, s14, s13
 802ce90:	ed9f 7a2f 	vldr	s14, [pc, #188]	; 802cf50 <atanf+0x198>
 802ce94:	eea5 7a26 	vfma.f32	s14, s10, s13
 802ce98:	ee27 7a26 	vmul.f32	s14, s14, s13
 802ce9c:	eea5 7a86 	vfma.f32	s14, s11, s12
 802cea0:	ee27 7a87 	vmul.f32	s14, s15, s14
 802cea4:	d121      	bne.n	802ceea <atanf+0x132>
 802cea6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ceaa:	e794      	b.n	802cdd6 <atanf+0x1e>
 802ceac:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802ceb0:	ee30 7a67 	vsub.f32	s14, s0, s15
 802ceb4:	ee30 0a27 	vadd.f32	s0, s0, s15
 802ceb8:	2301      	movs	r3, #1
 802ceba:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802cebe:	e7be      	b.n	802ce3e <atanf+0x86>
 802cec0:	4b24      	ldr	r3, [pc, #144]	; (802cf54 <atanf+0x19c>)
 802cec2:	429c      	cmp	r4, r3
 802cec4:	dc0b      	bgt.n	802cede <atanf+0x126>
 802cec6:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 802ceca:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802cece:	eea0 7a27 	vfma.f32	s14, s0, s15
 802ced2:	2302      	movs	r3, #2
 802ced4:	ee70 6a67 	vsub.f32	s13, s0, s15
 802ced8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 802cedc:	e7af      	b.n	802ce3e <atanf+0x86>
 802cede:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 802cee2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802cee6:	2303      	movs	r3, #3
 802cee8:	e7a9      	b.n	802ce3e <atanf+0x86>
 802ceea:	4a1b      	ldr	r2, [pc, #108]	; (802cf58 <atanf+0x1a0>)
 802ceec:	491b      	ldr	r1, [pc, #108]	; (802cf5c <atanf+0x1a4>)
 802ceee:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802cef2:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802cef6:	edd3 6a00 	vldr	s13, [r3]
 802cefa:	ee37 7a66 	vsub.f32	s14, s14, s13
 802cefe:	2d00      	cmp	r5, #0
 802cf00:	ee37 7a67 	vsub.f32	s14, s14, s15
 802cf04:	edd2 7a00 	vldr	s15, [r2]
 802cf08:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802cf0c:	bfb8      	it	lt
 802cf0e:	eef1 7a67 	vneglt.f32	s15, s15
 802cf12:	e760      	b.n	802cdd6 <atanf+0x1e>
 802cf14:	3fc90fdb 	.word	0x3fc90fdb
 802cf18:	bfc90fdb 	.word	0xbfc90fdb
 802cf1c:	3edfffff 	.word	0x3edfffff
 802cf20:	7149f2ca 	.word	0x7149f2ca
 802cf24:	3f97ffff 	.word	0x3f97ffff
 802cf28:	3c8569d7 	.word	0x3c8569d7
 802cf2c:	3d4bda59 	.word	0x3d4bda59
 802cf30:	bd6ef16b 	.word	0xbd6ef16b
 802cf34:	3d886b35 	.word	0x3d886b35
 802cf38:	3dba2e6e 	.word	0x3dba2e6e
 802cf3c:	3e124925 	.word	0x3e124925
 802cf40:	3eaaaaab 	.word	0x3eaaaaab
 802cf44:	bd15a221 	.word	0xbd15a221
 802cf48:	bd9d8795 	.word	0xbd9d8795
 802cf4c:	bde38e38 	.word	0xbde38e38
 802cf50:	be4ccccd 	.word	0xbe4ccccd
 802cf54:	401bffff 	.word	0x401bffff
 802cf58:	08045980 	.word	0x08045980
 802cf5c:	08045990 	.word	0x08045990

0802cf60 <cosf>:
 802cf60:	ee10 3a10 	vmov	r3, s0
 802cf64:	b507      	push	{r0, r1, r2, lr}
 802cf66:	4a1e      	ldr	r2, [pc, #120]	; (802cfe0 <cosf+0x80>)
 802cf68:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802cf6c:	4293      	cmp	r3, r2
 802cf6e:	dc06      	bgt.n	802cf7e <cosf+0x1e>
 802cf70:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802cfe4 <cosf+0x84>
 802cf74:	b003      	add	sp, #12
 802cf76:	f85d eb04 	ldr.w	lr, [sp], #4
 802cf7a:	f000 b90b 	b.w	802d194 <__kernel_cosf>
 802cf7e:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802cf82:	db04      	blt.n	802cf8e <cosf+0x2e>
 802cf84:	ee30 0a40 	vsub.f32	s0, s0, s0
 802cf88:	b003      	add	sp, #12
 802cf8a:	f85d fb04 	ldr.w	pc, [sp], #4
 802cf8e:	4668      	mov	r0, sp
 802cf90:	f000 f9a6 	bl	802d2e0 <__ieee754_rem_pio2f>
 802cf94:	f000 0003 	and.w	r0, r0, #3
 802cf98:	2801      	cmp	r0, #1
 802cf9a:	d009      	beq.n	802cfb0 <cosf+0x50>
 802cf9c:	2802      	cmp	r0, #2
 802cf9e:	d010      	beq.n	802cfc2 <cosf+0x62>
 802cfa0:	b9b0      	cbnz	r0, 802cfd0 <cosf+0x70>
 802cfa2:	eddd 0a01 	vldr	s1, [sp, #4]
 802cfa6:	ed9d 0a00 	vldr	s0, [sp]
 802cfaa:	f000 f8f3 	bl	802d194 <__kernel_cosf>
 802cfae:	e7eb      	b.n	802cf88 <cosf+0x28>
 802cfb0:	eddd 0a01 	vldr	s1, [sp, #4]
 802cfb4:	ed9d 0a00 	vldr	s0, [sp]
 802cfb8:	f000 f94a 	bl	802d250 <__kernel_sinf>
 802cfbc:	eeb1 0a40 	vneg.f32	s0, s0
 802cfc0:	e7e2      	b.n	802cf88 <cosf+0x28>
 802cfc2:	eddd 0a01 	vldr	s1, [sp, #4]
 802cfc6:	ed9d 0a00 	vldr	s0, [sp]
 802cfca:	f000 f8e3 	bl	802d194 <__kernel_cosf>
 802cfce:	e7f5      	b.n	802cfbc <cosf+0x5c>
 802cfd0:	eddd 0a01 	vldr	s1, [sp, #4]
 802cfd4:	ed9d 0a00 	vldr	s0, [sp]
 802cfd8:	2001      	movs	r0, #1
 802cfda:	f000 f939 	bl	802d250 <__kernel_sinf>
 802cfde:	e7d3      	b.n	802cf88 <cosf+0x28>
 802cfe0:	3f490fd8 	.word	0x3f490fd8
 802cfe4:	00000000 	.word	0x00000000

0802cfe8 <fabsf>:
 802cfe8:	ee10 3a10 	vmov	r3, s0
 802cfec:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802cff0:	ee00 3a10 	vmov	s0, r3
 802cff4:	4770      	bx	lr
	...

0802cff8 <sinf>:
 802cff8:	ee10 3a10 	vmov	r3, s0
 802cffc:	b507      	push	{r0, r1, r2, lr}
 802cffe:	4a1f      	ldr	r2, [pc, #124]	; (802d07c <sinf+0x84>)
 802d000:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802d004:	4293      	cmp	r3, r2
 802d006:	dc07      	bgt.n	802d018 <sinf+0x20>
 802d008:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802d080 <sinf+0x88>
 802d00c:	2000      	movs	r0, #0
 802d00e:	b003      	add	sp, #12
 802d010:	f85d eb04 	ldr.w	lr, [sp], #4
 802d014:	f000 b91c 	b.w	802d250 <__kernel_sinf>
 802d018:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802d01c:	db04      	blt.n	802d028 <sinf+0x30>
 802d01e:	ee30 0a40 	vsub.f32	s0, s0, s0
 802d022:	b003      	add	sp, #12
 802d024:	f85d fb04 	ldr.w	pc, [sp], #4
 802d028:	4668      	mov	r0, sp
 802d02a:	f000 f959 	bl	802d2e0 <__ieee754_rem_pio2f>
 802d02e:	f000 0003 	and.w	r0, r0, #3
 802d032:	2801      	cmp	r0, #1
 802d034:	d00a      	beq.n	802d04c <sinf+0x54>
 802d036:	2802      	cmp	r0, #2
 802d038:	d00f      	beq.n	802d05a <sinf+0x62>
 802d03a:	b9c0      	cbnz	r0, 802d06e <sinf+0x76>
 802d03c:	eddd 0a01 	vldr	s1, [sp, #4]
 802d040:	ed9d 0a00 	vldr	s0, [sp]
 802d044:	2001      	movs	r0, #1
 802d046:	f000 f903 	bl	802d250 <__kernel_sinf>
 802d04a:	e7ea      	b.n	802d022 <sinf+0x2a>
 802d04c:	eddd 0a01 	vldr	s1, [sp, #4]
 802d050:	ed9d 0a00 	vldr	s0, [sp]
 802d054:	f000 f89e 	bl	802d194 <__kernel_cosf>
 802d058:	e7e3      	b.n	802d022 <sinf+0x2a>
 802d05a:	eddd 0a01 	vldr	s1, [sp, #4]
 802d05e:	ed9d 0a00 	vldr	s0, [sp]
 802d062:	2001      	movs	r0, #1
 802d064:	f000 f8f4 	bl	802d250 <__kernel_sinf>
 802d068:	eeb1 0a40 	vneg.f32	s0, s0
 802d06c:	e7d9      	b.n	802d022 <sinf+0x2a>
 802d06e:	eddd 0a01 	vldr	s1, [sp, #4]
 802d072:	ed9d 0a00 	vldr	s0, [sp]
 802d076:	f000 f88d 	bl	802d194 <__kernel_cosf>
 802d07a:	e7f5      	b.n	802d068 <sinf+0x70>
 802d07c:	3f490fd8 	.word	0x3f490fd8
 802d080:	00000000 	.word	0x00000000

0802d084 <__ieee754_sqrtf>:
 802d084:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802d088:	4770      	bx	lr
	...

0802d08c <ceilf>:
 802d08c:	ee10 3a10 	vmov	r3, s0
 802d090:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802d094:	3a7f      	subs	r2, #127	; 0x7f
 802d096:	2a16      	cmp	r2, #22
 802d098:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802d09c:	dc2a      	bgt.n	802d0f4 <ceilf+0x68>
 802d09e:	2a00      	cmp	r2, #0
 802d0a0:	da11      	bge.n	802d0c6 <ceilf+0x3a>
 802d0a2:	eddf 7a19 	vldr	s15, [pc, #100]	; 802d108 <ceilf+0x7c>
 802d0a6:	ee30 0a27 	vadd.f32	s0, s0, s15
 802d0aa:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802d0ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d0b2:	dd05      	ble.n	802d0c0 <ceilf+0x34>
 802d0b4:	2b00      	cmp	r3, #0
 802d0b6:	db23      	blt.n	802d100 <ceilf+0x74>
 802d0b8:	2900      	cmp	r1, #0
 802d0ba:	bf18      	it	ne
 802d0bc:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802d0c0:	ee00 3a10 	vmov	s0, r3
 802d0c4:	4770      	bx	lr
 802d0c6:	4911      	ldr	r1, [pc, #68]	; (802d10c <ceilf+0x80>)
 802d0c8:	4111      	asrs	r1, r2
 802d0ca:	420b      	tst	r3, r1
 802d0cc:	d0fa      	beq.n	802d0c4 <ceilf+0x38>
 802d0ce:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802d108 <ceilf+0x7c>
 802d0d2:	ee30 0a27 	vadd.f32	s0, s0, s15
 802d0d6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802d0da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d0de:	ddef      	ble.n	802d0c0 <ceilf+0x34>
 802d0e0:	2b00      	cmp	r3, #0
 802d0e2:	bfc2      	ittt	gt
 802d0e4:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802d0e8:	fa40 f202 	asrgt.w	r2, r0, r2
 802d0ec:	189b      	addgt	r3, r3, r2
 802d0ee:	ea23 0301 	bic.w	r3, r3, r1
 802d0f2:	e7e5      	b.n	802d0c0 <ceilf+0x34>
 802d0f4:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802d0f8:	d3e4      	bcc.n	802d0c4 <ceilf+0x38>
 802d0fa:	ee30 0a00 	vadd.f32	s0, s0, s0
 802d0fe:	4770      	bx	lr
 802d100:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802d104:	e7dc      	b.n	802d0c0 <ceilf+0x34>
 802d106:	bf00      	nop
 802d108:	7149f2ca 	.word	0x7149f2ca
 802d10c:	007fffff 	.word	0x007fffff

0802d110 <floorf>:
 802d110:	ee10 3a10 	vmov	r3, s0
 802d114:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802d118:	3a7f      	subs	r2, #127	; 0x7f
 802d11a:	2a16      	cmp	r2, #22
 802d11c:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802d120:	dc2a      	bgt.n	802d178 <floorf+0x68>
 802d122:	2a00      	cmp	r2, #0
 802d124:	da11      	bge.n	802d14a <floorf+0x3a>
 802d126:	eddf 7a18 	vldr	s15, [pc, #96]	; 802d188 <floorf+0x78>
 802d12a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802d12e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802d132:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d136:	dd05      	ble.n	802d144 <floorf+0x34>
 802d138:	2b00      	cmp	r3, #0
 802d13a:	da23      	bge.n	802d184 <floorf+0x74>
 802d13c:	4a13      	ldr	r2, [pc, #76]	; (802d18c <floorf+0x7c>)
 802d13e:	2900      	cmp	r1, #0
 802d140:	bf18      	it	ne
 802d142:	4613      	movne	r3, r2
 802d144:	ee00 3a10 	vmov	s0, r3
 802d148:	4770      	bx	lr
 802d14a:	4911      	ldr	r1, [pc, #68]	; (802d190 <floorf+0x80>)
 802d14c:	4111      	asrs	r1, r2
 802d14e:	420b      	tst	r3, r1
 802d150:	d0fa      	beq.n	802d148 <floorf+0x38>
 802d152:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802d188 <floorf+0x78>
 802d156:	ee30 0a27 	vadd.f32	s0, s0, s15
 802d15a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802d15e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d162:	ddef      	ble.n	802d144 <floorf+0x34>
 802d164:	2b00      	cmp	r3, #0
 802d166:	bfbe      	ittt	lt
 802d168:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802d16c:	fa40 f202 	asrlt.w	r2, r0, r2
 802d170:	189b      	addlt	r3, r3, r2
 802d172:	ea23 0301 	bic.w	r3, r3, r1
 802d176:	e7e5      	b.n	802d144 <floorf+0x34>
 802d178:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802d17c:	d3e4      	bcc.n	802d148 <floorf+0x38>
 802d17e:	ee30 0a00 	vadd.f32	s0, s0, s0
 802d182:	4770      	bx	lr
 802d184:	2300      	movs	r3, #0
 802d186:	e7dd      	b.n	802d144 <floorf+0x34>
 802d188:	7149f2ca 	.word	0x7149f2ca
 802d18c:	bf800000 	.word	0xbf800000
 802d190:	007fffff 	.word	0x007fffff

0802d194 <__kernel_cosf>:
 802d194:	ee10 3a10 	vmov	r3, s0
 802d198:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802d19c:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802d1a0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802d1a4:	da05      	bge.n	802d1b2 <__kernel_cosf+0x1e>
 802d1a6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802d1aa:	ee17 2a90 	vmov	r2, s15
 802d1ae:	2a00      	cmp	r2, #0
 802d1b0:	d03b      	beq.n	802d22a <__kernel_cosf+0x96>
 802d1b2:	ee20 7a00 	vmul.f32	s14, s0, s0
 802d1b6:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802d230 <__kernel_cosf+0x9c>
 802d1ba:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802d234 <__kernel_cosf+0xa0>
 802d1be:	4a1e      	ldr	r2, [pc, #120]	; (802d238 <__kernel_cosf+0xa4>)
 802d1c0:	eea7 6a27 	vfma.f32	s12, s14, s15
 802d1c4:	4293      	cmp	r3, r2
 802d1c6:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802d23c <__kernel_cosf+0xa8>
 802d1ca:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d1ce:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802d240 <__kernel_cosf+0xac>
 802d1d2:	eea7 6a87 	vfma.f32	s12, s15, s14
 802d1d6:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802d244 <__kernel_cosf+0xb0>
 802d1da:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d1de:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802d248 <__kernel_cosf+0xb4>
 802d1e2:	eea7 6a87 	vfma.f32	s12, s15, s14
 802d1e6:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802d1ea:	ee26 6a07 	vmul.f32	s12, s12, s14
 802d1ee:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802d1f2:	eee7 0a06 	vfma.f32	s1, s14, s12
 802d1f6:	ee67 7a27 	vmul.f32	s15, s14, s15
 802d1fa:	dc04      	bgt.n	802d206 <__kernel_cosf+0x72>
 802d1fc:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802d200:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802d204:	4770      	bx	lr
 802d206:	4a11      	ldr	r2, [pc, #68]	; (802d24c <__kernel_cosf+0xb8>)
 802d208:	4293      	cmp	r3, r2
 802d20a:	bfda      	itte	le
 802d20c:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802d210:	ee07 3a10 	vmovle	s14, r3
 802d214:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802d218:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d21c:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802d220:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802d224:	ee30 0a67 	vsub.f32	s0, s0, s15
 802d228:	4770      	bx	lr
 802d22a:	eeb0 0a66 	vmov.f32	s0, s13
 802d22e:	4770      	bx	lr
 802d230:	ad47d74e 	.word	0xad47d74e
 802d234:	310f74f6 	.word	0x310f74f6
 802d238:	3e999999 	.word	0x3e999999
 802d23c:	b493f27c 	.word	0xb493f27c
 802d240:	37d00d01 	.word	0x37d00d01
 802d244:	bab60b61 	.word	0xbab60b61
 802d248:	3d2aaaab 	.word	0x3d2aaaab
 802d24c:	3f480000 	.word	0x3f480000

0802d250 <__kernel_sinf>:
 802d250:	ee10 3a10 	vmov	r3, s0
 802d254:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802d258:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802d25c:	da04      	bge.n	802d268 <__kernel_sinf+0x18>
 802d25e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802d262:	ee17 3a90 	vmov	r3, s15
 802d266:	b35b      	cbz	r3, 802d2c0 <__kernel_sinf+0x70>
 802d268:	ee20 7a00 	vmul.f32	s14, s0, s0
 802d26c:	eddf 7a15 	vldr	s15, [pc, #84]	; 802d2c4 <__kernel_sinf+0x74>
 802d270:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802d2c8 <__kernel_sinf+0x78>
 802d274:	eea7 6a27 	vfma.f32	s12, s14, s15
 802d278:	eddf 7a14 	vldr	s15, [pc, #80]	; 802d2cc <__kernel_sinf+0x7c>
 802d27c:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d280:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802d2d0 <__kernel_sinf+0x80>
 802d284:	eea7 6a87 	vfma.f32	s12, s15, s14
 802d288:	eddf 7a12 	vldr	s15, [pc, #72]	; 802d2d4 <__kernel_sinf+0x84>
 802d28c:	ee60 6a07 	vmul.f32	s13, s0, s14
 802d290:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d294:	b930      	cbnz	r0, 802d2a4 <__kernel_sinf+0x54>
 802d296:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802d2d8 <__kernel_sinf+0x88>
 802d29a:	eea7 6a27 	vfma.f32	s12, s14, s15
 802d29e:	eea6 0a26 	vfma.f32	s0, s12, s13
 802d2a2:	4770      	bx	lr
 802d2a4:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802d2a8:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802d2ac:	eee0 7a86 	vfma.f32	s15, s1, s12
 802d2b0:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802d2b4:	eddf 7a09 	vldr	s15, [pc, #36]	; 802d2dc <__kernel_sinf+0x8c>
 802d2b8:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802d2bc:	ee30 0a60 	vsub.f32	s0, s0, s1
 802d2c0:	4770      	bx	lr
 802d2c2:	bf00      	nop
 802d2c4:	2f2ec9d3 	.word	0x2f2ec9d3
 802d2c8:	b2d72f34 	.word	0xb2d72f34
 802d2cc:	3638ef1b 	.word	0x3638ef1b
 802d2d0:	b9500d01 	.word	0xb9500d01
 802d2d4:	3c088889 	.word	0x3c088889
 802d2d8:	be2aaaab 	.word	0xbe2aaaab
 802d2dc:	3e2aaaab 	.word	0x3e2aaaab

0802d2e0 <__ieee754_rem_pio2f>:
 802d2e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 802d2e2:	ee10 6a10 	vmov	r6, s0
 802d2e6:	4b86      	ldr	r3, [pc, #536]	; (802d500 <__ieee754_rem_pio2f+0x220>)
 802d2e8:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802d2ec:	429d      	cmp	r5, r3
 802d2ee:	b087      	sub	sp, #28
 802d2f0:	4604      	mov	r4, r0
 802d2f2:	dc05      	bgt.n	802d300 <__ieee754_rem_pio2f+0x20>
 802d2f4:	2300      	movs	r3, #0
 802d2f6:	ed80 0a00 	vstr	s0, [r0]
 802d2fa:	6043      	str	r3, [r0, #4]
 802d2fc:	2000      	movs	r0, #0
 802d2fe:	e020      	b.n	802d342 <__ieee754_rem_pio2f+0x62>
 802d300:	4b80      	ldr	r3, [pc, #512]	; (802d504 <__ieee754_rem_pio2f+0x224>)
 802d302:	429d      	cmp	r5, r3
 802d304:	dc38      	bgt.n	802d378 <__ieee754_rem_pio2f+0x98>
 802d306:	2e00      	cmp	r6, #0
 802d308:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802d508 <__ieee754_rem_pio2f+0x228>
 802d30c:	4b7f      	ldr	r3, [pc, #508]	; (802d50c <__ieee754_rem_pio2f+0x22c>)
 802d30e:	f025 050f 	bic.w	r5, r5, #15
 802d312:	dd18      	ble.n	802d346 <__ieee754_rem_pio2f+0x66>
 802d314:	429d      	cmp	r5, r3
 802d316:	ee70 7a47 	vsub.f32	s15, s0, s14
 802d31a:	bf09      	itett	eq
 802d31c:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802d510 <__ieee754_rem_pio2f+0x230>
 802d320:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802d514 <__ieee754_rem_pio2f+0x234>
 802d324:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802d328:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802d518 <__ieee754_rem_pio2f+0x238>
 802d32c:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802d330:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802d334:	edc0 6a00 	vstr	s13, [r0]
 802d338:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d33c:	edc0 7a01 	vstr	s15, [r0, #4]
 802d340:	2001      	movs	r0, #1
 802d342:	b007      	add	sp, #28
 802d344:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802d346:	429d      	cmp	r5, r3
 802d348:	ee70 7a07 	vadd.f32	s15, s0, s14
 802d34c:	bf09      	itett	eq
 802d34e:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802d510 <__ieee754_rem_pio2f+0x230>
 802d352:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802d514 <__ieee754_rem_pio2f+0x234>
 802d356:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802d35a:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802d518 <__ieee754_rem_pio2f+0x238>
 802d35e:	ee77 6a87 	vadd.f32	s13, s15, s14
 802d362:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802d366:	edc0 6a00 	vstr	s13, [r0]
 802d36a:	ee77 7a87 	vadd.f32	s15, s15, s14
 802d36e:	edc0 7a01 	vstr	s15, [r0, #4]
 802d372:	f04f 30ff 	mov.w	r0, #4294967295
 802d376:	e7e4      	b.n	802d342 <__ieee754_rem_pio2f+0x62>
 802d378:	4b68      	ldr	r3, [pc, #416]	; (802d51c <__ieee754_rem_pio2f+0x23c>)
 802d37a:	429d      	cmp	r5, r3
 802d37c:	dc71      	bgt.n	802d462 <__ieee754_rem_pio2f+0x182>
 802d37e:	f7ff fe33 	bl	802cfe8 <fabsf>
 802d382:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802d520 <__ieee754_rem_pio2f+0x240>
 802d386:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802d38a:	eee0 7a07 	vfma.f32	s15, s0, s14
 802d38e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d392:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802d396:	ee17 0a90 	vmov	r0, s15
 802d39a:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802d508 <__ieee754_rem_pio2f+0x228>
 802d39e:	eea7 0a67 	vfms.f32	s0, s14, s15
 802d3a2:	281f      	cmp	r0, #31
 802d3a4:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802d514 <__ieee754_rem_pio2f+0x234>
 802d3a8:	ee67 7a27 	vmul.f32	s15, s14, s15
 802d3ac:	eeb1 6a47 	vneg.f32	s12, s14
 802d3b0:	ee70 6a67 	vsub.f32	s13, s0, s15
 802d3b4:	ee16 2a90 	vmov	r2, s13
 802d3b8:	dc1c      	bgt.n	802d3f4 <__ieee754_rem_pio2f+0x114>
 802d3ba:	495a      	ldr	r1, [pc, #360]	; (802d524 <__ieee754_rem_pio2f+0x244>)
 802d3bc:	1e47      	subs	r7, r0, #1
 802d3be:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802d3c2:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802d3c6:	428b      	cmp	r3, r1
 802d3c8:	d014      	beq.n	802d3f4 <__ieee754_rem_pio2f+0x114>
 802d3ca:	6022      	str	r2, [r4, #0]
 802d3cc:	ed94 7a00 	vldr	s14, [r4]
 802d3d0:	ee30 0a47 	vsub.f32	s0, s0, s14
 802d3d4:	2e00      	cmp	r6, #0
 802d3d6:	ee30 0a67 	vsub.f32	s0, s0, s15
 802d3da:	ed84 0a01 	vstr	s0, [r4, #4]
 802d3de:	dab0      	bge.n	802d342 <__ieee754_rem_pio2f+0x62>
 802d3e0:	eeb1 7a47 	vneg.f32	s14, s14
 802d3e4:	eeb1 0a40 	vneg.f32	s0, s0
 802d3e8:	ed84 7a00 	vstr	s14, [r4]
 802d3ec:	ed84 0a01 	vstr	s0, [r4, #4]
 802d3f0:	4240      	negs	r0, r0
 802d3f2:	e7a6      	b.n	802d342 <__ieee754_rem_pio2f+0x62>
 802d3f4:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802d3f8:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802d3fc:	2908      	cmp	r1, #8
 802d3fe:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802d402:	dde2      	ble.n	802d3ca <__ieee754_rem_pio2f+0xea>
 802d404:	eddf 5a42 	vldr	s11, [pc, #264]	; 802d510 <__ieee754_rem_pio2f+0x230>
 802d408:	eef0 6a40 	vmov.f32	s13, s0
 802d40c:	eee6 6a25 	vfma.f32	s13, s12, s11
 802d410:	ee70 7a66 	vsub.f32	s15, s0, s13
 802d414:	eee6 7a25 	vfma.f32	s15, s12, s11
 802d418:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802d518 <__ieee754_rem_pio2f+0x238>
 802d41c:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802d420:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802d424:	ee15 2a90 	vmov	r2, s11
 802d428:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802d42c:	1a5b      	subs	r3, r3, r1
 802d42e:	2b19      	cmp	r3, #25
 802d430:	dc04      	bgt.n	802d43c <__ieee754_rem_pio2f+0x15c>
 802d432:	edc4 5a00 	vstr	s11, [r4]
 802d436:	eeb0 0a66 	vmov.f32	s0, s13
 802d43a:	e7c7      	b.n	802d3cc <__ieee754_rem_pio2f+0xec>
 802d43c:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802d528 <__ieee754_rem_pio2f+0x248>
 802d440:	eeb0 0a66 	vmov.f32	s0, s13
 802d444:	eea6 0a25 	vfma.f32	s0, s12, s11
 802d448:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802d44c:	eddf 6a37 	vldr	s13, [pc, #220]	; 802d52c <__ieee754_rem_pio2f+0x24c>
 802d450:	eee6 7a25 	vfma.f32	s15, s12, s11
 802d454:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802d458:	ee30 7a67 	vsub.f32	s14, s0, s15
 802d45c:	ed84 7a00 	vstr	s14, [r4]
 802d460:	e7b4      	b.n	802d3cc <__ieee754_rem_pio2f+0xec>
 802d462:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802d466:	db06      	blt.n	802d476 <__ieee754_rem_pio2f+0x196>
 802d468:	ee70 7a40 	vsub.f32	s15, s0, s0
 802d46c:	edc0 7a01 	vstr	s15, [r0, #4]
 802d470:	edc0 7a00 	vstr	s15, [r0]
 802d474:	e742      	b.n	802d2fc <__ieee754_rem_pio2f+0x1c>
 802d476:	15ea      	asrs	r2, r5, #23
 802d478:	3a86      	subs	r2, #134	; 0x86
 802d47a:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802d47e:	ee07 3a90 	vmov	s15, r3
 802d482:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802d486:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802d530 <__ieee754_rem_pio2f+0x250>
 802d48a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802d48e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d492:	ed8d 7a03 	vstr	s14, [sp, #12]
 802d496:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802d49a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802d49e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802d4a2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d4a6:	ed8d 7a04 	vstr	s14, [sp, #16]
 802d4aa:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802d4ae:	eef5 7a40 	vcmp.f32	s15, #0.0
 802d4b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d4b6:	edcd 7a05 	vstr	s15, [sp, #20]
 802d4ba:	d11e      	bne.n	802d4fa <__ieee754_rem_pio2f+0x21a>
 802d4bc:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802d4c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d4c4:	bf14      	ite	ne
 802d4c6:	2302      	movne	r3, #2
 802d4c8:	2301      	moveq	r3, #1
 802d4ca:	491a      	ldr	r1, [pc, #104]	; (802d534 <__ieee754_rem_pio2f+0x254>)
 802d4cc:	9101      	str	r1, [sp, #4]
 802d4ce:	2102      	movs	r1, #2
 802d4d0:	9100      	str	r1, [sp, #0]
 802d4d2:	a803      	add	r0, sp, #12
 802d4d4:	4621      	mov	r1, r4
 802d4d6:	f000 f895 	bl	802d604 <__kernel_rem_pio2f>
 802d4da:	2e00      	cmp	r6, #0
 802d4dc:	f6bf af31 	bge.w	802d342 <__ieee754_rem_pio2f+0x62>
 802d4e0:	edd4 7a00 	vldr	s15, [r4]
 802d4e4:	eef1 7a67 	vneg.f32	s15, s15
 802d4e8:	edc4 7a00 	vstr	s15, [r4]
 802d4ec:	edd4 7a01 	vldr	s15, [r4, #4]
 802d4f0:	eef1 7a67 	vneg.f32	s15, s15
 802d4f4:	edc4 7a01 	vstr	s15, [r4, #4]
 802d4f8:	e77a      	b.n	802d3f0 <__ieee754_rem_pio2f+0x110>
 802d4fa:	2303      	movs	r3, #3
 802d4fc:	e7e5      	b.n	802d4ca <__ieee754_rem_pio2f+0x1ea>
 802d4fe:	bf00      	nop
 802d500:	3f490fd8 	.word	0x3f490fd8
 802d504:	4016cbe3 	.word	0x4016cbe3
 802d508:	3fc90f80 	.word	0x3fc90f80
 802d50c:	3fc90fd0 	.word	0x3fc90fd0
 802d510:	37354400 	.word	0x37354400
 802d514:	37354443 	.word	0x37354443
 802d518:	2e85a308 	.word	0x2e85a308
 802d51c:	43490f80 	.word	0x43490f80
 802d520:	3f22f984 	.word	0x3f22f984
 802d524:	080459a0 	.word	0x080459a0
 802d528:	2e85a300 	.word	0x2e85a300
 802d52c:	248d3132 	.word	0x248d3132
 802d530:	43800000 	.word	0x43800000
 802d534:	08045a20 	.word	0x08045a20

0802d538 <scalbnf>:
 802d538:	ee10 3a10 	vmov	r3, s0
 802d53c:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802d540:	d02b      	beq.n	802d59a <scalbnf+0x62>
 802d542:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802d546:	d302      	bcc.n	802d54e <scalbnf+0x16>
 802d548:	ee30 0a00 	vadd.f32	s0, s0, s0
 802d54c:	4770      	bx	lr
 802d54e:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802d552:	d123      	bne.n	802d59c <scalbnf+0x64>
 802d554:	4b24      	ldr	r3, [pc, #144]	; (802d5e8 <scalbnf+0xb0>)
 802d556:	eddf 7a25 	vldr	s15, [pc, #148]	; 802d5ec <scalbnf+0xb4>
 802d55a:	4298      	cmp	r0, r3
 802d55c:	ee20 0a27 	vmul.f32	s0, s0, s15
 802d560:	db17      	blt.n	802d592 <scalbnf+0x5a>
 802d562:	ee10 3a10 	vmov	r3, s0
 802d566:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802d56a:	3a19      	subs	r2, #25
 802d56c:	f24c 3150 	movw	r1, #50000	; 0xc350
 802d570:	4288      	cmp	r0, r1
 802d572:	dd15      	ble.n	802d5a0 <scalbnf+0x68>
 802d574:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802d5f0 <scalbnf+0xb8>
 802d578:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802d5f4 <scalbnf+0xbc>
 802d57c:	ee10 3a10 	vmov	r3, s0
 802d580:	eeb0 7a67 	vmov.f32	s14, s15
 802d584:	2b00      	cmp	r3, #0
 802d586:	bfb8      	it	lt
 802d588:	eef0 7a66 	vmovlt.f32	s15, s13
 802d58c:	ee27 0a87 	vmul.f32	s0, s15, s14
 802d590:	4770      	bx	lr
 802d592:	eddf 7a19 	vldr	s15, [pc, #100]	; 802d5f8 <scalbnf+0xc0>
 802d596:	ee27 0a80 	vmul.f32	s0, s15, s0
 802d59a:	4770      	bx	lr
 802d59c:	0dd2      	lsrs	r2, r2, #23
 802d59e:	e7e5      	b.n	802d56c <scalbnf+0x34>
 802d5a0:	4410      	add	r0, r2
 802d5a2:	28fe      	cmp	r0, #254	; 0xfe
 802d5a4:	dce6      	bgt.n	802d574 <scalbnf+0x3c>
 802d5a6:	2800      	cmp	r0, #0
 802d5a8:	dd06      	ble.n	802d5b8 <scalbnf+0x80>
 802d5aa:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802d5ae:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802d5b2:	ee00 3a10 	vmov	s0, r3
 802d5b6:	4770      	bx	lr
 802d5b8:	f110 0f16 	cmn.w	r0, #22
 802d5bc:	da09      	bge.n	802d5d2 <scalbnf+0x9a>
 802d5be:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802d5f8 <scalbnf+0xc0>
 802d5c2:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802d5fc <scalbnf+0xc4>
 802d5c6:	ee10 3a10 	vmov	r3, s0
 802d5ca:	eeb0 7a67 	vmov.f32	s14, s15
 802d5ce:	2b00      	cmp	r3, #0
 802d5d0:	e7d9      	b.n	802d586 <scalbnf+0x4e>
 802d5d2:	3019      	adds	r0, #25
 802d5d4:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802d5d8:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802d5dc:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802d600 <scalbnf+0xc8>
 802d5e0:	ee07 3a90 	vmov	s15, r3
 802d5e4:	e7d7      	b.n	802d596 <scalbnf+0x5e>
 802d5e6:	bf00      	nop
 802d5e8:	ffff3cb0 	.word	0xffff3cb0
 802d5ec:	4c000000 	.word	0x4c000000
 802d5f0:	7149f2ca 	.word	0x7149f2ca
 802d5f4:	f149f2ca 	.word	0xf149f2ca
 802d5f8:	0da24260 	.word	0x0da24260
 802d5fc:	8da24260 	.word	0x8da24260
 802d600:	33000000 	.word	0x33000000

0802d604 <__kernel_rem_pio2f>:
 802d604:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d608:	ed2d 8b04 	vpush	{d8-d9}
 802d60c:	b0d9      	sub	sp, #356	; 0x164
 802d60e:	4688      	mov	r8, r1
 802d610:	9002      	str	r0, [sp, #8]
 802d612:	49b8      	ldr	r1, [pc, #736]	; (802d8f4 <__kernel_rem_pio2f+0x2f0>)
 802d614:	9866      	ldr	r0, [sp, #408]	; 0x198
 802d616:	9301      	str	r3, [sp, #4]
 802d618:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802d61c:	9901      	ldr	r1, [sp, #4]
 802d61e:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802d620:	f101 3bff 	add.w	fp, r1, #4294967295
 802d624:	1d11      	adds	r1, r2, #4
 802d626:	db25      	blt.n	802d674 <__kernel_rem_pio2f+0x70>
 802d628:	1ed0      	subs	r0, r2, #3
 802d62a:	bf48      	it	mi
 802d62c:	1d10      	addmi	r0, r2, #4
 802d62e:	10c0      	asrs	r0, r0, #3
 802d630:	1c45      	adds	r5, r0, #1
 802d632:	00e9      	lsls	r1, r5, #3
 802d634:	eba0 070b 	sub.w	r7, r0, fp
 802d638:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802d904 <__kernel_rem_pio2f+0x300>
 802d63c:	9103      	str	r1, [sp, #12]
 802d63e:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802d642:	eb0a 0c0b 	add.w	ip, sl, fp
 802d646:	ae1c      	add	r6, sp, #112	; 0x70
 802d648:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802d64c:	2400      	movs	r4, #0
 802d64e:	4564      	cmp	r4, ip
 802d650:	dd12      	ble.n	802d678 <__kernel_rem_pio2f+0x74>
 802d652:	9901      	ldr	r1, [sp, #4]
 802d654:	ac1c      	add	r4, sp, #112	; 0x70
 802d656:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802d65a:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802d65e:	f04f 0c00 	mov.w	ip, #0
 802d662:	45d4      	cmp	ip, sl
 802d664:	dc27      	bgt.n	802d6b6 <__kernel_rem_pio2f+0xb2>
 802d666:	f8dd e008 	ldr.w	lr, [sp, #8]
 802d66a:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802d904 <__kernel_rem_pio2f+0x300>
 802d66e:	4627      	mov	r7, r4
 802d670:	2600      	movs	r6, #0
 802d672:	e016      	b.n	802d6a2 <__kernel_rem_pio2f+0x9e>
 802d674:	2000      	movs	r0, #0
 802d676:	e7db      	b.n	802d630 <__kernel_rem_pio2f+0x2c>
 802d678:	42e7      	cmn	r7, r4
 802d67a:	bf5d      	ittte	pl
 802d67c:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802d680:	ee07 1a90 	vmovpl	s15, r1
 802d684:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802d688:	eef0 7a47 	vmovmi.f32	s15, s14
 802d68c:	ece6 7a01 	vstmia	r6!, {s15}
 802d690:	3401      	adds	r4, #1
 802d692:	e7dc      	b.n	802d64e <__kernel_rem_pio2f+0x4a>
 802d694:	ecfe 6a01 	vldmia	lr!, {s13}
 802d698:	ed97 7a00 	vldr	s14, [r7]
 802d69c:	eee6 7a87 	vfma.f32	s15, s13, s14
 802d6a0:	3601      	adds	r6, #1
 802d6a2:	455e      	cmp	r6, fp
 802d6a4:	f1a7 0704 	sub.w	r7, r7, #4
 802d6a8:	ddf4      	ble.n	802d694 <__kernel_rem_pio2f+0x90>
 802d6aa:	ece9 7a01 	vstmia	r9!, {s15}
 802d6ae:	f10c 0c01 	add.w	ip, ip, #1
 802d6b2:	3404      	adds	r4, #4
 802d6b4:	e7d5      	b.n	802d662 <__kernel_rem_pio2f+0x5e>
 802d6b6:	a908      	add	r1, sp, #32
 802d6b8:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802d6bc:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802d6c0:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802d900 <__kernel_rem_pio2f+0x2fc>
 802d6c4:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802d8fc <__kernel_rem_pio2f+0x2f8>
 802d6c8:	9105      	str	r1, [sp, #20]
 802d6ca:	9304      	str	r3, [sp, #16]
 802d6cc:	4656      	mov	r6, sl
 802d6ce:	00b3      	lsls	r3, r6, #2
 802d6d0:	9306      	str	r3, [sp, #24]
 802d6d2:	ab58      	add	r3, sp, #352	; 0x160
 802d6d4:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802d6d8:	ac08      	add	r4, sp, #32
 802d6da:	ab44      	add	r3, sp, #272	; 0x110
 802d6dc:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802d6e0:	46a4      	mov	ip, r4
 802d6e2:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802d6e6:	4637      	mov	r7, r6
 802d6e8:	2f00      	cmp	r7, #0
 802d6ea:	f1a0 0004 	sub.w	r0, r0, #4
 802d6ee:	dc4a      	bgt.n	802d786 <__kernel_rem_pio2f+0x182>
 802d6f0:	4628      	mov	r0, r5
 802d6f2:	9207      	str	r2, [sp, #28]
 802d6f4:	f7ff ff20 	bl	802d538 <scalbnf>
 802d6f8:	eeb0 8a40 	vmov.f32	s16, s0
 802d6fc:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802d700:	ee28 0a00 	vmul.f32	s0, s16, s0
 802d704:	f7ff fd04 	bl	802d110 <floorf>
 802d708:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802d70c:	eea0 8a67 	vfms.f32	s16, s0, s15
 802d710:	2d00      	cmp	r5, #0
 802d712:	9a07      	ldr	r2, [sp, #28]
 802d714:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802d718:	ee17 9a90 	vmov	r9, s15
 802d71c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d720:	ee38 8a67 	vsub.f32	s16, s16, s15
 802d724:	dd41      	ble.n	802d7aa <__kernel_rem_pio2f+0x1a6>
 802d726:	f106 3cff 	add.w	ip, r6, #4294967295
 802d72a:	ab08      	add	r3, sp, #32
 802d72c:	f1c5 0e08 	rsb	lr, r5, #8
 802d730:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802d734:	fa47 f00e 	asr.w	r0, r7, lr
 802d738:	4481      	add	r9, r0
 802d73a:	fa00 f00e 	lsl.w	r0, r0, lr
 802d73e:	1a3f      	subs	r7, r7, r0
 802d740:	f1c5 0007 	rsb	r0, r5, #7
 802d744:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802d748:	4107      	asrs	r7, r0
 802d74a:	2f00      	cmp	r7, #0
 802d74c:	dd3c      	ble.n	802d7c8 <__kernel_rem_pio2f+0x1c4>
 802d74e:	f04f 0e00 	mov.w	lr, #0
 802d752:	f109 0901 	add.w	r9, r9, #1
 802d756:	4671      	mov	r1, lr
 802d758:	4576      	cmp	r6, lr
 802d75a:	dc67      	bgt.n	802d82c <__kernel_rem_pio2f+0x228>
 802d75c:	2d00      	cmp	r5, #0
 802d75e:	dd03      	ble.n	802d768 <__kernel_rem_pio2f+0x164>
 802d760:	2d01      	cmp	r5, #1
 802d762:	d074      	beq.n	802d84e <__kernel_rem_pio2f+0x24a>
 802d764:	2d02      	cmp	r5, #2
 802d766:	d07b      	beq.n	802d860 <__kernel_rem_pio2f+0x25c>
 802d768:	2f02      	cmp	r7, #2
 802d76a:	d12d      	bne.n	802d7c8 <__kernel_rem_pio2f+0x1c4>
 802d76c:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802d770:	ee30 8a48 	vsub.f32	s16, s0, s16
 802d774:	b341      	cbz	r1, 802d7c8 <__kernel_rem_pio2f+0x1c4>
 802d776:	4628      	mov	r0, r5
 802d778:	9207      	str	r2, [sp, #28]
 802d77a:	f7ff fedd 	bl	802d538 <scalbnf>
 802d77e:	9a07      	ldr	r2, [sp, #28]
 802d780:	ee38 8a40 	vsub.f32	s16, s16, s0
 802d784:	e020      	b.n	802d7c8 <__kernel_rem_pio2f+0x1c4>
 802d786:	ee60 7a28 	vmul.f32	s15, s0, s17
 802d78a:	3f01      	subs	r7, #1
 802d78c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d790:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d794:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802d798:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802d79c:	ecac 0a01 	vstmia	ip!, {s0}
 802d7a0:	ed90 0a00 	vldr	s0, [r0]
 802d7a4:	ee37 0a80 	vadd.f32	s0, s15, s0
 802d7a8:	e79e      	b.n	802d6e8 <__kernel_rem_pio2f+0xe4>
 802d7aa:	d105      	bne.n	802d7b8 <__kernel_rem_pio2f+0x1b4>
 802d7ac:	1e70      	subs	r0, r6, #1
 802d7ae:	ab08      	add	r3, sp, #32
 802d7b0:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802d7b4:	11ff      	asrs	r7, r7, #7
 802d7b6:	e7c8      	b.n	802d74a <__kernel_rem_pio2f+0x146>
 802d7b8:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802d7bc:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802d7c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d7c4:	da30      	bge.n	802d828 <__kernel_rem_pio2f+0x224>
 802d7c6:	2700      	movs	r7, #0
 802d7c8:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802d7cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d7d0:	f040 809a 	bne.w	802d908 <__kernel_rem_pio2f+0x304>
 802d7d4:	1e74      	subs	r4, r6, #1
 802d7d6:	46a4      	mov	ip, r4
 802d7d8:	2100      	movs	r1, #0
 802d7da:	45d4      	cmp	ip, sl
 802d7dc:	da47      	bge.n	802d86e <__kernel_rem_pio2f+0x26a>
 802d7de:	2900      	cmp	r1, #0
 802d7e0:	d063      	beq.n	802d8aa <__kernel_rem_pio2f+0x2a6>
 802d7e2:	ab08      	add	r3, sp, #32
 802d7e4:	3d08      	subs	r5, #8
 802d7e6:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802d7ea:	2b00      	cmp	r3, #0
 802d7ec:	d07f      	beq.n	802d8ee <__kernel_rem_pio2f+0x2ea>
 802d7ee:	4628      	mov	r0, r5
 802d7f0:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802d7f4:	f7ff fea0 	bl	802d538 <scalbnf>
 802d7f8:	1c63      	adds	r3, r4, #1
 802d7fa:	aa44      	add	r2, sp, #272	; 0x110
 802d7fc:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802d900 <__kernel_rem_pio2f+0x2fc>
 802d800:	0099      	lsls	r1, r3, #2
 802d802:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802d806:	4623      	mov	r3, r4
 802d808:	2b00      	cmp	r3, #0
 802d80a:	f280 80ad 	bge.w	802d968 <__kernel_rem_pio2f+0x364>
 802d80e:	4623      	mov	r3, r4
 802d810:	2b00      	cmp	r3, #0
 802d812:	f2c0 80cb 	blt.w	802d9ac <__kernel_rem_pio2f+0x3a8>
 802d816:	aa44      	add	r2, sp, #272	; 0x110
 802d818:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802d81c:	4e36      	ldr	r6, [pc, #216]	; (802d8f8 <__kernel_rem_pio2f+0x2f4>)
 802d81e:	eddf 7a39 	vldr	s15, [pc, #228]	; 802d904 <__kernel_rem_pio2f+0x300>
 802d822:	2000      	movs	r0, #0
 802d824:	1ae2      	subs	r2, r4, r3
 802d826:	e0b6      	b.n	802d996 <__kernel_rem_pio2f+0x392>
 802d828:	2702      	movs	r7, #2
 802d82a:	e790      	b.n	802d74e <__kernel_rem_pio2f+0x14a>
 802d82c:	6820      	ldr	r0, [r4, #0]
 802d82e:	b949      	cbnz	r1, 802d844 <__kernel_rem_pio2f+0x240>
 802d830:	b118      	cbz	r0, 802d83a <__kernel_rem_pio2f+0x236>
 802d832:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802d836:	6020      	str	r0, [r4, #0]
 802d838:	2001      	movs	r0, #1
 802d83a:	f10e 0e01 	add.w	lr, lr, #1
 802d83e:	3404      	adds	r4, #4
 802d840:	4601      	mov	r1, r0
 802d842:	e789      	b.n	802d758 <__kernel_rem_pio2f+0x154>
 802d844:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802d848:	6020      	str	r0, [r4, #0]
 802d84a:	4608      	mov	r0, r1
 802d84c:	e7f5      	b.n	802d83a <__kernel_rem_pio2f+0x236>
 802d84e:	1e74      	subs	r4, r6, #1
 802d850:	ab08      	add	r3, sp, #32
 802d852:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802d856:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802d85a:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802d85e:	e783      	b.n	802d768 <__kernel_rem_pio2f+0x164>
 802d860:	1e74      	subs	r4, r6, #1
 802d862:	ab08      	add	r3, sp, #32
 802d864:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802d868:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802d86c:	e7f5      	b.n	802d85a <__kernel_rem_pio2f+0x256>
 802d86e:	ab08      	add	r3, sp, #32
 802d870:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802d874:	f10c 3cff 	add.w	ip, ip, #4294967295
 802d878:	4301      	orrs	r1, r0
 802d87a:	e7ae      	b.n	802d7da <__kernel_rem_pio2f+0x1d6>
 802d87c:	3001      	adds	r0, #1
 802d87e:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802d882:	2f00      	cmp	r7, #0
 802d884:	d0fa      	beq.n	802d87c <__kernel_rem_pio2f+0x278>
 802d886:	9b06      	ldr	r3, [sp, #24]
 802d888:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802d88c:	eb0d 0403 	add.w	r4, sp, r3
 802d890:	9b01      	ldr	r3, [sp, #4]
 802d892:	18f7      	adds	r7, r6, r3
 802d894:	ab1c      	add	r3, sp, #112	; 0x70
 802d896:	f106 0c01 	add.w	ip, r6, #1
 802d89a:	3c4c      	subs	r4, #76	; 0x4c
 802d89c:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802d8a0:	4430      	add	r0, r6
 802d8a2:	4560      	cmp	r0, ip
 802d8a4:	da04      	bge.n	802d8b0 <__kernel_rem_pio2f+0x2ac>
 802d8a6:	4606      	mov	r6, r0
 802d8a8:	e711      	b.n	802d6ce <__kernel_rem_pio2f+0xca>
 802d8aa:	9c05      	ldr	r4, [sp, #20]
 802d8ac:	2001      	movs	r0, #1
 802d8ae:	e7e6      	b.n	802d87e <__kernel_rem_pio2f+0x27a>
 802d8b0:	9b04      	ldr	r3, [sp, #16]
 802d8b2:	f8dd e008 	ldr.w	lr, [sp, #8]
 802d8b6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802d8ba:	9306      	str	r3, [sp, #24]
 802d8bc:	ee07 3a90 	vmov	s15, r3
 802d8c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d8c4:	2600      	movs	r6, #0
 802d8c6:	ece7 7a01 	vstmia	r7!, {s15}
 802d8ca:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802d904 <__kernel_rem_pio2f+0x300>
 802d8ce:	46b9      	mov	r9, r7
 802d8d0:	455e      	cmp	r6, fp
 802d8d2:	dd04      	ble.n	802d8de <__kernel_rem_pio2f+0x2da>
 802d8d4:	ece4 7a01 	vstmia	r4!, {s15}
 802d8d8:	f10c 0c01 	add.w	ip, ip, #1
 802d8dc:	e7e1      	b.n	802d8a2 <__kernel_rem_pio2f+0x29e>
 802d8de:	ecfe 6a01 	vldmia	lr!, {s13}
 802d8e2:	ed39 7a01 	vldmdb	r9!, {s14}
 802d8e6:	3601      	adds	r6, #1
 802d8e8:	eee6 7a87 	vfma.f32	s15, s13, s14
 802d8ec:	e7f0      	b.n	802d8d0 <__kernel_rem_pio2f+0x2cc>
 802d8ee:	3c01      	subs	r4, #1
 802d8f0:	e777      	b.n	802d7e2 <__kernel_rem_pio2f+0x1de>
 802d8f2:	bf00      	nop
 802d8f4:	08045d64 	.word	0x08045d64
 802d8f8:	08045d38 	.word	0x08045d38
 802d8fc:	43800000 	.word	0x43800000
 802d900:	3b800000 	.word	0x3b800000
 802d904:	00000000 	.word	0x00000000
 802d908:	9b03      	ldr	r3, [sp, #12]
 802d90a:	eeb0 0a48 	vmov.f32	s0, s16
 802d90e:	1a98      	subs	r0, r3, r2
 802d910:	f7ff fe12 	bl	802d538 <scalbnf>
 802d914:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802d8fc <__kernel_rem_pio2f+0x2f8>
 802d918:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802d91c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d920:	db19      	blt.n	802d956 <__kernel_rem_pio2f+0x352>
 802d922:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802d900 <__kernel_rem_pio2f+0x2fc>
 802d926:	ee60 7a27 	vmul.f32	s15, s0, s15
 802d92a:	aa08      	add	r2, sp, #32
 802d92c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d930:	1c74      	adds	r4, r6, #1
 802d932:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d936:	3508      	adds	r5, #8
 802d938:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802d93c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d940:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802d944:	ee10 3a10 	vmov	r3, s0
 802d948:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802d94c:	ee17 3a90 	vmov	r3, s15
 802d950:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802d954:	e74b      	b.n	802d7ee <__kernel_rem_pio2f+0x1ea>
 802d956:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802d95a:	aa08      	add	r2, sp, #32
 802d95c:	ee10 3a10 	vmov	r3, s0
 802d960:	4634      	mov	r4, r6
 802d962:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802d966:	e742      	b.n	802d7ee <__kernel_rem_pio2f+0x1ea>
 802d968:	a808      	add	r0, sp, #32
 802d96a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802d96e:	9001      	str	r0, [sp, #4]
 802d970:	ee07 0a90 	vmov	s15, r0
 802d974:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d978:	3b01      	subs	r3, #1
 802d97a:	ee67 7a80 	vmul.f32	s15, s15, s0
 802d97e:	ee20 0a07 	vmul.f32	s0, s0, s14
 802d982:	ed62 7a01 	vstmdb	r2!, {s15}
 802d986:	e73f      	b.n	802d808 <__kernel_rem_pio2f+0x204>
 802d988:	ecf6 6a01 	vldmia	r6!, {s13}
 802d98c:	ecb5 7a01 	vldmia	r5!, {s14}
 802d990:	eee6 7a87 	vfma.f32	s15, s13, s14
 802d994:	3001      	adds	r0, #1
 802d996:	4550      	cmp	r0, sl
 802d998:	dc01      	bgt.n	802d99e <__kernel_rem_pio2f+0x39a>
 802d99a:	4290      	cmp	r0, r2
 802d99c:	ddf4      	ble.n	802d988 <__kernel_rem_pio2f+0x384>
 802d99e:	a858      	add	r0, sp, #352	; 0x160
 802d9a0:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802d9a4:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802d9a8:	3b01      	subs	r3, #1
 802d9aa:	e731      	b.n	802d810 <__kernel_rem_pio2f+0x20c>
 802d9ac:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802d9ae:	2b02      	cmp	r3, #2
 802d9b0:	dc09      	bgt.n	802d9c6 <__kernel_rem_pio2f+0x3c2>
 802d9b2:	2b00      	cmp	r3, #0
 802d9b4:	dc2b      	bgt.n	802da0e <__kernel_rem_pio2f+0x40a>
 802d9b6:	d044      	beq.n	802da42 <__kernel_rem_pio2f+0x43e>
 802d9b8:	f009 0007 	and.w	r0, r9, #7
 802d9bc:	b059      	add	sp, #356	; 0x164
 802d9be:	ecbd 8b04 	vpop	{d8-d9}
 802d9c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d9c6:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802d9c8:	2b03      	cmp	r3, #3
 802d9ca:	d1f5      	bne.n	802d9b8 <__kernel_rem_pio2f+0x3b4>
 802d9cc:	aa30      	add	r2, sp, #192	; 0xc0
 802d9ce:	1f0b      	subs	r3, r1, #4
 802d9d0:	4413      	add	r3, r2
 802d9d2:	461a      	mov	r2, r3
 802d9d4:	4620      	mov	r0, r4
 802d9d6:	2800      	cmp	r0, #0
 802d9d8:	f1a2 0204 	sub.w	r2, r2, #4
 802d9dc:	dc52      	bgt.n	802da84 <__kernel_rem_pio2f+0x480>
 802d9de:	4622      	mov	r2, r4
 802d9e0:	2a01      	cmp	r2, #1
 802d9e2:	f1a3 0304 	sub.w	r3, r3, #4
 802d9e6:	dc5d      	bgt.n	802daa4 <__kernel_rem_pio2f+0x4a0>
 802d9e8:	ab30      	add	r3, sp, #192	; 0xc0
 802d9ea:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802d904 <__kernel_rem_pio2f+0x300>
 802d9ee:	440b      	add	r3, r1
 802d9f0:	2c01      	cmp	r4, #1
 802d9f2:	dc67      	bgt.n	802dac4 <__kernel_rem_pio2f+0x4c0>
 802d9f4:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802d9f8:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802d9fc:	2f00      	cmp	r7, #0
 802d9fe:	d167      	bne.n	802dad0 <__kernel_rem_pio2f+0x4cc>
 802da00:	edc8 6a00 	vstr	s13, [r8]
 802da04:	ed88 7a01 	vstr	s14, [r8, #4]
 802da08:	edc8 7a02 	vstr	s15, [r8, #8]
 802da0c:	e7d4      	b.n	802d9b8 <__kernel_rem_pio2f+0x3b4>
 802da0e:	ab30      	add	r3, sp, #192	; 0xc0
 802da10:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802d904 <__kernel_rem_pio2f+0x300>
 802da14:	440b      	add	r3, r1
 802da16:	4622      	mov	r2, r4
 802da18:	2a00      	cmp	r2, #0
 802da1a:	da24      	bge.n	802da66 <__kernel_rem_pio2f+0x462>
 802da1c:	b34f      	cbz	r7, 802da72 <__kernel_rem_pio2f+0x46e>
 802da1e:	eef1 7a47 	vneg.f32	s15, s14
 802da22:	edc8 7a00 	vstr	s15, [r8]
 802da26:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802da2a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802da2e:	aa31      	add	r2, sp, #196	; 0xc4
 802da30:	2301      	movs	r3, #1
 802da32:	429c      	cmp	r4, r3
 802da34:	da20      	bge.n	802da78 <__kernel_rem_pio2f+0x474>
 802da36:	b10f      	cbz	r7, 802da3c <__kernel_rem_pio2f+0x438>
 802da38:	eef1 7a67 	vneg.f32	s15, s15
 802da3c:	edc8 7a01 	vstr	s15, [r8, #4]
 802da40:	e7ba      	b.n	802d9b8 <__kernel_rem_pio2f+0x3b4>
 802da42:	ab30      	add	r3, sp, #192	; 0xc0
 802da44:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802d904 <__kernel_rem_pio2f+0x300>
 802da48:	440b      	add	r3, r1
 802da4a:	2c00      	cmp	r4, #0
 802da4c:	da05      	bge.n	802da5a <__kernel_rem_pio2f+0x456>
 802da4e:	b10f      	cbz	r7, 802da54 <__kernel_rem_pio2f+0x450>
 802da50:	eef1 7a67 	vneg.f32	s15, s15
 802da54:	edc8 7a00 	vstr	s15, [r8]
 802da58:	e7ae      	b.n	802d9b8 <__kernel_rem_pio2f+0x3b4>
 802da5a:	ed33 7a01 	vldmdb	r3!, {s14}
 802da5e:	3c01      	subs	r4, #1
 802da60:	ee77 7a87 	vadd.f32	s15, s15, s14
 802da64:	e7f1      	b.n	802da4a <__kernel_rem_pio2f+0x446>
 802da66:	ed73 7a01 	vldmdb	r3!, {s15}
 802da6a:	3a01      	subs	r2, #1
 802da6c:	ee37 7a27 	vadd.f32	s14, s14, s15
 802da70:	e7d2      	b.n	802da18 <__kernel_rem_pio2f+0x414>
 802da72:	eef0 7a47 	vmov.f32	s15, s14
 802da76:	e7d4      	b.n	802da22 <__kernel_rem_pio2f+0x41e>
 802da78:	ecb2 7a01 	vldmia	r2!, {s14}
 802da7c:	3301      	adds	r3, #1
 802da7e:	ee77 7a87 	vadd.f32	s15, s15, s14
 802da82:	e7d6      	b.n	802da32 <__kernel_rem_pio2f+0x42e>
 802da84:	edd2 7a00 	vldr	s15, [r2]
 802da88:	edd2 6a01 	vldr	s13, [r2, #4]
 802da8c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802da90:	3801      	subs	r0, #1
 802da92:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802da96:	ed82 7a00 	vstr	s14, [r2]
 802da9a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802da9e:	edc2 7a01 	vstr	s15, [r2, #4]
 802daa2:	e798      	b.n	802d9d6 <__kernel_rem_pio2f+0x3d2>
 802daa4:	edd3 7a00 	vldr	s15, [r3]
 802daa8:	edd3 6a01 	vldr	s13, [r3, #4]
 802daac:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802dab0:	3a01      	subs	r2, #1
 802dab2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802dab6:	ed83 7a00 	vstr	s14, [r3]
 802daba:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802dabe:	edc3 7a01 	vstr	s15, [r3, #4]
 802dac2:	e78d      	b.n	802d9e0 <__kernel_rem_pio2f+0x3dc>
 802dac4:	ed33 7a01 	vldmdb	r3!, {s14}
 802dac8:	3c01      	subs	r4, #1
 802daca:	ee77 7a87 	vadd.f32	s15, s15, s14
 802dace:	e78f      	b.n	802d9f0 <__kernel_rem_pio2f+0x3ec>
 802dad0:	eef1 6a66 	vneg.f32	s13, s13
 802dad4:	eeb1 7a47 	vneg.f32	s14, s14
 802dad8:	edc8 6a00 	vstr	s13, [r8]
 802dadc:	ed88 7a01 	vstr	s14, [r8, #4]
 802dae0:	eef1 7a67 	vneg.f32	s15, s15
 802dae4:	e790      	b.n	802da08 <__kernel_rem_pio2f+0x404>
 802dae6:	bf00      	nop

0802dae8 <abort>:
 802dae8:	b508      	push	{r3, lr}
 802daea:	2006      	movs	r0, #6
 802daec:	f000 fa3a 	bl	802df64 <raise>
 802daf0:	2001      	movs	r0, #1
 802daf2:	f7d4 ff65 	bl	80029c0 <_exit>
	...

0802daf8 <__assert_func>:
 802daf8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802dafa:	4614      	mov	r4, r2
 802dafc:	461a      	mov	r2, r3
 802dafe:	4b09      	ldr	r3, [pc, #36]	; (802db24 <__assert_func+0x2c>)
 802db00:	681b      	ldr	r3, [r3, #0]
 802db02:	4605      	mov	r5, r0
 802db04:	68d8      	ldr	r0, [r3, #12]
 802db06:	b14c      	cbz	r4, 802db1c <__assert_func+0x24>
 802db08:	4b07      	ldr	r3, [pc, #28]	; (802db28 <__assert_func+0x30>)
 802db0a:	9100      	str	r1, [sp, #0]
 802db0c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802db10:	4906      	ldr	r1, [pc, #24]	; (802db2c <__assert_func+0x34>)
 802db12:	462b      	mov	r3, r5
 802db14:	f000 f982 	bl	802de1c <fiprintf>
 802db18:	f7ff ffe6 	bl	802dae8 <abort>
 802db1c:	4b04      	ldr	r3, [pc, #16]	; (802db30 <__assert_func+0x38>)
 802db1e:	461c      	mov	r4, r3
 802db20:	e7f3      	b.n	802db0a <__assert_func+0x12>
 802db22:	bf00      	nop
 802db24:	20000160 	.word	0x20000160
 802db28:	08045d70 	.word	0x08045d70
 802db2c:	08045d7d 	.word	0x08045d7d
 802db30:	08045dab 	.word	0x08045dab

0802db34 <atexit>:
 802db34:	2300      	movs	r3, #0
 802db36:	4601      	mov	r1, r0
 802db38:	461a      	mov	r2, r3
 802db3a:	4618      	mov	r0, r3
 802db3c:	f000 bb16 	b.w	802e16c <__register_exitproc>

0802db40 <malloc>:
 802db40:	4b02      	ldr	r3, [pc, #8]	; (802db4c <malloc+0xc>)
 802db42:	4601      	mov	r1, r0
 802db44:	6818      	ldr	r0, [r3, #0]
 802db46:	f000 b82b 	b.w	802dba0 <_malloc_r>
 802db4a:	bf00      	nop
 802db4c:	20000160 	.word	0x20000160

0802db50 <free>:
 802db50:	4b02      	ldr	r3, [pc, #8]	; (802db5c <free+0xc>)
 802db52:	4601      	mov	r1, r0
 802db54:	6818      	ldr	r0, [r3, #0]
 802db56:	f000 bb67 	b.w	802e228 <_free_r>
 802db5a:	bf00      	nop
 802db5c:	20000160 	.word	0x20000160

0802db60 <sbrk_aligned>:
 802db60:	b570      	push	{r4, r5, r6, lr}
 802db62:	4e0e      	ldr	r6, [pc, #56]	; (802db9c <sbrk_aligned+0x3c>)
 802db64:	460c      	mov	r4, r1
 802db66:	6831      	ldr	r1, [r6, #0]
 802db68:	4605      	mov	r5, r0
 802db6a:	b911      	cbnz	r1, 802db72 <sbrk_aligned+0x12>
 802db6c:	f000 faa0 	bl	802e0b0 <_sbrk_r>
 802db70:	6030      	str	r0, [r6, #0]
 802db72:	4621      	mov	r1, r4
 802db74:	4628      	mov	r0, r5
 802db76:	f000 fa9b 	bl	802e0b0 <_sbrk_r>
 802db7a:	1c43      	adds	r3, r0, #1
 802db7c:	d00a      	beq.n	802db94 <sbrk_aligned+0x34>
 802db7e:	1cc4      	adds	r4, r0, #3
 802db80:	f024 0403 	bic.w	r4, r4, #3
 802db84:	42a0      	cmp	r0, r4
 802db86:	d007      	beq.n	802db98 <sbrk_aligned+0x38>
 802db88:	1a21      	subs	r1, r4, r0
 802db8a:	4628      	mov	r0, r5
 802db8c:	f000 fa90 	bl	802e0b0 <_sbrk_r>
 802db90:	3001      	adds	r0, #1
 802db92:	d101      	bne.n	802db98 <sbrk_aligned+0x38>
 802db94:	f04f 34ff 	mov.w	r4, #4294967295
 802db98:	4620      	mov	r0, r4
 802db9a:	bd70      	pop	{r4, r5, r6, pc}
 802db9c:	200141a4 	.word	0x200141a4

0802dba0 <_malloc_r>:
 802dba0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802dba4:	1ccd      	adds	r5, r1, #3
 802dba6:	f025 0503 	bic.w	r5, r5, #3
 802dbaa:	3508      	adds	r5, #8
 802dbac:	2d0c      	cmp	r5, #12
 802dbae:	bf38      	it	cc
 802dbb0:	250c      	movcc	r5, #12
 802dbb2:	2d00      	cmp	r5, #0
 802dbb4:	4607      	mov	r7, r0
 802dbb6:	db01      	blt.n	802dbbc <_malloc_r+0x1c>
 802dbb8:	42a9      	cmp	r1, r5
 802dbba:	d905      	bls.n	802dbc8 <_malloc_r+0x28>
 802dbbc:	230c      	movs	r3, #12
 802dbbe:	603b      	str	r3, [r7, #0]
 802dbc0:	2600      	movs	r6, #0
 802dbc2:	4630      	mov	r0, r6
 802dbc4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802dbc8:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802dc9c <_malloc_r+0xfc>
 802dbcc:	f000 f868 	bl	802dca0 <__malloc_lock>
 802dbd0:	f8d8 3000 	ldr.w	r3, [r8]
 802dbd4:	461c      	mov	r4, r3
 802dbd6:	bb5c      	cbnz	r4, 802dc30 <_malloc_r+0x90>
 802dbd8:	4629      	mov	r1, r5
 802dbda:	4638      	mov	r0, r7
 802dbdc:	f7ff ffc0 	bl	802db60 <sbrk_aligned>
 802dbe0:	1c43      	adds	r3, r0, #1
 802dbe2:	4604      	mov	r4, r0
 802dbe4:	d155      	bne.n	802dc92 <_malloc_r+0xf2>
 802dbe6:	f8d8 4000 	ldr.w	r4, [r8]
 802dbea:	4626      	mov	r6, r4
 802dbec:	2e00      	cmp	r6, #0
 802dbee:	d145      	bne.n	802dc7c <_malloc_r+0xdc>
 802dbf0:	2c00      	cmp	r4, #0
 802dbf2:	d048      	beq.n	802dc86 <_malloc_r+0xe6>
 802dbf4:	6823      	ldr	r3, [r4, #0]
 802dbf6:	4631      	mov	r1, r6
 802dbf8:	4638      	mov	r0, r7
 802dbfa:	eb04 0903 	add.w	r9, r4, r3
 802dbfe:	f000 fa57 	bl	802e0b0 <_sbrk_r>
 802dc02:	4581      	cmp	r9, r0
 802dc04:	d13f      	bne.n	802dc86 <_malloc_r+0xe6>
 802dc06:	6821      	ldr	r1, [r4, #0]
 802dc08:	1a6d      	subs	r5, r5, r1
 802dc0a:	4629      	mov	r1, r5
 802dc0c:	4638      	mov	r0, r7
 802dc0e:	f7ff ffa7 	bl	802db60 <sbrk_aligned>
 802dc12:	3001      	adds	r0, #1
 802dc14:	d037      	beq.n	802dc86 <_malloc_r+0xe6>
 802dc16:	6823      	ldr	r3, [r4, #0]
 802dc18:	442b      	add	r3, r5
 802dc1a:	6023      	str	r3, [r4, #0]
 802dc1c:	f8d8 3000 	ldr.w	r3, [r8]
 802dc20:	2b00      	cmp	r3, #0
 802dc22:	d038      	beq.n	802dc96 <_malloc_r+0xf6>
 802dc24:	685a      	ldr	r2, [r3, #4]
 802dc26:	42a2      	cmp	r2, r4
 802dc28:	d12b      	bne.n	802dc82 <_malloc_r+0xe2>
 802dc2a:	2200      	movs	r2, #0
 802dc2c:	605a      	str	r2, [r3, #4]
 802dc2e:	e00f      	b.n	802dc50 <_malloc_r+0xb0>
 802dc30:	6822      	ldr	r2, [r4, #0]
 802dc32:	1b52      	subs	r2, r2, r5
 802dc34:	d41f      	bmi.n	802dc76 <_malloc_r+0xd6>
 802dc36:	2a0b      	cmp	r2, #11
 802dc38:	d917      	bls.n	802dc6a <_malloc_r+0xca>
 802dc3a:	1961      	adds	r1, r4, r5
 802dc3c:	42a3      	cmp	r3, r4
 802dc3e:	6025      	str	r5, [r4, #0]
 802dc40:	bf18      	it	ne
 802dc42:	6059      	strne	r1, [r3, #4]
 802dc44:	6863      	ldr	r3, [r4, #4]
 802dc46:	bf08      	it	eq
 802dc48:	f8c8 1000 	streq.w	r1, [r8]
 802dc4c:	5162      	str	r2, [r4, r5]
 802dc4e:	604b      	str	r3, [r1, #4]
 802dc50:	4638      	mov	r0, r7
 802dc52:	f104 060b 	add.w	r6, r4, #11
 802dc56:	f000 f829 	bl	802dcac <__malloc_unlock>
 802dc5a:	f026 0607 	bic.w	r6, r6, #7
 802dc5e:	1d23      	adds	r3, r4, #4
 802dc60:	1af2      	subs	r2, r6, r3
 802dc62:	d0ae      	beq.n	802dbc2 <_malloc_r+0x22>
 802dc64:	1b9b      	subs	r3, r3, r6
 802dc66:	50a3      	str	r3, [r4, r2]
 802dc68:	e7ab      	b.n	802dbc2 <_malloc_r+0x22>
 802dc6a:	42a3      	cmp	r3, r4
 802dc6c:	6862      	ldr	r2, [r4, #4]
 802dc6e:	d1dd      	bne.n	802dc2c <_malloc_r+0x8c>
 802dc70:	f8c8 2000 	str.w	r2, [r8]
 802dc74:	e7ec      	b.n	802dc50 <_malloc_r+0xb0>
 802dc76:	4623      	mov	r3, r4
 802dc78:	6864      	ldr	r4, [r4, #4]
 802dc7a:	e7ac      	b.n	802dbd6 <_malloc_r+0x36>
 802dc7c:	4634      	mov	r4, r6
 802dc7e:	6876      	ldr	r6, [r6, #4]
 802dc80:	e7b4      	b.n	802dbec <_malloc_r+0x4c>
 802dc82:	4613      	mov	r3, r2
 802dc84:	e7cc      	b.n	802dc20 <_malloc_r+0x80>
 802dc86:	230c      	movs	r3, #12
 802dc88:	603b      	str	r3, [r7, #0]
 802dc8a:	4638      	mov	r0, r7
 802dc8c:	f000 f80e 	bl	802dcac <__malloc_unlock>
 802dc90:	e797      	b.n	802dbc2 <_malloc_r+0x22>
 802dc92:	6025      	str	r5, [r4, #0]
 802dc94:	e7dc      	b.n	802dc50 <_malloc_r+0xb0>
 802dc96:	605b      	str	r3, [r3, #4]
 802dc98:	deff      	udf	#255	; 0xff
 802dc9a:	bf00      	nop
 802dc9c:	200141a0 	.word	0x200141a0

0802dca0 <__malloc_lock>:
 802dca0:	4801      	ldr	r0, [pc, #4]	; (802dca8 <__malloc_lock+0x8>)
 802dca2:	f000 ba52 	b.w	802e14a <__retarget_lock_acquire_recursive>
 802dca6:	bf00      	nop
 802dca8:	200142e9 	.word	0x200142e9

0802dcac <__malloc_unlock>:
 802dcac:	4801      	ldr	r0, [pc, #4]	; (802dcb4 <__malloc_unlock+0x8>)
 802dcae:	f000 ba4d 	b.w	802e14c <__retarget_lock_release_recursive>
 802dcb2:	bf00      	nop
 802dcb4:	200142e9 	.word	0x200142e9

0802dcb8 <__cxa_atexit>:
 802dcb8:	b510      	push	{r4, lr}
 802dcba:	4c05      	ldr	r4, [pc, #20]	; (802dcd0 <__cxa_atexit+0x18>)
 802dcbc:	4613      	mov	r3, r2
 802dcbe:	b12c      	cbz	r4, 802dccc <__cxa_atexit+0x14>
 802dcc0:	460a      	mov	r2, r1
 802dcc2:	4601      	mov	r1, r0
 802dcc4:	2002      	movs	r0, #2
 802dcc6:	f000 fa51 	bl	802e16c <__register_exitproc>
 802dcca:	bd10      	pop	{r4, pc}
 802dccc:	4620      	mov	r0, r4
 802dcce:	e7fc      	b.n	802dcca <__cxa_atexit+0x12>
 802dcd0:	0802e16d 	.word	0x0802e16d

0802dcd4 <std>:
 802dcd4:	2300      	movs	r3, #0
 802dcd6:	b510      	push	{r4, lr}
 802dcd8:	4604      	mov	r4, r0
 802dcda:	e9c0 3300 	strd	r3, r3, [r0]
 802dcde:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802dce2:	6083      	str	r3, [r0, #8]
 802dce4:	8181      	strh	r1, [r0, #12]
 802dce6:	6643      	str	r3, [r0, #100]	; 0x64
 802dce8:	81c2      	strh	r2, [r0, #14]
 802dcea:	6183      	str	r3, [r0, #24]
 802dcec:	4619      	mov	r1, r3
 802dcee:	2208      	movs	r2, #8
 802dcf0:	305c      	adds	r0, #92	; 0x5c
 802dcf2:	f000 f906 	bl	802df02 <memset>
 802dcf6:	4b0d      	ldr	r3, [pc, #52]	; (802dd2c <std+0x58>)
 802dcf8:	6263      	str	r3, [r4, #36]	; 0x24
 802dcfa:	4b0d      	ldr	r3, [pc, #52]	; (802dd30 <std+0x5c>)
 802dcfc:	62a3      	str	r3, [r4, #40]	; 0x28
 802dcfe:	4b0d      	ldr	r3, [pc, #52]	; (802dd34 <std+0x60>)
 802dd00:	62e3      	str	r3, [r4, #44]	; 0x2c
 802dd02:	4b0d      	ldr	r3, [pc, #52]	; (802dd38 <std+0x64>)
 802dd04:	6323      	str	r3, [r4, #48]	; 0x30
 802dd06:	4b0d      	ldr	r3, [pc, #52]	; (802dd3c <std+0x68>)
 802dd08:	6224      	str	r4, [r4, #32]
 802dd0a:	429c      	cmp	r4, r3
 802dd0c:	d006      	beq.n	802dd1c <std+0x48>
 802dd0e:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802dd12:	4294      	cmp	r4, r2
 802dd14:	d002      	beq.n	802dd1c <std+0x48>
 802dd16:	33d0      	adds	r3, #208	; 0xd0
 802dd18:	429c      	cmp	r4, r3
 802dd1a:	d105      	bne.n	802dd28 <std+0x54>
 802dd1c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802dd20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802dd24:	f000 ba10 	b.w	802e148 <__retarget_lock_init_recursive>
 802dd28:	bd10      	pop	{r4, pc}
 802dd2a:	bf00      	nop
 802dd2c:	0802de7d 	.word	0x0802de7d
 802dd30:	0802de9f 	.word	0x0802de9f
 802dd34:	0802ded7 	.word	0x0802ded7
 802dd38:	0802defb 	.word	0x0802defb
 802dd3c:	200141a8 	.word	0x200141a8

0802dd40 <stdio_exit_handler>:
 802dd40:	4a02      	ldr	r2, [pc, #8]	; (802dd4c <stdio_exit_handler+0xc>)
 802dd42:	4903      	ldr	r1, [pc, #12]	; (802dd50 <stdio_exit_handler+0x10>)
 802dd44:	4803      	ldr	r0, [pc, #12]	; (802dd54 <stdio_exit_handler+0x14>)
 802dd46:	f000 b87b 	b.w	802de40 <_fwalk_sglue>
 802dd4a:	bf00      	nop
 802dd4c:	20000108 	.word	0x20000108
 802dd50:	0802e975 	.word	0x0802e975
 802dd54:	20000114 	.word	0x20000114

0802dd58 <cleanup_stdio>:
 802dd58:	6841      	ldr	r1, [r0, #4]
 802dd5a:	4b0c      	ldr	r3, [pc, #48]	; (802dd8c <cleanup_stdio+0x34>)
 802dd5c:	4299      	cmp	r1, r3
 802dd5e:	b510      	push	{r4, lr}
 802dd60:	4604      	mov	r4, r0
 802dd62:	d001      	beq.n	802dd68 <cleanup_stdio+0x10>
 802dd64:	f000 fe06 	bl	802e974 <_fflush_r>
 802dd68:	68a1      	ldr	r1, [r4, #8]
 802dd6a:	4b09      	ldr	r3, [pc, #36]	; (802dd90 <cleanup_stdio+0x38>)
 802dd6c:	4299      	cmp	r1, r3
 802dd6e:	d002      	beq.n	802dd76 <cleanup_stdio+0x1e>
 802dd70:	4620      	mov	r0, r4
 802dd72:	f000 fdff 	bl	802e974 <_fflush_r>
 802dd76:	68e1      	ldr	r1, [r4, #12]
 802dd78:	4b06      	ldr	r3, [pc, #24]	; (802dd94 <cleanup_stdio+0x3c>)
 802dd7a:	4299      	cmp	r1, r3
 802dd7c:	d004      	beq.n	802dd88 <cleanup_stdio+0x30>
 802dd7e:	4620      	mov	r0, r4
 802dd80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802dd84:	f000 bdf6 	b.w	802e974 <_fflush_r>
 802dd88:	bd10      	pop	{r4, pc}
 802dd8a:	bf00      	nop
 802dd8c:	200141a8 	.word	0x200141a8
 802dd90:	20014210 	.word	0x20014210
 802dd94:	20014278 	.word	0x20014278

0802dd98 <global_stdio_init.part.0>:
 802dd98:	b510      	push	{r4, lr}
 802dd9a:	4b0b      	ldr	r3, [pc, #44]	; (802ddc8 <global_stdio_init.part.0+0x30>)
 802dd9c:	4c0b      	ldr	r4, [pc, #44]	; (802ddcc <global_stdio_init.part.0+0x34>)
 802dd9e:	4a0c      	ldr	r2, [pc, #48]	; (802ddd0 <global_stdio_init.part.0+0x38>)
 802dda0:	601a      	str	r2, [r3, #0]
 802dda2:	4620      	mov	r0, r4
 802dda4:	2200      	movs	r2, #0
 802dda6:	2104      	movs	r1, #4
 802dda8:	f7ff ff94 	bl	802dcd4 <std>
 802ddac:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802ddb0:	2201      	movs	r2, #1
 802ddb2:	2109      	movs	r1, #9
 802ddb4:	f7ff ff8e 	bl	802dcd4 <std>
 802ddb8:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802ddbc:	2202      	movs	r2, #2
 802ddbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ddc2:	2112      	movs	r1, #18
 802ddc4:	f7ff bf86 	b.w	802dcd4 <std>
 802ddc8:	200142e0 	.word	0x200142e0
 802ddcc:	200141a8 	.word	0x200141a8
 802ddd0:	0802dd41 	.word	0x0802dd41

0802ddd4 <__sfp_lock_acquire>:
 802ddd4:	4801      	ldr	r0, [pc, #4]	; (802dddc <__sfp_lock_acquire+0x8>)
 802ddd6:	f000 b9b8 	b.w	802e14a <__retarget_lock_acquire_recursive>
 802ddda:	bf00      	nop
 802dddc:	200142ea 	.word	0x200142ea

0802dde0 <__sfp_lock_release>:
 802dde0:	4801      	ldr	r0, [pc, #4]	; (802dde8 <__sfp_lock_release+0x8>)
 802dde2:	f000 b9b3 	b.w	802e14c <__retarget_lock_release_recursive>
 802dde6:	bf00      	nop
 802dde8:	200142ea 	.word	0x200142ea

0802ddec <__sinit>:
 802ddec:	b510      	push	{r4, lr}
 802ddee:	4604      	mov	r4, r0
 802ddf0:	f7ff fff0 	bl	802ddd4 <__sfp_lock_acquire>
 802ddf4:	6a23      	ldr	r3, [r4, #32]
 802ddf6:	b11b      	cbz	r3, 802de00 <__sinit+0x14>
 802ddf8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ddfc:	f7ff bff0 	b.w	802dde0 <__sfp_lock_release>
 802de00:	4b04      	ldr	r3, [pc, #16]	; (802de14 <__sinit+0x28>)
 802de02:	6223      	str	r3, [r4, #32]
 802de04:	4b04      	ldr	r3, [pc, #16]	; (802de18 <__sinit+0x2c>)
 802de06:	681b      	ldr	r3, [r3, #0]
 802de08:	2b00      	cmp	r3, #0
 802de0a:	d1f5      	bne.n	802ddf8 <__sinit+0xc>
 802de0c:	f7ff ffc4 	bl	802dd98 <global_stdio_init.part.0>
 802de10:	e7f2      	b.n	802ddf8 <__sinit+0xc>
 802de12:	bf00      	nop
 802de14:	0802dd59 	.word	0x0802dd59
 802de18:	200142e0 	.word	0x200142e0

0802de1c <fiprintf>:
 802de1c:	b40e      	push	{r1, r2, r3}
 802de1e:	b503      	push	{r0, r1, lr}
 802de20:	4601      	mov	r1, r0
 802de22:	ab03      	add	r3, sp, #12
 802de24:	4805      	ldr	r0, [pc, #20]	; (802de3c <fiprintf+0x20>)
 802de26:	f853 2b04 	ldr.w	r2, [r3], #4
 802de2a:	6800      	ldr	r0, [r0, #0]
 802de2c:	9301      	str	r3, [sp, #4]
 802de2e:	f000 fa71 	bl	802e314 <_vfiprintf_r>
 802de32:	b002      	add	sp, #8
 802de34:	f85d eb04 	ldr.w	lr, [sp], #4
 802de38:	b003      	add	sp, #12
 802de3a:	4770      	bx	lr
 802de3c:	20000160 	.word	0x20000160

0802de40 <_fwalk_sglue>:
 802de40:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802de44:	4607      	mov	r7, r0
 802de46:	4688      	mov	r8, r1
 802de48:	4614      	mov	r4, r2
 802de4a:	2600      	movs	r6, #0
 802de4c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802de50:	f1b9 0901 	subs.w	r9, r9, #1
 802de54:	d505      	bpl.n	802de62 <_fwalk_sglue+0x22>
 802de56:	6824      	ldr	r4, [r4, #0]
 802de58:	2c00      	cmp	r4, #0
 802de5a:	d1f7      	bne.n	802de4c <_fwalk_sglue+0xc>
 802de5c:	4630      	mov	r0, r6
 802de5e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802de62:	89ab      	ldrh	r3, [r5, #12]
 802de64:	2b01      	cmp	r3, #1
 802de66:	d907      	bls.n	802de78 <_fwalk_sglue+0x38>
 802de68:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802de6c:	3301      	adds	r3, #1
 802de6e:	d003      	beq.n	802de78 <_fwalk_sglue+0x38>
 802de70:	4629      	mov	r1, r5
 802de72:	4638      	mov	r0, r7
 802de74:	47c0      	blx	r8
 802de76:	4306      	orrs	r6, r0
 802de78:	3568      	adds	r5, #104	; 0x68
 802de7a:	e7e9      	b.n	802de50 <_fwalk_sglue+0x10>

0802de7c <__sread>:
 802de7c:	b510      	push	{r4, lr}
 802de7e:	460c      	mov	r4, r1
 802de80:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802de84:	f000 f8ee 	bl	802e064 <_read_r>
 802de88:	2800      	cmp	r0, #0
 802de8a:	bfab      	itete	ge
 802de8c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802de8e:	89a3      	ldrhlt	r3, [r4, #12]
 802de90:	181b      	addge	r3, r3, r0
 802de92:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802de96:	bfac      	ite	ge
 802de98:	6563      	strge	r3, [r4, #84]	; 0x54
 802de9a:	81a3      	strhlt	r3, [r4, #12]
 802de9c:	bd10      	pop	{r4, pc}

0802de9e <__swrite>:
 802de9e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802dea2:	461f      	mov	r7, r3
 802dea4:	898b      	ldrh	r3, [r1, #12]
 802dea6:	05db      	lsls	r3, r3, #23
 802dea8:	4605      	mov	r5, r0
 802deaa:	460c      	mov	r4, r1
 802deac:	4616      	mov	r6, r2
 802deae:	d505      	bpl.n	802debc <__swrite+0x1e>
 802deb0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802deb4:	2302      	movs	r3, #2
 802deb6:	2200      	movs	r2, #0
 802deb8:	f000 f8c2 	bl	802e040 <_lseek_r>
 802debc:	89a3      	ldrh	r3, [r4, #12]
 802debe:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802dec2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802dec6:	81a3      	strh	r3, [r4, #12]
 802dec8:	4632      	mov	r2, r6
 802deca:	463b      	mov	r3, r7
 802decc:	4628      	mov	r0, r5
 802dece:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802ded2:	f000 b8fd 	b.w	802e0d0 <_write_r>

0802ded6 <__sseek>:
 802ded6:	b510      	push	{r4, lr}
 802ded8:	460c      	mov	r4, r1
 802deda:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802dede:	f000 f8af 	bl	802e040 <_lseek_r>
 802dee2:	1c43      	adds	r3, r0, #1
 802dee4:	89a3      	ldrh	r3, [r4, #12]
 802dee6:	bf15      	itete	ne
 802dee8:	6560      	strne	r0, [r4, #84]	; 0x54
 802deea:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802deee:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802def2:	81a3      	strheq	r3, [r4, #12]
 802def4:	bf18      	it	ne
 802def6:	81a3      	strhne	r3, [r4, #12]
 802def8:	bd10      	pop	{r4, pc}

0802defa <__sclose>:
 802defa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802defe:	f000 b839 	b.w	802df74 <_close_r>

0802df02 <memset>:
 802df02:	4402      	add	r2, r0
 802df04:	4603      	mov	r3, r0
 802df06:	4293      	cmp	r3, r2
 802df08:	d100      	bne.n	802df0c <memset+0xa>
 802df0a:	4770      	bx	lr
 802df0c:	f803 1b01 	strb.w	r1, [r3], #1
 802df10:	e7f9      	b.n	802df06 <memset+0x4>

0802df12 <_raise_r>:
 802df12:	291f      	cmp	r1, #31
 802df14:	b538      	push	{r3, r4, r5, lr}
 802df16:	4604      	mov	r4, r0
 802df18:	460d      	mov	r5, r1
 802df1a:	d904      	bls.n	802df26 <_raise_r+0x14>
 802df1c:	2316      	movs	r3, #22
 802df1e:	6003      	str	r3, [r0, #0]
 802df20:	f04f 30ff 	mov.w	r0, #4294967295
 802df24:	bd38      	pop	{r3, r4, r5, pc}
 802df26:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802df28:	b112      	cbz	r2, 802df30 <_raise_r+0x1e>
 802df2a:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802df2e:	b94b      	cbnz	r3, 802df44 <_raise_r+0x32>
 802df30:	4620      	mov	r0, r4
 802df32:	f000 f8bb 	bl	802e0ac <_getpid_r>
 802df36:	462a      	mov	r2, r5
 802df38:	4601      	mov	r1, r0
 802df3a:	4620      	mov	r0, r4
 802df3c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802df40:	f000 b8a2 	b.w	802e088 <_kill_r>
 802df44:	2b01      	cmp	r3, #1
 802df46:	d00a      	beq.n	802df5e <_raise_r+0x4c>
 802df48:	1c59      	adds	r1, r3, #1
 802df4a:	d103      	bne.n	802df54 <_raise_r+0x42>
 802df4c:	2316      	movs	r3, #22
 802df4e:	6003      	str	r3, [r0, #0]
 802df50:	2001      	movs	r0, #1
 802df52:	e7e7      	b.n	802df24 <_raise_r+0x12>
 802df54:	2400      	movs	r4, #0
 802df56:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802df5a:	4628      	mov	r0, r5
 802df5c:	4798      	blx	r3
 802df5e:	2000      	movs	r0, #0
 802df60:	e7e0      	b.n	802df24 <_raise_r+0x12>
	...

0802df64 <raise>:
 802df64:	4b02      	ldr	r3, [pc, #8]	; (802df70 <raise+0xc>)
 802df66:	4601      	mov	r1, r0
 802df68:	6818      	ldr	r0, [r3, #0]
 802df6a:	f7ff bfd2 	b.w	802df12 <_raise_r>
 802df6e:	bf00      	nop
 802df70:	20000160 	.word	0x20000160

0802df74 <_close_r>:
 802df74:	b538      	push	{r3, r4, r5, lr}
 802df76:	4d06      	ldr	r5, [pc, #24]	; (802df90 <_close_r+0x1c>)
 802df78:	2300      	movs	r3, #0
 802df7a:	4604      	mov	r4, r0
 802df7c:	4608      	mov	r0, r1
 802df7e:	602b      	str	r3, [r5, #0]
 802df80:	f7d4 fd40 	bl	8002a04 <_close>
 802df84:	1c43      	adds	r3, r0, #1
 802df86:	d102      	bne.n	802df8e <_close_r+0x1a>
 802df88:	682b      	ldr	r3, [r5, #0]
 802df8a:	b103      	cbz	r3, 802df8e <_close_r+0x1a>
 802df8c:	6023      	str	r3, [r4, #0]
 802df8e:	bd38      	pop	{r3, r4, r5, pc}
 802df90:	200142e4 	.word	0x200142e4

0802df94 <_reclaim_reent>:
 802df94:	4b29      	ldr	r3, [pc, #164]	; (802e03c <_reclaim_reent+0xa8>)
 802df96:	681b      	ldr	r3, [r3, #0]
 802df98:	4283      	cmp	r3, r0
 802df9a:	b570      	push	{r4, r5, r6, lr}
 802df9c:	4604      	mov	r4, r0
 802df9e:	d04b      	beq.n	802e038 <_reclaim_reent+0xa4>
 802dfa0:	69c3      	ldr	r3, [r0, #28]
 802dfa2:	b143      	cbz	r3, 802dfb6 <_reclaim_reent+0x22>
 802dfa4:	68db      	ldr	r3, [r3, #12]
 802dfa6:	2b00      	cmp	r3, #0
 802dfa8:	d144      	bne.n	802e034 <_reclaim_reent+0xa0>
 802dfaa:	69e3      	ldr	r3, [r4, #28]
 802dfac:	6819      	ldr	r1, [r3, #0]
 802dfae:	b111      	cbz	r1, 802dfb6 <_reclaim_reent+0x22>
 802dfb0:	4620      	mov	r0, r4
 802dfb2:	f000 f939 	bl	802e228 <_free_r>
 802dfb6:	6961      	ldr	r1, [r4, #20]
 802dfb8:	b111      	cbz	r1, 802dfc0 <_reclaim_reent+0x2c>
 802dfba:	4620      	mov	r0, r4
 802dfbc:	f000 f934 	bl	802e228 <_free_r>
 802dfc0:	69e1      	ldr	r1, [r4, #28]
 802dfc2:	b111      	cbz	r1, 802dfca <_reclaim_reent+0x36>
 802dfc4:	4620      	mov	r0, r4
 802dfc6:	f000 f92f 	bl	802e228 <_free_r>
 802dfca:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802dfcc:	b111      	cbz	r1, 802dfd4 <_reclaim_reent+0x40>
 802dfce:	4620      	mov	r0, r4
 802dfd0:	f000 f92a 	bl	802e228 <_free_r>
 802dfd4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802dfd6:	b111      	cbz	r1, 802dfde <_reclaim_reent+0x4a>
 802dfd8:	4620      	mov	r0, r4
 802dfda:	f000 f925 	bl	802e228 <_free_r>
 802dfde:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802dfe0:	b111      	cbz	r1, 802dfe8 <_reclaim_reent+0x54>
 802dfe2:	4620      	mov	r0, r4
 802dfe4:	f000 f920 	bl	802e228 <_free_r>
 802dfe8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802dfea:	b111      	cbz	r1, 802dff2 <_reclaim_reent+0x5e>
 802dfec:	4620      	mov	r0, r4
 802dfee:	f000 f91b 	bl	802e228 <_free_r>
 802dff2:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802dff4:	b111      	cbz	r1, 802dffc <_reclaim_reent+0x68>
 802dff6:	4620      	mov	r0, r4
 802dff8:	f000 f916 	bl	802e228 <_free_r>
 802dffc:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802dffe:	b111      	cbz	r1, 802e006 <_reclaim_reent+0x72>
 802e000:	4620      	mov	r0, r4
 802e002:	f000 f911 	bl	802e228 <_free_r>
 802e006:	6a23      	ldr	r3, [r4, #32]
 802e008:	b1b3      	cbz	r3, 802e038 <_reclaim_reent+0xa4>
 802e00a:	4620      	mov	r0, r4
 802e00c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802e010:	4718      	bx	r3
 802e012:	5949      	ldr	r1, [r1, r5]
 802e014:	b941      	cbnz	r1, 802e028 <_reclaim_reent+0x94>
 802e016:	3504      	adds	r5, #4
 802e018:	69e3      	ldr	r3, [r4, #28]
 802e01a:	2d80      	cmp	r5, #128	; 0x80
 802e01c:	68d9      	ldr	r1, [r3, #12]
 802e01e:	d1f8      	bne.n	802e012 <_reclaim_reent+0x7e>
 802e020:	4620      	mov	r0, r4
 802e022:	f000 f901 	bl	802e228 <_free_r>
 802e026:	e7c0      	b.n	802dfaa <_reclaim_reent+0x16>
 802e028:	680e      	ldr	r6, [r1, #0]
 802e02a:	4620      	mov	r0, r4
 802e02c:	f000 f8fc 	bl	802e228 <_free_r>
 802e030:	4631      	mov	r1, r6
 802e032:	e7ef      	b.n	802e014 <_reclaim_reent+0x80>
 802e034:	2500      	movs	r5, #0
 802e036:	e7ef      	b.n	802e018 <_reclaim_reent+0x84>
 802e038:	bd70      	pop	{r4, r5, r6, pc}
 802e03a:	bf00      	nop
 802e03c:	20000160 	.word	0x20000160

0802e040 <_lseek_r>:
 802e040:	b538      	push	{r3, r4, r5, lr}
 802e042:	4d07      	ldr	r5, [pc, #28]	; (802e060 <_lseek_r+0x20>)
 802e044:	4604      	mov	r4, r0
 802e046:	4608      	mov	r0, r1
 802e048:	4611      	mov	r1, r2
 802e04a:	2200      	movs	r2, #0
 802e04c:	602a      	str	r2, [r5, #0]
 802e04e:	461a      	mov	r2, r3
 802e050:	f7d4 fce4 	bl	8002a1c <_lseek>
 802e054:	1c43      	adds	r3, r0, #1
 802e056:	d102      	bne.n	802e05e <_lseek_r+0x1e>
 802e058:	682b      	ldr	r3, [r5, #0]
 802e05a:	b103      	cbz	r3, 802e05e <_lseek_r+0x1e>
 802e05c:	6023      	str	r3, [r4, #0]
 802e05e:	bd38      	pop	{r3, r4, r5, pc}
 802e060:	200142e4 	.word	0x200142e4

0802e064 <_read_r>:
 802e064:	b538      	push	{r3, r4, r5, lr}
 802e066:	4d07      	ldr	r5, [pc, #28]	; (802e084 <_read_r+0x20>)
 802e068:	4604      	mov	r4, r0
 802e06a:	4608      	mov	r0, r1
 802e06c:	4611      	mov	r1, r2
 802e06e:	2200      	movs	r2, #0
 802e070:	602a      	str	r2, [r5, #0]
 802e072:	461a      	mov	r2, r3
 802e074:	f7d4 fcaa 	bl	80029cc <_read>
 802e078:	1c43      	adds	r3, r0, #1
 802e07a:	d102      	bne.n	802e082 <_read_r+0x1e>
 802e07c:	682b      	ldr	r3, [r5, #0]
 802e07e:	b103      	cbz	r3, 802e082 <_read_r+0x1e>
 802e080:	6023      	str	r3, [r4, #0]
 802e082:	bd38      	pop	{r3, r4, r5, pc}
 802e084:	200142e4 	.word	0x200142e4

0802e088 <_kill_r>:
 802e088:	b538      	push	{r3, r4, r5, lr}
 802e08a:	4d07      	ldr	r5, [pc, #28]	; (802e0a8 <_kill_r+0x20>)
 802e08c:	2300      	movs	r3, #0
 802e08e:	4604      	mov	r4, r0
 802e090:	4608      	mov	r0, r1
 802e092:	4611      	mov	r1, r2
 802e094:	602b      	str	r3, [r5, #0]
 802e096:	f7d4 fc8b 	bl	80029b0 <_kill>
 802e09a:	1c43      	adds	r3, r0, #1
 802e09c:	d102      	bne.n	802e0a4 <_kill_r+0x1c>
 802e09e:	682b      	ldr	r3, [r5, #0]
 802e0a0:	b103      	cbz	r3, 802e0a4 <_kill_r+0x1c>
 802e0a2:	6023      	str	r3, [r4, #0]
 802e0a4:	bd38      	pop	{r3, r4, r5, pc}
 802e0a6:	bf00      	nop
 802e0a8:	200142e4 	.word	0x200142e4

0802e0ac <_getpid_r>:
 802e0ac:	f7d4 bc7e 	b.w	80029ac <_getpid>

0802e0b0 <_sbrk_r>:
 802e0b0:	b538      	push	{r3, r4, r5, lr}
 802e0b2:	4d06      	ldr	r5, [pc, #24]	; (802e0cc <_sbrk_r+0x1c>)
 802e0b4:	2300      	movs	r3, #0
 802e0b6:	4604      	mov	r4, r0
 802e0b8:	4608      	mov	r0, r1
 802e0ba:	602b      	str	r3, [r5, #0]
 802e0bc:	f7d4 fcb0 	bl	8002a20 <_sbrk>
 802e0c0:	1c43      	adds	r3, r0, #1
 802e0c2:	d102      	bne.n	802e0ca <_sbrk_r+0x1a>
 802e0c4:	682b      	ldr	r3, [r5, #0]
 802e0c6:	b103      	cbz	r3, 802e0ca <_sbrk_r+0x1a>
 802e0c8:	6023      	str	r3, [r4, #0]
 802e0ca:	bd38      	pop	{r3, r4, r5, pc}
 802e0cc:	200142e4 	.word	0x200142e4

0802e0d0 <_write_r>:
 802e0d0:	b538      	push	{r3, r4, r5, lr}
 802e0d2:	4d07      	ldr	r5, [pc, #28]	; (802e0f0 <_write_r+0x20>)
 802e0d4:	4604      	mov	r4, r0
 802e0d6:	4608      	mov	r0, r1
 802e0d8:	4611      	mov	r1, r2
 802e0da:	2200      	movs	r2, #0
 802e0dc:	602a      	str	r2, [r5, #0]
 802e0de:	461a      	mov	r2, r3
 802e0e0:	f7d4 fc82 	bl	80029e8 <_write>
 802e0e4:	1c43      	adds	r3, r0, #1
 802e0e6:	d102      	bne.n	802e0ee <_write_r+0x1e>
 802e0e8:	682b      	ldr	r3, [r5, #0]
 802e0ea:	b103      	cbz	r3, 802e0ee <_write_r+0x1e>
 802e0ec:	6023      	str	r3, [r4, #0]
 802e0ee:	bd38      	pop	{r3, r4, r5, pc}
 802e0f0:	200142e4 	.word	0x200142e4

0802e0f4 <__errno>:
 802e0f4:	4b01      	ldr	r3, [pc, #4]	; (802e0fc <__errno+0x8>)
 802e0f6:	6818      	ldr	r0, [r3, #0]
 802e0f8:	4770      	bx	lr
 802e0fa:	bf00      	nop
 802e0fc:	20000160 	.word	0x20000160

0802e100 <__libc_init_array>:
 802e100:	b570      	push	{r4, r5, r6, lr}
 802e102:	4d0d      	ldr	r5, [pc, #52]	; (802e138 <__libc_init_array+0x38>)
 802e104:	4c0d      	ldr	r4, [pc, #52]	; (802e13c <__libc_init_array+0x3c>)
 802e106:	1b64      	subs	r4, r4, r5
 802e108:	10a4      	asrs	r4, r4, #2
 802e10a:	2600      	movs	r6, #0
 802e10c:	42a6      	cmp	r6, r4
 802e10e:	d109      	bne.n	802e124 <__libc_init_array+0x24>
 802e110:	4d0b      	ldr	r5, [pc, #44]	; (802e140 <__libc_init_array+0x40>)
 802e112:	4c0c      	ldr	r4, [pc, #48]	; (802e144 <__libc_init_array+0x44>)
 802e114:	f000 fd70 	bl	802ebf8 <_init>
 802e118:	1b64      	subs	r4, r4, r5
 802e11a:	10a4      	asrs	r4, r4, #2
 802e11c:	2600      	movs	r6, #0
 802e11e:	42a6      	cmp	r6, r4
 802e120:	d105      	bne.n	802e12e <__libc_init_array+0x2e>
 802e122:	bd70      	pop	{r4, r5, r6, pc}
 802e124:	f855 3b04 	ldr.w	r3, [r5], #4
 802e128:	4798      	blx	r3
 802e12a:	3601      	adds	r6, #1
 802e12c:	e7ee      	b.n	802e10c <__libc_init_array+0xc>
 802e12e:	f855 3b04 	ldr.w	r3, [r5], #4
 802e132:	4798      	blx	r3
 802e134:	3601      	adds	r6, #1
 802e136:	e7f2      	b.n	802e11e <__libc_init_array+0x1e>
 802e138:	080cf554 	.word	0x080cf554
 802e13c:	080cf554 	.word	0x080cf554
 802e140:	080cf554 	.word	0x080cf554
 802e144:	080cf568 	.word	0x080cf568

0802e148 <__retarget_lock_init_recursive>:
 802e148:	4770      	bx	lr

0802e14a <__retarget_lock_acquire_recursive>:
 802e14a:	4770      	bx	lr

0802e14c <__retarget_lock_release_recursive>:
 802e14c:	4770      	bx	lr

0802e14e <memcpy>:
 802e14e:	440a      	add	r2, r1
 802e150:	4291      	cmp	r1, r2
 802e152:	f100 33ff 	add.w	r3, r0, #4294967295
 802e156:	d100      	bne.n	802e15a <memcpy+0xc>
 802e158:	4770      	bx	lr
 802e15a:	b510      	push	{r4, lr}
 802e15c:	f811 4b01 	ldrb.w	r4, [r1], #1
 802e160:	f803 4f01 	strb.w	r4, [r3, #1]!
 802e164:	4291      	cmp	r1, r2
 802e166:	d1f9      	bne.n	802e15c <memcpy+0xe>
 802e168:	bd10      	pop	{r4, pc}
	...

0802e16c <__register_exitproc>:
 802e16c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802e170:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802e224 <__register_exitproc+0xb8>
 802e174:	4606      	mov	r6, r0
 802e176:	f8d8 0000 	ldr.w	r0, [r8]
 802e17a:	461f      	mov	r7, r3
 802e17c:	460d      	mov	r5, r1
 802e17e:	4691      	mov	r9, r2
 802e180:	f7ff ffe3 	bl	802e14a <__retarget_lock_acquire_recursive>
 802e184:	4b23      	ldr	r3, [pc, #140]	; (802e214 <__register_exitproc+0xa8>)
 802e186:	681c      	ldr	r4, [r3, #0]
 802e188:	b934      	cbnz	r4, 802e198 <__register_exitproc+0x2c>
 802e18a:	4c23      	ldr	r4, [pc, #140]	; (802e218 <__register_exitproc+0xac>)
 802e18c:	601c      	str	r4, [r3, #0]
 802e18e:	4b23      	ldr	r3, [pc, #140]	; (802e21c <__register_exitproc+0xb0>)
 802e190:	b113      	cbz	r3, 802e198 <__register_exitproc+0x2c>
 802e192:	681b      	ldr	r3, [r3, #0]
 802e194:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802e198:	6863      	ldr	r3, [r4, #4]
 802e19a:	2b1f      	cmp	r3, #31
 802e19c:	dd07      	ble.n	802e1ae <__register_exitproc+0x42>
 802e19e:	f8d8 0000 	ldr.w	r0, [r8]
 802e1a2:	f7ff ffd3 	bl	802e14c <__retarget_lock_release_recursive>
 802e1a6:	f04f 30ff 	mov.w	r0, #4294967295
 802e1aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802e1ae:	b32e      	cbz	r6, 802e1fc <__register_exitproc+0x90>
 802e1b0:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802e1b4:	b968      	cbnz	r0, 802e1d2 <__register_exitproc+0x66>
 802e1b6:	4b1a      	ldr	r3, [pc, #104]	; (802e220 <__register_exitproc+0xb4>)
 802e1b8:	2b00      	cmp	r3, #0
 802e1ba:	d0f0      	beq.n	802e19e <__register_exitproc+0x32>
 802e1bc:	f44f 7084 	mov.w	r0, #264	; 0x108
 802e1c0:	f7ff fcbe 	bl	802db40 <malloc>
 802e1c4:	2800      	cmp	r0, #0
 802e1c6:	d0ea      	beq.n	802e19e <__register_exitproc+0x32>
 802e1c8:	2300      	movs	r3, #0
 802e1ca:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802e1ce:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802e1d2:	6863      	ldr	r3, [r4, #4]
 802e1d4:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802e1d8:	2201      	movs	r2, #1
 802e1da:	409a      	lsls	r2, r3
 802e1dc:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802e1e0:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802e1e4:	4313      	orrs	r3, r2
 802e1e6:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802e1ea:	2e02      	cmp	r6, #2
 802e1ec:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802e1f0:	bf02      	ittt	eq
 802e1f2:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802e1f6:	4313      	orreq	r3, r2
 802e1f8:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802e1fc:	6863      	ldr	r3, [r4, #4]
 802e1fe:	f8d8 0000 	ldr.w	r0, [r8]
 802e202:	1c5a      	adds	r2, r3, #1
 802e204:	3302      	adds	r3, #2
 802e206:	6062      	str	r2, [r4, #4]
 802e208:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802e20c:	f7ff ff9e 	bl	802e14c <__retarget_lock_release_recursive>
 802e210:	2000      	movs	r0, #0
 802e212:	e7ca      	b.n	802e1aa <__register_exitproc+0x3e>
 802e214:	20014378 	.word	0x20014378
 802e218:	200142ec 	.word	0x200142ec
 802e21c:	08045dac 	.word	0x08045dac
 802e220:	0802db41 	.word	0x0802db41
 802e224:	20000164 	.word	0x20000164

0802e228 <_free_r>:
 802e228:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802e22a:	2900      	cmp	r1, #0
 802e22c:	d044      	beq.n	802e2b8 <_free_r+0x90>
 802e22e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802e232:	9001      	str	r0, [sp, #4]
 802e234:	2b00      	cmp	r3, #0
 802e236:	f1a1 0404 	sub.w	r4, r1, #4
 802e23a:	bfb8      	it	lt
 802e23c:	18e4      	addlt	r4, r4, r3
 802e23e:	f7ff fd2f 	bl	802dca0 <__malloc_lock>
 802e242:	4a1e      	ldr	r2, [pc, #120]	; (802e2bc <_free_r+0x94>)
 802e244:	9801      	ldr	r0, [sp, #4]
 802e246:	6813      	ldr	r3, [r2, #0]
 802e248:	b933      	cbnz	r3, 802e258 <_free_r+0x30>
 802e24a:	6063      	str	r3, [r4, #4]
 802e24c:	6014      	str	r4, [r2, #0]
 802e24e:	b003      	add	sp, #12
 802e250:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802e254:	f7ff bd2a 	b.w	802dcac <__malloc_unlock>
 802e258:	42a3      	cmp	r3, r4
 802e25a:	d908      	bls.n	802e26e <_free_r+0x46>
 802e25c:	6825      	ldr	r5, [r4, #0]
 802e25e:	1961      	adds	r1, r4, r5
 802e260:	428b      	cmp	r3, r1
 802e262:	bf01      	itttt	eq
 802e264:	6819      	ldreq	r1, [r3, #0]
 802e266:	685b      	ldreq	r3, [r3, #4]
 802e268:	1949      	addeq	r1, r1, r5
 802e26a:	6021      	streq	r1, [r4, #0]
 802e26c:	e7ed      	b.n	802e24a <_free_r+0x22>
 802e26e:	461a      	mov	r2, r3
 802e270:	685b      	ldr	r3, [r3, #4]
 802e272:	b10b      	cbz	r3, 802e278 <_free_r+0x50>
 802e274:	42a3      	cmp	r3, r4
 802e276:	d9fa      	bls.n	802e26e <_free_r+0x46>
 802e278:	6811      	ldr	r1, [r2, #0]
 802e27a:	1855      	adds	r5, r2, r1
 802e27c:	42a5      	cmp	r5, r4
 802e27e:	d10b      	bne.n	802e298 <_free_r+0x70>
 802e280:	6824      	ldr	r4, [r4, #0]
 802e282:	4421      	add	r1, r4
 802e284:	1854      	adds	r4, r2, r1
 802e286:	42a3      	cmp	r3, r4
 802e288:	6011      	str	r1, [r2, #0]
 802e28a:	d1e0      	bne.n	802e24e <_free_r+0x26>
 802e28c:	681c      	ldr	r4, [r3, #0]
 802e28e:	685b      	ldr	r3, [r3, #4]
 802e290:	6053      	str	r3, [r2, #4]
 802e292:	440c      	add	r4, r1
 802e294:	6014      	str	r4, [r2, #0]
 802e296:	e7da      	b.n	802e24e <_free_r+0x26>
 802e298:	d902      	bls.n	802e2a0 <_free_r+0x78>
 802e29a:	230c      	movs	r3, #12
 802e29c:	6003      	str	r3, [r0, #0]
 802e29e:	e7d6      	b.n	802e24e <_free_r+0x26>
 802e2a0:	6825      	ldr	r5, [r4, #0]
 802e2a2:	1961      	adds	r1, r4, r5
 802e2a4:	428b      	cmp	r3, r1
 802e2a6:	bf04      	itt	eq
 802e2a8:	6819      	ldreq	r1, [r3, #0]
 802e2aa:	685b      	ldreq	r3, [r3, #4]
 802e2ac:	6063      	str	r3, [r4, #4]
 802e2ae:	bf04      	itt	eq
 802e2b0:	1949      	addeq	r1, r1, r5
 802e2b2:	6021      	streq	r1, [r4, #0]
 802e2b4:	6054      	str	r4, [r2, #4]
 802e2b6:	e7ca      	b.n	802e24e <_free_r+0x26>
 802e2b8:	b003      	add	sp, #12
 802e2ba:	bd30      	pop	{r4, r5, pc}
 802e2bc:	200141a0 	.word	0x200141a0

0802e2c0 <__sfputc_r>:
 802e2c0:	6893      	ldr	r3, [r2, #8]
 802e2c2:	3b01      	subs	r3, #1
 802e2c4:	2b00      	cmp	r3, #0
 802e2c6:	b410      	push	{r4}
 802e2c8:	6093      	str	r3, [r2, #8]
 802e2ca:	da08      	bge.n	802e2de <__sfputc_r+0x1e>
 802e2cc:	6994      	ldr	r4, [r2, #24]
 802e2ce:	42a3      	cmp	r3, r4
 802e2d0:	db01      	blt.n	802e2d6 <__sfputc_r+0x16>
 802e2d2:	290a      	cmp	r1, #10
 802e2d4:	d103      	bne.n	802e2de <__sfputc_r+0x1e>
 802e2d6:	f85d 4b04 	ldr.w	r4, [sp], #4
 802e2da:	f000 bb73 	b.w	802e9c4 <__swbuf_r>
 802e2de:	6813      	ldr	r3, [r2, #0]
 802e2e0:	1c58      	adds	r0, r3, #1
 802e2e2:	6010      	str	r0, [r2, #0]
 802e2e4:	7019      	strb	r1, [r3, #0]
 802e2e6:	4608      	mov	r0, r1
 802e2e8:	f85d 4b04 	ldr.w	r4, [sp], #4
 802e2ec:	4770      	bx	lr

0802e2ee <__sfputs_r>:
 802e2ee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802e2f0:	4606      	mov	r6, r0
 802e2f2:	460f      	mov	r7, r1
 802e2f4:	4614      	mov	r4, r2
 802e2f6:	18d5      	adds	r5, r2, r3
 802e2f8:	42ac      	cmp	r4, r5
 802e2fa:	d101      	bne.n	802e300 <__sfputs_r+0x12>
 802e2fc:	2000      	movs	r0, #0
 802e2fe:	e007      	b.n	802e310 <__sfputs_r+0x22>
 802e300:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e304:	463a      	mov	r2, r7
 802e306:	4630      	mov	r0, r6
 802e308:	f7ff ffda 	bl	802e2c0 <__sfputc_r>
 802e30c:	1c43      	adds	r3, r0, #1
 802e30e:	d1f3      	bne.n	802e2f8 <__sfputs_r+0xa>
 802e310:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802e314 <_vfiprintf_r>:
 802e314:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802e318:	460d      	mov	r5, r1
 802e31a:	b09d      	sub	sp, #116	; 0x74
 802e31c:	4614      	mov	r4, r2
 802e31e:	4698      	mov	r8, r3
 802e320:	4606      	mov	r6, r0
 802e322:	b118      	cbz	r0, 802e32c <_vfiprintf_r+0x18>
 802e324:	6a03      	ldr	r3, [r0, #32]
 802e326:	b90b      	cbnz	r3, 802e32c <_vfiprintf_r+0x18>
 802e328:	f7ff fd60 	bl	802ddec <__sinit>
 802e32c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802e32e:	07d9      	lsls	r1, r3, #31
 802e330:	d405      	bmi.n	802e33e <_vfiprintf_r+0x2a>
 802e332:	89ab      	ldrh	r3, [r5, #12]
 802e334:	059a      	lsls	r2, r3, #22
 802e336:	d402      	bmi.n	802e33e <_vfiprintf_r+0x2a>
 802e338:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802e33a:	f7ff ff06 	bl	802e14a <__retarget_lock_acquire_recursive>
 802e33e:	89ab      	ldrh	r3, [r5, #12]
 802e340:	071b      	lsls	r3, r3, #28
 802e342:	d501      	bpl.n	802e348 <_vfiprintf_r+0x34>
 802e344:	692b      	ldr	r3, [r5, #16]
 802e346:	b99b      	cbnz	r3, 802e370 <_vfiprintf_r+0x5c>
 802e348:	4629      	mov	r1, r5
 802e34a:	4630      	mov	r0, r6
 802e34c:	f000 fb78 	bl	802ea40 <__swsetup_r>
 802e350:	b170      	cbz	r0, 802e370 <_vfiprintf_r+0x5c>
 802e352:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802e354:	07dc      	lsls	r4, r3, #31
 802e356:	d504      	bpl.n	802e362 <_vfiprintf_r+0x4e>
 802e358:	f04f 30ff 	mov.w	r0, #4294967295
 802e35c:	b01d      	add	sp, #116	; 0x74
 802e35e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e362:	89ab      	ldrh	r3, [r5, #12]
 802e364:	0598      	lsls	r0, r3, #22
 802e366:	d4f7      	bmi.n	802e358 <_vfiprintf_r+0x44>
 802e368:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802e36a:	f7ff feef 	bl	802e14c <__retarget_lock_release_recursive>
 802e36e:	e7f3      	b.n	802e358 <_vfiprintf_r+0x44>
 802e370:	2300      	movs	r3, #0
 802e372:	9309      	str	r3, [sp, #36]	; 0x24
 802e374:	2320      	movs	r3, #32
 802e376:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802e37a:	f8cd 800c 	str.w	r8, [sp, #12]
 802e37e:	2330      	movs	r3, #48	; 0x30
 802e380:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802e534 <_vfiprintf_r+0x220>
 802e384:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802e388:	f04f 0901 	mov.w	r9, #1
 802e38c:	4623      	mov	r3, r4
 802e38e:	469a      	mov	sl, r3
 802e390:	f813 2b01 	ldrb.w	r2, [r3], #1
 802e394:	b10a      	cbz	r2, 802e39a <_vfiprintf_r+0x86>
 802e396:	2a25      	cmp	r2, #37	; 0x25
 802e398:	d1f9      	bne.n	802e38e <_vfiprintf_r+0x7a>
 802e39a:	ebba 0b04 	subs.w	fp, sl, r4
 802e39e:	d00b      	beq.n	802e3b8 <_vfiprintf_r+0xa4>
 802e3a0:	465b      	mov	r3, fp
 802e3a2:	4622      	mov	r2, r4
 802e3a4:	4629      	mov	r1, r5
 802e3a6:	4630      	mov	r0, r6
 802e3a8:	f7ff ffa1 	bl	802e2ee <__sfputs_r>
 802e3ac:	3001      	adds	r0, #1
 802e3ae:	f000 80a9 	beq.w	802e504 <_vfiprintf_r+0x1f0>
 802e3b2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802e3b4:	445a      	add	r2, fp
 802e3b6:	9209      	str	r2, [sp, #36]	; 0x24
 802e3b8:	f89a 3000 	ldrb.w	r3, [sl]
 802e3bc:	2b00      	cmp	r3, #0
 802e3be:	f000 80a1 	beq.w	802e504 <_vfiprintf_r+0x1f0>
 802e3c2:	2300      	movs	r3, #0
 802e3c4:	f04f 32ff 	mov.w	r2, #4294967295
 802e3c8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802e3cc:	f10a 0a01 	add.w	sl, sl, #1
 802e3d0:	9304      	str	r3, [sp, #16]
 802e3d2:	9307      	str	r3, [sp, #28]
 802e3d4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802e3d8:	931a      	str	r3, [sp, #104]	; 0x68
 802e3da:	4654      	mov	r4, sl
 802e3dc:	2205      	movs	r2, #5
 802e3de:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e3e2:	4854      	ldr	r0, [pc, #336]	; (802e534 <_vfiprintf_r+0x220>)
 802e3e4:	f7d1 ff64 	bl	80002b0 <memchr>
 802e3e8:	9a04      	ldr	r2, [sp, #16]
 802e3ea:	b9d8      	cbnz	r0, 802e424 <_vfiprintf_r+0x110>
 802e3ec:	06d1      	lsls	r1, r2, #27
 802e3ee:	bf44      	itt	mi
 802e3f0:	2320      	movmi	r3, #32
 802e3f2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802e3f6:	0713      	lsls	r3, r2, #28
 802e3f8:	bf44      	itt	mi
 802e3fa:	232b      	movmi	r3, #43	; 0x2b
 802e3fc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802e400:	f89a 3000 	ldrb.w	r3, [sl]
 802e404:	2b2a      	cmp	r3, #42	; 0x2a
 802e406:	d015      	beq.n	802e434 <_vfiprintf_r+0x120>
 802e408:	9a07      	ldr	r2, [sp, #28]
 802e40a:	4654      	mov	r4, sl
 802e40c:	2000      	movs	r0, #0
 802e40e:	f04f 0c0a 	mov.w	ip, #10
 802e412:	4621      	mov	r1, r4
 802e414:	f811 3b01 	ldrb.w	r3, [r1], #1
 802e418:	3b30      	subs	r3, #48	; 0x30
 802e41a:	2b09      	cmp	r3, #9
 802e41c:	d94d      	bls.n	802e4ba <_vfiprintf_r+0x1a6>
 802e41e:	b1b0      	cbz	r0, 802e44e <_vfiprintf_r+0x13a>
 802e420:	9207      	str	r2, [sp, #28]
 802e422:	e014      	b.n	802e44e <_vfiprintf_r+0x13a>
 802e424:	eba0 0308 	sub.w	r3, r0, r8
 802e428:	fa09 f303 	lsl.w	r3, r9, r3
 802e42c:	4313      	orrs	r3, r2
 802e42e:	9304      	str	r3, [sp, #16]
 802e430:	46a2      	mov	sl, r4
 802e432:	e7d2      	b.n	802e3da <_vfiprintf_r+0xc6>
 802e434:	9b03      	ldr	r3, [sp, #12]
 802e436:	1d19      	adds	r1, r3, #4
 802e438:	681b      	ldr	r3, [r3, #0]
 802e43a:	9103      	str	r1, [sp, #12]
 802e43c:	2b00      	cmp	r3, #0
 802e43e:	bfbb      	ittet	lt
 802e440:	425b      	neglt	r3, r3
 802e442:	f042 0202 	orrlt.w	r2, r2, #2
 802e446:	9307      	strge	r3, [sp, #28]
 802e448:	9307      	strlt	r3, [sp, #28]
 802e44a:	bfb8      	it	lt
 802e44c:	9204      	strlt	r2, [sp, #16]
 802e44e:	7823      	ldrb	r3, [r4, #0]
 802e450:	2b2e      	cmp	r3, #46	; 0x2e
 802e452:	d10c      	bne.n	802e46e <_vfiprintf_r+0x15a>
 802e454:	7863      	ldrb	r3, [r4, #1]
 802e456:	2b2a      	cmp	r3, #42	; 0x2a
 802e458:	d134      	bne.n	802e4c4 <_vfiprintf_r+0x1b0>
 802e45a:	9b03      	ldr	r3, [sp, #12]
 802e45c:	1d1a      	adds	r2, r3, #4
 802e45e:	681b      	ldr	r3, [r3, #0]
 802e460:	9203      	str	r2, [sp, #12]
 802e462:	2b00      	cmp	r3, #0
 802e464:	bfb8      	it	lt
 802e466:	f04f 33ff 	movlt.w	r3, #4294967295
 802e46a:	3402      	adds	r4, #2
 802e46c:	9305      	str	r3, [sp, #20]
 802e46e:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802e544 <_vfiprintf_r+0x230>
 802e472:	7821      	ldrb	r1, [r4, #0]
 802e474:	2203      	movs	r2, #3
 802e476:	4650      	mov	r0, sl
 802e478:	f7d1 ff1a 	bl	80002b0 <memchr>
 802e47c:	b138      	cbz	r0, 802e48e <_vfiprintf_r+0x17a>
 802e47e:	9b04      	ldr	r3, [sp, #16]
 802e480:	eba0 000a 	sub.w	r0, r0, sl
 802e484:	2240      	movs	r2, #64	; 0x40
 802e486:	4082      	lsls	r2, r0
 802e488:	4313      	orrs	r3, r2
 802e48a:	3401      	adds	r4, #1
 802e48c:	9304      	str	r3, [sp, #16]
 802e48e:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e492:	4829      	ldr	r0, [pc, #164]	; (802e538 <_vfiprintf_r+0x224>)
 802e494:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802e498:	2206      	movs	r2, #6
 802e49a:	f7d1 ff09 	bl	80002b0 <memchr>
 802e49e:	2800      	cmp	r0, #0
 802e4a0:	d03f      	beq.n	802e522 <_vfiprintf_r+0x20e>
 802e4a2:	4b26      	ldr	r3, [pc, #152]	; (802e53c <_vfiprintf_r+0x228>)
 802e4a4:	bb1b      	cbnz	r3, 802e4ee <_vfiprintf_r+0x1da>
 802e4a6:	9b03      	ldr	r3, [sp, #12]
 802e4a8:	3307      	adds	r3, #7
 802e4aa:	f023 0307 	bic.w	r3, r3, #7
 802e4ae:	3308      	adds	r3, #8
 802e4b0:	9303      	str	r3, [sp, #12]
 802e4b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802e4b4:	443b      	add	r3, r7
 802e4b6:	9309      	str	r3, [sp, #36]	; 0x24
 802e4b8:	e768      	b.n	802e38c <_vfiprintf_r+0x78>
 802e4ba:	fb0c 3202 	mla	r2, ip, r2, r3
 802e4be:	460c      	mov	r4, r1
 802e4c0:	2001      	movs	r0, #1
 802e4c2:	e7a6      	b.n	802e412 <_vfiprintf_r+0xfe>
 802e4c4:	2300      	movs	r3, #0
 802e4c6:	3401      	adds	r4, #1
 802e4c8:	9305      	str	r3, [sp, #20]
 802e4ca:	4619      	mov	r1, r3
 802e4cc:	f04f 0c0a 	mov.w	ip, #10
 802e4d0:	4620      	mov	r0, r4
 802e4d2:	f810 2b01 	ldrb.w	r2, [r0], #1
 802e4d6:	3a30      	subs	r2, #48	; 0x30
 802e4d8:	2a09      	cmp	r2, #9
 802e4da:	d903      	bls.n	802e4e4 <_vfiprintf_r+0x1d0>
 802e4dc:	2b00      	cmp	r3, #0
 802e4de:	d0c6      	beq.n	802e46e <_vfiprintf_r+0x15a>
 802e4e0:	9105      	str	r1, [sp, #20]
 802e4e2:	e7c4      	b.n	802e46e <_vfiprintf_r+0x15a>
 802e4e4:	fb0c 2101 	mla	r1, ip, r1, r2
 802e4e8:	4604      	mov	r4, r0
 802e4ea:	2301      	movs	r3, #1
 802e4ec:	e7f0      	b.n	802e4d0 <_vfiprintf_r+0x1bc>
 802e4ee:	ab03      	add	r3, sp, #12
 802e4f0:	9300      	str	r3, [sp, #0]
 802e4f2:	462a      	mov	r2, r5
 802e4f4:	4b12      	ldr	r3, [pc, #72]	; (802e540 <_vfiprintf_r+0x22c>)
 802e4f6:	a904      	add	r1, sp, #16
 802e4f8:	4630      	mov	r0, r6
 802e4fa:	f3af 8000 	nop.w
 802e4fe:	4607      	mov	r7, r0
 802e500:	1c78      	adds	r0, r7, #1
 802e502:	d1d6      	bne.n	802e4b2 <_vfiprintf_r+0x19e>
 802e504:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802e506:	07d9      	lsls	r1, r3, #31
 802e508:	d405      	bmi.n	802e516 <_vfiprintf_r+0x202>
 802e50a:	89ab      	ldrh	r3, [r5, #12]
 802e50c:	059a      	lsls	r2, r3, #22
 802e50e:	d402      	bmi.n	802e516 <_vfiprintf_r+0x202>
 802e510:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802e512:	f7ff fe1b 	bl	802e14c <__retarget_lock_release_recursive>
 802e516:	89ab      	ldrh	r3, [r5, #12]
 802e518:	065b      	lsls	r3, r3, #25
 802e51a:	f53f af1d 	bmi.w	802e358 <_vfiprintf_r+0x44>
 802e51e:	9809      	ldr	r0, [sp, #36]	; 0x24
 802e520:	e71c      	b.n	802e35c <_vfiprintf_r+0x48>
 802e522:	ab03      	add	r3, sp, #12
 802e524:	9300      	str	r3, [sp, #0]
 802e526:	462a      	mov	r2, r5
 802e528:	4b05      	ldr	r3, [pc, #20]	; (802e540 <_vfiprintf_r+0x22c>)
 802e52a:	a904      	add	r1, sp, #16
 802e52c:	4630      	mov	r0, r6
 802e52e:	f000 f879 	bl	802e624 <_printf_i>
 802e532:	e7e4      	b.n	802e4fe <_vfiprintf_r+0x1ea>
 802e534:	08045db0 	.word	0x08045db0
 802e538:	08045dba 	.word	0x08045dba
 802e53c:	00000000 	.word	0x00000000
 802e540:	0802e2ef 	.word	0x0802e2ef
 802e544:	08045db6 	.word	0x08045db6

0802e548 <_printf_common>:
 802e548:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802e54c:	4616      	mov	r6, r2
 802e54e:	4699      	mov	r9, r3
 802e550:	688a      	ldr	r2, [r1, #8]
 802e552:	690b      	ldr	r3, [r1, #16]
 802e554:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802e558:	4293      	cmp	r3, r2
 802e55a:	bfb8      	it	lt
 802e55c:	4613      	movlt	r3, r2
 802e55e:	6033      	str	r3, [r6, #0]
 802e560:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802e564:	4607      	mov	r7, r0
 802e566:	460c      	mov	r4, r1
 802e568:	b10a      	cbz	r2, 802e56e <_printf_common+0x26>
 802e56a:	3301      	adds	r3, #1
 802e56c:	6033      	str	r3, [r6, #0]
 802e56e:	6823      	ldr	r3, [r4, #0]
 802e570:	0699      	lsls	r1, r3, #26
 802e572:	bf42      	ittt	mi
 802e574:	6833      	ldrmi	r3, [r6, #0]
 802e576:	3302      	addmi	r3, #2
 802e578:	6033      	strmi	r3, [r6, #0]
 802e57a:	6825      	ldr	r5, [r4, #0]
 802e57c:	f015 0506 	ands.w	r5, r5, #6
 802e580:	d106      	bne.n	802e590 <_printf_common+0x48>
 802e582:	f104 0a19 	add.w	sl, r4, #25
 802e586:	68e3      	ldr	r3, [r4, #12]
 802e588:	6832      	ldr	r2, [r6, #0]
 802e58a:	1a9b      	subs	r3, r3, r2
 802e58c:	42ab      	cmp	r3, r5
 802e58e:	dc26      	bgt.n	802e5de <_printf_common+0x96>
 802e590:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802e594:	1e13      	subs	r3, r2, #0
 802e596:	6822      	ldr	r2, [r4, #0]
 802e598:	bf18      	it	ne
 802e59a:	2301      	movne	r3, #1
 802e59c:	0692      	lsls	r2, r2, #26
 802e59e:	d42b      	bmi.n	802e5f8 <_printf_common+0xb0>
 802e5a0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802e5a4:	4649      	mov	r1, r9
 802e5a6:	4638      	mov	r0, r7
 802e5a8:	47c0      	blx	r8
 802e5aa:	3001      	adds	r0, #1
 802e5ac:	d01e      	beq.n	802e5ec <_printf_common+0xa4>
 802e5ae:	6823      	ldr	r3, [r4, #0]
 802e5b0:	6922      	ldr	r2, [r4, #16]
 802e5b2:	f003 0306 	and.w	r3, r3, #6
 802e5b6:	2b04      	cmp	r3, #4
 802e5b8:	bf02      	ittt	eq
 802e5ba:	68e5      	ldreq	r5, [r4, #12]
 802e5bc:	6833      	ldreq	r3, [r6, #0]
 802e5be:	1aed      	subeq	r5, r5, r3
 802e5c0:	68a3      	ldr	r3, [r4, #8]
 802e5c2:	bf0c      	ite	eq
 802e5c4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802e5c8:	2500      	movne	r5, #0
 802e5ca:	4293      	cmp	r3, r2
 802e5cc:	bfc4      	itt	gt
 802e5ce:	1a9b      	subgt	r3, r3, r2
 802e5d0:	18ed      	addgt	r5, r5, r3
 802e5d2:	2600      	movs	r6, #0
 802e5d4:	341a      	adds	r4, #26
 802e5d6:	42b5      	cmp	r5, r6
 802e5d8:	d11a      	bne.n	802e610 <_printf_common+0xc8>
 802e5da:	2000      	movs	r0, #0
 802e5dc:	e008      	b.n	802e5f0 <_printf_common+0xa8>
 802e5de:	2301      	movs	r3, #1
 802e5e0:	4652      	mov	r2, sl
 802e5e2:	4649      	mov	r1, r9
 802e5e4:	4638      	mov	r0, r7
 802e5e6:	47c0      	blx	r8
 802e5e8:	3001      	adds	r0, #1
 802e5ea:	d103      	bne.n	802e5f4 <_printf_common+0xac>
 802e5ec:	f04f 30ff 	mov.w	r0, #4294967295
 802e5f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802e5f4:	3501      	adds	r5, #1
 802e5f6:	e7c6      	b.n	802e586 <_printf_common+0x3e>
 802e5f8:	18e1      	adds	r1, r4, r3
 802e5fa:	1c5a      	adds	r2, r3, #1
 802e5fc:	2030      	movs	r0, #48	; 0x30
 802e5fe:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802e602:	4422      	add	r2, r4
 802e604:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802e608:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802e60c:	3302      	adds	r3, #2
 802e60e:	e7c7      	b.n	802e5a0 <_printf_common+0x58>
 802e610:	2301      	movs	r3, #1
 802e612:	4622      	mov	r2, r4
 802e614:	4649      	mov	r1, r9
 802e616:	4638      	mov	r0, r7
 802e618:	47c0      	blx	r8
 802e61a:	3001      	adds	r0, #1
 802e61c:	d0e6      	beq.n	802e5ec <_printf_common+0xa4>
 802e61e:	3601      	adds	r6, #1
 802e620:	e7d9      	b.n	802e5d6 <_printf_common+0x8e>
	...

0802e624 <_printf_i>:
 802e624:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802e628:	7e0f      	ldrb	r7, [r1, #24]
 802e62a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802e62c:	2f78      	cmp	r7, #120	; 0x78
 802e62e:	4691      	mov	r9, r2
 802e630:	4680      	mov	r8, r0
 802e632:	460c      	mov	r4, r1
 802e634:	469a      	mov	sl, r3
 802e636:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802e63a:	d807      	bhi.n	802e64c <_printf_i+0x28>
 802e63c:	2f62      	cmp	r7, #98	; 0x62
 802e63e:	d80a      	bhi.n	802e656 <_printf_i+0x32>
 802e640:	2f00      	cmp	r7, #0
 802e642:	f000 80d4 	beq.w	802e7ee <_printf_i+0x1ca>
 802e646:	2f58      	cmp	r7, #88	; 0x58
 802e648:	f000 80c0 	beq.w	802e7cc <_printf_i+0x1a8>
 802e64c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802e650:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802e654:	e03a      	b.n	802e6cc <_printf_i+0xa8>
 802e656:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802e65a:	2b15      	cmp	r3, #21
 802e65c:	d8f6      	bhi.n	802e64c <_printf_i+0x28>
 802e65e:	a101      	add	r1, pc, #4	; (adr r1, 802e664 <_printf_i+0x40>)
 802e660:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802e664:	0802e6bd 	.word	0x0802e6bd
 802e668:	0802e6d1 	.word	0x0802e6d1
 802e66c:	0802e64d 	.word	0x0802e64d
 802e670:	0802e64d 	.word	0x0802e64d
 802e674:	0802e64d 	.word	0x0802e64d
 802e678:	0802e64d 	.word	0x0802e64d
 802e67c:	0802e6d1 	.word	0x0802e6d1
 802e680:	0802e64d 	.word	0x0802e64d
 802e684:	0802e64d 	.word	0x0802e64d
 802e688:	0802e64d 	.word	0x0802e64d
 802e68c:	0802e64d 	.word	0x0802e64d
 802e690:	0802e7d5 	.word	0x0802e7d5
 802e694:	0802e6fd 	.word	0x0802e6fd
 802e698:	0802e78f 	.word	0x0802e78f
 802e69c:	0802e64d 	.word	0x0802e64d
 802e6a0:	0802e64d 	.word	0x0802e64d
 802e6a4:	0802e7f7 	.word	0x0802e7f7
 802e6a8:	0802e64d 	.word	0x0802e64d
 802e6ac:	0802e6fd 	.word	0x0802e6fd
 802e6b0:	0802e64d 	.word	0x0802e64d
 802e6b4:	0802e64d 	.word	0x0802e64d
 802e6b8:	0802e797 	.word	0x0802e797
 802e6bc:	682b      	ldr	r3, [r5, #0]
 802e6be:	1d1a      	adds	r2, r3, #4
 802e6c0:	681b      	ldr	r3, [r3, #0]
 802e6c2:	602a      	str	r2, [r5, #0]
 802e6c4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802e6c8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802e6cc:	2301      	movs	r3, #1
 802e6ce:	e09f      	b.n	802e810 <_printf_i+0x1ec>
 802e6d0:	6820      	ldr	r0, [r4, #0]
 802e6d2:	682b      	ldr	r3, [r5, #0]
 802e6d4:	0607      	lsls	r7, r0, #24
 802e6d6:	f103 0104 	add.w	r1, r3, #4
 802e6da:	6029      	str	r1, [r5, #0]
 802e6dc:	d501      	bpl.n	802e6e2 <_printf_i+0xbe>
 802e6de:	681e      	ldr	r6, [r3, #0]
 802e6e0:	e003      	b.n	802e6ea <_printf_i+0xc6>
 802e6e2:	0646      	lsls	r6, r0, #25
 802e6e4:	d5fb      	bpl.n	802e6de <_printf_i+0xba>
 802e6e6:	f9b3 6000 	ldrsh.w	r6, [r3]
 802e6ea:	2e00      	cmp	r6, #0
 802e6ec:	da03      	bge.n	802e6f6 <_printf_i+0xd2>
 802e6ee:	232d      	movs	r3, #45	; 0x2d
 802e6f0:	4276      	negs	r6, r6
 802e6f2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802e6f6:	485a      	ldr	r0, [pc, #360]	; (802e860 <_printf_i+0x23c>)
 802e6f8:	230a      	movs	r3, #10
 802e6fa:	e012      	b.n	802e722 <_printf_i+0xfe>
 802e6fc:	682b      	ldr	r3, [r5, #0]
 802e6fe:	6820      	ldr	r0, [r4, #0]
 802e700:	1d19      	adds	r1, r3, #4
 802e702:	6029      	str	r1, [r5, #0]
 802e704:	0605      	lsls	r5, r0, #24
 802e706:	d501      	bpl.n	802e70c <_printf_i+0xe8>
 802e708:	681e      	ldr	r6, [r3, #0]
 802e70a:	e002      	b.n	802e712 <_printf_i+0xee>
 802e70c:	0641      	lsls	r1, r0, #25
 802e70e:	d5fb      	bpl.n	802e708 <_printf_i+0xe4>
 802e710:	881e      	ldrh	r6, [r3, #0]
 802e712:	4853      	ldr	r0, [pc, #332]	; (802e860 <_printf_i+0x23c>)
 802e714:	2f6f      	cmp	r7, #111	; 0x6f
 802e716:	bf0c      	ite	eq
 802e718:	2308      	moveq	r3, #8
 802e71a:	230a      	movne	r3, #10
 802e71c:	2100      	movs	r1, #0
 802e71e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802e722:	6865      	ldr	r5, [r4, #4]
 802e724:	60a5      	str	r5, [r4, #8]
 802e726:	2d00      	cmp	r5, #0
 802e728:	bfa2      	ittt	ge
 802e72a:	6821      	ldrge	r1, [r4, #0]
 802e72c:	f021 0104 	bicge.w	r1, r1, #4
 802e730:	6021      	strge	r1, [r4, #0]
 802e732:	b90e      	cbnz	r6, 802e738 <_printf_i+0x114>
 802e734:	2d00      	cmp	r5, #0
 802e736:	d04b      	beq.n	802e7d0 <_printf_i+0x1ac>
 802e738:	4615      	mov	r5, r2
 802e73a:	fbb6 f1f3 	udiv	r1, r6, r3
 802e73e:	fb03 6711 	mls	r7, r3, r1, r6
 802e742:	5dc7      	ldrb	r7, [r0, r7]
 802e744:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802e748:	4637      	mov	r7, r6
 802e74a:	42bb      	cmp	r3, r7
 802e74c:	460e      	mov	r6, r1
 802e74e:	d9f4      	bls.n	802e73a <_printf_i+0x116>
 802e750:	2b08      	cmp	r3, #8
 802e752:	d10b      	bne.n	802e76c <_printf_i+0x148>
 802e754:	6823      	ldr	r3, [r4, #0]
 802e756:	07de      	lsls	r6, r3, #31
 802e758:	d508      	bpl.n	802e76c <_printf_i+0x148>
 802e75a:	6923      	ldr	r3, [r4, #16]
 802e75c:	6861      	ldr	r1, [r4, #4]
 802e75e:	4299      	cmp	r1, r3
 802e760:	bfde      	ittt	le
 802e762:	2330      	movle	r3, #48	; 0x30
 802e764:	f805 3c01 	strble.w	r3, [r5, #-1]
 802e768:	f105 35ff 	addle.w	r5, r5, #4294967295
 802e76c:	1b52      	subs	r2, r2, r5
 802e76e:	6122      	str	r2, [r4, #16]
 802e770:	f8cd a000 	str.w	sl, [sp]
 802e774:	464b      	mov	r3, r9
 802e776:	aa03      	add	r2, sp, #12
 802e778:	4621      	mov	r1, r4
 802e77a:	4640      	mov	r0, r8
 802e77c:	f7ff fee4 	bl	802e548 <_printf_common>
 802e780:	3001      	adds	r0, #1
 802e782:	d14a      	bne.n	802e81a <_printf_i+0x1f6>
 802e784:	f04f 30ff 	mov.w	r0, #4294967295
 802e788:	b004      	add	sp, #16
 802e78a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802e78e:	6823      	ldr	r3, [r4, #0]
 802e790:	f043 0320 	orr.w	r3, r3, #32
 802e794:	6023      	str	r3, [r4, #0]
 802e796:	4833      	ldr	r0, [pc, #204]	; (802e864 <_printf_i+0x240>)
 802e798:	2778      	movs	r7, #120	; 0x78
 802e79a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802e79e:	6823      	ldr	r3, [r4, #0]
 802e7a0:	6829      	ldr	r1, [r5, #0]
 802e7a2:	061f      	lsls	r7, r3, #24
 802e7a4:	f851 6b04 	ldr.w	r6, [r1], #4
 802e7a8:	d402      	bmi.n	802e7b0 <_printf_i+0x18c>
 802e7aa:	065f      	lsls	r7, r3, #25
 802e7ac:	bf48      	it	mi
 802e7ae:	b2b6      	uxthmi	r6, r6
 802e7b0:	07df      	lsls	r7, r3, #31
 802e7b2:	bf48      	it	mi
 802e7b4:	f043 0320 	orrmi.w	r3, r3, #32
 802e7b8:	6029      	str	r1, [r5, #0]
 802e7ba:	bf48      	it	mi
 802e7bc:	6023      	strmi	r3, [r4, #0]
 802e7be:	b91e      	cbnz	r6, 802e7c8 <_printf_i+0x1a4>
 802e7c0:	6823      	ldr	r3, [r4, #0]
 802e7c2:	f023 0320 	bic.w	r3, r3, #32
 802e7c6:	6023      	str	r3, [r4, #0]
 802e7c8:	2310      	movs	r3, #16
 802e7ca:	e7a7      	b.n	802e71c <_printf_i+0xf8>
 802e7cc:	4824      	ldr	r0, [pc, #144]	; (802e860 <_printf_i+0x23c>)
 802e7ce:	e7e4      	b.n	802e79a <_printf_i+0x176>
 802e7d0:	4615      	mov	r5, r2
 802e7d2:	e7bd      	b.n	802e750 <_printf_i+0x12c>
 802e7d4:	682b      	ldr	r3, [r5, #0]
 802e7d6:	6826      	ldr	r6, [r4, #0]
 802e7d8:	6961      	ldr	r1, [r4, #20]
 802e7da:	1d18      	adds	r0, r3, #4
 802e7dc:	6028      	str	r0, [r5, #0]
 802e7de:	0635      	lsls	r5, r6, #24
 802e7e0:	681b      	ldr	r3, [r3, #0]
 802e7e2:	d501      	bpl.n	802e7e8 <_printf_i+0x1c4>
 802e7e4:	6019      	str	r1, [r3, #0]
 802e7e6:	e002      	b.n	802e7ee <_printf_i+0x1ca>
 802e7e8:	0670      	lsls	r0, r6, #25
 802e7ea:	d5fb      	bpl.n	802e7e4 <_printf_i+0x1c0>
 802e7ec:	8019      	strh	r1, [r3, #0]
 802e7ee:	2300      	movs	r3, #0
 802e7f0:	6123      	str	r3, [r4, #16]
 802e7f2:	4615      	mov	r5, r2
 802e7f4:	e7bc      	b.n	802e770 <_printf_i+0x14c>
 802e7f6:	682b      	ldr	r3, [r5, #0]
 802e7f8:	1d1a      	adds	r2, r3, #4
 802e7fa:	602a      	str	r2, [r5, #0]
 802e7fc:	681d      	ldr	r5, [r3, #0]
 802e7fe:	6862      	ldr	r2, [r4, #4]
 802e800:	2100      	movs	r1, #0
 802e802:	4628      	mov	r0, r5
 802e804:	f7d1 fd54 	bl	80002b0 <memchr>
 802e808:	b108      	cbz	r0, 802e80e <_printf_i+0x1ea>
 802e80a:	1b40      	subs	r0, r0, r5
 802e80c:	6060      	str	r0, [r4, #4]
 802e80e:	6863      	ldr	r3, [r4, #4]
 802e810:	6123      	str	r3, [r4, #16]
 802e812:	2300      	movs	r3, #0
 802e814:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802e818:	e7aa      	b.n	802e770 <_printf_i+0x14c>
 802e81a:	6923      	ldr	r3, [r4, #16]
 802e81c:	462a      	mov	r2, r5
 802e81e:	4649      	mov	r1, r9
 802e820:	4640      	mov	r0, r8
 802e822:	47d0      	blx	sl
 802e824:	3001      	adds	r0, #1
 802e826:	d0ad      	beq.n	802e784 <_printf_i+0x160>
 802e828:	6823      	ldr	r3, [r4, #0]
 802e82a:	079b      	lsls	r3, r3, #30
 802e82c:	d413      	bmi.n	802e856 <_printf_i+0x232>
 802e82e:	68e0      	ldr	r0, [r4, #12]
 802e830:	9b03      	ldr	r3, [sp, #12]
 802e832:	4298      	cmp	r0, r3
 802e834:	bfb8      	it	lt
 802e836:	4618      	movlt	r0, r3
 802e838:	e7a6      	b.n	802e788 <_printf_i+0x164>
 802e83a:	2301      	movs	r3, #1
 802e83c:	4632      	mov	r2, r6
 802e83e:	4649      	mov	r1, r9
 802e840:	4640      	mov	r0, r8
 802e842:	47d0      	blx	sl
 802e844:	3001      	adds	r0, #1
 802e846:	d09d      	beq.n	802e784 <_printf_i+0x160>
 802e848:	3501      	adds	r5, #1
 802e84a:	68e3      	ldr	r3, [r4, #12]
 802e84c:	9903      	ldr	r1, [sp, #12]
 802e84e:	1a5b      	subs	r3, r3, r1
 802e850:	42ab      	cmp	r3, r5
 802e852:	dcf2      	bgt.n	802e83a <_printf_i+0x216>
 802e854:	e7eb      	b.n	802e82e <_printf_i+0x20a>
 802e856:	2500      	movs	r5, #0
 802e858:	f104 0619 	add.w	r6, r4, #25
 802e85c:	e7f5      	b.n	802e84a <_printf_i+0x226>
 802e85e:	bf00      	nop
 802e860:	08045dc1 	.word	0x08045dc1
 802e864:	08045dd2 	.word	0x08045dd2

0802e868 <__sflush_r>:
 802e868:	898a      	ldrh	r2, [r1, #12]
 802e86a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802e86e:	4605      	mov	r5, r0
 802e870:	0710      	lsls	r0, r2, #28
 802e872:	460c      	mov	r4, r1
 802e874:	d458      	bmi.n	802e928 <__sflush_r+0xc0>
 802e876:	684b      	ldr	r3, [r1, #4]
 802e878:	2b00      	cmp	r3, #0
 802e87a:	dc05      	bgt.n	802e888 <__sflush_r+0x20>
 802e87c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802e87e:	2b00      	cmp	r3, #0
 802e880:	dc02      	bgt.n	802e888 <__sflush_r+0x20>
 802e882:	2000      	movs	r0, #0
 802e884:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802e888:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802e88a:	2e00      	cmp	r6, #0
 802e88c:	d0f9      	beq.n	802e882 <__sflush_r+0x1a>
 802e88e:	2300      	movs	r3, #0
 802e890:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802e894:	682f      	ldr	r7, [r5, #0]
 802e896:	6a21      	ldr	r1, [r4, #32]
 802e898:	602b      	str	r3, [r5, #0]
 802e89a:	d032      	beq.n	802e902 <__sflush_r+0x9a>
 802e89c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802e89e:	89a3      	ldrh	r3, [r4, #12]
 802e8a0:	075a      	lsls	r2, r3, #29
 802e8a2:	d505      	bpl.n	802e8b0 <__sflush_r+0x48>
 802e8a4:	6863      	ldr	r3, [r4, #4]
 802e8a6:	1ac0      	subs	r0, r0, r3
 802e8a8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802e8aa:	b10b      	cbz	r3, 802e8b0 <__sflush_r+0x48>
 802e8ac:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802e8ae:	1ac0      	subs	r0, r0, r3
 802e8b0:	2300      	movs	r3, #0
 802e8b2:	4602      	mov	r2, r0
 802e8b4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802e8b6:	6a21      	ldr	r1, [r4, #32]
 802e8b8:	4628      	mov	r0, r5
 802e8ba:	47b0      	blx	r6
 802e8bc:	1c43      	adds	r3, r0, #1
 802e8be:	89a3      	ldrh	r3, [r4, #12]
 802e8c0:	d106      	bne.n	802e8d0 <__sflush_r+0x68>
 802e8c2:	6829      	ldr	r1, [r5, #0]
 802e8c4:	291d      	cmp	r1, #29
 802e8c6:	d82b      	bhi.n	802e920 <__sflush_r+0xb8>
 802e8c8:	4a29      	ldr	r2, [pc, #164]	; (802e970 <__sflush_r+0x108>)
 802e8ca:	410a      	asrs	r2, r1
 802e8cc:	07d6      	lsls	r6, r2, #31
 802e8ce:	d427      	bmi.n	802e920 <__sflush_r+0xb8>
 802e8d0:	2200      	movs	r2, #0
 802e8d2:	6062      	str	r2, [r4, #4]
 802e8d4:	04d9      	lsls	r1, r3, #19
 802e8d6:	6922      	ldr	r2, [r4, #16]
 802e8d8:	6022      	str	r2, [r4, #0]
 802e8da:	d504      	bpl.n	802e8e6 <__sflush_r+0x7e>
 802e8dc:	1c42      	adds	r2, r0, #1
 802e8de:	d101      	bne.n	802e8e4 <__sflush_r+0x7c>
 802e8e0:	682b      	ldr	r3, [r5, #0]
 802e8e2:	b903      	cbnz	r3, 802e8e6 <__sflush_r+0x7e>
 802e8e4:	6560      	str	r0, [r4, #84]	; 0x54
 802e8e6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802e8e8:	602f      	str	r7, [r5, #0]
 802e8ea:	2900      	cmp	r1, #0
 802e8ec:	d0c9      	beq.n	802e882 <__sflush_r+0x1a>
 802e8ee:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802e8f2:	4299      	cmp	r1, r3
 802e8f4:	d002      	beq.n	802e8fc <__sflush_r+0x94>
 802e8f6:	4628      	mov	r0, r5
 802e8f8:	f7ff fc96 	bl	802e228 <_free_r>
 802e8fc:	2000      	movs	r0, #0
 802e8fe:	6360      	str	r0, [r4, #52]	; 0x34
 802e900:	e7c0      	b.n	802e884 <__sflush_r+0x1c>
 802e902:	2301      	movs	r3, #1
 802e904:	4628      	mov	r0, r5
 802e906:	47b0      	blx	r6
 802e908:	1c41      	adds	r1, r0, #1
 802e90a:	d1c8      	bne.n	802e89e <__sflush_r+0x36>
 802e90c:	682b      	ldr	r3, [r5, #0]
 802e90e:	2b00      	cmp	r3, #0
 802e910:	d0c5      	beq.n	802e89e <__sflush_r+0x36>
 802e912:	2b1d      	cmp	r3, #29
 802e914:	d001      	beq.n	802e91a <__sflush_r+0xb2>
 802e916:	2b16      	cmp	r3, #22
 802e918:	d101      	bne.n	802e91e <__sflush_r+0xb6>
 802e91a:	602f      	str	r7, [r5, #0]
 802e91c:	e7b1      	b.n	802e882 <__sflush_r+0x1a>
 802e91e:	89a3      	ldrh	r3, [r4, #12]
 802e920:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802e924:	81a3      	strh	r3, [r4, #12]
 802e926:	e7ad      	b.n	802e884 <__sflush_r+0x1c>
 802e928:	690f      	ldr	r7, [r1, #16]
 802e92a:	2f00      	cmp	r7, #0
 802e92c:	d0a9      	beq.n	802e882 <__sflush_r+0x1a>
 802e92e:	0793      	lsls	r3, r2, #30
 802e930:	680e      	ldr	r6, [r1, #0]
 802e932:	bf08      	it	eq
 802e934:	694b      	ldreq	r3, [r1, #20]
 802e936:	600f      	str	r7, [r1, #0]
 802e938:	bf18      	it	ne
 802e93a:	2300      	movne	r3, #0
 802e93c:	eba6 0807 	sub.w	r8, r6, r7
 802e940:	608b      	str	r3, [r1, #8]
 802e942:	f1b8 0f00 	cmp.w	r8, #0
 802e946:	dd9c      	ble.n	802e882 <__sflush_r+0x1a>
 802e948:	6a21      	ldr	r1, [r4, #32]
 802e94a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802e94c:	4643      	mov	r3, r8
 802e94e:	463a      	mov	r2, r7
 802e950:	4628      	mov	r0, r5
 802e952:	47b0      	blx	r6
 802e954:	2800      	cmp	r0, #0
 802e956:	dc06      	bgt.n	802e966 <__sflush_r+0xfe>
 802e958:	89a3      	ldrh	r3, [r4, #12]
 802e95a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802e95e:	81a3      	strh	r3, [r4, #12]
 802e960:	f04f 30ff 	mov.w	r0, #4294967295
 802e964:	e78e      	b.n	802e884 <__sflush_r+0x1c>
 802e966:	4407      	add	r7, r0
 802e968:	eba8 0800 	sub.w	r8, r8, r0
 802e96c:	e7e9      	b.n	802e942 <__sflush_r+0xda>
 802e96e:	bf00      	nop
 802e970:	dfbffffe 	.word	0xdfbffffe

0802e974 <_fflush_r>:
 802e974:	b538      	push	{r3, r4, r5, lr}
 802e976:	690b      	ldr	r3, [r1, #16]
 802e978:	4605      	mov	r5, r0
 802e97a:	460c      	mov	r4, r1
 802e97c:	b913      	cbnz	r3, 802e984 <_fflush_r+0x10>
 802e97e:	2500      	movs	r5, #0
 802e980:	4628      	mov	r0, r5
 802e982:	bd38      	pop	{r3, r4, r5, pc}
 802e984:	b118      	cbz	r0, 802e98e <_fflush_r+0x1a>
 802e986:	6a03      	ldr	r3, [r0, #32]
 802e988:	b90b      	cbnz	r3, 802e98e <_fflush_r+0x1a>
 802e98a:	f7ff fa2f 	bl	802ddec <__sinit>
 802e98e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802e992:	2b00      	cmp	r3, #0
 802e994:	d0f3      	beq.n	802e97e <_fflush_r+0xa>
 802e996:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802e998:	07d0      	lsls	r0, r2, #31
 802e99a:	d404      	bmi.n	802e9a6 <_fflush_r+0x32>
 802e99c:	0599      	lsls	r1, r3, #22
 802e99e:	d402      	bmi.n	802e9a6 <_fflush_r+0x32>
 802e9a0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802e9a2:	f7ff fbd2 	bl	802e14a <__retarget_lock_acquire_recursive>
 802e9a6:	4628      	mov	r0, r5
 802e9a8:	4621      	mov	r1, r4
 802e9aa:	f7ff ff5d 	bl	802e868 <__sflush_r>
 802e9ae:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802e9b0:	07da      	lsls	r2, r3, #31
 802e9b2:	4605      	mov	r5, r0
 802e9b4:	d4e4      	bmi.n	802e980 <_fflush_r+0xc>
 802e9b6:	89a3      	ldrh	r3, [r4, #12]
 802e9b8:	059b      	lsls	r3, r3, #22
 802e9ba:	d4e1      	bmi.n	802e980 <_fflush_r+0xc>
 802e9bc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802e9be:	f7ff fbc5 	bl	802e14c <__retarget_lock_release_recursive>
 802e9c2:	e7dd      	b.n	802e980 <_fflush_r+0xc>

0802e9c4 <__swbuf_r>:
 802e9c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802e9c6:	460e      	mov	r6, r1
 802e9c8:	4614      	mov	r4, r2
 802e9ca:	4605      	mov	r5, r0
 802e9cc:	b118      	cbz	r0, 802e9d6 <__swbuf_r+0x12>
 802e9ce:	6a03      	ldr	r3, [r0, #32]
 802e9d0:	b90b      	cbnz	r3, 802e9d6 <__swbuf_r+0x12>
 802e9d2:	f7ff fa0b 	bl	802ddec <__sinit>
 802e9d6:	69a3      	ldr	r3, [r4, #24]
 802e9d8:	60a3      	str	r3, [r4, #8]
 802e9da:	89a3      	ldrh	r3, [r4, #12]
 802e9dc:	071a      	lsls	r2, r3, #28
 802e9de:	d525      	bpl.n	802ea2c <__swbuf_r+0x68>
 802e9e0:	6923      	ldr	r3, [r4, #16]
 802e9e2:	b31b      	cbz	r3, 802ea2c <__swbuf_r+0x68>
 802e9e4:	6823      	ldr	r3, [r4, #0]
 802e9e6:	6922      	ldr	r2, [r4, #16]
 802e9e8:	1a98      	subs	r0, r3, r2
 802e9ea:	6963      	ldr	r3, [r4, #20]
 802e9ec:	b2f6      	uxtb	r6, r6
 802e9ee:	4283      	cmp	r3, r0
 802e9f0:	4637      	mov	r7, r6
 802e9f2:	dc04      	bgt.n	802e9fe <__swbuf_r+0x3a>
 802e9f4:	4621      	mov	r1, r4
 802e9f6:	4628      	mov	r0, r5
 802e9f8:	f7ff ffbc 	bl	802e974 <_fflush_r>
 802e9fc:	b9e0      	cbnz	r0, 802ea38 <__swbuf_r+0x74>
 802e9fe:	68a3      	ldr	r3, [r4, #8]
 802ea00:	3b01      	subs	r3, #1
 802ea02:	60a3      	str	r3, [r4, #8]
 802ea04:	6823      	ldr	r3, [r4, #0]
 802ea06:	1c5a      	adds	r2, r3, #1
 802ea08:	6022      	str	r2, [r4, #0]
 802ea0a:	701e      	strb	r6, [r3, #0]
 802ea0c:	6962      	ldr	r2, [r4, #20]
 802ea0e:	1c43      	adds	r3, r0, #1
 802ea10:	429a      	cmp	r2, r3
 802ea12:	d004      	beq.n	802ea1e <__swbuf_r+0x5a>
 802ea14:	89a3      	ldrh	r3, [r4, #12]
 802ea16:	07db      	lsls	r3, r3, #31
 802ea18:	d506      	bpl.n	802ea28 <__swbuf_r+0x64>
 802ea1a:	2e0a      	cmp	r6, #10
 802ea1c:	d104      	bne.n	802ea28 <__swbuf_r+0x64>
 802ea1e:	4621      	mov	r1, r4
 802ea20:	4628      	mov	r0, r5
 802ea22:	f7ff ffa7 	bl	802e974 <_fflush_r>
 802ea26:	b938      	cbnz	r0, 802ea38 <__swbuf_r+0x74>
 802ea28:	4638      	mov	r0, r7
 802ea2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802ea2c:	4621      	mov	r1, r4
 802ea2e:	4628      	mov	r0, r5
 802ea30:	f000 f806 	bl	802ea40 <__swsetup_r>
 802ea34:	2800      	cmp	r0, #0
 802ea36:	d0d5      	beq.n	802e9e4 <__swbuf_r+0x20>
 802ea38:	f04f 37ff 	mov.w	r7, #4294967295
 802ea3c:	e7f4      	b.n	802ea28 <__swbuf_r+0x64>
	...

0802ea40 <__swsetup_r>:
 802ea40:	b538      	push	{r3, r4, r5, lr}
 802ea42:	4b2a      	ldr	r3, [pc, #168]	; (802eaec <__swsetup_r+0xac>)
 802ea44:	4605      	mov	r5, r0
 802ea46:	6818      	ldr	r0, [r3, #0]
 802ea48:	460c      	mov	r4, r1
 802ea4a:	b118      	cbz	r0, 802ea54 <__swsetup_r+0x14>
 802ea4c:	6a03      	ldr	r3, [r0, #32]
 802ea4e:	b90b      	cbnz	r3, 802ea54 <__swsetup_r+0x14>
 802ea50:	f7ff f9cc 	bl	802ddec <__sinit>
 802ea54:	89a3      	ldrh	r3, [r4, #12]
 802ea56:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802ea5a:	0718      	lsls	r0, r3, #28
 802ea5c:	d422      	bmi.n	802eaa4 <__swsetup_r+0x64>
 802ea5e:	06d9      	lsls	r1, r3, #27
 802ea60:	d407      	bmi.n	802ea72 <__swsetup_r+0x32>
 802ea62:	2309      	movs	r3, #9
 802ea64:	602b      	str	r3, [r5, #0]
 802ea66:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802ea6a:	81a3      	strh	r3, [r4, #12]
 802ea6c:	f04f 30ff 	mov.w	r0, #4294967295
 802ea70:	e034      	b.n	802eadc <__swsetup_r+0x9c>
 802ea72:	0758      	lsls	r0, r3, #29
 802ea74:	d512      	bpl.n	802ea9c <__swsetup_r+0x5c>
 802ea76:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802ea78:	b141      	cbz	r1, 802ea8c <__swsetup_r+0x4c>
 802ea7a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802ea7e:	4299      	cmp	r1, r3
 802ea80:	d002      	beq.n	802ea88 <__swsetup_r+0x48>
 802ea82:	4628      	mov	r0, r5
 802ea84:	f7ff fbd0 	bl	802e228 <_free_r>
 802ea88:	2300      	movs	r3, #0
 802ea8a:	6363      	str	r3, [r4, #52]	; 0x34
 802ea8c:	89a3      	ldrh	r3, [r4, #12]
 802ea8e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802ea92:	81a3      	strh	r3, [r4, #12]
 802ea94:	2300      	movs	r3, #0
 802ea96:	6063      	str	r3, [r4, #4]
 802ea98:	6923      	ldr	r3, [r4, #16]
 802ea9a:	6023      	str	r3, [r4, #0]
 802ea9c:	89a3      	ldrh	r3, [r4, #12]
 802ea9e:	f043 0308 	orr.w	r3, r3, #8
 802eaa2:	81a3      	strh	r3, [r4, #12]
 802eaa4:	6923      	ldr	r3, [r4, #16]
 802eaa6:	b94b      	cbnz	r3, 802eabc <__swsetup_r+0x7c>
 802eaa8:	89a3      	ldrh	r3, [r4, #12]
 802eaaa:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802eaae:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802eab2:	d003      	beq.n	802eabc <__swsetup_r+0x7c>
 802eab4:	4621      	mov	r1, r4
 802eab6:	4628      	mov	r0, r5
 802eab8:	f000 f840 	bl	802eb3c <__smakebuf_r>
 802eabc:	89a0      	ldrh	r0, [r4, #12]
 802eabe:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802eac2:	f010 0301 	ands.w	r3, r0, #1
 802eac6:	d00a      	beq.n	802eade <__swsetup_r+0x9e>
 802eac8:	2300      	movs	r3, #0
 802eaca:	60a3      	str	r3, [r4, #8]
 802eacc:	6963      	ldr	r3, [r4, #20]
 802eace:	425b      	negs	r3, r3
 802ead0:	61a3      	str	r3, [r4, #24]
 802ead2:	6923      	ldr	r3, [r4, #16]
 802ead4:	b943      	cbnz	r3, 802eae8 <__swsetup_r+0xa8>
 802ead6:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802eada:	d1c4      	bne.n	802ea66 <__swsetup_r+0x26>
 802eadc:	bd38      	pop	{r3, r4, r5, pc}
 802eade:	0781      	lsls	r1, r0, #30
 802eae0:	bf58      	it	pl
 802eae2:	6963      	ldrpl	r3, [r4, #20]
 802eae4:	60a3      	str	r3, [r4, #8]
 802eae6:	e7f4      	b.n	802ead2 <__swsetup_r+0x92>
 802eae8:	2000      	movs	r0, #0
 802eaea:	e7f7      	b.n	802eadc <__swsetup_r+0x9c>
 802eaec:	20000160 	.word	0x20000160

0802eaf0 <__swhatbuf_r>:
 802eaf0:	b570      	push	{r4, r5, r6, lr}
 802eaf2:	460c      	mov	r4, r1
 802eaf4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802eaf8:	2900      	cmp	r1, #0
 802eafa:	b096      	sub	sp, #88	; 0x58
 802eafc:	4615      	mov	r5, r2
 802eafe:	461e      	mov	r6, r3
 802eb00:	da0d      	bge.n	802eb1e <__swhatbuf_r+0x2e>
 802eb02:	89a3      	ldrh	r3, [r4, #12]
 802eb04:	f013 0f80 	tst.w	r3, #128	; 0x80
 802eb08:	f04f 0100 	mov.w	r1, #0
 802eb0c:	bf0c      	ite	eq
 802eb0e:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802eb12:	2340      	movne	r3, #64	; 0x40
 802eb14:	2000      	movs	r0, #0
 802eb16:	6031      	str	r1, [r6, #0]
 802eb18:	602b      	str	r3, [r5, #0]
 802eb1a:	b016      	add	sp, #88	; 0x58
 802eb1c:	bd70      	pop	{r4, r5, r6, pc}
 802eb1e:	466a      	mov	r2, sp
 802eb20:	f000 f848 	bl	802ebb4 <_fstat_r>
 802eb24:	2800      	cmp	r0, #0
 802eb26:	dbec      	blt.n	802eb02 <__swhatbuf_r+0x12>
 802eb28:	9901      	ldr	r1, [sp, #4]
 802eb2a:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802eb2e:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802eb32:	4259      	negs	r1, r3
 802eb34:	4159      	adcs	r1, r3
 802eb36:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802eb3a:	e7eb      	b.n	802eb14 <__swhatbuf_r+0x24>

0802eb3c <__smakebuf_r>:
 802eb3c:	898b      	ldrh	r3, [r1, #12]
 802eb3e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802eb40:	079d      	lsls	r5, r3, #30
 802eb42:	4606      	mov	r6, r0
 802eb44:	460c      	mov	r4, r1
 802eb46:	d507      	bpl.n	802eb58 <__smakebuf_r+0x1c>
 802eb48:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802eb4c:	6023      	str	r3, [r4, #0]
 802eb4e:	6123      	str	r3, [r4, #16]
 802eb50:	2301      	movs	r3, #1
 802eb52:	6163      	str	r3, [r4, #20]
 802eb54:	b002      	add	sp, #8
 802eb56:	bd70      	pop	{r4, r5, r6, pc}
 802eb58:	ab01      	add	r3, sp, #4
 802eb5a:	466a      	mov	r2, sp
 802eb5c:	f7ff ffc8 	bl	802eaf0 <__swhatbuf_r>
 802eb60:	9900      	ldr	r1, [sp, #0]
 802eb62:	4605      	mov	r5, r0
 802eb64:	4630      	mov	r0, r6
 802eb66:	f7ff f81b 	bl	802dba0 <_malloc_r>
 802eb6a:	b948      	cbnz	r0, 802eb80 <__smakebuf_r+0x44>
 802eb6c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802eb70:	059a      	lsls	r2, r3, #22
 802eb72:	d4ef      	bmi.n	802eb54 <__smakebuf_r+0x18>
 802eb74:	f023 0303 	bic.w	r3, r3, #3
 802eb78:	f043 0302 	orr.w	r3, r3, #2
 802eb7c:	81a3      	strh	r3, [r4, #12]
 802eb7e:	e7e3      	b.n	802eb48 <__smakebuf_r+0xc>
 802eb80:	89a3      	ldrh	r3, [r4, #12]
 802eb82:	6020      	str	r0, [r4, #0]
 802eb84:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802eb88:	81a3      	strh	r3, [r4, #12]
 802eb8a:	9b00      	ldr	r3, [sp, #0]
 802eb8c:	6163      	str	r3, [r4, #20]
 802eb8e:	9b01      	ldr	r3, [sp, #4]
 802eb90:	6120      	str	r0, [r4, #16]
 802eb92:	b15b      	cbz	r3, 802ebac <__smakebuf_r+0x70>
 802eb94:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802eb98:	4630      	mov	r0, r6
 802eb9a:	f000 f81d 	bl	802ebd8 <_isatty_r>
 802eb9e:	b128      	cbz	r0, 802ebac <__smakebuf_r+0x70>
 802eba0:	89a3      	ldrh	r3, [r4, #12]
 802eba2:	f023 0303 	bic.w	r3, r3, #3
 802eba6:	f043 0301 	orr.w	r3, r3, #1
 802ebaa:	81a3      	strh	r3, [r4, #12]
 802ebac:	89a3      	ldrh	r3, [r4, #12]
 802ebae:	431d      	orrs	r5, r3
 802ebb0:	81a5      	strh	r5, [r4, #12]
 802ebb2:	e7cf      	b.n	802eb54 <__smakebuf_r+0x18>

0802ebb4 <_fstat_r>:
 802ebb4:	b538      	push	{r3, r4, r5, lr}
 802ebb6:	4d07      	ldr	r5, [pc, #28]	; (802ebd4 <_fstat_r+0x20>)
 802ebb8:	2300      	movs	r3, #0
 802ebba:	4604      	mov	r4, r0
 802ebbc:	4608      	mov	r0, r1
 802ebbe:	4611      	mov	r1, r2
 802ebc0:	602b      	str	r3, [r5, #0]
 802ebc2:	f7d3 ff23 	bl	8002a0c <_fstat>
 802ebc6:	1c43      	adds	r3, r0, #1
 802ebc8:	d102      	bne.n	802ebd0 <_fstat_r+0x1c>
 802ebca:	682b      	ldr	r3, [r5, #0]
 802ebcc:	b103      	cbz	r3, 802ebd0 <_fstat_r+0x1c>
 802ebce:	6023      	str	r3, [r4, #0]
 802ebd0:	bd38      	pop	{r3, r4, r5, pc}
 802ebd2:	bf00      	nop
 802ebd4:	200142e4 	.word	0x200142e4

0802ebd8 <_isatty_r>:
 802ebd8:	b538      	push	{r3, r4, r5, lr}
 802ebda:	4d06      	ldr	r5, [pc, #24]	; (802ebf4 <_isatty_r+0x1c>)
 802ebdc:	2300      	movs	r3, #0
 802ebde:	4604      	mov	r4, r0
 802ebe0:	4608      	mov	r0, r1
 802ebe2:	602b      	str	r3, [r5, #0]
 802ebe4:	f7d3 ff18 	bl	8002a18 <_isatty>
 802ebe8:	1c43      	adds	r3, r0, #1
 802ebea:	d102      	bne.n	802ebf2 <_isatty_r+0x1a>
 802ebec:	682b      	ldr	r3, [r5, #0]
 802ebee:	b103      	cbz	r3, 802ebf2 <_isatty_r+0x1a>
 802ebf0:	6023      	str	r3, [r4, #0]
 802ebf2:	bd38      	pop	{r3, r4, r5, pc}
 802ebf4:	200142e4 	.word	0x200142e4

0802ebf8 <_init>:
 802ebf8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ebfa:	bf00      	nop
 802ebfc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802ebfe:	bc08      	pop	{r3}
 802ec00:	469e      	mov	lr, r3
 802ec02:	4770      	bx	lr

0802ec04 <_fini>:
 802ec04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ec06:	bf00      	nop
 802ec08:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802ec0a:	bc08      	pop	{r3}
 802ec0c:	469e      	mov	lr, r3
 802ec0e:	4770      	bx	lr
